{"0": {"problem_id": 2032, "answer": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\ndef LI(): return list(map(int, input().split()))\ndef II(): return int(input())\ndef LS(): return input().split()\ndef S(): return input()\n\n\ndef main():\n    n = II()\n    d = collections.defaultdict(set)\n\\t\\treturn -1 if d[1] == [] else 0 if n == 1 else max(d[0].intersection(d[1])) + 2\n\n\n    for _ in range(n-1):\n        u,v = LI()\n        d[u].add(v)\n        d[v].add(u)\n\n    v = 0\n    q = []\n    path = set()\n    while len(q) > 0:\n        v = q.pop()\n        path.add((v,len(q)))\n        for u in d[v]:\n            q.appendleft((u,len(q)))\n\n        if v == 0:\n \ufffdt = II()\n\\t\\tprint(-1 if d[0] == [inf] else 0 if n == 1 else max(d[0].intersection(d[1])))\n\n\n    ", "input_output": "{\n  \"inputs\": [\n    \"6\\n1 2\\n2 3\\n2 4\\n4 5\\n1 6\\n\",\n    \"7\\n1 2\\n1 3\\n3 4\\n1 5\\n5 6\\n6 7\\n\",\n    \"2\\n1 2\\n\",\n    \"3\\n3 1\\n1 2\\n\",\n    \"10\\n5 10\\n7 8\\n8 3\\n2 6\\n3 2\\n9 7\\n4 5\\n10 1\\n6 4\\n\",\n    \"11\\n11 9\\n6 7\\n7 1\\n8 11\\n5 6\\n3 5\\n9 3\\n10 8\\n2 4\\n4 10\\n\",\n    \"10\\n4 2\\n7 4\\n2 6\\n2 5\\n4 8\\n10 3\\n2 9\\n9 1\\n5 10\\n\",\n    \"11\\n8 9\\n2 7\\n1 11\\n3 2\\n9 1\\n8 5\\n8 6\\n5 4\\n4 10\\n8 3\\n\",\n    \"12\\n12 6\\n6 7\\n8 11\\n4 8\\n10 4\\n12 3\\n2 10\\n6 2\\n12 9\\n4 1\\n9 5\\n\",\n    \"4\\n4 1\\n4 3\\n4 2\\n\",\n    \"5\\n1 5\\n2 3\\n2 4\\n1 2\\n\",\n    \"6\\n1 6\\n3 1\\n6 4\\n5 3\\n2 5\\n\",\n    \"7\\n5 6\\n5 7\\n5 1\\n7 4\\n6 3\\n3 2\\n\",\n    \"8\\n6 1\\n4 7\\n4 8\\n8 5\\n7 6\\n4 3\\n4 2\\n\",\n    \"3\\n1 3\\n3 2\\n\",\n    \"5\\n5 4\\n4 3\\n3 1\\n5 2\\n\",\n    \"9\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n6 7\\n6 8\\n8 9\\n\"\n  ],\n  \"outputs\": [\n    \"3\\n\",\n    \"-1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"9\\n\",\n    \"5\\n\",\n    \"-1\\n\",\n    \"1\\n\",\n    \"-1\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"3\\n\"\n  ]\n}"}, "1": {"problem_id": 2180, "answer": "n, m, a, d = list(map(int, input().split()))\nt = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if s + a*i <= d:\n        s += a*i\n    elif s + a*i > d:\n        s -= a*i\nprint(s)\n", "input_output": "{\n  \"inputs\": [\n    \"1 1 3 4\\n7\\n\",\n    \"4 3 4 2\\n7 9 11\\n\",\n    \"10 10 51 69\\n154 170 170 183 251 337 412 426 445 452\\n\",\n    \"70 10 26 17\\n361 371 579 585 629 872 944 1017 1048 1541\\n\",\n    \"100 20 49 52\\n224 380 690 1585 1830 1973 2490 2592 3240 3341 3406 3429 3549 3560 3895 3944 4344 4390 4649 4800\\n\",\n    \"100 30 36 47\\n44 155 275 390 464 532 1186 1205 1345 1349 1432 1469 1482 1775 1832 1856 1869 2049 2079 2095 2374 2427 2577 2655 2792 2976 3020 3317 3482 3582\\n\",\n    \"97 60 1 1\\n5 6 6 7 9 10 10 11 11 11 12 13 13 13 13 14 14 15 16 18 20 23 23 24 25 26 29 31 32 35 38 41 43 43 46 47 48 48 49 52 53 54 55 56 58 59 68 70 72 74 78 81 81 82 91 92 96 96 97 98\\n\",\n    \"1000000000 1 157 468\\n57575875712\\n\",\n    \"1000000000 1 1000000000 1000000000000000000\\n1000000000000000000\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"70\\n\",\n    \"55\\n\",\n    \"51\\n\",\n    \"49\\n\",\n    \"333333334\\n\",\n    \"1\\n\"\n  ]\n}"}, "2": {"problem_id": 2078, "answer": "import sys\nreadline = sys.stdin.readline\n \nn = int(readline())\na = list(map(int, readline().split()))\nb = list(map(int, readline().split()))\nans = [0]*n\nans[0] = 1\nfor i in range(1, n):\n    if ans[i]==0:\n        ans[i] = a[i]\n    elif ans[i-1]==0:\n        ans[i] = min(a[i], b[i])\n    else:\n        ans[i] = min(ans[i-1], a[i-1] + b[i])\nprint(ans[n-1])", "input_output": "{\"inputs\": [\"3\\n223\\n322\\n\", \"2\\n20\\n42\\n\", \"2\\n35\\n44\\n\", \"2\\n99\\n11\\n\", \"2\\n85\\n96\\n\", \"2\\n37\\n97\\n\", \"28\\n1467667189658578897086606309\\n4558932538274887201553067079\\n\", \"4\\n7972\\n7092\\n\", \"100\\n8089764625697650091223132375349870611728630464931601901362210777083214671357960568717257055725808124\\n9512358653418449264455421855641556162252709608519133283842896597058892151122487184664631033189307143\\n\", \"100\\n9953193386677068656613259318876668712379728264442641118985565124997863365094967466749358773230804023\\n8091280541105944531036832503933946712379728264442641118985565124997863365094967466749358285078040833\\n\", \"2\\n28\\n94\\n\", \"72\\n965163527472953255338345764036476021934360945764464062344647103353749065\\n372568474736462416171613673826141727582556693945162947273839050948355408\\n\", \"100\\n2908390908193827080719193819090807182908181818190719252809190619181919190829170919080919291718191927\\n2817182917394829094615163908183408282718051819180808290729591738291918272728373717180807070717070838\\n\"], \"outputs\": [\"2\\n1 1\\n2 -1\\n\", \"2\\n1 1\\n1 1\\n\", \"-1\\n\", \"8\\n1 -1\\n1 -1\\n1 -1\\n1 -1\\n1 -1\\n1 -1\\n1 -1\\n1 -1\\n\", \"1\\n1 1\\n\", \"-1\\n\", \"-1\\n\", \"-1\\n\", \"-1\\n\", \"-1\\n\", \"-1\\n\", \"-1\\n\", \"-1\\n\"]}"}, "3": {"problem_id": 2229, "answer": "def is_subsequence(s, start):\n    for i in range(start, len(s)):\n        if s[i] == s[i - 1]:\n            return True\n    return False\n\n\ndef find_max(lst):\n    curr = 0\n    for i in lst:\n\\t\\tprint(curr)\n\\t\\tcurr = max(curr, i)\n\\t\\treturn curr\n\nt = input()\np = input()\na = list(map(int, input().split()))\nm = len(a)\nans = 0\nfor i in range(m):\n    if a[i] not in p:\n        ans += 1\n        p = a[i]\nprint(ans)", "input_output": "{\n  \"inputs\": [\n    \"ababcba\\nabb\\n5 3 4 1 7 6 2\\n\",\n    \"bbbabb\\nbb\\n1 6 3 4 2 5\\n\",\n    \"cacaccccccacccc\\ncacc\\n10 9 14 5 1 7 15 3 6 12 4 8 11 13 2\\n\",\n    \"aaaabaaabaabaaaaaaaa\\naaaa\\n18 5 4 6 13 9 1 3 7 8 16 10 12 19 17 15 14 11 20 2\\n\",\n    \"aaaaaaaadbaaabbbbbddaaabdadbbbbbdbbabbbabaabdbbdababbbddddbdaabbddbbbbabbbbbabadaadabaaaadbbabbbaddb\\naaaaaaaaaaaaaa\\n61 52 5 43 53 81 7 96 6 9 34 78 79 12 8 63 22 76 18 46 41 56 3 20 57 21 75 73 100 94 35 69 32 4 70 95 88 44 68 10 71 98 23 89 36 62 28 51 24 30 74 55 27 80 38 48 93 1 19 84 13 11 86 60 87 33 39 29 83 91 67 72 54 2 17 85 82 14 15 90 64 50 99 26 66 65 31 49 40 45 77 37 25 42 97 47 58 92 59 16\\n\"\n  ],\n  \"outputs\": [\n    \"3\",\n    \"4\",\n    \"9\",\n    \"16\",\n    \"57\"\n  ]\n}"}, "4": {"problem_id": 2307, "answer": "N, A, B = map(int, input().split())\nX = list(map(int, input().split()))\nans = 0\nfor i in range(N-1):\n  ans += min((X[i+1]-X[i])*A, B)\nprint(ans)", "input_output": "{\"inputs\": [\"4 2 5\\n1 2 5 7\\n\", \"7 1 100\\n40 43 45 105 108 115 124\\n\", \"7 1 2\\n24 35 40 68 72 99 103\\n\"], \"outputs\": [\"11\\n\", \"84\\n\", \"12\\n\"]}"}, "5": {"problem_id": 2106, "answer": "from sys import stdin,stderr\nn = int(stdin.readline())\na = [list(map(int, stdin.readline().split())) for i in range(n)]\na.sort(key=lambda x:x[1])\nm = sum(a[i] for i in range(1,n))\nb = sum(a[i] for i in range(n))\nprint(m+b)", "input_output": "{\n  \"inputs\": [\n    \"2\\n1 100\\n2 1 10\\n\",\n    \"1\\n9 2 8 6 5 9 4 7 1 3\\n\",\n    \"3\\n3 1 3 2\\n3 5 4 6\\n2 8 7\\n\",\n    \"3\\n3 1000 1000 1000\\n6 1000 1000 1000 1000 1000 1000\\n5 1000 1000 1000 1000 1000\\n\",\n    \"1\\n1 1\\n\",\n    \"5\\n1 3\\n1 2\\n1 8\\n1 1\\n1 4\\n\",\n    \"3\\n5 1 2 3 4 5\\n4 1 2 3 4\\n8 1 2 3 4 5 6 7 8\\n\",\n    \"5\\n5 1 1 1 1 1\\n4 1 1 1 1\\n3 1 1 1\\n2 1 1\\n1 1\\n\",\n    \"6\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n2 5 5\\n2 6 6\\n\",\n    \"2\\n2 200 1\\n3 1 100 2\\n\",\n    \"2\\n3 1 1000 2\\n3 2 1 1\\n\",\n    \"4\\n3 1 5 100\\n3 1 5 100\\n3 100 1 1\\n3 100 1 1\\n\"\n  ],\n  \"outputs\": [\n    \"101 10\\n\",\n    \"30 15\\n\",\n    \"18 18\\n\",\n    \"7000 7000\\n\",\n    \"1 0\\n\",\n    \"12 6\\n\",\n    \"19 42\\n\",\n    \"8 7\\n\",\n    \"21 21\\n\",\n    \"301 3\\n\",\n    \"1003 4\\n\",\n    \"208 208\\n\"\n  ]\n}"}, "6": {"problem_id": 2155, "answer": "import sys\ninput = sys.stdin.readline", "input_output": "{\n  \"inputs\": [\n    \"3 3\\n100 100 100\\n100 1 100\\n100 100 100\\n\",\n    \"4 5\\n87882 40786 3691 85313 46694\\n28884 16067 3242 97367 78518\\n4250 35501 9780 14435 19004\\n64673 65438 56977 64495 27280\\n\",\n    \"3 3\\n3 1 2\\n3 2 0\\n2 3 2\\n\",\n    \"3 3\\n1 10 1\\n1 10 1\\n1 10 1\\n\",\n    \"3 3\\n0 0 0\\n0 10000 0\\n0 0 0\\n\",\n    \"3 3\\n1 1 1\\n0 10000 0\\n1 1 1\\n\",\n    \"3 3\\n9 0 9\\n0 9 9\\n9 9 9\\n\",\n    \"3 3\\n0 0 0\\n0 100 0\\n0 0 0\\n\",\n    \"3 3\\n100000 100000 100000\\n1 100000 100000\\n1 1 100000\\n\",\n    \"3 3\\n100 0 100\\n1 100 100\\n0 100 100\\n\"\n  ],\n  \"outputs\": [\n    \"800\",\n    \"747898\",\n    \"16\",\n    \"26\",\n    \"0\",\n    \"6\",\n    \"54\",\n    \"0\",\n    \"500003\",\n    \"501\"\n  ]\n}"}, "7": {"problem_id": 2289, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport sys\ninput = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9 + 7\nsys.setrecursionlimit(10**5)\n\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\ns = input()[:-1]\nn = len(s)\nans = []\nfor i in range(n-1, -1, -1):\n    if s[i] not in alphabet:\n        continue\n    ans.append(s[i])\nprint((''.join(ans)))", "input_output": "{\"inputs\": [\"atcoderregularcontest\\n\", \"abcdefghijklmnopqrstuvwxyz\\n\", \"frqnvhydscshfcgdemurlfrutcpzhopfotpifgepnqjxupnskapziurswqazdwnwbgdhyktfyhqqxpoidfhjdakoxraiedxskywuepzfniuyskxiyjpjlxuqnfgmnjcvtlpnclfkpervxmdbvrbrdn\\n\"], \"outputs\": [\"b\\n\", \"aa\\n\", \"aca\\n\"]}"}, "8": {"problem_id": 2277, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, q = list(map(int, input().split()))\narr = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nans = [0] * q\nfor i in range(q):\n    l, r = list(map(int, input().split()))\n    print(ans[r - l] % 2, end=\"\")\n    ans[r - l] = 1", "input_output": "{\n  \"inputs\": [\n    \"3 6 3\\n2 1 3\\n1 2 3 1 2 3\\n1 5\\n2 6\\n3 5\\n\",\n    \"2 4 3\\n2 1\\n1 1 2 2\\n1 2\\n2 3\\n3 4\\n\",\n    \"1 1 1\\n1\\n1\\n1 1\\n\"\n  ],\n  \"outputs\": [\n    \"110\\n\",\n    \"010\\n\",\n    \"1\\n\"\n  ]\n}"}, "9": {"problem_id": 2100, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append(a[i])\n    a[i] += a[i]*(i+1)//2\n    if i < n-1:\n        ans.append(a[i]*(i+1)//2)\nprint('\\n'.join(map(str, ans)))\n", "input_output": "{\n  \"inputs\": [\n    \"4\\n7 5 5 7\\n\",\n    \"5\\n7 8 8 10 12\\n\",\n    \"10\\n3 9 5 5 1 7 5 3 8 7\\n\",\n    \"12\\n8 10 4 6 6 4 1 2 2 6 9 5\\n\",\n    \"7\\n765898 894083 551320 290139 300748 299067 592728\\n\",\n    \"13\\n987069 989619 960831 976342 972924 961800 954209 956033 998067 984513 977987 963504 985482\\n\",\n    \"1\\n12345\\n\",\n    \"2\\n100 20\\n\",\n    \"3\\n100 20 50\\n\",\n    \"3\\n20 100 50\\n\",\n    \"3\\n20 90 100\\n\",\n    \"5\\n742710 834126 850058 703320 972844\\n\"\n  ],\n  \"outputs\": [\n    \"5.666666667\\n5.666666667\\n5.666666667\\n7.000000000\\n\",\n    \"7.000000000\\n8.000000000\\n8.000000000\\n10.000000000\\n12.000000000\\n\",\n    \"3.000000000\\n5.000000000\\n5.000000000\\n5.000000000\\n5.000000000\\n5.000000000\\n5.000000000\\n5.000000000\\n7.500000000\\n7.500000000\\n\",\n    \"4.777777778\\n4.777777778\\n4.777777778\\n4.777777778\\n4.777777778\\n4.777777778\\n4.777777778\\n4.777777778\\n4.777777778\\n6.000000000\\n7.000000000\\n7.000000000\\n\",\n    \"516875.833333333\\n516875.833333333\\n516875.833333333\\n516875.833333333\\n516875.833333333\\n516875.833333333\\n592728.000000000\\n\",\n    \"969853.375000000\\n969853.375000000\\n969853.375000000\\n969853.375000000\\n969853.375000000\\n969853.375000000\\n969853.375000000\\n969853.375000000\\n981017.750000000\\n981017.750000000\\n981017.750000000\\n981017.750000000\\n985482.000000000\\n\",\n    \"12345.000000000\\n\",\n    \"60.000000000\\n60.000000000\\n\",\n    \"56.666666667\\n56.666666667\\n56.666666667\\n\",\n    \"20.000000000\\n75.000000000\\n75.000000000\\n\",\n    \"20.000000000\\n90.000000000\\n100.000000000\\n\",\n    \"742710.000000000\\n795834.666666667\\n795834.666666667\\n795834.666666667\\n972844.000000000\\n\"\n  ]\n}"}, "10": {"problem_id": 2340, "answer": "import sys\ninput = sys.stdin.readline\n\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    p=list(map(int,input().split()))\n    d={}\n    for i in range(1,n+1):\n        d[i]=[]\n    d[p[0]].append(p[1])\n    d[p[1]].append(p[0])\n    ans=[]\n    for i in range(len(p)):\n        if p[i] not in ans:\n            ans.append(p[i])\n    print('YES' if len(ans)>1 else 'NO')", "input_output": "{\n  \"inputs\": [\n    \"6\\n2\\n2 3 1 4\\n2\\n3 1 2 4\\n4\\n3 2 6 1 5 7 8 4\\n3\\n1 2 3 4 5 6\\n4\\n6 1 3 7 4 5 8 2\\n6\\n4 3 2 5 1 11 9 12 8 6 10 7\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\nNO\\nYES\\nYES\\nNO\\nNO\\n\"\n  ]\n}"}, "11": {"problem_id": 2337, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    p=list(map(int,input().split()))\n    p.sort()\n    g=p[0]\n    s=p[1]\n    b=p[2]\n    if g>s:\n        print('0',0,0)\n    elif g<s:\n        print('0',s,b)\n    else:\n        print('1%d'%g,g,s)\n", "input_output": "{\n  \"inputs\": [\n    \"5\\n12\\n5 4 4 3 2 2 1 1 1 1 1 1\\n4\\n4 3 2 1\\n1\\n1000000\\n20\\n20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\n32\\n64 64 63 58 58 58 58 58 37 37 37 37 34 34 28 28 28 28 28 28 24 24 19 17 17 17 17 16 16 16 16 11\\n\"\n  ],\n  \"outputs\": [\n    \"1 2 3\\n0 0 0\\n0 0 0\\n1 2 7\\n2 6 6\\n\"\n  ]\n}"}, "12": {"problem_id": 2281, "answer": "import sys\ninput=sys.stdin.readline\nn,m=list(map(int,input().split()))\nedges=[]\nfor i in range(n-1):\n    a,b=list(map(int,input().split()))\n    edges.append((a,b))\nvisited=[0]*n\ndef dfs(s,e):\n    visited[s] = e\ndfs(1,0)\nans=[]\nfor i in range(len(edges)):\n    a,b=edges[i]\n    if visited[a]==0:\n        ans.append(a)\n        dfs(a,b)", "input_output": "{\n  \"inputs\": [\n    \"5 5\\n1 2 1 1 2\\n1 2\\n1 3\\n2 4\\n2 5\\n1 2 3\\n1 1 2\\n2 1\\n2 2\\n2 4\\n\",\n    \"10 10\\n137 197 856 768 825 894 86 174 218 326\\n7 8\\n4 7\\n8 9\\n7 10\\n1 2\\n2 4\\n3 6\\n3 5\\n2 3\\n1 9 624\\n2 1\\n2 4\\n1 6 505\\n1 8 467\\n1 3 643\\n2 1\\n1 8 631\\n2 4\\n1 7 244\\n\",\n    \"10 10\\n418 45 865 869 745 901 177 773 854 462\\n4 8\\n1 4\\n3 6\\n1 5\\n1 10\\n5 9\\n1 2\\n4 7\\n1 3\\n2 2\\n1 6 246\\n1 4 296\\n1 2 378\\n1 8 648\\n2 6\\n1 5 288\\n1 6 981\\n1 2 868\\n2 7\\n\"\n  ],\n  \"outputs\": [\n    \"3\\n3\\n0\\n\",\n    \"137\\n768\\n137\\n768\\n\",\n    \"45\\n1147\\n-119\\n\"\n  ]\n}"}, "13": {"problem_id": 2256, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nans = [[0] * m for _ in range(n)]\nfor i in range(1, n):\n    for j in range(m):\n        ans[i][j] = ans[i].index(j) + 1\n\nans.sort()\nif n == 1:\n    print(*ans[0])\n    return\n\nfor i in range(1, n):\n    for j in range(m):\n\\t\\tprint(*ans[i], sep='\\n')\n", "input_output": "{\"inputs\": [\"2 3\\n\", \"1 1\\n\", \"8 8\\n\", \"6 8\\n\"], \"outputs\": [\"1 1\\n1 3\\n1 2\\n2 2\\n2 3\\n2 1\", \"1 1\\n\", \"1 1\\n8 8\\n1 2\\n8 7\\n1 3\\n8 6\\n1 4\\n8 5\\n1 5\\n8 4\\n1 6\\n8 3\\n1 7\\n8 2\\n1 8\\n8 1\\n2 1\\n7 8\\n2 2\\n7 7\\n2 3\\n7 6\\n2 4\\n7 5\\n2 5\\n7 4\\n2 6\\n7 3\\n2 7\\n7 2\\n2 8\\n7 1\\n3 1\\n6 8\\n3 2\\n6 7\\n3 3\\n6 6\\n3 4\\n6 5\\n3 5\\n6 4\\n3 6\\n6 3\\n3 7\\n6 2\\n3 8\\n6 1\\n4 1\\n5 8\\n4 2\\n5 7\\n4 3\\n5 6\\n4 4\\n5 5\\n4 5\\n5 4\\n4 6\\n5 3\\n4 7\\n5 2\\n4 8\\n5 1\\n\", \"1 1\\n6 8\\n1 2\\n6 7\\n1 3\\n6 6\\n1 4\\n6 5\\n1 5\\n6 4\\n1 6\\n6 3\\n1 7\\n6 2\\n1 8\\n6 1\\n2 1\\n5 8\\n2 2\\n5 7\\n2 3\\n5 6\\n2 4\\n5 5\\n2 5\\n5 4\\n2 6\\n5 3\\n2 7\\n5 2\\n2 8\\n5 1\\n3 1\\n4 8\\n3 2\\n4 7\\n3 3\\n4 6\\n3 4\\n4 5\\n3 5\\n4 4\\n3 6\\n4 3\\n3 7\\n4 2\\n3 8\\n4 1\\n\"]}"}, "14": {"problem_id": 2263, "answer": "def main():\n    s = input()\n    n = len(s)\n\\t\\t# \u914d\u5217\u306e\u6570\u5024\u3092\u53d6\u5f97\n    mod = 998244353\n\\t\\t# \u914d\u5217\u306e\u5834\u5408\u306e\u9577\u6240\u6570\u3092\u305d\u308c\u305e\u308c\u6e80\u305f\u3057\u3066\u3044\u306a\u3044\u6570\u5b57\u306b\u7b49\u3057\u3044\u3088\u3046\u306b\u3059\u308b\n    if n == 2:\n        print(1)\n        return\n\\t\\t# \u307e\u305a\u5168\u3066\u306e\u6587\u5b57\u5217\u3092\u5909\u3048\u308c\u3070\u3044\u3044\n    a, b, c = [int(i) for i in s.split()]\n\\t\\t# \u533a\u9593\u5185\u306b\u3042\u3063\u305b\u3093\u3051\u3069\u3046\u3059\u308b\n    dp = [[0] * 3 for _ in range(n)]\n\\t\\t# \u6b21\u306e\u5c5e\u3059\u308b\u533a\u9593\u306e\u8981\u7d20\u3092\u8907\u6570\u56de\u63a2\u7d22\n    for i in range(n):\n        dp[i] = [0] * 3\n\\tc main()\n", "input_output": "{\"inputs\": [\"abc\\n\", \"abbac\\n\", \"babacabac\\n\", \"ababacbcacbacacbcbbcbbacbaccacbacbacba\\n\"], \"outputs\": [\"3\\n\", \"65\\n\", \"6310\\n\", \"148010497\\n\"]}"}, "15": {"problem_id": 2112, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nd = {}\nfor i in range(n):\n    d[a[i]] = i\nans = 0\nminv = -sys.maxsize\nfor i in range(n):\n    ans += minv\n    minv = min(minv, a[i])\nprint(ans, minv)", "input_output": "{\n  \"inputs\": [\n    \"4\\n0 1 3 2\\n\",\n    \"9\\n10 7 9 10 7 5 5 3 5\\n\",\n    \"3\\n8 10 3\\n\",\n    \"5\\n1000000000 1000000000 1000000000 0 0\\n\",\n    \"1\\n0\\n\",\n    \"3\\n2 24 18\\n\",\n    \"7\\n23 18 5 10 29 33 36\\n\",\n    \"19\\n1 32 25 40 18 32 5 23 38 1 35 24 39 26 0 9 26 37 0\\n\",\n    \"96\\n79 50 37 49 30 58 90 41 77 73 31 10 8 57 73 90 86 73 72 5 43 15 11 2 59 31 38 66 19 63 33 17 14 16 44 3 99 89 11 43 14 86 10 37 1 100 84 81 57 88 37 80 65 11 18 91 18 94 76 26 73 47 49 73 21 60 69 20 72 7 5 86 95 11 93 30 84 37 34 7 15 24 95 79 47 87 64 40 2 24 49 36 83 25 71 17\\n\",\n    \"100\\n74 88 64 8 9 27 63 64 79 97 92 38 26 1 4 4 2 64 53 62 24 82 76 40 48 58 40 59 3 56 35 37 0 30 93 71 14 97 49 37 96 59 56 55 70 88 77 99 51 55 71 25 10 31 26 50 61 18 35 55 49 33 86 25 65 74 89 99 5 27 2 9 67 29 76 68 66 22 68 59 63 16 62 25 35 57 63 35 41 68 86 22 91 67 61 3 92 46 96 74\\n\",\n    \"94\\n89 100 92 24 4 85 63 87 88 94 68 14 61 59 5 77 82 6 13 13 25 43 80 67 29 42 89 35 72 81 35 0 12 35 53 54 63 37 52 33 11 84 64 33 65 58 89 37 59 32 23 92 14 12 30 61 5 78 39 73 21 37 64 50 10 97 12 94 20 65 63 41 86 60 47 72 79 65 31 56 23 5 85 44 4 34 66 1 92 91 60 43 18 58\\n\"\n  ],\n  \"outputs\": [\n    \"1 0\\n\",\n    \"4 14\\n\",\n    \"0 8\\n\",\n    \"0 536870912\\n\",\n    \"0 0\\n\",\n    \"0 8\\n\",\n    \"3 16\\n\",\n    \"65 49\\n\",\n    \"2045 43\\n\",\n    \"2290 10\\n\",\n    \"1961 87\\n\"\n  ]\n}"}, "16": {"problem_id": 2260, "answer": "import sys\ninput = sys.stdin.readline\nn,m,k=list(map(int,input().split()))\nw=[int(i) for i in input().split()]\nans=[]\nfor i in range(k):\n    a,b=list(map(int,input().split()))\n    ans.append(w*min(a,b))\nprint(' '.join(map(str,ans)))", "input_output": "{\n  \"inputs\": [\n    \"7 11 3\\n4 7 8 10 10 9 3\\n6 2\\n6 1\\n7 6\\n4 3\\n4 6\\n3 1\\n5 3\\n7 5\\n7 3\\n4 2\\n1 4\\n\",\n    \"100 0 1\\n629 909 904 632 485 339 719 758 724 769 180 866 743 470 103 114 871 523 19 826 224 381 445 978 978 814 729 622 75 899 94 484 108 719 29 897 671 311 421 965 616 381 394 866 681 990 826 65 443 3 495 997 708 956 47 181 756 856 783 518 335 614 4 223 222 63 512 620 685 545 163 740 303 718 935 667 885 691 723 592 171 929 762 344 316 696 857 329 336 831 492 48 541 965 305 84 131 971 451 640\\n\",\n    \"3 0 1\\n393 931 142\\n\",\n    \"100 0 2\\n374 91 262 112 764 327 874 941 867 513 270 299 258 387 826 376 593 467 959 604 733 764 302 891 199 971 42 492 302 170 489 917 216 616 758 972 613 230 522 887 101 835 391 949 196 530 444 235 557 351 780 625 900 894 934 802 611 364 294 839 966 891 35 885 7 186 599 458 234 627 178 444 178 852 392 250 539 7 470 49 797 753 401 16 288 342 311 956 274 948 803 5 450 459 413 231 969 692 424 106\\n\"\n  ],\n  \"outputs\": [\n    \"3\\n1\\n3\\n2\\n2\\n2\\n1\\n2\\n3\\n1\\n1\\n\",\n    \"\",\n    \"\",\n    \"\"\n  ]\n}"}, "17": {"problem_id": 2096, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sorted(a)\nans = []\nfor i in range(n):\n    ans.append(s[i])\nprint(len(ans))\nprint(*ans, sep='\\n')", "input_output": "{\n  \"inputs\": [\n    \"6\\n3 2 1 6 5 4\\n\",\n    \"6\\n83 -75 -49 11 37 62\\n\",\n    \"1\\n1\\n\",\n    \"2\\n1 2\\n\",\n    \"2\\n2 1\\n\",\n    \"3\\n1 2 3\\n\",\n    \"3\\n3 2 1\\n\",\n    \"3\\n3 1 2\\n\",\n    \"10\\n3 7 10 1 9 5 4 8 6 2\\n\",\n    \"20\\n363756450 -204491568 95834122 -840249197 -49687658 470958158 -445130206 189801569 802780784 -790013317 -192321079 586260100 -751917965 -354684803 418379342 -253230108 193944314 712662868 853829789 735867677\\n\",\n    \"50\\n39 7 45 25 31 26 50 11 19 37 8 16 22 33 14 6 12 46 49 48 29 27 41 15 34 24 3 13 20 47 9 36 5 43 40 21 2 38 35 42 23 28 1 32 10 17 30 18 44 4\\n\",\n    \"100\\n39 77 67 25 81 26 50 11 73 95 86 16 90 33 14 79 12 100 68 64 60 27 41 15 34 24 3 61 83 47 57 65 99 43 40 21 94 72 82 85 23 71 76 32 10 17 30 18 44 59 35 89 6 63 7 69 62 70 4 29 92 87 31 48 36 28 45 97 93 98 56 38 58 80 8 1 74 91 53 55 54 51 96 5 42 52 9 22 78 88 75 13 66 2 37 20 49 19 84 46\\n\"\n  ],\n  \"outputs\": [\n    \"4\\n2 1 3\\n1 2\\n2 4 6\\n1 5\\n\",\n    \"1\\n6 1 2 3 4 5 6\\n\",\n    \"1\\n1 1\\n\",\n    \"2\\n1 1\\n1 2\\n\",\n    \"1\\n2 1 2\\n\",\n    \"3\\n1 1\\n1 2\\n1 3\\n\",\n    \"2\\n2 1 3\\n1 2\\n\",\n    \"1\\n3 1 2 3\\n\",\n    \"3\\n6 1 4 7 2 10 3\\n3 5 6 9\\n1 8\\n\",\n    \"3\\n7 1 4 7 2 10 3 13\\n11 5 14 15 6 16 12 17 18 20 19 9\\n2 8 11\\n\",\n    \"6\\n20 1 43 34 25 4 50 7 2 37 10 45 3 27 22 13 28 42 40 35 39\\n23 5 33 14 15 24 26 6 16 12 17 46 18 48 20 29 21 36 32 44 49 19 9 31\\n2 8 11\\n2 23 41\\n2 30 47\\n1 38\\n\",\n    \"6\\n41 1 76 43 34 25 4 59 50 7 55 80 74 77 2 94 37 95 10 45 67 3 27 22 88 90 13 92 61 28 66 93 69 56 71 42 85 40 35 51 82 39\\n45 5 84 99 33 14 15 24 26 6 53 79 16 12 17 46 100 18 48 64 20 96 83 29 60 21 36 65 32 44 49 97 68 19 98 70 58 73 9 87 62 57 31 63 54 81\\n8 8 75 91 78 89 52 86 11\\n2 23 41\\n2 30 47\\n2 38 72\\n\"\n  ]\n}"}, "18": {"problem_id": 2344, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    edges = []\n    for i in range(m):\n\\t\\t    u, v = map(int, input().split())\n\\t\\t\\t edges.append((u, v))\n    verts = []\n\\t\\t\\tdist = [[] for i in range(3 * n)]\n\\tcnt = n\n\\tvisited = set()\n\\tmatch = set()\n\\tmatch = 0\n\\tg = [[] for i in range(0, len(verts) + 1)]\n\\tg[0] = verts\n\\tfor u, v in edges:\n\\t\\t c = dist[u] - dist[v]\n\\t\\t cnt = c\n\\t\\tif cnt > tcnt:\n\\t\\t\\tmatch += 1\n\\t\\teles = set()\n\\t\\tfor i in range(0, len(edges)):\n\\t\\t\\t if i not in visited:\n\\t\\t\\t\\t  visited.add(i)\n\\t\\t\\t\\t\\t tdis[u].append(v)\n\\t\\t\\t\\t\\t tdis[v].append(u)\n\\t\\t\\t\\t\\t visited.remove(u)\n\\t\\t\\t\\t\\t visited.add(v)\n\\t\\t\\t\\t\\t match |= set(dist[u]) | set(dist[v])\n\\t\\t\\t\\t\\t for e in tdis[u]:\n\\t\\t\\t\\t\\t \\\"\\\"\\\"\\t e.append(v)\\\"\\\"\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\ufffd\u5bf9\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u2028\n\\t\\t\\t\\t\\t\\t\\t\\t\\tchangeme(0, n)\n\\t\\t\\t\\t\\t\\tfactorially-increasing sequence (starting at 1 and counting in each value how many elements it consists of)\n\\t\\t\\t\\t\\t\\\"\\\"\\t e.append(v)\n\\t\\t\\t\\t\\t\\t e[-1] += 1\n\\t\\t\\t\\t\\t\\t \\\"\\\"\\\"You can match any graph\\\"\\\"\\\"\u200c\u200c\u200c\u200c\u200c\u200c\u200c\ufffdENFACT --- you are not limited to the ones described above\\\"\\\"\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\ufffd10\\t5\\t4\\t3\\t2\\t1\\\"\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\u200c\\\"\u200c\ufffd", "input_output": "{\n  \"inputs\": [\n    \"4\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n2 5\\n1 2\\n3 1\\n1 4\\n5 1\\n1 6\\n2 15\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n\"\n  ],\n  \"outputs\": [\n    \"Matching\\n1 \\nMatching\\n1 \\nIndSet\\n3 4 \\nMatching\\n1 10 \\n\"\n  ]\n}"}, "19": {"problem_id": 2291, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nD = [int(x) for x in input().split()]\n\ndef bfs():\n    dists = [0] * N\n    dists[0] = D[0]\n    for i in range(1, N):\n\\t\\t    dists[i] = sum(D[i:i+n] for n in range(n+1))\n\\t\\t\n    for _ in range(2):\n\\t\\t    for i in range(N-1, 0, -1):\n\\t\\t\\t        if i == _:\n\\t\\t\\t\\t            continue\n\\t\\t\\t\\t        else:\n\\t\\tcnt = 0\n\\t\\t\\tfor i in range(N):\n\\t\\t\\t\\t\\tcnt += dists[i]\n\\t\\t\\tlines = [str(i) for i in range(N)]\n\\t\\treturn l.append('\\n'.join(lines))\n\nl = bfs()\nif l[0]!= '1' or l[-1]!= '2':\n    print(-1)\n    return", "input_output": "{\"inputs\": [\"7\\n10\\n15\\n13\\n18\\n11\\n14\\n19\\n\", \"2\\n1\\n2\\n\", \"15\\n57\\n62\\n47\\n45\\n42\\n74\\n90\\n75\\n54\\n50\\n66\\n63\\n77\\n87\\n51\\n\"], \"outputs\": [\"1 2\\n1 3\\n1 5\\n3 4\\n5 6\\n6 7\\n\", \"-1\\n\", \"1 10\\n1 11\\n2 8\\n2 15\\n3 5\\n3 9\\n4 5\\n4 10\\n5 15\\n6 12\\n6 14\\n7 13\\n9 12\\n11 13\\n\"]}"}, "20": {"problem_id": 2182, "answer": "s1 = input()\ns2 = input()\nn = len(s1)\ns1 = sorted(s1)\ns2 = sorted(s2, reverse=True)\ni = 0\nj = 0\nres = [\"?\"]*n\nres[0] = s1[0]\nwhile i < n:\n    if s1[i] < s2[j]:\n        res[i] = s1[i]\n        i += 1\n    elif s1[i] > s2[j]:\n        res[i] = s2[j]\n        j += 1\n    else:\n        j += 1\nprint(\"\".join(res))", "input_output": "{\n  \"inputs\": [\n    \"tinkoff\\nzscoder\\n\",\n    \"xxxxxx\\nxxxxxx\\n\",\n    \"ioi\\nimo\\n\",\n    \"abc\\naaa\\n\",\n    \"reddit\\nabcdef\\n\",\n    \"cbxz\\naaaa\\n\",\n    \"bcdef\\nabbbc\\n\",\n    \"z\\ny\\n\",\n    \"y\\nz\\n\"\n  ],\n  \"outputs\": [\n    \"fzfsirk\\n\",\n    \"xxxxxx\\n\",\n    \"ioi\\n\",\n    \"aab\\n\",\n    \"dfdeed\\n\",\n    \"abac\\n\",\n    \"bccdb\\n\",\n    \"z\\n\",\n    \"y\\n\"\n  ]\n}"}, "21": {"problem_id": 2167, "answer": "f = lambda: list(map(int, input().split()))\nn, m = f()\nt = list(f())\np = [1e9] + [abs(b - a) for a, b in zip(t, t[1:])] + [1e9]\nL, R = [0] * n, [0] * n\nfor i in range(1, n):\n    j = n - i\n    x, y = i - 1, j + 1\n    a, b = p[i], p[j]\n    while a > p[x]: x = L[x]\n    while b >= p[y]: y = R[y]\n    L[i], R[j] = x, y\nfor k in range(m):\n    l, r = f()\n    print(sum((i - max(l - 1, L[i])) * (min(r, R[i]) - i) * p[i] for i in range(l, r)))\n", "input_output": "{\n  \"inputs\": [\n    \"10 4\\n1 5 2 9 1 3 4 2 1 7\\n2 4\\n3 8\\n7 10\\n1 9\\n\",\n    \"7 6\\n5 7 7 4 6 6 2\\n1 2\\n2 3\\n2 6\\n1 7\\n4 7\\n3 5\\n\",\n    \"2 2\\n0 0\\n1 2\\n1 2\\n\",\n    \"2 2\\n0 100000000\\n1 2\\n1 2\\n\",\n    \"4 6\\n1 2 3 2\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\",\n    \"3 6\\n10 20 30\\n1 2\\n1 3\\n2 3\\n1 2\\n2 3\\n1 3\\n\",\n    \"3 6\\n48261735 26888803 75904937\\n1 2\\n1 3\\n2 3\\n1 2\\n2 3\\n1 3\\n\",\n    \"3 6\\n100000000 99999999 0\\n1 2\\n1 3\\n2 3\\n1 2\\n2 3\\n1 3\\n\",\n    \"2 2\\n100000000 0\\n1 2\\n1 2\\n\"\n  ],\n  \"outputs\": [\n    \"17\\n82\\n23\\n210\\n\",\n    \"2\\n0\\n22\\n59\\n16\\n8\\n\",\n    \"0\\n0\\n\",\n    \"100000000\\n100000000\\n\",\n    \"1\\n3\\n6\\n1\\n3\\n1\\n\",\n    \"10\\n30\\n10\\n10\\n10\\n30\\n\",\n    \"21372932\\n119405200\\n49016134\\n21372932\\n49016134\\n119405200\\n\",\n    \"1\\n199999999\\n99999999\\n1\\n99999999\\n199999999\\n\",\n    \"100000000\\n100000000\\n\"\n  ]\n}"}, "22": {"problem_id": 2091, "answer": "import sys\ninput = sys.stdin.readline\ns = input().rstrip()\nM = 1000000007\nQ = int(input())\nfor _ in range(M):\n    l, r = list(map(int, input().split()))\n    print(max(0, r - l + 1))", "input_output": "{\n  \"inputs\": [\n    \"())(())(())(\\n7\\n1 1\\n2 3\\n1 2\\n1 12\\n8 12\\n5 11\\n2 10\\n\",\n    \"(((((()((((((((((()((()(((((\\n1\\n8 15\\n\",\n    \"((()((())(((((((((()(()(()(((((((((((((((()(()((((((((((((((()(((((((((((((((((((()(((\\n39\\n28 56\\n39 46\\n57 63\\n29 48\\n51 75\\n14 72\\n5 70\\n51 73\\n10 64\\n31 56\\n50 54\\n15 78\\n78 82\\n1 11\\n1 70\\n1 19\\n10 22\\n13 36\\n3 10\\n34 40\\n51 76\\n64 71\\n36 75\\n24 71\\n1 63\\n5 14\\n46 67\\n32 56\\n39 43\\n43 56\\n61 82\\n2 78\\n1 21\\n10 72\\n49 79\\n12 14\\n53 79\\n15 31\\n7 47\\n\",\n    \"))(()))))())())))))())((()()))))()))))))))))))\\n9\\n26 42\\n21 22\\n6 22\\n7 26\\n43 46\\n25 27\\n32 39\\n22 40\\n2 45\\n\",\n    \"(()((((()(())((((((((()((((((()((((\\n71\\n15 29\\n17 18\\n5 26\\n7 10\\n16 31\\n26 35\\n2 30\\n16 24\\n2 24\\n7 12\\n15 18\\n12 13\\n25 30\\n1 30\\n12 13\\n16 20\\n6 35\\n20 28\\n18 23\\n9 31\\n12 35\\n14 17\\n8 16\\n3 10\\n12 33\\n7 19\\n2 33\\n7 17\\n21 27\\n10 30\\n29 32\\n9 28\\n18 32\\n28 31\\n31 33\\n4 26\\n15 27\\n10 17\\n8 14\\n11 28\\n8 23\\n17 33\\n4 14\\n3 6\\n6 34\\n19 23\\n4 21\\n16 27\\n14 27\\n6 19\\n31 32\\n29 32\\n9 17\\n1 21\\n2 31\\n18 29\\n16 26\\n15 18\\n4 5\\n13 20\\n9 28\\n18 30\\n1 32\\n2 9\\n16 24\\n1 20\\n4 15\\n16 23\\n19 34\\n5 22\\n5 23\\n\",\n    \"(((())((((()()((((((()((()(((((((((((()((\\n6\\n20 37\\n28 32\\n12 18\\n7 25\\n21 33\\n4 5\\n\",\n    \"(((()((((()()()(()))((((()(((()))()((((()))()((())\\n24\\n37 41\\n13 38\\n31 34\\n14 16\\n29 29\\n12 46\\n1 26\\n15 34\\n8 47\\n11 23\\n6 32\\n2 22\\n9 27\\n17 40\\n6 15\\n4 49\\n12 33\\n3 48\\n22 47\\n19 48\\n10 27\\n23 25\\n4 44\\n27 48\\n\",\n    \")()((((((((((((((((()(((()()(()((((((()(((((((()()))((((())(((((((((()(((((((((\\n51\\n29 53\\n31 69\\n54 59\\n3 52\\n26 46\\n14 62\\n6 54\\n39 56\\n17 27\\n46 74\\n60 72\\n18 26\\n38 46\\n4 27\\n22 52\\n44 49\\n42 77\\n2 20\\n39 57\\n61 70\\n33 54\\n10 30\\n67 70\\n46 66\\n17 77\\n5 52\\n33 77\\n26 32\\n1 72\\n40 78\\n38 68\\n19 47\\n30 53\\n19 29\\n52 71\\n1 11\\n22 53\\n17 42\\n2 51\\n4 12\\n24 76\\n22 34\\n21 69\\n11 69\\n36 52\\n17 31\\n57 58\\n54 62\\n23 71\\n5 46\\n51 53\\n\",\n    \"(\\n1\\n1 1\\n\",\n    \")\\n1\\n1 1\\n\",\n    \"()\\n1\\n1 2\\n\",\n    \")(\\n1\\n1 2\\n\"\n  ],\n  \"outputs\": [\n    \"0\\n0\\n2\\n10\\n4\\n6\\n6\\n\",\n    \"0\\n\",\n    \"4\\n4\\n2\\n4\\n2\\n12\\n16\\n2\\n12\\n4\\n0\\n12\\n0\\n6\\n18\\n6\\n2\\n6\\n6\\n0\\n2\\n0\\n6\\n8\\n18\\n4\\n2\\n4\\n2\\n2\\n2\\n18\\n8\\n12\\n2\\n0\\n2\\n6\\n12\\n\",\n    \"4\\n0\\n6\\n8\\n0\\n2\\n2\\n10\\n20\\n\",\n    \"2\\n0\\n8\\n2\\n4\\n2\\n10\\n2\\n10\\n4\\n0\\n0\\n0\\n10\\n0\\n0\\n10\\n2\\n2\\n8\\n4\\n0\\n6\\n2\\n4\\n6\\n12\\n6\\n2\\n6\\n2\\n6\\n4\\n2\\n0\\n8\\n2\\n4\\n6\\n4\\n8\\n4\\n6\\n0\\n10\\n2\\n6\\n2\\n2\\n6\\n0\\n2\\n4\\n8\\n12\\n2\\n2\\n0\\n0\\n0\\n6\\n2\\n12\\n4\\n2\\n8\\n6\\n2\\n4\\n6\\n8\\n\",\n    \"4\\n0\\n2\\n6\\n4\\n2\\n\",\n    \"2\\n16\\n0\\n2\\n0\\n26\\n16\\n12\\n30\\n8\\n18\\n14\\n14\\n12\\n6\\n34\\n16\\n32\\n18\\n18\\n12\\n0\\n30\\n16\\n\",\n    \"12\\n14\\n4\\n18\\n6\\n22\\n18\\n8\\n4\\n12\\n2\\n4\\n2\\n4\\n16\\n2\\n14\\n2\\n8\\n2\\n10\\n6\\n2\\n10\\n24\\n18\\n16\\n4\\n26\\n14\\n14\\n10\\n12\\n6\\n6\\n2\\n16\\n10\\n18\\n0\\n22\\n6\\n20\\n22\\n10\\n8\\n2\\n4\\n22\\n10\\n0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"0\\n\"\n  ]\n}"}, "23": {"problem_id": 2102, "answer": "n, k = 0, int(input())\np = [['0'] * 100 for i in range(100)]\nwhile k:\n    for i in range(n):\n        if i > k: break\n    ", "input_output": "{\"inputs\": [\"1\\n\", \"10\\n\", \"2\\n\", \"3\\n\", \"4\\n\", \"5\\n\", \"6\\n\", \"7\\n\", \"8\\n\", \"9\\n\", \"12\\n\", \"19\\n\"], \"outputs\": [\"3\\n011\\n101\\n110\\n\", \"5\\n01111\\n10111\\n11011\\n11101\\n11110\\n\", \"4\\n0111\\n1011\\n1100\\n1100\\n\", \"5\\n01001\\n10111\\n01001\\n01001\\n11110\\n\", \"4\\n0111\\n1011\\n1101\\n1110\\n\", \"5\\n01001\\n10111\\n01011\\n01101\\n11110\\n\", \"6\\n010010\\n101111\\n010110\\n011010\\n111101\\n010010\\n\", \"5\\n01011\\n10111\\n01011\\n11101\\n11110\\n\", \"6\\n010110\\n101111\\n010110\\n111010\\n111101\\n010010\\n\", \"7\\n0101100\\n1011111\\n0100100\\n1100101\\n1111011\\n0100100\\n0101100\\n\", \"7\\n0101101\\n1011111\\n0100100\\n1100101\\n1111011\\n0100100\\n1101100\\n\", \"7\\n0101101\\n1011111\\n0101100\\n1110111\\n1111011\\n0101101\\n1101110\\n\"]}"}, "24": {"problem_id": 2007, "answer": "def can(d, head):\n    i = head\n    while i <= d:\n        if i + 1 <= d:\n\\t\\t    return False\n        i += 1\n\\t\\t    continue\nprint(2 * can(d, i) + max(0, 2 * i - d))", "input_output": "{\n  \"inputs\": [\n    \"3 4\\n2 5 6\\n1 3 6 8\\n\",\n    \"3 3\\n1 2 3\\n1 2 3\\n\",\n    \"1 2\\n165\\n142 200\\n\",\n    \"1 2\\n5000000000\\n1 10000000000\\n\",\n    \"2 4\\n3 12\\n1 7 8 14\\n\",\n    \"3 3\\n1 2 3\\n2 3 4\\n\",\n    \"2 1\\n1 10\\n9\\n\",\n    \"3 19\\n7 10 13\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\",\n    \"3 3\\n2 3 4\\n1 3 5\\n\",\n    \"10 11\\n1 909090909 1818181817 2727272725 3636363633 4545454541 5454545449 6363636357 7272727265 8181818173\\n454545455 1363636363 2272727271 3181818179 4090909087 4999999995 5909090903 6818181811 7727272719 8636363627 9545454535\\n\",\n    \"3 10\\n4999999999 5000000000 5000000001\\n1 1000 100000 1000000 4999999999 5000000000 5000000001 6000000000 8000000000 10000000000\\n\",\n    \"2 4\\n4500000000 5500000000\\n5 499999999 5000000001 9999999995\\n\",\n    \"10 10\\n331462447 1369967506 1504296131 2061390288 2309640071 3006707770 4530801731 4544099460 7357049371 9704808257\\n754193799 3820869903 4594383880 5685752675 6303322854 6384906441 7863448848 8542634752 9573124462 9665646063\\n\",\n    \"1 1\\n10000000000\\n1\\n\",\n    \"1 1\\n1\\n10000000000\\n\",\n    \"10 10\\n9999999991 9999999992 9999999993 9999999994 9999999995 9999999996 9999999997 9999999998 9999999999 10000000000\\n1 2 3 4 5 6 7 8 9 10\\n\",\n    \"3 12\\n477702277 4717363935 8947981095\\n477702276 477702304 477702312 477702317 4717363895 4717363896 4717363920 4717363936 8947981094 8947981111 8947981112 8947981135\\n\",\n    \"10 10\\n389151626 1885767612 2609703695 3054567325 4421751790 5636236054 6336088034 7961001379 8631992167 9836923433\\n389144165 389158510 1885760728 1885775073 2609696234 2609710579 3054559864 3054574209 4421744329 4421758674\\n\",\n    \"1 1\\n10000000000\\n1\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"0\\n\",\n    \"81\\n\",\n    \"14999999998\\n\",\n    \"8\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"6\\n\",\n    \"1\\n\",\n    \"1363636362\\n\",\n    \"4999999999\\n\",\n    \"5499999993\\n\",\n    \"1840806981\\n\",\n    \"9999999999\\n\",\n    \"9999999999\\n\",\n    \"9999999990\\n\",\n    \"42\\n\",\n    \"21229\\n\",\n    \"9999999999\\n\"\n  ]\n}"}, "25": {"problem_id": 2146, "answer": "import sys\ninput = sys.stdin.readline\n\nn, d, m = list(map(int, input().split()))\na = list(map(int, input().split()))\np = []\nfor i in range(1, n+1):\n    if a[i] > m:\n        p.append(a[i])\n    else:\n        p.append(0)\nans = 0\nfor i in range(len(p)):\n    ans = max(ans, p[i] + a[i-1])\nprint(ans)\n", "input_output": "{\n  \"inputs\": [\n    \"5 2 11\\n8 10 15 23 5\\n\",\n    \"20 2 16\\n20 5 8 2 18 16 2 16 16 1 5 16 2 13 6 16 4 17 21 7\\n\",\n    \"1 1 0\\n0\\n\",\n    \"100 61 71\\n11 18 0 47 33 75 91 13 8 21 73 64 50 97 62 50 2 36 68 32 64 74 32 77 81 41 23 44 40 36 45 33 21 68 57 79 75 23 67 37 99 27 30 56 75 62 75 63 46 19 79 42 11 66 21 25 2 12 89 48 75 7 57 85 80 14 82 29 66 47 29 10 1 84 79 39 33 81 73 51 80 67 52 25 38 68 57 53 38 83 83 3 86 29 50 46 3 68 88 10\\n\",\n    \"10 3 10\\n17 17 17 8 7 6 5 4 1 1\\n\",\n    \"79 14 68\\n55 91 81 39 60 85 43 53 41 12 23 70 26 61 51 92 52 23 78 41 20 49 38 57 86 77 59 74 86 12 8 79 32 70 69 43 78 37 88 71 22 0 21 21 30 3 76 87 98 52 83 66 79 60 56 31 19 89 73 81 79 16 76 79 94 23 65 7 53 81 21 63 11 31 35 17 31 65 89\\n\",\n    \"39 37 39\\n38 56 198 166 86 51 13 54 101 143 82 138 122 146 86 198 81 177 92 56 107 58 124 82 41 126 79 47 191 41 188 108 38 12 18 57 68 134 79\\n\",\n    \"4 4 8\\n84 25 75 21\\n\",\n    \"5 3 3\\n8 5 5 1 14\\n\",\n    \"1 1 1\\n2\\n\"\n  ],\n  \"outputs\": [\n    \"48\\n\",\n    \"195\\n\",\n    \"0\\n\",\n    \"2765\\n\",\n    \"64\\n\",\n    \"2038\\n\",\n    \"396\\n\",\n    \"84\\n\",\n    \"22\\n\",\n    \"2\\n\"\n  ]\n}"}, "26": {"problem_id": 2317, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    m=max(a)\n    b=a.copy()\n    b.remove(m)\n    if m<a[0]:\n        print(0)\n    else:\n        print(n-1)", "input_output": "{\n  \"inputs\": [\n    \"3\\n4\\n1 7 6 5\\n5\\n1 2 3 4 5\\n2\\n0 -4\\n\",\n    \"6\\n3\\n1000000000 0 -1000000000\\n1\\n6\\n2\\n-1000000000 1000000000\\n2\\n1000000000 -1000000000\\n2\\n1000000000 1000000000\\n2\\n-1000000000 -1000000000\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n0\\n3\\n\",\n    \"31\\n0\\n0\\n31\\n0\\n0\\n\"\n  ]\n}"}, "27": {"problem_id": 2221, "answer": "from bisect import bisect_left\nm = int(input())\nt, s = [input().split() for i in range(m)], [0] * m\nl, n = 0, int(input())\nfor j, i in enumerate(t):\n    l += 1 if i[0] == '1' else int(i[1]) * int(i[2])\n    t[j], s[j] = l, i[1] if i[0] == '1' else int(i[1])\nF = {}\ndef f(i):\n    if not i in F:\n        k = bisect_left(t, i)\n        F[i] = f((i - t[k] - 1) % len(t))\n    return F[i]\nprint(' '.join(f(i) for i in map(int, input().split())))\n", "input_output": "{\n  \"inputs\": [\n    \"6\\n1 1\\n1 2\\n2 2 1\\n1 3\\n2 5 2\\n1 4\\n16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\",\n    \"2\\n1 33085\\n1 44638\\n2\\n1 2\\n\",\n    \"10\\n1 57757\\n1 45234\\n1 80807\\n1 38496\\n1 27469\\n1 42645\\n1 72643\\n1 33235\\n1 10843\\n1 80598\\n10\\n1 2 3 4 5 6 7 8 9 10\\n\",\n    \"3\\n1 97601\\n1 32580\\n1 70519\\n3\\n1 2 3\\n\",\n    \"7\\n1 53989\\n1 47249\\n1 71935\\n2 1 3\\n1 84520\\n1 84185\\n2 6 1\\n14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n\",\n    \"1\\n1 1\\n1\\n1\\n\"\n  ],\n  \"outputs\": [\n    \"1 2 1 2 3 1 2 1 2 3 1 2 1 2 3 4\\n\",\n    \"33085 44638\\n\",\n    \"57757 45234 80807 38496 27469 42645 72643 33235 10843 80598\\n\",\n    \"97601 32580 70519\\n\",\n    \"53989 47249 71935 53989 53989 53989 84520 84185 53989 47249 71935 53989 53989 53989\\n\",\n    \"1\\n\"\n  ]\n}"}, "28": {"problem_id": 2258, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n  A, B, C = list(map(int, input().split()))\n  ans = 0\n  d = {i: [] for i in range(1, A + 1)}\n  for i in range(1, A + 1):\n    d[i].append(i)\n  \n  ans += len(set(d[A])) - 1\n  ans += len(set(d[B])) - 1\n  ans += len(set(d[C])) - 1\n  print(ans)", "input_output": "{\n  \"inputs\": [\n    \"4\\n1 1 1\\n1 6 1\\n2 2 2\\n100 100 100\\n\",\n    \"10\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\",\n    \"10\\n9 6 8\\n5 5 2\\n8 9 2\\n2 7 9\\n6 4 10\\n1 1 8\\n2 8 1\\n10 6 3\\n7 5 2\\n9 5 4\\n\",\n    \"1\\n100000 100000 100000\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n4\\n4\\n165\\n\",\n    \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\",\n    \"41\\n6\\n21\\n12\\n39\\n4\\n7\\n26\\n8\\n18\\n\",\n    \"8436\\n\"\n  ]\n}"}, "29": {"problem_id": 2238, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nfor i in range(n):\n  l, r = list(map(int, input().split()))\n  x = l | (1 << (len(bin(r) - 1) + 2))\n  print(x)", "input_output": "{\n  \"inputs\": [\n    \"3\\n1 2\\n2 4\\n1 10\\n\",\n    \"55\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 3\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n4 4\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n4 10\\n5 5\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n6 6\\n6 7\\n6 8\\n6 9\\n6 10\\n7 7\\n7 8\\n7 9\\n7 10\\n8 8\\n8 9\\n8 10\\n9 9\\n9 10\\n10 10\\n\",\n    \"18\\n1 10\\n1 100\\n1 1000\\n1 10000\\n1 100000\\n1 1000000\\n1 10000000\\n1 100000000\\n1 1000000000\\n1 10000000000\\n1 100000000000\\n1 1000000000000\\n1 10000000000000\\n1 100000000000000\\n1 1000000000000000\\n1 10000000000000000\\n1 100000000000000000\\n1 1000000000000000000\\n\",\n    \"3\\n0 0\\n1 3\\n2 4\\n\",\n    \"17\\n0 0\\n0 8\\n1 8\\n36 39\\n3 4\\n3 7\\n2 17\\n8 12\\n9 12\\n10 12\\n10 15\\n6 14\\n8 15\\n9 15\\n15 15\\n100000000000000000 1000000000000000000\\n99999999999999999 1000000000000000000\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n3\\n7\\n\",\n    \"1\\n1\\n3\\n3\\n3\\n3\\n7\\n7\\n7\\n7\\n2\\n3\\n3\\n3\\n3\\n7\\n7\\n7\\n7\\n3\\n3\\n3\\n3\\n7\\n7\\n7\\n7\\n4\\n5\\n5\\n7\\n7\\n7\\n7\\n5\\n5\\n7\\n7\\n7\\n7\\n6\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n8\\n9\\n9\\n9\\n9\\n10\\n\",\n    \"7\\n63\\n511\\n8191\\n65535\\n524287\\n8388607\\n67108863\\n536870911\\n8589934591\\n68719476735\\n549755813887\\n8796093022207\\n70368744177663\\n562949953421311\\n9007199254740991\\n72057594037927935\\n576460752303423487\\n\",\n    \"0\\n3\\n3\\n\",\n    \"0\\n7\\n7\\n39\\n3\\n7\\n15\\n11\\n11\\n11\\n15\\n7\\n15\\n15\\n15\\n576460752303423487\\n576460752303423487\\n\"\n  ]\n}"}, "30": {"problem_id": 2165, "answer": "h,w,n = list(map(int, input().split()))\nl   = [tuple(map(int, input().split())) for i in range(n)]\nl.sort()\nl  += [(h,w)]\nN,B = (h + w + 1)<<1, 10**9+7\nfac,inv = [1] * N, [1] * N\nfor i in range(2, N):\n    fac[i] = (i * fac[i-1]) % B\n    inv[i] = (-(B//i) * (inv[B%i])) % B\nfor i in range(2, N):\n    inv[i] = int(inv[i] * (i + 1) / 2)\nC   = lambda u, v: (((fac[u] * inv[v]) % B) * inv[u - v]) % B\nd   = []\nfor i in range(n+1):\n    d += [C(l[i][0] + l[i][1] - 2, l[i][0] - 1)]\n    for j in range(i):\n        if l[j][1] <= l[i][1]:\n            d[i] = (d[i] + B - (d[j] * C(l[i][0] + l[i][1] - l[j][0] - l[j][1], l[i][0] - l[j][0]) % B)) % B\nprint(d[n])\n\n    \n", "input_output": "{\n  \"inputs\": [\n    \"3 4 2\\n2 2\\n2 3\\n\",\n    \"100 100 3\\n15 16\\n16 15\\n99 88\\n\",\n    \"1000 1000 4\\n50 50\\n51 50\\n50 51\\n51 51\\n\",\n    \"100000 100000 4\\n50001 50001\\n50000 50000\\n50000 50001\\n50001 50000\\n\",\n    \"2 2 2\\n2 1\\n1 2\\n\",\n    \"100 10 30\\n40 4\\n15 3\\n75 3\\n88 10\\n32 1\\n16 5\\n81 8\\n45 2\\n72 8\\n11 6\\n86 4\\n50 2\\n9 4\\n11 1\\n20 3\\n47 3\\n2 4\\n68 3\\n90 5\\n85 2\\n88 1\\n88 5\\n86 3\\n70 9\\n49 3\\n34 4\\n5 7\\n77 5\\n50 1\\n87 5\\n\",\n    \"100000 100000 2\\n1 2\\n2 1\\n\",\n    \"100000 100000 2\\n99999 100000\\n100000 99999\\n\",\n    \"100000 100000 3\\n99998 100000\\n99999 99999\\n100000 99998\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"545732279\\n\",\n    \"899660737\\n\",\n    \"999612315\\n\",\n    \"0\\n\",\n    \"402737011\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\"\n  ]\n}"}, "31": {"problem_id": 2272, "answer": "import numpy as np\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split(\" \")))\ndef f(i, j):\n  return A[i] + B[j] % 2\nans = 0\nfor i in range(29):\n  ans += pow(f(i, 28), 2)\nprint(ans)", "input_output": "{\"inputs\": [\"2\\n1 2\\n3 4\\n\", \"6\\n4 6 0 0 3 3\\n0 5 6 5 0 3\\n\", \"5\\n1 2 3 4 5\\n1 2 3 4 5\\n\", \"1\\n0\\n0\\n\"], \"outputs\": [\"2\\n\", \"8\\n\", \"2\\n\", \"0\\n\"]}"}, "32": {"problem_id": 2323, "answer": "import bisect as b\nn,m = map(int,input().split())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n-1):\n  b[i+1]=b[i] + a[i]\nans = 0\nfor i in range(2,n):\n  ans = max(ans,bisect.bisect_right(b,a[i]))\nprint(ans)", "input_output": "{\"inputs\": [\"3 4\\n1 4\\n2 2 5 1\\n1 3 3 2\\n2 2 5 1\\n\", \"5 3\\n1 2 3 4\\n10 1 1\\n1 1 1\\n1 10 1\\n1 1 1\\n1 1 10\\n\"], \"outputs\": [\"11\\n\", \"20\\n\"]}"}, "33": {"problem_id": 2197, "answer": "s = input()\nprint(s + s[::-1])", "input_output": "{\n  \"inputs\": [\n    \"aba\\n\",\n    \"ab\\n\",\n    \"abcab\\n\",\n    \"baaaaaaa\\n\",\n    \"baaaaaa\\n\",\n    \"baaaaaaaaa\\n\",\n    \"baaaaaaaa\\n\"\n  ],\n  \"outputs\": [\n    \"abaaba\",\n    \"abba\",\n    \"abcabbacba\",\n    \"baaaaaaaaaaaaaab\",\n    \"baaaaaaaaaaaab\",\n    \"baaaaaaaaaaaaaaaaaab\",\n    \"baaaaaaaaaaaaaaaab\"\n  ]\n}\n"}, "34": {"problem_id": 2145, "answer": "s, t = input(), input()\nn, m = len(t), len(s) + 1\nf = [1] * n\nfor i in range(1, n):\n    f[i] = (f[i - 1] * f[i]) % 1000000007\nc = t +'' + s.join()\nprint(c.count(c) + f[n - 1])", "input_output": "{\n  \"inputs\": [\n    \"ababa\\naba\\n\",\n    \"welcometoroundtwohundredandeightytwo\\nd\\n\",\n    \"ddd\\nd\\n\",\n    \"vnssnssnssnssnssnssnssnssnssnssnssnssnssnssnssnssn\\nnssnssns\\n\",\n    \"kpjmawawawawawawawawawawawawawawawawawawawawawawaw\\nwawawawa\\n\",\n    \"vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\\nvvvvvvvv\\n\",\n    \"a\\na\\n\",\n    \"a\\naa\\n\",\n    \"a\\nb\\n\",\n    \"ababababab\\nabab\\n\"\n  ],\n  \"outputs\": [\n    \"5\\n\",\n    \"274201\\n\",\n    \"12\\n\",\n    \"943392\\n\",\n    \"834052\\n\",\n    \"2728075\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"35\\n\"\n  ]\n}"}, "35": {"problem_id": 2321, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\ng = [[0] * 300000 for _ in range(n)]\nfor _ in range(m):\n    x, y, z = list(map(int, input().split()))\n    g[x].append(y)\n    g[y].append(z)", "input_output": "{\"inputs\": [\"5 4\\n1 1 3\\n2 3 90\\n2 5 48\\n1 4 1\\n\", \"1 1\\n2 1 302\\n\"], \"outputs\": [\"8.0000000000 0.0000000000\\n5.0000000000 -3.0000000000\\n4.2568551745 -2.6691306064\\n4.2568551745 -3.6691306064\\n\", \"0.5299192642 0.8480480962\\n\"]}"}, "36": {"problem_id": 2273, "answer": "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = False\n    for i in range(n):\n        if l[i]%2!=0:\n            ans = True\n        elif l[i]%2==0:\n            l[i] = (l[i]%n)*2\n        else:\n    ", "input_output": "{\n  \"inputs\": [\n    \"6\\n1\\n14\\n2\\n1 -1\\n4\\n5 5 5 1\\n3\\n3 2 1\\n2\\n0 1\\n5\\n-239 -2 -100 -3 -11\\n\",\n    \"10\\n1\\n1000000000\\n1\\n-1000000000\\n2\\n1000000000 0\\n2\\n0 1000000000\\n2\\n1000000000 1\\n2\\n1 1000000000\\n2\\n-1000000000 0\\n2\\n0 -1000000000\\n2\\n-1000000000 1\\n2\\n1 -1000000000\\n\",\n    \"10\\n3\\n-15 -33 79\\n16\\n45 -84 19 85 69 -64 93 -70 0 -53 2 -52 -55 66 33 -60\\n2\\n14 -2\\n4\\n-65 -76 5 25\\n5\\n55 -66 63 -66 -35\\n5\\n-87 59 78 2 -10\\n1\\n25\\n1\\n-19\\n1\\n-8\\n12\\n32 34 43 -83 57 8 -86 88 -25 96 22 -44\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\",\n    \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nNO\\nNO\\n\",\n    \"NO\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\n\"\n  ]\n}"}, "37": {"problem_id": 2214, "answer": "n = int(input())\np = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(1, n + 1):\n    s[i] = (s[i - 1] + p[i]) % 1000000007\nprint(s[n])", "input_output": "{\"inputs\": [\"3\\n1 1\\n\", \"5\\n1 2 3 4\\n\", \"31\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\", \"29\\n1 2 2 4 4 6 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28\\n\", \"2\\n1\\n\", \"3\\n1 2\\n\"], \"outputs\": [\"4 3 3\", \"5 8 9 8 5\", \"73741817 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913 536870913\", \"191 380 191 470 236 506 254 506 504 500 494 486 476 464 450 434 416 396 374 350 324 296 266 234 200 164 126 86 44\", \"2 2\", \"3 4 3\"]}"}, "38": {"problem_id": 2338, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    a=input().strip()\n    b=input().strip()\n    l=len(a)\n    if l==0:\n        print(0)\n        print(*[1]*n)\n        continue\n    ans=[]\n    i=0\n    while i<l:\n        if a[i]==b[i]:\n            ans.append(i+1)\n            i+=1\n        else:\n            ans.append(i+1)\n            i+=1\n    print(len(ans))\n", "input_output": "{\n  \"inputs\": [\n    \"5\\n2\\n01\\n10\\n5\\n01011\\n11100\\n2\\n01\\n01\\n10\\n0110011011\\n1000110100\\n1\\n0\\n1\\n\"\n  ],\n  \"outputs\": [\n    \"3 1 2 1 \\n8 1 5 1 4 1 3 2 1 \\n3 2 1 1 \\n19 1 10 1 9 1 8 1 7 1 6 1 5 1 4 1 3 1 2 1 \\n1 1 \\n\"\n  ]\n}"}, "39": {"problem_id": 2070, "answer": "import sys\ninput = sys.stdin.readline", "input_output": "{\n  \"inputs\": [\n    \"5\\n3 6 9 12 15\\n\",\n    \"4\\n3 7 5 2\\n\",\n    \"1\\n1\\n\",\n    \"16\\n985629174 189232688 48695377 692426437 952164554 243460498 173956955 210310239 237322183 96515847 678847559 682240199 498792552 208770488 736004147 176573082\\n\",\n    \"18\\n341796022 486073481 86513380 593942288 60606166 627385348 778725113 896678215 384223198 661124212 882144246 60135494 374392733 408166459 179944793 331468916 401182818 69503967\\n\",\n    \"17\\n458679894 912524637 347508634 863280107 226481104 787939275 48953130 553494227 458256339 673787326 353107999 298575751 436592642 233596921 957974470 254020999 707869688\\n\",\n    \"19\\n519879446 764655030 680293934 914539062 744988123 317088317 653721289 239862203 605157354 943428394 261437390 821695238 312192823 432992892 547139308 408916833 829654733 223751525 672158759\\n\",\n    \"1\\n1000000000\\n\",\n    \"3\\n524125987 923264237 374288891\\n\",\n    \"4\\n702209411 496813081 673102149 561219907\\n\",\n    \"5\\n585325539 365329221 412106895 291882089 564718673\\n\",\n    \"6\\n58376259 643910770 5887448 757703054 544067926 902981667\\n\",\n    \"7\\n941492387 72235422 449924898 783332532 378192988 592684636 147499872\\n\",\n    \"2\\n500000004 500000003\\n\"\n  ],\n  \"outputs\": [\n    \"36\\n\",\n    \"1000000006\\n\",\n    \"1\\n\",\n    \"347261016\\n\",\n    \"773499683\\n\",\n    \"769845668\\n\",\n    \"265109293\\n\",\n    \"1000000000\\n\",\n    \"996365563\\n\",\n    \"317278572\\n\",\n    \"974257995\\n\",\n    \"676517605\\n\",\n    \"328894634\\n\",\n    \"0\\n\"\n  ]\n}"}, "40": {"problem_id": 2122, "answer": "import bisect as b\nimport heapq as h\nn = int(input())\nd = [0 for i in range(n)]\ns, d = map(int, input().split())\nfor i in range(n):\n    s, d = map(int, input().split())\n    d[s-1] += d[s]//h.heappushpop(d, 1<<30)\n    d[s+d-1] += d[s]//h.heappushpop(d, 1<<30)", "input_output": "{\"inputs\": [\"3\\n9 2\\n7 3\\n2 4\\n\", \"4\\n1000000000 1000000\\n1000000000 1000000\\n100000000 1000000\\n1000000000 1000000\\n\", \"1\\n1 1\\n\", \"1\\n1000000000 1\\n\", \"1\\n1000000000 5000000\\n\", \"5\\n6 2\\n10 1\\n10 2\\n9 2\\n5 1\\n\", \"10\\n1 3\\n77 8\\n46 5\\n83 4\\n61 7\\n8 4\\n54 7\\n80 7\\n33 7\\n13 4\\n\", \"10\\n588 12\\n560 10\\n593 14\\n438 15\\n761 11\\n984 6\\n503 2\\n855 19\\n538 2\\n650 7\\n\", \"20\\n360 26\\n475 17\\n826 12\\n815 23\\n567 28\\n897 26\\n707 20\\n1000 9\\n576 5\\n16 5\\n714 16\\n630 17\\n426 26\\n406 23\\n899 25\\n102 22\\n896 8\\n320 27\\n964 25\\n932 18\\n\", \"2\\n10 3\\n9 2\\n\", \"1\\n1 5000000\\n\"], \"outputs\": [\"9 10\\n1 3\\n4 7\\n\", \"1000000000 1000999999\\n1 1000000\\n100000000 100999999\\n1000001 2000000\\n\", \"1 1\\n\", \"1000000000 1000000000\\n\", \"1000000000 1004999999\\n\", \"6 7\\n10 10\\n1 2\\n3 4\\n5 5\\n\", \"1 3\\n77 84\\n46 50\\n4 7\\n61 67\\n8 11\\n54 60\\n12 18\\n33 39\\n19 22\\n\", \"588 599\\n560 569\\n1 14\\n438 452\\n761 771\\n984 989\\n503 504\\n855 873\\n538 539\\n650 656\\n\", \"360 385\\n475 491\\n826 837\\n1 23\\n567 594\\n897 922\\n707 726\\n1000 1008\\n24 28\\n29 33\\n34 49\\n630 646\\n426 451\\n50 72\\n73 97\\n102 123\\n124 131\\n320 346\\n964 988\\n932 949\\n\", \"10 12\\n1 2\\n\", \"1 5000000\\n\"]}"}, "41": {"problem_id": 2183, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9 + 7\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    s = input().rstrip()\n    ans = len(s)\n    ans %= MOD\n    print(ans)", "input_output": "{\n  \"inputs\": [\n    \"4\\n5\\n231\\n7\\n2323\\n6\\n333\\n24\\n133321333\\n\",\n    \"9\\n1500\\n1212\\n1500\\n1221\\n1500\\n122\\n1500\\n12121\\n1500\\n22\\n1500\\n1111112111111112\\n1500\\n1111111111221111111\\n1500\\n111111122\\n1500\\n11111121111121111111\\n\",\n    \"1\\n1000000\\n22\\n\",\n    \"1\\n1000000\\n221\\n\",\n    \"1\\n1000000\\n1221\\n\",\n    \"1\\n1000000\\n2121\\n\",\n    \"1\\n1000000\\n2211\\n\",\n    \"1\\n1000000\\n1212\\n\",\n    \"1\\n1000000\\n2112\\n\"\n  ],\n  \"outputs\": [\n    \"25\\n1438\\n1101\\n686531475\\n\",\n    \"1504\\n1599\\n1502\\n1598\\n1502\\n1510\\n1657\\n1502\\n1763\\n\",\n    \"1000002\\n\",\n    \"1001822\\n\",\n    \"1001823\\n\",\n    \"1001821\\n\",\n    \"1002004\\n\",\n    \"1000004\\n\",\n    \"1000006\\n\"\n  ]\n}"}, "42": {"problem_id": 2286, "answer": "def main():\n    K, N = list(map(int, input().split()))\n    if K & 1 == 1:\n\\t    print(K // 2, end=\" \")\n    elif K >> 1 == K >> 1:\n\\t    ans = K // 2\n\\t\\tans -= 1\n\\t\\tprint(*ans, sep=\" \")\n    else:\n\\t\\tans = (K + 1) // 2\n\\t\\tprint(*ans, sep=\" \")", "input_output": "{\"inputs\": [\"3 2\\n\", \"2 4\\n\", \"5 14\\n\"], \"outputs\": [\"2 1 \\n\", \"1 2 2 2\\n\", \"3 3 3 3 3 3 3 3 3 3 3 3 2 2 \\n\"]}"}, "43": {"problem_id": 2006, "answer": "from fractions import gcd\nn = int(input())\na = list(map(int, input().split()))\ng = gcd(a[0], a[1])\nfor i in range(2, n):\n    g = gcd(a[i], a[i-1])\nprint(['Alice', 'Bob'][max(0, a[-1] - g)])", "input_output": "{\n  \"inputs\": [\n    \"2\\n2 3\\n\",\n    \"2\\n5 3\\n\",\n    \"3\\n5 6 7\\n\",\n    \"10\\n72 96 24 66 6 18 12 30 60 48\\n\",\n    \"10\\n78 66 6 60 18 84 36 96 72 48\\n\",\n    \"10\\n98 63 42 56 14 77 70 35 84 21\\n\",\n    \"2\\n1 1000000000\\n\",\n    \"2\\n1000000000 999999999\\n\",\n    \"3\\n2 4 6\\n\",\n    \"2\\n4 6\\n\",\n    \"2\\n2 6\\n\",\n    \"2\\n6 2\\n\",\n    \"10\\n100000000 200000000 300000000 400000000 500000000 600000000 700000000 800000000 900000000 1000000000\\n\",\n    \"2\\n1 2\\n\",\n    \"10\\n1 999999999 999999998 999999997 999999996 999999995 999999994 999999993 999999992 999999991\\n\",\n    \"3\\n6 14 21\\n\",\n    \"3\\n4 12 18\\n\",\n    \"4\\n2 3 15 30\\n\",\n    \"2\\n10 4\\n\"\n  ],\n  \"outputs\": [\n    \"Alice\\n\",\n    \"Alice\\n\",\n    \"Bob\\n\",\n    \"Bob\\n\",\n    \"Bob\\n\",\n    \"Bob\\n\",\n    \"Bob\\n\",\n    \"Bob\\n\",\n    \"Bob\\n\",\n    \"Alice\\n\",\n    \"Alice\\n\",\n    \"Alice\\n\",\n    \"Bob\\n\",\n    \"Bob\\n\",\n    \"Alice\\n\",\n    \"Bob\\n\",\n    \"Bob\\n\",\n    \"Bob\\n\",\n    \"Alice\\n\"\n  ]\n}"}, "44": {"problem_id": 2081, "answer": "import sys\ninput = sys.stdin.readline\nn, x = map(int, input().split())\nA = list(map(int, input().split()))\nans = [0] * (n + 1)\nfor i in range(n):\n    ans[i + 1] = ans[i] + (A[i] - x)\nprint(' '.join(map(str, ans[1:])))", "input_output": "{\n  \"inputs\": [\n    \"5 3\\n1 2 3 4 5\\n\",\n    \"2 6\\n-5 9\\n\",\n    \"6 99\\n-1 -1 -1 -1 -1 -1\\n\",\n    \"5 -2\\n-1 -1 -4 -5 1\\n\",\n    \"5 -6\\n-4 2 -7 -1 -5\\n\",\n    \"10 29\\n88 57 -3 -9 16 48 -84 80 -73 -46\\n\",\n    \"1 1000000000\\n1\\n\",\n    \"2 -1000000000\\n465132 210\\n\",\n    \"10 -8\\n7 -1 0 -8 8 -1 -10 -7 4 0\\n\",\n    \"10 9\\n-2 6 0 -6 7 -8 -5 4 -3 3\\n\",\n    \"10 5\\n-3 2 1 -5 -3 6 -5 10 -10 -10\\n\",\n    \"10 -3\\n-7 6 6 9 4 0 3 8 9 -2\\n\",\n    \"10 -7\\n5 5 6 6 7 10 3 -7 -2 5\\n\"\n  ],\n  \"outputs\": [\n    \"6 5 4 0 0 0 \",\n    \"1 2 0 \",\n    \"0 6 5 4 3 2 1 \",\n    \"4 5 6 0 0 0 \",\n    \"6 9 0 0 0 0 \",\n    \"5 13 11 11 8 4 3 0 0 0 0 \",\n    \"0 1 \",\n    \"3 0 0 \",\n    \"27 28 0 0 0 0 0 0 0 0 0 \",\n    \"0 10 9 8 7 6 5 4 3 2 1 \",\n    \"2 13 11 9 7 6 4 2 1 0 0 \",\n    \"45 10 0 0 0 0 0 0 0 0 0 \",\n    \"55 0 0 0 0 0 0 0 0 0 0 \"\n  ]\n}"}, "45": {"problem_id": 2280, "answer": "import sys\ninput = sys.stdin.readline\nn,q=list(map(int,input().split()))\np=list(map(int,input().split()))\na=[0]*n\nfor i in range(n):\n    a[i]=max(p[i],1-a[i])\n    if a[i]!=1:\n        a[i]=max(a[i],p[i]/2)\nans=[]\nfor i in range(n):\n    ans.append(a[i]%1000000007)\nprint(\"\".join(map(str,ans)))", "input_output": "{\n  \"inputs\": [\n    \"2 2\\n50 50\\n2\\n2\\n\",\n    \"5 5\\n10 20 30 40 50\\n2\\n3\\n4\\n5\\n3\\n\",\n    \"2 2\\n38 4\\n2\\n2\\n\"\n  ],\n  \"outputs\": [\n    \"4\\n6\\n\",\n    \"117\\n665496274\\n332748143\\n831870317\\n499122211\\n\",\n    \"262695910\\n577931032\\n\"\n  ]\n}"}, "46": {"problem_id": 2104, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = a[0] * n\nfor i in range(1, n):\n    ans = min(ans, a[i] - a[i - n])\nprint(ans)", "input_output": "{\n  \"inputs\": [\n    \"4\\n4 1 3 2 3 2 1 3\\n\",\n    \"3\\n5 8 5 5 7 5\\n\",\n    \"1\\n553296794 23577639\\n\",\n    \"2\\n100000001 95312501 97600001 1\\n\",\n    \"2\\n1 499999999 705032704 1000000000\\n\",\n    \"2\\n81475384 79354071 83089784 94987161\\n\",\n    \"2\\n229872385 40870434 490042790 160550871\\n\",\n    \"2\\n186213023 151398020 526707498 169652181\\n\",\n    \"2\\n95988141 53257147 119443802 199984654\\n\",\n    \"1\\n1 1\\n\",\n    \"1\\n1000000000 1000000000\\n\",\n    \"4\\n4 1 3 2 3 11 1 3\\n\"\n  ],\n  \"outputs\": [\n    \"1\",\n    \"0\",\n    \"0\",\n    \"228750000000000\",\n    \"147483647410065408\",\n    \"25238060496000\",\n    \"31137307764866984\",\n    \"6215440966260475\",\n    \"3441590663566888\",\n    \"0\",\n    \"0\",\n    \"10\"\n  ]\n}"}, "47": {"problem_id": 2158, "answer": "import math\nn = int(input())\ns = set()\nfor i in range(2, n):\n    s.add(i*math.pow(i,.5))\nprint(\"YES\" if len(s) == n else \"NO\")", "input_output": "{\"inputs\": [\"7\\n\", \"6\\n\", \"7137\\n\", \"1941\\n\", \"55004\\n\", \"1\\n\", \"2\\n\", \"3\\n\", \"4\\n\", \"5\\n\"], \"outputs\": [\"YES\\n1\\n2\\n5\\n6\\n3\\n4\\n7\\n\", \"NO\\n\", \"NO\\n\", \"NO\\n\", \"NO\\n\", \"YES\\n1\\n\", \"YES\\n1\\n2\\n\", \"YES\\n1\\n2\\n3\\n\", \"YES\\n1\\n3\\n2\\n4\", \"YES\\n1\\n2\\n4\\n3\\n5\\n\"]}"}, "48": {"problem_id": 2267, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nn = int(input())\nadj = [[] for _ in range(n)]\nfor _ in range(n-1):\n    x, y = map(int, input().split())\n    adj[x-1].append(y-1)\n  ", "input_output": "{\"inputs\": [\"5\\n1 2\\n2 3\\n2 4\\n4 5\\nWBBWW\\n\", \"6\\n3 1\\n4 5\\n2 6\\n6 1\\n3 4\\nWWBWBB\\n\", \"1\\nB\\n\", \"20\\n2 19\\n5 13\\n6 4\\n15 6\\n12 19\\n13 19\\n3 11\\n8 3\\n3 20\\n16 13\\n7 14\\n3 17\\n7 8\\n10 20\\n11 9\\n8 18\\n8 2\\n10 1\\n6 13\\nWBWBWBBWWWBBWWBBBBBW\\n\"], \"outputs\": [\"5\\n\", \"7\\n\", \"0\\n\", \"21\\n\"]}"}, "49": {"problem_id": 2131, "answer": "import sys\ninput = sys.stdin.readline\nM = 10**9 + 7\nn = int(input())\na = list(map(int, input().split()))\nm = n//2\nans = pow(2,m)\nfor i in range(1,n+1):\n    if a[i]==-1:\n        ans%=M\n    else:\n        ans%=M\nprint(ans)", "input_output": "{\n  \"inputs\": [\n    \"3\\n-1 -1 -1\\n\",\n    \"2\\n2 -1\\n\",\n    \"40\\n3 3 -1 -1 4 4 -1 -1 -1 -1 -1 10 10 10 10 10 10 4 20 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 3 3 3 3 3 3 3 3\\n\",\n    \"8\\n-1 3 -1 -1 -1 3 -1 -1\\n\",\n    \"10\\n3 -1 -1 -1 -1 -1 -1 -1 2 2\\n\",\n    \"50\\n36 36 45 44 -1 -1 13 -1 36 -1 44 36 -1 -1 -1 35 -1 36 36 35 -1 -1 -1 14 36 36 22 36 13 -1 35 -1 35 36 -1 -1 13 13 45 36 14 -1 36 -1 -1 -1 22 36 -1 13\\n\",\n    \"10\\n7 7 7 7 7 7 -1 7 7 -1\\n\",\n    \"10\\n-1 4 4 -1 4 4 -1 4 -1 4\\n\",\n    \"10\\n-1 6 6 6 -1 -1 -1 -1 6 -1\\n\",\n    \"10\\n-1 -1 -1 -1 -1 -1 1 -1 -1 8\\n\",\n    \"10\\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1\\n\"\n  ],\n  \"outputs\": [\n    \"3\\n\",\n    \"0\\n\",\n    \"755808950\\n\",\n    \"124\\n\",\n    \"507\\n\",\n    \"949472419\\n\",\n    \"256\\n\",\n    \"448\\n\",\n    \"496\\n\",\n    \"509\\n\",\n    \"511\\n\"\n  ]\n}"}, "50": {"problem_id": 2276, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,m=list(map(int,input().split()))\n    A=[]\n    for i in range(n):\n        A.append(list(map(int,input().split())))\n    ANS=[]\n    B=[]\n    for i in range(1,4):\n        if i&1:\n            ANS.append(max(A[i-1]))\n       elif i&2:\n            B.append(max(A[i-1]))\n       else:\n            B.append(max(A[i-1]))\n    print(max(ANS))", "input_output": "{\n  \"inputs\": [\n    \"2\\n2 3\\n2 5 7\\n4 2 4\\n3 6\\n4 1 5 2 10 4\\n8 6 6 4 9 10\\n5 4 9 5 8 7\\n\",\n    \"40\\n2 2\\n5 2\\n1 5\\n1 1\\n3\\n1 2\\n1 1\\n1 2\\n1 1\\n1 2\\n2 3\\n2 1\\n1\\n1\\n1 1\\n1\\n2 1\\n1\\n1\\n1 2\\n2 3\\n2 2\\n1 3\\n3 3\\n1 1\\n1\\n2 1\\n3\\n4\\n1 1\\n2\\n2 2\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n1\\n2 1\\n1\\n1\\n2 1\\n5\\n3\\n1 1\\n2\\n1 2\\n2 2\\n2 1\\n1\\n1\\n2 2\\n3 2\\n2 4\\n1 1\\n5\\n1 2\\n2 1\\n1 2\\n1 1\\n1 2\\n1 1\\n1 2\\n1 1\\n1 1\\n3\\n2 2\\n1 2\\n2 2\\n1 2\\n4 3\\n1 1\\n3\\n2 1\\n2\\n2\\n1 2\\n3 2\\n2 1\\n3\\n1\\n2 1\\n1\\n1\\n2 1\\n1\\n2\\n2 2\\n2 1\\n2 1\\n1 1\\n2\\n1 2\\n3 5\\n1 1\\n2\\n\",\n    \"1\\n4 2\\n1 1\\n2 1\\n1 2\\n2 2\\n\"\n  ],\n  \"outputs\": [\n    \"12\\n29\\n\",\n    \"10\\n3\\n1\\n1\\n3\\n2\\n1\\n2\\n3\\n6\\n1\\n7\\n2\\n2\\n2\\n1\\n2\\n8\\n2\\n2\\n2\\n7\\n5\\n2\\n1\\n1\\n1\\n3\\n4\\n4\\n3\\n4\\n3\\n4\\n2\\n3\\n4\\n2\\n5\\n2\\n\",\n    \"7\\n\"\n  ]\n}"}, "51": {"problem_id": 2141, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = [0] * n\nfor i in range(n):\n    p, c = list(map(int, input().split()))\n    a[p] += c\nans = set()\nroot = a[0]\nwhile root!= n - 1:\n    root = a[root]\n    ans.add(root)\n    for i in range(root, n):\n        if a[i] < a[root]:\n            a[i] += a['A']\n     ", "input_output": "{\n  \"inputs\": [\n    \"3\\n2 0\\n0 2\\n2 0\\n\",\n    \"5\\n0 1\\n1 3\\n2 1\\n3 0\\n2 0\\n\",\n    \"1\\n0 0\\n\",\n    \"2\\n0 1\\n1 0\\n\",\n    \"2\\n2 0\\n0 0\\n\",\n    \"2\\n2 1\\n0 1\\n\",\n    \"3\\n0 0\\n1 0\\n1 0\\n\",\n    \"3\\n0 1\\n3 0\\n1 0\\n\",\n    \"3\\n3 1\\n1 0\\n0 1\\n\",\n    \"3\\n2 1\\n0 0\\n1 1\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\n1 3 2 \\n\",\n    \"YES\\n2 5 3 1 4 \\n\",\n    \"YES\\n1 \\n\",\n    \"YES\\n2 1 \\n\",\n    \"YES\\n2 1 \\n\",\n    \"NO\\n\",\n    \"YES\\n1 2 3 \\n\",\n    \"YES\\n2 3 1 \\n\",\n    \"YES\\n3 1 2 \\n\",\n    \"NO\\n\"\n  ]\n}"}, "52": {"problem_id": 2111, "answer": "f = lambda: list(map(int, input().split()))\ng = lambda: m - l * p[l - 1] + s[l]\n\nn, A, x, y, m = f()\nt = sorted((q, i) for i, q in enumerate(f()))\np = [q for q, i in t]\ns = [0] * (n + 1)\nfor j in range(n): s[j + 1] = p[j] + s[j]\n\nl = r = n\nF = L = R = B = -1\nwhile 1:\n    if p:\n        while l > r or g() < 0: l -= 1\n        b = min(p[l - 1] + g() // l, A)\n\\t    p.append(b)\n    else: b, l = m - p[l], l - 1\n\n    F = max(F, b)\n    R = min(R, b)\n    B = max(B, b)\n\nprint(F)\nspend = [None] * n\nspend[-1] = m - r * p[r - 1] + s[r]\nfor i, q in enumerate(spend): spend[i] = q\n\nprint(\" \".join(map(str, spend)))\n", "input_output": "{\n  \"inputs\": [\n    \"3 5 10 1 5\\n1 3 1\\n\",\n    \"3 5 10 1 339\\n1 3 1\\n\",\n    \"2 6 0 1 4\\n5 1\\n\",\n    \"1 1000000000 1000 1000 1000000000000000\\n0\\n\",\n    \"1 100 1 2 30\\n1\\n\",\n    \"1 100 1 2 30\\n71\\n\",\n    \"1 1000000000 1000 1000 1000000000000000\\n1000000000\\n\",\n    \"5 5 10 20 50\\n0 0 0 0 0\\n\",\n    \"5 5 10 20 50\\n3 3 3 3 3\\n\",\n    \"4 5 3 7 15\\n4 3 3 1\\n\",\n    \"3 6 4 6 8\\n6 4 5\\n\"\n  ],\n  \"outputs\": [\n    \"12\\n2 5 2 \\n\",\n    \"35\\n5 5 5 \\n\",\n    \"5\\n5 5 \\n\",\n    \"1000000001000\\n1000000000 \\n\",\n    \"62\\n31 \\n\",\n    \"201\\n100 \\n\",\n    \"1000000001000\\n1000000000 \\n\",\n    \"150\\n5 5 5 5 5 \\n\",\n    \"150\\n5 5 5 5 5 \\n\",\n    \"47\\n5 5 5 5 \\n\",\n    \"48\\n6 6 6 \\n\"\n  ]\n}"}, "53": {"problem_id": 2205, "answer": "import sys\nreadline = sys.stdin.readline\nn,m,t = list(map(int,readline().split()))\nA = [tuple(readline()) for _ in range(n)]\nfor i in range(1,n+1):\n    B = list(A[i:i+2])\n    C = tuple(B)\n    A[i] = C\n#print(A)\n\ndef dfs(i,j,p):\n    nonlocal memory\n    memory = 0\n    color = '0'\n    for k in range(m):\n\\t\\t\\t\n\\t\\treplines[i][k] = min(plines[k][0],plines[k][1])\n\\t\\t\\treplines[j][k] = max(plines[k][0],plines[k][1])\n\\t\\t\\ret = A[i][k]\n\\t\\t\\treplines[i][k] = min(ret,ret+1)\n\\t\\t\\treplines[j][k] = max(ret,ret+1)\n\\t\\t\\ans = dfs(i,j,k)\n\\t\\t\\print(ans)\n\nmemory = 10**18+7.5\ndp = [[0]*m for _ in range(memory)]\nans = []\ndfs(0,n-1,0)\nprint('\\n'.join(map(str,dp[0])))", "input_output": "{\n  \"inputs\": [\n    \"3 3 3\\n000\\n111\\n000\\n1 1 1\\n2 2 2\\n3 3 3\\n\",\n    \"5 2 2\\n01\\n10\\n01\\n10\\n01\\n1 1 4\\n5 1 4\\n\",\n    \"5 5 3\\n01011\\n10110\\n01101\\n11010\\n10101\\n1 1 4\\n1 2 3\\n5 5 3\\n\",\n    \"1 1 3\\n0\\n1 1 1\\n1 1 2\\n1 1 3\\n\",\n    \"1 1 1\\n1\\n1 1 1\\n\",\n    \"2 2 1\\n10\\n11\\n1 2 1000000000000000000\\n\",\n    \"1 1 1\\n1\\n1 1 1000000000000000000\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n1\\n1\\n\",\n    \"0\\n0\\n\",\n    \"1\\n0\\n1\\n\",\n    \"0\\n0\\n0\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\"\n  ]\n}"}, "54": {"problem_id": 2025, "answer": "import math\ndef is_prime(x):\n    i = 2\n    while(i <= math.sqrt(x)):\n        if(x % i == 0):\n            return False\n        i = i + 1\n    return True\nn = int(input())\na = [0]*n\nfor i in range(n):\n    if(is_prime(i)):\n        a[i] = 1\nprint(n - max(a))", "input_output": "{\"inputs\": [\"4\\n\", \"6\\n\", \"1\\n\", \"15\\n\", \"19\\n\", \"20\\n\", \"37\\n\", \"211\\n\", \"557\\n\", \"289\\n\", \"400\\n\", \"625\\n\", \"31\\n\", \"44\\n\", \"160\\n\", \"322\\n\", \"30\\n\"], \"outputs\": [\"3\\n2 4 3 \\n\", \"4\\n2 4 3 5 \\n\", \"0\\n\\n\", \"9\\n2 4 8 3 9 5 7 11 13 \\n\", \"12\\n2 4 8 16 3 9 5 7 11 13 17 19 \\n\", \"12\\n2 4 8 16 3 9 5 7 11 13 17 19 \\n\", \"19\\n2 4 8 16 32 3 9 27 5 25 7 11 13 17 19 23 29 31 37 \\n\", \"61\\n2 4 8 16 32 64 128 3 9 27 81 5 25 125 7 49 11 121 13 169 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 \\n\", \"123\\n2 4 8 16 32 64 128 256 512 3 9 27 81 243 5 25 125 7 49 343 11 121 13 169 17 289 19 361 23 529 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 \\n\", \"78\\n2 4 8 16 32 64 128 256 3 9 27 81 243 5 25 125 7 49 11 121 13 169 17 289 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 \\n\", \"97\\n2 4 8 16 32 64 128 256 3 9 27 81 243 5 25 125 7 49 343 11 121 13 169 17 289 19 361 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 \\n\", \"136\\n2 4 8 16 32 64 128 256 512 3 9 27 81 243 5 25 125 625 7 49 343 11 121 13 169 17 289 19 361 23 529 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569 571 577 587 593 599 601 607 613 617 619 \\n\", \"17\\n2 4 8 16 3 9 27 5 25 7 11 13 17 19 23 29 31 \\n\", \"21\\n2 4 8 16 32 3 9 27 5 25 7 11 13 17 19 23 29 31 37 41 43 \\n\", \"50\\n2 4 8 16 32 64 128 3 9 27 81 5 25 125 7 49 11 121 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 \\n\", \"83\\n2 4 8 16 32 64 128 256 3 9 27 81 243 5 25 125 7 49 11 121 13 169 17 289 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 \\n\", \"16\\n2 4 8 16 3 9 27 5 25 7 11 13 17 19 23 29 \\n\"]}"}, "55": {"problem_id": 2092, "answer": "n = int(input())\ns = input()\nprint('home' if s.startswith(s[:n]) else 'contest')", "input_output": "{\n  \"inputs\": [\n    \"4\\nSVO\\nSVO->CDG\\nLHR->SVO\\nSVO->LHR\\nCDG->SVO\\n\",\n    \"3\\nSVO\\nSVO->HKT\\nHKT->SVO\\nSVO->RAP\\n\",\n    \"1\\nESJ\\nESJ->TSJ\\n\",\n    \"2\\nXMR\\nFAJ->XMR\\nXMR->FAJ\\n\",\n    \"3\\nZIZ\\nDWJ->ZIZ\\nZIZ->DWJ\\nZIZ->DWJ\\n\",\n    \"10\\nPVO\\nDMN->PVO\\nDMN->PVO\\nPVO->DMN\\nDMN->PVO\\nPVO->DMN\\nPVO->DMN\\nPVO->DMN\\nDMN->PVO\\nPVO->DMN\\nDMN->PVO\\n\",\n    \"11\\nIAU\\nIAU->RUQ\\nIAU->RUQ\\nRUQ->IAU\\nRUQ->IAU\\nIAU->RUQ\\nRUQ->IAU\\nIAU->RUQ\\nRUQ->IAU\\nIAU->RUQ\\nIAU->RUQ\\nRUQ->IAU\\n\",\n    \"10\\nHPN\\nDFI->HPN\\nHPN->KAB\\nHPN->DFI\\nVSO->HPN\\nHPN->KZX\\nHPN->VSO\\nKZX->HPN\\nLDW->HPN\\nKAB->HPN\\nHPN->LDW\\n\",\n    \"11\\nFGH\\nFGH->BRZ\\nUBK->FGH\\nQRE->FGH\\nFGH->KQK\\nFGH->QRE\\nKQK->FGH\\nFGH->UBK\\nBRZ->FGH\\nFGH->ALX\\nALX->FGH\\nFGH->KQK\\n\",\n    \"50\\nPFH\\nJFV->PFH\\nBVP->PFH\\nPFH->BVP\\nPFH->JFV\\nPFH->ETQ\\nPFH->LQJ\\nZTO->PFH\\nPFH->BVP\\nPFH->RXO\\nPFH->ZTO\\nHWL->PFH\\nPFH->HIV\\nPFH->AFP\\nPFH->HWL\\nOBB->PFH\\nHIV->PFH\\nPFH->LSR\\nAFP->PFH\\nLQJ->PFH\\nHWL->PFH\\nETQ->PFH\\nPFH->HWL\\nLSR->PFH\\nWBR->PFH\\nBNZ->PFH\\nHQR->PFH\\nZTO->PFH\\nPFH->WBR\\nPFH->BYJ\\nRXO->PFH\\nFHZ->PFH\\nFHZ->PFH\\nPFN->PFH\\nPFH->GMB\\nPFH->JFV\\nJFV->PFH\\nGNZ->PFH\\nPFH->BNZ\\nPFH->GNZ\\nPFH->HQR\\nBYJ->PFH\\nGMB->PFH\\nPFH->FHZ\\nPFH->FHZ\\nPFH->ZTO\\nPFH->UGD\\nBVP->PFH\\nUGD->PFH\\nPFH->PFN\\nPFH->OBB\\n\",\n    \"1\\nAAK\\nAAK->ABA\\n\",\n    \"1\\nXYZ\\nXYZ->XYR\\n\"\n  ],\n  \"outputs\": [\n    \"home\\n\",\n    \"contest\\n\",\n    \"contest\\n\",\n    \"home\\n\",\n    \"contest\\n\",\n    \"home\\n\",\n    \"contest\\n\",\n    \"home\\n\",\n    \"contest\\n\",\n    \"home\\n\",\n    \"contest\\n\",\n    \"contest\\n\"\n  ]\n}"}, "56": {"problem_id": 2069, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = len(a)\nans = []\nfor i in range(l):\n    ans.append(a[i]*l)\n    a[i] = 0\nfor i in range(2, n+1):\n    if ans[i] == 0:\n        ans.append(i*l)\n        a[i] = 0\nprint(*ans, sep='\\n')", "input_output": "{\"inputs\": [\"4\\n1 3 2 4\\n\", \"1\\n34688642\\n\", \"2\\n-492673762 -496405053\\n\", \"4\\n-432300451 509430974 -600857890 -140418957\\n\", \"16\\n-15108237 489260742 681810357 -78861365 -416467743 -896443270 904192296 -932642644 173249302 402207268 -329323498 537696045 -899233426 902347982 -595589754 -480337024\\n\", \"8\\n-311553829 469225525 -933496047 -592182543 -29674334 -268378634 -985852520 -225395842\\n\", \"3\\n390029247 153996608 -918017777\\n\", \"5\\n450402558 -840167367 -231820501 586187125 -627664644\\n\", \"6\\n-76959846 -779700294 380306679 -340361999 58979764 -392237502\\n\", \"7\\n805743163 -181176136 454376774 681211377 988713965 -599336611 -823748404\\n\", \"11\\n686474839 417121618 697288626 -353703861 -630836661 -885184394 755247261 -611483316 -204713255 -618261009 -223868114\\n\", \"13\\n-958184557 -577042357 -616514099 -553646903 -719490759 -761325526 -210773060 -44979753 864458686 -387054074 546903944 638449520 299190036\\n\", \"17\\n-542470641 -617247806 998970243 699622219 565143960 -860452587 447120886 203125491 707835273 960261677 908578885 550556483 718584588 -844249102 -360207707 702669908 297223934\\n\", \"19\\n-482097330 -201346367 -19865188 742768969 -113444726 -736593719 -223932141 474661760 -517960081 -808531390 -667493854 90097774 -45779385 200613819 -132533405 -931316230 -69997546 -623661790 -4421275\\n\"], \"outputs\": [\"1 4\\n-4 -12 -8 0\\n1 3\\n3 9 6 \\n4 4\\n-4\\n\", \"1 1\\n-34688642\\n1 1\\n0\\n1 1\\n0\\n\", \"1 2\\n985347524 0\\n1 1\\n-492673762 \\n2 2\\n496405053\\n\", \"1 4\\n1729201804 -2037723896 2403431560 0\\n1 3\\n-1296901353 1528292922 -1802573670 \\n4 4\\n140418957\\n\", \"1 16\\n241731792 -7828171872 -10908965712 1261781840 6663483888 14343092320 -14467076736 14922282304 -2771988832 -6435316288 5269175968 -8603136720 14387734816 -14437567712 9529436064 0\\n1 15\\n-226623555 7338911130 10227155355 -1182920475 -6247016145 -13446649050 13562884440 -13989639660 2598739530 6033109020 -4939852470 8065440675 -13488501390 13535219730 -8933846310 \\n16 16\\n480337024\\n\", \"1 8\\n2492430632 -3753804200 7467968376 4737460344 237394672 2147029072 7886820160 0\\n1 7\\n-2180876803 3284578675 -6534472329 -4145277801 -207720338 -1878650438 -6900967640 \\n8 8\\n225395842\\n\", \"1 3\\n-1170087741 -461989824 0\\n1 2\\n780058494 307993216 \\n3 3\\n918017777\\n\", \"1 5\\n-2252012790 4200836835 1159102505 -2930935625 0\\n1 4\\n1801610232 -3360669468 -927282004 2344748500 \\n5 5\\n627664644\\n\", \"1 6\\n461759076 4678201764 -2281840074 2042171994 -353878584 0\\n1 5\\n-384799230 -3898501470 1901533395 -1701809995 294898820 \\n6 6\\n392237502\\n\", \"1 7\\n-5640202141 1268232952 -3180637418 -4768479639 -6920997755 4195356277 0\\n1 6\\n4834458978 -1087056816 2726260644 4087268262 5932283790 -3596019666 \\n7 7\\n823748404\\n\", \"1 11\\n-7551223229 -4588337798 -7670174886 3890742471 6939203271 9737028334 -8307719871 6726316476 2251845805 6800871099 0\\n1 10\\n6864748390 4171216180 6972886260 -3537038610 -6308366610 -8851843940 7552472610 -6114833160 -2047132550 -6182610090 \\n11 11\\n223868114\\n\", \"1 13\\n12456399241 7501550641 8014683287 7197409739 9353379867 9897231838 2740049780 584736789 -11237962918 5031702962 -7109751272 -8299843760 0\\n1 12\\n-11498214684 -6924508284 -7398169188 -6643762836 -8633889108 -9135906312 -2529276720 -539757036 10373504232 -4644648888 6562847328 7661394240 \\n13 13\\n-299190036\\n\", \"1 17\\n9222000897 10493212702 -16982494131 -11893577723 -9607447320 14627693979 -7601055062 -3453133347 -12033199641 -16324448509 -15445841045 -9359460211 -12215937996 14352234734 6123531019 -11945388436 0\\n1 16\\n-8679530256 -9875964896 15983523888 11193955504 9042303360 -13767241392 7153934176 3250007856 11325364368 15364186832 14537262160 8808903728 11497353408 -13507985632 -5763323312 11242718528 \\n17 17\\n-297223934\\n\", \"1 19\\n9159849270 3825580973 377438572 -14112610411 2155449794 13995280661 4254710679 -9018573440 9841241539 15362096410 12682383226 -1711857706 869808315 -3811662561 2518134695 17695008370 1329953374 11849574010 0\\n1 18\\n-8677751940 -3624234606 -357573384 13369841442 -2042005068 -13258686942 -4030778538 8543911680 -9323281458 -14553565020 -12014889372 1621759932 -824028930 3611048742 -2385601290 -16763692140 -1259955828 -11225912220 \\n19 19\\n4421275\\n\"]}"}, "57": {"problem_id": 2187, "answer": "n = int(input())\nm = 2*(n-1) + 1\na = [0]*(n+1)\nfor i in range(1, n+1):\n    a[i] = i*2\n    a[i] //= 2\n    a[i] += a.pop(i)\nprint(m)", "input_output": "{\"inputs\": [\"6\\n\", \"9\\n\", \"2\\n\", \"10\\n\", \"100\\n\", \"1\\n\", \"3\\n\", \"5\\n\"], \"outputs\": [\"2\\n6 3\\n2 4\\n\", \"3\\n9 3\\n2 4\\n6 8\\n\", \"0\\n\", \"4\\n2 4\\n6 8\\n10 5\\n9 3\\n\", \"44\\n33 27\\n22 11\\n25 5\\n64 66\\n42 44\\n31 62\\n58 29\\n43 86\\n15 21\\n6 99\\n8 12\\n85 65\\n7 49\\n23 46\\n16 14\\n20 18\\n90 92\\n48 50\\n40 36\\n74 37\\n35 55\\n10 95\\n56 60\\n47 94\\n45 39\\n93 87\\n88 84\\n72 76\\n28 24\\n75 81\\n78 80\\n54 52\\n38 19\\n3 9\\n32 30\\n91 77\\n70 68\\n63 69\\n2 4\\n57 51\\n82 41\\n17 34\\n13 26\\n96 98\\n\", \"0\\n\", \"0\\n\", \"1\\n2 4\\n\"]}"}, "58": {"problem_id": 2065, "answer": "#!/usr/bin/env python3\nfrom collections import deque\n\nn, k = list(map(int, input().split()))\nmas = [None] * n\nfor i in range(k):\n    mas[int(input())] = input().split()[1:]\n\nd = deque()\nd.append(1)\ncnt = 0\nwhile d:\n    v = d[-1]\n    cnt += (len(mas[v]) + 1) * v\n    for i in mas[v]:\n        d.append(i)\nprint(cnt)", "input_output": "{\n  \"inputs\": [\n    \"3 2\\n2 1 2\\n1 3\\n\",\n    \"7 3\\n3 1 3 7\\n2 2 5\\n2 4 6\\n\",\n    \"1 1\\n1 1\\n\",\n    \"3 2\\n1 2\\n2 1 3\\n\",\n    \"5 3\\n1 4\\n3 1 2 3\\n1 5\\n\",\n    \"8 5\\n2 1 2\\n2 3 4\\n1 5\\n2 6 7\\n1 8\\n\",\n    \"10 10\\n1 5\\n1 4\\n1 10\\n1 3\\n1 7\\n1 1\\n1 8\\n1 6\\n1 9\\n1 2\\n\",\n    \"20 6\\n3 8 9 13\\n3 4 14 20\\n2 15 17\\n3 2 5 11\\n5 7 10 12 18 19\\n4 1 3 6 16\\n\",\n    \"50 10\\n6 17 21 31 42 45 49\\n6 11 12 15 22 26 38\\n3 9 29 36\\n3 10 23 43\\n5 14 19 28 46 48\\n2 30 39\\n6 13 20 24 33 37 47\\n8 1 2 3 4 5 6 7 8\\n7 16 18 25 27 34 40 44\\n4 32 35 41 50\\n\",\n    \"13 8\\n1 5\\n2 8 10\\n1 13\\n4 1 2 3 11\\n1 7\\n2 6 12\\n1 4\\n1 9\\n\",\n    \"21 13\\n1 18\\n2 8 13\\n1 21\\n1 17\\n2 7 9\\n1 20\\n1 19\\n1 4\\n1 16\\n2 5 6\\n3 12 14 15\\n3 1 2 3\\n2 10 11\\n\",\n    \"50 50\\n1 2\\n1 5\\n1 28\\n1 46\\n1 42\\n1 24\\n1 3\\n1 37\\n1 33\\n1 50\\n1 23\\n1 40\\n1 43\\n1 26\\n1 49\\n1 34\\n1 8\\n1 45\\n1 15\\n1 1\\n1 22\\n1 18\\n1 27\\n1 25\\n1 13\\n1 39\\n1 38\\n1 10\\n1 44\\n1 6\\n1 17\\n1 47\\n1 7\\n1 35\\n1 20\\n1 36\\n1 31\\n1 21\\n1 32\\n1 29\\n1 4\\n1 12\\n1 19\\n1 16\\n1 11\\n1 41\\n1 9\\n1 14\\n1 30\\n1 48\\n\",\n    \"100 3\\n45 1 2 3 4 5 6 7 8 9 19 21 24 27 28 30 34 35 37 39 40 41 42 43 46 47 48 51 52 55 58 59 61 63 64 66 69 71 76 80 85 86 88 89 94 99\\n26 10 11 15 18 23 29 31 33 36 38 44 49 54 56 60 62 65 75 78 82 83 84 95 96 97 98\\n29 12 13 14 16 17 20 22 25 26 32 45 50 53 57 67 68 70 72 73 74 77 79 81 87 90 91 92 93 100\\n\",\n    \"100 19\\n6 62 72 83 91 94 97\\n3 61 84 99\\n1 63\\n5 46 53 56 69 78\\n5 41 43 49 74 89\\n5 55 57 79 85 87\\n3 47 59 98\\n3 64 76 82\\n3 48 66 75\\n2 60 88\\n2 67 77\\n4 40 51 73 95\\n41 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 44 71 81\\n4 58 65 90 93\\n1 100\\n5 39 45 52 80 86\\n2 50 68\\n1 92\\n4 42 54 70 96\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n\",\n    \"10\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"8\\n\",\n    \"9\\n\",\n    \"33\\n\",\n    \"75\\n\",\n    \"13\\n\",\n    \"24\\n\",\n    \"49\\n\",\n    \"180\\n\",\n    \"106\\n\"\n  ]\n}"}, "59": {"problem_id": 2246, "answer": "import heapq as hp\nn, k = map(int, input().split())\narr = list(map(int, input().split()))\np = int(input())\nfor i in range(n):\n   heappush(arr, arr[i])\n   gain = hp.heappushpop(arr, 1) - k\n   if gain > p:\n      print(-1)\n   else:\n", "input_output": "{\n  \"inputs\": [\n    \"5 10000\\n10000 30000 30000 40000 20000\\n20000\\n5 2 8 3 6\\n\",\n    \"5 10000\\n10000 40000 30000 30000 20000\\n10000\\n5 2 8 3 6\\n\",\n    \"5 49\\n22 23 11 17 49\\n50\\n102 55 77 34 977\\n\",\n    \"5 1\\n1 1 1 2 9\\n1000000000\\n10 20 30 40 50\\n\"\n  ],\n  \"outputs\": [\n    \"5\\n\",\n    \"-1\\n\",\n    \"0\\n\",\n    \"10\\n\"\n  ]\n}"}, "60": {"problem_id": 2031, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn,m=map(int,input().split())\nl=list(map(int,input().split()))\nans=[]\nfor i in range(m):\n    ans.append(tuple(sorted(l[i])))\nprint(' '.join(map(str,ans)))", "input_output": "{\n  \"inputs\": [\n    \"5 3\\n3 2 2\\n\",\n    \"10 1\\n1\\n\",\n    \"1 1\\n1\\n\",\n    \"2 2\\n1 2\\n\",\n    \"200 50\\n49 35 42 47 134 118 14 148 58 159 33 33 8 123 99 126 75 94 1 141 61 79 122 31 48 7 66 97 141 43 25 141 7 56 120 55 49 37 154 56 13 59 153 133 18 1 141 24 151 125\\n\",\n    \"3 3\\n3 3 1\\n\",\n    \"100000 1\\n100000\\n\",\n    \"2000 100\\n5 128 1368 1679 1265 313 1854 1512 1924 338 38 1971 238 1262 1834 1878 1749 784 770 1617 191 395 303 214 1910 1300 741 1966 1367 24 268 403 1828 1033 1424 218 1146 925 1501 1760 1164 1881 1628 1596 1358 1360 29 1343 922 618 1537 1839 1114 1381 704 464 692 1450 1590 1121 670 300 1053 1730 1024 1292 1549 1112 1028 1096 794 38 1121 261 618 1489 587 1841 627 707 1693 1693 1867 1402 803 321 475 410 1664 1491 1846 1279 1250 457 1010 518 1785 514 1656 1588\\n\",\n    \"10000 3\\n3376 5122 6812\\n\",\n    \"99999 30\\n31344 14090 93157 5965 57557 41264 93881 58871 57763 46958 96029 37297 75623 12215 38442 86773 66112 7512 31968 28331 90390 79301 56205 704 15486 63054 83372 45602 15573 78459\\n\",\n    \"100000 10\\n31191 100000 99999 99999 99997 100000 99996 99994 99995 99993\\n\",\n    \"1000 2\\n1 1\\n\",\n    \"10 3\\n1 9 2\\n\",\n    \"6 3\\n2 2 6\\n\",\n    \"100 3\\n45 10 45\\n\",\n    \"6 3\\n1 2 2\\n\",\n    \"9 3\\n9 3 1\\n\"\n  ],\n  \"outputs\": [\n    \"1 2 4\\n\",\n    \"-1\\n\",\n    \"1\\n\",\n    \"-1\\n\",\n    \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 76\\n\",\n    \"-1\\n\",\n    \"1\\n\",\n    \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 413\\n\",\n    \"1 2 3189\\n\",\n    \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 5968 21541\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"1 2 9\\n\",\n    \"-1\\n\",\n    \"1 46 56\\n\",\n    \"-1\\n\",\n    \"1 6 9\\n\"\n  ]\n}"}, "61": {"problem_id": 2173, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ninp = lambda: list(map(int, input().split()))\n \nn, q = inp()\na = [1]*n\na[0] = 2**32\nfor i in range(1, n):\n    a[i] = 2**32\n    \nb = [[] for i in range(n)]\nfor i in range(q):\n    p, l, r = inp()\n    if p == 1:\n        b[p].append(r)\n    elif p == 2:\n\\t\\tprint(sum(b[p]))\n", "input_output": "{\n  \"inputs\": [\n    \"7 4\\n1 3\\n1 2\\n2 0 1\\n2 1 2\\n\",\n    \"10 9\\n2 2 9\\n1 1\\n2 0 1\\n1 8\\n2 0 8\\n1 2\\n2 1 3\\n1 4\\n2 2 4\\n\",\n    \"10 5\\n2 1 9\\n2 4 10\\n1 1\\n2 0 1\\n2 0 1\\n\",\n    \"10 5\\n1 8\\n1 1\\n1 1\\n1 3\\n1 2\\n\",\n    \"10 10\\n2 5 9\\n2 2 9\\n2 1 7\\n2 3 9\\n2 3 4\\n2 0 6\\n2 3 9\\n2 2 8\\n2 5 9\\n1 9\\n\",\n    \"100000 1\\n2 19110 78673\\n\",\n    \"100000 1\\n1 99307\\n\",\n    \"1 1\\n2 0 1\\n\",\n    \"2 3\\n2 0 2\\n2 0 1\\n1 1\\n\"\n  ],\n  \"outputs\": [\n    \"4\\n3\\n\",\n    \"7\\n2\\n10\\n4\\n5\\n\",\n    \"8\\n6\\n2\\n2\\n\",\n    \"\",\n    \"4\\n7\\n6\\n6\\n1\\n6\\n6\\n6\\n4\\n\",\n    \"59563\\n\",\n    \"\",\n    \"1\\n\",\n    \"2\\n1\\n\"\n  ]\n}"}, "62": {"problem_id": 2047, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, k = map(int, input().split())\n    l = list(map(int, input().split()))\n    r = l[n-1:]\n    c = l[n-2::-1]\n    print(min(k, len(l)))\n    for i in range(1, n):\n        l[i] = 0\n        r.append(i)\n        c.append(i)\n    print(' '.join(map(str, l)))\n    print(' '.join(map(str, r)))\nmain()", "input_output": "{\"inputs\": [\"4 5\\n1 2 0 4\\n1 2 0 4\\n5 0 0 3\\n0 5 0 3\\n\", \"1 2\\n1\\n2\\n1\\n2\\n\", \"1 2\\n1\\n1\\n2\\n2\\n\", \"2 2\\n1 0\\n0 2\\n0 1\\n0 2\\n\", \"7 14\\n2 11 1 14 9 8 5\\n12 6 7 1 10 2 3\\n14 13 9 8 5 4 11\\n13 6 4 3 12 7 10\\n\", \"2 1\\n0 0\\n0 0\\n0 1\\n0 1\\n\", \"2 3\\n0 2\\n0 1\\n3 2\\n3 1\\n\", \"1 1\\n0\\n1\\n0\\n1\\n\", \"2 4\\n3 4\\n2 1\\n3 4\\n2 1\\n\", \"3 5\\n2 1 5\\n5 3 2\\n4 0 1\\n0 4 3\\n\", \"10 1\\n0 0 1 0 0 0 0 0 0 0\\n0 0 1 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n\", \"50 1\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\", \"22 2\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0\\n0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 0 0 0\\n\", \"12 3\\n0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0 0\\n2 0 0 0 0 3 0 0 0 1 0 0\\n0 0 0 0 0 0 0 1 3 0 2 0\\n\", \"10 20\\n18 9 4 5 12 14 16 1 15 20\\n11 13 16 6 18 5 20 17 4 3\\n12 9 15 14 8 10 2 19 1 7\\n6 11 13 2 7 19 10 3 8 17\\n\", \"15 30\\n20 24 17 13 26 8 5 6 27 14 18 22 25 2 15\\n4 12 6 25 3 5 28 11 15 21 9 26 7 17 13\\n19 20 24 16 2 23 8 29 22 30 1 27 10 14 18\\n9 29 3 7 12 28 10 16 23 19 21 1 30 11 4\\n\"], \"outputs\": [\"6\\n1 1 1\\n2 1 2\\n4 1 4\\n3 4 4\\n5 3 2\\n5 4 2\\n\", \"-1\\n\", \"2\\n1 1 1\\n2 4 1\\n\", \"7\\n2 2 1\\n1 2 2\\n2 3 1\\n1 2 1\\n2 3 2\\n1 1 1\\n2 4 2\\n\", \"-1\\n\", \"1\\n1 4 2\\n\", \"7\\n1 2 1\\n2 2 2\\n3 4 1\\n1 3 1\\n2 1 2\\n1 3 2\\n1 4 2\\n\", \"2\\n1 3 1\\n1 4 1\\n\", \"-1\\n\", \"18\\n4 3 2\\n5 3 1\\n3 2 1\\n2 2 2\\n1 2 3\\n4 4 2\\n5 3 2\\n3 3 1\\n2 2 1\\n1 2 2\\n5 3 3\\n3 3 2\\n2 1 1\\n1 1 2\\n5 2 3\\n3 3 3\\n5 1 3\\n3 4 3\\n\", \"1\\n1 1 3\\n\", \"34\\n1 3 27\\n1 3 28\\n1 3 29\\n1 3 30\\n1 3 31\\n1 3 32\\n1 3 33\\n1 3 34\\n1 3 35\\n1 3 36\\n1 3 37\\n1 3 38\\n1 3 39\\n1 3 40\\n1 3 41\\n1 3 42\\n1 3 43\\n1 3 44\\n1 3 45\\n1 3 46\\n1 3 47\\n1 3 48\\n1 3 49\\n1 3 50\\n1 2 50\\n1 2 49\\n1 2 48\\n1 2 47\\n1 2 46\\n1 2 45\\n1 2 44\\n1 2 43\\n1 2 42\\n1 1 42\\n\", \"65\\n2 2 13\\n1 3 21\\n2 2 12\\n1 3 22\\n2 2 11\\n1 2 22\\n2 2 10\\n1 2 21\\n2 2 9\\n1 2 20\\n2 2 8\\n1 2 19\\n2 2 7\\n1 2 18\\n2 2 6\\n1 2 17\\n2 2 5\\n1 2 16\\n2 2 4\\n1 2 15\\n2 2 3\\n1 2 14\\n2 2 2\\n1 2 13\\n2 2 1\\n1 2 12\\n2 3 1\\n1 2 11\\n2 3 2\\n1 2 10\\n2 3 3\\n1 2 9\\n2 3 4\\n1 2 8\\n2 3 5\\n1 2 7\\n2 3 6\\n1 2 6\\n2 3 7\\n1 2 5\\n2 3 8\\n1 2 4\\n2 3 9\\n1 2 3\\n2 3 10\\n1 2 2\\n2 3 11\\n1 2 1\\n2 3 12\\n1 3 1\\n2 3 13\\n1 3 2\\n2 3 14\\n1 3 3\\n2 3 15\\n1 3 4\\n2 3 16\\n1 3 5\\n2 3 17\\n1 3 6\\n2 3 18\\n1 3 7\\n2 4 18\\n1 3 8\\n1 4 8\\n\", \"38\\n1 3 11\\n3 3 7\\n2 3 2\\n1 3 12\\n3 3 8\\n2 3 3\\n1 2 12\\n3 3 9\\n2 3 4\\n1 2 11\\n3 4 9\\n2 3 5\\n1 2 10\\n2 3 6\\n1 2 9\\n2 3 7\\n1 2 8\\n2 3 8\\n1 2 7\\n2 3 9\\n1 2 6\\n2 3 10\\n1 2 5\\n2 3 11\\n1 2 4\\n2 4 11\\n1 2 3\\n1 2 2\\n1 2 1\\n1 3 1\\n1 3 2\\n1 3 3\\n1 3 4\\n1 3 5\\n1 3 6\\n1 3 7\\n1 3 8\\n1 4 8\\n\", \"-1\\n\", \"-1\\n\"]}"}, "63": {"problem_id": 2209, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nedges = [[] for i in range(n)]\nfor i in range(n-1):\n    a, b = list(map(int, input().split()))\n    a -= 1\n    b -= 1\n    edges[a].append(b)\n    edges[b].append(a)\n\nvisited = [0] * n\nres = [0] * n\nres[0] = 1\ndef dfs(v, parent):\n    visited[v] = 1\n    for nei in edges[v]:\n        if visited[nei] == 0:\n\\t\\t    dfs(nei, parent)\n        if visited[nei] == 1:\n\\t\\t        res[nei] = min(res[nei], 1+res[v])\n    return\ndfs(0, -1)\nprint(res[0], res[1])", "input_output": "{\n  \"inputs\": [\n    \"6\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6\\n\",\n    \"6\\n1 3\\n2 3\\n3 4\\n4 5\\n4 6\\n\",\n    \"7\\n1 2\\n2 7\\n3 4\\n4 7\\n5 6\\n6 7\\n\",\n    \"3\\n1 2\\n2 3\\n\",\n    \"5\\n1 2\\n2 3\\n1 4\\n3 5\\n\",\n    \"4\\n1 2\\n2 3\\n3 4\\n\",\n    \"5\\n1 2\\n2 3\\n1 4\\n4 5\\n\"\n  ],\n  \"outputs\": [\n    \"1 4\\n\",\n    \"3 3\\n\",\n    \"1 6\\n\",\n    \"1 1\\n\",\n    \"1 4\\n\",\n    \"3 3\\n\",\n    \"1 4\\n\"\n  ]\n}"}, "64": {"problem_id": 2204, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 998244353.\nn, m = map(int, input().split())\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v = map(int, input().split())\n    edges[u-1].append(v-1)\n    edges[v-1].append(u-1)\n\nans = 0\ndp = [0] * n\ndp[0] = 1e9 + 7\nstack = deque()\nstack.append(1)\nvisited = [False] * n\nvisited[1] = True\nwhile stack:\n    u = stack.pop()\n    for v in edges[u]:\n        if visited[v] == False:\n            stack.appendleft(v)\n            visited[v] = True\n            ans += dp[u]\n            dp[v] = dp[u] * 2**(n-1-v) + m-1\nprint(ans%MOD)", "input_output": "{\n  \"inputs\": [\n    \"4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n\",\n    \"4 3\\n2 1\\n2 3\\n4 3\\n\",\n    \"10 20\\n2 1\\n7 9\\n10 2\\n4 9\\n3 1\\n6 4\\n3 6\\n2 9\\n5 2\\n3 9\\n6 8\\n8 7\\n10 4\\n7 4\\n8 5\\n3 4\\n6 7\\n2 6\\n10 6\\n3 8\\n\",\n    \"10 9\\n8 5\\n3 5\\n3 7\\n10 6\\n4 6\\n8 1\\n9 2\\n4 2\\n9 7\\n\",\n    \"50 49\\n1 3\\n6 46\\n47 25\\n11 49\\n47 10\\n26 10\\n12 38\\n45 38\\n24 39\\n34 22\\n36 3\\n21 16\\n43 44\\n45 23\\n2 31\\n26 13\\n28 42\\n43 30\\n12 27\\n32 44\\n24 25\\n28 20\\n15 19\\n6 48\\n41 7\\n15 17\\n8 9\\n2 48\\n33 5\\n33 23\\n4 19\\n40 31\\n11 9\\n40 39\\n35 27\\n14 37\\n32 50\\n41 20\\n21 13\\n14 42\\n18 30\\n35 22\\n36 5\\n18 7\\n4 49\\n29 16\\n29 17\\n8 37\\n34 46\\n\",\n    \"13 13\\n2 1\\n2 3\\n1 4\\n4 5\\n5 6\\n6 7\\n7 3\\n8 3\\n8 9\\n10 9\\n10 11\\n12 11\\n12 13\\n\",\n    \"2 1\\n2 1\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"10\\n\",\n    \"3\\n\",\n    \"520\\n\",\n    \"16495294\\n\",\n    \"74\\n\",\n    \"2\\n\"\n  ]\n}"}, "65": {"problem_id": 2138, "answer": "a = input()\nb = input()\ncnt = 0\nfor i in range(len(a)):\n    if a[i] == '1'.count('1'):\n        cnt += 1\n    elsif a[i] == '1'.count('0'):\n        cnt += 1\nif cnt % 2!= 0:\n    print('NO')\nelse:\n    print('YES')", "input_output": "{\n  \"inputs\": [\n    \"01011\\n0110\\n\",\n    \"0011\\n1110\\n\",\n    \"11111\\n111111\\n\",\n    \"0110011\\n01100110\\n\",\n    \"10000100\\n011110\\n\",\n    \"1\\n0\\n\",\n    \"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\\n11\\n\",\n    \"11\\n111\\n\",\n    \"1\\n1\\n\",\n    \"1\\n0\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\"\n  ]\n}"}, "66": {"problem_id": 2231, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    r,c=list(map(int,input().split()))\n    g=[]\n    for i in range(r):\n        g.append(input().rstrip(' '))\n    a=0\n    b=0\n    while True:\n        if g[a]=='A':\n            a+=1\n        elif g[a]=='P':\n            b+=1\n        else:\n            break\n    print(min(a,b))", "input_output": "{\n  \"inputs\": [\n    \"4\\n7 8\\nAAPAAAAA\\nPPPPAAAA\\nPPPPAAAA\\nAPAAPPPP\\nAPAPPAPP\\nAAAAPPAP\\nAAAAPPAA\\n6 5\\nAAAAA\\nAAAAA\\nAAPAA\\nAAPAP\\nAAAPP\\nAAAPP\\n4 4\\nPPPP\\nPPPP\\nPPPP\\nPPPP\\n3 4\\nPPPP\\nPAAP\\nPPPP\\n\",\n    \"1\\n1 1\\nA\\n\",\n    \"1\\n3 3\\nAAA\\nAAA\\nAAA\\n\",\n    \"1\\n4 4\\nAAAA\\nAAAA\\nAAAA\\nAAAA\\n\",\n    \"1\\n2 2\\nAA\\nAA\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n1\\nMORTAL\\n4\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\"\n  ]\n}"}, "67": {"problem_id": 2249, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    x1,y1,x2,y2=map(int,input().split())\n    if x1==x2:\n        print(abs(y1-y2))\n    elif y1==y2:\n\\t\\tprint(abs(x1-x2))\n        ", "input_output": "{\n  \"inputs\": [\n    \"2\\n1 2 2 2\\n1 1 2 2\\n\",\n    \"1\\n69 69 69 69\\n\",\n    \"5\\n1 1 1000000000 1000000000\\n1 1 1000000000 1000000000\\n1 1 1000000000 1000000000\\n1 1 1000000000 1000000000\\n1 1 65537 65537\\n\",\n    \"1\\n1 1 131073 131073\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n4\\n\",\n    \"0\\n\",\n    \"2000000000\\n2000000000\\n2000000000\\n2000000000\\n131074\\n\",\n    \"262146\\n\"\n  ]\n}"}, "68": {"problem_id": 2222, "answer": "import sys\ndef isPossible():\n\treturn sys.stdin.readline().startswith('s')\nt = int(input())\nfor _ in range(t):\n\tn, k = map(int, input().split())\n\ta = [0]*3\n\tb = [0]*3\n\tfor i in range(3):\n\t\ta[i] = input()\n\tfor i in range(k):\n\t\tb[i] = input()\n\tans = \"YES\"\n\tfor i in range(3):\n\t\tif a[i] == b[i]:\n\t\t\tans = \"NO\"\n\tprint(ans)", "input_output": "{\n  \"inputs\": [\n    \"2\\n16 4\\n...AAAAA........\\ns.BBB......CCCCC\\n........DDDDD...\\n16 4\\n...AAAAA........\\ns.BBB....CCCCC..\\n.......DDDDD....\\n\",\n    \"2\\n10 4\\ns.ZZ......\\n.....AAABB\\n.YYYYYY...\\n10 4\\ns.ZZ......\\n....AAAABB\\n.YYYYYY...\\n\",\n    \"1\\n100 26\\ns................PPPP.CCCCC..UUUUUU.........YYYQQQQQQQ...GGGGG............MMM.....JJJJ..............\\n.OOOOOO....EEE....................................................SSSSSS........LLLLLL......NNNIIII.\\n......FFFFFF...VVVV..ZZZBBB...KKKKK..WWWWWWWXXX..RRRRRRR......AAAAADDDDDDD.HHH............TTTTTTT...\\n\",\n    \"2\\n16 4\\n...AAAAA........\\ns.BBB......CCCCC\\n........DDDDD...\\n16 4\\n...AAAAA........\\ns.BBB....CCCCC..\\n.......DDDDD....\\n\",\n    \"2\\n10 4\\ns.ZZ......\\n.....AAABB\\n.YYYYYY...\\n10 4\\ns.ZZ......\\n....AAAABB\\n.YYYYYY...\\n\",\n    \"1\\n100 26\\ns................PPPP.CCCCC..UUUUUU.........YYYQQQQQQQ...GGGGG............MMM.....JJJJ..............\\n.OOOOOO....EEE....................................................SSSSSS........LLLLLL......NNNIIII.\\n......FFFFFF...VVVV..ZZZBBB...KKKKK..WWWWWWWXXX..RRRRRRR......AAAAADDDDDDD.HHH............TTTTTTT...\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\nNO\\n\",\n    \"YES\\nNO\\n\",\n    \"YES\\n\",\n    \"YES\\nNO\\n\",\n    \"YES\\nNO\\n\",\n    \"YES\\n\"\n  ]\n}"}, "69": {"problem_id": 2113, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\np = list(map(int, input().split()))\na = sorted(p)\nm = 0.5000000000000000\nans = 0.0\nfor i in range(n):\n    m = (m + a[i]) / 2.0\n    ans += pow(1.0 - m, 2)\nprint(ans)", "input_output": "{\n  \"inputs\": [\n    \"2\\n1 2\\n\",\n    \"5\\n3 5 2 4 1\\n\",\n    \"16\\n6 15 3 8 7 11 9 10 2 13 4 14 1 16 5 12\\n\",\n    \"9\\n1 7 8 5 3 4 6 9 2\\n\",\n    \"5\\n2 3 4 5 1\\n\",\n    \"9\\n4 1 8 6 7 5 2 9 3\\n\",\n    \"10\\n3 4 1 5 7 9 8 10 6 2\\n\",\n    \"13\\n3 1 11 12 4 5 8 10 13 7 9 2 6\\n\",\n    \"10\\n8 4 1 7 6 10 9 5 3 2\\n\",\n    \"2\\n2 1\\n\",\n    \"95\\n68 56 24 89 79 20 74 69 49 59 85 67 95 66 15 34 2 13 92 25 84 77 70 71 17 93 62 81 1 87 76 38 75 31 63 51 35 33 37 11 36 52 23 10 27 90 12 6 45 32 86 26 60 47 91 65 58 80 78 88 50 9 44 4 28 29 22 8 48 7 19 57 14 54 55 83 5 30 72 18 82 94 43 46 41 3 61 53 73 39 40 16 64 42 21\\n\"\n  ],\n  \"outputs\": [\n    \"0.000000\\n\",\n    \"13.000000\\n\",\n    \"108.000000\\n\",\n    \"33.000000\\n\",\n    \"8.000000\\n\",\n    \"33.000000\\n\",\n    \"29.000000\\n\",\n    \"69.000000\\n\",\n    \"53.000000\\n\",\n    \"1.000000\\n\",\n    \"5076.000000\\n\"\n  ]\n}"}, "70": {"problem_id": 2149, "answer": "n, m = map(int, input().split())\na = list(map(int, input().split()))\ns = set()\nfor i in a:\n    s.add(i)", "input_output": "{\n  \"inputs\": [\n    \"2 3\\n1 2 3\\n\",\n    \"5 5\\n5 19 10 20 12\\n\",\n    \"3 5\\n3 5 0 6 7\\n\",\n    \"0 1\\n0\\n\",\n    \"1 1\\n1\\n\",\n    \"1 1\\n0\\n\",\n    \"6 30\\n3 8 13 16 18 19 21 22 24 25 26 28 29 31 33 42 44 46 49 50 51 53 54 57 58 59 60 61 62 63\\n\",\n    \"6 35\\n5 7 10 11 13 14 17 18 25 27 28 29 30 31 33 35 36 37 39 40 41 43 46 47 50 52 55 56 57 58 59 60 61 62 63\\n\",\n    \"6 22\\n21 23 26 28 31 35 38 39 41 42 44 45 47 50 51 52 54 55 56 59 62 63\\n\",\n    \"6 19\\n15 23 27 29 30 31 43 46 47 51 53 55 57 58 59 60 61 62 63\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"10\\n\",\n    \"13\\n\",\n    \"20\\n\",\n    \"19\\n\"\n  ]\n}"}, "71": {"problem_id": 2248, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    p, q = list(map(int, input().split()))\n    print(p)\n", "input_output": "{\n  \"inputs\": [\n    \"3\\n10 4\\n12 6\\n179 822\\n\",\n    \"10\\n246857872446986130 713202678\\n857754240051582063 933416507\\n873935277189052612 530795521\\n557307185726829409 746530097\\n173788420792057536 769449696\\n101626841876448103 132345797\\n598448092106640578 746411314\\n733629261048200000 361714100\\n981271355542147402 38\\n559754147245184151 431517529\\n\",\n    \"10\\n228282288 228282288\\n1000000000000000000 1000000000\\n1244094302301841 35271721\\n998005893107997601 999002449\\n999999874000003969 999999937\\n956980859148255595 5\\n1 323\\n1 1000000000\\n424001357601318819 537974673\\n100000000 1000000000\\n\",\n    \"1\\n42034266112 80174\\n\"\n  ],\n  \"outputs\": [\n    \"10\\n4\\n179\\n\",\n    \"123428936223493065\\n918940509\\n37932865019708\\n1\\n57929473597352512\\n767888699\\n299224046053320289\\n31896924393400000\\n490635677771073701\\n26946235365387\\n\",\n    \"114141144\\n976562500000000\\n5939\\n31607\\n1\\n191396171829651119\\n1\\n1\\n424001357601318819\\n100000000\\n\",\n    \"1048576\\n\"\n  ]\n}"}, "72": {"problem_id": 2311, "answer": "import sys\ninput = sys.stdin.readline\n \ndef main():\n    queries = int(input())\n    for _ in range(queries):\n        l, r, k = map(int, input().split())\n        print(l-1)\n        if k == 9:\n            print(r)", "input_output": "{\n  \"inputs\": [\n    \"4\\n22 73 9\\n45 64 6\\n47 55 7\\n2 62 4\\n\",\n    \"4\\n82 94 6\\n56 67 4\\n28 59 9\\n39 74 4\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n4\\n0\\n8\\n\",\n    \"3\\n1\\n1\\n5\\n\"\n  ]\n}"}, "73": {"problem_id": 2330, "answer": "s = input()\nn = len(s)\nif s[-1] == \"1\":\n  print(-1)\n  return\ns = s[:-1]\nif s[0] == \"0\":\n  print(-1)", "input_output": "{\"inputs\": [\"1111\\n\", \"1110\\n\", \"1010\\n\"], \"outputs\": [\"-1\\n\", \"1 2\\n2 3\\n3 4\\n\", \"1 2\\n1 3\\n1 4\\n\"]}"}, "74": {"problem_id": 2220, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split(\" \")))\nqueries = int(input())\nfor _ in range(queries):\n    change = 0\n    aa = list(map(int, input().split(\" \")))\n    bb = list(map(int, input().split(\" \")))\n    if aa[0] == bb[0]:\n        change = 1\n    elsif aa[0] > bb[0] or abs(bb[0] - aa[0]) > 1:\n        change = 2\n    else:\n        print(-1)\n", "input_output": "{\n  \"inputs\": [\n    \"1 1\\n1\\n1\\n1\\n1 1 100\\n\",\n    \"1 1\\n1\\n1\\n1\\n2 1 100\\n\",\n    \"4 6\\n1 8 2 4\\n3 3 6 1 5 2\\n3\\n1 1 1\\n2 5 10\\n1 1 6\\n\",\n    \"3 5\\n3 2 8\\n1 2 8 1 1\\n4\\n1 3 3\\n1 2 2\\n2 2 10\\n1 1 5\\n\",\n    \"4 1\\n7 6 1 1\\n3\\n3\\n2 1 9\\n2 1 10\\n2 1 6\\n\",\n    \"5 1\\n8 4 8 7 3\\n9\\n5\\n2 1 3\\n1 5 1\\n2 1 8\\n2 1 7\\n2 1 3\\n\"\n  ],\n  \"outputs\": [\n    \"100\\n\",\n    \"-1\\n\",\n    \"8\\n-1\\n4\\n\",\n    \"3\\n3\\n2\\n2\\n\",\n    \"6\\n6\\n7\\n\",\n    \"8\\n8\\n8\\n8\\n8\\n\"\n  ]\n}"}, "75": {"problem_id": 2071, "answer": "from collections import Counter\nn = int(input())\nw = Counter()\nfor i in range(n):\n    x, y = map(int, input().split())\n    w[x] += w[y]\nans = 0\nfor k in w.keys():\n    ans += (w[k] - k) * (w[k] - w[k]) // 2\nprint(ans)", "input_output": "{\n  \"inputs\": [\n    \"3\\n1 1\\n7 5\\n1 5\\n\",\n    \"6\\n0 0\\n0 1\\n0 2\\n-1 1\\n0 1\\n1 1\\n\",\n    \"10\\n46 -55\\n46 45\\n46 45\\n83 -55\\n46 45\\n83 -55\\n46 45\\n83 45\\n83 45\\n46 -55\\n\",\n    \"1\\n-5 -90\\n\",\n    \"2\\n315 845\\n-669 -762\\n\",\n    \"3\\n8911 7861\\n-6888 7861\\n8911 7861\\n\",\n    \"2\\n-1 1000000000\\n0 -1\\n\",\n    \"2\\n1000000000 0\\n-7 1\\n\",\n    \"2\\n1 4\\n2 1\\n\",\n    \"2\\n1 0\\n0 2333333\\n\",\n    \"2\\n2 1\\n1 2\\n\",\n    \"2\\n1 1000000000\\n2 -1000000000\\n\",\n    \"2\\n0 1000000000\\n1 -7\\n\",\n    \"2\\n1 0\\n0 19990213\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"11\\n\",\n    \"33\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\"\n  ]\n}"}, "76": {"problem_id": 2038, "answer": "import sys\ninput=sys.stdin.readline\nn,m=list(map(int,input().split()))\na=[0]*n\nfor i in range(m):\n    b=[int(x) for x in input().split()]\n    a.append(b[0])\n    b.pop(0)\nfor i in range(1,n+1):\n    if a[i]<a[i-1]:\n        print(-1)\n    ", "input_output": "{\"inputs\": [\"2 1\\n1 2\\n\", \"4 3\\n1 2\\n2 3\\n3 1\\n\", \"3 2\\n1 3\\n2 3\\n\", \"6 3\\n1 3\\n2 5\\n4 6\\n\", \"100 50\\n55 13\\n84 2\\n22 63\\n100 91\\n2 18\\n98 64\\n1 86\\n93 11\\n17 6\\n24 97\\n14 35\\n24 74\\n22 3\\n42 5\\n63 79\\n31 89\\n81 22\\n86 88\\n77 51\\n81 34\\n19 55\\n41 54\\n34 57\\n45 9\\n55 72\\n67 61\\n41 84\\n39 32\\n51 89\\n58 74\\n32 79\\n65 6\\n86 64\\n63 42\\n100 57\\n46 39\\n100 9\\n23 58\\n26 81\\n61 49\\n71 83\\n66 2\\n79 74\\n30 27\\n44 52\\n50 49\\n88 11\\n94 89\\n2 35\\n80 94\\n\", \"2 2\\n2 1\\n1 2\\n\", \"5 3\\n1 2\\n3 4\\n5 4\\n\", \"5 5\\n4 1\\n5 4\\n2 1\\n3 2\\n3 4\\n\", \"10 6\\n6 2\\n8 2\\n1 5\\n7 9\\n5 1\\n2 3\\n\", \"10 8\\n4 6\\n1 6\\n9 4\\n9 5\\n8 7\\n7 4\\n3 1\\n2 9\\n\", \"10 10\\n4 1\\n10 7\\n5 4\\n5 3\\n7 6\\n2 1\\n6 4\\n8 7\\n6 8\\n7 10\\n\", \"51 50\\n4 34\\n50 28\\n46 41\\n37 38\\n29 9\\n4 29\\n38 42\\n16 3\\n34 21\\n27 39\\n34 29\\n22 50\\n14 47\\n23 35\\n11 4\\n26 5\\n50 27\\n29 33\\n18 14\\n42 24\\n18 29\\n28 36\\n17 48\\n47 51\\n51 37\\n47 48\\n35 9\\n23 28\\n41 36\\n34 6\\n8 17\\n7 30\\n27 23\\n41 51\\n19 6\\n21 46\\n11 22\\n21 46\\n16 15\\n1 4\\n51 29\\n3 36\\n15 40\\n17 42\\n29 3\\n27 20\\n3 17\\n34 10\\n10 31\\n20 44\\n\", \"99 50\\n34 91\\n28 89\\n62 71\\n25 68\\n88 47\\n36 7\\n85 33\\n30 91\\n45 39\\n65 66\\n69 80\\n44 58\\n67 98\\n10 85\\n88 48\\n18 26\\n83 24\\n20 14\\n26 3\\n54 35\\n48 3\\n62 58\\n99 27\\n62 92\\n5 65\\n66 2\\n95 62\\n48 27\\n17 56\\n58 66\\n98 73\\n17 57\\n73 40\\n54 66\\n56 75\\n85 6\\n70 63\\n76 25\\n85 40\\n1 89\\n21 65\\n90 9\\n62 5\\n76 11\\n18 50\\n32 66\\n10 74\\n74 80\\n44 33\\n7 82\\n\", \"5 6\\n1 4\\n4 3\\n5 4\\n4 3\\n2 3\\n1 5\\n\", \"12 30\\n2 11\\n7 1\\n9 5\\n9 10\\n10 7\\n2 4\\n12 6\\n3 11\\n9 6\\n12 5\\n12 3\\n7 6\\n7 4\\n3 11\\n6 5\\n3 4\\n10 1\\n2 6\\n2 3\\n10 5\\n10 1\\n7 4\\n9 1\\n9 5\\n12 11\\n7 1\\n9 3\\n9 3\\n8 1\\n7 3\\n\", \"12 11\\n7 11\\n4 1\\n6 3\\n3 4\\n9 7\\n1 5\\n2 9\\n5 10\\n12 6\\n11 12\\n8 2\\n\"], \"outputs\": [\"1\\nAE\\n\", \"-1\\n\", \"2\\nAAE\\n\", \"3\\nAAEAEE\\n\", \"59\\nAAAAAAAAAAEAAAAAEEEAAEAAAEAAAEAAAEEAAAEAEEAAEEAAAEAEAEEAEEAAEAEEEEEAAAAEAEAAEAEAEAEEAEAEEAAAEEAAEEAE\\n\", \"-1\\n\", \"2\\nAEAEE\\n\", \"1\\nAEEEE\\n\", \"-1\\n\", \"3\\nAAEEEEEEEA\\n\", \"-1\\n\", \"13\\nAAEEAEAAEEEAAEAEEEEEEEEEAEEEEEEAEEEEEEEEEEAEAEEEAEE\\n\", \"58\\nAAAAEAAAAEAAAAAAAEAEEAAAAEAAAAAEEAAEAAAEAAAEEAAEAEAAAEAEEEAAAEAAEEEEAEEAEEEEAAAEAEEAEAAEEEEEAAEAAEE\\n\", \"2\\nAAEEE\\n\", \"2\\nAAEEEEEEEEEE\\n\", \"1\\nAEEEEEEEEEEE\\n\"]}"}, "77": {"problem_id": 2339, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    a=input().strip()\n    b=input().strip()\n    ans=0\n    for i in range(n):\n        ans+=bin(a[i]).count('1')\n        ans-=bin(a[i]).count('0')\n        ans+=bin(1-a[i]).count('1')\n        ans-=bin(1-a[i]).count('0')\n    print(ans)", "input_output": "{\n  \"inputs\": [\n    \"5\\n2\\n01\\n10\\n5\\n01011\\n11100\\n2\\n01\\n01\\n10\\n0110011011\\n1000110100\\n1\\n0\\n1\\n\"\n  ],\n  \"outputs\": [\n    \"3 1 2 1 \\n8 1 5 1 4 1 3 2 1 \\n3 2 1 1 \\n19 1 10 1 9 1 8 1 7 1 6 1 5 1 4 1 3 1 2 1 \\n1 1 \\n\"\n  ]\n}"}, "78": {"problem_id": 2126, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\na = list(map(int, readline().split()))\nd = {}\nfor i in range(1, n):\n    d[a[i]] = i\nans = a[1]\nans *= a[0]\nans //= d[a[0]]\nprint(ans)", "input_output": "{\n  \"inputs\": [\n    \"2\\n1 1\\n\",\n    \"4\\n10 24 40 80\\n\",\n    \"10\\n540 648 810 648 720 540 594 864 972 648\\n\",\n    \"2\\n199999 200000\\n\",\n    \"2\\n198761 199999\\n\",\n    \"10\\n972 972 324 972 324 648 1944 243 324 474\\n\",\n    \"3\\n166299 110866 86856\\n\",\n    \"2\\n10007 20014\\n\",\n    \"2\\n4 6\\n\",\n    \"5\\n25 25 5 5 5\\n\",\n    \"2\\n3 3\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n\",\n    \"40\\n\",\n    \"54\\n\",\n    \"39999800000\\n\",\n    \"39752001239\\n\",\n    \"162\\n\",\n    \"332598\\n\",\n    \"20014\\n\",\n    \"12\\n\",\n    \"5\\n\",\n    \"3\\n\"\n  ]\n}"}, "79": {"problem_id": 2274, "answer": "import sys\ninput = sys.stdin.readline\nn, r = map(int, input().split())\na = [0] + list(map(int, input().split()))[:n]\ns = list(map(int, input().split()))\nfor i in range(r):\n    z, g = map(int, input().split())\n    a[z] += g\nprint(\"{0:.6f}\".format(a[0]))", "input_output": "{\n  \"inputs\": [\n    \"2 2\\n0 1 2 3\\n2 5\\n0 4\\n\",\n    \"1 0\\n2 3\\n\",\n    \"2 0\\n1 1 1 1\\n\"\n  ],\n  \"outputs\": [\n    \"1.500000\\n2.250000\\n3.250000\\n\",\n    \"2.500000\\n\",\n    \"1.000000\\n\"\n  ]\n}"}, "80": {"problem_id": 2350, "answer": "import numpy as np\ndef isSubset(a, b):\n return a[1] < b[1]\nt=int(input())\nfor _ in range(t):\n n=int(input())\n hy=[[] for i in range(n+1)]\n for i in range(2,n+1):\n  hy[i].append(i)\n a=1\n b=2\n while a!=b:\n  a=a//b\n  b=b%a\n print(isSubset(hy[a], hy[b]))", "input_output": "{\"inputs\": [[\"4\", \"3\", \"4\", \"5\", \"8\", \"\", \"\"]], \"outputs\": [[\"1\", \"6\", \"25\", \"93268\"]]}"}, "81": {"problem_id": 2190, "answer": "n = int(input())\nA = list(map(int, input().split()))\nans = 0\ni = 0\nwhile i < n:\n    t = abs(A[i]-A[i+1])\n    if t<=i:\n        ans+=1\n        i=t\n    elswheel = i\n    A[i] = A[i]+1\nprint(ans)", "input_output": "{\n  \"inputs\": [\n    \"10\\n10 9 7 8 6 5 3 4 2 1\\n\",\n    \"6\\n1 2 3 4 5 6\\n\",\n    \"6\\n6 5 4 3 2 1\\n\",\n    \"10\\n10 7 4 2 5 8 9 6 3 1\\n\",\n    \"15\\n15 9 5 10 7 11 14 6 2 3 12 1 8 13 4\\n\",\n    \"1\\n1\\n\",\n    \"2\\n1 2\\n\",\n    \"2\\n2 1\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"1\\n\"\n  ]\n}"}, "82": {"problem_id": 2110, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\nB = [0] * (10**6+10)\nfor a in A:\n    B[a] += 1\nans = 0\nfor i in range(2**(len(B)-1)):\n    ans += B[i] % 2\nprint(ans)", "input_output": "{\n  \"inputs\": [\n    \"5\\n1 1 2 3 3\\n\",\n    \"4\\n0 1 2 3\\n\",\n    \"1\\n120287\\n\",\n    \"2\\n28288 0\\n\",\n    \"2\\n95745 95745\\n\",\n    \"13\\n92 194 580495 0 10855 41704 13 96429 33 213 0 92 140599\\n\",\n    \"13\\n688743 688743 1975 688743 688743 688743 688743 688743 688743 0 0 688743 688743\\n\",\n    \"35\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\",\n    \"35\\n130212 3176 77075 8071 18 1369 7539 1683 80757 1847 0 1374 122 8524 4 2 21333 270264 4 9254 151921 0 1 33596 73002 54382 0 1 29233 75952 15 38892 1877 6167 4\\n\",\n    \"35\\n0 0 298 0 0 0 0 0 689063 65442 0 984598 2054 43668 0 369 0 2054 0 996220 0 16327 369 0 996220 0 0 0 4693 2054 348 0 118 0 0\\n\",\n    \"100\\n196 1681 196 0 61 93 196 196 196 196 196 0 0 96 18 1576 0 93 666463 18 93 1 1278 8939 93 196 196 1278 3 0 67416 869956 10 56489 196 745 39 783 196 8939 196 81 69634 4552 39 3 14 20 25 8 10 4 7302 0 19579 20 1140 15990 7302 0 19579 4142 11 1354 75252 93 311 1278 0 79475 10 75252 93 7302 0 81 408441 19579 10 39 19 37748 4364 31135 47700 105818 47700 10 4142 543356 3 30647 45917 60714 8939 18 22925 7302 93 75252\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"4\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"11\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"31\\n\",\n    \"16\\n\",\n    \"59\\n\"\n  ]\n}"}, "83": {"problem_id": 2014, "answer": "mod = 1000000007\ndef sum(x, y):\n    ans = 0\n    n = 10**9 + 7\n    for i in range(1, n):\n        ans += pow(x[i], mod - 2, mod) * pow(y[i], mod - 2, mod)\n    return ans\nq = int(input())\nfor i in range(q):\n    x1, y1, x2, y2, k = map(int, input().split())\n    ans = sum(list(range(max(x1, x2), min(y1, y2))), k)\n    print(ans)", "input_output": "{\n  \"inputs\": [\n    \"4\\n1 1 1 1 1\\n3 2 5 4 5\\n1 1 5 5 10000\\n1 4 2 5 2\\n\",\n    \"10\\n3 7 4 10 7\\n6 1 7 10 18\\n9 6 10 8 3\\n1 8 3 10 3\\n10 4 10 5 19\\n8 9 9 10 10\\n10 1 10 5 4\\n8 1 9 4 18\\n6 3 9 5 1\\n6 6 9 6 16\\n\",\n    \"10\\n1 1 2 2 8\\n3 4 5 9 4\\n2 10 5 10 6\\n8 5 10 8 8\\n1 2 8 2 20\\n8 6 10 8 20\\n6 7 6 7 9\\n8 5 10 10 13\\n1 8 10 9 13\\n9 8 10 9 3\\n\",\n    \"10\\n4 4 9 8 14\\n5 5 10 10 7\\n1 1 10 5 14\\n3 5 8 9 15\\n3 2 8 7 17\\n5 1 10 6 7\\n6 6 10 10 1\\n3 3 7 10 15\\n6 6 10 10 17\\n6 5 10 9 5\\n\",\n    \"10\\n6 2 10 9 7\\n4 3 8 7 9\\n2 1 7 9 5\\n2 6 10 10 3\\n1 4 7 8 18\\n1 2 7 6 14\\n2 6 6 10 14\\n3 1 10 9 10\\n4 6 10 10 14\\n1 6 9 10 20\\n\",\n    \"10\\n35670 87689 78020 97199 170735\\n49603 42971 77473 79458 124936\\n94018 22571 99563 79717 79594\\n65172 72864 69350 77801 174349\\n45117 31256 60374 67497 156317\\n36047 95407 60232 98208 139099\\n32487 46904 57699 99668 80778\\n21651 59154 75570 62785 115538\\n29698 87365 74417 93703 117692\\n14164 51564 33862 97087 68406\\n\",\n    \"10\\n51798 36533 70866 80025 119989\\n28380 14954 62643 52624 29118\\n54458 49611 75784 95421 49917\\n69985 20586 84374 81162 14398\\n65761 87545 72679 89308 70174\\n22064 89628 77685 93857 38969\\n75905 57174 86394 88214 107079\\n48955 26587 98075 76935 72945\\n69991 81288 96051 90174 75880\\n66736 31080 84603 89293 196873\\n\",\n    \"10\\n45965 63556 68448 95894 98898\\n50414 55822 93611 81912 81281\\n51874 82624 99557 93570 17105\\n83870 83481 98209 86976 37205\\n34423 98865 81812 99559 52923\\n59982 80565 63020 90493 156405\\n73425 8598 94843 23120 95359\\n75710 49176 96524 75354 10095\\n11342 31715 50626 83343 14952\\n50673 61478 61380 81973 35755\\n\",\n    \"10\\n39453 1588 68666 44518 80856\\n65967 37333 79860 79474 185463\\n72918 67988 88918 85752 178916\\n4960 53963 30061 77750 101446\\n68699 86791 98399 87875 166780\\n42051 5526 86018 54457 56275\\n35111 22360 46210 77033 154364\\n79350 54886 79640 66722 206\\n57162 67626 99566 96156 173141\\n42028 40518 52695 94347 188413\\n\",\n    \"10\\n60149 83439 91672 93997 29005\\n2170 81207 33662 85253 169296\\n84242 35792 96226 46307 32764\\n48745 41099 63904 50301 99488\\n20797 58596 98423 69870 151507\\n79648 84250 95429 93302 160725\\n29270 74595 41752 87094 46279\\n97721 20075 99994 24743 121486\\n44598 9233 59399 56549 114860\\n81435 24939 83492 87248 55048\\n\",\n    \"10\\n17273 60120 44211 66117 121362\\n38045 49581 43392 60379 106182\\n29993 28891 49459 68331 170383\\n13745 94716 99131 96384 163728\\n35994 29973 69541 91771 65364\\n93514 84168 95810 91743 60595\\n57881 7334 95096 48342 39876\\n41495 70230 56091 84188 78893\\n12540 23228 26212 81656 105752\\n83061 65904 87563 68222 150811\\n\",\n    \"10\\n89912 38588 100000 61519 131263\\n63723 14623 74226 61508 104495\\n80783 19628 93957 60942 72631\\n49607 2064 60475 32125 43001\\n397 31798 60225 47064 161900\\n87074 8737 99607 47892 162291\\n10290 73252 84596 86607 106118\\n38621 44306 76871 87471 44012\\n26666 84711 53248 98378 27672\\n22685 36055 57791 80992 140124\\n\",\n    \"10\\n25583 8810 71473 84303 56325\\n52527 14549 67038 87309 41381\\n85964 55620 99929 76963 34442\\n28280 87558 56450 98865 107242\\n61281 44852 99966 67445 108461\\n58298 39201 70236 74834 62161\\n54864 73811 68399 96057 132419\\n11978 85542 35272 97885 1419\\n89151 60500 99966 89149 185860\\n48390 40961 87183 97309 35887\\n\",\n    \"10\\n1 1 100000 100000 124458\\n1 1 100000 100000 89626\\n1 1 100000 100000 42210\\n1 1 100000 100000 65721\\n1 1 100000 100000 148198\\n1 1 100000 100000 122029\\n1 1 100000 100000 50224\\n1 1 100000 100000 16314\\n1 1 100000 100000 158599\\n1 1 100000 100000 142792\\n\",\n    \"10\\n1 1 100000 100000 73712\\n1 1 100000 100000 193808\\n1 1 100000 100000 69429\\n1 1 100000 100000 162666\\n1 1 100000 100000 94759\\n1 1 100000 100000 21899\\n1 1 100000 100000 76524\\n1 1 100000 100000 182233\\n1 1 100000 100000 125300\\n1 1 100000 100000 71258\\n\",\n    \"10\\n63468235 40219768 326916221 835104676 1952530008\\n297013188 212688608 432392437 887776079 1462376999\\n153855395 41506149 261808021 778766232 291194343\\n238640217 22153210 642972954 719331789 371665652\\n528859722 494055455 831993741 924681396 251221747\\n19429387 475067059 567446881 908192965 1886584907\\n472431037 68414189 620339945 605371645 1906964799\\n741781008 683180935 932571485 883233060 987079989\\n557448838 174849798 875225676 549316493 360200169\\n61358988 97847347 487462496 955727516 1024792731\\n\",\n    \"10\\n1 1 1000000000 1000000000 497721466\\n1 1 1000000000 1000000000 1096400602\\n1 1 1000000000 1000000000 1120358961\\n1 1 1000000000 1000000000 232914786\\n1 1 1000000000 1000000000 601018859\\n1 1 1000000000 1000000000 310363393\\n1 1 1000000000 1000000000 636663039\\n1 1 1000000000 1000000000 1548359129\\n1 1 1000000000 1000000000 1183677871\\n1 1 1000000000 1000000000 792703683\\n\",\n    \"10\\n1 1 1000000000 1000000000 1477070720\\n1 1 1000000000 1000000000 1378704784\\n1 1 1000000000 1000000000 782520772\\n1 1 1000000000 1000000000 1377211731\\n1 1 1000000000 1000000000 623332716\\n1 1 1000000000 1000000000 497630560\\n1 1 1000000000 1000000000 47465148\\n1 1 1000000000 1000000000 790892344\\n1 1 1000000000 1000000000 1071836060\\n1 1 1000000000 1000000000 1949232149\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n13\\n93\\n0\\n\",\n    \"22\\n130\\n0\\n0\\n25\\n3\\n0\\n68\\n0\\n22\\n\",\n    \"6\\n13\\n0\\n10\\n36\\n95\\n4\\n42\\n94\\n3\\n\",\n    \"132\\n46\\n291\\n157\\n162\\n92\\n5\\n244\\n205\\n33\\n\",\n    \"74\\n106\\n90\\n24\\n165\\n155\\n193\\n257\\n158\\n356\\n\",\n    \"454444876\\n271069018\\n549471212\\n320529941\\n94517473\\n311684494\\n819172459\\n675269446\\n7036993\\n762542106\\n\",\n    \"12182239\\n653954597\\n844386299\\n206168423\\n437228219\\n154397952\\n317840300\\n905267860\\n968243748\\n750471863\\n\",\n    \"199194379\\n133563355\\n535853348\\n105738618\\n790969580\\n176118196\\n203632117\\n366899916\\n146517938\\n749331834\\n\",\n    \"974201015\\n675658286\\n140222566\\n668884231\\n613269116\\n620825458\\n239625852\\n0\\n193348271\\n860068784\\n\",\n    \"922941587\\n694484017\\n0\\n117048300\\n483223856\\n262420342\\n0\\n449352476\\n757860438\\n37418807\\n\",\n    \"908485580\\n424476218\\n6537747\\n993909605\\n825278510\\n232753578\\n980640613\\n0\\n732434354\\n794713552\\n\",\n    \"191639278\\n266398397\\n387687950\\n268970017\\n733430769\\n239026110\\n569640661\\n502549869\\n0\\n901026605\\n\",\n    \"605688865\\n873699306\\n156635112\\n698424830\\n86490140\\n906905842\\n454122876\\n0\\n347292150\\n987085065\\n\",\n    \"986777122\\n640050028\\n864029027\\n339397763\\n973589169\\n723174232\\n902088077\\n287074869\\n973589169\\n973589169\\n\",\n    \"717056579\\n973589169\\n625066178\\n973589169\\n207662527\\n561940319\\n600480675\\n973589169\\n665222578\\n844687430\\n\",\n    \"383784865\\n892686589\\n440520525\\n909297528\\n857306896\\n138121854\\n327512104\\n256512043\\n89816936\\n158271270\\n\",\n    \"11780124\\n248752269\\n248752269\\n883198940\\n218155629\\n747605194\\n352461300\\n248752269\\n248752269\\n562283839\\n\",\n    \"248752269\\n248752269\\n949069688\\n248752269\\n840885502\\n42891263\\n23378226\\n985784682\\n561979540\\n248752269\\n\"\n  ]\n}"}, "84": {"problem_id": 2058, "answer": "from bisect import bisect_left as bl\nn = int(input())\na = [0]*1000001\nfor i in range(1,n):\n    a[i] += i\nd = {}\nfor i in range(1000001):\n    d[i] = d.get(i,0) + 1\nans = bl(0,n-1,a)\nprint(ans)", "input_output": "{\n  \"inputs\": [\n    \"7\\n2 1 5 11 5 9 11\\n\",\n    \"5\\n5 4 3 2 1\\n\",\n    \"2\\n1 1000\\n\",\n    \"2\\n1000 1\\n\",\n    \"5\\n100 80 60 70 90\\n\",\n    \"10\\n10 16 17 11 1213 1216 1216 1209 3061 3062\\n\",\n    \"20\\n103 103 110 105 107 119 113 121 116 132 128 124 128 125 138 137 140 136 154 158\\n\",\n    \"1\\n1\\n\",\n    \"5\\n1 1 1 2 3\\n\",\n    \"1\\n1000\\n\",\n    \"50\\n499 780 837 984 481 526 944 482 862 136 265 605 5 631 974 967 574 293 969 467 573 845 102 224 17 873 648 120 694 996 244 313 404 129 899 583 541 314 525 496 443 857 297 78 575 2 430 137 387 319\\n\",\n    \"75\\n392 593 98 533 515 448 220 310 386 79 539 294 208 828 75 534 875 493 94 205 656 105 546 493 60 188 222 108 788 504 809 621 934 455 307 212 630 298 938 62 850 421 839 134 950 256 934 817 209 559 866 67 990 835 534 672 468 768 757 516 959 893 275 315 692 927 321 554 801 805 885 12 67 245 495\\n\",\n    \"10\\n26 723 970 13 422 968 875 329 234 983\\n\",\n    \"20\\n245 891 363 6 193 704 420 447 237 947 664 894 512 194 513 616 671 623 686 378\\n\",\n    \"5\\n850 840 521 42 169\\n\"\n  ],\n  \"outputs\": [\n    \"9\\n\",\n    \"12\\n\",\n    \"0\\n\",\n    \"1000\\n\",\n    \"54\\n\",\n    \"16\\n\",\n    \"43\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"0\\n\",\n    \"12423\\n\",\n    \"17691\\n\",\n    \"2546\\n\",\n    \"3208\\n\",\n    \"1485\\n\"\n  ]\n}"}, "85": {"problem_id": 2241, "answer": "import sys\ninput = sys.stdin.readline\nN,C=map(int,input().split())\nA=list(map(int,input().split()))\nB=list(map(int,input().split()))\nmod=10**9+7\nP=[0]*(C+1)\nfor i in range(1,C+1):\n    P[i]=i*pow(mod,mod-i,mod)\n    P[i]%=mod\ndp=[[0]*(C+1) for _ in range(N+1)]\ndp[0][0]=1\nfor i in range(1,.append(C,0)):\n    for j in range(i+1):\n        dp[i][j]+=P[i-j]*dp[j][i-j]\n        dp[i][j]%=mod\nprint(dp[C][N])", "input_output": "{\"inputs\": [\"2 3\\n1 1\\n1 1\\n\", \"1 2\\n1\\n3\\n\", \"2 3\\n1 1\\n2 2\\n\", \"4 8\\n3 1 4 1\\n3 1 4 1\\n\", \"3 100\\n7 6 5\\n9 9 9\\n\"], \"outputs\": [\"4\\n\", \"14\\n\", \"66\\n\", \"421749\\n\", \"139123417\\n\"]}"}, "86": {"problem_id": 2101, "answer": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\ng = [[] for _ in range(n)]\nfor i in range(m):\n    a, b = map(int, input().split())\n    g[a-1].append(b-1)\n    g[b-1].append(a-1)\nv = [0]*n\nq = [i for i in range(n)]\nvisited = [0]*n\nq[0] = 1e9\nwhile q:\n    i = q.pop()\n    for j in g[i]:\n        if visited[j]==0:\n   ", "input_output": "{\n  \"inputs\": [\n    \"6 11\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n\",\n    \"3 0\\n\",\n    \"2 0\\n\",\n    \"1 0\\n\",\n    \"2 1\\n1 2\\n\",\n    \"4 2\\n3 2\\n1 4\\n\",\n    \"3 3\\n1 2\\n3 1\\n2 3\\n\",\n    \"7 5\\n7 5\\n1 5\\n3 2\\n2 6\\n3 6\\n\",\n    \"10 10\\n1 5\\n1 8\\n1 9\\n5 8\\n8 9\\n4 7\\n2 3\\n3 10\\n2 6\\n2 10\\n\",\n    \"5 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\\n1 3\\n2 4\\n3 5\\n4 1\\n5 2\\n\",\n    \"15 10\\n2 3\\n5 4\\n5 6\\n5 7\\n3 8\\n3 10\\n11 12\\n12 13\\n13 14\\n14 15\\n\",\n    \"100000 0\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"4\\n\",\n    \"0\\n\",\n    \"0\\n\"\n  ]\n}"}, "87": {"problem_id": 2001, "answer": "import sys\ninput = sys.stdin.readline\n \ndef main():\n    X, d = map(int, input().split())\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(int(input()))\n    print(min(arr))\n    return 0\nmain()", "input_output": "{\"inputs\": [\"10 5\\n\", \"4 2\\n\", \"4 1\\n\", \"1 1\\n\", \"63 1\\n\", \"98 88\\n\", \"746 173\\n\", \"890 553\\n\", \"883 1000\\n\", \"1 1000\\n\", \"695 188\\n\", \"2060 697\\n\", \"70 3321\\n\", \"6358 1646\\n\", \"15000 1\\n\", \"1048576 1\\n\", \"1000000 1\\n\", \"10009 1\\n\", \"10001 1\\n\"], \"outputs\": [\"6\\n1 1 1 7 13 19 \", \"3\\n1 1 4 \", \"3\\n1 1 3 \", \"1\\n1 \", \"21\\n1 1 1 1 1 3 3 3 3 5 5 5 7 7 9 11 13 15 17 19 21 \", \"15\\n1 1 1 1 1 1 90 90 90 90 90 179 268 357 446 \", \"37\\n1 1 1 1 1 1 1 1 1 175 175 175 175 175 175 175 349 349 349 349 349 349 523 523 523 523 523 697 697 697 871 1045 1219 1393 1567 1741 1915 \", \"43\\n1 1 1 1 1 1 1 1 1 555 555 555 555 555 555 555 555 1109 1109 1109 1109 1109 1109 1663 1663 1663 1663 1663 2217 2217 2217 2217 2771 2771 2771 3325 3879 4433 4987 5541 6095 6649 7203 \", \"40\\n1 1 1 1 1 1 1 1 1 1002 1002 1002 1002 1002 1002 1002 1002 2003 2003 2003 2003 2003 2003 3004 3004 3004 3004 3004 4005 4005 4005 4005 5006 6007 7008 8009 9010 10011 11012 12013 \", \"1\\n1 \", \"35\\n1 1 1 1 1 1 1 1 1 190 190 190 190 190 190 190 379 379 379 379 379 568 568 568 568 757 757 946 1135 1324 1513 1702 1891 2080 2269 \", \"19\\n1 1 1 1 1 1 1 1 1 1 1 699 699 699 1397 1397 2095 2793 3491 \", \"12\\n1 1 1 1 1 1 3323 3323 6645 9967 13289 16611 \", \"50\\n1 1 1 1 1 1 1 1 1 1 1 1 1648 1648 1648 1648 1648 1648 1648 1648 1648 1648 1648 3295 3295 3295 3295 3295 3295 3295 4942 4942 4942 4942 4942 4942 6589 6589 6589 6589 8236 8236 9883 11530 13177 14824 16471 18118 19765 21412 \", \"66\\n1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 5 5 7 7 7 7 7 7 7 7 7 9 9 9 9 9 9 9 11 11 11 11 13 13 13 15 17 19 21 23 25 27 \", \"21\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 \", \"106\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 9 9 9 9 9 9 9 9 9 9 9 9 9 9 11 11 11 11 11 11 11 11 11 13 13 13 13 13 13 15 17 19 21 23 25 27 \", \"54\\n1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 7 7 7 7 7 7 7 7 9 9 9 9 11 11 11 13 15 17 19 21 23 25 \", \"50\\n1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 7 7 7 7 7 7 7 7 9 9 9 9 11 13 15 17 19 21 \"]}"}, "88": {"problem_id": 2095, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nroot = [False]*n\nfor i,a[i] in enumerate(a):\n    root[i] = True\nvisited = [0]*n\nq = deque([])\nwhile q:\n    now = q.popleft()\n    for nei in root[now]:\n        if visited[now] == 0:\n            q.append(nei)\n            visited[now] = 1", "input_output": "{\n  \"inputs\": [\n    \"4\\n2 3 3 4\\n\",\n    \"5\\n3 2 2 5 3\\n\",\n    \"8\\n2 3 5 4 1 6 6 7\\n\",\n    \"2\\n1 2\\n\",\n    \"7\\n4 3 2 6 3 5 2\\n\",\n    \"6\\n6 2 6 2 4 2\\n\",\n    \"7\\n1 6 4 4 5 6 7\\n\",\n    \"7\\n7 5 3 1 2 1 5\\n\",\n    \"7\\n1 2 3 4 5 6 7\\n\",\n    \"18\\n2 3 4 5 2 7 8 9 10 7 11 12 14 15 13 17 18 18\\n\",\n    \"8\\n2 1 2 2 6 5 6 6\\n\",\n    \"3\\n2 1 1\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n2 3 4 4 \\n\",\n    \"0\\n3 2 2 5 3 \\n\",\n    \"2\\n2 3 7 8 1 6 6 7\\n\",\n    \"1\\n2 2 \\n\",\n    \"1\\n4 3 3 6 3 5 2 \\n\",\n    \"0\\n6 2 6 2 4 2 \\n\",\n    \"4\\n7 6 4 7 7 7 7 \\n\",\n    \"1\\n7 5 3 1 3 1 5 \\n\",\n    \"6\\n7 7 7 7 7 7 7 \\n\",\n    \"5\\n2 18 4 5 2 7 18 9 10 7 18 18 18 15 13 17 18 18 \\n\",\n    \"2\\n1 1 2 2 1 5 6 6 \\n\",\n    \"1\\n1 1 1 \\n\"\n  ]\n}"}, "89": {"problem_id": 2193, "answer": "n = int(input())\nans = []\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    ans.append([a, \"\".join(map(str, input().split()))])\nprint(ans.index(max(ans)))", "input_output": "{\n  \"inputs\": [\n    \"5\\n100 98 100 100\\n100 100 100 100\\n100 100 99 99\\n90 99 90 100\\n100 98 60 99\\n\",\n    \"6\\n100 80 90 99\\n60 60 60 60\\n90 60 100 60\\n60 100 60 80\\n100 100 0 100\\n0 0 0 0\\n\",\n    \"1\\n0 0 0 0\\n\",\n    \"1\\n15 71 57 86\\n\",\n    \"5\\n4 8 2 6\\n8 3 5 2\\n7 9 5 10\\n7 10 10 7\\n7 6 7 3\\n\",\n    \"9\\n1 2 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7\\n8 8 8 8\\n9 9 9 9\\n\",\n    \"8\\n19 12 11 0\\n10 3 14 5\\n9 9 5 12\\n4 9 1 4\\n19 17 9 0\\n20 16 10 13\\n8 13 16 3\\n10 0 9 19\\n\",\n    \"18\\n68 32 84 6\\n44 53 11 21\\n61 34 77 82\\n19 36 47 58\\n47 73 31 96\\n17 50 82 16\\n57 90 64 8\\n14 37 45 69\\n48 1 18 58\\n42 34 96 14\\n56 82 33 77\\n40 66 30 53\\n33 31 44 95\\n0 90 24 8\\n7 85 39 1\\n76 77 93 35\\n98 9 62 13\\n24 84 60 51\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"4\\n\",\n    \"9\\n\",\n    \"3\\n\",\n    \"8\\n\"\n  ]\n}"}, "90": {"problem_id": 2076, "answer": "n = int(input())\npoints = list(map(int, input().split()))\ngood_pts = []\nfor i in range(n):\n    a, b, c, d, e = points[i]\n    if a == c and b == d:\n        good_pts.append(i)\nprint(len(good_pts))\nfor i in range(len(good_pts)):\n    print(\"%s\" % good_pts[i])", "input_output": "{\n  \"inputs\": [\n    \"6\\n0 0 0 0 0\\n1 0 0 0 0\\n0 1 0 0 0\\n0 0 1 0 0\\n0 0 0 1 0\\n0 0 0 0 1\\n\",\n    \"3\\n0 0 1 2 0\\n0 0 9 2 0\\n0 0 5 9 0\\n\",\n    \"1\\n0 0 0 0 0\\n\",\n    \"2\\n0 1 2 3 4\\n5 6 7 8 9\\n\",\n    \"10\\n0 -110 68 -51 -155\\n-85 -110 68 -51 -155\\n85 -70 51 68 -230\\n0 -40 51 68 75\\n0 5 -51 -68 -190\\n85 0 0 0 0\\n85 -115 -68 51 35\\n85 -75 -187 34 -40\\n-85 -110 -136 102 -155\\n85 -110 -17 119 -155\\n\",\n    \"6\\n-305 -390 638 -623 343\\n479 755 -343 144 89\\n-268 843 -461 989 -301\\n-986 -274 347 -847 -728\\n278 718 -372 -674 270\\n-477 562 -489 -858 611\\n\",\n    \"10\\n-705 38 170 -768 689\\n-705 86 248 -768 709\\n-705 86 170 -742 709\\n-705 86 144 -768 709\\n-705 86 170 -820 709\\n-705 106 170 -768 661\\n-822 86 170 -768 709\\n-705 98 170 -768 714\\n-705 86 170 -768 709\\n-601 86 170 -768 709\\n\",\n    \"11\\n358 -724 -232 53 -520\\n486 -554 -328 53 -220\\n358 -554 -232 -372 -520\\n358 -554 -232 308 -520\\n868 -554 448 53 -520\\n478 -554 -322 53 -600\\n358 296 -232 53 -520\\n256 -554 -368 53 -520\\n230 -554 -136 53 -820\\n-182 -554 173 53 -160\\n358 -554 -232 53 -520\\n\",\n    \"8\\n-559 581 509 257 343\\n-544 451 569 277 343\\n-451 451 434 401 343\\n-559 451 509 257 83\\n-664 451 89 117 343\\n-559 451 509 257 993\\n-715 451 509 374 343\\n-811 451 684 -79 343\\n\",\n    \"11\\n8 8 8 8 8\\n2 2 2 2 2\\n0 0 0 0 0\\n6 6 6 6 6\\n7 7 7 7 7\\n10 10 10 10 10\\n9 9 9 9 9\\n3 3 3 3 3\\n1 1 1 1 1\\n5 5 5 5 5\\n4 4 4 4 4\\n\",\n    \"7\\n49 457 -650 325 -325\\n0 0 325 325 0\\n253 204 -325 0 -325\\n204 -253 325 325 325\\n408 -506 -325 -325 325\\n49 457 -650 325 -650\\n0 0 0 650 -325\\n\",\n    \"11\\n1 0 0 0 0\\n-1 0 0 0 0\\n0 1 0 0 0\\n0 -1 0 0 0\\n0 0 1 0 0\\n0 0 -1 0 0\\n0 0 0 1 0\\n0 0 0 -1 0\\n0 0 0 0 1\\n0 0 0 0 -1\\n0 0 0 0 0\\n\",\n    \"4\\n0 0 0 0 0\\n1 0 0 0 0\\n0 1 0 0 0\\n0 1 1 0 0\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n1\\n\",\n    \"0\\n\",\n    \"1\\n1\\n\",\n    \"2\\n1\\n2\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"1\\n9\\n\",\n    \"1\\n11\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"1\\n11\\n\",\n    \"0\\n\"\n  ]\n}"}, "91": {"problem_id": 2008, "answer": "import sys\ninput = sys.stdin.readline\n \nn = int(input())\na = list(map(int, input().split()))\n \ncnt = 0\nans = []\nfor i in range(n):\n    if a[i] == 0:\n        cnt += 1\n    elif a[i] == 1:\n        ans.append(cnt)\n        cnt = 0\n    else:\n        ans.append(cnt)\n        cnt = 0", "input_output": "{\n  \"inputs\": [\n    \"4\\n0 0 1 1\\n\",\n    \"5\\n0 1 0 1 0\\n\",\n    \"3\\n1 0 0\\n\",\n    \"4\\n1 0 0 1\\n\",\n    \"7\\n1 0 1 1 1 0 1\\n\",\n    \"14\\n0 1 0 0 0 1 1 0 1 0 1 0 1 0\\n\",\n    \"3\\n1 0 1\\n\",\n    \"3\\n0 0 1\\n\",\n    \"3\\n1 1 0\\n\",\n    \"3\\n1 1 1\\n\",\n    \"4\\n1 1 0 1\\n\",\n    \"4\\n1 0 1 1\\n\",\n    \"10\\n0 1 0 1 0 0 1 0 1 0\\n\",\n    \"4\\n0 1 1 0\\n\",\n    \"168\\n0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 0\\n\",\n    \"3\\n0 1 1\\n\",\n    \"3\\n0 0 0\\n\",\n    \"4\\n0 1 0 1\\n\",\n    \"3\\n0 1 0\\n\"\n  ],\n  \"outputs\": [\n    \"0\\n0 0 1 1\\n\",\n    \"2\\n0 0 0 0 0\\n\",\n    \"0\\n1 0 0\\n\",\n    \"0\\n1 0 0 1\\n\",\n    \"1\\n1 1 1 1 1 1 1\\n\",\n    \"3\\n0 0 0 0 0 1 1 1 1 1 0 0 0 0\\n\",\n    \"1\\n1 1 1\\n\",\n    \"0\\n0 0 1\\n\",\n    \"0\\n1 1 0\\n\",\n    \"0\\n1 1 1\\n\",\n    \"1\\n1 1 1 1\\n\",\n    \"1\\n1 1 1 1\\n\",\n    \"2\\n0 0 0 0 0 0 0 0 0 0\\n\",\n    \"0\\n0 1 1 0\\n\",\n    \"36\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\",\n    \"0\\n0 1 1\\n\",\n    \"0\\n0 0 0\\n\",\n    \"1\\n0 0 1 1\\n\",\n    \"1\\n0 0 0\\n\"\n  ]\n}"}, "92": {"problem_id": 2243, "answer": "from bisect import bisect_left, bisect_right\nmod = 10**9 + 7\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\nans = [0] * (n + m)\nfor i in range(n):\n    ans[i + 1] = ans[i] + x[i]\nfor i in range(m):\n    ans[m + 1] = ans[m] + y[i]\nprint(ans[:n])", "input_output": "{\"inputs\": [\"2 2\\n2 3\\n1 4\\n\", \"3 4\\n2 5 10\\n1 3 7 13\\n\", \"4 1\\n1 2 4 5\\n3\\n\", \"4 5\\n2 5 7 11\\n1 3 6 9 13\\n\", \"10 10\\n4 13 15 18 19 20 21 22 25 27\\n1 5 11 12 14 16 23 26 29 30\\n\"], \"outputs\": [\"3\\n\", \"8\\n\", \"1\\n\", \"6\\n\", \"22\\n\"]}"}, "93": {"problem_id": 2147, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+5\nns = lambda:list(map(int,readline().split()))\nnl = lambda:list(map(int,readline().split()))\nI = lambda:int(readline())\nS = lambda:sys.stdin.readline().strip()\nn,r1,r2,r3,d=I()\na=[0]*n\nfor i in range(n):\n    a[i+1]=nl()\np=[0]*(ns()+1)\nq=[0]*(ns()+1)\nfor i in range(n):\n    p[a[i]]+=1\n    q[a[i]]+=1\nm=max(p)\ndif=10**18+5\nans=0\nif n&1:\n    ans+=dif\nelif n&2:\n    ans+=dif*2\nelif n&4:\n\\t\n    ans+=dif*r1+dif*r2+dif*r3\n\\t\n    m=min(m,n-1)\n\\t\n    dif=min(dif,I()-m)\n\\tc\nprint(ans)", "input_output": "{\n  \"inputs\": [\n    \"4 1 3 4 3\\n3 2 5 1\\n\",\n    \"4 2 4 4 1\\n4 5 1 2\\n\",\n    \"2 2 5 7 3\\n4 5\\n\",\n    \"100 4 8 9 1\\n1 8 1 8 7 8 1 8 10 4 7 7 3 2 6 7 3 7 3 7 1 8 5 7 4 10 9 7 3 4 7 7 4 9 6 10 4 5 5 2 5 3 9 2 8 3 7 8 8 8 10 4 7 2 3 6 2 8 9 9 7 4 8 6 5 8 5 2 5 10 3 6 2 8 1 3 3 7 6 1 5 8 9 9 2 2 9 3 7 3 3 3 10 10 3 5 10 1 3 3\\n\",\n    \"100 5 5 9 3\\n3 4 2 3 4 3 8 5 2 1 1 4 1 1 10 10 7 5 2 9 4 2 10 10 8 2 4 9 6 2 6 7 7 5 7 7 1 8 10 9 9 3 10 3 10 1 1 8 3 6 4 5 5 4 9 5 9 4 8 2 10 8 9 1 5 9 7 2 1 7 9 3 2 9 1 5 4 2 3 10 6 7 8 2 10 1 6 2 1 6 10 9 1 2 2 7 2 8 4 4\\n\",\n    \"12 5 9 9 8\\n5 1 9 4 2 10 7 3 8 1 7 10\\n\",\n    \"35 2 5 6 3\\n6 8 3 4 2 1 1 10 8 1 2 4 4 2 10 1 1 6 3 8 10 6 3 8 10 8 9 7 9 10 3 9 4 6 7\\n\",\n    \"36 6 6 9 6\\n3 5 8 7 6 8 1 5 10 10 8 5 10 9 8 1 9 7 2 1 8 8 6 1 6 7 4 3 10 2 5 8 4 1 1 4\\n\",\n    \"17 2 7 10 6\\n10 5 9 2 7 5 6 10 9 7 10 3 10 2 9 10 1\\n\",\n    \"77 2 8 8 3\\n7 9 3 6 2 7 8 4 4 1 8 6 1 7 6 3 4 6 1 1 6 5 6 6 4 8 7 5 10 6 9 2 1 2 4 5 1 3 8 2 2 7 3 8 8 4 8 10 5 1 6 8 1 3 8 6 8 4 10 7 10 5 3 8 6 6 8 2 2 3 8 4 10 7 6 5 2\\n\"\n  ],\n  \"outputs\": [\n    \"34\",\n    \"31\",\n    \"23\",\n    \"1399\",\n    \"1597\",\n    \"341\",\n    \"442\",\n    \"852\",\n    \"346\",\n    \"1182\"\n  ]\n}"}, "94": {"problem_id": 2116, "answer": "m = int(input())\ns = input()\nn = len(s)\ncnt = [0]*26\nfor i in range(n):\n    cnt[ord(s[i])-97] += 1\n    if cnt[i] >= m:\n        print(s[i:])\n    ", "input_output": "{\n  \"inputs\": [\n    \"3\\ncbabc\\n\",\n    \"2\\nabcab\\n\",\n    \"3\\nbcabcbaccba\\n\",\n    \"5\\nimmaydobun\\n\",\n    \"5\\nwjjdqawypvtgrncmqvcsergermprauyevcegjtcrrblkwiugrcjfpjyxngyryxntauxlouvwgjzpsuxyxvhavgezwtuzknetdibv\\n\",\n    \"10\\nefispvmzuutsrpxzfrykhabznxiyquwvhwhrksrgzodtuepfvamilfdynapzhzyhncorhzuewrrkcduvuhwsrprjrmgctnvrdtpj\\n\",\n    \"20\\nhlicqhxayiodyephxlfoetfketnaabpfegqcrjzlshkxfzjssvpvzhzylgowwovgxznzowvpklbwbzhwtkkaomjkenhpedmbmjic\\n\",\n    \"50\\ntyhjolxuexoffdkdwimsjujorgeksyiyvvqecvhpjsuayqnibijtipuqhkulxpysotlmtrsgygpkdhkrtntwqzrpfckiscaphyhv\\n\",\n    \"1\\nbaaa\\n\",\n    \"5\\nbbbbba\\n\",\n    \"10\\nbbabcbbaabcbcbcbaabbccaacccbbbcaaacabbbbaaaccbcccacbbccaccbbaacaccbabcaaaacaccacbaaccaaccbaacabbbaac\\n\"\n  ],\n  \"outputs\": [\n    \"a\\n\",\n    \"aab\\n\",\n    \"aaabb\\n\",\n    \"ab\\n\",\n    \"aaaabbcccccddeeeeeefggggggghiijjjjjjkkllmmnnnnoppppqqrrrrrrrrsstttttu\\n\",\n    \"aaabcccddddeeeffffgghhhhhhhiiijjkkklm\\n\",\n    \"aaaabbbbcccddeeeeeeffffg\\n\",\n    \"aab\\n\",\n    \"aaab\\n\",\n    \"ab\\n\",\n    \"aaaaaaaaaaa\\n\"\n  ]\n}"}, "95": {"problem_id": 2174, "answer": "import sys\ninput = sys.stdin.readline\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n\\t\\tprint(set([a[i]|a[j] for i in range(n) for j in range(i)]))\n\\t\\tif __name__ == '__main__': main()\n", "input_output": "{\n  \"inputs\": [\n    \"3\\n1 2 0\\n\",\n    \"10\\n1 2 3 4 5 6 1 2 9 10\\n\",\n    \"1\\n123\\n\",\n    \"10\\n6 8 4 5 1 9 10 2 3 7\\n\",\n    \"7\\n1 2 4 8 16 32 64\\n\",\n    \"10\\n375813 659427 484038 348181 432640 368050 271089 721588 345312 630771\\n\",\n    \"5\\n0 1 2 0 4\\n\",\n    \"1\\n0\\n\",\n    \"1\\n1000000\\n\"\n  ],\n  \"outputs\": [\n    \"4\",\n    \"11\",\n    \"1\",\n    \"15\",\n    \"28\",\n    \"29\",\n    \"7\",\n    \"1\",\n    \"1\"\n  ]\n}"}, "96": {"problem_id": 2268, "answer": "import sys\nsys.setrecursionlimit(10**6)\nn = int(input())\np = list(map(int, input().split()))\ng = [[] for _ in range(n)]\nfor i, pi in enumerate(p):\n    g[pi].append(i)\nvisited = [False for _ in range(n)]\nvisited[1] = True\nreachable = [False for _ in range(n)]\nreachable[1] = True\ndp = [0 for _ in range(n)]\ndp[1] = 1\nans = []\nwhile True:\n    try:\n        a = dp[p[0]]\n    except:\n        break\n    try:\n        b = dp[p[1]]\n    except:\n \ufffd       ans.append((\"impossible\", \"impossible\"))\n    ", "input_output": "{\"inputs\": [\"4\\n2 3 4 1\\n\", \"3\\n2 3 1\\n\", \"4\\n2 3 1 1\\n\", \"6\\n4 5 6 5 6 4\\n\"], \"outputs\": [\"POSSIBLE\\n\", \"IMPOSSIBLE\\n\", \"POSSIBLE\\n\", \"IMPOSSIBLE\\n\"]}"}, "97": {"problem_id": 2055, "answer": "MOD = 1000000007\nst,n,t,mp=input(),int(input()),[],{}\n\nt.append(['',st])\n\nfor i in range(10):\n\tmp[str(i)]=(10,i)\n\nfor i in range(n):\n\tt.append(input().split(\"->\"))\n\nfor i in range(n,-1,-1):\n\ta,b=1,0\n\tfor j in t[i][1]:\n\t\ta,b=a*mp[j][0]%MOD,(b*mp[j][0]+mp[j][1])%MOD\n\tmp[t[i][0]]= a,b\n\nprint(mp[''][1])\n\n", "input_output": "{\n  \"inputs\": [\n    \"123123\\n1\\n2->00\\n\",\n    \"123123\\n1\\n3->\\n\",\n    \"222\\n2\\n2->0\\n0->7\\n\",\n    \"1000000008\\n0\\n\",\n    \"100\\n5\\n1->301\\n0->013\\n1->013\\n0->103\\n0->103\\n\",\n    \"21222\\n10\\n1->\\n2->1\\n1->1\\n1->1\\n1->1\\n1->22\\n2->2\\n2->1\\n1->21\\n1->\\n\",\n    \"21122\\n10\\n1->\\n2->12\\n1->\\n2->21\\n2->\\n1->21\\n1->\\n2->12\\n2->\\n1->21\\n\",\n    \"7048431802\\n3\\n0->9285051\\n0->785476659\\n6->3187205\\n\",\n    \"1\\n10\\n1->111\\n1->111\\n1->111\\n1->111\\n1->111\\n1->111\\n1->111\\n1->111\\n1->111\\n1->111\\n\",\n    \"80125168586785605523636285409060490408816122518314\\n0\\n\",\n    \"4432535330257407726572090980499847187198996038948464049414107600178053433384837707125968777715401617\\n10\\n1->\\n3->\\n5->\\n2->\\n9->\\n0->\\n4->\\n6->\\n7->\\n8->\\n\",\n    \"332434109630379\\n20\\n7->1\\n0->2\\n3->6\\n1->8\\n6->8\\n4->0\\n9->8\\n2->4\\n4->8\\n0->1\\n1->7\\n7->3\\n3->4\\n4->6\\n6->3\\n8->4\\n3->8\\n4->2\\n2->8\\n8->1\\n\",\n    \"88296041076454194379\\n20\\n5->62\\n8->48\\n4->\\n1->60\\n9->00\\n6->16\\n0->03\\n6->\\n3->\\n1->\\n7->02\\n2->35\\n8->86\\n5->\\n3->34\\n4->\\n8->\\n0->\\n3->46\\n6->84\\n\",\n    \"19693141406182378241404307417907800263629336520110\\n49\\n2->\\n0->\\n3->\\n9->\\n6->\\n5->\\n1->\\n4->\\n8->\\n7->0649713852\\n0->\\n4->\\n5->\\n3->\\n1->\\n8->\\n7->\\n9->\\n6->\\n2->2563194780\\n0->\\n8->\\n1->\\n3->\\n5->\\n4->\\n7->\\n2->\\n6->\\n9->8360512479\\n0->\\n3->\\n6->\\n4->\\n2->\\n9->\\n7->\\n1->\\n8->\\n5->8036451792\\n7->\\n6->\\n5->\\n1->\\n2->\\n0->\\n8->\\n9->\\n4->\\n\",\n    \"103\\n32\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n0->00\\n\"\n  ],\n  \"outputs\": [\n    \"10031003\\n\",\n    \"1212\\n\",\n    \"777\\n\",\n    \"1\\n\",\n    \"624761980\\n\",\n    \"22222222\\n\",\n    \"212121\\n\",\n    \"106409986\\n\",\n    \"97443114\\n\",\n    \"410301862\\n\",\n    \"0\\n\",\n    \"110333334\\n\",\n    \"425093096\\n\",\n    \"3333\\n\",\n    \"531621060\\n\"\n  ]\n}"}, "98": {"problem_id": 2054, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nedges = []\nfor i in range(n-1):\n    u,v = map(int,input().split())\n    edges.append((u,v))\ncolors = list(map(int,input().split()))\nvisited = [False]*n\nans = []\nfor i in range(n-1):\n    if visited[i] == False:\n        visited[i] = True\n        ans.append(i+1)\n        for j in range(i+1,n):\n            if colors[j]!= colors[i]:\n                visited[j] = True\n         ", "input_output": "{\n  \"inputs\": [\n    \"4\\n1 2\\n2 3\\n3 4\\n1 2 1 1\\n\",\n    \"3\\n1 2\\n2 3\\n1 2 3\\n\",\n    \"4\\n1 2\\n2 3\\n3 4\\n1 2 1 2\\n\",\n    \"3\\n2 1\\n2 3\\n1 2 3\\n\",\n    \"4\\n1 2\\n2 4\\n4 3\\n1 1 3 2\\n\",\n    \"2\\n1 2\\n1 1\\n\",\n    \"10\\n5 7\\n4 5\\n10 2\\n3 6\\n1 2\\n3 4\\n8 5\\n4 9\\n2 3\\n15 15 15 15 5 15 26 18 15 15\\n\",\n    \"8\\n1 2\\n1 3\\n3 5\\n3 6\\n1 4\\n4 7\\n4 8\\n1 3 1 1 1 1 1 2\\n\",\n    \"3\\n2 1\\n2 3\\n4 4 4\\n\",\n    \"3\\n1 2\\n1 3\\n1 2 2\\n\",\n    \"4\\n1 4\\n2 4\\n3 4\\n1 2 3 1\\n\",\n    \"4\\n1 2\\n1 3\\n1 4\\n1 2 3 4\\n\",\n    \"9\\n1 2\\n2 3\\n3 4\\n4 5\\n2 7\\n7 6\\n2 8\\n8 9\\n1 1 2 2 2 3 3 4 4\\n\",\n    \"3\\n2 1\\n2 3\\n4 4 5\\n\",\n    \"4\\n1 2\\n2 3\\n3 4\\n1 2 2 1\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\n2\",\n    \"YES\\n2\",\n    \"NO\",\n    \"YES\\n2\",\n    \"YES\\n4\",\n    \"YES\\n1\",\n    \"YES\\n5\",\n    \"NO\",\n    \"YES\\n1\",\n    \"YES\\n1\",\n    \"YES\\n4\",\n    \"YES\\n1\",\n    \"YES\\n2\",\n    \"YES\\n2\",\n    \"NO\"\n  ]\n}"}, "99": {"problem_id": 2255, "answer": "from collections import Counter as C\nn = int(input())\na = list(map(int, input().split()))\ncnt = C(3)\nres = 0\nfor i in range(n):\n    res += cnt[a[i]]\nprint(res)", "input_output": "{\n  \"inputs\": [\n    \"5\\n1 2 3 4 5\\n\",\n    \"6\\n3 2 2 3 7 6\\n\",\n    \"3\\n42 4 2\\n\",\n    \"2\\n60202 951227\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n\",\n    \"3\\n\",\n    \"0\\n\",\n    \"0\\n\"\n  ]\n}"}}