{"0": {"problem_id": 2000, "answer": "import sys\nreadline = sys.stdin.readline\nn, m, a, b = list(map(int, readline().split()))\ng = [[] for _ in range(n)]\nfor _ in range(m):\n    g[int(readline()).strip()].append(_)\nq = n-1\nvisited = set()\nwhile q>0:\n    q-=1\n    s = readline()\n    visited.add(s)\n    for i in g[s]:\n        if i not in visited:\n            visited.add(i)\n            q-=1\nprint(*visited, sep=' ')"}, "1": {"problem_id": 2001, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    X, d = map(int, input().split())\n    print(min(X + 2 ** (n - 1) for n in range(1, 11) if X & (1 << n) & d))\n    return 0\n\nmain()"}, "2": {"problem_id": 2002, "answer": "s = input()\nn = len(s)\na = [0] * 26\nc = 0\nfor i in range(n):\n    a[ord(s[i]) - ord('a')] += 1\n    c += a[i]\nprint(c / n)"}, "3": {"problem_id": 2003, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nd = list(map(int, input().split()))\na.sort()\nb = sorted([a[i], i] for i in range(n))\nc = sorted([0, d[i] - d[i - 1] for i in range(n)])\nans = 0\nfor i in range(1, n):\n    ans += b[i] - c[i]\nprint(ans)"}, "4": {"problem_id": 2004, "answer": "s = input()\ni = 0\nc = 0\nd = []\nwhile i < len(s):\n    if s[i] == '0':\n        c += 1\n        d.append(s[i])\n    elif s[i] == '1':\n        c -= 1\n        d.append(s[i])\n    i += 1\nprint(''.join(d))"}, "5": {"problem_id": 2005, "answer": "s = input()\nn = len(s)\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if s[j] == s[j-1]:\n            ans += n-i\nprint(ans)"}, "6": {"problem_id": 2006, "answer": "from fractions import gcd\nn = int(input())\na = list(map(int, input().split()))\ng = gcd(a[0], a[1])\nfor i in range(2, n):\n    g = gcd(a[i], a[i-1])\nprint(['Alice', 'Bob'][max(0, a[-1] - g)])"}, "7": {"problem_id": 2007, "answer": "def can(d, h, p):\n    left = 0\n    for i in range(h):\n        if d[i] > 0:\n            left += 1\n        if d[i] < h:\n            break\n    if left > 0:\n        return True\n    return False\n\n\nn, m = list(map(int, input().split()))\nd = [i - 1 for i in input().split()]\ns = list(map(int, input().split()))\ns.sort()\np = list(map(int, input().split()))\np.sort()\nh = 10 ** 10\nfor i in range(n):\n    if can(d, h, p[i]):\n        h -= 1\nprint(h)\n"}, "8": {"problem_id": 2008, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n    s.append(a[i])\n    a[i] = 0\n\nans = 0\ncnt = 0\nwhile cnt < n:\n    cnt += 1\n    m = s[cnt]\n    if m == a[i]:\n        ans += 1\n    else:\n        for j in range(i - 1, -1, -1):\n            if s[j] == m:\n                continue\n            else:\n                break\n        for j in range(i - 1, -1, -1):\n            if s[j] == m:\n                continue\n            else:\n                ans += 1\n            "}, "9": {"problem_id": 2009, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nv = [0] * (10**6 + 1)\nfor i in range(n):\n    x, y = map(int, input().split())\n    v[x - y * v[i]] += 1\n\nans = [0] * (10**6 + 1)\nfor i in range(1, 10**6 + 1):\n    if v[i] == 0:\n        ans[i] = 1\n    else:\n        ans[i] = -1\n\nprint(*ans, sep='\\n')"}, "10": {"problem_id": 2010, "answer": "from sys import stdin as si\ninput=si.readline\nn=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(1,n+1):\n    b=a[i]\n    c+=min(b,c)\nprint(c)"}, "11": {"problem_id": 2011, "answer": "n = int(input())\nans = []\nfor i in range(n):\n    ans.append(str(i + sum(map(int, str(i))))[::-1])\nprint(len(ans))\nfor i in ans:\n    print(i)"}, "12": {"problem_id": 2012, "answer": "n = int(input())\nif n%4 > 1:\n    print(-1)\nelse:\n    a = [0]*n\n    a[0] = 1\n    for i in range(1,n):\n        a[i] = a[i-1] + 1\n    print(*a)"}, "13": {"problem_id": 2013, "answer": "s = input()\nn = len(s)\nc = 'abcdefghijklmnopqrstuvwxyz'\nm = 'a'\nans = ''\nfor i in range(n):\n    if s[i]!= m:\n        ans += c[s[i]]\n        m = c[s[i]]\nprint(ans)"}, "14": {"problem_id": 2014, "answer": ""}, "15": {"problem_id": 2015, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\nv,d,p=[i for i in range(n)]\nfor i in range(n):\n    v[i]=int(input())\n    d[i]=int(input())\n    p[i]=int(input())\nans=[0]*n\nans[0]=1\nfor i in range(1,n):\n    if ans[i]==0:\n        ans[i]=i+1\n        print(i+1)\n        print(*ans)"}, "16": {"problem_id": 2016, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\nW=[0]+list(map(int,input().split()))\nans=0\nfor i in range(m):\n    u,v=list(map(int,input().split()))\n    ans+=max(W[u]-(W[v] if u!=v else 0),W[v])\nprint(ans)\n"}, "17": {"problem_id": 2017, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(2*n):\n    if a[i]!= a[i+1]:\n        ans += 1\nprint(ans)"}, "18": {"problem_id": 2018, "answer": "n, h = map(int, input().split())\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    s.add(a[i] + h)\np = []\nfor i in range(len(s)):\n    if s[i] not in p:\n        p.append(s[i])\n    else:\n        m = max(p)\n        p.remove(m)\n        m1 = min(p)\n        p.append(m + m1)\nprint(' '.join(map(str, p)))"}, "19": {"problem_id": 2019, "answer": "import math\nn = int(input())\na = list(map(int, input().split()))\nm = max(a)\nans = math.ceil(m/n-1)\nfor i in range(m):\n    ans = min(ans, a[i] + n)\nprint(ans)"}, "20": {"problem_id": 2020, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef is_bipartite(n):\n    b = [0]*3\n    for i in range(3):\n        b[i] = 1\n        for j in range(i+1, min(i+3, n)):\n            b[j] = 0\n    return b\n\nans = 0\nfor i in range(n):\n    ans += sum(a[i]!=a[i-1] for j in range(3))\nprint(ans)\n"}, "21": {"problem_id": 2021, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    g = [[] for _ in range(n)]\n    for _ in range(m):\n        u, v = list(map(int, input().split()))\n        g[u].append(v)\n        g[v].append(u)\n    a = []\n    b = []\n    for i in range(n):\n        if g[i] == []:\n            a.append(i)\n    print(len(a))\n    for i in range(len(a)):\n        print(a[i], end=' ')\n    print()\n    for i in range(len(b)):\n        print(b[i], end=' ')\n    print()\nmain()\n"}, "22": {"problem_id": 2022, "answer": "import sys\ninput=sys.stdin.readline\nn,m=list(map(int,input().split()))\nif n==1 and m==1:\n    print(\"YES\")\n    return\nans=[]\nfor i in range(1,n+1):\n    ans.append(m*i%n)\n    m-=1\nif m!=n:\n    print(\"NO\")\n    return"}, "23": {"problem_id": 2023, "answer": "import math\nn = int(input())\na = math.ceil(n ** 0.5)\nb = math.floor(n ** 0.5)\nans = []\nfor i in range(a):\n    ans.append(str(i + 1))\nprint(' '.join(ans))"}, "24": {"problem_id": 2024, "answer": "n = input()\np = list(map(float, input().split()))\na = 0\nb = 0\nfor i in range(n):\n    a += p[i]*2\n    b += p[i]*2\nprint(a + b*2)"}, "25": {"problem_id": 2025, "answer": "import math\ndef is_prime(x):\n    i = 2\n    while(i <= math.sqrt(x)):\n        if(x % i == 0):\n            return False\n        i = i + 1\n    return True\nn = int(input())\na = [0]*n\nfor i in range(n):\n    if(is_prime(i)):\n        a[i] = 1\nprint(n - max(a))"}, "26": {"problem_id": 2026, "answer": "from sys import stdin\nfrom math import inf\n\n\ndef readline():\n    return list(map(int, stdin.readline().strip().split()))\n\n\ndef dijkstra():\n    n, d = readline()\n    a = [0] + list(readline()) + [0]\n    x = [0] * n\n    y = [0] * n\n    for i in range(n):\n        x[i], y[i] = readline()\n    q = [(x[i], y[i]) for i in range(n)]\n    return [d * max(0, i - 1) + a[i] - a[n - i] + q[i] + d * max(0, n - i - 1)\n            for i in range(n)]\n\n\ndef main():\n    n, d = readline()\n    a = [0] + list(readline()) + [0]\n    x = [0] * n\n    y = [0] * n\n    for i in range(n):\n        x[i], y[i] = readline()\n    q = dijkstra()\n    print(len(q))\n    for i in range(n):\n        print(q[i][0] + 1 + q[i][1] * d, end ='')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "27": {"problem_id": 2027, "answer": "s = input()\nn = len(s)\nans = [0] * n\nans[0] = 1\nfor i in range(1, n):\n    if s[i] == 'l':\n        ans[i] = ans[i-1] + 1\n    else:\n        ans[i] = ans[i-1] - 1\nprint('\\n'.join(map(str, ans)))"}, "28": {"problem_id": 2028, "answer": "import sys\ns = input()\nn = len(s)\n\nif n%2==1:\n    print(\"Impossible\")\n    return\n\na = [0]*26\nfor i in range(n):\n    a[ord(s[i])-97]+=1\n\ndp = [0]*n\ndp[0] = 1\nfor i in range(1,n):\n    dp[i] = a[i]\n    for j in range(26):\n        if j>i:\n            dp[i]+=dp[j]\n        else:\n            dp[i]+=dp[i-1]\n\nans = ''.join(chr(97+i) for i in dp)\nprint(ans)"}, "29": {"problem_id": 2029, "answer": "n = int(input())\nif n % 2 == 0:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    arr = []\n    cnt = 0\n    for i in range(2*n):\n        arr.append(i)\n        cnt += i\n        if cnt > 2*n:\n            cnt = 2*n\n        for j in range(2*n):\n            arr[j] += 2*i\n            if arr[j] > arr[2*n]:\n                arr[j] -= arr[2*n]\n                cnt += 1\n"}, "30": {"problem_id": 2030, "answer": "from collections import deque\nn, x, y = [int(i) for i in input().split()]\ncities = [list(map(int, input().split())) for _ in range(n - 1)]\ns = 0\nvisited = set()\nq = deque([y])\nwhile q:\n    s += x\n    for i in range(len(cities) - 1):\n        if visited.add(cities[i]):\n            q.append(cities[i])\n            visited.remove(cities[i])\n        elif cities[i] not in visited:\n            q.append(cities[i])\nprint(s)"}, "31": {"problem_id": 2031, "answer": "n,m=map(int,input().split())\na=list(map(int,input().split()))\ns=set()\nfor i in range(m):\n    s.add(a[i])\n    a.remove(a[i])\nans=[]\nfor i in range(n):\n    if a[i] not in s:\n        ans.append(i+1)\nprint(' '.join(map(str,ans)))"}, "32": {"problem_id": 2032, "answer": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\ndef LI(): return list(map(int, input().split()))\ndef II(): return int(input())\ndef LS(): return input().split()\ndef S(): return input()\n\n\ndef main():\n    n = II()\n    d = collections.defaultdict(set)\n    for _ in range(n-1):\n        a,b = LI()\n        d[a].add(b)\n        d[b].add(a)\n\n    path = set()\n    path.add(-1)\n    ans = 0\n    for i in d:\n        if len(d[i]) == 2:\n            ans += 2\n            path.add(i.index(i[0]))\n            path.add(i.index(i[1]))\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "33": {"problem_id": 2033, "answer": "import sys\ninput = sys.stdin.readline\n\nh = int(input())\na = list(map(int, input().split()))\nd = [[] for i in range(2*10**5+1)]\nfor i in range(1, h):\n    d[i].append(i)\n\nans = [0]*h\nvisited = [False]*h\nvisited[0] = True\ndef check(i):\n    if visited[i]:\n        return False\n    visited[i] = True\n    for d in d[i]:\n        if visited[d]:\n            continue\n        check(d)\n    return True\n\nfor i in range(h):\n    print(' '.join(map(str, a[i])))\n    print(' '.join(map(str, d[i][a[i]-1])))"}, "34": {"problem_id": 2034, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nn = int(input())\npoints = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    points.append((x, y))\nprint(max(points[2], points[0] + points[2]))"}, "35": {"problem_id": 2035, "answer": "n, m = map(int, input().split())\na = list(map(int, input().split()))\np = [0] * (m + 1)\nfor i in range(n):\n    p[a[i]] = p[a[i]] + 1 if a[i] < 2 ** m else 0\nans = [0] * (m + 1)\nfor i in range(m):\n    ans[a[i]] = p[i]\n    for j in range(1, min(m, i + 1)):\n        ans[a[i - j]] = ans[a[i - j]] + p[j]\nprint(' '.join(map(str, ans)))"}, "36": {"problem_id": 2036, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\ngames = []\nfor i in range(n):\n    games.append(list(map(int, input().split())))\n\nfib = [0] * (2 * n + 1)\nans = 0\nfor g in games:\n    fib[g[0] - 1] += g[1]\n    ans += fib[g[0] - 1]\nprint(ans)\n"}, "37": {"problem_id": 2037, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = 0\nqueue = [0]*n\nans += sum(queue)\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    if a > b:\n        a, b = b, a\n    queue[i] = a\n    ans += abs(a - b)\nprint(ans)\n"}, "38": {"problem_id": 2038, "answer": ""}, "39": {"problem_id": 2039, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nA = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    A[i] = (A[i] + A[i + m] - A[i + m]) % m\n    ans += min(m - A[i], i - A[i])\nprint(ans)"}, "40": {"problem_id": 2040, "answer": "from math import sqrt\nn, h = map(int, input().split())\nans = []\nfor i in range(1, n):\n    ans.append(sqrt(i/n))\nprint(' '.join(map(str, ans)))"}, "41": {"problem_id": 2041, "answer": "def main():\n    n, l = int(input()), list(map(int, input().split()))\n    if n & 1:\n        l.append(150001)\n        l.append(150002)\n    l.append(150004)\n    l.append(150006)\n    l.append(150008)\n    l.append(150009)\n    l.append(150010)\n    l.append(150012)\n    l.append(150014)\n    l.append(150016)\n    l.append(150018)\n    l.append(150020)\n    l.append(150024)\n    l.append(150026)\n    l.append(150028)\n    l.append(150030)\n    l.append(150032)\n    l.append(150034)\n    l.append(150036)\n    l.append(150038)\n    l.append(150040)\n    l.append(150044)\n    l.append(150046)\n    l.append(150048)\n    l.append(150050)\n    l.append(150052)\n    l.append(150054)\n    l.append(150056)\n    l.append(150058)\n    l.append(150060)\n    l.append(150064)\n    l.append(150066)\n    l.append(150068)\n    l.append(150070)\n    l.append(150072)\n    l.append(150074)\n    l.append(150076)\n    l.append(150078)\n    l.append(150080)\n    l.append(150084)\n    l.append(150086)\n    l.append(150088)\n    l.append(150090)\n    l.append(150092)\n    l.append(150094)\n    l.append(150096)\n    l.append(150098)\n    l.append(1500A0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)\n    l.append(15B0)"}, "42": {"problem_id": 2042, "answer": "def main():\n    n, a, b, t = list(map(int, input().split()))\n    s = input()\n    a = s.count('w')\n    b = s.count('h')\n    t = int(t)\n    ans = 0\n    for i in range(n):\n        if s[i] == 'w':\n            ans += a\n        else:\n            ans += b\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "43": {"problem_id": 2043, "answer": "from sys import stdin as si\ninput = si.readline\nn = int(input())\na = [list(map(int,input().split())) for i in range(n)]\na.reverse()\ns = [0]*n\nfor i in range(n):\n    s[i] = a[i][1] + a[i][0]\nprint(' '.join(map(str,s)))"}, "44": {"problem_id": 2044, "answer": "import sys\ninput = sys.stdin.readline\nn, k = list(map(int, input().split()))\nr = n-k\na = [0]*k\nfor i in range(2*k):\n    a[i] = 1\n    for j in range(1, n-i-1):\n        a[j] += a[j-1]\nprint(max(a))\n"}, "45": {"problem_id": 2045, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint = stdout.write\nn, m = list(map(int, input().split()))\nans = []\nfor i in range(m):\n    l, r, x = list(map(int, input().split()))\n    if l >= x:\n        ans.append(x)\n    else:\n        ans.append(l)\nprint(*ans)\n"}, "46": {"problem_id": 2046, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\na = list(map(int,stdin.readline().split()))\nb = [0]*n\nb[0] = a[0]\nfor i in range(1,n):\n    b[i] = a[i] + b[i-1]\n    \ndef check(x):\n    if x < 0 or x > n:\n        return -1\n    else:\n        return x\n    \nans = []\nfor i in range(n-1):\n    ans.append(check(b[i]))\nprint('\\n'.join(ans))"}, "47": {"problem_id": 2047, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, k = map(int, input().split())\n    l = list(map(int, input().split()))\n    r = l[n - 1]\n    c = l[n - 2]\n    d = l[n - 3]\n    \n    ans = []\n    for i in range(4):\n        ans.append(0)\n        ans.append(k)\n        ans.append(r)\n        ans.append(c)\n        ans.append(d)\n    \n    print(len(ans))\n    for i in range(len(ans) - 1):\n        print(ans[i] + 1, ans[i + 1], end= \" \")\n    print(\"\\n\".join(map(str, ans)))\n\nmain()\n"}, "48": {"problem_id": 2048, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n    s+=a[i]\n    if s>k:\n        s-=k\n    elif s<k:\n        s+=k\nprint(s)\n"}, "49": {"problem_id": 2049, "answer": "import operator\ndef binarize(s):\n    n = len(s)\n    res = [0] * (n + 1)\n    for i in range(1, n + 1):\n        res[i] = min(res[i - 1], s[i - 1] ^ s[i])\n    return res\n\nn, m = list(map(int, input().split()))\np = []\nfor i in range(n):\n    p.append(binarize(input()))\n\nop = operator.AND\nscores = [0] * n\nmin_scores = p[0]\nmax_scores = p[-1]\nfor i in range(n - 1):\n    scores.append(min_scores + p[i] * op(p[i + 1]))\n\nmin_scores = scores[0]\nmax_scores = scores[-1]\n\nprint(min_scores)\nprint(max_scores)"}, "50": {"problem_id": 2050, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\nM = [0]*26\nfor i in range(n):\n  M[ord(input()) - ord('a')] += 1\n\ns = list(input())\ns.insert(0, '_')\na = [0]*26\nb = [0]*26\nfor i in range(1, n):\n  a[i] += M[i]\n  b[i] += M[26 + i]\n\nif k > n - k:\n  print('First')\nelse:\n  print('Second')"}, "51": {"problem_id": 2051, "answer": "from heapq import heappush, heappop, nsmallest\nn, k = list(map(int, input().split()))\nc = list(map(int, input().split()))\nl = [0] * n\nfor i in range(1, n):\n    l[i] = heappop(l[i])\n    if l[i] > k:\n        l[i] = nsmallest(k, l[i])\nprint(sum(l))\nprint(' '.join(map(str, l)))\n"}, "52": {"problem_id": 2052, "answer": "n, m = map(int, input().split())\nb = [0] * n\nfor i in range(m):\n    a, b = map(int, input().split())\n    b[a] += 1\nans = 0\nfor i in range(n - 1):\n    x, y = b[i + 1:]\n    x &= n - 1\n    y &= n - 1\n    ans += max(0, x - y)\nprint(ans)"}, "53": {"problem_id": 2053, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na.sort()\nb.sort()\nif a[n-1]!= b[m-1]:\n    print(-1)\nelse:\n    s = sum(a[i] for i in range(n))\n    t = sum(b[i] for i in range(m))\n    print(s + t)"}, "54": {"problem_id": 2054, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nedges = []\nfor i in range(n-1):\n    u,v = list(map(int, input().split()))\n    edges.append((u,v))\ncolors = list(map(int, input().split()))\n\ndef dfs(s, p):\n    colors[s] = p\n    for e in edges:\n        if colors[e[0]]!= e[1]:\n            dfs(e[0], e[1])\ndfs(0, 0)\n\nans = []\nfor i in range(n-1):\n    if colors[i]!= colors[i+1]:\n        ans.append(i+1)\n\nprint('YES\\n'.join(map(str, ans)))\n"}, "55": {"problem_id": 2055, "answer": "MOD = 1000000007\nst,n,t,mp=input(),int(input()),[],{}\n\nt.append(['',st])\n\nfor i in range(10):\n\tmp[str(i)]=(10,i)\n\nfor i in range(n):\n\tt.append(input().split(\"->\"))\n\nfor i in range(n,-1,-1):\n\ta,b=1,0\n\tfor j in t[i][1]:\n\t\ta,b=a*mp[j][0]%MOD,(b*mp[j][0]+mp[j][1])%MOD\n\tmp[t[i][0]]= a,b\n\nprint(mp[''][1])\n\n"}, "56": {"problem_id": 2056, "answer": "n = int(input())\na = input()\nb = input()\nans = 0\nfor i in range(n):\n    if a[i]!= b[i]:\n        ans += 1\nprint(ans)"}, "57": {"problem_id": 2057, "answer": "s = input()[::-1]\nmod = 10**9 + 7\ncnt = 0\nfor i in range(len(s)):\n    if s[i] == 'a':\n        cnt += (s.count('a')%mod)\n    elif s[i] == 'b':\n        cnt += (s.count('b')%mod)\nprint(cnt%mod)"}, "58": {"problem_id": 2058, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nn = int(input())\na = list(map(int,input().split()))\nd = [0]*1000001\nfor i in range(1,1000001):\n    d[i]+=i\ns = 0\nm = 10001\nfor i in range(n):\n    if d[i]>0:\n        s+=bl(d[i])\n        m-=1\n    else:\n        m-=1\nprint(s)"}, "59": {"problem_id": 2059, "answer": "n = int(input())\ns = input().split(' ')\ns = [int(x) for x in s]\na = [-1] * n\nb = [-1] * n\nfor i in range(n):\n    if s[i] > 0:\n        a[i] = max(a[i], s[i])\n    else:\n        a[i] = 0\nfor i in range(n):\n    if s[i] < 0:\n        b[i] = max(b[i], s[i])\n    else:\n        b[i] = 0\nans = sum(a) + sum(b)\nprint(ans)"}, "60": {"problem_id": 2060, "answer": "import sys\ndef read_ints(): return list(map(int, sys.stdin.readline().split()))\ndef read_int(): return int(sys.stdin.readline())\nn, k = read_ints()\nv = list(read_ints())\nc = [0]*n\nfor i in range(k):\n    c[i] = v[i]\n    for j in range(i, n):\n        c[j] = max(c[j], v[i] - v[j])\nprint(c[k-1])"}, "61": {"problem_id": 2061, "answer": "def solve(ax,ay,bx,by,cx,cy):\n    x = min(ax,bx,cx)\n    y = min(ay,by,cy)\n    if x == y:\n        return 0\n    else:\n        return max(abs(x-y),1) + solve(x,y,bx,by,cx,cy)\nt = int(input())\nfor _ in range(t):\n    ax,ay,bx,by,cx,cy = map(int,input().split())\n    print(solve(ax,ay,bx,by,cx,cy))"}, "62": {"problem_id": 2062, "answer": "import sys\ninput = sys.stdin.readline\nN, A, B, C, D = map(int, input().split())\nMOD = 10**9+7\nfac = [1]*(N+1)\nfac[1] = A\nfor i in range(2, N+1):\n    fac[i] = (fac[i-1]*i)%MOD\nans = 1\nfor i in range(1, N+1):\n    ans = (ans*fac[i])%MOD\nprint(ans)"}, "63": {"problem_id": 2063, "answer": "def main():\n    def root(x):\n        if x == fn(x):\n            return x\n        fn(x) = root(x)\n    n, m = list(map(int, input().split()))\n    f = [set() for _ in range(n)]\n    for i, x in enumerate(sorted(list(range(1, m+1))))[::-1]:\n        f[i].add(x)\n    def dfs(i, c):\n        nonlocal m\n        if i == n:\n            m = max(m, len(c))\n        for j in range(i):\n            if c[j] not in f[j]:\n                dfs(j+1, c[j])\n    print(sum(dfs(i, c) for i, c in enumerate(f)) if m else 0)\n\n\ndef fn(x):\n    if x == 1:\n        return 2\n    return x+fn(x-1)"}, "64": {"problem_id": 2064, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, q = list(map(int, readline().split()))\np = [[] for _ in range(n)]\nfor _ in range(q):\n    r, c = list(map(int, readline().split()))\n    p[r].append(c)\n    p[c].append(r)\n\nq = int(readline())\nwhile q:\n    q -= 1\n    t = p[2:n+2]\n    if all(x[0] == x[1] for x in t):\n        print('Yes')\n    else:\n        print('No')\n"}, "65": {"problem_id": 2065, "answer": "#!/usr/bin/env python3\nfrom collections import deque\n\nn, k = list(map(int, input().split()))\nmas = []\nfor i in range(k):\n    mas.append(list(map(int, input().split())))\nmas.sort()\nans = 0\nm = n + 1\nfor i in range(1, min(n, m) + 1):\n    ans += mas[i].count(1)\n    m -= 1\n    while m < 0:\n        m += 1\nprint(ans)\n"}, "66": {"problem_id": 2066, "answer": "n = int(input())\nx = sorted(list(map(int, input().split())))\nprint(min([x[i + n // 2] - x[i] for i in range(n // 2)]))\n\n"}, "67": {"problem_id": 2067, "answer": "import sys\n \nn = int(sys.stdin.readline())\n \na = [0] * (n + 1)\n \nfor i in range(1, n + 1):\n    a[i] = i\n \nans = 0\n \nfor i in range(n):\n    p, a = list(map(int, sys.stdin.readline().split()))\n    if a[p] == -1:\n        ans += 1\n    else:\n        a[p] += 1\n \nprint(ans)"}, "68": {"problem_id": 2068, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nw = list(map(int, readline().split()))\ng = [[] for _ in range(n)]\nfor i in range(n-1):\n    u, v, l = map(int, readline().split())\n    g[u].append((v, l))\n    g[v].append((u, l))\n    \npath = [-1] * n\nvisited = [0] * n\nans = 0\nstack = [u for u in range(n)]\nwhile stack:\n    now = stack.pop()\n    ans += w[now]\n    path[now] = now\n    for adj in g[now]:\n        if visited[adj] == 0:\n            visited[adj] = 1\n            stack.append(adj)\nprint(ans)"}, "69": {"problem_id": 2069, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = len(a)\nans = []\nfor i in range(l):\n    ans.append(a[i]*l)\n    a[i] = 0\nfor i in range(l):\n    ans.append(a[i]*l)\n    a[i] = 0\nfor i in range(2, n+1):\n    print(ans[i], end=' ')\n    for j in range(i):\n        print(ans[j], end=' ')"}, "70": {"problem_id": 2070, "answer": "import sys\ninput = sys.stdin.readline"}, "71": {"problem_id": 2071, "answer": "from collections import Counter\nn = int(input())\nw = Counter()\nfor i in range(n):\n    x, y = map(int, input().split())\n    w[x] += w[y]\nans = 0\nfor k in w.keys():\n    if w[k] > 0:\n        ans += (n-1)//2*(w[k]//2-1)\nprint(ans)"}, "72": {"problem_id": 2072, "answer": "from sys import stdin\ninput = stdin.readline\nn, k = list(map(int, input().split()))\nl = [tuple(map(int, input().split())) for _ in range(n)]\nl.sort()\nans = 9999999999\nfor i in range(1, n):\n    ans = min(ans, l[i][0] - l[i - 1][1] + k)\nprint(ans)\n"}, "73": {"problem_id": 2073, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ns = [int(x) for x in input().split()]\nans = 0\nm = [0] * (10**5+1)\nfor i in range(1, n):\n    m[i] = max(m[i-1], s[i])\n    m[i] = m[i-1] ^ s[i]\n    ans = max(ans, m[i])\nprint(ans)"}, "74": {"problem_id": 2074, "answer": "f = lambda: map(int, input().split())\nn, k = f()\np = sorted(f())\n\nm, d = n // k, n % k\nu, v = d + 1, k - d + 1\ng = [0] * u * v\n\ni = 0\nfor a in range(u):\n    j = a * m + a - 1\n    for b in range(v):\n        x = g[i - 1] + p[j] - p[j - m + 1] if b else 9e9\n        y = g[i - v] + p[j] - p[j - m] if a else 9e9\n        if i: g[i] = min(x, y)\n        i += 1\n        j += m\nprint(g[-1])"}, "75": {"problem_id": 2075, "answer": "n,m,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\ns=sum(a)\nt=sum(b)\nif s>t:\n    print('YES')\nelse:\n    print('NO')\n"}, "76": {"problem_id": 2076, "answer": "n = int(input())\npoints = list(map(int, input().split()))\ngood_pts = []\nfor i in range(n):\n    a, b, c, d, e = points[i]\n    if a == c and b == d:\n        good_pts.append(i)\nprint(len(good_pts))\nfor i in range(len(good_pts)):\n    print(good_pts[i], end=\" \")"}, "77": {"problem_id": 2077, "answer": "import sys\ninput = sys.stdin.readline\n\nn, a, b = map(int, input().split())\nA = list(map(int, input().split()))\nB = [0]*n\nfor i in A:\n    if i > b:\n        B[i] = 1\n    else:\n        B[i] = 0\n\nans = ['0']*n\nfor i in range(n):\n    if B[i]:\n        ans.append(a-i)\nprint('YES' if ans else 'NO')"}, "78": {"problem_id": 2078, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nb = list(map(int, readline().split()))\nans = [0]*n\nans[0] = 1\nfor i in range(1, n):\n    if ans[i]==0:\n        ans[i] = 1\n    elif ans[i-1]==0:\n        ans[i] = 1\n    else:\n        ans[i] = a[i-1] - b[i]\n        ans[i-1] = a[i-1] + b[i]\nprint(ans[n-1])"}, "79": {"problem_id": 2079, "answer": "from bisect import bisect_left\nfrom collections import defaultdict\n\n\ndef find_path(u, v):\n    p = defaultdict(lambda: 0)\n    q = []\n    while u!= v:\n        p[u] += 1\n        q.appendleft(u)\n        u = find_path(v, u)\n    return p, q\n\n\ndef write_output():\n    for i in range(int(input())):\n        if i == \"2\":\n            print(find_path(i, int(input()))[0])\n        else:\n            print(find_path(i, int(input()))[1])\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        input()\n\n    write_output()"}, "80": {"problem_id": 2080, "answer": "m = int(input())\nq = list(map(int, input().split()))\nn = int(input())\na = list(map(int, input().split()))\ncnt = 0\nres = 0\nfor i in range(n):\n    if a[i] <= b:\n        cnt += 1\n        b = a[i]\n    elif a[i] <= (b + cnt) / 2:\n        cnt += 1\n        b += cnt\n    else:\n        b += cnt\nprint(b)"}, "81": {"problem_id": 2081, "answer": "import sys\ninput = sys.stdin.readline\n\nn, x = map(int, input().split())\nA = list(map(int, input().split()))\n\nB = [0] * (n + 1)\nB[0] = A.index(min(A))\nfor i in range(1, n):\n    B[i] = B[i - 1] + A[i]\n\nans = 0\nfor i in range(n):\n    ans += B[i] - A[i]\nprint(ans)"}, "82": {"problem_id": 2082, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\na = list(map(int, readline().split()))\np = 998244353\nd = [0]*n\nfor i in range(1, n):\n    d[i] = a[i]*p\n    p = p*d[i-1]\nans = pow(p, n-1, p)\nprint(ans%1000000007)"}, "83": {"problem_id": 2083, "answer": "n, m = map(int, input().split())\na = [0]*(n+1)\nfor _ in range(m):\n    t, l, r, d = map(int, input().split())\n    a[l] = max(a[l], a[l] + d)\n    a[r] = max(a[r], a[r] + d)\n    a[t-1] = max(a[t-1], a[t-1] + d)\nprint('YES' if len(set(a)) == n else 'NO')[1]"}, "84": {"problem_id": 2084, "answer": "from heapq import heappush, heappop, heappushpop\nmod = 10**9 + 9\nm = int(input())\na = [tuple(map(int, input().split())) for _ in range(m)]\nheappushpop(a, 0)\nb = [tuple(map(int, input().split())) for _ in range(m)]\nb.sort()\nprint(b[0][1] * m - b[0][0] * (m - 1) - b[1][0])"}, "85": {"problem_id": 2085, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\ns = [list(map(int, readline().split())) for i in range(n)]\nm = int(readline())\nd = {}\nfor i in range(1, n + 1):\n    d[i] = set()\n    for s1 in s:\n        s1.append(s[-1])\n        d[i].add(s1)\nans = []\nfor i in range(m):\n    a, b = list(map(int, readline().split()))\n    a -= 1\n    b -= 1\n    ans.append(max(0, a - b))\nprint('\\n'.join(map(str, ans)))"}, "86": {"problem_id": 2086, "answer": "from collections import deque\nn, q = list(map(int, input().split()))\na = list(map(int, input().split()))\nM = max(a)\nA = deque(sorted(a))\nans = []\nfor i in range(M):\n    ans.append((A[i], i))\n    A.rotate(-1)\n    A.append(i)\n\nfor _ in range(q):\n    m = int(input())\n    if m == 0:\n        print(0, 0)\n    else:\n        q1, q2 = list(map(int, input().split()))\n        if m == 1:\n            print(A[q1-1], A[q2-1])\n        elif m == 2:\n            print(A[q1-1], A[q2-2])\n        else:\n            print(A[q1-2], A[q2-1])"}, "87": {"problem_id": 2087, "answer": "n, l, r, ql, qr = list(map(int, input().split()))\nw = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(1, n + 1):\n    s[i] += w[i - 1]\n    s[n + i - 1] += w[i]\nans = sum(s[i] for i in range(n + 1))\nprint(ans)"}, "88": {"problem_id": 2088, "answer": "n = int(input())\nt = tuple(map(int, input().split()))\nm = [[1] * n for i in range(n + 1)]\nfor d in range(2, n + 1):\n    for i in range(n - d + 1):\n        m[d][i] = min(m[x][i] + m[d - x][i + x] for x in range(1, d))\n        if t[i] == t[i + d - 1]: m[d][i] = min(m[d][i], m[d - 2][i + 1])\nprint(m[n][0])\n"}, "89": {"problem_id": 2089, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [0]*1023\nfor i in range(n):\n    c, b = input().split()\n    a[int(c)] = b\n\nb = 1023\nc = 0\nfor i in range(10):\n    b = b & (1<<i)\n    c += b\n\nprint(2)\nprint(''.join(map(str, a[i:])))"}, "90": {"problem_id": 2090, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\ng = [[] for _ in range(n)]\nfor i in range(m):\n    g[int(input())].append((int(input()), i))\n\ns, t, l = list(map(int, input().split()))\nh = [0] * (n + 1)\nfor i in range(1, n + 1):\n    h[i] = h[i - 1] + 1\n\nans = 0\nfor i in range(n):\n    s_1, t_1 = g[s].pop()\n    s_2, t_2 = g[t].pop()\n    h[s_1] -= l\n    h[t_2] -= l\n    if h[s_1] <= l and h[t_2] <= l:\n        ans += 1\nprint(ans)\n"}, "91": {"problem_id": 2091, "answer": "import sys\ninput = sys.stdin.readline\n\ns = input()\nM = 1000000007\nN = 10**6+1\ndp = [0]*(10**5+1)\nfor i in range(N):\n    dp[i+1] = 1\n    for c in s:\n        dp[i+1] = max(dp[i+1],dp[i]+1)\n\nans = [0]*(10**5+1)\nfor i in range(10**5+1):\n    ans[i] = dp[i]\n\nfor _ in range(M):\n    l,r = map(int,input().split())\n    print(ans[r-1] + ans[l-1])"}, "92": {"problem_id": 2092, "answer": "n = int(input())\ns = input()\nprint('home' if s.startswith(s[:n]) else 'contest')"}, "93": {"problem_id": 2093, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    if a[i] < a[i + 1]:\n        ans.append([a[i], 'used'])\n    else:\n        ans.append([a[i], 'used'])\nfor line in ans:\n    print(''.join(line))"}, "94": {"problem_id": 2094, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ns = input().strip()\nprint(\"1\"*n+\"0\"*(n-len(s)))"}, "95": {"problem_id": 2095, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nroot = [False]*n\nfor i,a[i] in enumerate(a):\n    root[i] = True\nvisited = [0]*n\nq = deque([])\nwhile q:\n    now = q.popleft()\n    for nei in root[now]:\n        if visited[now] == 0:\n            q.append(nei)\n            visited[now] = 1\n            if nei not in q:\n                q.append(nei)\nprint(len(q))\nfor i in q:\n    print(i)"}, "96": {"problem_id": 2096, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sorted(a)\nans = []\nfor i in range(n):\n    ans.append(s[i])\nprint(len(ans))\nfor i in ans:\n    print(i, end ='')"}, "97": {"problem_id": 2097, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = [int(i) for i in input().split()]\ns = set()\ns.add(1)\nfor i in range(1, n):\n    s.add(i)\n    a.append(min(a[-1], i))\nans = 0\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    g[a[i]].append(i)\ndp = [0] * n\ndp[0] = 1\nvisited = [False] * n\nvisited[0] = True\ndef dfs(v, p):\n    nonlocal ans\n    ans = max(ans, p[v])\n    for nv in g[v]:\n        if visited[nv] == False:\n            dfs(nv, p)\n            visited[nv] = True\ndfs(0, 0)\nprint(ans)"}, "98": {"problem_id": 2098, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\np = [[0] * m for _ in range(n)]\nfor i in range(n):\n    p[i][1] += 1\nans = 0\nfor i in range(2, n + 1):\n    for j in range(m):\n        p[i][j] += p[i - 1][j]\n    ans += p[i][m - 1]\nprint(ans)\n"}, "99": {"problem_id": 2099, "answer": "import sys\nn, k = list(map(int, input().split()))\nif k == 1:\n    print(1)\nelif k == 2:\n    print(2)\nelse:\n    a = 1\n    b = 2\n    for i in range(1, n + 1):\n        a = i\n        b = i + a\n    print(a, b)\n"}}