{"0": {"problem_id": 3000, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nfact = [1]*(10**5+7)\nfor i in range(1,10**5+7):\n    fact[i] = fact[i-1]*i\n    fact[i] = (fact[i]*i)%MOD\nn = int(input())\nt = input().split()\na = [int(i) for i in t]\nprint(a[0]*a[1]*a[2]*a[3]*a[4]*a[5])"}, "1": {"problem_id": 3001, "answer": "import sys\nreadline = sys.stdin.readline\n\nk = list(map(int,readline().split()))\nk.reverse()\ns = str(k[0])\nd = 9999999999\nfor i in range(1,len(k)):\n    if k[i]%2!=0:\n        d = k[i]\n        break\nans = d*(len(s)-1)\nsys.stdout.write(ans+\"\\n\")"}, "2": {"problem_id": 3002, "answer": "import bisect\ninput = lambda: list(map(int, input().split()))\nv = int(input())\nfor _ in range(v):\n y, m, o = map(int, input().split())\n if y > 1950:\n  print(\"tampered odometer\")\n elif y == 1950:\n  if m == 1:\n   print(\"insufficient service\")\n  elif m == 2:\n   print(\"seems legit\")\n  else:\n   print(\"tampered odometer\")\n else:\n  if o == 0:\n   print(\"insufficient service\")\n  else:\n   m = 12\n   odometer_time = bisect.bisect_right(sorted(s, key=lambda x: x[m]), y)\n   if odometer_time == len(s):\n    print(\"invalid odometer\")\n   else:\n    if m == 1:\n     print(\"tampered odometer\")\n    else:\n     if m == 2:\n      print(\"insufficient service\")\n     else:\n      if m % 30000 == 0:\n       print(\"seems legit\")\n      else:\n       print(\"tampered odometer\")"}, "3": {"problem_id": 3003, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    graph = [[] for _ in range(n)]\n    for _ in range(n):\n        line = list(map(int, readline().strip().split()))\n        graph[line[0]].append(line[1])\n    "}, "4": {"problem_id": 3004, "answer": "import sys\r\nimport math\r\nimport bisect\r\nfrom collections import defaultdict,Counter\r\nfrom itertools import permutations, combinations\r\nfrom operator import itemgetter\r\ninput = sys.stdin.readline\r\n \r\ndef main():\r\n    n = int(input())\r\n    arr = []\r\n    for i in range(n):\r\n        s = input()\r\n        arr.append(s)\r\n    print(arr.count(input()))\r\n    "}, "5": {"problem_id": 3005, "answer": "s=input()\nl=len(s)\nif l==1:\n    print(1)\nelif l==2:\n    print(2)\nelse:\n    a=[]\n    for i in range(2,l):\n        a.append(s[i])\n        a.append(s[i]**l)\n    print(max(a))"}, "6": {"problem_id": 3006, "answer": "import sys\nread = lambda: sys.stdin.readline().rstrip()\nreadline = lambda: sys.stdin.readline().strip()\n\ndna = 'A'*10**10\nins = lambda: list(map(int, readline().split()))\ndel = lambda: list(map(int, readline().split()))\nins_lst, del_lst = [], []\nfor i in range(1, 11):\n    ins_.append(ins(i))\n    del_lst.append(del(i))\n\ninstr = lambda: list(map(int, readline().split()))\n\ns = LongLongString()\nfor instr in instr_lst:\n    s.insert(instr[0], instr[1])\n    if s.isspace():\n        continue\n    else:\n        print('0')\n        break"}, "7": {"problem_id": 3007, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nprint2 = stdout.write\ndef f(a,b,c,d):\n if a==0:\n  return 0\n elif b==0:\n  return c\n elif c==0:\n  return f(d,a-1,3,d)\n else:\n  return f(d,a-1,3,c-d)\n\nd,b,f,t0,t1,t2 = map(int,input().split())\nl=[]\nfor i in range(3):\n l.append((t0+i)%3)\nl.append((t1+i)%3)\nl.sort()\nm=0\nfor i in range(d):\n m+=l[i]\nprint(m)"}, "8": {"problem_id": 3008, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = map(int, readline().split())\na = list(map(int, readline().split()))\nb = list(map(int, readline().split()))\n\nd = [0] * (n + 1)\nfor i in range(1, n + 1):\n    if a[i] + k < b[i]:\n        d[i] = 1\n    elif b[i] + k < a[i]:\n        d[i] = 2\n\nprint(max(d))"}, "9": {"problem_id": 3009, "answer": "import math\ndef isinf(a):\n    return 0 <= a and a < 0\ndef isint(a):\n    return 0 <= a and a < 10**10\ndef isclass(a):\n    return isinf(a) and all(a % 2 == 0 for a in range(100))\ndef ceil(a,b):\n    if a < b:\n        a, b = b, a\n    return (a+b-2)//(b-a)\ndef INT():\n    return int(input())\ndef FLOAT():\n    return float(input())\ndef sin():\n    return sin(INT())\ndef cos():\n    return cos(INT())\nn = INT()\nlamps = [INT()]\nfor i in range(n):\n    lamps.append(INT())\ntot = 0\nfor i in lamps:\n    tot += i\n    if isint(tot):\n        print(abs(INT() - tot))\n    else:\n        print(abs(INT() - tot) - 1e-6)"}, "10": {"problem_id": 3010, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = []\nfor i in range(n):\n    x,y,z,w = map(int,input().split())\n    ans.append((x+y,z+w,y+z,z+w))\n\nprint(ans.count(min(ans)))"}, "11": {"problem_id": 3011, "answer": "import math\ndef is_hill(n):\n    if n<=10:\n        return False\n    i=0\n    while n>0:\n        if math.log10(n)>i:\n            return False\n        n=n//10\n        i+=1\n    return i==9"}, "12": {"problem_id": 3012, "answer": ""}, "13": {"problem_id": 3013, "answer": "import math\nb, tx, tx2 = map(float, input().split())\nd = b*math.polar((2*tx**2-tx)%1000000007, tx)\nr = d[0]\nphi = b*math.cos(r)\np = tx**2-phi**2\nans = '%.2f %.2f' % (r, p)\nfor i in range(1, 12):\n    ans = '%.2f %.2f' % (ans[:i] + ans[i:], ans[i:])\nprint(ans)"}, "14": {"problem_id": 3014, "answer": "# cook your dish here\nfrom collections import deque\nr=int(input())\nm=0\nfor i in range(r):\n    x,y=list(map(int,input().split()))\n    if x>1 and y>1:\n        m+=1\n    elif x==1 and y==1:\n        m+=1\n    else:\n        m-=1\n        print(m)\n        for j in range(m):\n            print(j,end=\" \")\n        print()"}, "15": {"problem_id": 3015, "answer": "import sys\ninput = sys.stdin.readline\n \nn,m,s,t = map(int,input().split())\nham = [tuple(map(int,input().split())) for i in range(n)]\ninf = 10**9+1\nres = 0\nfor i in range(1,n+1):\n    if ham[i] not in set(ham):\n        continue\n    a,b,c,d = ham[i],ham[i-1],ham[i-2],ham[i-3]\n    if ham[i]==tuple(ham):\n        continue\n    elif ham[i]==ham:\n        continue\n    else:\n        res += d\n        ham[i] = ham[i-1]\n        ham[i-1] = ham[i]\n        ham[i-2] = ham[i-3]\n        ham[i-3] = ham[i]\n        \nprint(res)"}, "16": {"problem_id": 3016, "answer": "import sys\ninput = sys.stdin.readline\nm=10**9+7\ndef fac(a):\n    if a<2:return 0\n    d= fac(a//2)\n    if d%2==0:return d\n    return d*d%m\nn=int(input())\na=list(map(int,input().split()))\nk=[]\nfor i in range(n):\n    k.append(tuple(a[i]))\nl=[]\nfor i in range(n):\n    l.append(tuple(a[i]))\nans=0\nfor i in range(n):\n    if k[i]!=l[i]:ans+=fac(k[i])\nprint(ans)"}, "17": {"problem_id": 3017, "answer": "import sys\nn,e=list(map(int,input().split()))\nif n<=9000000 and e<=62:\n    print(n**2)\nelse:\n    print(2**e)"}, "18": {"problem_id": 3018, "answer": "import math\ndef __starting_point():\n k, t = map(int, input().split())\n dice = list(map(int, input().split()))\n dice.sort()\n s = sum(dice[:k])\n \n if t == s:\n  print(k)\n else:\n  d1 = dice[k-1]\n  d2 = dice[k:t]\n  s += dice[t-1]\n  \n  if s > t*math.ceil(s/t):\n   print(k)\n  else:\n   print(min(d1, d2))"}, "19": {"problem_id": 3019, "answer": "from math import *\nn=int(input())\ns=list(map(int,input().split()))\nd=dict()\nfor i in s:\n    d[i]+=1\nd1={i for i,j in enumerate(s) if j%i==0}\nd2={i for i,j in enumerate(s) if j%i==i}\nd.update(d1)\nd.update(d2)\ns.sort()\nc=0\nfor i in range(n):\n    c+=d[s[i]]\nprint(c)"}, "20": {"problem_id": 3020, "answer": "import math\ndef is_prime(n):\n    i = 2; \n    while(i <= math.sqrt(n)):\n        if(n % i == 0):\n            return False;\n        i += 1\n    return True;\nN = int(input())\nl = []\ncarry = 0\nfor i in range(N):\n    l.append(str(i+1) * 10)\ncarry = 0\nfor i in range(N):\n    if(is_prime(i)):\n        l[i] = '0'*(len(l)-1) + l[i]\n        carry = i\n    else:\n        break"}, "21": {"problem_id": 3021, "answer": "import sys\ndef inp(): return sys.stdin.readline().strip()\ndef out(s): sys.stdout.write(s+'\\n')\ndef outa(*args): sys.stdout.write(' '.join(args)+'\\n')\ndef lis(): return list(inp())\ndef maout(): return out(*lis())\ndef maouta(*args): return outa(*args)\ndef lis1(): return list(maout())\ndef maout1(): return maout(*lis1())\ndef lis2(): return maouta(*lis1())\ndef maout2(): return maouta(*lis2())\ndef lis3(): return maouta(*lis2())\ndef maout3(): return maouta(*lis3())\nL=inp()\nN=inp()\nlis=lis1()\nans=''\nfor i in range(N):\n    s=lis()\n    if s[0]!=s[1]:\n        ans+=s[0]\n        continue\n    lis.pop(0)\n    lis.pop(0)\n    lis1().pop(0)\n    lis2().pop(0)\n    lis3().pop(0)\n    maout1()\n    maout2()\n    maout3()"}, "22": {"problem_id": 3022, "answer": "from collections import deque\nn, a, b, c = map(int, input().split())\nd = [deque(list(range(a, b + 1, 1)))]\nfor i in range(3):\n    d.append([])\n    for j in range(a, b + 1, 1):\n        d[i].append(j)\nprint(sum(d[0][0]))"}, "23": {"problem_id": 3023, "answer": "import math\nn,m,r=list(map(int,input().split()))\ncandle=[]\nfor i in range(n):\n    candle.append(list(map(int,input().split())))\nprint(\"yes\" if len(candle)==m else \"no\")\n"}, "24": {"problem_id": 3024, "answer": "s=input()\nn=len(s)\nfor i in range(1,n):\n s1=int(s[i-1])\n s2=int(s[i])\n if s1%2!=0 and s2%2!=0:\n  print(i)\n"}, "25": {"problem_id": 3025, "answer": "# cook your dish here\nimport sys\nreadline = sys.stdin.readline\nfrom collections import deque\nn,m = list(map(int,readline().split()))\ng = list(map(int,readline().split()))\na,b = sorted([int(x) for x in readline().split()])\nd = [[0]*26 for _ in range(n)]\nd[a].append(b)\nd[b].append(a)\nvisited = set()\nwhile True:\n    cur = deque()\n    visited.add(cur)\n    for i in range(len(d[cur])):\n        cur.append(d[cur][i])\n    if len(cur) == m:\n        break\n    vis.add(cur)\n    nxt = cur[0]\n    for i in range(m-1):\n        nxt = cur[i+1]\n        if nxt not in visited:\n            d[nxt].append(cur[i])\n            visited.add(nxt)\n    cur = deque()\n    visited.add(cur)\n    for i in range(m):\n        nxt = cur[i]\n        if nxt not in visited:\n            d[nxt].append(cur[i])\n            visited.add(nxt)\n    print(max(0,sum(g[i]-d[i][j] for i in range(26) for j in range(i))+a-b))\n"}, "26": {"problem_id": 3026, "answer": "import sys\nimport math\ndef II(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef MI(): return map(int, input().split())\ndef LI2(): return list(map(int, input().split(\" \")))\ndef LI3(): return list(map(int, input().split( )))\ndef LI4(): return list(map(int, input().split( \".\" )))\nsys.setrecursionlimit(10**9)\ndef dfs(s,i):\n    nonlocal res\n    if i==len(s):\n        print(\"-1\")\n        return\n    if s[i]==i:\n        res.append(s[i])\n        dfs(s.copy(),i+1)\n    else:\n        for j in range(i+1,len(s)):\n            if s[j]<s[i]:\n                continue\n            else:\n                break\n        print(s[i])\n        dfs(s.copy(),i+1)\nII()\n"}, "27": {"problem_id": 3027, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n, m = list(map(int, readline().split()))\n    print(8 if n//2 else 1)\n    \nmain()\n"}, "28": {"problem_id": 3028, "answer": "import sys\ninput = sys.stdin.readline\n\ndef prime_factors(n):\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i == 0:\n            factors.append(i)\n            n //= i\n        else:\n            i += 1\n    if n > 1:\n        factors.append(n)\n    return factors\n\np = input().split()\nn, m, p = p[0], p[1], int(p[2])\n\nt = [[int(i) for i in input().split()] for _ in range(n)]\n\nfor i in range(1, n+1):\n    t[i][0] += 1\n\nk = 0\nvisited = [0] * n\ncol = [0] * m\nr = [0] * n\nfor i in range(1, n+1):\n    if visited[i] == 0:\n        visited[i] = 1\n        col[i] = i\n        r[i] = i\n        for j in range(i):\n            print(col[j], end=\" \")\n        print()\n    elif visited[i] == 1:\n        for j in range(i, n):\n            print(r[j], end=\" \")\n        print()\n    else:\n        for j in range(i, n):\n            print(col[j], end=\" \")\n        print()\n\nif p * m * n > k:\n    print(-1)\n"}, "29": {"problem_id": 3029, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9 + 7\nfac = [1]\nfor i in range(1, 10**5+1):\n    fac.append(fac[i] * i)\nfac.append(0)\ndp = [0] * (10**5+1)\ndp[0] = 1\nvisited = [0]*(10**5+1)\ndef dfs(v, p):\n    nonlocal dp, vis\n    if p not in visited:\n        dp[p] = max(dp[p], fac[v] + dfs(v, p))\n        vis[v] = 1\n        for i in adj[v]:\n            if visited[i] == 0:\n                dfs(i, p)\n        visited[v] = 1\ndfs(2, 3)\nprint(dp[3] - fac[3]*2)\nprint(visited[3] - visited[2]*2)"}, "30": {"problem_id": 3030, "answer": "import sys\ninput = sys.stdin.readline\n\nn=int(input())\ndata=[list(map(int,input().split())) for i in range(n)]\nheap=[0]*n\nans=0\nfor i in range(n):\n    heap[i]=i\n    ans+=1\n    while(heap[i]!=i):\n        ans+=1\n        heap[i]=i\nprint(ans)"}, "31": {"problem_id": 3031, "answer": "import copy\nn = int(input())\nr = [0]*n\ng = copy.deepcopy(r)\nfor i in range(n-1):\n    a, b, c = list(map(int, input().split()))\n    g[a] = g[b] = g[c] = i\nl = []\nfor i in range(n):\n    if g[i] == i:\n        l.append(i)\nans = []\nfor i in range(n):\n    ans.append(l.index(i)+1)\nprint(len(ans))\nfor i in ans:\n    print(i)\n"}, "32": {"problem_id": 3032, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    b,s=map(int,input().split())\n    program=input().strip()\n    for i in range(len(program)):\n        if program[i]==\"R\" :\n            b*=10**(s-i-1)\n        elif program[i]==\"V\" :\n            b+=1\n    print(b)"}, "33": {"problem_id": 3033, "answer": "import math\ndef isprime(n):\n    if n <= 1:\n        return False\n    elif n % 2 == 0:\n        return False\n    else:\n        i = 3\n        while i * i <= n:\n            if n % i == 0:\n                return False\n            i += 2\n        return True\nBASE = 3\nwhile B < 2**63:\n    B <<= 1\nprint(math.floor(math.log(B, 2)))"}, "34": {"problem_id": 3034, "answer": "import math\nd,t,c,r=list(map(int,input().split()))\nans=0\nfor i in range(c):\n s,e,p,a=list(map(int,input().split()))\n if s<=t:\n  ans+=math.pow(p,a)\n else:\n  ans+=max(0.0,(d-s)*(1-p))\nprint(ans)\n"}, "35": {"problem_id": 3035, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n    s,w,r=map(str,input().split())\n    l.append([float('inf'),s,w,r])\nprint(max(l))"}, "36": {"problem_id": 3036, "answer": "r,s,m,d,n=map(int,input().split())\nb=[int(i) for i in input().split()]\ndic={}\nfor i in range(r+1):\n b[i]=b[i]*2\n dic[i]=list(map(int,input().split()))\nfor i in range(s+1):\n b[i]=b[i]*2+min(dic[i])\n dic[i]=list(map(int,input().split()))\nfor i in range(m+1):\n b[i]=b[i]*2+max(dic[i])\n dic[i]=list(map(int,input().split()))\nfor i in range(d+1):\n b[i]=b[i]*2\n dic[i]=list(map(int,input().split()))\nsurs=[0]\nfor i in range(r):\n surs.append(b[i]*2)\nfor i in range(s):\n surs.append(min(dic[i]))\nfor i in range(m):\n surs.append(max(dic[i]))\nfor i in range(d):\n surs.append(min(dic[i]))\nfor i in range(n):\n if i not in surs:\n  print(surs[i])\n else:\n  print(\"too many\")"}, "37": {"problem_id": 3037, "answer": "import sys\r\ndef inp():\r\n    return sys.stdin.readline().rstrip()\r\n\r\nt=int(inp())\r\nfor _ in range(t):\r\n    h,w,n=list(map(int,inp().split()))\r\n    board=[[0 for i in range(n)] for j in range(h)]\r\n    for i in range(h):\r\n        board[i][i]=1\r\n    c=0\r\n    for i in range(n):\r\n        if board[i][c]==1:\r\n            c=i\r\n        elif board[i][c]==2:\r\n            up=min(up,i)\r\n            down=max(down,i)\r\n            left=min(left,i)\r\n            right=max(right,i)\r\n            print(up,down,left,right)\r\n            break\r\n    else:\r\n        print(-1, -1)"}, "38": {"problem_id": 3038, "answer": ""}, "39": {"problem_id": 3039, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    arr = list(input().strip())\n    n = len(arr)\n    if n == 6:\n        print(\"cannot fold\")\n    else:\n        print(\"can fold\")\n        for i in range(n):\n            print(\"\".join(arr))\n        "}, "40": {"problem_id": 3040, "answer": "s = input()\na = set()\nfor i in range(len(s)):\n    if s[i] in a:\n        a.remove(s[i])\n    else:\n        a.add(s[i])\nm = len(a)\nb = []\nfor i in range(m):\n    if a.count(s[i]) > 1:\n        b.append(s[i])\n        a.remove(s[i])\n    else:\n        b.append(s[i])\nprint(b[0])"}, "41": {"problem_id": 3041, "answer": "from math import ceil\nn=int(input())\nwhile n:\n a,b=map(int,input().split())\n c=0\n for i in range(1,11):\n  if a-i<=10000:\n   c+=1\n  elif a-i>=10000:\n   c+=2+abs(i-b)\n print(c)\n n-=1"}, "42": {"problem_id": 3042, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\nl=list(map(int,input().split()))\nans=1\nfor i in range(2,len(l)):\n    ans*=(l[i]-l[i-1])\n    ans%=10**9+7\nprint(ans)"}, "43": {"problem_id": 3043, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, M, K = map(int, readline().split())\nAns = [0]*K\n\nfor i in range(N):\n    c = readline()\n    Ans[i] = c.count('S')+c.count('G')\n\n#print(Ans)\n\nA = list(map(int, readline().split()))\nAns[0] = A[0]\n\ndp = [0]*N\ndp[0] = dp[N-1] = 1\n\nfor i in range(1, N):\n    dp[i] = min(dp[i-1]+K, dp[i-2])\n\nprint(Ans[K-1])"}, "44": {"problem_id": 3044, "answer": "def solve(s, g, o):\n    if s[0]=='S':\n        s=s[1:]\n        o=o[1:]\n    elif s[0]=='G':\n        s=s[1:]\n        o=o[1:]\n    elif s[0]=='#':\n        return 0\n    else:\n        return 1\n    h, w=s.count('.'), s.count('.')\n    if h>w:\n        h=w\n        w=h+1\n    for i in range(h):\n        for j in range(w):\n            if o[i][j]=='.':\n                continue\n            s[i:i+h][j:j+w]='#'\n            solve(s, g, o)\n    return h-w+1\n\nrobot=int(input())\ns=input()\nr,d,l,u,o=[],[],[]\nfor i in range(robot):\n    a=s.count('.')\n    if a==1:\n        s=s[1:]\n        o=o[1:]\n    else:\n        s=s[1:]\n        o=o[1:]\n    for j in range(len(s)):\n        if s[j]=='U':\n            u=u[j]\n        elif s[j]=='D':\n            d=d[j]\n        elif s[j]=='L':\n            l=l[j]\n        elif s[j]=='R':\n            r=r[j]\n        else:\n            o.append([s[j],s[j+1],s[j+2],s[j+3],s[j+4]])\n            solve(s, g, o)"}, "45": {"problem_id": 3045, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\nans=[0]*n\nfor i in range(n):\n x,y,d=map(int,input().split())\n ans[x-y]+=d\nprint(\"{0:g}\".format(ans[x-y]))"}, "46": {"problem_id": 3046, "answer": "import sys\nn=int(input())\na=[]\nfor i in range(n):\n    r,c=map(int,input().split())\n    a.append([r,c])\nsys.setrecursionlimit(10**9)\na.sort()\nb=[]\nfor i in range(n):\n    r,c=a[i]\n    b.append([r,c])\nans=[0]*n\nfor i in range(n):\n    if b[i][0]==b[i][1]:\n        ans[i]=1\n    else:\n        continue\nj=0\nfor i in range(n):\n    if ans[i]==0:\n        j+=1\n        continue\nprint(j)"}, "47": {"problem_id": 3047, "answer": "import math\ns = input().split()\ns = list(map(int,s))\nfor i in range(len(s)):\n    if s[i]==\"_\":\n        s[i] = 0\n        continue\n    a = s[i]\n    b = math.ceil(a/b)\n    c = a%b\n    d = a//b\n    e = int(c*b)\n    f = int(d*e)\n    g = int(e*c)\n    h = int(f*g)\n    if h>200:\n        print(\"1\")\n    else:\n        print(\"%d\"%h)\n"}, "48": {"problem_id": 3048, "answer": "from collections import defaultdict as dd\nn=int(input())\na=dd(int)\nfor i in range(n-1):\n    u,v=list(map(int,input().split()))\n    a[u].append(v)\n    a[v].append(u)\ns=defaultdict(int)\nfor i in range(n-1):\n    if 2*s[i] not in a:\n        s[i]=2\n        continue\n    s[i]=a[s[i]]+1\nprint(s[n-1])\n"}, "49": {"problem_id": 3049, "answer": "s = input()\nfrm = s.split()\nn = len(frm)\nans = 0\nfor i in range(n):\n    if frm[i] == frm[i-1]:\n        ans += 1\n    else:\n        ans += 2**i\nprint(ans)"}, "50": {"problem_id": 3050, "answer": ""}, "51": {"problem_id": 3051, "answer": ""}, "52": {"problem_id": 3052, "answer": "import math\ndef read_int():\n    return int(input())\ndef read_float():\n    return float(input())\ndef ceil(a,b):\n    if a<b:\n        a,b=b,a\n    return(a)\ndef INT():\n    return int(input())\ndef FLOAT():\n    return float(input())\nt=INT()\na=t[0]\nb=t[1]\nc=INT()\nd=INT()\nfor i in range(2):\n    a+=c\n    b-=d\n    c-=d\n    print(a-b)"}, "53": {"problem_id": 3053, "answer": "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\nn,k,p = MI()\ns = [0]*26\nfor i in range(n):\n    s[ord(i)-97] += 1\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append(97)\ns.append("}, "54": {"problem_id": 3054, "answer": "# cook your dish here\nt = list(input())\nfor i in range(len(t)):\n    s = t[i]\n    count = 0\n    for j in s.split():\n        if j.isalpha():\n            count += 1\n        elif j == \"E\" or j == \"I\" or j == \"O\" or j == \"U\":\n            count += 1\n        else:\n            count += 1\n    if count > 0:\n        print(\" \".join(map(str, s)))\n    else:\n        print(\" \".join(map(str, s.split())))"}, "55": {"problem_id": 3055, "answer": "n=int(input())\nwhile n>0:\n    t=input()\n    if t.split()[0]==\"ThoreHusfeldt\":\n        print(\"Thore is awesome\")\n    else:\n        print(\"Thore sucks\")\n    n=n-1"}, "56": {"problem_id": 3056, "answer": "s=input()\na=set()\nfor i in range(len(s)):\n    if s[i]=='L':\n        a.add((int(i)**2+2*int(i) + 1)//2)\n    elif s[i]=='R':\n        a.add((int(i)**2+2*int(i) + 2)//2)\n    else:\n        a.add((int(i)**2+2*int(i) + 1)//2)\nprint(sum(a))"}, "57": {"problem_id": 3057, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = []\nfor i in range(n):\n    s = input().rstrip()\n    if s == \"herp\":\n        ans.append(\"yes\")\n    elif s == \"poptart\":\n        ans.append(\"yes\")\n    elif s == \"dictionary attack\":\n        ans.append(\"yes\")\n    elif s == \"tree\":\n        ans.append(\"yes\")\n    elif s == \"easter egg\":\n        ans.append(\"yes\")\n    elif s == \"island\":\n        ans.append(\"yes\")\n    elif s == \"sarafian\":\n        ans.append(\"yes\")\n    elif s == \"hamster\":\n        ans.append(\"yes\")\n    elif s == \"sheep\":\n        ans.append(\"yes\")\n    elif s == \"heap\":\n        ans.append(\"yes\")\n    elif s == \"dictionary attack\":\n        ans.append(\"yes\")\n    elif s == \"the mediterranean\":\n        ans.append(\"yes\")\n    elif s == \"seas\":\n        ans.append(\"yes\")\n    elif s == \"sand\":\n        ans.append(\"yes\")\n    elif s == \"river\":\n        ans.append(\"yes\")\n    elif s == \"creek\":\n        ans.append(\"yes\")\n    elif s == \"lac\":\n        ans.append(\"yes\")\n    elif s == \"lake\":\n        ans.append(\"yes\")\nprint(\"\".join(ans))\n"}, "58": {"problem_id": 3058, "answer": "import sys\ninput = sys.stdin.readline\n\nn=int(input())\ns=set()\nfor i in range(n):\n    s.add(input().rstrip())\nprint(*s, sep=\"\\n\")"}, "59": {"problem_id": 3059, "answer": "import sys\ndef main():\n    n, r, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    d = int(input())\n    ans = 100000000000000000\n    while p:\n        t, p1, p2 = map(int, input().split())\n        if t > r - n:\n            break\n        if p1 > p2:\n            ans = min(ans, p1 * p2)\n            p = [t] * r\n        elif p1 < p2:\n            ans = min(ans, p1 * (1-p2))\n            p.insert(0, t)\n    sys.stdout.write('%.6f\\n' % ans)\nmain()"}, "60": {"problem_id": 3060, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\ns = [0] * (n + 1)\ns[1] = 1\nfor i in range(2, n + 1):\n    s[i] = s[i - 2] + s[i - 1]\n    \na = sorted(list(enumerate(s)))\nprint(a[k - 1][1])"}, "61": {"problem_id": 3061, "answer": "from collections import deque\nn,m=list(map(int,input().split()))\nl=[[] for _ in range(n)]\nfor _ in range(m):\n    x,y=list(map(int,input().split()))\n    l[x-1].append(y-1)\n    l[y-1].append(x-1)\nq=deque()\nq.append((1,0))\nwhile q:\n    x,f=q.popleft()\n    if x==n:\n        print(0)\n        break\n    for i in l[x]:\n        if i!=x:\n            q.append((i,f+1))\n"}, "62": {"problem_id": 3062, "answer": "v,w=map(int,input().split())\nv=v*1.00\nw=w*1.00\ns=0.\nfor i in range(1,1000):\n    s+=2*(abs(v-i))\n    if s<=w:\n        break\nprint(s)"}, "63": {"problem_id": 3063, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nli = [0] * n\nli[0] = li[n-1] = 1\nfor i in range(1, n):\n    li[i] += li[i-1]\nans = sum(li)\nprint(ans)\n"}, "64": {"problem_id": 3064, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\nd=[0]*n\nfor i in range(m):\n    a,b=list(map(int,input().split()))\n    d[a-1]=1+d[b-1]\nans=0\nr=1\nfor i in range(1,n):\n    if d[i]==1:\n        ans+=1\n        r=max(r,i)\n    else:\n        ans+=1\nprint(ans)"}, "65": {"problem_id": 3065, "answer": "import numpy as np\r\nl=[]\r\nn=int(input())\r\nwhile(n!=0):\r\n    l.append(list(map(int,input().split())))\r\n    n=n-1\r\nl.sort()\r\nm=int(input())\r\nfor i in range(m):\r\n    l[i]=list(map(int,input().split()))\r\nans=0\r\nfor i in range(m):\r\n    ans+=np.prob(l[i].count(1)-l[i].count(0))\r\nprint(ans/100)"}, "66": {"problem_id": 3066, "answer": "import sys\ninput = sys.stdin.readline\n\nT = int(input())\nans = []\nfor i in range(T):\n    c = list(map(int, input().split()))\n    ans.append(c)\n\nfor i in ans:\n    if i[0] == 1:\n        l, r, c = i[1], i[2], i[3]\n        print(l + r + c)\n    else:\n        print(\"IMPOSSIBLE\")"}, "67": {"problem_id": 3067, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nlis = [0]*n\nlis[0] = 1\nfor i in range(1,n):\n    lis[i] = int(input())\n    lis[i] += lis[i-1]\nans = []\nfor i in range(n):\n    ans.append(lis[i])\nprint(' '.join(map(str,ans)))"}, "68": {"problem_id": 3068, "answer": "n=int(input())\nl=[]\nfor i in range(n):\n    a,b,c=map(str,input().split())\n    l.append([a,b,c])\nl.sort()\ncount=0\nfor i in l:\n    if i[2]!=i[1]:\n        count+=i[3]\n    else:\n        count+=i[3]\nprint(count)"}, "69": {"problem_id": 3069, "answer": "import sys\nreadline = sys.stdin.readline\n\ns = list(map(int, readline().split()))\nn = len(s)\nans = [0]*n\nimpossible = True\nfor i in range(1, n):\n    if s[i] == '(':\n        ans[i] = 1\n    elif s[i] == ')':\n        if ans[i-1] == 1:\n            impossible = False\n        else:\n            impossible = True\n            ans[i] = 1\nprint(\"possible\" if impossible else \"impossible\")"}, "70": {"problem_id": 3070, "answer": "import bisect as b\ninput=lambda:map(int,input().split())\nn,m=input().split()\nn,m=int(n),int(m)\na,b,c=input().split()\na,b,c=list(map(int,input().split()))\nl=list(map(int,input().split()))\nif b.bisect_right(l,a) in l:\n print(b.bisect_left(l,b.ceil(a-b)))\nelse:\n print(\"impossible\")"}, "71": {"problem_id": 3071, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\nans=[]\nfor i in range(m):\n    ans.append(\"A\"+str(i+1))\nprint(*ans.pop(),sep=\" \")\n"}, "72": {"problem_id": 3072, "answer": "from collections import deque\nr,c = map(int,input().split())\nadj = [[] for i in range(r)]\nfor i in range(r):\n adj[i].append(i)\nvisited = [False for i in range(r)]\nvisited[0] = True\nwhile len(visited)>0:\n i = visited[0]\n j = i+1\n p = 4*r-i\n q = 2*r-j\n if p%2==0:\n  print(p//2)\n  visited[0] = True\n  break\n elif q%2==0:\n  print(q//2)\n  visited[0] = True\n  break\n else:\n  if p!=q:\n   print(p//2)\n   visited[0] = True\n   break\n print(c//2)\n"}, "73": {"problem_id": 3073, "answer": "from sys import stdin, stdout\ninput = stdin.readline\n#print = stdout.write\n\nn = int(input())\nchessboard = [list(map(int, input().split())) for _ in range(n)]\ninfinite = [list(map(int, input().split())) for _ in range(n)]\n\ndef find_neighbour(x, y):\n    nonlocal l\n    nonlocal board\n    nonlocal inf\n    l = [(x, y, 0), (x, y, 1), (x+1, y, 0), (x-1, y, 1), (x, y+1, 0), (x, y-1, 1)]\n    board[y][x] = 1\n    for i in l:\n        if board[i[0]][i[1]] == 1:\n            return i\n\npossible_moves = [None] * n\nfor i in range(n):\n    possible_moves[infinite[i][0]][infinite[i][1]] = i\n\nans = 0\nmx = 10**9 + 7\nfor i in range(n):\n    x, y, p = find_neighbour(i, mx)\n    if possible_moves[x][y] is None:\n        continue\n    ans += p\n\nif ans < 0:\n    print(-1)\nelse:\n    print(ans)"}, "74": {"problem_id": 3074, "answer": "n=int(input())\ns=int(input())\nl=[]\nfor i in range(len(s)):\n if s[i]!='0' and s[i]!=s[i].ljust(3,'0'):\n  l.append(s[i])\nl.append(0)\nl.extend(s[i].ljust(3,'0'))\nprint(l.count(0)%1000000007)"}, "75": {"problem_id": 3075, "answer": "from heapq import heappush, heappop, heapify\nn, g = list(map(int, input().split()))\np = []\nfor i in range(n):\n    d, c = list(map(int, input().split()))\n    p.append((d, c))\nheapify(p)\nans = 0\nvisited = set()\nq = []\nwhile p:\n    d, c = heappop(p)\n    if d < 0:\n        continue\n    visited.add(d)\n    ans += c\n    for _ in range(len(p)):\n        heappush(q, p[-1][1])\n        if p[-1][0] > d:\n            break\n    else:\n        break\nif ans > 0:\n    print(ans)\nelse:\n    print(\"cancel road trip\")\n"}, "76": {"problem_id": 3076, "answer": "import sys\nreadline = sys.stdin.readline\ntry:\n    [n,k] = list(map(int,readline().split()))\nexcept EOFError:\n    print(0)\n    return\ndef knapsack(s,v):\n    r = v*s\n    maxi = 0\n    for i in range(1,k+1):\n        maxi = max(maxi,v[i-1] + knapsack(s,v[i-1]))\n    return maxi\ndef main():\n    return knapsack(1,10**9+1)\nmain()"}, "77": {"problem_id": 3077, "answer": "import sys\ndef II():\n return int(sys.stdin.readline())\ndef MI():\n return map(int,sys.stdin.readline().split())\ndef LI():\n return list(map(int,sys.stdin.readline().split()))\ndef LLI(rows_number):\n return [LI() for _ in range(rows_number)]\ndef SI():\n return sys.stdin.readline()[:-1]\ndef SI2():\n return sys.stdin.readline()[:-1]\ndef LI2(rows_number):\n return [LI() for _ in range(rows_number)]\ndef SI3(rows_number):\n return [int(x) for x in sys.stdin.readline().split()]\ndef MI3():\n return map(int,sys.stdin.readline().split())\ndef LI3(rows_number):\n return [int(x) for x in sys.stdin.readline().split()]\n\ndef find_nearest(n,m,r):\n i = 0\n while i<n:\n  if i<m-1:\n   if n-i-1>=r:\n    return i\n  elif n-i-1<=r:\n   return m-1\n  i+=1\n return -1\n\ndef f(n,m,r):\n num = 0\n den = 1\n for i in range(1,n+1):\n  num += m*i\n  den *= r**i\n return num/den\n\nt = II()\nfor _ in range(t):\n n,m,r = MI()\n ans = f(n,m,r)\n print(ans)"}, "78": {"problem_id": 3078, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ninp = lambda: list(map(int, input().split()))\n\nn, s = inp()\nsums = [0] * (n + 1)\nfor i in range(n):\n    sums[i + 1] = sums[i] + inp()\n\nl = []\nr = []\nfor i in range(n):\n    l.append(sums[i])\n    r.append(sums[i] - sums[i + 1])\n\nprint(max(l), \" \".join(map(str, r)))"}, "79": {"problem_id": 3079, "answer": "n = int(input())\ns = input()\na = s.split()\na = [i for i in a]\nans = []\nfor i in range(0,n):\n    if i%2==0:\n        ans.append(a[i])\n    else:\n        ans.append(a[i])\nprint('NE' if len(ans)%2==0 else 'DA')"}, "80": {"problem_id": 3080, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nINF = 10**18+5\nMOD = 10**9+7\ndef main():\n n, m, q = list(map(int, input().split()))\n qu = []\n for _ in range(m):\n  qu.append(int(input()))\n for _ in range(q):\n  k, a = list(map(int, input().split()))\n  if k > a:\n   k -= a\n   a -= 1\n  elif k == a:\n   main()\n  else:\n   q -= 1\n   continue\n  ans = [0]*k\n  for i in range(a):\n   ans[i] += pow(2, i+1)\n  print(ans[0], end=' ')\nmain()\n"}, "81": {"problem_id": 3081, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\nn,m=list(map(int,input().split()))\nl=list(map(int,input().split()))\nd={}\nfor i in range(n):\n    d[l[i]]=1\nq=sorted(l,key=lambda x:d[x])\nq.append(0)\np=10**6+1\nans=0\nfor i in range(m):\n    s,f,t=list(map(int,input().split()))\n    if q[s]<t:\n        q.append(t)\n        p-=1\n        ans+=1\nprint(ans)"}, "82": {"problem_id": 3082, "answer": "import numpy as np\nd,w=list(map(int,input().split()))\nfor _ in range(d):\n a,b,c=list(map(int,input().split()))\n t=np.array(a)\n t.T=b\n t.T+=(c-1)\n t.T-=1\n t.fill(-1)\n t.astype(int)\n t.astype(np.int64)\n t.sort()\n t=t[::-1]\n t.T=b\n t.T+=(c-1)\n t.T-=1\n t.fill(-1)\n t.astype(int)\n t.astype(np.int64)\n t.sum()\n t.min()\n t.max()\n if w>t[0]:\n  print(t[0])\n  return\n elif w==t[0]:\n  print(w*t[0])\n  return\n else:\n  dp=np.zeros((w+1,w+1),dtype=np.float64)\n  dp[0][0]=0\n  for i in range(1,w+1):\n   dp[i][0]=max(dp[i-1][0],dp[i-1][1]+t[0])\n   dp[i][1]=max(dp[i-1][0],dp[i-1][1]-t[0])\n  print(dp[w][0])\n  return\n  \n"}, "83": {"problem_id": 3083, "answer": "n = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\na.sort()\nb = []\nfor i in range(n):\n    b.append([a[i], i])\nans = []\nfor i in range(n):\n    if b[i][1] == 1:\n        ans.append(i+1)\nprint(' '.join(map(str, ans)))"}, "84": {"problem_id": 3084, "answer": "import sys\nread = sys.stdin.readline\ns = list(map(int,read().split()))\nd = list(map(int,read().split()))\na = []\nfor i in range(0,4):\n    a.append(s[i]%12)\n    a.append(s[i]%60)\nans = []\nfor i in range(0,4):\n    ans.append(d[i]%12)\n    ans.append(d[i]%60)\nprint('\\n'.join(ans))"}, "85": {"problem_id": 3085, "answer": "s = input()\ns = s.replace('(', '')\ns = s.replace('[', '')\ns = s.replace(']', '')\ns = s.split('()')\nl = len(s)\nfor i in range(l):\n    if s[i] == ',':\n        s[i] = ':'.join(s[i:i+2])\n    else:\n        s[i] = s[i][:len(s[i])-1]"}, "86": {"problem_id": 3086, "answer": "import sys\ninput = sys.stdin.readline\n\ndef calc_days(d):\n    return d*365\n\ndef calc_months(d):\n    return sum([calc_days(d-1) for d in range(1,12)])\n\nn, m = map(int, input().split())\nevents = [list(map(int, input().split())) for _ in range(n)]\n\nsolution = [-1] * m\n\nfor i in range(n):\n    d, m, f = map(int, input().split())\n    solution[i] = calc_days(d) + m*calc_months(f)\n\nprint(' '.join(map(str, solution)))"}, "87": {"problem_id": 3087, "answer": "import sys\nimport math\ndef ii():\n return int(input())\ndef mi():\n return map(int,input().split())\ndef li():\n return [int(i) for i in input().split()]\ndef li1():\n return [int(i)-1 for i in input().split()]\nn,k=ii()\na=li()\nans=[]\nfor i in range(n):\n ans.append(a[i])\nprint(*ans)\n"}, "88": {"problem_id": 3088, "answer": "import sys\ndef read_int(): return int(sys.stdin.readline())\ndef read_int(): return list(map(int,sys.stdin.readline().split()))\ndef read_int(): return list(map(int,input().split()))\nn,k = read_int()\nif k==1:\n    print(n)\nelif k==2:\n    print(n+1)\nelse:\n    m = n\n    while n>=m:\n        m = n\n    print(m)\n"}, "89": {"problem_id": 3089, "answer": "import math\nn=int(input())\na=[]\nfor i in range(n):\n a.append(list(map(int,input().split())))\nd=[]\nfor i in range(n):\n d.append([math.sqrt(pow(a[i][0]-a[i][1],2)+pow(a[i][2]-a[i][1],2)),i])\nprint(\"%.6f\"%abs(sum(d)-n/2))"}, "90": {"problem_id": 3090, "answer": "import sys\ninput=sys.stdin.readline\nn,m,k=list(map(int,input().split()))\narr=[0]*n\nfor i in range(n):\n arr[i]=list(map(int,input().split()))\narr.sort()\nc=0\nfor i in range(n):\n for j in range(m):\n  if arr[i][j]>k:\n   c+=arr[i][j]*k\n  else:\n   c+=arr[i][j]\nprint(c)\n"}, "91": {"problem_id": 3091, "answer": "from sys import stdin,stdout\ninput=stdin.readline\ndef fill(l,n,m,t,op):\n nonlocal r,c,op\n if op=='+':\n  l[r][c]+=1\n elif op=='-':\n  l[r][c]-=1\n elif op=='*':\n  l[r][c]*=2\n else:\n  l[r][c]/=2\n return l\n \nn,m,t=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append([0]*m)\nop=input().split()\nfor i in range(m):\n r,c=list(map(int,input().split()))\n l[r-1][c-1]-=t\n l[r-1][c+1]-=t\n fill(l,n,m,t,op)\nprint(*l[0])\n"}, "92": {"problem_id": 3092, "answer": "import sys\r\ninput = sys.stdin.readline\r\nMOD = 10**9+7\r\nN, M = list(map(int, input().split()))\r\nadj = [[] for _ in range(N)]\r\nfor _ in range(M):\r\n    O, D, L = list(map(int, input().split()))\r\n    adj[D].append((O, L))\r\n    adj[O].append((D, L))\r\nvisited = [0] * N\r\nans = [0] * M\r\nans[0] = 1\r\ncurr = [0] * N\r\ndef dfs(s, d):\r\n    nonlocal ans\r\n    visited[s] = 1\r\n    for adj in adj[d]:\r\n        if visited[adj[s]] == 0:\r\n            ans[d] = ans[s] + dfs(adj[s], d+1)\r\n            curr[s] += ans[d]\r\n            visited[adj[s]] = 1\r\n    dfs(s, -1)\r\ndfs(0, 0)\r\nprint(ans[0])\r\n"}, "93": {"problem_id": 3093, "answer": "import sys\ninput=sys.stdin.readline\nn,k=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\nans=1\nfor i in range(1,n+1):\n  ans=(ans*(k-1)//2)%1000000007\nprint(ans)"}, "94": {"problem_id": 3094, "answer": "n = int(input())\nt = list(map(int, input().split()))\nans = 1\nfor i in range(1, n):\n    ans = ans * t[i] % 1000000007\nprint(ans)"}, "95": {"problem_id": 3095, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18\nMOD = 10**9 + 7\ndef main():\n r, s = list(map(int, readline().split()))\n mat = []\n for i in range(r):\n  mat.append(list(map(int, readline().split())))\n max_l = 0\n for i in range(s):\n  mat_l = []\n  for j in range(min(s, r), 0, -1):\n   mat_l.append(min(mat[j][i], mat[j - 1][i]))\n  max_l = max(max_l, max(mat_l))\n print(max_l)\nmain()\n"}, "96": {"problem_id": 3096, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n n = int(input())\n a = list(map(int, input().split()))\n a.sort()\n b = set()\n ans = 0\n for i in range(1, n):\n  if a[i]!= b[i]:\n   ans += 1\n  else:\n   b.add(a[i])\n print(ans)\n\nsolve()"}, "97": {"problem_id": 3097, "answer": "import bisect as b\nq = int(input())\nfor _ in range(q):\n a, b = map(int, input().split())\n ans = 1\n cnt = b.bisect_right(a, b)\n for i in range(cnt, b.ceil(a)):\n  ans += a[i]\n print(ans)"}, "98": {"problem_id": 3098, "answer": "import sys\ninput = sys.stdin.readline\nn,k=list(map(int,input().split()))\na=[0]*n\nfor i in range(1,n):\n a[i]=list(map(int,input().split()))\nans=0.0\nfor i in range(3):\n for j in range(i):\n  ans+=a[j]*pow(i-j,2)\nprint(ans)\n"}, "99": {"problem_id": 3099, "answer": "import bisect\ns, e, c = map(int, input().split())\nun = []\nfor _ in range(c):\n    s1, s2 = map(int, input().split())\n    un.append((s1, s2, 0))\ne = 0\np = []\nfor _ in range(c):\n    s, e, c = un.pop()\n    if s > e:\n        e = s\n    elif s == e:\n        p.append((s, e, c))\nprint(e + len(p))"}, "100": {"problem_id": 3100, "answer": "import math as m\nA,C,M=list(map(int,input().split()))\nA,C,M=sorted(map(int,input().split()),reverse=True)\ndp=[0]*(m.ceil(m.log2(A)+1))\ndp[0]=1\nfor i in range(1,m.ceil(m.log2(A)+1)):\n    dp[i]=dp[i-1]*2%m.ceil(m.log2(A)+1)\n    \nprint(dp[m.floor(m.log2(A)+1)])"}, "101": {"problem_id": 3101, "answer": "import sys\r\ninput = sys.stdin.readline\r\n\r\ndef main():\r\n    n = int(input())\r\n    a = list(map(int, input().split()))\r\n    if a[0]%9!= 0:\r\n        print(\"impossible\")\r\n        return\r\n    for i in range(1, n):\r\n        a[i] = a[i] + int(str(a[i])[-1])\r\n    print(\" \".join(map(str, a)))\r\n\r\nmain()"}, "102": {"problem_id": 3102, "answer": "l=list(map(int,input().split()))\nif l[0]!=0 and l[1]!=0:\n r=l[0]*10+l[1]\n for i in range(2,len(l)):\n  if l[i]!=0:\n   r=r%(10**9+7)\n print(r)\n"}, "103": {"problem_id": 3103, "answer": "import sys\ninput=sys.stdin.readline\nY,X,x=list(map(int,input().split()))\nAns=[[0]*(X+1) for i in range(Y+1)]\nfor i in range(1,Y+1):\n    Ans[i][i]=1\nA=[[0]*(X+1) for i in range(Y+1)]\nfor i in range(1,Y+1):\n    for j in range(1,X+1):\n        if i>j:\n            A[i][j]=Ans[i-1][j]\n        elif j>i:\n            A[i][j]=Ans[i][j-1]\n        else:\n            A[i][j]=Ans[i-1][j]%1000000003\n            A[i][j]+=(A[i-1][j]%1000000003)%1000000003\nprint(*A[1:],sep=\"\\n\")\n"}, "104": {"problem_id": 3104, "answer": "from math import gcd\ndef __starting_point():\n s=str(input())\n a,b=list(map(int,s.split()))\n if a==b:\n  print(a)\n else:\n  m=int(a)\n  n=int(b)\n  g=gcd(m,n)\n  print(m*'{}'+'{}'.format(a,b))\n__starting_point()"}, "105": {"problem_id": 3105, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[s[i]] = i\n\ndp = [[0] * n for _ in range(n)]\ndp[0][0] = 1\nfor i in range(1, n):\n    for j in range(i):\n        if dp[i].count(dp[j][0]) > 0:\n            dp[i][j] = dp[j][0]\n        elif dp[i].count(dp[j][0]) == 0:\n            dp[i][j] = dp[min(i, j)]\n        else:\n            dp[i][j] = dp[i][j] + 1\n\nprint(*dp[0], sep=' ')\n"}, "106": {"problem_id": 3106, "answer": "import sys\nread = sys.stdin.readline\n\nt = int(read())\nfor _ in range(t):\n s = read().rstrip()\n a = list(map(int, s))\n a.reverse()\n b = []\n for i in range(len(a)):\n  if a[i] == 1:\n   b.append(i+1)\n  else:\n   b.append(i+1)\n print(min(b))"}, "107": {"problem_id": 3107, "answer": "import sys\r\ninput = sys.stdin.readline\r\n\r\nn, m = list(map(int, input().split()))\r\nroutes = {}\r\nfor i in range(n):\r\n  routes[i] = list(map(int, input().split()))\r\n\r\nans = [0] * n\r\nvisited = [False] * n\r\ndic = {}\r\nfor i in range(n):\r\n  if visited[i]:\r\n    continue\r\n  visited[i] = True\r\n  dic[i] = 1\r\n\r\nfor i in range(1, n + 1):\r\n  if dic[i] == 1:\r\n    ans[i] = ans[i - 1] + 1\r\n\r\nfor i in range(m):\r\n  a, b = list(map(int, input().split()))\r\n  ans[a] += ans[b]\r\nprint((\" \".join(map(str, ans))))\r\n"}, "108": {"problem_id": 3108, "answer": "import sys\nn,k=list(map(int,sys.stdin.readline().split()))\na=list(map(int,sys.stdin.readline().split()))\ns=0\nfor i in range(n):\n s+=a[i]\n s=s/n\navg=s*(s+1)/2\nprint(\"%.6f\"%avg)"}, "109": {"problem_id": 3109, "answer": "import sys\ninput=sys.stdin.readline\ndef main():\n n,m,w,x=[int(i) for i in input().split()]\n v=[int(i) for i in input().split()]\n \n l=[]\n r=[]\n for i in range(n-1):\n  l.append(v[i])\n \n for i in range(n-1):\n  r.append(min(l[i],r[i]))\n \n l.sort()\n r.sort()\n \n maxi=w*h\n mini=w*h\n \n for i in range(n-1):\n  if l[i]>r[i]:\n   maxi=min(maxi,l[i])\n  elif r[i]>l[i]:\n   mini=min(mini,r[i])\n \n print(str(maxi)+\"/\"+str(mini))\nmain()"}, "110": {"problem_id": 3110, "answer": "import sys\nreadline = sys.stdin.readline\nm,n = list(map(int,readline().split()))\ndp = [[0 for _ in range(n)] for _ in range(m)]\nfor i in range(m):\n    dp[i] = list(map(int,readline().split()))\n    \ndef isOK(i):\n    return i >= 0 and i < m\n    \ndef solve(matrix):\n    if isOK(matrix[0]):\n        return 36 * matrix[0]\n    elif isOK(matrix[1]):\n        return 36 * matrix[1] + matrix[0]\n    else:\n        return 0\n    \ndef main():\n    m = int(readline())\n    for _ in range(m):\n        print(solve(dp[int(readline())]))\n    return"}, "111": {"problem_id": 3111, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\nA,B=list(map(int,input().split()))\ns=str(input())\nfor i in range(m):\n    A,B=list(map(int,input().split()))\n    s=s+' '+str(A)+' '+str(B)\n    A+=2\n    B-=2\n    print(A,B)\n"}, "112": {"problem_id": 3112, "answer": ""}, "113": {"problem_id": 3113, "answer": "n = int(input())\ns = set()\nfor i in range(n):\n    a = list(map(int, input().split()))\n    s.add(a)\nif s.count(tuple(s)) == 1:\n    print(\"yes\")\nelse:\n    print(\"no\")"}, "114": {"problem_id": 3114, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\na=[[0]*n for i in range(m)]\nfor i in range(m):\n    x,y=list(map(int,input().split()))\n    a[x].append(y)\nvis=[0]*n\nvis[0]=1\nans=[]\nfor i in range(n):\n    if vis[i]==0:\n        ans.append(['NO'])\n        continue\n    vis[i]=1\n    for j in a[i]:\n        if vis[j]==0:\n            ans.append(['NO'])\n            break\n        vis[j]=1\nprint('YES' if len(ans)==m else 'NO')"}, "115": {"problem_id": 3115, "answer": "import operator\nn,m=map(int,input().split())\nd={}\nfor i in range(m):\n a,b=map(int,input().split())\n if a>b:\n  d[a-1]+=1\n else:\n  d[b-1]+=1\nans=[]\nfor i in d:\n if i>0:\n  ans.append('>')\n else:\n  ans.append('=')\nprint(' '.join(ans))"}, "116": {"problem_id": 3116, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(10**9)\nINF = float('inf')\nmod = 10**9+7\n\ndef calc_dis(a, b, c):\n    return abs(a[0]-b[0])*(a[1]-b[1])*(a[2]-b[2])\n\ndef solve():\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    "}, "117": {"problem_id": 3117, "answer": "l = int(input())\ns = input()\nm = 0\nfor i in range(1,27):\n if s[i] in s:\n  m += 1\nif m > 2:\n print(m)\n"}, "118": {"problem_id": 3118, "answer": "from math import *\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nif a[0]==b[0]:\n print(0)\nelif a[0]>b[0]:\n print(2)\nelse:\n m=0\n for i in range(1,n):\n  a[i]+=a[i-1]\n  if a[i]>b[0]:\n   m+=1\n print(m)"}, "119": {"problem_id": 3119, "answer": "import sys\ninput = sys.stdin.readline\nn,p=map(int,input().split())\nt=list(map(int,input().split()))\ns=list(map(int,input().split()))\ndef calc(i):\n    t[i]+=1\n    if t[i]==1:\n        t[i]-=2\n        s.append(i)\n    elif t[i]==2:\n        t[i]-=1\n        s.append(i)\n    else:\n        t[i]-=1\n        s.append(i)\n        s.append(i)\n        t[i]+=2\n        t[i+1]+=2\n        t[i-1]+=2\n        t[i-2]+=2\n        print(max(t))\nn,p=n,p+[0]*50000\nt.sort()\nsp=[]\nfor i in range(n):\n    sp.append(t[i])\nsp.append(t[n-1])\nsp.extend([t[i]]*(p))\ndp=[[0]*n for i in range(n)]\nfor i in range(n):\n    dp[0][i]=sp.index(t[i])\nres=0\nfor i in range(1,n):\n    res+=calc(i)*2\n    for j in range(i,n):\n        res+=calc(j)*2-2\n        if sp[i]+dp[i][sp[i]]:\n            dp[i][sp[i]]+=dp[i+1][sp[i]+1]\n            sp[i+1]=sp[i]+1\nprint(res)"}, "120": {"problem_id": 3120, "answer": "# cook your dish here\na,b=input().split()\na=int(a)\nb=int(b)\nc=0\nfor i in range(a):\n    c+=i\n    if(c%2==0):\n        print(\"equal\")\n        break\nelse:\n    print(\"not equal\")"}, "121": {"problem_id": 3121, "answer": "import sys\ninput=sys.stdin.readline\na,h=map(int,input().split())\nn,m=map(int,input().split())\nd=[[0]*n for i in range(m)]\nfor i in range(m):\n    x,y=map(int,input().split())\n    d[x-1][y-1]=1\ns=0\nfor i in range(n):\n    if d[i][0]!=1:\n        s+=d[i][0]\n        d[i][0]-=d[i][1]\nans=max(h-s,0)\nprint(ans)"}, "122": {"problem_id": 3122, "answer": "import sys\nreadline = sys.stdin.readline\n\nn,m = list(map(int,readline().split()))\nl = []\nfor i in range(m):\n  a,b,c = list(map(int,readline().split()))\n  l.append((a,b,c))\n\nl.sort()\n\ncnt = 0\nans = 0\nfor i in range(n):\n  if l[i][0] == i+1:\n    ans += 1\n  elif l[i][0] == n-i-1:\n    cnt += 1\n  else:\n    ans += 2\n\nif ans > n-m:\n  print(m)\nelse:\n  print(ans)\n"}, "123": {"problem_id": 3123, "answer": "n=int(input())\na=list(map(int,input().split()))\nquot=0\nfor i in range(1,len(a)):\n    if a[i]==1:\n        a[i]=a[i]%2\n        quot+=1\n    else:\n        if a[i]==0:\n            a[i]=1\n            quot+=1\nprint(quot)"}, "124": {"problem_id": 3124, "answer": "n = int(input())\narr = list(map(int,input().split()))\nmoves = 0\nfor i in range(n):\n    moves += arr[i]%2\n    if arr[i]%2 == 0:\n        arr[i] = arr[i] - 1\nprint(moves)"}, "125": {"problem_id": 3125, "answer": "import re\nt=input()\na=t.splitlines()\nfor i in range(len(a)):\n    if a[i]=='+':\n        a[i]='*'\n    elif a[i]=='-':\n        a[i]='+'\ns=''\nfor i in a:\n    if re.findall('[+-]',i):\n        s+=i\n    else:\n        s+=' '\nprint(s)"}, "126": {"problem_id": 3126, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef main():\n n, t = map(int, input().split())\n p = list(map(int, input().split()))\n C = int(input())\n for c in range(C):\n  a = int(input())\n  f = 1\n  if a == 0:\n   print(0)\n  elif a == 1:\n   f = 2\n   print(1)\n  elif a == 2:\n   f = 3\n   print(2)\n  elif a == 3:\n   f = 4\n   print(3)\n  elif a == 4:\n   f = 5\n   print(4)\n  elif a == 5:\n   f = 6\n   print(5)\n  elif a == 6:\n   f = 7\n   print(6)\n  elif a == 7:\n   f = 8\n   print(7)\n  elif a == 8:\n   f = 9\n   print(8)\n  elif a == 9:\n   f = 10\n   print(9)\n  else:\n   f = 0\n   p[f] += 1\n   C -= 1\n   if p[f] > t:\n    p.append(f)\n    t = p[f]\n   print(min(t, C))\nmain()"}, "127": {"problem_id": 3127, "answer": "import sys\ninput=sys.stdin.readline\nn,m=list(map(int,input().split()))\na,b,l=list(map(int,input().split()))\nif a!=1 and b!=n:\n sys.stdout.write(\"\\n\".join(str(i) for i in range(1,n+1)))\nelse:\n ans=[]\n for i in range(1,n+1):\n  ans.append(i)\n ans.sort()\n print(len(ans))\n for i in range(len(ans)):\n  if ans[i]!=i:\n   sys.stdout.write(\"%d\\n\"%ans[i])\n"}, "128": {"problem_id": 3128, "answer": "import sys\r\nimport math\r\n \r\ndef read():\r\n    return int(input())\r\ndef write(s):\r\n    print(s)\r\nread = write = sys.stdin.readline\r\n\r\nQ = read()\r\nfor _ in range(Q):\r\n    query = int(input())\r\n    if query == 1:\r\n        print(query+1)\r\n    else:\r\n        print(query)"}, "129": {"problem_id": 3129, "answer": "s=input()\ns.sort()\nn=0\nwhile n<len(s)-1:\n if s[n]!=s[n+1]:\n  n+=1\n else:\n  n+=2\nprint(n)"}, "130": {"problem_id": 3130, "answer": "from sys import stdin,stderr\ninput=stdin.readline\nd,m,n=map(int,input().split())\nans=[]\nfor i in range(d):\n    a,b=map(int,input().split())\n    ans.append(a+b)\nl=list(map(int,input().split()))\nl.sort()\nfor i in range(n):\n    x=int(input())\n    if l[x-1]==x:\n        print(l[x-1],end=' ')\n    else:\n        print(l[x],end=' ')"}, "131": {"problem_id": 3131, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k=map(int,input().split())\nl=list(map(int,input().split()))\nl.sort()\nm=10**9+7\nfor i in range(n):\n    m=m*(l[i]%1000000007)\n    m=m*(l[i]//(l[i]-1))\nprint(m)"}, "132": {"problem_id": 3132, "answer": "import sys\ninput = sys.stdin.readline\n\nR, C = map(int, input().split())\nB = [[0] * C for _ in range(R)]\nfor i in range(R):\n    s = input()\n    B[i][C-1] = 1\n    B[i][C] = 0\n    for c in s:\n        if c == '.':\n            B[i][c] ^= 1\n        else:\n            B[i][c] |= B[i][c-1]\nprint(' '.join(map(str, B)))"}, "133": {"problem_id": 3133, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\ncnt = 0\nfor i in range(n):\n    a[i] ^= 1\n    cnt += (a[i] ^ 1)\nans = \"\"\nfor i in range(n):\n    if a[i] == 1:\n        ans += \"indistinguishable\"\n    else:\n        if cnt % 2!=0:\n            ans += \"Alice\"\n        else:\n            ans += \"Bob\"\nprint(ans)"}, "134": {"problem_id": 3134, "answer": "import sys\r\nimport bisect\r\nfrom collections import defaultdict\r\ninput = sys.stdin.readline\r\nread = sys.stdin.read\r\n\r\nfor _ in range(int(input())):\r\n    row = input()\r\n    col = input()\r\n    res = [0] * 50\r\n    for c in col:\r\n        res[int(c,2)] += 1\r\n    print(*res)"}, "135": {"problem_id": 3135, "answer": "import sys\ndef read():\n return sys.stdin.readline().strip()\ndef write(s):\n sys.stdout.write(s+\"\\n\")\nread()\nwrite(0)\nwrite(1)\nwrite(2)\nwrite(3)\nwrite(4)\nwrite(5)\nwrite(6)\nwrite(7)\nwrite(8)\nwrite(9)\nwrite(10)\nwrite(11)\nwrite(12)\nwrite(13)\nwrite(14)\nwrite(15)\nwrite(16)\nwrite(17)\nwrite(18)\nwrite(19)\nwrite(20)\nwrite(21)\nwrite(22)\nwrite(23)\nwrite(24)\nwrite(25)\nwrite(26)\nwrite(27)\nwrite(28)\nwrite(29)\nwrite(30)\nwrite(31)\nwrite(32)\nwrite(33)\nwrite(34)\nwrite(35)\nwrite(36)\nwrite(37)\nwrite(38)\nwrite(39)\nwrite(40)\nwrite(41)\nwrite(42)\nwrite(43)\nwrite(44)\nwrite(45)\nwrite(46)\nwrite(47)\nwrite(48)\nwrite(49)\nwrite(50)\nwrite(51)\nwrite(52)\nwrite(53)\nwrite(54)\nwrite(55)\nwrite(56)\nwrite(57)\nwrite(58)\nwrite(59)\nwrite(60)\nwrite(61)\nwrite(62)\nwrite(63)\nwrite(64)\nwrite(65)\nwrite(66)\nwrite(67)\nwrite(68)\nwrite(69)\nwrite(70)\nwrite(71)\nwrite(72)\nwrite(73)\nwrite(74)\nwrite(75)\nwrite(76)\nwrite(77)\nwrite(78)\nwrite(79)\nwrite(80)\nwrite(81)\nwrite(82)\nwrite(83)\nwrite(84)\nwrite(85)\nwrite(86)\nwrite(87)\nwrite(88)\nwrite(89)\nwrite(90)\nwrite(91)\nwrite(92)\nwrite(93)\nwrite(94)\nwrite(95)\nwrite(96)\nwrite(97)\nwrite(98)\nwrite(99)\nwrite(100)\nwrite(101)\nwrite(102)\nwrite(103)\nwrite(104)\nwrite(105)\nwrite(106)\nwrite(107)\nwrite(108)\nwrite(109)\nwrite(110)\nwrite(111)\nwrite(112)\nwrite(113)\nwrite(114)\nwrite(115)\nwrite(116)\nwrite(117)\nwrite(118)\nwrite(119)\nwrite(120)\nwrite(121)\nwrite(122)\nwrite(123)\nwrite(124)\nwrite(125)\nwrite(126)\nwrite(127)\nwrite(128)\nwrite(129)\nwrite(130)\nwrite(131)\nwrite(132)\nwrite(133)\nwrite(134)\nwrite(135)\nwrite(136)\nwrite(137)\nwrite(138)\nwrite(139)\nwrite(140)\nwrite(141)\nwrite(142)\nwrite(143)\nwrite(144)\nwrite(145)\nwrite(146)\nwrite(147)\nwrite(148)\nwrite(149)\nwrite(150)\nwrite(151)\nwrite(152)\nwrite(153)\nwrite(154)\nwrite(155)\nwrite(156)\nwrite(157)\nwrite(158)\nwrite(159)\nwrite(160)\nwrite(161)\nwrite(162)\nwrite(163)\nwrite(164)\nwrite(165)\nwrite(166)\nwrite(167)\nwrite(168)\nwrite(169)\nwrite(170)\nwrite(171)\nwrite(172)\nwrite(173)\nwrite(174)\nwrite(175)\nwrite(176)\nwrite(177)\nwrite(178)\nwrite(179)\nwrite(180)\nwrite(181)\nwrite(182)\nwrite(183)\nwrite(184)\nwrite(186)\nwrite(187)\nwrite(188)\nwrite(189)\nwrite(190)\nwrite(191)\nwrite(192)\nwrite(193)\nwrite(194)\nwrite(195)\nwrite(196)\nwrite("}, "136": {"problem_id": 3136, "answer": "import bisect\ninput=open(0)\na,b,s,t,l=[int(i) for i in input().split()]\nset1=set()\nset2=set()\nfor i in range(len(input())):\n    x,y,d=input().split()\n    a=int(x)\n    b=int(y)\n    if a not in set1:\n        set1.add(a)\n    if b not in set2:\n        set2.add(b)\n    l.append((a,b))\nprint(bisect.bisect_left(l,(s+1)))\n"}, "137": {"problem_id": 3137, "answer": "import bisect\nn,m,k=map(int,input().split())\na=[0]*k,[0]*k\nb=list(map(int,input().split()))\nfor i in range(k):\n a[i]=bisect.bisect_left(a[i-1],b[i])\n \nfor i in range(n):\n for j in range(m):\n  if a[i][j]==0:\n   a[i][j]=(a[i-1][j]%2)+(int(b[i][j]))*26+j\n  elif a[i][j]==1:\n   a[i][j]=(a[i-1][j]%2)+(int(b[i][j]))*26+j+1\n  else:\n   a[i][j]=(a[i-1][j]%2)+(int(b[i][j]))*26+j+2\nprint(sum(a[1:k]))"}, "138": {"problem_id": 3138, "answer": "import numpy as np\nn = int(input())\narr = list(map(int, input().split()))\narr.sort()\nans = np.zeros(n, dtype=int)\nfor i in range(1, n):\n    ans[i] += arr[i]\n    \nfor i in range(2, n):\n    if arr[i] > arr[i - 2]:\n        ans[i] += arr[i] - arr[i - 2]\n    elif arr[i] < arr[i - 2]:\n        ans[i] += arr[i] * arr[i - 2]\n    else:\n        ans[i] += arr[i] / arr[i - 2]\nprint(ans.sum(1)[1])"}, "139": {"problem_id": 3139, "answer": "import sys\r\nimport math\r\nreadline = sys.stdin.readline\r\n\r\nn = int(readline())\r\nqueries = []\r\narrivals = []\r\nfor _ in range(n):\r\n    line = readline()\r\n    if line.startswith('P'):\r\n        queries.append(int(line[7:]))\r\n    else:\r\n        arrivals.append(int(line[7:]))\r\n\r\nfor query in queries:\r\n    answ = 'NE'\r\n    if queries[query][0] > arrivals[query]:\r\n        answ = 'P' + str(queries[query][1])\r\n    print(answ)"}, "140": {"problem_id": 3140, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\nfor _ in range(int(input())):\n  r,c,k,l=map(int,input().split())\n  l=int(l)\n  x=[0]*r\n  y=[0]*c\n  for i in range(r):x[i]=(int(i==\"x\" or (i > 0 and i < k-1))).count(0)\n  for i in range(c):y[i]=(int(i==\"x\" or (i > 0 and i < k-1))).count(0)\n  ans=0\n  for i in range(k):\n    ans += (br(x,l) and br(y,c))? 1 : 0\n  print(ans)"}, "141": {"problem_id": 3141, "answer": "import math\ndef cube(a, b, c):\n return pow(a, 2) + pow(b, 2) + pow(c, 2)\nn = int(input())\nt = list(map(int, input().split()))\nd = []\nfor i in range(n):\n x, y, z = t[i]\n d.append(cube(x, y, z))\nprint(d[0]*1e-6)"}, "142": {"problem_id": 3142, "answer": "a, b, s = map(int, input().split())\nans = []\nfor i in range(b, b+s):\n    ans.append(sum(int(x) for x in str(i)))\nprint(ans[0])\nans = ''.join(ans)\nprint(ans)"}, "143": {"problem_id": 3143, "answer": "import sys\ninput = sys.stdin.readline\nn,m=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=[]\nfor i in range(n):\n    c.append(b[i])\nans=0\nfor i in range(m):\n    if c[i]!=a[i]:\n        ans+=1\nprint(ans)"}, "144": {"problem_id": 3144, "answer": "import operator\nd,g,n,k=list(map(int,input().split()))\nl=list(map(int,input().split()))\nwhile d!=g:\n    n=int(input())\n    if n%2==0:\n        l.pop()\n    else:\n        l.append(d)\n        d=g\n        g=n\n        l.pop()\n    k+=1\nprint(max(l))\n"}, "145": {"problem_id": 3145, "answer": "import bisect\ninput=lambda:list(map(int,input().split()))\na,b,n=input().index(' '),input().index('$'),100000000\nwhile a<=b:\n if a==0:\n  break\n c,k=0,0\n for i in str(a):\n  if i.isdigit():\n   c+=1\n  else:\n   k+=1\n  a=int(a)\n ans=k-c\n print(ans)"}, "146": {"problem_id": 3146, "answer": "import bisect\ndef read_int():\n    return int(input())\ndef read_ints():\n    return list(map(int, input().split(' ')))\nn, t = read_int()\npref = [0]*10\nfor i in range(n):\n    pref[i+1] = read_ints()[1]\nr = 0\no = 0\nfor i in range(10**9):\n    r += pref[i]\n    o += bisect.bisect_left(pref, r)\n    print(o, r)\n"}, "147": {"problem_id": 3147, "answer": "import numpy as np\nr,c = [int(i) for i in input().split()]\narr = np.array(input().split(),dtype=int)\nans = []\nfor i in range(r):\n    ans.append(arr[i].count('1'))\nprint(max(ans))"}, "148": {"problem_id": 3148, "answer": "from sys import stdin,stderr\ninput=stdin.readline\nl=lambda:list(map(int,input().split()))\nn=int(input())\nl.append([10**9,0])\nl.append([10**9,-10**9])\nl.append([10**9,-10**9,-10**9])\nwhile(n):\n x,y=l.pop()\n print(x,y)\n n-=1"}, "149": {"problem_id": 3149, "answer": "from math import *\n\nt = int(input())\nfor _ in range(t):\n  n, v, w = map(int, input().split())\n  a = v*(1.0/w)\n  a = abs(a)\n  if a == 0:\n    print(0)\n  else:\n    v = v*(1.0/w)\n    a = v*(1.0/w)\n    b = v*(1.0/w)\n    c = v*(1.0/w)\n    d = v*(1.0/w)\n    e = v*(1.0/w)\n    f = v*(1.0/w)\n    g = v*(1.0/w)\n    h = v*(1.0/w)\n    print(2*min(a,b,c,d,e,f,g,h))"}, "150": {"problem_id": 3150, "answer": "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef MI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef SI():\n\treturn sys.stdin.readline().strip()\n\ndef I():\n\treturn int(sys.stdin.readline())\n\ndef main():\n\tn = I()\n\ta = [0]*n\n\tfor i in range(1, n):\n\t\ta[i] = a[i-1] + [i]\n\tprint(a.count(0))\n\treturn\n\nmain()\n"}, "151": {"problem_id": 3151, "answer": "import math\ndef __starting_point():\n n=int(input())\n if n==1:\n  print(1,2)\n elif n==2:\n  print(2,2)\n elif n==3:\n  print(3,2)\n elif n==4:\n  print(4,2)\n elif n==5:\n  print(5,2)\n elif n==6:\n  print(6,2)\n elif n==7:\n  print(7,2)\n elif n==8:\n  print(8,2)\n elif n==9:\n  print(9,2)\n elif n==10:\n  print(10,2)\n else:\n  print(math.floor(math.sqrt(n)),2)\n__starting_point()"}, "152": {"problem_id": 3152, "answer": "import sys\nimport math\ndef II(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef LI_(): return list(map(int, input().split()))\ndef LI_s(s): return [LI_() for _ in range(s)]\ndef S(): return input()\ndef IS(): return input()\ndef LS(): return list(map(int, input().split()))\ndef SR(s): return [S() for _ in range(s)]\ndef IOList(): return list(map(int, input().split()))\ndef IIL(): return [II() for _ in range(int(input()))]\ndef SRIIL(s): return [SR(s) for _ in range(s)]\ndef main():\n    n = II()\n    print(n//10**9)\n    sys.stdout.write(''.join(map(str, SR(n//10**9))))\n__author__ = 'artyom'\n\ndef __starting_point():\n    main()\n__starting_point()"}, "153": {"problem_id": 3153, "answer": "import bisect as b\ninput = lambda: list(map(int,input().split()))\nn,m=input().split()\nn=int(n)\nm=int(m)\narr=input().split()\narr=list(map(int,arr))\nif n==m:\n    print(0)\n    return\ns=0\nfor i in range(m):\n    a,b=input().split()\n    a=int(a)\n    b=int(b)\n    if abs(a-b)==1:\n        s+=1\n    elif abs(a-b)==2:\n        s+=2\n    else:\n        s+=3\n    print(s)"}, "154": {"problem_id": 3154, "answer": ""}, "155": {"problem_id": 3155, "answer": "import math\nn,k=list(map(int,input().split()))\nif n<k:\n n,k=k,n\nprint(n,k)\n"}, "156": {"problem_id": 3156, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nK = int(readline())\nL = list(map(int,readline().split()))\ns = [0]*N\nfor i in range(N):\n    s[i] = L[i]\nvisited = {}\nans = 0\nfor i in range(N):\n    if visited.get(s[i],0)==0:\n        visited[s[i]] = 1\n        ans ^= 1\n    else:\n        visited[s[i]] += 1\n#print(visited)\nans ^= visited[s[i]]\n#print(ans)\nif ans==0:\n    print(\"impossible\")\nelse:\n    print(\"unique\")"}, "157": {"problem_id": 3157, "answer": "import bisect\nn, k, m = map(int, input().split())\nL = [0]*26\nfor i in range(1, n+1):\n  L[i] = L[i-1]*2+1\nc = 1\nfor i in range(n):\n  c = c*m%2**i\nt = k%2**(n-1)\nr = 0\nfor i in range(n):\n  r += c*L[i]\nprint(r)"}, "158": {"problem_id": 3158, "answer": "import math\r\n\r\ndef main():\r\n    img = open(0)\r\n    coords = dict()\r\n    coords[0] = dict()\r\n    coords[0]['X'] = '.'\r\n    coords[0]['Y'] = '.'\r\n    for line in img.readlines():\r\n        try:\r\n            x, y = list(map(int, line.split()))\r\n        except:\r\n            x, y = 0, 0\r\n        coords[x].setdefault('X', x)\r\n        coords[y].setdefault('Y', y)\r\n\r\n    print(len(coords))\r\n    if min(coords['X']) - max(coords['X'])!= 0.0:\r\n        print('zoom out')\r\n    elif min(coords['Y']) - max(coords['Y'])!= 0.0:\r\n        print('zoom out')\r\n    elif min(coords['X']) - max(coords['X'])!= 0.0:\r\n        print('pan')\r\n    else:\r\n        print('pan')"}, "159": {"problem_id": 3159, "answer": "import numpy as np\nh,w=list(map(int,input().split()))\na=[]\nfor i in range(h):\n    a.append(input())\nb=np.array(a,dtype=np.uint8)\nc=[]\nfor i in range(1,w+1):\n    if b[i]!='+':\n        c.append(i)\n    else:\n        c.append(b[i])\nad=[0]*w\nflag=0\nfor i in range(len(c)):\n    if c[i] not in ad:\n        ad.append(c[i])\n        flag=1\n        break\n    else:\n        ad.append(' ')\n        flag=1\nif flag==0:\n    for i in range(len(c)):\n        print(ad[i],end=\" \")\nelse:\n    print(\" \".join(ad))"}, "160": {"problem_id": 3160, "answer": "s = input()\na = abs(s.count('H') - s.count('?'))\nb = s.count('T')\nprint(2 * a / (b + 1))"}, "161": {"problem_id": 3161, "answer": "import sys\nimport math\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(chr(97 + (ord(input()) - 48) % 52))\nprint(''.join(ans))\nfor i in range(n):\n    sys.stdout.write(str(ans[i]) + '\\n')"}, "162": {"problem_id": 3162, "answer": "import bisect\nn = int(input())\nl = []\nfor i in range(n):\n    x,y,t = map(int,input().split())\n    l.append([x,y,t])\nl.sort()\np = []\nfor i in range(n-1):\n    x,y,t = l[i][0],l[i][1],l[i+1][0]\n    p.append([x,y,t])\np.sort()\ncnt = 0\nm = bisect.bisect_left(p,1)\nfor i in range(m):\n    if p[i][1] == 1:\n        cnt += 1\nprint(cnt)"}, "163": {"problem_id": 3163, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\na = []\nb = []\nfor i in range(n):\n  a.append(list(map(int, readline().split())))\nfor i in range(n):\n  b.append(a[i][1:m+1])\n\nif n == 1:\n  print(0)\nelif n == 2:\n  print(n)\nelse:\n  l = 0\n  r = n-1\n  while l < r:\n    m = (l+r)//2\n    if b[m][0] == 0:\n      l = m+1\n    else:\n      r = m\n  print(n-l)\n"}, "164": {"problem_id": 3164, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef main():\n    ans = 0\n    d = {i: [] for i in range(n)}\n    for i in range(n):\n        d[a[i]].append(i)\n        ans = max(ans, len(d[a[i]]))\n        d[a[i]].pop()\n        d[a[i]].append(i)\n    print(ans)\n\nmain()"}, "165": {"problem_id": 3165, "answer": "import sys\ninput = sys.stdin.readline\nn,k,p = list(map(int,input().split()))\nc = [0]*n\nfor i in range(k):\n    r,c,x,moves = list(map(int,input().split()))\n    moves.append(x)\n    c[x]+=1\nrook = [0]*n\nans = 0\nfor i in range(n):\n    if moves[i] not in rook:\n        rook[i]=1\n        ans+=rook[i]\n    elif rook[i]>0:\n        ans+=rook[i]\nprint(ans)\n"}, "166": {"problem_id": 3166, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n n, k = map(int, input().split())\n arr = list(map(int, input().split()))\n \n p = []\n for i in range(k):\n  p.append(tuple(arr[i]))\n \n s = set()\n \n s.add(p[0])\n \n while p:\n  if len(s) < k:\n   s.add(p[0])\n   p = p[1:]\n  else:\n   break\n \n print(k - len(s))\n \nmain()"}, "167": {"problem_id": 3167, "answer": "import sys\ninput = sys.stdin.readline\nN,K = list(map(int,input().split()))\nX = list(map(int,input().split()))\nQ = int(input())\npart_l = []\npart_r = []\nfor i in range(Q):\n    L,R = list(map(int,input().split()))\n    part_l.append((L-1)//K,(R-1)//K)\n    part_r.append((L+1)//K,(R+1)//K)\n#print(part_l)\n#print(part_r)\nspecial_l = []\nspecial_r = []\nfor i in range(Q):\n    L,R = list(map(int,input().split()))\n    special_l.append((L-1)//K,(R-1)//K)\n    special_r.append((L+1)//K,(R+1)//K)\n#print(special_l)\n#print(special_r)\nans = []\nfor i in range(len(part_l)):\n    l,r = part_l[i]\n    ans.append(l+r*K)\nfor i in range(len(special_l)):\n    l,r = special_l[i]\n    ans.append(l+r*K)\nfor i in range(0,Q):\n    L,R = part_l[i]\n    s = 0\n    for j in range(L,R+1):\n        s += part_r[j]\n    ans.append(s)\nprint('\\n'.join(ans))\n"}, "168": {"problem_id": 3168, "answer": "def insert(l,i):\n    if i==len(l):\n        l.append(i)\n        return l[i]\n    else:\n        left=insert(l[:i],i+1)\n        right=insert(l[i:],i+1)\n        l.insert(i+1,left)\n        l.insert(i+1,right)\n        return l[i]\nn=int(input())\nl=[]\nfor i in range(n):\n    l.append(int(input()))\nprint(*l,sep=\"\\n\")"}, "169": {"problem_id": 3169, "answer": "from collections import deque\nn = int(input())\nans = []\nfor i in range(n):\n x1, y1, x2, y2 = map(int, input().split())\n if x1 == x2:\n  ans.append('{} {} {}'.format(x1, y1, x2))\n elif y1 == y2:\n  ans.append('{} {} {}'.format(x1, y1, x2))\n else:\n  ans.append('{} {} {}'.format(x1, y1, x2))\nprint(*ans, sep='\\n')"}, "170": {"problem_id": 3170, "answer": ""}, "171": {"problem_id": 3171, "answer": "import collections as col\nimport bisect as b_ins\nimport time\nn,k=map(int,input().split())\na=col.Counter(list(map(int,input().split())))\nfor _ in range(k):\n    x,p=map(int,input().split())\n    if a[x]==p:\n        print('truther')\n    elif a[x]=='n':\n        print('fabulist')\n    elif a[x]=='a':\n        print('charlatan')\n    else:\n        print('not {0}'.format(p))"}, "172": {"problem_id": 3172, "answer": "import math as m\nn=int(input())\na=[int(i) for i in input().split()]\ns=m.ceil(a[0]**0.5+a[1]**0.5)\nprint(s*max(a[2],a[0]))"}, "173": {"problem_id": 3173, "answer": "import numpy as np\r\nr,c,k=list(map(int,input().split()))\r\nl=[]\r\nfor _ in range(r):\r\n    l.append(input())\r\nl.sort()\r\nm=sum(l[0])\r\nfor i in range(1,len(l)):\r\n    m=max(m,np.sum(l[i])+np.sum(l[i-1]))\r\nprint(m)\r\n"}, "174": {"problem_id": 3174, "answer": "import sys\nread = sys.stdin.readline\nn,k = map(int,read().split())\ncity = []\ncount = 0\nfor i in range(n):\n  city.append(list(map(int,read().split())))\ncount = sum(city)%k\ncity.sort()\nans = n*10**5+1\nfor i in range(n-1):\n  x1,y1,k1 = city[i]\n  x2,y2,k2 = city[i+1]\n  if x1%k1 == 0 and x2%k2 == 0:\n    ans = min(ans,k1*y2+k2*y1)\nprint('%.3f'%ans)"}, "175": {"problem_id": 3175, "answer": "n, a = int(input()), [int(i) for i in input().split()]\ns = 1\nfor i in a:\n s = s*i\n s = s + min(a[i], s)\n print(s)"}, "176": {"problem_id": 3176, "answer": "import sys\ninput = sys.stdin.readline\n\ndef jump(a, b, c):\n nonlocal ans, l, cur\n ans = max(ans, l)\n cur = (a, b, c)\n \n if cur[0] > cur[1] and cur[2] > cur[1] and cur[3] > cur[2]:\n  print(cur[0] + 1)\n elif cur[0] > cur[1] and cur[2] < cur[1] and cur[3] < cur[2]:\n  print(cur[0] + 1)\n elif cur[0] < cur[1] and cur[2] > cur[1] and cur[3] > cur[2]:\n  print(cur[0] + 1)\n elif cur[0] < cur[1] and cur[2] < cur[1] and cur[3] < cur[2]:\n  print(cur[0] + 1)\n else:\n  print(cur[3] + 1)\n \nn, k = map(int, input().split())\nl = 0\nfor i in range(n):\n x, y, f = map(int, input().split())\n jump(x, y, f)"}, "177": {"problem_id": 3177, "answer": "n,m=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nb=[]\nfor i in range(m):\n    b.append(a[i]-a[i-1])\nans=0\nfor i in range(n):\n    if b[i]<b[i-1]:\n        ans+=1\nprint(ans)"}, "178": {"problem_id": 3178, "answer": "import sys\ndef II():\n\treturn int(sys.stdin.readline())\n \ndef MI():\n\treturn map(int,sys.stdin.readline().split())\n \ndef LI():\n\treturn list(map(int,sys.stdin.readline().split()))\n \ndef LI2():\n\treturn list(map(int,sys.stdin.readline().split([])))\n \ndef LLI(rows_number):\n\treturn [list(map(int,sys.stdin.readline().split())) for _ in range(rows_number)]\n \ndef SI():\n\treturn sys.stdin.readline()\n \ndef Sqrt(x):\n\treturn (x**2)//2\n \ndef CeilDivide(n):\n\tif n%2==0:\n\t\treturn int(n/2)\n\telse:\n\t\treturn int(ceil(int((n+1)/2)))\n \ndef __starting_point():\n\tt=[]\n\tfor i in range(II()):\n\t\ta,b=MI()\n\t\tt.append((a,b))\n\tprint(CeilDivide(len(t)))\n__starting_point()"}, "179": {"problem_id": 3179, "answer": "from sys import stdin as sin\r\ninput = sin.readline\r\nn,k=list(map(int,input().split()))\r\na=[[0]*n for i in range(n)]\r\nfor i in range(n):\r\n  a[i][i]=1\r\ns=0\r\nfor i in range(1,3*k+2):\r\n  s+=(i*i)\r\n  for j in range(i+1,3*k+2):\r\n    s+=(abs(a[i][j]))\r\n  s+=(i*i)\r\nprint(s)\r\n"}, "180": {"problem_id": 3180, "answer": "import copy\ninput = lambda: list(map(int,input().split()))\nn,k,m = map(int,input().split())\ncanvas = []\nfor i in range(n):\n    canvas.append(list(map(int,input().split())))\ncolors = ['0']*n\nmapp = copy.deepcopy(canvas)\nfor _ in range(m):\n    cmd = input().split()\n    if cmd[0] == 'PAINT':\n        p = int(cmd[1])\n        p1 = canvas[p-1][p-1]\n        p2 = canvas[p-1][p-2]\n        colors[p1] = colors[p2]\n        mapp[p1].remove(p2)\n        mapp[p2].remove(p1)\n    elif cmd[0] == 'SAVE':\n        x = int(cmd[1])\n        x1 = canvas[x-1][x-1]\n        x2 = canvas[x-1][x-2]\n        canvas[x-1][x-2] = x1\n        canvas[x-1][x-1] = x2\n        mapp[x1].append(x2)\n        mapp[x2].append(x1)\n    elif cmd[0] == 'LOAD':\n        x = int(cmd[1])\n        print(*mapp[x-1])"}, "181": {"problem_id": 3181, "answer": "import sys\nreadline = sys.stdin.readline\nn, k = map(int, readline().split())\ns = list(range(1, n + 1))\ns.sort()\nif k % 2 == 0:\n    print(' '.join(map(str, s)))\n    return\n\nans = []\nfor i in range(n):\n    if s[i] == s[i + 1]:\n        ans.append(i + 1)\n\nif k % 2!=0:\n    print(' '.join(map(str, ans)))\n    return\n\nans.append(k)\n\nprint(' '.join(map(str, ans)))"}, "182": {"problem_id": 3182, "answer": "import math\nn = int(input())\nwhile n>0:\n x1,y1,x2,y2 = map(int,input().split())\n a = math.sqrt((x1-x2)**2+(y1-y2)**2)\n b = math.sqrt((x1-x2)**2+(y1-y2)**2)\n c = a+b\n d = a-b\n e = a+c\n f = a-c\n print(int(f+int(e-f)))\n n = n-1"}, "183": {"problem_id": 3183, "answer": "import sys\ninput = sys.stdin.readline\nreadInts = lambda: list(map(int, input().split()))\nreadInts(int(input()))"}, "184": {"problem_id": 3184, "answer": "import sys\nimport math\nreadline = sys.stdin.readline\nfrom itertools import accumulate\nreadline()\nn, k = map(int, readline().split())\na = [list(map(int, readline().split())) for i in range(n)]\na.sort(key=lambda x: x[1]-x[0], reverse=True)\nans = 0\nvisited = set()\nfor i in range(n):\n    visited.add(i)\n    ans += abs(a[i][1] - a[i][0])\n    for j in range(i+1, n):\n        if a[i][0] <= a[j][1] and a[j][0] <= a[i][0]:\n            ans += abs(a[i][1] - a[j][1])\n            visited.add(j)\nprint(ans)"}, "185": {"problem_id": 3185, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nprint(n//10**6)"}, "186": {"problem_id": 3186, "answer": "from sys import*\ninput=stdin.readline\nn,m,k=list(map(int,input().split()))\nif k%3!=0:\n print(0)\nelse:\n c=1\n for i in range(1,m+1):\n  c=(c*(n-i))%(m*(m-1))+c\n print(c%(m*(m-1))-c%m)\n"}, "187": {"problem_id": 3187, "answer": "from collections import defaultdict as dd\nimport sys\ninput=sys.stdin.readline\nd=dd(int)\nn=int(input())\na=[list(map(int,input().split())) for i in range(n)]\nd.update(a)\nans=defaultdict(lambda:0)\nfor i in range(n):\n    x,y=a[i]\n    ans[max(0,x-d)]=max(0,y-d)\nprint(ans[0])"}, "188": {"problem_id": 3188, "answer": "n = int(input())\npoints = []\nfor i in range(n):\n    x, y, z = map(int, input().split())\n    points.append((x, y, z))\npoints.sort()\nprint(min([points[i][0] - points[j][0], points[i][1] - points[j][1], points[i][2] - points[j][2]] for i in range(n) for j in range(i + 1, n)))"}, "189": {"problem_id": 3189, "answer": "import sys\nsys.setrecursionlimit(10**8)\ndef read():\n return int(input())\ndef readline():\n return input().rstrip('\\n')\nMOD = 10**9+7\nn,m = read()\na = []\nfor i in range(n):\n a.append(read())\na.sort()\nans = 0\nfor i in range(n):\n ans += pow(a[i],MOD-2,MOD)\nprint(ans%MOD)"}, "190": {"problem_id": 3190, "answer": "n = int(input())\na = list(map(int, input().split()))\np = int(input())\nd = []\nans = 0\nfor i in range(n):\n    if a[i] >= p:\n        d.append(i+1)\n    elif a[i] <= p:\n        ans += 1\n        d.append(i+1)\nprint(ans)\n"}, "191": {"problem_id": 3191, "answer": "import bisect\nn, r, p = map(int, input().split())\nb = [0] * 10 ** 6\nans = 10 ** 9\nfor i in range(n):\n    b[i + 1] = bisect.bisect_right(b[i], r) - 1\n    ans = min(ans, p + b[i] - b[i - 1])\nprint(ans)"}, "192": {"problem_id": 3192, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(input())\nnames = list(map(lambda x: x.strip(), input().split()))\n\ndef dfs(s, p):\n    nonlocal seen\n    seen.add(s)\n    for i in range(1, len(s)):\n        if s[i]!= p[i]:\n            dfs(s[:i] + s[i] + s[i+1:], s[i:])\ndfs('')\n\nfor name in names:\n    print(name, end=' ')\n    \n"}, "193": {"problem_id": 3193, "answer": "import sys\ndef inp(): return sys.stdin.readline().strip()\ndef inpl(): return list(map(int,sys.stdin.readline().strip().split()))\ndef ins():  return list(map(int,sys.stdin.readline().strip().split()))\nsys.setrecursionlimit(10**9)\ninp()\na=inp()\np,m=inp()\nif p<m:\n print(0)\nelse:\n ans=a[0]\n dp=m-p\n ans*=p\n ans+=(m-p)\n ans+=(p-dp)\n print(ans)"}, "194": {"problem_id": 3194, "answer": "n,t=map(int,input().split())\nl=[]\nfor i in range(n):\n    a,b=map(int,input().split())\n    l.append((a,b))\nl.sort()\nif n>t:\n    print(\"yes\")\nelse:\n    print(\"no\")"}, "195": {"problem_id": 3195, "answer": "import math\nt,y,r=list(map(int,input().split()))\nn=int(input())\nwhile(n):\n t,y,r=list(map(int,input().split()))\n c=int(input())\n q=0\n for i in range(c):\n  if(t>=y+r):\n   q+=1\n  elif(y>t):\n   q+=1\n  elif(t<y):\n   q+=1\n  elif(y==t):\n   q+=1\n  elif(t==y):\n   q+=1\n  elif(y==t+t):\n   q+=1\n  elif(y==t+t+r):\n   q+=1\n print(q/float(math.ceil(q/2.0)))\n n-=1"}, "196": {"problem_id": 3196, "answer": "import bisect\nn,m=list(map(int,input().split()))\na=[]\nfor i in range(m):\n    a.append(list(map(int,input().split())))\nans=0\nfor i in range(10):\n    if int(bisect.bisect(a,(10**i)))-1!=0:\n        ans+=str(i+1)\n        break\nprint(ans)\n"}, "197": {"problem_id": 3197, "answer": "n,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nb=[]\nfor i in range(n):\n    b.append(a[i]^1)\nans=0\nfor i in range(n):\n    if b[i]>k:\n        ans+=1\n        k=b[i]\nprint(ans)"}, "198": {"problem_id": 3198, "answer": "n = int(input())\ndictionary = {}\nfor i in range(n):\n    s = input()\n    if s not in dictionary:\n        dictionary[s] = 1\n    else:\n        dictionary[s] += 1\nprint('\\n'.join(dictionary))"}, "199": {"problem_id": 3199, "answer": "import math\nA, B, L = list(map(int, input().split()))\nAns = []\nfor i in range(1,2001):\n    Ans.append(math.floor(i*(A+1+B)))\n\nAns.sort()\n\ni = 0\nj = 0\nwhile i < L:\n    if (Ans[i]*(Ans[i]-Ans[j])) >= L:\n        j = i\n    elif (Ans[i]*(Ans[i]-Ans[j])) <= L:\n        i = j\n    else:\n        Ans[i] += 1\n\nprint((\"\\n\".join(map(str, Ans))))\n"}, "200": {"problem_id": 3200, "answer": "import math\ndef __starting_point():\n n = int(input())\n t, g, r = list(map(int, input().split()))\n t = t[:-1]\n g = g[:-1]\n r = r[:-1]\n times = [t, g, r]\n times.sort()\n print(math.ceil(times[-1] / 1.0) * 1e6)\n__starting_point()"}, "201": {"problem_id": 3201, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+7\nn, k, b, M = map(int, readline().split())\na = list(map(int, readline().split()))\nd = [1]*n\nfor i in range(n):\n    d[i] = (d[i-1]*b+a[i])%M\n    \nt = []\nfor i in range(2, n+1):\n    t.append(d[i]*b+a[i])%M\nprint('\\n'.join(map(str, t)))"}, "202": {"problem_id": 3202, "answer": "import sys\r\nimport math\r\nimport bisect\r\nfrom collections import defaultdict, deque\r\nfrom itertools import permutations, combinations\r\nfrom operator import itemgetter\r\n\r\ndef LI(): return list(map(int, sys.stdin.readline().split()))\r\ndef I(): return int(sys.stdin.readline())\r\ndef LS(): return list(shebangredirect())\r\ndef S(): return sys.stdin.readline()\r\ndef IR(n): return [I() for i in range(n)]\r\ndef LIR(n): return [LI() for i in range(n)]\r\ndef Stdin(f): sys.stdin.write(f + '\\n')\r\ndef Shebangredirect(path):\r\n    print(path)\r\n    return sys.stdin.readline().rstrip('\\r\\n')\r\n\r\nMOD = 1000000007\r\n\r\ndef dfs(s, p):\r\n    visited[s] = 1\r\n    que = deque([s])\r\n    while que:\r\n        s = que.popleft()\r\n        for i in range(p):\r\n            if visited[i] == 0:\r\n                dfs(i, p - 1)\r\n"}, "203": {"problem_id": 3203, "answer": "import sys\nimport math\ndef input():\n\treturn sys.stdin.readline().strip()\nn=int(input())\nl=[]\nfor i in range(n):\n\tl.append(list(map(int,input().split())))\nl.sort()\nans=0\nfor i in range(n):\n\tans=max(ans,l[i][1]*l[i][2])\nprint(ans)"}, "204": {"problem_id": 3204, "answer": "import bisect as b\ninput = lambda: list(map(int, input().split()))\nlst = input().split()\ns = 0\nfor i in range(1, len(lst)):\n    s += b.bisect(lst, i - 20) * 60\n    lst[i] = str(s)\nprint(s)"}, "205": {"problem_id": 3205, "answer": "import sys\nreadline = sys.stdin.readline\n\nM,N = list(map(int,readline().split()))\ntransactions = []\nfor i in range(N):\n    a,b,p = list(map(int,readline().split()))\n    transactions.append((a,b,p))\n\nsums = 0\nfor t in transactions:\n    sums += t[0]\n    sums //= 2\n    sums += t[1]\n    sums //= 3\n    sums += t[2]\nprint(sums)\n"}, "206": {"problem_id": 3206, "answer": "import sys\ninput = sys.stdin.readline\nT = int(input())\nL = list(map(int,input().split()))\nB = list(map(int,input().split()))\nB.sort(reverse=True)\nN = len(L)\nH = max(L)\nS = len(B)\nfor i in range(N):\n    stack = [0]*H\n    stack[i] = B[i]\n    for j in range(H):\n        stack[j] += L[j]\n    stack.sort()\n    print(int(stack[-1]))\n    print(' '.join(map(str,stack)))\n"}, "207": {"problem_id": 3207, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import deque\nimport math\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    n, k, l = map(int, input().split())\n    arr = [0]*k\n    arr[0] = 1\n    for _ in range(n):\n        d, c, s = map(int, input().split())\n        arr[c] += arr[s]\n        bl(d, c)\n        br(s, c)\n    for i in range(k):\n        print(arr[i])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "208": {"problem_id": 3208, "answer": "import string\ns=input()\na=list(s)\nfor i in range(len(a)):\n    if a[i] in string.ascii_lowercase:\n        s=s[:i] + \"\".join(a[i]) + s[i+1:]\n    else:\n        s=s[:i] + \"\".join(a[i]) + \"h\"\nprint(s)"}, "209": {"problem_id": 3209, "answer": "from sys import stdin,stderr\ninput = stdin.readline\nL = lambda: list(map(int, input().split()))\nM = lambda: list(map(int, input().split()))\nI = lambda: int(input())\nD = lambda: digital_input\n\n# n, m, t, p, d = M(); d = d//120 + d%120\n# n, m, t, p, d = L(); d = d//60 + d%60\n# n, m, t, p, d = I(); d = d//30 + d%30\n# n, m, t, p, d = D(); d = d//15 + d%15\n# n, m, t, p, d = SSA(3, 1, 1, 0, 10**9)\n# n, m, t, p, d = SSA(3, 1, 1, 0, 10**9, 3)\n# n, m, t, p, d = SSA(3, 1, 1, 0, 10**9, 3, 120)\n# n, m, t, p, d = SSA(3, 1, 1, 0, 10**9, 3, 60)\n# n, m, t, p, d = SSA(3, 1, 1, 0, 10**9, 3, 30)\n# n, m, t, p, d = SSA(3, 1, 1, 0, 10**9, 3, 15)\n# n, m, t, p, d = SSA(3, 1, 1, 0, 10**9, 3, 10)\n# n, m, t, p, d = SSA(3, 1, 1, 0, 10**9, 3, 5)\n# n, m, t, p, d = SSA(3, 1, 1, 0, 10**9, 3, 2)\n# n, m, t, p, d = SSA(3, 1, 1, 0, 10**9, 3, 1)\n# n, m, t, p, d = SSA(3, 1, 1, 0, 10**9, 3, 0)\n# n, m, t, p, d = I(); d = d//60 + d%60\n# n, m, t, p, d = M(); d = d//30 + d%30\n# n, m, t, p, d = I(120); d = d//15 + d%15\n# n, m, t, p, d = M(60); d = d//15 + d%15\n# n, m, t, p, d = I(30); d = d//30 + d%30\n# n, m, t, p, d = I(15); d = d//15 + d%15\n# n, m, t, p, d = II(3, 120, 60, 30, 15); d = d//15 + d%15\n# n, m, t, p, d = II(3, 120, 30, 15, 120); d = d//15 + d%15\n# n, m, t, p, d = II(3, 60, 30, 120, 60); d = d//15 + d%15\n# n, m, t, p, d = II(3, 30, 30, 120, 60, 10); d = d//15 + d%15\n# n, m, t, p, d = II(3, 15, 30, 120, 60, 10, 5); d = d//15 + d%15\n# n, m, t, p, d = II(3, 15, 5, 10, 120, 60, 10, 5, 10); d = d//15 + d%15\n# n, m, t, p, d = II(3, 10, 5, 120, 120, 300, 10, 5, 10, 120, 60, 30, 15); d = d//15 + d%15\n# n, m, t, p, d = II(3, 5, 10, 120, 120, 300, 60, 30, 10, 5, 10, 120, 60, 10, 5, 10); d = d//15 + d%15\n# n, m, t, p, d = II(3, 5, 10, 120, 60, 30, 15, 10, 5, 120, 60, 30, 15, 120, 60, 10, 5); d = d//15 + d%15\n# n, m, t, p, d"}, "210": {"problem_id": 3210, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nl = [list(map(int, input().split())) for i in range(n)]\n\nans = 0\nflag = 0\nfor i in range(2*n-1):\n if l[i][0] == '*' and l[i][1] == '.':\n  ans += 1\n elif l[i][0] == '.' and l[i][1] == '.':\n  ans += 1\n elif l[i][0] == '.':\n  ans += 1\n else:\n  ans += 2*min(l[i][1], l[i][0])\n\nif ans > n:\n print(ans)\nelif flag == 0:\n  flag = 1\nelse:\n  flag = 0\n"}, "211": {"problem_id": 3211, "answer": "n = int(input())\ns = input()\na = []\nb = []\nfor i in range(n):\n if s[i] == \"1\":\n  a.append(i)\n else:\n  b.append(i)\na.sort()\nb.sort()\ncount = 0\nfor i in range(len(a)):\n if a[i] not in b:\n  count += 1\nelse:\n if b[a[i]] == a[i]:\n  count += 1\nelif count > 1:\n  print(\"impossible\")\n  return\nelse:\n count += 1\nprint(count)"}, "212": {"problem_id": 3212, "answer": "import numpy as np\nn = int(input())\na = np.array([[0,0,0,0] for _ in range(n)] for _ in range(3)]\na[0][0], a[0][1], a[0][2] = 1000, 1000, 1000\na[1][0], a[1][1], a[1][2] = 1000, 0, 1000\na[2][0], a[2][1], a[2][2] = 0, 0, 1000\n\nans = [\"Bill will be bitten.\", \"Bill will be bitten.\"][a[n&1]]\nprint((\"%.2f %s\" % (1000-a[0][0], \"snakes\")))\n"}, "213": {"problem_id": 3213, "answer": "m,s = map(int, input().split())\ninput()\ns = int(input())\na = 2**s\nb = 2**(s-1)\nfor i in range(m):\n    if input()[i]=='+':\n        a-=1\n    else:\n        b-=1\nprint('o', end='')\nfor i in range(len(a)):\n    if a[i]==2**s-1:\n        print('o', end='')\n    else:\n        print('+', end='')"}, "214": {"problem_id": 3214, "answer": "# cook your dish here\na = list()\nfor i in range(1,101):\n    a.append(input().strip()[:-1])\nb = list()\nfor i in range(1,101):\n    b.append(a[i].lower())\nc = \" \".join(b)\nd = \" \".join(c)\ne = d.split()\nf = e[1]\ng = e[2]\nh = len(f)\ni = 0\nwhile i < g:\n    if f.startswith(h):\n        print(f, end=\" \")\n        print(g)\n        break\n    i += 1\n"}, "215": {"problem_id": 3215, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\nR=lambda:map(int,input().split())\nI=lambda:int(input())\nS=lambda:list(R())"}, "216": {"problem_id": 3216, "answer": "import fractions as f\ns=input()\nn,m=map(int,s.split(' '))\nif n>1:\n    f.reduce(lambda x,y:x*y,s[:n]*s[-n:])\n    print(f.mul(n,f.ceil(f.sqrt(n))))\nelse:\n    print(f.mul(n,f.ceil(f.sqrt(n))))"}, "217": {"problem_id": 3217, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor i in range(t):\n n=int(input())\n a=[list(map(int,input().split())) for i in range(n)]\n a.sort()\n print(n-sum(a[n-1]))"}, "218": {"problem_id": 3218, "answer": "from sys import stdin\ninput = stdin.readline\nn = int(input())\nedge = [[] for i in range(n)]\nfor i in range(n):\n    a = list(map(int, input().split()))\n    edge[i].append(a)\ncolors = [-1 for i in range(n)]\nfor i in range(n):\n    colors[i] = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if colors[i] == -1:\n            colors[i] = j\n            edge[i].append((j, i))\nans = 0\nfor i in range(n):\n    ans += sum(colors[i])\nprint(ans)"}, "219": {"problem_id": 3219, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nMOD = 10**9+7\ns = list(map(int,read().split()))\nprint(len(set(s)))"}, "220": {"problem_id": 3220, "answer": "import sys\nn=int(input())\na=list(map(int,input().split()))\nd=dict()\nfor i in range(n):\n    d[a[i]]=1\nfor i in range(1,n):\n    if d[a[i]]!=1:\n        d[a[i]]=1\nans=''\nfor i in range(n):\n    if d[i]==1:\n        ans+='L'\n    else:\n        ans+='R'\nprint(ans)"}, "221": {"problem_id": 3221, "answer": "import math\nn,m,a=list(map(int,input().split()))\ng=0\nfor i in range(m):\n u,v,c=list(map(int,input().split()))\n g+=min(c,a[u-1]+a[v-1])\nprint(g)"}, "222": {"problem_id": 3222, "answer": "from collections import deque\nn,m=list(map(int,input().split()))\ndef main():\n for i in range(m):\n  f,t=list(map(int,input().split()))\n  if f>t:\n   print(f-t)\n   continue\n  visited=set()\n  visited.add(f)\n  visited.add(t)\n  q=deque()\n  q.appendleft((f,0))\n  visited.add(f)\n  visited.add(t)\n  while q:\n   f,visited=q.pop()\n   for _ in range(len(visited)):\n    if visited[f]!=f:\n     q.appendleft((visited[f],len(visited)//2+1))\n     visited[f]=(len(visited)//2+1)\n    \nmain()\n"}, "223": {"problem_id": 3223, "answer": "import sys\r\nimport math\r\ndef II():\r\n return int(input())\r\ndef LI():\r\n return list(map(int, input().split()))\r\ndef MI():\r\n return map(int, input().split())\r\ndef LLI(rows_number):\r\n return [list(map(int, input().split())) for _ in range(rows_number)]\r\ndef SI():\r\n return sys.stdin.readline().strip()\r\n\r\nV = II()\r\nedges = []\r\nfor i in range(V):\r\n edges.append(set())\r\nfor i in range(V):\r\n edges[i].add(i)\r\nadj = [[] for _ in range(V)]\r\nfor i in range(V):\r\n adj[i].append(i)\r\nfor i in range(V):\r\n adj[i].remove(i)\r\nvis = [0]*V\r\nans = [0]*V\r\nfor i in range(V):\r\n vis[i] = 1\r\n ans[i] = len(adj[i])\r\n for i in range(V):\r\n  for j in range(i+1,V):\r\n   if adj[i].intersection(adj[j]):\r\n    vis[j] = 1\r\n    ans[j] = len(adj[j])\r\n print(ans[0] if ans[0]!=0 else II())\r\n"}, "224": {"problem_id": 3224, "answer": "import numpy as np\nl=[]\nfor i in range(4):\n l.append(np.array(input().split()))\nx=sorted(l,reverse=True)[0]\ny=sorted(l,reverse=True)[1]\nz=sorted(l,reverse=True)[2]\nprint(x,y,z)"}, "225": {"problem_id": 3225, "answer": "n = int(input())\nv = list(map(int, input().split()))\nv.sort()\nfor i in range(n):\n    if v[i] > v[i + 1]:\n        print(v[i], end=\" \")\n    else:\n        print(v[i])"}, "226": {"problem_id": 3226, "answer": "import sys\ninput = sys.stdin.readline\nfrom bisect import bisect_left as bl, bisect_right as br, insort\nINF = float('inf')\nMOD = 10 ** 9 + 7\ninput() # cook your dish here\n# A = [int(x) for x in input().split()]\nn, m, e = list(map(int, input().split()))\nroad = list(map(int, input().split()))\nalarm = [0] * (n + 1)\nvisited = [0] * (m + 1)\nans = \"IMPOSSIBLE\"\nfor i in range(m):\n    a, b, l = list(map(int, input().split()))\n    road[a - 1] = b - 1\n    road[b - 1] = a - 1\n# print(road)\n# print(visited)\n# print(ans)\ninsort(road, 1)\nans = br(ans, 0, VISIT_FIRST)\nif ans == \"IMPOSSIBLE\":\n    print(m * 100 / 160)\n    return\ndic = {i: [] for i in range(n)}\nfor i in range(n):\n    if visited[i] == 0:\n        dic[road[i]].append(i)\n        visited[i] = 1\ncnt = 0\nfor i in dic:\n    if cnt >= e:\n        break\n    if visited[i] == 0:\n        cnt += 1\n        ans = min(ans, m * 100 / 160)\n        continue\n    visited[i] = 1\n    for j in bl(road[i]):\n        if visited[j] == 0:\n            dic[road[i]].append(j)\n            visited[j] = 1\n            cnt += 1\n"}, "227": {"problem_id": 3227, "answer": "import sys\ninput = sys.stdin.readline\nn, e = list(map(int, input().split()))\nl = [0] * n\nfor i in range(e):\n    a, b = list(map(int, input().split()))\n    l[a - 1] = b - 1\n    l[b - 1] = a - 1\nif n & 1 and l[n - 1] == l[n - 2]:\n    print('1')\nelse:\n    print('2')\n"}, "228": {"problem_id": 3228, "answer": "import sys\nimport math\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef LI2(): return list(map(int, input().split()))\ndef LL(): return list(range(1, 11))\ndef LS(): return list(strictly_increasing(LI()))\ndef SR(): return sorted(LI())\ndef SLC(): return [list(x) for x in sys.stdin.readlines()[1:]]\ndef SLR(n): return [I() for i in range(n)]\ndef SRN(n): return [I() for i in range(n)]\ndef V(): return sys.stdin.readline().strip()\ndef Vi(): return [int(x) for x in input().split()]\n\n#------------------kludge-------------------------------------------------------\nt = I()\ncnt = 0\nfor i in range(t):\n    cnt += i + 1\n    if cnt % 2 == 1:\n        print(cnt)\n        break"}, "229": {"problem_id": 3229, "answer": ""}, "230": {"problem_id": 3230, "answer": "import sys\r\nread = sys.stdin.readline\r\nreadline = sys.stdin.readline\r\n\r\nR, C = list(map(int, read().split()))\r\nAns = [0]*R\r\nfor i in range(R):\r\n    ch = read().rstrip()\r\n    if ch == '.X':\r\n        Ans[i] += 1\r\n    elif ch == '.L':\r\n        Ans[i] += 1\r\nprint((' '.join(map(str, Ans))))"}, "231": {"problem_id": 3231, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\nn, p, q = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n):\n    s[i + 1] = int(input())\n    l = list(map(int, input().split()))\n    l.insert(0, 0)\n    p -= len(l) // 2\n    q -= len(l) // 2\n    if p < 0:\n        p = 0\n    if q < 0:\n        q = 0\nprelude = []\nfor i in range(n):\n    prel = [s[i] + 1]\n    for j in range(i + 1, n):\n        prel.append(s[j] + 1)\n    prelude.append(prel)\nprelude.sort()\ndp = [0] * (p + 1)\ndp[0] = 1\nfor i in range(1, p + 1):\n    dp[i] = dp[i - 1]\nans = []\nfor i in range(p + 1):\n    if dp[i] == 0:\n        ans.append(\"detention\")\n        continue\n    nans = len(ans)\n    for j in range(n):\n        if ans[j] == \"detention\":\n            break\n        else:\n            ans.append(str(dp[i]))\n    if nans < p:\n        ans.append(\"homewise\")\n        continue\n    dp[p] = 1\n    ans.append(\"home\")\nprint(\"\".join(ans))\n"}, "232": {"problem_id": 3232, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = []\nfor i in range(n):\n    a = input().strip()\n    ans.append(a)\n\nprint(' '.join(ans))"}, "233": {"problem_id": 3233, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint = stdout.write\n\nn = int(input())\nl = list(map(int, input().split()))\n\nscary = 0\nfor i in range(n):\n    if l[i]!= i+1:\n        continue\n    else:\n        l[i] = i+1\n        scary += 1\n\nprint(scary)"}, "234": {"problem_id": 3234, "answer": "import math\nn = int(input())\na = math.sqrt(2*n)\nb = pow(2,n)-1\nc = min(a,b)\nd = 2*n-2*c\ne = max(a,b,c)\nf = 2*n-2*e\ng = max(a,b,c,e)\nh = 2*n-2*f\ni = 0\nj = 0\nk = 0\nl = 0\nm = 0\nans = 0\nfor i in range(0,n):\n    if i%2==0:\n        ans+=1\n        j+=1\n        if j==g:\n            ans+=1\n            j=0\n            k+=1\n            if k==h:\n                ans+=1\n                k=0\n                h=0\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n                h=g\n                g=h\n        "}, "235": {"problem_id": 3235, "answer": "import sys,math\ndef main():\n n,m=list(map(int,input().split()))\n a,b,c=[],[]\n for i in range(n):\n  a.append(list(map(int,input().split())))\n for i in range(m):\n  b.append(list(map(int,input().split())))\n c=min(c,1000)\n ans=[]\n for i in range(n):\n  if ans!=[]:\n   ans.append([])\n  else:\n   ans[i].append(i)\n print(len(ans))\n for i in ans:\n  print(*i)\n \nmain()\n"}, "236": {"problem_id": 3236, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nd=[]\nfor i in range(m):\n    d.append([])\nfor i in range(n):\n    d[i].append(a[i])\nans=0\nfor i in range(m):\n    b,c=d[i].pop()\n    ans+=1+min(b,c)\nprint(ans)\n"}, "237": {"problem_id": 3237, "answer": "import math\ndef primeFactors(n):\n    i = 2\n    while i < n:\n        if n % i == 0:\n            if n//i!= i:\n                return []\n            return [i] * (n//i)\n        i += 1\n    return [i] * (n - 1)\nres = []\npf = primeFactors(10)\nfor i in pf:\n    res.append(i*math.ceil(i/2))\nprint(res[0]%1000000007)"}, "238": {"problem_id": 3238, "answer": "import numpy as np\n\ndef main():\n n,m=list(map(int,input().split()))\n a=[]\n for i in range(n):\n  a.append(input())\n if len(a)==2:\n  print(np.array(a).reshape(1,1,-1))\n else:\n  for i in range(1,n+1):\n   for j in range(1,m+1):\n    if a[i][j]=='#':\n     a[i][j]='.'\n    elif a[i][j]=='.':\n     a[i][j]='#'\n    else:\n     a[i][j]='#'\n   print(' '.join(map(str,a)))\nmain()\n"}, "239": {"problem_id": 3239, "answer": "import math\nn,p = int(input()),0.5\na,b = [0]*1000003,0\nfor i in range(n):\n a[i+1] = p*float(input())\n b += a[i]\nfor i in range(2,len(a)):\n b += a[i]*math.log(a[i],10)\nprint(b)"}, "240": {"problem_id": 3240, "answer": "k,v = map(int,input().split())\nl = []\nfor i in range(k):\n    l.append(list(map(int,input().split())))\nl.sort(reverse=True)\nans = 0\nfor i in range(v-1):\n    ans += bin(l[i][1])[2:]\nprint(ans)"}, "241": {"problem_id": 3241, "answer": "import bisect\nn = int(input())\na = [0]*n\nfor i in range(n):\n    a[i] += int(input())\nb = [0]*n\nfor i in range(n):\n    b[i] += int(input())\nif a[0] == 0:\n    print(-1)\n    return\nans = a[0]*b[0]\nfor i in range(1,n):\n    if a[i] == 0:\n        ans += a[i]*b[i]\n    elif b[i] == 0:\n        ans -= a[i]*b[i]\n    else:\n        ans *= b[i]\n        ans //= b[i]\nprint(ans)"}, "242": {"problem_id": 3242, "answer": "import sys\nreadline = sys.stdin.readline\n\nn,p = list(map(int,readline().split()))\ncnt = 0\nans = 10**10\nfor i in range(n):\n    if cnt >= p:\n        ans = min(ans,i+1)\n        cnt += 1\nprint(ans)"}, "243": {"problem_id": 3243, "answer": "n,m,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nb=[]\nfor i in range(n):\n    b.append(a[i])\nb.sort()\nc=0\nd=0\nfor i in range(n):\n    if b[i]==b[i+1]:\n        c+=1\n    elif b[i]>b[i+1]:\n        d+=1\nif c<d:\n    print(\"yes\")\nelse:\n    print(\"no\")"}, "244": {"problem_id": 3244, "answer": "import sys\nimport math\ndef II():\n return int(sys.stdin.readline())\ndef MI():\n return map(int,sys.stdin.readline().split())\ndef LI():\n return list(map(int,sys.stdin.readline().split()))\nn = II()\na = [0]*n\nfor i in range(1,n):\n a[i]+=a[i-1]\nprint(' '.join(map(str,a)))"}, "245": {"problem_id": 3245, "answer": "import re\nn=int(input())\na=[i for i in input().split()]\np=[i for i in input().split()]\nb=[]\nfor i in range(n):\n    b.append(a[i])\n    a[i]=re.sub(r'[^\\^]','',a[i][-1:])\n    a[i]=a[i][:-1]\nfor i in range(n):\n    print(b[i])"}, "246": {"problem_id": 3246, "answer": "s = input()\nn = int(input())\nd = {}\nfor i in range(n):\n    s = input()\n    d[s[:n]] = s[n:]\nprint(('\\n'.join(d.values())))"}, "247": {"problem_id": 3247, "answer": "import math\r\nMOD = 10**9+9\r\ns = input().split()\r\nn,m = int(s[0]),int(s[1])\r\nans = 1\r\nfor i in range(2,n+1):\r\n for j in range(3,m+1):\r\n  if i%2==0:\r\n   ans*=math.floor(i/2)\r\n  else:\r\n   ans*=math.floor(i/2)\r\nprint(ans%MOD)"}, "248": {"problem_id": 3248, "answer": "import sys\r\ninput = sys.stdin.readline\r\n\r\nn,l = map(int,input().split())\r\narr = list(input().split())\r\narr.sort()\r\nm = int(input())\r\nfor i in range(m):\r\n    p = input().rstrip('\\n')\r\n    print(len(set(p.split()))-1)"}, "249": {"problem_id": 3249, "answer": "import sys\nreadline = sys.stdin.readline\ninp = readline().split()\nn = int(inp[0])\nans = 0\nfor i in range(1, n+1):\n a = int(inp[i])\n b = int(inp[i-1])\n ans += abs(a-b)**0.5\nprint(ans)"}, "250": {"problem_id": 3250, "answer": ""}, "251": {"problem_id": 3251, "answer": "def main():\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    ans = []\n    for i in range(1, 1000000):\n        if l[i] == l[i - 1]:\n            ans.append(i)\n        else:\n            j = 1\n            while j < len(l) and l[j] == l[i - 1]:\n                j += 1\n            ans.append(i)\n    print(len(ans))\n    for i in ans:\n        print(i, end=' ')\nmain()"}, "252": {"problem_id": 3252, "answer": "import math\nn,k=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n    a,b,c=list(map(int,input().split()))\n    l.append((a,b,c))\nl.sort()\nc=0\nw=[0]*n\nfor i in range(n):\n    c+=math.ceil((l[i][0] - l[i][1])*q)\n    w[i]=c\nprint(w[-1])\n"}, "253": {"problem_id": 3253, "answer": "from collections import Counter\ns = int(input())\nfor i in range(s):\n a = [int(x) for x in input().split()]\n n = a[0]\n c = a[1]\n f = a[2]\n u = a[3]\n if n>0:\n  if c>0:\n   if f>0:\n    print(f+c)\n   else:\n    print(f)\n elif n<0:\n  if c>0:\n   if f>0:\n    print(f-c)\n   else:\n    print(f)\n else:\n  if c>0:\n   if f>0:\n    print(f+c)\n   else:\n    print(f)\n"}, "254": {"problem_id": 3254, "answer": "import sys\nimport math\ndef II(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef LI_(): return list(map(int, input().split()))\ndef SI(): return input()\ndef IS(): return input()\ndef I(): return int(input())\ndef cm(n, m): return (n * m) - (n + 1) * (m - 1)\ndef sec(n, m): return (n * m) * (n - m) + n * m * (m - n)\ndef nsec(n, m): return n * nsec(n - 1, m - 1) + min(ms(n, m), sec(n - 1, m - 1), sec(n - 1, m))\ndef mse(n, m): return sec(n, m) / 1000000.0\ndef lmt(n, m): return (n * m) * nsec(n, m)\ndef atan2(x): return (x - msec(n, m)) / (nsec(n, m) - m)\ndef msev(n, m): return sec(n, m) / 1000000.0 * 1000.0 / 1000.0\ndef lmtsec(n, m): return lmt(n, m) * sec(n, m)\ndef lmtat(n, m): return lmtsec(n, m) * atan2(m)\ndef lmtatsec(n, m): return lmtat(n, m) * atan2(n)\ndef lmtatatsec(n, m): return lmtatatsec(n, m) * atan2(n)\nsys.setrecursionlimit(1000000)\np=I()\nprint(*p,sep=\"\\n\")\n"}, "255": {"problem_id": 3255, "answer": "n,d,m,l=[int(i) for i in input().split()]\nl=sorted(l)\na=int(input())\nb=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a<b[i]:\n  c+=1\n elif a>b[i]<d:\n  c+=1\n else:\n  c-=1\nprint(c)"}, "256": {"problem_id": 3256, "answer": "import sys\ninput = sys.stdin.readline\nn,k=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\nm=sum(l)\nfor i in range(n):\n    if l[i]!=i+1:\n        m-=1\n    elif l[i]==i+1:\n        m+=1\nprint(m)\n"}, "257": {"problem_id": 3257, "answer": "import math\nt=int(input())\nfor i in range(t):\n a,b,c=list(map(float,input().split()))\n if a<b and b<c:\n  print(-1)\n elif a>b and b>c:\n  print(-1)\n elif a==b and b==c:\n  print(a**2)\n else:\n  d=math.sqrt(b**2-a**2)\n  if d<0:\n   print(-1)\n  else:\n   print(a**2+b**2-d*c)\n"}, "258": {"problem_id": 3258, "answer": "import math\nn = int(input())\nmice = list(map(int, input().split()))\nvelocity = 0.0\nfor i in range(n):\n    x, y, s = [int(i) for i in input().split()]\n    if y>0:\n        if abs(x)>abs(y):\n            velocity = math.sqrt((y**2+s**4)*mice[i])\n        elif abs(x)<abs(y):\n            velocity = y*mice[i]\n            \n    mice[i] = velocity\n    \nprint(\"%.2f\" % velocity)"}, "259": {"problem_id": 3259, "answer": "import sys\ndef main():\n    n, q = map(int, input().split())\n    for _ in range(q):\n        a, b = map(int, input().split())\n        if a == 1:\n            print(n//b)\n        else:\n            q -= 1\n            l, r = map(int, input().split())\n            ans = (2*a)%b\n            if l+1 < n:\n                ans += ((2*a)%b - l)%b\n            if r+1 < n:\n                ans += ((3*a)%b - r)%b\n            print(ans)\nmain()"}, "260": {"problem_id": 3260, "answer": "import sys\ninput=sys.stdin.readline\nn,k,p=list(map(int,input().split()))\nMOD=10**9+7\ndef isprime(x):\n    if x<1:return 0\n    if x%2==0:return 0\n    i = 3;k+=1\n    while(i<=x):\n        if(x%i == 0):return 0\n        i+=2\n    return 1\nwhile(k<n):\n    pow(2,k,p)\n    if isprime(pow(2,k,p)):\n        print(pow(2,k,p)%MOD)\n        k+=1\n    else:\n        print(0)\n        k+=1\n"}, "261": {"problem_id": 3261, "answer": "r,c = map(int,input().split())\nk=int(input())\nl=0\nfor i in range(k):\n l+=bin(i).count('1')\nprint(l)"}, "262": {"problem_id": 3262, "answer": "# cook your dish here\nfrom collections import defaultdict as dd\ndef solve(N, M, C, A):\n d = dd(int)\n for i in range(N):\n  d[i] += 1\n A.append((d[i], i))\n return len(A)\nfor _ in range(int(input())):\n N, M, C = map(int, input().split(\" \"))\n A = list(map(int, input().split(\" \")))\n J = defaultdict(int)\n for i in range(M):\n  u, v, w = map(int, input().split(\" \"))\n  J[u-1, v-1] = w\n B = solve(N, M, C, A)\n print(B)"}, "263": {"problem_id": 3263, "answer": "from operator import itemgetter\r\nn,m=map(int,input().split())\r\nl=list(map(int,input().split()))\r\np=l[0]\r\nr=l[1]\r\nfor i in range(2,n):\r\n    t=int(input())\r\n    if t<=m:\r\n        p=max(p,l[i])\r\n    else:\r\n        p=max(p,l[i-m]+p)\r\nprint(p)"}, "264": {"problem_id": 3264, "answer": "from math import ceil,sqrt\nn=int(input())\nif n%2==0:\n    print(0)\nelse:\n    a=n//2\n    b=n-a\n    c=int(sqrt(b))\n    d=ceil(b/2)\n    e=d*d\n    print(int(e%100000000000000))"}, "265": {"problem_id": 3265, "answer": "import bisect\nn,k=list(map(int,input().split()))\na=[[0]*n for i in range(n)]\nfor i in range(n):\n    a[i][i]=1\nwhile k!=1:\n    t=int(input())\n    if t<=k:\n        k=k-1\n        continue\n    c=0\n    for i in range(t,n):\n        c+=a[i][i]\n    a[t][i]=c\nans=[]\nfor i in range(n):\n    ans.append(i+1)\nprint(ans[0])\n"}, "266": {"problem_id": 3266, "answer": "import sys\ninput = sys.stdin.readline\n\nn,f,m=list(map(int,input().split()))\nedges=[0]*5001\nfor i in range(n):\n    x,y,z=list(map(int,input().split()))\n    edges[i]=x*y+z\n    edges[i+1]=min(edges[i],x*y+z)\n    \ns=[0]*n\nt=[0]*n\nfor i in range(1,5001):\n    s[i]=max(s[i-1],edges[i])\n    t[i]=min(t[i-1],edges[i])\n\nprint(n,2**f,m)\nfor i in range(3):\n    print(s[i],t[i],i+1)\n"}, "267": {"problem_id": 3267, "answer": "from collections import deque\nr,c = map(int,input().split())\nchessKings = []\nfor i in range(r):\n    chessKings.append(input())\nchessKings.sort()\nres = 0\nd = deque()\nfor i in range(r):\n    d.append(i)\n    cnt = 0\n    while d[i]!=i:\n        cnt+=1\n        d.popleft()\n    if cnt==2:\n        res+=1\n        cnt=0\n    else:\n        res+=2\n    print(res,chessKings[i])"}, "268": {"problem_id": 3268, "answer": ""}, "269": {"problem_id": 3269, "answer": "a=int(input())\nb=int(input())\nif a==1:\n    print(0)\nelif b==1:\n    print(0)\nelse:\n    d=a%10\n    e=b%10\n    if d==0:\n        print(e)\n    else:\n        print((d+e)%1000000007)\n"}, "270": {"problem_id": 3270, "answer": "# cook your dish here\nimport sys\nreadline = sys.stdin.readline\ntry:\n    for _ in range(int(readline())):\n        n = int(readline())\n        d = dict(list(map(int, line.split())))\n        #print(d)\n        if d['CAT'] < d['GAS']:\n            print('-1')\n            quit()\n        elif d['CAT'] < d['CAR']:\n            print('-1')\n            quit()\n        elif d['CAT'] < d['WAS']:\n            print('-1')\n            quit()\n        else:\n            print('0')\n            quit()\nexcept EOFError:\n    pass"}, "271": {"problem_id": 3271, "answer": "from math import factorial\nn,c=map(int,input().split())\nans=0\nfor i in range(1,n+1):\n ans+=factorial(c)//i\nprint(ans)"}, "272": {"problem_id": 3272, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\nt=[[0]*n for i in range(n)]\nfor i in range(n):\n    s=input().rstrip()\n    t[i]=s.count('V')\n    t[i][0]+=1\n    t[i][1]+=1\n    t[i][2]-=1\n    t[i][3]+=1\n    t[i][4]-=1\n    t[i][5]+=1\n    t[i][6]+=1\n    t[i][7]+=1\n    t[i][8]+=1\n    t[i][9]+=1\n    t[i][10]+=1\n    t[i][11]+=1\n    t[i][12]+=1\n    t[i][13]+=1\n    t[i][14]+=1\n    t[i][15]+=1\n    t[i][16]+=1\n    t[i][17]+=1\n    t[i][18]+=1\n    t[i][19]+=1\n    t[i][20]+=1\n    t[i][21]+=1\n    t[i][22]+=1\n    t[i][23]+=1\n    t[i][24]+=1\n    t[i][25]+=1\n    t[i][26]+=1\n    t[i][27]+=1\n    t[i][28]+=1\n    t[i][29]+=1\n    t[i][30]+=1\n    t[i][31]+=1\n    t[i][32]+=1\n    t[i][33]+=1\n    t[i][34]+=1\n    t[i][35]+=1\n    t[i][36]+=1\n    t[i][37]+=1\n    t[i][38]+=1\n    t[i][39]+=1\n    t[i][40]+=1\n    t[i][41]+=1\n    t[i][42]+=1\n    t[i][43]+=1\n    t[i][44]+=1\n    t[i][45]+=1\n    t[i][46]+=1\n    t[i][47]+=1\n    t[i][48]+=1\n    t[i][49]+=1\n    t[i][50]+=1\n    t[i][51]+=1\n    t[i][52]+=1\n    t[i][53]+=1\n    t[i][54]+=1\n    t[i][55]+=1\n    t[i][56]+=1\n    t[i][57]+=1\n    t[i][58]+=1\n    t[i][59]+=1\n    t[i][60]+=1\n    t[i][61]+=1\n    t[i][62]+=1\n    t[i][63]+=1\n    t[i][64]+=1\n    t[i][65]+=1\n    t[i][66]+=1\n    t[i][67]+=1\n    t[i][68]+=1\n    t[i][69]+=1\n    t[i][70]+=1\n    t[i][71]+=1\n    t[i][72]+=1\n    t[i][73]+=1\n    t[i][74]+=1\n    t[i][75]+=1\n    t[i][76]+=1\n    t[i][77]+=1\n    t[i][78]+="}, "273": {"problem_id": 3273, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nfragments = []\nfor i in range(n):\n fragments.append(input().rstrip())\n\nans = 0\nflag = False\nfor fragment in fragments:\n if flag:\n  ans += 1\n  flag = False\n else:\n  i = 0\n  while i + len(fragments[i]) <= len(fragments[i]):\n   if fragments[i][i + len(fragments[i])] == fragment:\n    ans += 1\n   i += 1\n  print(ans)\n"}, "274": {"problem_id": 3274, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\ns = set()\nfor i in range(m):\n    x1, y1, x2, y2 = map(int, input().split())\n    s.add((x1, y1))\n    s.add((x2, y2))\n\nans = []\nfor i in range(n):\n    x1, y1, x2, y2 = map(int, input().split())\n    if 0 <= x1 < n and 0 <= y1 < n and (x1, y1) in s and (x2, y2) in s:\n        ans.append('-' + str((x1 + 1) // 2))\n        ans.append('0+' + str((x2 + 1) // 2))\n    elif 0 <= x1 < n and 0 <= y1 < n and (x1, y1) not in s and (x2, y2) not in s:\n        ans.append('impossible')\n        break\nprint(''.join(ans))"}, "275": {"problem_id": 3275, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nn,c=map(int,input().split())\nl=list(map(int,input().split()))\nl.sort()\nq=int(input())\nfor i in range(q):\n    a,b,c=map(int,input().split())\n    a-=1\n    b-=1\n    if c>=min(a,b):\n        print((2*c-a-b))%(10**7)\n    else:\n        print((2*c-a))%(10**7)\n    "}, "276": {"problem_id": 3276, "answer": "import math\nn,m=map(int,input().split())\ngrid=[[0 for i in range(n)] for j in range(m)]\nfor i in range(n):\n s=input()\n grid[i][0]=s[0]\n grid[i][1]=s[1]\nfor i in range(1,m):\n for j in range(n):\n  grid[i][j]=(grid[i-1][j]+grid[i-1][j+1]+grid[i+1][j])%2\nprint(\"YES\" if grid[n-1][n-1]==2 else \"NO\")"}, "277": {"problem_id": 3277, "answer": "import sys,math\ndef II():\n return int(input())\ndef LI():\n return list(map(int,input().split()))\ndef LIR(n):\n return [int(i) for i in input().split()]\ndef LI2():\n return list(map(int,input().split()))\ndef LLI(n):\n return [int(i)-1 for i in input().split()]\nsys.setrecursionlimit(1000000)\ninput=sys.stdin.readline\ninp=LI()\ns=0\nfor i in range(1,100001):\n s+=i\n n=len(inp)\n if n%2==1:\n  print(s)\n else:\n  for i in range(n):\n   inp[i]=s\n   s+=1\n  print(s)\n"}, "278": {"problem_id": 3278, "answer": "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n \ndef MI():\n\treturn map(int,sys.stdin.readline().split())\n \ndef LI():\n\treturn list(map(int,sys.stdin.readline().split()))\n \ndef SI():\n\treturn sys.stdin.readline().rstrip()\nn=II()\na=[0]*40\nfor i in range(1,40):\n\ta[i]=int(SI(),2)\nprint(*a,sep=' ')\n"}, "279": {"problem_id": 3279, "answer": "import numpy as np\nn=int(input())\narr=np.array([[0]*n for i in range(n)])\nfor i in range(n):\n if(int(input())!=0):\n  arr[i][i]=1\n else:\n  arr[i][i]=0\nmark=[]\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark.append(0)\nmark."}, "280": {"problem_id": 3280, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k=list(map(int,input().split()))\nd=[[0]*(k+1) for i in range(n)]\nfor i in range(1,n+1):\n    d[i][i]=1\nfor i in range(1,n+1):\n    for j in range(i+1,n+1):\n        d[i][j]+=d[i-1][j-1]\nans=0\nfor i in range(1,n+1):\n    ans+=d[i][i]\nprint(ans)\n"}, "281": {"problem_id": 3281, "answer": "import math\ndef dist(a,b):\n return abs(a-b)\ndef dijkstra(s,d):\n n = len(s)\n dist = [math.inf]*n\n dist[s] = 0\n dist[s+1] = 0\n for i in range(n-2, -1, -1):\n  dist[i] = min(dist[i+2], dist[i+1] + dist[s])\n for i in range(n):\n  if dist[i] < d:\n   continue\n  j = i\n  while j < n:\n   dist[j] = min(dist[j], dist[i] + dist[s])\n   j += 1\n return dist\ndef cal_dist(s,d):\n a = dist(s,d)\n b = dist(s+1,d)\n return a-b, a, b\ndef cal_dist_rev(s,d):\n a = dist(s+1,d)\n b = dist(s,d-1)\n return a-b, a, b\ndef cal_dist_rev_rev(s,d):\n a = dist(s+1,d-1)\n b = dist(s,d+1)\n return a-b, a, b\ndef cal_dist(s,d):\n a = dist(s,d)\n return a\ndef cal_dist_rev(s,d):\n a = dist(s+1,d)\n b = dist(s,d-1)\n return a-b, a, b\ndef cal_dist_rev_rev(s,d):\n a = dist(s+1,d-1)\n b = dist(s,d+1)\n return a-b, a, b\nt = int(input())\nwhile t:\n t -= 1\n s,d = map(int,input().split())\n print(cal_dist(s,d))\n"}, "282": {"problem_id": 3282, "answer": "def main():\n    n = int(input())\n    l = list(map(int, str(input()).split(' ')))\n    l.sort(reverse=True)\n    print(len(l))\n    if n==1:\n        print(1)\n    elif n==2:\n        print(2)\n    else:\n        for i in range(2, n):\n            l1 = [int(i) for i in l]\n            l2 = [int(i) for i in l]\n            l1.sort()\n            l2.sort()\n            s1 = ''.join(map(str, l1))\n            s2 = ''.join(map(str, l2))\n            if s1==s2:\n                print(n-1)\n            else:\n                print(n)\nmain()"}, "283": {"problem_id": 3283, "answer": "import bisect\nn,d,r=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n    l.append(bisect.bisect_right(l,max(l)))\nl.sort()\nprint(\"%.5f\"%(l[-1]+l[0]))\n"}, "284": {"problem_id": 3284, "answer": "import sys\na,b,c,d = list(map(int,sys.stdin.readline().split()))\nres = 0\nwhile a!=1 and b!=1:\n a,b = b,a%b\n c,d = d,c%d\n while a!=1:\n  a,b = b,a%b\n  c,d = d,c%d\n res += (c<d) + (b<a)\n sys.stdout.write(str(res))"}, "285": {"problem_id": 3285, "answer": "import math\nr=int(input())\nm=int(input())\ndef isPrime(n):\n if n<2:\n  return False\n elif n==2:\n  return True\n else:\n  for i in range(3,int(math.sqrt(n))+1,2):\n   if n%i==0:\n    return False\n  return True\nfor i in range(m):\n if isPrime(i):\n  print(i)\n else:\n  count=0\n  for j in range(m):\n   if i%j==0:\n    count+=1\n   else:\n    break\n  if count>0:\n   print(i-1)\n  else:\n   print(i)"}, "286": {"problem_id": 3286, "answer": "from collections import Counter\ndef f(s):\n    c=Counter(s)\n    return sum(v*(v-1)//2 for v in c.values())%1000009\nf(input())\n"}, "287": {"problem_id": 3287, "answer": "k = int(input())\na = list(map(int, input().split()))\nb = [0] * k\nc = 0\nfor i in range(k):\n  b[i] = a[i] + b[i]\nmod = 10**9 + 7\nfor i in range(k):\n  c = (c + b[i]) % mod\nprint(c)"}, "288": {"problem_id": 3288, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    k, n = map(int, input().split())\n    if k == 1:\n        print('zyz')\n    elif k == 2:\n        print('abc')\n    elif k == 3:\n        print('ababac')\n    elif k == 4:\n        print('ababad')\n    elif k == 5:\n        print('ababay')\n    elif k == 6:\n        print('ababaz')\n    elif k == 7:\n        print('acacad')\n    elif k == 8:\n        print('adadca')\n    elif k == 9:\n        print('cdcdcba')\n    elif k == 10:\n        print('dcdddca')\n    elif k == 11:\n        print('cabacdc')\n    elif k == 12:\n        print('babaaddd')\n    elif k == 13:\n        print('babaazaz')\n    elif k == 14:\n        print('cdcdcdcba')\n    elif k == 15:\n        print('dddddddcba')\n    elif k == 16:\n        print('cccccccdcdc')\n    elif k == 17:\n        print('dadaabaecea')\n    elif k == 18:\n        print('dadaabcdefghijklmnopqrstuvwxyz')\n    elif k == 19:\n        print('dadaeyycdefg')\n    elif k == 20:\n        print('dadaasdfghjklmnoopqrst')\n    elif k == 21:\n        print('dadaaklsnrpvwxyz')\n    elif k == 22:\n        print('dadaayzcorjkefxo')\n    elif k == 23:\n        print('dadaevlesjklmdnopqrstu')\n    elif k == 24:\n        print('dadaekremsjklmnopqrstu')\n    elif k == 25:\n        print('dadaedlekslnrpnqrsstu')\n    elif k == 26:\n        print('dadaemlkdnrhpnqrsstu')\n    else:\n        print(-1)\n\nmain()"}, "289": {"problem_id": 3289, "answer": "from collections import defaultdict\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=defaultdict(int)\nfor i in range(n):\n    c[a[i]]+=1\ns=sum(a)\nt=sum(b)\nans=[]\nfor i in range(1,2000000):\n    if c[i]:\n        ans.append(i)\ncluster=[]\nfor i in range(len(ans)):\n    if c[ans[i]]==1:\n        cluster.append(ans[i])\nans.sort(key=lambda x:x[1],reverse=True)\nfor i in range(len(cluster)):\n    if cluster[i]==max(cluster):\n        cluster.pop()\n        break\nprint(len(cluster))"}, "290": {"problem_id": 3290, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nn,e,d = list(map(int,read().split()))\nm = list(map(int,read().split()))\nhand = [0]*n\ndef find(x):\n    nonlocal hand\n    if x == 0:\n        return 0\n    elif x == hand[-1]:\n        return find(hand[-1])\n    else:\n        return find(hand[x])\n\ndef merge(x,y):\n    nonlocal hand\n    x_idx = find(x)\n    y_idx = find(y)\n    if x_idx!= y_idx:\n        hand[x_idx] = y_idx\n        return 1\n    else:\n        hand[y_idx] = x_idx\n        return 1\n\ndef perform(k):\n    nonlocal hand\n    if k == 0:\n        return 0\n    elif k == hand[-1]:\n        return 1\n    else:\n        return perform(hand[k])\n\ndic = {}\nfor i in range(n):\n    dic[i] = m[i]\n\nfor i in range(len(hand)):\n    if hand[i] not in dic:\n        dic[hand[i]] = perform(i)\n\nprint(find(0))"}, "291": {"problem_id": 3291, "answer": "import sys\ninput = sys.stdin.readline\na,b,c,d=-1,0,1,2\nif a+b>10**9+3:\n    print('-1')\n    return\nd=abs(c-d)\nans=[]\nfor i in range(1,200):\n    ans.append([-2,i])\n    ans.append([-1,i-1])\nif d>0:\n    print('-2')\n    return\nfor i in range(1,200):\n    l,r=ans[i]\n    if l>=0 and r>=0:\n        l%=a\n        r%=b\n        ans[i]=(l,r)\nsys.stdout.write(' '.join([str(i) for i in ans]))"}, "292": {"problem_id": 3292, "answer": "from collections import Counter\r\nn = int(input())\r\nletters = \"abcdefghijklmnopqrstuvwxyz\"\r\nC = Counter(letters)\r\nd = [0]*(3*n+2)\r\nfor i in range(n):\r\n    d[i+1] = letters.index(input())\r\n    d[i+2] = letters.index(input())\r\nprint(d[n].bit_length()//2)"}, "293": {"problem_id": 3293, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    l.sort()\n    m = l[0]\n    s = l[-1]\n    p = l[-2]\n    for i in range(1, n):\n        if l[i]!= m:\n            m = l[i]\n            s = i\n        elif l[i] == m:\n            solve()\n        else:\n            p = max(p, l[i])\n            s = min(s, l[i])\n    print(m + s)\n\nt = int(input())\nfor _ in range(t):\n    solve()"}, "294": {"problem_id": 3294, "answer": "import numpy as np\nn = int(input())\nl = [list(map(int, input().split())) for i in range(n)]\nl.append([0, 0])\nm = np.array(l[0])\nh = np.array(l[1])\np = np.zeros(n, dtype=int)\nfor i in range(1, n):\n p[i] = m[i]\nfor i in range(n - 1):\n x, y = l[i]\n y = y[1:] + y[:-1]\n x = x[1:] + x[:-1]\n m[i] = float('inf')\n \n H = 10 ** 10\n for i in range(n):\n  H = min(H, m[i] + p[i])\n  p[i] = H\n \nprint(m/H)"}, "295": {"problem_id": 3295, "answer": "import bisect as b\nq = int(input())\nk,l,m = [int(i) for i in input().split()]\nk -= 2\nl -= 1\nans = [0]*k\nfor i in range(1,k):\n    if l < m:\n        ans[i] = i\n    elif l == m:\n        ans[i] = min(ans[i-k],k)\n    else:\n        ans[i] = min(ans[i-k],l-ans[i])\nq = int(input())\nfor _ in range(q):\n    k,l,m = [int(i) for i in input().split()]\n    print(ans[k-1])"}, "296": {"problem_id": 3296, "answer": "import sys,bisect\ninput=sys.stdin.readline\nsys.setrecursionlimit(10**9)\nINF=float(\"inf\")\nMOD=pow(10,9)+1\n\n\nn,k=list(map(int,input().split()))\ninv=[1]*(n+1)\nfor i in range(1,n+1):\n    inv[i]=inv[i-1]*i\ninv[0]=0\np=MOD\nfor i in range(n+1):\n    p=p%MOD\n    if p==0:\n        inv[i]=(inv[i]*inv[i])%MOD\nprint(inv[k])"}, "297": {"problem_id": 3297, "answer": "def solve(s,n):\n    s=sorted(s)\n    if len(s)==n:\n        return ''.join(s)\n    elif s[n]=='0':\n        return 'impossible'\n    else:\n        for i in range(10):\n            if s[n].islower():\n                s[n]=s[n].lower()\n                solve(s,n+1)\n                break\n        else:\n            return 'impossible'\n        \nfor _ in range(int(input())):\n    s=input()\n    print(solve(s,len(s)))"}, "298": {"problem_id": 3298, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+9\ninp = readline().strip()\nn = int(inp)\na = sorted(inp)\nprint(sum([i*(a.count(i)-a.count(j)) for i in range(n)])%MOD)"}, "299": {"problem_id": 3299, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint = stdout.write\nl=[0]*100001\nr=[0]*100001\nfor i in range(int(input())):\n    n,m=map(int,input().split())\n    l[n-1]=l[n-1]+list(map(int,input().split()))\n    r[m-1]=r[m-1]+list(map(int,input().split()))\ncheckerboard=[0]*100001\nfor i in range(100001):\n    checkerboard[i]=l[i]^r[i]\ns=0\nfor i in range(100001):\n    s+=checkerboard[i]\n    if s>=m:\n        break\nprint(s)"}, "300": {"problem_id": 3300, "answer": "from math import *\nn = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\nb = 0.0\nfor i in range(n):\n    b += a[i][0]\n    a[i] = sorted(a[i], reverse=True)\nc = 0.0\nfor i in range(n):\n    c += a[i][1]\n    a[i] = sorted(a[i], reverse=True)\nprint(b - c)\n"}, "301": {"problem_id": 3301, "answer": "import sys\r\n\r\ndef main():\r\n    n, p, x, y = list(map(int, input().split()))\r\n    xc = [0] * 100001\r\n    yc = [0] * 100001\r\n    for i in range(p):\r\n        a, b, c = list(map(int, input().split()))\r\n        xc[a] += 1\r\n        yc[b] += 1\r\n        xc[b] -= 1\r\n        yc[a] -= 1\r\n    print(min(xc[x], yc[y]))\r\n\r\n    sys.stdin = open(\"input.txt\", \"r\")\r\n    sys.setrecursionlimit(10**9)\r\n    main()\r\n\r\ndef __starting_point():\r\n    main()\n__starting_point()"}, "302": {"problem_id": 3302, "answer": "n,p=map(int,input().split())\np=[i for i in range(n)]\npalette=set(p)\nl=[]\nfor i in range(n):\n    l.append(0)\n    l[i]=1\nfor i in range(1,n):\n    for j in range(i<<1,n+1,i):\n        l[j]+=l[i]\n        if l[j]==palette:\n            break\nif l:\n    print(*l)\nelse:\n    print(\"impossible\")"}, "303": {"problem_id": 3303, "answer": "import sys\ninput = sys.stdin.readline\n\ndef add(a, b):\n if int(a)>int(b):\n  a+=1\n elif int(b)>int(a):\n  b-=1\n return b\n\ndef sub(a, b):\n if int(a)>int(b):\n  a-=1\n return a\n\ns=input().strip()\nn=int(s)\nprint(n+add(n,sub(n,n)))"}, "304": {"problem_id": 3304, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef solve():\n n = int(readline())\n a = list(map(int, readline().split()))\n p = list(map(int, readline().split()))\n v = list(map(int, readline().split()))\n \n d = [0]*n\n for i in range(n):\n  d[a[i]] += 1\n  \n ans = 0\n for i in range(1, n+1):\n  if d[i] == i:\n   ans += 1\n   continue\n  \n  x = min(d[i], i)\n  d[i] += x\n  ans += x - i\n  \n print(ans)\n \nt = solve()\nprint(t)\n"}, "305": {"problem_id": 3305, "answer": "import sys\ninput = sys.stdin.readline\n\nN,Q=list(map(int,input().split()))\ns=input()\nL=[0]*N\nR=[0]*N\nfor i in range(N):\n    L[i],R[i]=list(map(int,input().split()))\n\n#print(L)\n#print(R)\n\ncnt=0\nfor i in range(Q):\n    l,r=list(map(int,input().split()))\n    if l%2!=0:\n        cnt+=len(s[l//2])\n    elif r%2!=0:\n        cnt+=len(s[r//2])\n    else:\n        cnt+=len(s[l//2])\n    print(cnt)\n"}, "306": {"problem_id": 3306, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\nn,m=list(map(int,input().split()))\narr=[]\nfor i in range(n):\n    arr.append(int(input().split()[1]))\narr.sort()\ncnt=0\nfor i in range(m):\n    if arr[i]!=i+1:\n        cnt+=1\nprint(cnt)\n"}, "307": {"problem_id": 3307, "answer": "import sys\ninput = sys.stdin.readline\n\ndef disjoint(a, b):\n    a[0] ^= 1\n    a[1] ^= 1\n    return a\n\ndef union(a, b):\n    a[0] ^= 1\n    a[1] ^= 1\n    return a\n\nn = int(input())\na = [list(map(int, input().split())) for i in range(n)]\ncan = [list(map(int, input().split())) for i in range(n)]\n\nc1 = union(a, can)\nc2 = disjoint(can, c1)\nprint(c2[0] + c2[1])\n"}, "308": {"problem_id": 3308, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nr = [tuple(map(int, input().split())) for _ in range(n)]\n\ndef isClosed(p1, p2):\n    return (p1[0]-p2[0])**2 + (p1[1]-p2[1])**2 < ((p1[0]!=p2[0] and p1[1]!=p2[1]) or\n            abs(p1[0]-p2[0])**2 + abs(p1[1]-p2[1])**2)**0.5\n\nwalls = [0]*n\nfor i in range(n):\n    walls[i] = 8*r[i][0] + r[i][1]\n\nprint(walls[n-1]/2)"}, "309": {"problem_id": 3309, "answer": "import sys\ninput = sys.stdin.readline\nn,k,c = map(int,input().split())\na = list(map(int,input().split()))\nd = [0]*n\nfor i in range(1,n):\n    d[i] = d[i-1] + 1\nans = k*(n-1) + sum(c)\nprint(ans)"}, "310": {"problem_id": 3310, "answer": "import sys\nreadline = sys.stdin.readline\n\nn,g,t=list(map(int,readline().split()))\nc=list(map(int,readline().split()))\nans=0\nfor i in range(n):\n    ans+=c[i]*(g-1+i)\nprint(ans)\n"}, "311": {"problem_id": 3311, "answer": "import math\ndef fac(n):\n    res=1\n    for i in range(2,int(math.sqrt(n))+1):\n        res*=(n-i)\n        res%=i\n    return res\nn,m=map(int,input().split())\nprint(fac(n)%m)"}, "312": {"problem_id": 3312, "answer": "import bisect as b\nimport heapq as hq\nimport math\nimport os\nimport random\nimport sys\nfrom collections import Counter, defaultdict, deque\nfrom itertools import combinations, permutations, product, combinations_with_replacement\nfrom fractions import Fraction\nfrom datetime import datetime\nfrom operator import itemgetter\nfrom functools import reduce,cmp_to_key\n\nsys.setrecursionlimit(10000)\nINF = 10 ** 20\nMOD = 10 ** 9 + 7\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_int_n():\n    return list(map(int, input().split()))\n\n\ndef read_float():\n    return float(input())\n\n\ndef read_float_n():\n    return list(map(float, input().split()))\n\n\ndef read_str():\n    return input().strip()\n\n\ndef read_str_n():\n    return list(map(str, input().split()))\n\n\ndef ceil(x):\n    return int(log2(x))\n\n\ndef clamp(x, min, max):\n    return x if x < min else min if x > max else max\n\n\ndef pow(x, y, MOD):\n    return 1 if x == 0 else pow(x, MOD - 2, MOD)\n\n\ndef get_factors(x):\n    factors = []\n    while x > 1:\n        if x % 2:\n            x //= 2\n        else:\n            x //= 2\n            factors.append(2)\n            x //= 2\n    if x:\n        factors.append(x)\n    return factors\n\n\ndef is_prime(n):\n    if n < 2:\n        return False\n    if n == 3:\n        return True\n\n    for x in range(3, int(math.sqrt(n) + 1), 2):\n        if n % x == 0:\n            return False\n\n    return True\n\n\nn, e, s1, s2 = read_int_n()\ng = defaultdict(list)\nfor i in range(n):\n    for j in range(n):\n        g[i].append((j, i))\n        g[j].append((i, j))\ncan = []\ncnt = 0\nhq.heapify(can)\nwhile cnt < e:\n    x, y, t = hq.heappop(can)\n    if t > cnt:\n        break\n    cnt += 1\n    can.pop(0)\n    y -= 1\n    x -= 1\n    if x < 0:\n        x += n\n        can.append([y, x])\n    elif x > n:\n        x -= n\n        can.append([y, x])\n    else:\n        can.append([y, x])\nprint(sum(get_factors(x) for x in can))"}, "313": {"problem_id": 3313, "answer": "from sys import stdin, stdout\nfrom math import ceil, gcd, fabs, sqrt, inf\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom itertools import combinations as comb, permutations as perm\nfrom functools import reduce\nfrom fractions import Fraction\nfrom decimal import ROUND_HALF_UP, ROUND_HALF_EVEN as R\nfrom datetime import datetime\nfrom io import BytesIO, IOBase\n\ndef I(): return bytes(stdin.readline())\n\n\ndef main():\n    n, r, w, h = I()\n    for _ in range(n):\n        x, y = I()\n        hgem = [x, y]\n        hgem.append(h)\n        hgem.append(0)\n        hgem.append(int(ceil(sqrt(w * h)) / r))\n        hgem.append(h)\n        hgem.append(int(ceil(sqrt(w * h) / r)))\n        hgem.append(h)\n        hgem.append(0)\n        hgem.append(int(ceil(sqrt(w * h) / r)))\n        hgem.append(h)\n        hgem.append(0)\n        hgem.append(int(ceil(sqrt(w * h) / r)))\n        hgem.append(h)\n        hgem.append(0)\n        hgem.append(int(ceil(sqrt(w * h) / r)))\n        hgem.append(h)\n        hgem.append(0)\n        hgem.append(int(ceil(sqrt(w * h) / r)))\n        hgem.append(h)\n        hgem.append(0)\n        hgem.append(int(ceil(sqrt(w * h) / r)))\n        hgem.append(h)\n        hgem.append(0)\n        hgem.append(int(ceil(sqrt(w * h) / r)))\n        hgem.append(h)\n        hgem.append(0)\n        hgem.append(int(ceil(sqrt(w * h) / r)))\n        hgem.append(h)\n        hgem.append(0)\n        hgem.append(int(ceil(sqrt(w * h) / r)))\n        hgem.append(h)\n        hgem.append(0)\n        hgem.append(int(ceil(sqrt(w * h) / r)))\n        hgem.append(h)\n        hgem.append(0)\n        hgem.append(int(ceil(sqrt(w * h) / r)))\n        hgem.append(h)\n        hgem.append(0)\n        hgem.append(int(ceil(sqrt(w * h) / r)))\n        hgem.append(h)\n        hgem.append(0)\n        hgem.append(int(ceil(sqrt(w * h) / r)))\n     "}, "314": {"problem_id": 3314, "answer": "# cook your dish here\nfrom collections import deque\ns=input()\na=s.count('A')\nb=s.count('B')\nc=s.count('C')\nif a!=0 or b!=0 or c!=0:\n    print('2')\nelse:\n    q=deque([])\n    q.append(a)\n    q.append(b)\n    q.append(c)\n    while len(q)>3:\n        a=q.pop()\n        b=q.pop()\n        c=q.pop()\n        q.extend([a,b,c])\n    print(len(q))"}, "315": {"problem_id": 3315, "answer": "import sys\nn = int(sys.stdin.readline())\na = [0]*26\nfor i in range(n):\n    a[ord(i)-97] += 1\nprint(a[n-1])"}, "316": {"problem_id": 3316, "answer": "m = int(input())\nn = int(input())\nt = int(input())\np = int(input())\nl = [0]*n\nfor i in range(n):\n l[i] += 1\nans = 0\nfor i in range(1,100):\n ans += (l[i]*(l[i]-1))/2\n if ans>m:\n  break\nfor i in range(m):\n print(ans/p)"}, "317": {"problem_id": 3317, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = readline().rstrip()\nn = len(t)\nd = {}\nfor i in range(n):\n    d[t[i]] = i\n\nq = int(readline())\nfor _ in range(q):\n    i, j = list(map(int, readline().split()))\n    if i not in d:\n        d[i] = j\n    else:\n        d[i] = max(d[i], j - i)\n    print(d[i] + 1)"}, "318": {"problem_id": 3318, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\nn,d=[int(i) for i in input().split()]\nl=[0]*(n+1)\nfor i in range(1,n+1):\n    l[i]=i+1\nmark=[0]*(n+1)\nfor i in range(1,n+1):\n    if l[i]==i+1:\n        mark[i]=mark[i-1]+1\n    else:\n        mark[i]=0\nprint(max(mark))"}, "319": {"problem_id": 3319, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, x, y, z, v = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append((m, i, x, y, z, v))\n\nb = []\nfor i in range(n):\n    b.append((a[i][0], i, a[i][1], a[i][2], a[i][3], a[i][4]))\n\nc = []\nfor i in range(1, n):\n    c.append((a[0][i], 0, a[0][i] + a[1][i], a[0][i] + a[2][i], a[0][i] + a[3][i]))\n\nd = []\nfor i in range(1, n):\n    d.append((a[i][0], 0, a[i][0] + a[i][i%4], a[i][0] + a[i][i%4], a[i][0] + a[i][i%4]))\n\ne = []\nfor i in range(1, n):\n    e.append((a[0][i], 0, a[0][i] + a[i][i%4], a[0][i] + a[i][i%4] + a[i][i%4]))\n\nprint(len(set([i for i in range(n) if i!= 0]) - set([i for i in range(n) if i!= n])))\nprint(*e, sep='\\n')\n"}, "320": {"problem_id": 3320, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\na,b,w=list(map(int,input().split()))\nq=int(input())\nfor _ in range(q):\n s,t=list(map(int,input().split()))\n s-=1\n t-=1\n cnt=0\n for i in range(m):\n  a,b,w=list(map(int,input().split()))\n  a-=1\n  b-=1\n  cnt|=w.bit_length()\n  s-=1\n  t-=1\n print(cnt|(s&t))\n"}, "321": {"problem_id": 3321, "answer": "n = int(input())\ns = input().split()\ns = list(map(int,s))\nr = input().split()\nr = list(map(int,r))\nans = []\nfor i in range(n):\n    ans.append(r[i])\nprint(' '.join(map(str,ans)))"}, "322": {"problem_id": 3322, "answer": "import sys\r\ndef I():\r\n\treturn sys.stdin.readline().rstrip()\r\n\r\ndef main():\r\n\tn, m, k = I()\r\n\ta, p, b, q = I()\r\n\td = [[30, 2, 70, 3, 10, 0]]\r\n\tans = []\r\n\tfor i in range(n):\r\n\t\td.append([a, p, b, q])\r\n\t\ta -= 1\r\n\t\tp += 1\r\n\t\tb -= 1\r\n\t\tq += 1\r\n\tans.append(sum(d[a][p:q+1]))\r\n\tprint(ans[-1])\r\n\r\n\tmain()\r\n\r\ndef __starting_point():\r\n\tmain()\n__starting_point()"}, "323": {"problem_id": 3323, "answer": "import numpy as np\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=np.array(list(map(int,input().split())))\n    a=a.reshape(3,1)\n    b=np.array(list(map(int,input().split())))\n    b=b.reshape(3,1)\n    c=np.array(list(map(int,input().split())))\n    c=c.reshape(3,1)\n    ans=0\n    for i in range(n-1):\n        ans+=a[i]*b[i]*c[i]\n    print(ans)"}, "324": {"problem_id": 3324, "answer": ""}, "325": {"problem_id": 3325, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n n = int(readline())\n d, l = list(map(int, readline().split()))\n \n tank = [[0]*(l+1) for _ in range(n)]\n tank[0][0] = d\n for i in range(1, n):\n  x, y = list(map(int, readline().split()))\n  tank[i][0] = max(y, tank[i-1][0])\n  tank[i][x] = max(y, tank[i-1][x])\n \n tank[n-1][0] = d\n for i in range(1, n):\n  x, y = list(map(int, readline().split()))\n  tank[i][0] = min(y, tank[i-1][0])\n  tank[i][x] = min(y, tank[i-1][x])\n \n tank[0][0] = d\n for i in range(1, n):\n  x, y = list(map(int, readline().split()))\n  tank[i][0] = min(y, tank[i-1][0])\n  tank[i][x] = max(y, tank[i-1][x])\n \n tank[n-1][0] = d\n for i in range(1, n):\n  x, y = list(map(int, readline().split()))\n  tank[i][0] = min(y, tank[i-1][0])\n  tank[i][x] = max(y, tank[i-1][x])\n \n tank[0][0] = d\n for i in range(1, n):\n  x, y = list(map(int, readline().split()))\n  tank[i][0] = min(y, tank[i-1][0])\n  tank[i][x] = max(y, tank[i-1][x])\n \n tank[n-1][0] = d\n for i in range(1, n):\n  x, y = list(map(int, readline().split()))\n  tank[i][0] = min(y, tank[i-1][0])\n  tank[i][x] = max(y, tank[i-1][x])\n \n tank[0][0] = d\n for i in range(1, n):\n  x, y = list(map(int, readline().split()))\n  tank[i][0] = min(y, tank[i-1][0])\n  tank[i][x] = max(y, tank[i-1][x])\n \n tank[n-1][0] = d\n for i in range(1, n):\n  x, y = list(map(int, readline().split()))\n  tank[i][0] = min(y, tank[i-1][0])\n  tank[i][x] = max(y, tank[i-1][x])\n \n tank[0][0] = d\n for i in range(1, n):\n  x, y = list(map(int, readline().split()))\n  tank[i][0] = min(y, tank[i-1][0])\n  tank[i][x] = max(y, tank[i-1][x])\n \n tank[n-1][0] = d\n for i in range(1, n):\n  x, y = list(map(int, readline().split()))\n  tank[i][0] = min(y, tank[i-1][0])\n  tank[i][x] = max(y, tank[i-1][x])\n \n tank[0][0] = d\n for i in range(1, n):\n  x, y = list(map(int, readline().split()))\n  tank[i][0] = min(y, tank[i-1][0])\n  tank[i][x] = max(y, tank[i-1][x])\n \n tank[n-1][0] = d\n for i in range(1, n):\n  x, y = list(map(int, readline().split()))\n  tank[i][0] = min(y, tank[i-1][0"}, "326": {"problem_id": 3326, "answer": "import sys\ninput = sys.stdin.readline\n\nr,c=list(map(int,input().split()))\nA=[[0]*r for i in range(c)]\nfor i in range(r):\n    x=list(map(int,input().split()))\n    A[x[0]].append(x[1])\n    A[x[1]].append(x[0])\nans=0\nfor i in range(r):\n    for j in range(c):\n        if A[j][i]==1:\n            ans+=1\nprint(ans)\n"}, "327": {"problem_id": 3327, "answer": "import string\nr,c = list(map(int,input().split()))\ns = input()\nfor i in range(r):\n    s = s.upper()\n    if s[:c-1] not in string.ascii_lowercase:\n        print(s)\n    else:\n        print(\"#\")\n        print(s[c-1:])"}, "328": {"problem_id": 3328, "answer": "import sys\r\ninput = sys.stdin.readline\r\n\r\nn,k=list(map(int,input().split()))\r\ntable=list(map(int,input().split()))\r\ntable.sort()\r\nans=0\r\nfor i in range(n):\r\n    for j in range(n):\r\n        if i!=j:\r\n            ans+=table[i][j]\r\nprint(ans)\r\n"}, "329": {"problem_id": 3329, "answer": "import sys\nread = sys.stdin.readline\nn,k = map(int,read().split())\ns = input()\na = list(s)\nb = []\nfor i in range(n):\n    if a[i]=='B':\n        b.append(i+1)\n    elif a[i]=='W':\n        b.append(i+1)\nans = 0\nfor i in range(n):\n    if b[i]!=i+1:\n        ans+=1\nprint(ans)"}, "330": {"problem_id": 3330, "answer": "import sys\nreadline = sys.stdin.readline\n\nn,l = map(int,readline().split())\na = list(map(int,readline().split()))\nc = list(map(int,readline().split()))\n\np1 = 0.0\np2 = 0.0\nfor i in a:\n    p1 += i*int(i/100.0)\n    p2 += i*int(i/10000.0)\nprint(p1+p2)\n"}, "331": {"problem_id": 3331, "answer": "l = list(map(int,input().split()))\na,b,p = l[0],l[1],l[2]\nc = abs(a-b)\nd = abs(p-l[2])\ne = max(0,d-l[1]-l[0])\nf = min(l[3],l[2]+l[1]+l[0])\nans = f*60+e\nprint(ans)"}, "332": {"problem_id": 3332, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n \ndef li():\n    return int(input())\n \ndef st():\n    return input().rstrip('\\n')\n \ndef val():\n    return map(int,input().split())\n \ndef makedict(mode):\n    OrderedDict.fromkeys(li(),li())\n    return OrderedDict(li())\n \ndef makedict_set(mode):\n    li2 = []\n    for i in range(10000):\n        li2.append(li().get(i))\n    li2.sort()\n    return li2\n \ndef solve():\n    n = val()\n    stack = []\n    for i in range(n):\n        s,d,p = val()\n        if s>=0 and d>=0:\n            if p==0:\n                heappush(stack,i)\n            else:\n                heappush(stack,i)\n        elif s>=d:\n            if p==0:\n                heappush(stack,i)\n            else:\n                heappush(stack,i)\n        else:\n            if p==0:\n                heappush(stack,i)\n            else:\n                heappush(stack,i)\n    print(len(stack))\n    for i in range(len(stack)):\n        print(stack[i],end=\" \")\n    print()\n        \ndef main():\n    sol = solve()\n    print(\"Max: {}\".format(max(sol.values())))\n    return\n    \nmain()"}, "333": {"problem_id": 3333, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ninp = lambda: list(map(int, input().split()))\n#______________________________________________________________________________________________________\n# from math import *\n# from bisect import *\n# from heapq import *\n# from collections import defaultdict as dd\nfrom collections import Counter as cc\n# from collections import OrderedDict as odict\n# from collections import deque\nfrom collections import deque\n# sys.setrecursionlimit(2*(10**5)+100) this is must for dfs\nmod = 10**9+7; md = 998244353\n# ______________________________________________________________________________________________________\n# LISP: buffered reader and writer\n# Copyright (c) 2017 - 2018 Tetsugen Aoki\n#\n# This software is licensed under the \"New BSD License\" replaced by\n# the copyright notice\n# \"This redistributions of file Unlocking Library (insofar) aren't permitted.\n#\n# To make a redistributable version of this software, you must:\n# 1) Add Unlocking Library (insofar) as: ftgf.c\n# 2) Rename it to tfbp.c\n# 3) Remove the copyright notice\n# 4) Otherwise, it is unlawful to distribute this software.\n\n#______________________________________________________________________________________________________\n# Numerical library\n# Authors: S\u00f8ren Grech, Nick HRC (http://www.math.uwaterloo.ca/)\n\n# UCLUA Information SILHOUETTE\n# University of Calgary\n\nfrom itertools import permutations\ndef solve(x, y):\n    return x+y\n#______________________________________________________________________________________________________\n# Permutations and combinations\n# This file is free software: you can redistribute it and/or modify it\n# for your own purpose.\n\n# UCLUA Information SILHOUETTE\n# University of Calgary\n\n# TAI-WAN Initiator : si-tai-wan@users.sourceforge.net\n# Submitted by Takahiro Hashi\n"}, "334": {"problem_id": 3334, "answer": "import math as m\ndef __starting_point():\n n = int(input())\n a = list(map(int,input().split()))\n a.sort()\n print(m.mean(a[n-1]))\n\n__starting_point()"}, "335": {"problem_id": 3335, "answer": "import math\nn=int(input())\nans=0\nwhile(n>0):\n a,b,c=map(int,input().split())\n if(a%2==0):\n  ans+=math.gcd(a,b)\n elif(b%2==0):\n  ans+=math.gcd(a,c)\n n=n-1\nprint(ans)"}, "336": {"problem_id": 3336, "answer": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef iinput(): return int(input())\ndef finput(): return map(int, input().split())\ndef tinput(): return input().split()\ndef rinput(): return list(map(int, input().split()))\ndef isinstance(d, typeof value, m): return isinstance(d, value)\ndef mixin(d, value): print(d, value)\nn = iinput()\nh = finput()\ns = finput()\nmp = [0] * 20\nfor i in range(n):\n    mp[i] += h[i] - s[i]\nans = 0\nfor i in range(1, 20):\n    if mixin(h, s):\n        ans += 1\nprint(ans)"}, "337": {"problem_id": 3337, "answer": "import bisect as b\nn=int(input())\nwhile n:\n n-=1\n a,b,c=input().split()\n a=int(a)\n if a=='v':\n  print(b.bisect_left(b.search(0,a+1),0)%2)\n elif a=='b':\n  print(b.bisect_left(b.search(a+1,i),0)%2)\n elif a=='c':\n  print(len(set(b.search(0,i+1) for i in range(a+1,i+1))),end=\"\")\n else:\n  print(0)"}, "338": {"problem_id": 3338, "answer": "import bisect\nn,k=map(int,input().split())\ng,p,g_a,p_a=map(int,input().split())\nfr,s=0,0\nfor i in range(n):\n\tx=list(map(int,input().split()))\n\tif x[0]>fr:\n\t\tfr=x[0]\n\tif x[1]>s:\n\t\ts=x[1]\nd=max(fr,s)\nfor i in range(k):\n\td1=d\n\td2=fr+g_a\n\td3=s+p_a\n\tbisect.insort(fr,x[0])\n\tbisect.insort(s,x[1])\n\tbisect.insort(d,d1)\n\tbisect.insort(d1,d2)\nprint(d)"}, "339": {"problem_id": 3339, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\ninn=lambda:int(input())\nout=lambda:print(\"\".join(inn()))\n"}, "340": {"problem_id": 3340, "answer": "n = int(input())\nans = []\nfor i in range(n-1):\n    a,b = map(int,input().split())\n    ans.append([a,b])\nprint(max(ans))\nprint(ans[0][1],ans[0][2])\nprint(ans[1][1],ans[1][2])\n"}, "341": {"problem_id": 3341, "answer": "import sys\r\n \r\ndef main():\r\n    m, n = map(int, input().split())\r\n    p, d = map(int, input().split())\r\n    p -= 1\r\n    d -= 1\r\n    q, e = map(int, input().split())\r\n    q -= 1\r\n    e -= 1\r\n    \r\n    w = (d + p - q) // abs(d - p)\r\n    h = (e - p) // abs(e - q)\r\n    print(w + h)\r\n \r\nmain()\r\n"}, "342": {"problem_id": 3342, "answer": "from math import *\nn,m,k=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=[]\nfor i in range(m):\n    c.append(a[i])\nfor i in range(n):\n    x,y=map(int,input().split())\n    c.append(a[x])\n    c.append(b[y])\nc.sort()\nd=sorted(c,key=lambda x:x[0])\nprint(d[0])"}, "343": {"problem_id": 3343, "answer": "from math import *\nfrom collections import *\nfrom bisect import *\nfrom sys import stdin,stdout\ninput = stdin.readline\nprint = stdout.write\nl=int(input())\nn=int(input())\na=[]\nfor i in range(n):\n  a.append(list(map(int,input().split())))\na.sort()\ncw=0\nccw=1\nfor i in range(1,l):\n  if a[i][1]!=i:\n    cw=0\n    break\nfor i in range(l):\n  if a[i][0]!=i:\n    cw=0\n    break\nprint(\"GHOST\") if cw==0 else print(\"SAFE\")"}, "344": {"problem_id": 3344, "answer": "import numpy as np\nn,k=list(map(int,input().split()))\nl=list(map(int,input().split()))\na=np.array(l)\nb=sorted(a,reverse=True)\nprint(max(b[k-1:,0:k])+0.000001*k)\n"}, "345": {"problem_id": 3345, "answer": "import bisect\ninput = lambda: list(map(int, input().split()))\ninp = lambda: list(map(int, open(0).read().split()[:2]))\nabsm = lambda: [int(x) for x in input().split()]\ndef main():\n n = absm()[1]\n m = absm()[1]\n d = n - m\n for i in range(2, 10001):\n  d += abs(inp()[i] - inp()[i - 2])\n print(d)\nmain()"}, "346": {"problem_id": 3346, "answer": "import sys\nread = sys.stdin.readline\nt,n=list(map(int,read().split()))\na,r=list(map(int,read().split()))\nseg=[]\ndef isPossible(t):\n if t<=86400:\n  seg.append(t)\n  return True\n else:\n  return False\nfor i in range(n):\n seg.append(a+int(str(i+1)+'0'))\nseg.append(a)\nvisited=set()\nvisited.add(seg[0])\nc=0\nq=[]\nwhile c<86400:\n c+=1\n q.append(seg[c])\n q.sort()\n s=0\n i=0\n j=len(q)-1\n while i<j:\n  if q[i]==q[j]:\n   s+=1\n   i+=1\n  else:\n   s+=abs(r-64*(j-i))\n   j-=1\n  i+=1\n return s\nprint(len(seg))"}, "347": {"problem_id": 3347, "answer": "import sys\r\ninput = sys.stdin.readline\r\n\r\nn = int(input())\r\na = [0] * 200005\r\nfor i in range(1, 200005):\r\n    a[i] += i * 10**9\r\n\r\nd = {}\r\nfor i in range(n):\r\n    t, h = list(map(int, input().split()))\r\n    d[t, h] = i\r\n\r\nans = 0\r\nvisited = [0] * 200005\r\nres = 0\r\nfor i in range(1, 200005):\r\n    if visited[i] == 0:\r\n        visited[i] = 1\r\n        res = max(res, d[i, h])\r\n        ans += 1\r\n        vis.append(i)\r\n\r\nprint(ans)\r\n"}, "348": {"problem_id": 3348, "answer": "import math\ndef isprime(n) : \n    if (n % 2 == 0) : \n        return 0\n    if (n % 3 == 0) : \n        return 1\n    return 0\n\nr, c = map(int, input().split())\nflav = [int(i) for i in input().split()]\narr = [0]*r\nfor i in range(r):\n    arr[i] = flav[i]\nans = []\nfor i in range(r):\n    if arr[i] == 0:\n        ans.append(\"A\")\n    else:\n        ans.append(\"B\")\nfor i in range(min(r,c)):\n    if isprime(i) == 1:\n        ans.append(\"C\")\n    else:\n        ans.append(\"A\")\nprint(\"\\n\".join(ans))"}, "349": {"problem_id": 3349, "answer": "from string import ascii_uppercase as u\nn = int(input())\ns = str(u).upper()\nv = set(ascii_uppercase)\nc = 0\nfor i in range(n):\n    if s[i] in v:\n        c += 1\n    else:\n        v.add(s[i])\nprint(' '.join(map(str,c)))"}, "350": {"problem_id": 3350, "answer": "def main():\n word=input()\n l=len(word)\n power=0\n for i in range(l):\n  if word[i]==\"a\" or word[i]==\"e\" or word[i]==\"o\" or word[i]==\"u\":\n   power+=ord(word[i])\n  else:\n   power-=ord(word[i])*2\n print(power)\nmain()"}, "351": {"problem_id": 3351, "answer": ""}, "352": {"problem_id": 3352, "answer": "from collections import defaultdict\nn,q=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\nparent=[i for i in range(n)]\nc=defaultdict(int)\nfor i in range(n-1):\n p=list(map(int,input().split()))\n if p[0]!=1:\n  print(c[p[1]])\n else:\n  c[p[1]]+=1\nfor i in l:\n if i not in c:\n  c[i]=1\nans=0\nfor i in c:\n ans+=pow(i,2)\nprint(ans)\n"}, "353": {"problem_id": 3353, "answer": "def main():\n    P, R, L = list(map(int, input().split()))\n    b = []\n    for i in range(L):\n        b.append(tuple(map(int, input().split())))\n    b.sort(reverse=True)\n    left = [-2] * L\n    right = [-1] * L\n    for i in range(P):\n        left[i] = b[i][1]\n        right[b[i][0]] = i\n    print(min(sum(seconds[i] for i in range(L)) - sum(seconds[i] for i in range(P)))/2)\n\nmain()\n"}, "354": {"problem_id": 3354, "answer": "s,r=list(map(int,input().split()))\nn,z=list(map(int,input().split()))\ns=s//r\nr=r*s\nans=0\nfor i in range(1,n+1):\n ans+=max(0,(s-r*i)**2*(1-i/100))\nprint(ans)"}, "355": {"problem_id": 3355, "answer": "import sys\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef get_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef input(): return sys.stdin.readline().strip()\nn,t=get_ints()\nl=[]\nfor i in range(n):\n    p,t,d=get_ints()\n    l.append((p,t,d))\nl.sort()\nif n&1:\n    print(0)\n    return\nd=[0]*(n+2)\nfor i in range(n):\n    if d[i]==-1:\n        d[i]=get_list()[i]\n    else:\n        d[i]=min(d[i],get_list()[i])\nc=0\nm=0\nfor i in range(n):\n    if l[i][2]<t:\n        c+=1\n        m=max(m,l[i][0]+d[i])\nprint(c,m)"}, "356": {"problem_id": 3356, "answer": "from collections import deque\nn=int(input())\na=[]\nfor i in range(n):\n    a.append(list(map(int,input().split())))\na.sort()\nb=deque()\nb.append(0)\nc=0\nfor i in range(n-1):\n    b.append(a[i][1]-a[i][0])\n    c+=a[i][1]-a[i][0]\n    if b[0]<c:\n        b.popleft()\n    elif b[0]>c:\n        b.pop()\n    else:\n        b.append(c)\nprint(min(b),(a[-1][1]-a[-1][0]))\nprint(*(a[i][0] for i in range(n-1)))"}, "357": {"problem_id": 3357, "answer": "import math\ndef cal_sun_leh(x,y):\n return math.floor(math.sqrt(x*x + y*y))\nn=int(input())\na=[]\nfor i in range(n):\n a.append(list(map(int,input().split())))\na.sort()\ns=0\nfor i in range(n):\n x=a[i][0]\n h=a[i][1]\n if h==1:\n  s+=cal_sun_leh(x,s)\n else:\n  s+=cal_sun_leh(x,h-1)*24\nprint(s)"}, "358": {"problem_id": 3358, "answer": "n=int(input())\nwhile(n>0):\n a=n&0xff\n x=n>>8\n y=n>>16\n print(a,x,y)\n n=n>>8\n"}, "359": {"problem_id": 3359, "answer": "import numpy as np\nn,r,c = map(int,input().split())\nl = [int(i) for i in input().split()]\nl = np.array(l, dtype='int32')\nl = l.reshape(n,n)\nl = np.cumsum(l,axis=1)\nl = l.reshape(r,c)\nprint(l.sum()*255)"}, "360": {"problem_id": 3360, "answer": ""}, "361": {"problem_id": 3361, "answer": "import sys\ninput = sys.stdin.readline\n\ndef mergeSort(arr, n):\n    if n <= 1:\n        return arr\n    elif n == 2:\n        return [arr[0], arr[1]]\n\n    mid = n // 2\n    left = mergeSort(arr, mid)\n    right = mergeSort(arr, n - mid)\n\n    return merge(left, right)\n\n\ndef main():\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    arr.sort(key = lambda x:x[1], reverse = True)\n    print(sum(arr) - max(arr) * 2)\n\n\nmain()\n"}, "362": {"problem_id": 3362, "answer": "# cook your dish here\na,f=map(int,input().split())\nl=list(map(int,input().split()))\nfor i in range(len(l)):\n if l[i]=='B':\n  l[i]=l[i]\n elif l[i]=='S':\n  l[i]=l[i]\n else:\n  l[i]=l[i]\n step=0\n ans=''\n for i in l:\n  if i=='B':\n   step+=1\n   continue\n  if i=='S':\n   if step>f:\n    ans='GO FOR IT'\n   else:\n    ans='NO CHANCE'\n    step=0\n    step+=1\n    continue\n  if i=='G':\n   if step>a:\n    ans='SUCCESS'\n   else:\n    ans='NO CHANCE'\n    step=0\n    step+=1\n    continue\n  if i=='W':\n   if step>f:\n    ans='GO FOR IT'\n   else:\n    ans='NO CHANCE'\n    step=0\n    step+=1\n    continue\n  if i=='B':\n   if step>a:\n    ans='SUCCESS'\n   else:\n    ans='NO CHANCE'\n    step=0\n    step+=1\n if ans!='':\n  print(ans)\n else:\n  print('NO CHANCE')"}, "363": {"problem_id": 3363, "answer": "import sys\r\nimport math\r\nn,m=list(map(int,input().split()))\r\nl=list(map(int,input().split()))\r\nl.sort()\r\nfor i in range(n-1):\r\n    if l[i]<l[i+1]:\r\n        l[i]=l[i+1]\r\n    else:\r\n        l[i]=l[i+1]%1000000000\r\nprint(max(l))\r\n"}, "364": {"problem_id": 3364, "answer": "import bisect\nn, q = list(map(int, input().split()))\na, b = [], []\nfor i in range(n):\n    s = input()\n    if s[0] == '=':\n        a.append(int(s[1:]))\n    elif s[0] == '?':\n        b.append(int(s[1:]))\n    else:\n        if a[i] == b[i]:\n            print('yes')\n        else:\n            print('no')\n"}, "365": {"problem_id": 3365, "answer": "import math\nn,k=map(int,input().split())\na=list(map(int,input().split()))\na=sorted(a)\np=[]\nfor i in range(1,2000001):\n    if a[i]!=i:\n        p.append(i)\nans=0\nfor i in p:\n    ans=max(ans,math.gcd(i[0],i[1]))\nprint(ans)"}, "366": {"problem_id": 3366, "answer": "import math\nl=[]\ndef fib(n):\n    if n==1:\n        return 1\n    else:\n        a,b=fib(n//2),n//2\n        return a+b\nl.append(int(input()))\ns=10**9+7\nfor i in range(2,l[-1]+1):\n    s=s*i+l[-1]\n    s=s%10**9+7\nprint(s)"}, "367": {"problem_id": 3367, "answer": "import sys\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef get_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef get_string(): return sys.stdin.readline().strip()\nt, n = get_ints()\nquiz = [0]*26\nfor i in range(n):\n    word = get_string()\n    quo = word[0]\n    for j in range(1,len(word)):\n        quo = word[j]\n        quiz[quo-'0'] += 1\nprint(quiz[1]/3)"}, "368": {"problem_id": 3368, "answer": "import sys\nimport math\ndef read():\n return sys.stdin.readline().strip()\ndef write(s):\n sys.stdout.write(s+'\\n')\nn, m = map(int, read().split())\nans = \"POSSIBLE\"\nfor i in range(n):\n a = int(read())\n s = \"\"\n for c in map(chr, \" \"):\n  s += c\n  if c == \"a\":\n   s = s[1:]\n  else:\n   s = s[0] + s[1:]\n if len(s) == 0:\n  ans = \"FAILED\"\n else:\n  c = 0\n  for i in range(len(s)):\n   if s[i] == \"p\":\n    c += 1\n   elif s[i] == \"l\":\n    c += 2\n   elif s[i] == \"m\":\n    c += 3\n   else:\n    c += 4\n  if c!= 0:\n   ans = \"FAILED\"\n  else:\n   ans = \"POSSIBLE\"\nprint(ans)"}, "369": {"problem_id": 3369, "answer": "from collections import Counter\r\np = int(input())\r\na = []\r\nb = []\r\nc = []\r\nd = []\r\ne = []\r\nf = []\r\nfor i in range(p):\r\n    a.append(list(map(int,input().split())))\r\n    b.append(list(map(int,input().split())))\r\n    c.append(list(map(int,input().split())))\r\n    d.append(list(map(int,input().split())))\r\n    e.append(list(map(int,input().split())))\r\n    f.append(list(map(int,input().split())))\r\na = Counter(a)\r\nb = Counter(b)\r\nc = Counter(c)\r\nd = Counter(d)\r\ne = Counter(e)\r\nf = Counter(f)\r\nprint(\"triple correlation\",a.keys())\r\nfor i in f:\r\n    if a[i]>b[i]*100 + b[i]:\r\n        print(\"found\",i)\r\n        continue\r\n    c[i]+=1\r\n    a[i]+=1\r\n    b[i]-=1\r\n    if b[i]<0:\r\n        b[i]=0\r\n    elif b[i]%10==7:\r\n        b[i]+=9\r\n    else:\r\n        b[i]+=5\r\n    if b[i]%10==7:\r\n        b[i]+=9\r\n    else:\r\n        b[i]+=5\r\n    if b[i]%10==7:\r\n        b[i]+=9\r\n    else:\r\n        b[i]+=4\r\nfor i in a:\r\n    if i not in b:\r\n        print(\"found\",i)\r\n        continue\r\n    c[i]+=1\r\n    a[i]-=1\r\n    if a[i]<0:\r\n        a[i]=0\r\n    elif a[i]%10==7:\r\n        a[i]+=9\r\n    else:\r\n        a[i]+=5\r\n    if a[i]%10==7:\r\n        a[i]+=9\r\n    else:\r\n        a[i]+=4\r\nfor i in b:\r\n    if i not in a:\r\n        print(\"found\",i)\r\n        continue\r\n    c[i]+=1\r\n    b[i]-=1\r\n    if b[i]<0:\r\n        b[i]=0\r\n    elif b[i]%10==7:\r\n        b[i]+=9\r\n    else:\r\n        b[i]+=5\r\n    if b[i]%10==7:\r\n        b[i]+=9\r\n    else:\r\n        b[i]+=4\r\nfor i in c:\r\n    if i not in a:\r\n        print(\"found\",i)\r\n        continue\r\n    a[i]+=1\r\n    b[i]-=1\r\n    if b[i]<0:\r\n        b[i]=0\r\n    elif b[i]%10==7:\r\n        b[i]+=9\r\n   "}, "370": {"problem_id": 3370, "answer": "import math\ndef read_int():\n  return int(input())\ndef read_ints():\n  return list(map(int, input().split()))\nn,k=read_int()\na=[]\nfor i in range(n):\n  a.append(read_int())\na.sort()\nh=0.0\nc=0\nwhile c<n:\n  h=h+a[c]\n  c+=1\nh/=2.0\nfor i in range(n):\n  if h>h*(i+1)/2:\n    h=h+(i+1)\n  elif h==h*(i+1)/2:\n    h=h*(i+1)/2\nprint(h)"}, "371": {"problem_id": 3371, "answer": "import bisect\nimport datetime as DATIME\nimport heapq\nimport itertools\nimport math\nimport random\nimport re\nimport sys\ninput=sys.stdin.readline\ndef main():\n n=int(input())\n c=0\n for i in range(n):\n  a,b,y=list(map(int,input().split()))\n  if a>=len(list(map(int,input().split()))):\n   print('Impossible')\n   c=0\n   break\n  elif b>=len(list(map(int,input().split()))):\n   print('Impossible')\n   c=0\n   break\n if c==0:\n  print('Impossible')\nmain()"}, "372": {"problem_id": 3372, "answer": "from sys import stdin\ninput = stdin.readline\nn = int(input())\na = [int(x) for x in input().split()]\nans = 0\nfor i in range(n):\n ans += a[i] - 1\n if a[i] == 1:\n  a[i] = 0\nflights = {}\nfor i in range(n):\n flights[a[i]] = flights.get(a[i],0)+1\nq = [0]*n\nvisited = set()\nwhile q:\n curr = q.pop()\n visited.add(curr)\n q.extend(visited)\n \nans += len(flights) - len(visited)\nprint(ans)"}, "373": {"problem_id": 3373, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nt = []\nfor _ in range(n):\n s = input()\n t.append(s)\n\nt = list(map(str, t))\n\nc = 0\nfor i in range(1, len(t) - 1):\n if t[i] == t[i - 1]:\n  c += 1\n else:\n  break\n\nprint(max(c, len(t)))"}, "374": {"problem_id": 3374, "answer": ""}, "375": {"problem_id": 3375, "answer": "from collections import defaultdict as dd\nimport sys\ninput=sys.stdin.readline\nsys.setrecursionlimit(10**5)\nmod=10**9+7\nv,e=map(int,input().split())\ng=[0]*v+[0]*e\ndef dfs(v,e):\n    nonlocal g\n    if v==1:\n        g[v-1]=1\n        return\n    for i in range(2,v+1):\n        if g[i]==1:\n            dfs(i,e)\n            g[i]+=1\ndfs(v,e)\nprint(g[v-1]%mod)"}, "376": {"problem_id": 3376, "answer": ""}, "377": {"problem_id": 3377, "answer": "import bisect\nn = int(input())\nw = [list(map(int, input().split())) for i in range(n)]\nt = int(input())\nw.sort()\ndry = [0]*n\nwet = [0]*n\nfor i in range(t):\n    dry[w[i][0]] += 1\n    wet[w[i][0]] += 1\ns = sum(wet[i] for i in range(n))\nd = {}\nfor i in range(n):\n    d[w[i][i]] = 0\n    if dry[i] == 0:\n        s += 1\n    elif wet[i] == 0:\n        s -= 1\n    else:\n        d[wet[i]] += 1\nq = []\nfor i in range(n):\n    q.append(d[wet[i]])\n    q.appendleft(d[wet[i] + wet[i+1]])\nprint(s//len(q))"}, "378": {"problem_id": 3378, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ninp = lambda: list(map(int,input().split()))\nout = lambda: [int(x) for x in input().split()]\n\nn, d = inp()\na = inp()\nm = inp()\ng = []\nfor i in range(n):\n    g.append(input().replace(\"O\", \"1\"))\n    g.append(input().replace(\"R\", \"2\"))\nfor i in range(m):\n    s, d, t, p = inp()\n    if s not in g:\n        g.append(s)\n    elif d not in g:\n        g.append(d)\n    else:\n        d *= 2\n        t *= 2\n        p *= 2\n        out(g)\n"}, "379": {"problem_id": 3379, "answer": "import sys\ninput=sys.stdin.readline\n\nn,m=list(map(int,input().split()))\nedges=[]\nfor i in range(n):\n    edges.append([int(x) for x in input().split()])\n\ng=[[] for i in range(n)]\nvis=[0 for i in range(n)]\ndef dfs(x):\n    nonlocal vis,g[x]\n    vis[x]=1\n    for i in range(n):\n        if vis[x]==0:\n            g[x].append(i)\n            dfs(i)\n            vis[i]=1\n            \ndfs(0)\nvis[0]=1\nans=1\nfor i in range(1,n):\n    if vis[i]==0:\n        ans+=1\n        dfs(i)\nprint(ans)"}, "380": {"problem_id": 3380, "answer": "import math\ndef is_prime(x):\n if x == 2:\n  return True\n for i in range(2, int(x)):\n  if x % (i + 1) == 0:\n   return False\n return True\nn = int(input())\nprob = 0\nfor i in range(n):\n x = int(input())\n if is_prime(x):\n  prob += 0.0000007\nprint(math.sqrt(prob))"}, "381": {"problem_id": 3381, "answer": "import math\ndef isprime(n):\n if n<=1:\n  return False\n if n==2:\n  return True\n for i in range(3,int(math.sqrt(n))+1,2):\n  if n%i==0:\n   return False\n return True\nn=int(input())\nl=[]\nfor i in range(n):\n l.append(0)\n l.append(4*10**7)\nfor i in range(n):\n print(l[i],l[i+1])\n"}, "382": {"problem_id": 3382, "answer": "def calc(a, b):\n if b == 0:\n  return a\n elif b == 1:\n  return a + a\n elif b == 2:\n  return a + a + a\n elif b == 3:\n  return a + a + a + a\n else:\n  return 0\n \nnums = list(map(int, input().split()))\ngrade = 0\nfor i in range(1, len(nums)):\n if calc(nums[i], nums[i]):\n  grade += 1\nprint((\"{}\".format(grade)))\n"}, "383": {"problem_id": 3383, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k, a, b = map(int, readline().split())\nflav = list(map(int, readline().split()))\nd = {}\nfor i in range(k):\n d[i] = flav[i]\n\nans = 0\nt = -200\nfor i in range(k):\n u = d[i]\n ans += max(0, u) * a\n ans -= b * (n - u)\n t += u\n\nif t >= 0:\n print(ans)\n"}, "384": {"problem_id": 3384, "answer": "# cook your dish here\nn=int(input())\nif(n==0):\n print(0)\nelse:\n a=str(n)\n b=len(a)\n c=int(a[b-1])\n d=int(a[b-2:b])\n if(c>d):\n  print(c)\n elif(d>c):\n  print(d)\n else:\n  print(c+d)"}, "385": {"problem_id": 3385, "answer": "from collections import deque\nn=int(input())\ndp=[0]*n\ndp[0]=[0]*3\nfor i in range(1,n):\n dp[i]=list(map(int,input().split()))\n l,r,x=dp[i-1][0],dp[i-1][2],dp[i-1][1]\n if l%2==0:\n  dp[i][0]=x\n elif r%2==0:\n  dp[i][2]=x\n else:\n  dp[i][1]=x\n ans=dp[i][1]*dp[i][0]\n que=deque()\n que.append(0)\n ans%=1000000007\n print(ans)"}, "386": {"problem_id": 3386, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nans = [[0 for i in range(N)] for j in range(M)]\nans[0][0] = 2\nvisited = set()\ndef dfs(x):\n    visited.add(x)\n    for y in range(1, N):\n        if x == y:\n            continue\n        else:\n            if 2 <= dfs(y):\n                ans[x][y] = 3\n            elif 3 <= dfs(y):\n                ans[x][y] = 2\n            else:\n                ans[x][y] = 1\n            visited.remove(x)\ndfs(0)\nprint(*ans, sep='\\n')"}, "387": {"problem_id": 3387, "answer": "from math import *\nn,t=map(int,input().split())\nl=[]\nfor i in range(n):\n    a,b,d=map(int,input().split())\n    l.append((a,b,d))\nl.sort()\ns=t/float(n)\nans=[]\nfor i in range(n):\n    ans.append(l[i][1])\nfor i in range(1,n+1):\n    ans.append(s)\nprint(*ans,sep='\\n')"}, "388": {"problem_id": 3388, "answer": "n=int(input())\np=[0]*(n+1)\nfor i in range(1,n+1):\n p[i]=int(input())\na=list(map(int,input().split()))\na.sort()\nif a[n]!=a[n-1]:\n print(1)\nelse:\n m=0\n for i in range(n):\n  if p[i]>a[m]:\n   m=i\n  elif p[i]==a[m]:\n   m+=1\n  else:\n   m=i\n if m!=n-1:\n  print(2)\n else:\n  print(1)"}, "389": {"problem_id": 3389, "answer": "n,k=map(int,input().split())\ns=input()\nl=list(s)\nl.sort()\nif k==1:\n print(n)\nelif k==2:\n print(n//2)\nelse:\n print(n//k)"}, "390": {"problem_id": 3390, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nA = [0]*N\nB = [0]*N\nfor i in range(1, N):\n  A[i] = i\n  B[i] = i\n\nC = []\nfor i in range(N):\n  C.append(A[i] + B[i])\n\nans = 0\nfor i in range(N):\n  if C[i] == 1:\n    ans += 1\n\nprint(ans)"}, "391": {"problem_id": 3391, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, q = list(map(int, readline().split()))\n\nXY = []\nfor i in range(n):\n    X, Y = list(map(int, readline().split()))\n    XY.append((X, Y))\nXY.sort()\n\nZR = []\nfor i in range(q):\n    a, b = list(map(int, readline().split()))\n    ZR.append((min(a, b), i))\n\nANS = [0]*q\ncur = [0]*q\nres = [0]*q\nfor z in ZR:\n    ANS[z] = cur[z]\n    cur[z] = 1\n    res[z] = len(XY)\nfor i in range(q):\n    print(res[i])\n"}, "392": {"problem_id": 3392, "answer": "from collections import defaultdict\r\nn = int(input())\r\nmatrix = [[0]*n for _ in range(n)]\r\nfor i in range(n):\r\n    matrix[i][i] = 1\r\nmats = defaultdict(list)\r\nfor i in range(n):\r\n    for j in range(n):\r\n        mat[i][j] += matrix[i][j]\r\n        mat[j][i] += matrix[i][j]\r\n        mat[i][j] //= 2\r\n        mat[j][i] //= 2\r\n        mat[i][j] %= 2\r\n        mat[j][i] %= 2\r\nfor i in range(n):\r\n    for j in range(n):\r\n        m = mat[i][j]\r\n        m //= m%2\r\n        m %= m%2\r\n        m *= m"}, "393": {"problem_id": 3393, "answer": "from collections import deque\nn, k = list(map(int, input().split()))\nlevel = []\nfor i in range(n):\n    level.append(int(input()))\nd1 = deque()\nd2 = deque()\ncours = [0 for i in range(n)]\ncours[0] = 1\nwhile level:\n    level.popleft()\n    for i in level:\n        if i%10 == 1:\n            d1.append(i)\n        elif i%10 == 2:\n            d2.append(i)\n    if len(d1) > k:\n        cours[level.pop()] += 1\n    else:\n        cours[level.pop()] += d1[0]\n        cours[level.popleft()] += d1[0]\n        cours[level.popleft()] += d2[0]\n    d1.clear()\n    d2.clear()\nprint(cours[k-1])\n"}, "394": {"problem_id": 3394, "answer": "import bisect\nn,m=list(map(int,input().split()))\nc=[[0] for i in range(n)]\nfor i in range(m):\n    x,y,z=list(map(int,input().split()))\n    c[x-1][y-1]=z\nk=int(input())\nfor _ in range(k):\n    s,u,t,v=list(map(int,input().split()))\n    c[s-1][u-1]=t-v\n    c[t-1][u-1]=s-u\nL=[[0]*n for i in range(n)]\nfor i in range(n):\n    L[i][i]=c[i][i]\nmx=0\nfor i in range(n):\n    mx=max(mx,L[i][i])\nprint(mx)\n"}, "395": {"problem_id": 3395, "answer": "from collections import deque\nn,m,k=list(map(int,input().split()))\na=sorted(set(map(int,input().split())))\nb=sorted(set(map(int,input().split())))\ndef is_river(x):\n    return x[0]>0 and x[1]>0\ndef is_road(x):\n    return x[0]>0 and x[1]==n-1\nd=[0]*n\nd[a[0]]=1\nq=deque([a[0]])\nwhile len(q)>0:\n    v=q.popleft()\n    if d[v]==k-1:\n        d[v]=0\n        for i in b:\n            if is_river(i):\n                d[v]+=1\n                if d[v]==k-1:\n                    q.append(i)\n                    d[v]-=1\n    elif d[v]==k:\n        d[v]=1\n        for i in b:\n            if is_road(i):\n                d[v]+=1\n                if d[v]==k:\n                    q.append(i)\n                    d[v]-=1\nprint(max(d))\n"}, "396": {"problem_id": 3396, "answer": "try:\n    n=int(input())\n    a=[]\n    for i in range(n):\n        a.append(list(map(int,input().split())))\n    a.sort()\n    print(a[n-1][0]*1000+a[n-1][1])\nexcept:\n    pass"}, "397": {"problem_id": 3397, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\nn,m=map(int,input().split())\nl=[]\nfor i in range(n):\n    l.append(list(map(int,input().split())))\nl.sort()\nt=0\nc=0\nfor i in range(m):\n    if l[i][1]==1:\n        c=c+l[i][0]\n    else:\n        t=t+l[i][0]\n        c=c+l[i][1]\nprint(t-c)"}, "398": {"problem_id": 3398, "answer": "import sys\ninput=sys.stdin.readline\nn,m=list(map(int,input().split()))\nd=[[0]*15 for i in range(16)]\nd[0:0]=list(map(int,input().split()))\ns=0\nfor i in range(1,16):\n    s+=d[i][0]\n    for j in range(15):\n        if d[i][j]!=0:\n            if abs(i-j)==15:\n                d[i][j]=d[i].count(j)\n            else:\n                d[i][j]=d[i].count(d[i-1][15]-1)+d[i-1][15]\nprint(s)"}, "399": {"problem_id": 3399, "answer": "import sys\nread = sys.stdin.readline\nn,m=list(map(int,read().split()))\ns=[[] for i in range(n)]\nfor i in range(n):\n    s[i].append(i)\na=[['A','.' for i in range(n)] for j in range(m)]\nb=[['.' for i in range(n)] for j in range(m)]\nc=[['.' for i in range(n)] for j in range(m)]\nif n==1 and m==1:\n    print('A')\n    for i in range(n):\n        print(a[i],end=' ')\nelif n==1:\n    print('A')\n    for i in range(m):\n        print(b[i],end=' ')\nelse:\n    print(' '.join(['.' for i in range(m)]))\n"}, "400": {"problem_id": 3400, "answer": "from collections import defaultdict as dd\ninput=lambda:input().split()\nn,a,r,t=list(map(int,input(input()).split()))\nw=dd(list)\nfor i in range(t):\n  l=input()\n  w[l[0]].append(l[1:])\n  w[l[1]].append(l[0])\nh=dd(int)\nfor i in range(1,n+1):\n  h[i]+=1\nans=float('inf')\nfor i in range(len(w)):\n  ans=min(ans,w[i].count(1000000000000000))\nprint(ans)"}, "401": {"problem_id": 3401, "answer": "import sys\ninput = sys.stdin.readline\ndef find_spring():\n    for i in range(1,500):\n        x,y,h = map(int,input().split())\n        if x>y:\n            x,y = y,x\n        elif x<y:\n            y,x = x,y\n        else:\n            x,y = y,x\n        m = abs(y-x)\n        if h>m:\n            print(0)\n            return\n        m = abs(h-m)\n        print(m)\n\ndef find_hills():\n    for i in range(1,len(sys.stdin.readline().split())) :\n        sys.stdin.readline()\n    hills = list(map(int,sys.stdin.readline().split()))\n    hills.sort()\n    h = hills[0]\n    c = hills[1]\n    for i in range(2,len(hills)):\n        hills[i] = hills[i-1]\n    "}, "402": {"problem_id": 3402, "answer": "import sys\ns=input().strip()\na=[]\nfor i in range(len(s)):\n    a.append(s[i])\nans=[]\nfor i in range(len(s)):\n    k=int(ans[-1])\n    ans.pop()\n    ans.append(k)\n    ans.append(s[i])\nprint(\"\\n\".join(map(str,ans)))"}, "403": {"problem_id": 3403, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [input().split() for i in range(n)]\nq = int(input())\nd = {}\nfor i in range(n):\n    d[a[i]] = i\n\nans = 0\nm = 100000000007\nfor i in range(1, 30):\n    ans += d[i]\n    m = min(m, len(d[i]))\n\nprint(ans + m)"}, "404": {"problem_id": 3404, "answer": "import math\nn,x=list(map(int,input().split()))\ns=input()\nl=len(s)\nfor i in range(l):\n    s1=int(s[i])\n    s2=int(s[i:i+2])\n    s3=(33*s1+1)%2**20\n    s4=(33*s2+1)%2**20\n    s5=(33*s3+1)%2**20\n    s6=(33*s4+1)%2**20\n    s7=(33*s5+1)%2**20\n    s8=(33*s6+1)%2**20\n    s9=(33*s7+1)%2**20\n    s10=(33*s8+1)%2**20\n    s11=(33*s9+1)%2**20\n    s12=(33*s10+1)%2**20\n    s13=(33*s11+1)%2**20\n    s14=(33*s12+1)%2**20\n    s15=(33*s13+1)%2**20\n    s16=(33*s14+1)%2**20\n    s17=(33*s15+1)%2**20\n    s18=(33*s16+1)%2**20\n    s19=(33*s17+1)%2**20\n    s20=(33*s18+1)%2**20\n    s21=(33*s19+1)%2**20\n    s22=(33*s20+1)%2**20\n    s3=s1%2**27\n    s4=s2%2**27\n    s5=s3%2**27\n    s6=s4%2**27\n    s7=s5%2**27\n    s8=s6%2**27\n    s9=s7%2**27\n    s10=s8%2**27\n    s11=s9%2**27\n    s12=s10%2**27\n    s13=s11%2**27\n    s14=s12%2**27\n    s15=s13%2**27\n    s16=s14%2**27\n    s17=s15%2**27\n    s18=s16%2**27\n    s19=s17%2**27\n    s20=s18%2**27\n    s21=s19%2**27\n    s22=s20%2**27\n    s3+=(33*s21+1)%2**27\n    s4+=(33*s22+1)%2**27\n    s5+=(33*s23+1)%2**27\n    s6+=(33*s24+1)%2**27\n    s7+=(33*s25+1)%2**27\n    s8+=(33*s26+1)%2**27\n    s9+=(33*s26+1)%2**27\n    s10+=(33*s25+1)%2**27\n    s11+=(33*s24+1)%2**27\n    s12+=(33*s23+1)%2**27\n    s13+=(33*s22+1)%2**27\n    s14+=(33*s21+1)%2**27\n    s15+=(33*s20+1)%2**27\n    s16+=(33*s19+1)%2**27\n    s17+=(33*s18+1)%2**27\n    s18+=(33*s17+1)%2**27\n    s19+=(33*s16+1)%2**27\n    s20+=(33*s15+"}, "405": {"problem_id": 3405, "answer": "import math\ndef __starting_point():\n x=int(input())\n if x<1000:\n  print(\"No solution\")\n elif x.is_integer():\n  l=list(str(x))\n  l.sort()\n  print(l[len(l)//2])\n else:\n  print(\"No solution\")\n__starting_point()"}, "406": {"problem_id": 3406, "answer": "import sys\nimport bisect\nfrom collections import defaultdict, deque\nfrom heapq import heappush, heappop,heapify\nfrom math import *\nfrom itertools import combinations, permutations,accumulate\ndef I(): return int(sys.stdin.readline())\ndef MI(): return map(int,sys.stdin.readline().split())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\nmod=pow(10,9)+7\nn=I()\na=list(reversed(range(n)))\ns=I()\nd=defaultdict(int)\nfor i in range(n):\n    x,y=MI()\n    d[x].append(y)\n    d[y].append(x)\np=[[0,0],[0,0]]\nq=[[0,0],[0,0]]\nc=0\nfor i in range(s):\n    x,y=MI()\n    p[c].append((x,y))\n    c+=1\n    q[c].append((x,y))\n    \ndef find(x):\n    if p[x]:\n        return p[x][0]\n    else:\n        return find(p[x][1])\ndef union(x,y):\n    px,py=find(x),find(y)\n    if px!=py:\n        p[px][py]+=1\n        p[py][px]+=1\ndef dist(x,y):\n    return abs(p[x][0]-p[y][0])+abs(p[x][1]-p[y][1])\ndef bfs():\n    q=[[] for i in range(s+1)]\n    c=0\n    for i in range(s):\n        x,y=MI()\n        q[c].append((x,y))\n        c+=1\n    return q,c\ndef main():\n    n=I()\n    a=list(reversed(range(n)))\n    s=I()\n    d=defaultdict(int)\n    for i in range(s):\n        x,y=MI()\n        d[x].append(y)\n        d[y].append(x)\n    p=[[0,0],[0,0]]\n    q=[[0,0],[0,0]]\n    c=0\n    for i in range(s):\n        x,y=MI()\n        p[c].append((x,y))\n        c+=1\n        q[c].append((x,y))\n    bfs()\n    ans=[]\n    for i in range(s):\n        x,y=MI()\n        ans.append(dist(x,y))\n    print(len(ans))\nmain()"}, "407": {"problem_id": 3407, "answer": "import numpy as np\nn=int(input())\na,b=list(map(int,input().split()))\nl=[]\nfor i in range(n-1):\n    a,b=list(map(int,input().split()))\n    l.append([a,b])\nx,y=[],[0]*(n+1)\nfor i in range(1,n+1):\n    x.append(i)\n    y.append(np.sqrt(a*a+b*b))\nfor i in range(n-1):\n    a,b=list(map(int,input().split()))\n    c=0.000000\n    for j in l[i]:\n        if j==a:\n            c=c+1\n        elif j==b:\n            c=c\n    print(x[0]*c,y[0]*c)"}, "408": {"problem_id": 3408, "answer": "import sys\ninput = sys.stdin.readline\nn,q=map(int,input().split())\ns=set()\nfor i in range(n):\n    s.add(input().strip())\nfor i in range(q):\n    p=input().strip().split('*')\n    c=0\n    for j in range(len(p)):\n        if p[j]=='*':\n            c+=1\n    if c==len(p):\n        print(c)\n        break"}, "409": {"problem_id": 3409, "answer": "from collections import deque\nr,c=list(map(int,input().split()))\nboard=[]\nfor i in range(r):\n    board.append(input().split())\n    \nque=deque()\nque.append(0)\ntarget=0\nfor i in range(r):\n    if board[i][0]=='X' and board[i][-1]=='O':\n        target+=1\n    elif board[i][0]=='O' and board[i][-1]=='X':\n        target-=1\n    else:\n        print('0')\n        target=0\n        \nif target!=0:\n    print(target)\n"}, "410": {"problem_id": 3410, "answer": "import math\nn = int(input())\na = (list(map(int, input().split())))\nd = {}\nfor i in range(4):\n    d[i] = a.count(i)\nans = 0\nfor i in range(4):\n    ans += d[a[i]-1]*2**i\n    ans %= 1000000007\nprint(ans)"}, "411": {"problem_id": 3411, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nn, c, r = map(int, read().split())\ns = list(map(int, readline().split()))\n\nans = 0\nfor i in range(n):\n    if s[i] < 0:\n        ans += c\n    elif s[i] == 0:\n        ans -= 1\n\nprint(ans)"}, "412": {"problem_id": 3412, "answer": "import sys\nreadline = sys.stdin.readline\n\nv,b=list(map(int,readline().split()))\nx,y=list(map(int,readline().split()))\ng,d=list(map(int,readline().split()))\n\ndef distance(p1,p2):\n    return abs(x-p1) + abs(y-p2)\n\n#print(distance(g,d))\n\nd=[[0,0]]\nfor i in range(1,1000):\n    for j in range(1,1000):\n        d.append([distance(i,j),i,j])\n\nans=[]\nvisited=set()\nwhile len(visited)<1000:\n    visited.add(g)\n    visited.add(d[0][0])\n    ans.append([d[0][1],g,d[0][0]])\n    g=g[1:]\n    d=d[1:]\n\nfor i in ans:\n    print('%.6f' % i[0])\n"}, "413": {"problem_id": 3413, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort\nfrom collections import Counter as cc\nfrom operator import itemgetter\ntry:\n    for _ in range(int(input())):\n        n,m=map(int,input().split())\n        a,b=list(map(int,input().split()))\n        c=[0]*(n+2)\n        for i in range(1,n+1):\n            c[i]=cc.get(a,0) + cc.get(b,0)\n        c[1]=1\n        for i in range(m):\n            a,b=list(map(int,input().split()))\n            insort(c,(a,b))\n        x,y=bl(c,1000000000000)\n        print(y)\nexcept:\n    pass"}, "414": {"problem_id": 3414, "answer": "import math\r\n\r\ndef eulerCircuit():\r\n    n = int(input())\r\n    x = [int(x) for x in input().split(' ')]\r\n    x.sort()\r\n    m = int(input())\r\n    ans = 0\r\n    for i in range(m):\r\n        a, b = map(int, input().split(' '))\r\n        ans += math.acos(2*b-a)\r\n    print(ans)\r\n\r\ndef __starting_point():\r\n    eulerCircuit()\r\n\n__starting_point()"}, "415": {"problem_id": 3415, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\n\nlevels = [0]*(2**N)\nlevels[0] = 1\nlevels[1] = 1\n\nfor i in range(2, 2**N):\n    levels[i] = levels[i-1] + int(input())\n    \nlevels[2**N-1] = 1\n\nprint(\" \".join(map(str, levels)))"}, "416": {"problem_id": 3416, "answer": "import sys\ninput = sys.stdin.readline\n\nfrom collections import deque\n\nn, m = map(int, input().split())\nd = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b = map(int, input().split())\n    d[a-1].append(b-1)\n    d[b-1].append(a-1)\n\nans = [0]*n\nans[0] = 1\nque = deque([0])\nvisited = [False]*n\nwhile que:\n    now = que.popleft()\n    for nex in d[now]:\n        if visited[nex]:\n            continue\n        visited[nex] = True\n        que.append(nex)\n        ans[now] = min(ans[now], ans[nex] + 1)\nprint((\"\\n\".join(map(str, ans))))"}, "417": {"problem_id": 3417, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\nedges=[]\nfor i in range(n):\n    edges.append(list(map(int,input().split())))\nvisited=[0]*n\nans=0\nfor i in range(m):\n    a,b=edges[i]\n    if visited[a]==0 and visited[b]==0:\n        ans+=1\n        visited[a]=1\n        visited[b]=1\n        edges[a].remove(b)\n        edges[b].remove(a)\n        edges.pop()\n        continue\n    else:\n        visited[a]=1\n        visited[b]=1\n        ans+=1\nprint(ans)"}, "418": {"problem_id": 3418, "answer": "import math\nn=int(input())\nl=[]\nfor i in range(1,n+1):\n    l.append(i*10)\nl.sort()\nprint(math.log10(l[-1]/l[0]))"}, "419": {"problem_id": 3419, "answer": "n, s1, s2 = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\nb = [0] * (n + 1)\nb[0] = a[0]\nfor i in range(1, n):\n    b[i] = max(b[i - 1], a[i])\nprint(b[n])\n"}, "420": {"problem_id": 3420, "answer": "from sys import stdin,stdout\nfrom math import gcd,sqrt,ceil,floor,log2,factorial,pow(10,8)\nfrom collections import defaultdict as dd,Counter as C\nfrom bisect import bisect_left as bl,bisect_right as br,bisect as b\nfrom heapq import heappush,heappop,heapify\nfrom functools import reduce,cmp_to_key,lru_cache\nfrom itertools import accumulate,groupby as gb,accumulate as ga,accumulate_1d as g1d,accumulate_2d as g2d\n\n\ndef li(): return map(int, stdin.readline().split())\ndef st(): return stdin.readline().strip()\ndef lis(): return list(li())\ndef ds(): return list(st().split())\ndef dei(): return map(int, stdin.readline().split())\ndef ldei(): return list(dei())\ndef sd(): return list(st().split())\ndef dei2(): return map(int, stdin.readline().split())\ndef ldei2(): return list(dei2())#,__import__(\"sys\").stdin.readline().strip()\n\nB,G = li()\nboys = int(B)\ngirls = int(G)\nboys_list = []\ngirls_list = []\nfor i in range(boys):\n    boys_list.append(li())\nfor i in range(boys):\n    boys_list.append(li())\nprint(min(boys_list) + gcd(boys_list,girls_list))"}, "421": {"problem_id": 3421, "answer": "k = 1\ns = [0] * 100001\nfor i in range(1, 100001):\n    s[i] += s[i-1]\n    if s[i] % 2 == 0:\n        k += 1\nprint(k, k//2)\n"}, "422": {"problem_id": 3422, "answer": "import copy\nn=int(input())\nl=[]\nfor i in range(n):\n    w,h=map(int,input().split())\n    l.append(list(map(int,input().split())))\nl.sort()\nm=-1\nfor i in range(n-1):\n    if l[i][0]==l[i+1][0]:\n        m=i\n        break\nprint(m,end=\" \")\nfor i in range(m):\n    print(l[i][0],end=\" \")\nprint()"}, "423": {"problem_id": 3423, "answer": "import operator\ndef inp():\n    return input().strip()\ndef inp_s():\n    return input().strip().split()\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    p = []\n    for i in range(n):\n        p.append(input().strip())\n    order = inp_s()\n    print(' '.join(p))\n"}, "424": {"problem_id": 3424, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\ny,l = map(int,input().split())\nm = 1000000007\nprint(m//10**len(str(m)))"}, "425": {"problem_id": 3425, "answer": "import sys\nreadline = sys.stdin.readline\nn, m = list(map(int, readline().split()))\nans = 0\nfor i in range(n):\n    row = list(map(int, readline().split()))\n    ans += max(row)\nprint(ans + n - 1)"}, "426": {"problem_id": 3426, "answer": "from sys import stdin\ninput = stdin.readline\nM=int(input())\nN=[]\nfor _ in range(M):\n    a,b,l,c=list(map(int,input().split()))\n    N.append((a,b,l))\nN.sort()\nS=set()\nfor i in range(len(N)):\n    if N[i][0]=='?':\n        S.add(N[i][1])\n        continue\n    a,b,l=N[i]\n    if a not in S:\n        S.add(a)\n        N[i]=('?',)+str(b)\n    else:\n        c=0\n        for j in S:\n            c+=min(l,j[1])\n        print(c)\n"}, "427": {"problem_id": 3427, "answer": "# cook your dish here\nfrom sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\nl=[0]*100000\nn=int(input())\nm=int(input())\nfor i in range(m):\n  a,b=map(int,input().split())\n  l[a-1]=b-1\nprint(max(l))"}, "428": {"problem_id": 3428, "answer": "n=int(input())\na=list(map(int,input().split()))\nd=[]\nfor i in range(n):\n    d.append(a[i]*(i+1))\nc=1\nfor i in range(1,n):\n    for j in range(i+1,n):\n        c=c*d[j]\nprint(c)"}, "429": {"problem_id": 3429, "answer": "import math\ndef f(x):\n return x*math.pow(x,3)-x\ndef g(x):\n return x*x*x\ns=input().split()\na=int(s[0])\nb=int(s[1])\nc=input().split()\nd=0\nfor i in range(2):\n if g(c[i])<g(c[i-1]):\n  d=i\n  break\nfor i in range(2):\n if g(c[i])<g(c[i-1]):\n  d=i\n  break\nprint(d)"}, "430": {"problem_id": 3430, "answer": "import sys\r\nn=int(input())\r\na=list(map(int,sys.stdin.readline().split()))\r\nm=int(input())\r\nb=list(map(int,sys.stdin.readline().split()))\r\nans=[]\r\nfor i in range(n-1):\r\n    ans.append([0]*m)\r\nfor i in range(m-1):\r\n    ans[i].append(0)\r\nfor i in range(n):\r\n    u,v=a[i]\r\n    ans[u].append(v)\r\n    ans[v].append(u)\r\nprint(sum(ans[1:])-sum(ans[2:]))"}, "431": {"problem_id": 3431, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nread = lambda: list(map(int, input().split()))\n\ndef main():\n n = read()\n d = dict()\n for i in range(n):\n  x, y = read()\n  d[(x, y)] = d.get((x, y), 0) + 1\n print(min(d.values()))\nmain()"}, "432": {"problem_id": 3432, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nfor _ in range(N):\n    A, B = map(int, input().split())\n    cnt = 0\n    for i in range(N):\n        if A < B:\n            cnt += 1\n        elif B < A:\n            cnt += 1\n        else:\n            cnt += 2\n    print(sum(list(range(A, B + 1)) for _ in range(cnt)))"}, "433": {"problem_id": 3433, "answer": "import collections\nr,c = map(int,input().split())\nl = []\nfor i in range(r):\n l.append(input())\nl.sort()\nans = [0]*r\ncnt = collections.Counter(l)\nfor i in c:\n if cnt[i] == 1:\n  ans[i] = 1\n else:\n  ans[i] = 0\nfor i in ans:\n print(i)"}, "434": {"problem_id": 3434, "answer": "def dice(n, m, d):\n if n == 1:\n  return 1\n if m == 1:\n  return 1\n if (n * dice(m, n - 1, d)) ** d > 1:\n  return 0\n return dice(n, m - 1, d)\n\nn, m, d = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(dice(n, m, d) * pow(1 - dice(n - 1, n - 1, d),.6) * pow(1 - dice(m - 1, m - 1, d),.6))\n"}, "435": {"problem_id": 3435, "answer": "n = int(input())\np = input()\nans = 0\nfor i in range(n):\n    if p[i]=='1':\n        ans+=1\nprint(ans)"}, "436": {"problem_id": 3436, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\n\nF = [0]*(10**5+1)\nfor i in range(1,10**5+1):\n    F[i] = F[i-1] + i\n\nfor __ in range(int(input())):\n    x, y = map(int, input().split())\n    print(F[x]%MOD)"}, "437": {"problem_id": 3437, "answer": "l1=int(input())\nl2=int(input())\nfor i in range(0,l1):\n    t=int(input())\n    if t<l1:\n        l1=t\n    elif t<l2:\n        l2=t\n    else:\n        print(\"Impossible\")\n"}, "438": {"problem_id": 3438, "answer": "import sys\nread = sys.stdin.readline\nreadline()\na,b=list(map(int,read().split()))\nd=[]\nfor i in range(10000):\n d.append(i)\ncache=0\nwhile a!=0:\n a-=1\n c=int(read())\n if c<0:\n  c=c-1\n  continue\n if d[c]!=c:\n  d[c].remove(d[c])\n  cache+=1\n else:\n  d[c].append(d[c][0])\n  cache+=1\n#print(d)\nfor i in range(b):\n if d[i]!=i:\n  d[i].remove(d[i])\n  cache+=1\nprint(cache)"}, "439": {"problem_id": 3439, "answer": "h, w = map()\na = []\nfor i in range(h):\n    a.append(int(input()))\na.sort()\nd = {(i, j): 0 for i in range(h)}\nfor i in range(h):\n    j = a[i]\n    for k in range(1, w):\n        if d[(i, k)] < 0:\n            d[(i, j)] = d[(i, k)] + w - j\n        elif d[(i, k)] > 0:\n            d[(i, j)] = w - j\n        else:\n            d[(i, j)] = 0\nprint(d[0][1])"}, "440": {"problem_id": 3440, "answer": "import sys\r\ninput = sys.stdin.readline\r\n\r\nn, r, (2, 3, 4) = list(map(int, input().split()))\r\nt = [tuple(map(int, input().split())) for _ in range(r)]\r\n\r\nans = []\r\nfor x in t:\r\n    ans.append(x[1])\r\n\r\nd = {}\r\nfor x in t:\r\n    d[x[0]] = d.get(x[0], 0) + x[1]\r\n\r\ndp = [0] * (n + 1)\r\ndp[0] = r\r\nfor x in t:\r\n    dp[x[0]] = min(dp[x[0]], r)\r\n    dp[x[1]] = max(dp[x[1]], r)\r\n\r\nfor x in t:\r\n    ans.append(dp[x[0]])\r\nprint(min(ans[-1], ans[-2]))\r\n"}, "441": {"problem_id": 3441, "answer": ""}, "442": {"problem_id": 3442, "answer": "import bisect as b\ndef is_prime(n):\n    i = 2\n    while i <= n:\n        if n % i == 0:\n            return 0\n        i += 1\n    return 1\na,b=list(map(int,input().split()))\ns=[]\nfor i in range(a):\n    s.append(i+1)\nfor i in range(b):\n    s.append(i+1)\nl=len(s)\nm=len(s)\nif l>m:\n    print(l*(l+1)//2)\nelse:\n    print(m*(m+1)//2)\n"}, "443": {"problem_id": 3443, "answer": "import math\ndef Dijkstra(lst):\n    dist = math.sqrt((pow(lst[0],2) + pow(lst[1],2)) - pow(lst[0],2))\n    dist = dist/2\n    d = dist\n    for i in range(2,len(lst)):\n        d = min(d,math.floor(math.sqrt(d) + 0.5))\n        dist = dist - d\n    return dist\nn = int(input())\nlst = []\nfor i in range(n):\n    x,y = map(int,input().split())\n    lst.append((x,y))\nDijkstra(lst)\nprint(min(lst))"}, "444": {"problem_id": 3444, "answer": "import sys\nreadline = sys.stdin.readline\n\nn,m = list(map(int,readline().split()))\nl = [list(map(int,readline().split())) for i in range(n)]\nl.sort()\ndp = [0]*n\nfor i in range(n):\n    dp[i] = 0\n    for j in range(i+1,n):\n        if l[i][0]<l[j][0] and l[i][1]<l[j][1]:\n            dp[i]+=dp[j]\n            dp[j] = 0\nprint(\"\\n\".join(map(str,dp)))"}, "445": {"problem_id": 3445, "answer": "import math\ndef __starting_point():\n n=int(input())\n a=[]\n for i in range(n):\n  x,y=list(map(int,input().split()))\n  a.append((x,y))\n a.sort()\n b=[]\n for i in range(n):\n  x,y=list(map(int,input().split()))\n  b.append((x,y))\n print(max(b))\n__starting_point()"}, "446": {"problem_id": 3446, "answer": "from collections import defaultdict as dd\ninput = lambda: list(map(int, input().split()))\nINF = 10**9+7\nk = int(input())\na = []\nfor i in range(k):\n    t, r = INF, INF\n    for j in range(i, min(k+1, len(input()))):\n        s, c = input().split()\n        t = min(t, float(s[0])+float(c))\n        r = min(r, float(s[1]))\n        a.append((t, r))\na.sort(key=lambda x: x[0], reverse=True)\nprint(*a[0], sep='\\n')"}, "447": {"problem_id": 3447, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\ndictionary = {}\nfor i in range(n):\n    word = list(map(str, readline().split()))\n    if word[0] not in dictionary:\n        dictionary[word[0]] = word[1]\n    else:\n        dictionary[word[0]].append(word[1])\n#print(dictionary)\nq = int(readline())\nfor _ in range(q):\n    s = list(map(str, readline().split()))\n    print('U' * len(s))\n    if s[0] == 'R':\n        print('R')\n    elif s[0] == 'D':\n        print('D')\n    else:\n        print('.')"}, "448": {"problem_id": 3448, "answer": "from sys import stdin\ninput = stdin.readline\nn, k = map(int, input().split())\nans = []\nfor i in range(1, n+1):\n    ans.append([str(i)])\nfor i in range(k):\n    m, e = list(map(int, input().split()))\n    ans[m][1] -= 1\n    ans[e][1] -= 1\n    if ans[m][1] < 0 and ans[e][1] < 0:\n        print(\"NO\")\n        continue\n    elif ans[m][1] > 0 and ans[e][1] > 0:\n        print(\"\\n\".join(map(str, ans[m][1:])))\n        continue\n    else:\n        print(\"YES\")\n        ans[m][1] += 1\n        ans[e][1] += 1\n"}, "449": {"problem_id": 3449, "answer": "import math\ndef main():\n    b=int(input())\n    h=int(input())\n    r=list(map(int,input().split()))\n    lights=[]\n    for i in range(r):\n        lights.append(int(input()))\n    lights.sort()\n    ans=0\n    for i in range(len(lights)):\n        if lights[i]>b:\n            ans+=math.pow(9-i,2)\n    print(ans)\nmain()"}, "450": {"problem_id": 3450, "answer": "n=int(input())\nif n<2:\n    print(0)\nelse:\n    zeroes=['0','1','2','3','4','5','6','7','8','9']\n    ans=0\n    for i in range(n):\n        if i%3==0:\n            ans+=int(str(i)[1:len(str(i))-2])\n    print(ans)"}, "451": {"problem_id": 3451, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\ns = input()\nc = list(map(int, input().split()))\n\nblacksquare = [0]*(n+1)\nwhitesquare = [0]*(n+1)\n\nfor i in range(1, n+1):\n blacksquare[i] = c[i]\n whitesquare[i] = c[i]\n\nans = 0\nblack = 0\nwhite = 0\nmoves = 0\np = -1\nfor i in range(n):\n if s[i] == '(':\n  black += 1\n elif s[i] == ')':\n  white += 1\n else:\n  moves += 1\n  ans += min(blacksquare[i] + whitesquare[i], moves)\n  black += 1\n  white += 1\n\nif k > 0:\n if black > 0:\n  print('?')\n  return\n if white > 0:\n  print('?')\n  return\n\nans += min(blacksquare[p] + whitesquare[p], moves)\np += 1\n\nprint(ans)"}, "452": {"problem_id": 3452, "answer": "from collections import defaultdict as dd\r\ndef solve():\r\n    n=int(input())\r\n    m=[]\r\n    for i in range(n):\r\n        m.append(list(map(int,input().split())))\r\n    ans=dd(list)\r\n    print(*ans[1:],sep='\\n')\r\n    return\r\nsolve()\r\n"}, "453": {"problem_id": 3453, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = list(map(int, input().split()))\nR = [0] * N\nfor i in range(M):\n    A, B, L = list(map(int, input().split()))\n    R[A-1] += L\n    R[B-1] += L\n\nprint(*R)\n"}, "454": {"problem_id": 3454, "answer": ""}, "455": {"problem_id": 3455, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nl=[]\nn,m,r=map(int,input().split())\nfor _ in range(m):\n    l.append(list(map(int,input().split())))\nl.sort()\nans=[]\nfor i in range(n-1):\n    ans.append(l[i][0] + l[i][1] - r)\nprint(\"%g\"%max(ans))"}, "456": {"problem_id": 3456, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n    b.append(a[i])\nprint(min(3, len(b)))"}, "457": {"problem_id": 3457, "answer": "import sys\ninput = sys.stdin.readline\nn,x,y=list(map(int,input().split()))\nprime=[1 for i in range(n+1)]\nfor i in range(2,int(n**0.5)+1):\n if n%i==0:\n  prime[i]=0\nprime[i]+=1\nans=0\nfor i in range(1,n+1):\n if n%i==0:\n  if prime[i]==0:\n   ans+=1\n  elif i!=n//i:\n   ans+=2*prime[i]\n   prime[i]-=2\nprint(ans%1000000007)\n"}, "458": {"problem_id": 3458, "answer": "import sys\ninput = sys.stdin.readline\n\nn=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n    s^=a[i]\n    xor=sum(a[i]^s)\n    if xor>s:\n        s^=a[i]\nprint(s)"}, "459": {"problem_id": 3459, "answer": "t = int(input())\nfor _ in range(t):\n n = int(input())\n l = []\n for i in range(n):\n  l.append(input().split())\n l.sort(key=lambda x:int(x[1]))\n print(' '.join(l))\n"}, "460": {"problem_id": 3460, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(input())\nans = []\nfor i in range(n):\n a, b = map(int, input().split())\n ans.append((a + b) * min(r, 10**9))\nprint(' '.join(map(str, ans)))"}, "461": {"problem_id": 3461, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\nlist1=[tuple(map(int,input().split())) for i in range(n)]\nlist2=[]\nlist3=[]\nfor i in range(n):\n    list2.append([list1[i][2],list1[i][1],list1[i][0]])\n    list3.append([list1[i][3],list1[i][2],list1[i][1]])\ns=list1[0][1]\na=list1[0][0]\nb=list1[0][2]\nk=0\nfor i in range(1,n):\n    if list2[i][1]>s:\n        s=list2[i][1]\n        k+=1\nprint(k/n)"}, "462": {"problem_id": 3462, "answer": "import sys\nreadline = sys.stdin.readline\ns = readline().rstrip()\np = list(s)\nn = int(s)\nfor i in range(n):\n p[i] = readline().rstrip()\nprint('\\n'.join(p))"}, "463": {"problem_id": 3463, "answer": "import sys\nreadline = sys.stdin.readline\nn,m = map(int,readline().split())\npoints = [0]*n\nfor i in range(n):\n    points[i]+=1\nans = 0\nfor i in range(1,n+m-1):\n    ans+=points[i]*(1-pow(10,i))\nprint(ans)"}, "464": {"problem_id": 3464, "answer": "import math\nd=float(\"inf\")\nfor i in range(1,100):\n d=math.floor(i/100.0*49.9)\n if d>=20:\n  d-=3.2\n print(d*0.01)"}, "465": {"problem_id": 3465, "answer": "n=int(input())\na=[]\nfor i in range(n):\n    a.append(list(map(int,input().split())))\nans=[]\nfor i in range(n):\n    ans.append(a[i][1]+1)\nfor i in range(n):\n    for j in range(i+1,n):\n        if ans[i]!=ans[j]:\n            ans[i]=ans[j]\nprint(*ans)"}, "466": {"problem_id": 3466, "answer": "m,k=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\na.sort()\nb.sort()\nif 0 in a:\n    print(0)\nelif k==0:\n    print('forever')\nelse:\n    c=0\n    for i in range(1,m):\n        if a[i]!=k:\n            c+=a[i]\n            a[i]=k-a[i]\n            b[i]=k\n            k-=a[i]\n    print(c)"}, "467": {"problem_id": 3467, "answer": "import bisect\nn,m,s=map(int,input().split())\nL=[]\nfor i in range(m):\n u,v,t0,p,d=map(int,input().split())\n L.append((u,v,t0,p,d))\n if s>=n-1:\n  L.append((n-1,i,0,0,0))\n else:\n  L.append((s,i,0,0,0))\n T=[]\n for i in L:\n  T.append(bisect.bisect_left(i,L[i][1]))\n print(min(T))"}, "468": {"problem_id": 3468, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, c = map(int, readline().split())\np = [0] * (10000) + [c]\nfor i in range(1, n+1):\n    p[i] += p[i-1]\nans = 0\ndisk = 0\nfor i in range(len(p)):\n    if p[i] < c:\n        ans += 1\n        disk += p[i]\n    elif p[i] > c:\n        ans += 1\n        disk += c\nprint(ans)\n"}, "469": {"problem_id": 3469, "answer": "g = input()\nk = input()\na = 0\nb = 0\nflip = 0\nwhile True:\n if g.startswith(k):\n  a += 1\n elif g[-1] == 'H':\n  flip += 1\n else:\n  b += 1\n if abs(a-b) < 1e-6:\n  print(a)\n  break\n"}, "470": {"problem_id": 3470, "answer": "import sys\nimport math\ndef mine(x,y,n):\n    nonlocal x,y,n\n    if x<0 or y<0 or x>4*n or y>4*n:\n        return False\n    elif x==0 and y==0:\n        return True\n    elif x==4*n-1 and y==0:\n        return True\n    elif x==4*n-1 and y==4*n-1:\n        return True\n    elif x==0 and y==0:\n        return True\n    elif x==4*n-1 and y==4*n-1:\n        return True\n    else:\n        return False\nn=int(input())\nans=0\nfor i in range(0,4*n+4):\n    if mine(i,i+1,n):\n        ans+=1\nprint(ans)"}, "471": {"problem_id": 3471, "answer": "import sys\ninput = sys.stdin.readline\nk = int(input())\nl = list(map(int,input().split()))\nq = int(input())\nfor _ in range(q):\n    a,b = list(map(int,input().split()))\n    l[a-1] ^= b-1\n    l[b-1] ^= a-1\nprint(\"\".join(l))"}, "472": {"problem_id": 3472, "answer": "import sys\ninput = sys.stdin.readline\n\nw,n = map(int,input().split())\nlines = []\nfor i in range(n):\n    x,y,z,w = map(int,input().split())\n    lines.append((x,y,z,w))\n\nlines.sort()\nans = 0\nfor i in range(len(lines)):\n    if lines[i][0]>lines[i][1]:\n        ans+=1\n\nprint(ans)"}, "473": {"problem_id": 3473, "answer": "import bisect\ndef check():\n    a=[]\n    b=[]\n    for i in range(12):\n        a.append(int(input()))\n        b.append(int(input()))\n    a.sort()\n    b.sort(reverse=True)\n    ans=0\n    for i in range(1,1001):\n        ans+=abs(a[i]-b[i])**2\n    print(ans)\ncheck()"}, "474": {"problem_id": 3474, "answer": "import bisect\ninput=lambda:list(map(int,input().split()))\nl=[]\nfor i in range(len(input())):\n x1,y1,x2,y2,x3,y3=input()\n l.append((x1,y1,x2,y2,x3,y3))\nl.sort()\nd=dict(zip(l,input()))\nans=[]\nfor i in d:\n print(i[2])\n"}, "475": {"problem_id": 3475, "answer": "import numpy as np\nt=int(input())\nl=[]\nfor _ in range(t):\n    x,y=map(int,input().split())\n    l.append((x,y,0))\nl.sort()\nn=int(input())\nl=np.array(l)\nk=0\nfor i in range(n-1):\n    d,h=map(int,input().split())\n    l[i][0]-=d\n    l[i][1]-=h\n    if l[i][0]<0:\n        break\n    k+=1\nif k>0:\n    print(\"IMPOSSIBLE\")\nelse:\n    print(\"IMPOSSIBLE\")"}, "476": {"problem_id": 3476, "answer": "import sys\r\nimport math\r\nfrom collections import defaultdict, deque\r\ninput = sys.stdin.readline\r\ndef I(): return int(input())\r\ndef MI(): return list(map(int, input().split()))\r\ndef LI(): return list(map(int, input().split()))\r\nR, C = MI()\r\nA = [0] * R + [0] * C\r\nfor _ in range(R):\r\n    n = MI()\r\n    A[n[0] - 1] ^= (-1)**(n[1] - 1)\r\nfor _ in range(C):\r\n    m = MI()\r\n    B = [0] * C\r\n    for i in range(m[0] + 1, m[0] + m[1] + 1):\r\n        B[i] ^= (-1)**(m[1] - 1)\r\n    for i in range(m[0] + m[1] + 1):\r\n        for j in range(C):\r\n            A[j] *= B[i]\r\nprint(sum(A) // 2, len(A) % 2)"}, "477": {"problem_id": 3477, "answer": "import bisect\nn,m=list(map(int,input().split()))\nk=sorted(map(int,input().split()),reverse=True)[:n]\nk.sort()\nans=0\nfor i in range(m):\n  ans+=(k[i]**2)\nprint(ans)"}, "478": {"problem_id": 3478, "answer": "# cook your dish here\nfrom collections import deque\nd = deque([1,2])\nn,m = [int(i) for i in input().split()]\nwhile d:\n    x,y = d.popleft()\n    d.append(x)\n    d.append(y)\ns = \" \".join(str(i) for i in range(1,n+1))\nif n%2:\n    print(s)\n    return\nprint(\" \".join(str(i) for i in range(1,n+1)))\n"}, "479": {"problem_id": 3479, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\narr = []\nfor i in range(n):\n    arr.append(int(readline()))\n\narr.sort()\nm = 0\nfor i in range(n):\n    if arr[i] - arr[i - 1] > k:\n        m = i + 1\n    elif arr[i] - arr[i - 1] == k:\n        m = i + 1\nprint(m)\n"}, "480": {"problem_id": 3480, "answer": "import sys\nread = sys.stdin.readline\nl = int(read())\nfor i in range(l):\n count,del = list(map(int,read().split()))\n count1,del1 = list(map(int,read().split()))\n count2,del2 = list(map(int,read().split()))\n if count == 1:\n  print(\"/\\n\".join(del1))\n elif count == 2:\n  print(\"/\\n\".join(del2))\n else:\n  s1 = \"\".join(del1)\n  s2 = \"\".join(del2)\n  if len(s1) == len(s2):\n   print(\"/\")\n  else:\n   for i in range(len(s1)):\n    if s1[i] == s2[i]:\n     print(i,end=\"_\")\n    else:\n     print(i,end=\"_\",end=\" \")"}, "481": {"problem_id": 3481, "answer": "from operator import itemgetter\r\ngigs = int(input())\r\nv,r,k,l = map(int,input().split())\r\noffer = [tuple(map(int,input().split())) for i in range(r)]\r\nans = 0\r\nfor v,r,k,l in offer:\r\n    ans += max(0,l-k+1)\r\nprint(ans)"}, "482": {"problem_id": 3482, "answer": "import math\ndef read_data():\n    return int(input().strip(), 2)\ndef read_ints():\n    return list(map(int, input().strip().split(' ')))\ndef read_int_array(n):\n    return list(map(int, input().strip().split(' ')))\ndef __starting_point():\n    l = read_data()\n    d = read_ints()\n    cnt = 0\n    for i in range(l-1):\n        d += read_ints()\n        cnt += d[i]\n    print(math.ceil((l-1)/cnt) * 1000)\n__starting_point()"}, "483": {"problem_id": 3483, "answer": "import math\nn=int(input())\nl=list(map(int,input().split()))\na=math.sqrt(sum(l))\nprint(max(l)*4.0/a)\nprint(min(l)*4.0/a)\nprint(\"{:.4f}\".format(expected(l)))"}, "484": {"problem_id": 3484, "answer": "import sys\ninput = sys.stdin.readline\nT = int(input())\nAns = []\nfor _ in range(T):\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n    if K == 1:\n        Ans.append(\"1\\n\")\n    elif K == 2:\n        Ans.append(\"2\\n\")\n    else:\n        Ans.append(\"3\\n\")\n        Ans.append(\"1\\n\" + \"2\\n\" + \"3\\n\" + \"4\\n\")\n        Ans.append(\"5\\n\")\n        Ans.append(\"1\\n\" + \"2\\n\" + \"3\\n\" + \"4\\n\" + \"5\\n\")\n        Ans.append(\"6\\n\")\n        Ans.append(\"1\\n\" + \"2\\n\" + \"3\\n\" + \"4\\n\" + \"5\\n\" + \"6\\n\")\n        Ans.append(\"7\\n\")\n        Ans.append(\"1\\n\" + \"2\\n\" + \"3\\n\" + \"4\\n\" + \"5\\n\" + \"6\\n\" + \"7\\n\")\n        Ans.append(\"8\\n\")\n        Ans.append(\"1\\n\" + \"2\\n\" + \"3\\n\" + \"4\\n\" + \"5\\n\" + \"6\\n\" + \"7\\n\" + \"8\\n\")\n        Ans.append(\"9\\n\")\n        Ans.append(\"1\\n\" + \"2\\n\" + \"3\\n\" + \"4\\n\" + \"5\\n\" + \"6\\n\" + \"7\\n\" + \"8\\n\" + \"9\\n\")\n        Ans.append(\"10\\n\")\n        Ans.append(\"1\\n\" + \"2\\n\" + \"3\\n\" + \"4\\n\" + \"5\\n\" + \"6\\n\" + \"7\\n\" + \"8\\n\" + \"9\\n\" + \"10\\n\")\n        Ans.append(\"11\\n\")\n        Ans.append(\"1\\n\" + \"2\\n\" + \"3\\n\" + \"4\\n\" + \"5\\n\" + \"6\\n\" + \"7\\n\" + \"8\\n\" + \"9\\n\" + \"10\\n\" + \"11\\n\")\n        Ans.append(\"12\\n\")\n        Ans.append(\"1\\n\" + \"2\\n\" + \"3\\n\" + \"4\\n\" + \"5\\n\" + \"6\\n\" + \"7\\n\" + \"8\\n\" + \"9\\n\" + \"10\\n\" + \"11\\n\" + \"12\\n\")\n        Ans.append(\"13\\n\")\n        Ans.append(\"1\\n\" + \"2\\n\" + \"3\\n\" + \"4\\n\" + \"5\\n\" + \"6\\n\" + \"7\\n\" + \"8\\n\" + \"9\\n\" + \"10\\n\" + \"11\\n\" + \"12\\n\" + \"13\\n\")\n        Ans.append(\"14\\n\")\n        Ans.append(\"1\\n\" + \"2\\n\" + \"3\\n\" + \"4\\n\" + \"5\\n\" + \"6\\n\" + \"7\\n\" + \"8\\n\" + \"9\\n\" + \"10\\n\" + \"11\\n\" + \"12\\n\" + \"13\\n\" + \"14\\n\")\n        Ans.append(\"15\\n\")\n     "}, "485": {"problem_id": 3485, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nc = 0\nfor i in range(n):\n    b[i] = a[i] + b[i-1]\n    c += b[i]\nprint(c/n)"}, "486": {"problem_id": 3486, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nn = int(input())\nA = defaultdict(int)\nfor i in range(n):\n    A[int(input())] += 1\nB = A.copy()\nB.pop(A[2])\nM = 10**9+7\nans = 0\nfor i in B:\n    if i == 1:\n        ans+=1\n    elif i % 2 == 0:\n        ans+=2\n    else:\n        ans+=1\nprint(ans%M)"}, "487": {"problem_id": 3487, "answer": ""}, "488": {"problem_id": 3488, "answer": "import sys\r\ndef inp(): return sys.stdin.readline().strip()\r\ndef out(var, end=\"\\n\"): sys.stdout.write(str(var)+\"\\n\")\r\ndef outa(*var, end=\"\\n\"): out(map(int, var), end)\r\ndef lmp(): return list(map(int, inp().split()))\r\ndef smp(): return list(map(int, inp().split()))\r\ndef lmpts(): return list(smp())\r\ndef mt(n, start=\"O\"):\r\n  if start == \"O\":\r\n   return n\r\n  end = inp()[start]\r\n  mt(n-1, end)\r\ndef vinp(): return sys.stdin.readline().strip()\r\ndef lmp2(): return list(map(int, vinp().split()))\r\ndef smp2(): return list(map(int, vinp().split()))\r\ndef lmpts2(): return list(smp2())\r\ndef mt2(n, start=\"O\"):\r\n  if start == \"O\":\r\n   return n\r\n  end = inp()[start]\r\n  mt2(n-1, end)\r\nINF = 10**18\r\nmod = 10**9 + 7\r\nn = int(inp())\r\ncnt = 0\r\nfor _ in range(n):\r\n  x, y = inp()\r\n  if x+y <= INF:\r\n   cnt += 1\r\nprint(cnt)"}, "489": {"problem_id": 3489, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn,h=list(map(int,readline().split()))\na=[]\nfor i in range(n-1):\n  a.append(tuple(map(int,readline().split())))\n\ns=0\nc=0\nd=0\nfor i in range(n-1):\n  if a[i][0]==a[i+1][0]:\n    s+=1\n    c+=1\n  else:\n    pass\n \n \nwhile c<n:\n  if a[d][0]==a[d+1][0]:\n    s+=1\n    c+=1\n  d+=1\n  \nprint(s)\n\nsys.stdout.write('\\n'.join(map(str,read().split())))"}, "490": {"problem_id": 3490, "answer": "from sys import stdin,stdout\ninput=stdin.readline\n#N=int(input())\n#a,b=[],[],[]\nfor _ in range(int(input())):\n x,y,r=map(int,input().split())\n a=list(map(int,input().split()))\n b=list(map(int,input().split()))\n if sum(a)>sum(b):\n  print(\"ok\")\n else:\n  d=abs(sum(a)-sum(b))\n  if d%2==0:\n   print(\"crash\")\n  else:\n   print(\"ok\")"}, "491": {"problem_id": 3491, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nA=[0]*t\nfor i in range(t):\n    n,m=map(int,input().split())\n    A[n-1]=m\n    A[n]=0\nans=[]\nfor i in range(t):\n    ans.append(str(A[i]%n))\nprint('\\n'.join(ans))"}, "492": {"problem_id": 3492, "answer": "from collections import defaultdict as dd\nimport sys\ninput=sys.stdin.readline\nreadint=lambda:int(input())\nreadintl=lambda:list(map(int,input().split()))\nreadstr=lambda:input().strip()\nreadall=lambda:list(map(int,input().split()))\ns=readint()\nr=s//10\ng=s%10\nt=s//10**2\nm=dd(int)\nfor i in range(r):\n    m[i]+=1\nfor i in range(g):\n    m[i]+=1\nfor i in range(t):\n    m[i]+=1\nc=0\nfor i in range(r):\n    if m[i]==1:\n        c+=1\nprint(c)"}, "493": {"problem_id": 3493, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = []\nfor i in range(n):\n    a = input().split()\n    if a[0] == 'Y':\n        ans.append(int(a[1]))\n    else:\n        ans.append(int(a[1]))\nprint(max(ans))\nprint(' '.join(map(str, ans)))"}, "494": {"problem_id": 3494, "answer": "R,S=list(map(int,input().split()))\nA=[]\nfor i in range(R):\n    A.append([])\nfor j in range(S):\n    A[j].append([])\nfor i in range(R):\n    a=input().split()\n    a[i[0]].append(int(a[i[1]][0]))\n    a[i[1]].append(int(a[i[0]][1]))\n#print(A)\nM=[[0 for i in range(R)] for j in range(S)]\nfor i in range(R):\n    for j in range(S):\n        M[i][j]=(M[i-1][j]*2)+A[i][j][0]\n        M[i][j]%=16\nfor i in range(1,R):\n    for j in range(S):\n        M[i][j]=(M[i-1][j]*2)+A[i][j][0]\n        M[i][j]%=16\nans=0\nfor i in range(R):\n    ans+=M[i][i]\nprint(ans)\n"}, "495": {"problem_id": 3495, "answer": "from math import *\nl = [int(i) for i in input().split()]\nl.sort()\nn = int(l[0])\nd = []\nfor i in range(1,n):\n    d.append(l[i])\nx = d[0]\ny = d[1]\nans = \"\".join(map(str,x,y))\nprint(\" \".join(ans))"}, "496": {"problem_id": 3496, "answer": "import numpy as np\nn,q=list(map(int,input().split()))\na=np.array([int(i) for i in input().split()])\nb=np.array([int(i) for i in input().split()])\na.fill(0)\nb.fill(-1)\nans=0\nfor i in range(1,10**6+1):\n if a[i]>b[i]:\n  ans+=a[i]*2\n elif a[i]==b[i]:\n  ans+=a[i]*2\n else:\n  ans+=b[i]*2\nprint(ans)\n"}, "497": {"problem_id": 3497, "answer": "from collections import deque\ninput = lambda: list(map(int, input().strip().split()))\nV, P = input()\nedges = []\nfor i in range(V):\n  edges.append([])\nfor i in range(P):\n  u, v = input().split()\n  u -= 1\n  v -= 1\n  edges[u].append(v)\n  edges[v].append(u)\nvisited = [False] * V\nqueue = deque([0])\nwhile queue:\n  curr = queue.popleft()\n  for to, adj in edges[curr]:\n    if visited[to] == False:\n      visited[to] = True\n      queue.append(to)\nprint(sum(visited))"}, "498": {"problem_id": 3498, "answer": "import math\nt,r=list(map(int,input().split()))\nwhile(t!=0):\n t-=1\n b,a,s=list(map(int,input().split()))\n t+=1\n l=[]\n u=[]\n lock=0\n unlock=0\n for i in range(a):\n  l.append(input().rstrip())\n for i in range(1,r):\n  if(l[i]=='C'):\n   lock+=1\n  elif(l[i]=='L'):\n   unlock+=1\n  else:\n   if(unlock>=lock):\n    unlock+=1\n   else:\n    lock+=1\n if(unlock>=lock):\n  print(int(math.log2(max(l)+1))+1)\n else:\n  print(int(math.log2(max(l)+1)))\n"}, "499": {"problem_id": 3499, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().strip()\n\ndp = [[0] * 26 for _ in range(n)]\ndp[0][0] = 1\nfor i in range(1, n):\n    for j in range(26):\n        dp[i][j] = dp[i - 1][j - s[i - 1]] + dp[i - 1][j]\n        if j > i - 2:\n            dp[i][j] = pow(2, i - 1) - pow(2, j - s[i - 1])\n        elif j == i - 2:\n            dp[i][j] = dp[i - 1][j - s[i - 2]] + dp[i - 1][j]\n        else:\n            dp[i][j] = dp[i - 1][j - s[i - 2]] + dp[i - 1][j] + dp[i - 1][j - s[i - 2]]\nprint(dp[n - 1][n - 1])"}, "500": {"problem_id": 3500, "answer": "import sys\r\ninput = sys.stdin.readline\r\nn=int(input())\r\nans=[]\r\nfor i in range(n):\r\n  a=list(map(int,input().split()))\r\n  ans.append(a)\r\nprint(*ans,sep='\\n')"}, "501": {"problem_id": 3501, "answer": "from collections import deque\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=deque()\nc.append(a[0])\nfor i in range(1,n):\n    if a[i]==b[i]:\n        c.append(a[i])\n    else:\n        c.popleft()\nans=0\nfor i in range(n):\n    ans+=c.popleft()*(len(c)-1)\nprint(ans)"}, "502": {"problem_id": 3502, "answer": "import bisect as b\ninput = lambda:int(input())\nn = int(input())\nl = []\nfor i in range(n):\n    x, r, g = map(int, input().split())\n    l.append((x, r, g))\nl.sort()\nans = 0\nfor i in range(n):\n    b.insort(l, b.kruskal_sort(l))\n    ans += (l[i][0] - l[i][1])**2\nprint(ans/2)\nprint(ans/l[0][1])"}, "503": {"problem_id": 3503, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nanswers = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    answers.append((a, '-'))\n    answers.append((b, '*'))\n\nfor answer in answers:\n    answers[answer[0]][answer[1]] = answer[2]\n\nfor answer in answers:\n    print(answers[answer[0]][answer[1]], end=\"\")\n    print(\" \".join(answers[answer[0]][answer[1]]))"}, "504": {"problem_id": 3504, "answer": "import bisect\nd = 1\ns = 1\nx = [int(i) for i in input().split()]\ny = [int(i) for i in input().split()]\nn = len(x)\nm = len(y)\nL = [[0] * n for i in range(m)]\nR = [[0] * n for i in range(m)]\nfor i in range(d):\n    L[0][i] = x[i]\nfor i in range(s):\n    S = y[i]\n    flag = False\n    for j in range(1, 100):\n        if L[j][i] > L[j - 1][i]:\n            flag = True\n            break\n    if flag:\n        R[0][i] = y[i]\nprint(' '.join(map(str, R[0][i])))"}, "505": {"problem_id": 3505, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n  for j in range(i+1, n):\n    for k in range(j+1, n):\n      if i!=j and j!=k and k!=i:\n        ans += 1\nprint(ans)"}, "506": {"problem_id": 3506, "answer": "# cook your dish here\nn, t, m = map(int, input().split())\nS = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    S.append((a, b + 1))\nS.sort()\nspo = 0\nspo_s = 0\nans = 0\nfor i in range(n):\n    if spo > t - i:\n        ans += spo_s\n        spo_s = 0\n    elif spo + i < t - i:\n        ans += spo_s\n        spo_s = 0\n    else:\n        if spo_s > t - i:\n            ans += spo_s\n            spo_s = 0\n        else:\n            if spo_s + i < t - i:\n                ans += spo_s\n                spo_s = 0\n            else:\n                if spo_s + i < t - i:\n                    ans += spo_s\n                    spo_s = 0\nprint(ans, end = \" \")\n"}, "507": {"problem_id": 3507, "answer": "import sys\ninput = sys.stdin.readline\nR,W,d=list(map(int,input().split()))\nans=1000000007\nwhile(ans):\n  ans>>=1\n  ans+=W\n  ans+=R>>1\nprint(ans)"}, "508": {"problem_id": 3508, "answer": "import sys\ninput = sys.stdin.readline\n \nn=int(input())\na=list(map(int,input().split()))\n \ndef main():\n ans=0\n for i in range(1,n):\n  ans=max(ans,a[i]-1000*sum(a[:i]))\n print(ans)\n \nmain()"}, "509": {"problem_id": 3509, "answer": "from operator import itemgetter\r\na,b=list(map(int,input().split()))\r\nn,m=list(map(int,input().split()))\r\ndef dist(a,b):\r\n    return abs(a-b)\r\ng=[0]*n\r\nvisited=set()\r\nfor i in range(n):\r\n    g[i]=set()\r\n    visited.add(i)\r\nans=[dist(1,i) for i in range(n)]\r\nfor i in range(m):\r\n    u,v,t=list(map(int,input().split()))\r\n    if u!=v:\r\n        g[u].add(v)\r\n        g[v].add(u)\r\n        ans[u]+=t\r\n    elif t==1:\r\n        dist(u,v)\r\n        ans[v]+=1\r\nprint('\\n'.join(map(str,ans)))\r\n"}, "510": {"problem_id": 3510, "answer": "import sys\ninput = sys.stdin.readline\n\nM=10**9+7\nmasks={0:0}\nfor i in range(1,1000000):\n    M=M*2+masks[i]\n    if M not in masks:\n        masks[M]=(i+1)\nprint(\"\\n\".join(map(str,masks)))\n"}, "511": {"problem_id": 3511, "answer": "import sys\nn, q = map(int, input().split())\nm = 10**9+7\na = [0]*n\nfor i in range(n):\n  a[i] = int(input())\nb = [0]*n\nfor i in range(n):\n  b[i] = int(input())\np = []\nfor i in range(n):\n  p.append(a[i]**2)\nfor i in range(n):\n  p.append(b[i]**2)\ns = 0\nfor i in range(n):\n  s += p[i]\nprint(s*(1.0*m)%m)"}, "512": {"problem_id": 3512, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nn = int(input())\na = [int(x) for x in input().split()]\nd = {i:[] for i in range(n)}\nfor i in range(n):\n    d[a[i]] = [i] + list(map(int, input().split()))\nq = []\nvisited = set()\ns = 0\nfor i in range(n):\n    if d[i]:\n        visited.add(i)\n        q.append(i)\nq.sort()\nans = 0\nfor i in range(len(q)):\n    if bl(q[i]) < s:\n        ans = br(ans, q[i])\n        s = bl(s, q[i])\nprint(ans)"}, "513": {"problem_id": 3513, "answer": "import math\nx=int(input())\nl=[]\nfor i in range(1,x+1):\n    l.append(i)\nprint(sum(l))"}, "514": {"problem_id": 3514, "answer": "R = int(input())\nans = 0\nfor i in range(R):\n    c = input()\n    if c[0]==\"x\":\n        ans += 1\n    elif c[0]==\".\":\n        ans -= 1\nprint(ans)"}, "515": {"problem_id": 3515, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ny = []\nfor i in range(n):\n    y.append(list(map(int,input().split())))\nd = {}\nfor i in range(n):\n    d[y[i][2]] = i+1\nans = [-1]*n\nans[1] = 0\nfor i in range(n-2):\n    t = abs(y[i+1]-y[i])\n    if t<d[y[i][2]]+r[y[i+1]]:\n        ans[i+1] = t+d[y[i][2]]+r[y[i+1]]\n    else:\n        ans[i+1] = -1\nprint(*ans)\n"}, "516": {"problem_id": 3516, "answer": "n=int(input())\na=[]\nfor i in range(n):\n    a.append(list(map(int,input().split())))\nans=min(a[0][0],a[-1][0])\nfor i in range(1,n):\n    ans=min(ans,a[i][0]+(a[i-1][1] if i else 10**9+a[i-1][1]))\nprint(ans)"}, "517": {"problem_id": 3517, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nM = 10**5+7\nN = int(input())\nl = [int(x) for x in input().split()]\nl.sort()\ndef f(x):\n nonlocal M,N\n return x[0]*(x[1]!=1) + max(0,br(l,x[1]))*x[2]\nans = 10**18\nfor i in range(1,N):\n ans = min(ans,f(l[i]))\nprint(ans)"}, "518": {"problem_id": 3518, "answer": "n, m = map(int, input().split())\np, q, c = list(map(int, input().split()))\ng = [[] for i in range(n)]\nfor i in range(m):\n p, q, c = map(int, input().split())\n g[p].append(q)\ng[q].append(p)\nans = 10**9\nfor i in range(1, n):\n if g[i]:\n  ans = min(ans, g[i][0]*c + g[i][1]*c)\nprint(ans)"}, "519": {"problem_id": 3519, "answer": "from math import *\nl=list(map(int,input().split()))\na=l[0]\nb=l[1]\nif(a==b):\n print(0)\nelse:\n print(a/b)"}, "520": {"problem_id": 3520, "answer": "import math\nn, p, c = map(int, input().split())\nt = 0.0\nfor i in range(n-1):\n    t += p*math.floor(t/c)\n    t %= c\n    p *= 2\nprint(t+math.log(1.0e-6))"}, "521": {"problem_id": 3521, "answer": "from math import *\nn = int(input())\nfor i in range(n):\n t,s,a = list(map(int,input().split()))\n t = t*10\n s = abs(s)\n a = a*10**(1/2)\n ans = max(0,t-s*dist)\n print(ans)\n"}, "522": {"problem_id": 3522, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nA=list(map(int,input().split()))\nB=tuple(map(int,input().split()))\nfor i in range(t):\n    A[i]+=B[i]\nprint(min(A))"}, "523": {"problem_id": 3523, "answer": "import sys\ninput = sys.stdin.readline\n\np = int(input())\ncoins = list(map(int, input().split()))\nc = 0\nfor i in range(0,len(coins)):\n    if coins[i] == 1:\n        c += 1\n    elif coins[i] == 5:\n        c += 1\n    elif coins[i] == 10:\n        c += 1\n    else:\n        c += 1\nprint(c)"}, "524": {"problem_id": 3524, "answer": "s = input()\ns1 = input()\ns2 = input()\nans = []\nfor i in range(len(s)):\n    if s[i] == s1[i]:\n        ans.append(i)\n    elif s[i] == s2[i]:\n        ans.append(i)\nif len(ans) == 1:\n    print(\"yes\")\nelse:\n    print(\"no\")"}, "525": {"problem_id": 3525, "answer": "import sys\ninput = sys.stdin.readline\n \nn,l,b=list(map(int,input().split()))\nrooms=[[int(i) for i in input().split()] for _ in range(n)]\nrangelinks=[[int(i) for i in input().split()] for _ in range(l)]\nbadges=[[0]*b for i in range(n)]\n \ndef isPossible(x,y):\n    return x>=0 and x<l and y>=0 and y<n\n \nfor i in range(n):\n    for j in range(b):\n        if i==j:\n            continue\n        else:\n            rooms[i][j]=min(rooms[i][j],1+rooms[i][j-1])\n            rangelinks[i][j]=min(rangelinks[i][j],1+rangelinks[i][j-1])\n            if isPossible(rooms[i][j],rangelinks[i][j]):\n                badges[i][j]=badges[i][j-1]+1\nprint(len(set(badges[l-1])))\n"}, "526": {"problem_id": 3526, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn,m=map(int,input().split())\nhints=[0]*n\nfor i in range(m):\n    l,r=map(int,input().split())\n    hints[l-1]=1\n    hints[r-1]=1\n    hints[l].add(r)\n    hints[r].add(l)\ns=0\nfor i in range(1,n+1):\n    if hints[i]==i:\n        s+=1\nprint(s%1000000007)"}, "527": {"problem_id": 3527, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ninp = lambda: list(map(int,sys.stdin.readline().rstrip(\"\\r\\n\").split()))\n\nc=1e5\nn=int(input())\na=[]\nb=[]\nfor i in range(0,n):\n  a.append(inp())\n  b.append(inp())\n\nprint(max(a[0] - a[1], b[0] - b[1]))"}, "528": {"problem_id": 3528, "answer": "import sys\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef get_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef input(): return sys.stdin.readline().strip()\nn = get_ints()\nl = get_list()\n#print(l)\na = []\nfor i in range(n-2):\n    a.append(l[i])\nans = [\"%.0f\" % i for i in a]\nprint(\"\".join(ans))"}, "529": {"problem_id": 3529, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nns = lambda: list(map(int, readline().split()))\ndef dfs(adj):\n visited = [False]*ns()\n for i in range(n):\n  adj[i] = visited[i]\n  visited[i] = True\n ret = []\n for i in adj:\n  ret.append(i)\n if ret[0] == 1:\n  print(\"1\")\n else:\n  print(\"0\")\ndfs(adj)\n"}, "530": {"problem_id": 3530, "answer": "def __starting_point():\n  q = int(input())\n  for _ in range(q):\n    a, b, t = map(int, input().split())\n    print(max(a-t, b-t, a-2*t, b-2*t))\n__starting_point()"}, "531": {"problem_id": 3531, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n n, m, k, w = map(int, readline().split())\n special = list(map(int, readline().split()))\n non_special = []\n for i in range(k):\n  a, b, c = map(int, readline().split())\n  if a not in special:\n   non_special.append((a, b, c))\n  elif b not in special:\n   non_special.append((b, a, c))\n  else:\n   non_special.append((a, b, c) // 2)\n   non_special.append((b, a, c) // 2 + 1)\n \n non_special.sort()\n print(sum(c for c in non_special) + main())\n return\n\ndef __starting_point():\n main()\n\n__starting_point()"}, "532": {"problem_id": 3532, "answer": "s=input()\ne=input()\ns=s.replace(\"****\", \"\")\ne=e.replace(\"****\", \"\")\nprint(s+e)"}, "533": {"problem_id": 3533, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(list(map(int, input().split())))\nl.sort()\nans = 0\nfor i in range(n):\n    if l[i][1] == l[i][0]:\n        ans += l[i][0]*abs(l[i][1]-l[i][0])\nprint(ans)\n"}, "534": {"problem_id": 3534, "answer": "n = int(input())\na = list(map(int, input().split()))\np = []\nfor i in range(n):\n    if a[i] > p[-1]:\n        p.append(i+1)\n    elif a[i] < p[-1]:\n        p.append(i+1)\n    else:\n        p.append(i+1)\nans = 0\nfor i in range(len(p)):\n    if p[i] == i+1:\n        ans += 1\nprint(ans)\nprint(p[0])"}, "535": {"problem_id": 3535, "answer": "import math\nn,m,k=list(map(int,input().split()))\np=[]\nfor i in range(k):\n p.append(list(map(int,input().split())))\nq=math.factorial(n)\nfor i in range(k):\n for j in range(n):\n  if p[i][j]==2:\n   q[i]%=1\n  elif p[i][j]==-2:\n   q[i]%=1\nprint(q[k]%1000000007)"}, "536": {"problem_id": 3536, "answer": "from math import gcd as g\ndef fac(n):\n    if n==0:\n        return 1\n    return fac(n>>1) * fac(n&1)//2\nn,p=[int(i) for i in input().split()]\nprint(g(fac(p))%1000000007)"}, "537": {"problem_id": 3537, "answer": "import collections\nn,m=map(int,input().split())\nl=collections.defaultdict(list)\nfor i in range(m):\n    a,b,s,e=map(int,input().split())\n    l[a].append((b,s,e))\n    l[b].append((a,s+1,e))\nans=0\nvisited=set()\nvisited.add((0,0))\nwhile 1:\n    now=min(l[0][0],l[0][1])\n    ans=min(ans,sum(l[0]))\n    for i in l[1]:\n        if now in visited:\n            continue\n        visited.add(now)\n        now+=i[0]\n        l[i[1]].pop(0)\n        l[i[1]].append((now,i[1][1]))\n        \n"}, "538": {"problem_id": 3538, "answer": "import itertools as it\nimport sys\ninput=sys.stdin.readline\ndef main():\n n,d=list(map(int,input().split()))\n l=sorted(map(int,input().split()),reverse=True)[:n]\n w=sorted(map(int,input().split()),reverse=True)[:n]\n h=sorted(map(int,input().split()),reverse=True)[:n]\n count=0\n \n while True:\n  if h>d:\n   break\n  elif w>d:\n   count+=1\n  else:\n   h.pop()\n   w.pop()\n   l.pop()\n \n \n print(count)\n \nmain()"}, "539": {"problem_id": 3539, "answer": "from collections import defaultdict as dd\r\nfrom collections import deque\r\nn = int(input())\r\na = dd(int)\r\nb = dd(int)\r\nfor i in range(n):\r\n    a[i] += 1\r\n    b[i] += 1\r\ns = 0\r\nfor i in range(1, 2*n):\r\n    s += a[i] * b[i]\r\n    a[i] -= a[i-1]\r\n    b[i] -= b[i-1]\r\n    deq = dd(list)\r\n    for j in range(len(deq)):\r\n        deq[j] = deq[j][0] ^ j % 2\r\n    for j in range(len(deq)):\r\n        dp = deq[j]\r\n        for k in range(j):\r\n            dp[k] = dp[k] ^ a[i]\r\n        for k in range(j+1, len(deq)):\r\n            dp[k] = dp[k] ^ (dp[k] & 1)\r\n        for k in range(j+1, len(deq)):\r\n            dp[k] = dp[k] ^ (dp[k] & 1)\r\n        for k in range(j):\r\n            dp[k] = dp[k] ^ (dp[k] & 1)\r\n        for k in range(j+1, len(deq)):\r\n            dp[k] = dp[k] ^ (dp[k] & 1)\r\n        print(s % 1000000007)\r\n"}, "540": {"problem_id": 3540, "answer": "import numpy as np\nl=[]\nfor i in range(1,5):\n l.append(['R' if i=='R' else 'G' if i=='G' else 'B' if i=='B' else 'Y' for i in input()])\nprint(len(l))\nfor i in l:\n print(i)"}, "541": {"problem_id": 3541, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na.sort()\nb.sort()\nans = 'A' * (n - len(a)) + 'A' * (n - len(b))\nfor i in range(n):\n    if a[i] < 0 or b[i] < 0:\n        ans += str(a[i]) + '\\n'\n    else:\n        ans += str(b[i]) + '\\n'\nprint(ans)"}, "542": {"problem_id": 3542, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\ng = [[0] * (m + 1) for _ in range(n + 1)]\nfor i in range(1, n + 1):\n g[i][0] = i\nfor i in range(1, m + 1):\n g[0][i] = i\n\nans = 'IMPOSSIBLE'\nfor i in range(1, n + 1):\n for j in range(1, m + 1):\n  if g[i][j]!= 0:\n   ans = min(ans, abs(g[i][j] - i) + 1)\n print(ans)"}, "543": {"problem_id": 3543, "answer": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef iinput(): return int(input())\ndef finput(): return list(map(int, input().split()))\ndef tinput(): return list(map(int, input().split()))\nn,m=iinput()\nd=dict()\nfor i in range(n):\n    d[tinput()[0]]=i\nans=[]\nfor i in range(m):\n    ans.append(d[input()[0]])\nprint(*ans,sep='\\n')"}, "544": {"problem_id": 3544, "answer": "def isPair(x):\n    if x == 0:\n        return False\n    elif x == 1:\n        return True\n    else:\n        return False\nn = int(input())\ngroup = [int(x) for x in input().split()]\ngroup.sort()\ni = 0\ncnt = 0\nwhile i < len(group):\n    if isPair(group[i]):\n        cnt += 1\n        i += 1\n    else:\n        break\nwhile cnt > 0:\n    if isPair(group[i]):\n        cnt -= 1\n        i += 1\n    else:\n        break\nprint(i)"}, "545": {"problem_id": 3545, "answer": ""}, "546": {"problem_id": 3546, "answer": "import bisect as b\nn=int(input())\nwhile(n!=0):\n  n-=1\n  b.insort(list(map(int,input().split())))\n  print(len(list(map(int,input().split()))[0]))\n"}, "547": {"problem_id": 3547, "answer": "import bisect\nn=int(input())\nl=[]\nfor i in range(n):\n    x,y,z,l=map(int,input().split())\n    l.append([x,y,z,0])\nprint(format(sum(l),'f'))"}, "548": {"problem_id": 3548, "answer": "import sys\ninput = sys.stdin.readline\nn,p=map(int,input().split())\ndrinks=[]\nfor i in range(n):\n    drinks.append(list(map(int,input().split())))\ndrinks.reverse()\nbad=set()\nans=0\nfor i in range(p):\n    a,b=map(int,input().split())\n    if a not in bad:\n        bad.add(a)\n    elif b not in bad:\n        bad.add(b)\n    else:\n        ans+=1\nprint(ans)"}, "549": {"problem_id": 3549, "answer": "import sys\ninput = sys.stdin.readline\nM = 10**9+7\ndef factors(n):\n    if n==1:\n        return [1]\n    if n==2:\n        return [2,2]\n    d = 2\n    while d<=n:\n        if n%d==0:\n            yield d,d\n            d+=1\n        else:\n            d+=1\nM = 10**9+7\nfactors(M)\nfor i in range(2,M):\n    if i*i<M:\n        M = i\n        factors(M)\nprint(M%M)"}, "550": {"problem_id": 3550, "answer": "# cook your dish here\nfor _ in range(int(input())):\n    var = input()\n    if var == 'var':\n        print(var)\n    else:\n        print('')"}, "551": {"problem_id": 3551, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\na = list(map(int,read().split()))\nt = int(read())\nans = []\nfor i in range(n):\n ans.append(a[i])\nif t%3!=0:\n print(\"fill %s\" %(ans[t//3]))\n else:\n print(\"transfer %s %s\" %(ans[t//3],ans[t//2]))\n"}, "552": {"problem_id": 3552, "answer": "n,m,k=map(int,input().split())\nl=[]\nfor i in range(m):\n    l.append(0)\nfor i in range(1,n+1):\n    l[i]+=k\nfor i in range(m-k+1):\n    l[i]+=l[i>>1]\nprint(l[0])"}, "553": {"problem_id": 3553, "answer": "n, k, m = map(int, input().split())\na = list(map(int, input().split()))\ns = set(a)\nb = []\nfor i in range(n):\n  b.append(a[i] + 1)\nc = []\nfor i in range(m):\n  c.append(sum(b[i:]))\nprint(*c,sep=\"\\n\")"}, "554": {"problem_id": 3554, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\nsmoothie = 0\nW = int(input())\nfor i in range(W):\n smoothie += (i + 1) *.99\nprint(smoothie)"}, "555": {"problem_id": 3555, "answer": "import numpy as np\nn,m=map(int,input().split())\ntrees=[0]*m\nfor i in range(n):\n  x,y=map(int,input().split())\n  trees[x-1]+=[i]\n  trees[y-1]+=[i]\nl=[]\nfor i in range(10001):\n  l.append([0]*m)\nl.append([0]*m)\nl[0][0]=0\nl[0][m-1]=0\nfor i in range(1,10001):\n  for j in range(m):\n    l[i][j]=l[i-1][j]+trees[j]\nans=0\nfor i in range(n):\n  ans+=np.ceil(l[i][m-1]/10001)\nprint(ans)"}, "556": {"problem_id": 3556, "answer": "m,q=map(int,input().split())\nfor i in range(m):\n    boss=list(map(int,input().split()))\n    salary=int(input())\n    height=int(input())\n    bossHeight=0\n    for j in range(len(boss)):\n        bossHeight=max(bossHeight,boss[j])\n        if bossHeight<height:\n            bossHeight=height\n        elif bossHeight==height:\n            bossHeight=height\n    print(*boss,sep='\\n')"}, "557": {"problem_id": 3557, "answer": "import bisect as b\ninput = lambda: list(map(int, input().split()))\nn = int(input())\na = list(map(int, input().split()))\nb = [0] * (n + 1)\nfor i in range(1, n + 1):\n    b[i] += a[i] * i\nc = 0\nfor i in range(n):\n    c += max(b[i], a[i] * i)\nprint(c)"}, "558": {"problem_id": 3558, "answer": "from math import sqrt\nn,d=int(input()),int(input())\nfor _ in range(n):\n  x,y,h=map(int,input().split())\n  x//=d\n  y//=d\n  r=(y-x).is_integer()\n  if r==0:\n   print(d-y)\n  else:\n   print(sqrt(d-y)*.5)"}, "559": {"problem_id": 3559, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nn = int(read())\np = list(map(int,read().split()))\nt = int(read())\n\ndef calc(a,b):\n    return abs(a-b)\n\nadj = [[0]*n for _ in range(t)]\nfor i in range(t):\n    adj[i] = []\n    for j in range(n):\n        adj[i].append((calc(p[j],p[i]),j))\n\nmapp = [[0]*n for _ in range(t)]\nfor i in range(t):\n    mapp[i] = []\n    for j in range(n):\n        mapp[i].append((calc(p[j],adj[i][j]),j))\n\nprint(*mapp,sep='\\n')\n"}, "560": {"problem_id": 3560, "answer": "from collections import Counter\r\nn=int(input())\r\na=Counter({'a':1,'b':2,'c':3})\r\nfor _ in range(n):\r\n    s=input()\r\n    c=Counter(s)\r\n    if c['a']==1:\r\n        print(1)\r\n    elif c['a']==2:\r\n        print(2)\r\n    else:\r\n        print(c['a']+c['b']+c['c'])"}, "561": {"problem_id": 3561, "answer": "def main():\n    W, S, C, K = map(int, input().split())\n    if W+S+C+K>10**6:\n        print(\"NO\")\n    else:\n        print(\"YES\")\nmain()"}, "562": {"problem_id": 3562, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n \ndef li(): return [int(i) for i in input().rstrip('\\n').split()]\ndef st(): return input()\ndef val(): return int(input())\ndef li2(): return [float(i) for i in input().rstrip('\\n').split()]\ndef val2(): return float(input())\ndef knapsack_sizes(V,E):\n    N = bl(V)\n    dp = [0]*(N+1)\n    for i in range(1,N+1):\n        dp[i] = math.inf\n        for j in range(i):\n            if j<V:\n                dp[i] = max(dp[i],dp[j]+(E-i)*(j!=V))\n    return dp\ndef slv(V,E):\n    dp = slv(V,E)\n    return math.ceil(dp)\ndef slv2(V,E):\n    dp = [0]*(V+1)\n    for i in range(1,V+1):\n        dp[i] = 0\n        for j in range(i,V+1,i):\n            dp[i] += dp[j]\n    return dp\ndef lbins(l,r):\n    return (l//len(l))*math.inf\ndef lins(l,r):\n    return (l//len(l))*math.inf\ndef val_to_ints(v):\n    return map(int,input().rstrip('\\n').split())\ndef li_to_ints(li):\n    return list(map(int,input().rstrip('\\n').split()))\ndef val_to_li(v):\n    return val_to_ints(li_to_ints(li))\ndef li_to_v(li):\n    return li_to_ints(li)\ndef solve():\n    N,T = li()\n    A = li2()\n    B = li_to_v(A)\n    C = li_to_v(B)\n    print(max(A,B,C))\n\ndef main():\n    solve()\n\nmain()"}, "563": {"problem_id": 3563, "answer": "import math\ndef dijkstra(graph, s, v):\n    dist = [math.inf for _ in range(v+1)]\n    dist[s] = 0\n    for u in graph[s]:\n        if dist[u] < dist[s] + 1:\n            dist[u] = dist[s] + 1\n        else:\n            continue\n    d = set()\n    d.add(s)\n    q = [math.inf for _ in range(v+1)]\n    q[s] = 0\n    while q:\n        d.remove(s)\n        for u in graph[s]:\n            if dist[u] < q[u]:\n                continue\n            for v in graph[u]:\n                if dist[v] < q[u] + 1:\n                    q[u] = q[u] + 1\n                    d.add(v)\n                elif dist[v] == math.inf:\n                    break\n                elif dist[v] + 1 < q[u]:\n                    q[u] = q[u] + 1\n                    d.add(v)\n    return d\nn = int(input())\ngraph = [[] for _ in range(n+1)]\nfor i in range(1, n+1):\n    graph[i].append(i)\nprint(dijkstra(graph, 0, n))"}, "564": {"problem_id": 3564, "answer": "import bisect\nn,m,k=list(map(int,input().split()))\nislands=[list(map(int,input().split())) for i in range(n)]\npalm_trees=[list(map(int,input().split())) for i in range(m)]\nobject_throwing=[0]*k\ncan_throwing=[0]*k\npossible_tunnels=[0]*k\nfor i in range(n):\n x,y,r=list(map(int,input().split()))\n if x>islands[i][0] and y>islands[i][1]:\n  possible_tunnels[i]=abs(x-islands[i][0])+abs(y-islands[i][1])\n if possible_tunnels[i]<=r:\n  can_throwing[i]=1\n elif possible_tunnels[i]>r:\n  possible_tunnels[i]=r\n else:\n  possible_tunnels[i]=min(possible_tunnels[i],r)\n\nprint('\\n'.join(map(str, possible_tunnels)))\n"}, "565": {"problem_id": 3565, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\nc=list(map(int,input().split()))\n \nd={}\nfor i in range(n):\n    d[i]=0\nfor i in range(m):\n    a,b=list(map(int,input().split()))\n    c[a]+=1\n    c[b]+=1\n    if a not in d:\n        d[a]=c[a]\n    if b not in d:\n        d[b]=c[b]\n    "}, "566": {"problem_id": 3566, "answer": "from sys import stdin,stdout\nreadline = stdin.readline\nINF = float('inf')\nMOD = 10**9+7\nn,q = list(map(int,readline().split()))\na = list(map(int,readline().split()))\nh = []\nfor i in range(n):\n    h.append(a[i])\nans = []\nfor i in range(q):\n    x,y = list(map(int,readline().split()))\n    if x%2!=0:\n        h[i]+=y\n    else:\n        h[i]+=x//2\n    ans.append((h[i],y))\nprint(*ans,sep='\\n')\n"}, "567": {"problem_id": 3567, "answer": "n,k=map(int,input().split())\nl=[]\nfor i in range(n):\n    s=input()\n    l.append(s)\nprint(*l,sep=\"\")"}, "568": {"problem_id": 3568, "answer": "f=int(input())\nans=[]\nfor i in range(f):\n    t,n=map(int,input().split())\n    ans.append([t//1000000000,n//1000000000])\nprint('possible' if all(ans) else 'impossible')"}, "569": {"problem_id": 3569, "answer": "import numpy as np\nn = int(input())\na = np.array([-10**9,10**9])\nfor i in range(n):\n    x,y,r = map(int,input().split())\n    a[int(x)] += r*(y-int(x))\n    a[int(y)] += r*(x-int(y))\nprint(a.sum() - max(a))"}, "570": {"problem_id": 3570, "answer": "# cook your dish here\nn=int(input())\na=[];b=[];c=[];d=[];e=[];\nfor i in range(n):\n    e=input()\n    a.append(e)\n    b.append(e)\n    c.append(e)\n    d.append(e)\n    e=input()\n    e=e[::-1]\n    if a[-1]==\"S\":\n        for i in range(len(e)):\n            if e[i]==\"!\" and a[i]!=\"!\" and a[i]==e[i]:\n                print(\"Yes\")\n                break\n    elif b[-1]==\"S\":\n        for i in range(len(e)):\n            if e[i]==\"!\":\n                print(\"Yes\")\n                break\n    elif c[-1]==\"S\":\n        for i in range(len(e)):\n            if e[i]==\"!\" and b[i]!=\"!\" and b[i]==e[i]:\n                print(\"Yes\")\n                break\n    else:\n        print(\"Plot Error\")\n"}, "571": {"problem_id": 3571, "answer": ""}, "572": {"problem_id": 3572, "answer": "import numpy as np\nn,l = map(int,input().split())\nl = np.array(l)\nx = l.cumsum()\ns = np.zeros((n,n+1),dtype=int)\nfor i in range(1,n+1):\n s[i] = x[i-1]\n s[i] += x[i]\nans = \"impossible\"\nfor i in range(n):\n if s[i] - l[i] <= l:\n  ans = \"possible\"\nprint(ans)"}, "573": {"problem_id": 3573, "answer": "import bisect as b\nn,d,c=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\ncumsum=0\nfor i in range(len(l)):\n    cumsum+=l[i]\n    b.remove(l[i])\n    l[i]=0\nct=0\nfor i in range(len(l)):\n    ct+=d*l[i]\nprint(int(ct/cumsum))\n"}, "574": {"problem_id": 3574, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nQ = int(input())\nans = []\nfor _ in range(Q):\n    L, R = map(int, input().split())\n    ans.append([L, R])\nprint(*ans, sep='\\n')\n"}, "575": {"problem_id": 3575, "answer": "from collections import defaultdict as dd\nn,m=map(int,input().split())\nadj=[dd(int) for i in range(n)]\nadj.append((0,0))\ns,t=map(int,input().split())\na,b=s,t\nwhile True:\n try:\n  b-=1\n except:\n  b+=1\n a-=1\n if a==0 or b==0:\n  print('never meet')\n else:\n  x=abs(b-a)\n  print(x)"}, "576": {"problem_id": 3576, "answer": "import math\nr,c,k=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\np=1\nq=l[0]\nfor i in range(1,k):\n    p=math.ceil(p/k)\n    q=l[i]\n    \n    \nprint(p*q)\n"}, "577": {"problem_id": 3577, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\nans = []\nfor i in range(n):\n    x = a[i][0]\n    y = a[i][1]\n    h = a[i][2]\n    ans.append(h*2)\n\nfor i in range(n):\n    print(ans[i])"}, "578": {"problem_id": 3578, "answer": "import sys\r\ninput = sys.stdin.readline\r\n\r\nn, r, (2, 3, 4)\r\na, b, c = list(map(int, input().split()))\r\nflights = []\r\nfor _ in range(r):\r\n    a, b, c = list(map(int, input().split()))\r\n    flights.append((a, b, c))\r\n\r\nprint(min(a * b * c, flights[0][0] * flights[0][1] + flights[-1][0] * flights[-1][1]))"}, "579": {"problem_id": 3579, "answer": "import math\ndef read():\n h,w,a,b=list(map(int,input().split()))\n area=[]\n for i in range(a):\n  area.append(i*h)\n area.sort()\n s=set(map(int,input().split()))\n if len(s)==1:\n  print(math.floor(area/w),'{}'.format(area/w))\n  return\n area.sort()\n d=area[::2]\n e=area[1::2]\n f=[]\n for i in range(len(area)):\n  if area[i]<=b:\n   f.append(area[i])\n  else:\n   f.append(e[i])\n f.sort()\n g=len(f)\n h=sum(f[g-1:])/len(f)\n w=sum(e[g-1:])/len(e)\n print(h,end=' ')\n print(w,end=' ')"}, "580": {"problem_id": 3580, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\nfor _ in range(val()):\n    n,m = li()\n    b = [0] * (2 * n + 2)\n    for i in range(n):b[i+1] = m[i]\n    ans = []\n    for i in range(n):\n        if b[i] <= m[i]:ans.append(i)\n    print(max(ans),end=' ')\n    print()"}, "581": {"problem_id": 3581, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nread = lambda: list(map(int, input().split()))\nm = 10**9+7\nn = 10**9+8\nh = n*(n+1)//2\np = [0]*h\nfor i in range(n):\n    p[h] = read()\nfor i in range(1, n//2+1):\n    p[n-i-1] += p[n-i]\nans = 0\nfor i in range(n):\n    ans += (p[i]*(1-p[n-i-1]))\nprint(ans)"}, "582": {"problem_id": 3582, "answer": "from collections import deque\nn = int(input())\nMentors = [0]*n\nfor i in range(n):\n    Mentors[i] = int(input())+1\nMentors[0] = 1\nque = deque([])\nans = []\nfor i in range(n):\n    if i not in Mentors:\n        que.append(i)\n    else:\n        while que:\n            x = que.popleft()\n            if x == i:\n                ans.append(Mentors[i])\n                que.append(i)\nprint(*ans, sep='\\n')"}, "583": {"problem_id": 3583, "answer": "import math\ndef dist(p1, p2):\n    return math.sqrt((p1[0]-p2[0])**2+(p1[1]-p2[1])**2)\nn=int(input())\na=[]\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    a.append((x-y,x,y))\na.sort()\nprint(\" \".join([str(i) for i in a]))\n"}, "584": {"problem_id": 3584, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\nN, M, K = list(map(int, input().split()))\nupgrade = list(map(int, input().split()))\n\n# BFS\nadj = [[] for _ in range(N)]\nfor i in range(N):\n    adj[i].append(i)\n\nuf = [0] * (N + 1)\nuf[0] = 1\nans = 0\nbfs = [0]\nfor i in range(1, N + 1):\n    for j in range(upgrade[i - 1]):\n        if uf[j] == 0:\n            uf[j] = 1\n            bfs.append(j)\n            ans += 1\n        elif uf[j] == 1:\n            uf[j] = 0\n            bfs.append(j)\nprint(ans)\n"}, "585": {"problem_id": 3585, "answer": "import math\nm, k = map(int, input().split())\nmod = 1000000007\np = 998244353\n\ndef f(n):\n    nonlocal mod\n    if n&1:\n        return 0\n    else:\n        return (n>>1)^mod\n\na = f(k)\nprint(a%mod)"}, "586": {"problem_id": 3586, "answer": "n = int(input())\nans = []\nfor i in range(n):\n    x = int(input())\n    ans.append(x)\nprint('\\n'.join(map(str,ans)))"}, "587": {"problem_id": 3587, "answer": "import sys\ninput=sys.stdin.readline\ndef find(s):\n    i = 0\n    j = len(s)-1\n    while i < j:\n        if s[i] == s[j]:\n            i += 1\n        elif s[i]!= s[j]:\n            j -= 1\n        else:\n            i += 1\n    return i\ndef solve():\n    n = int(input())\n    s = input()\n    dp = [0]*n\n    for i in range(n):\n        dp[i] = find(s)\n    print(''.join(map(str,dp)))\nsolve()"}, "588": {"problem_id": 3588, "answer": "import sys\r\n\r\ndef read(): return sys.stdin.readline().strip()\r\n\r\ndef write(s): sys.stdout.write(s)\r\n\r\nn, m = read()\r\nl = [int(x) for x in read().split()]\r\nl.sort()\r\nfor i in range(m):\r\n    s = 0\r\n    for j in range(i, m, i):\r\n        s += l[j]\r\n    print(s)"}, "589": {"problem_id": 3589, "answer": "l=[int(i) for i in input().split()]\nl1=[0]*9\nfor i in range(1,10):\n l1[i]=l1[i-1]\nfor i in range(len(l)):\n if l[i]=='9':\n  l1[i]+=1\nprint(' '.join(str(i) for i in l1))"}, "590": {"problem_id": 3590, "answer": "from sys import stdin\ninput=stdin.readline\n#input=lambda: list(map(int,input().split()))\n#l=lambda:int(input())\n#a,b,c=[],[],[]\n#for i in range(n):\n#    a[i]=list(map(int,input().split()))\n#print(*a)\ndef main():\n    a=list(map(int,input().split()))\n    n=len(a)\n    d=[[0]*2 for _ in range(n)]\n    for i in range(n):\n        for j in range(2):\n            if i+j<n:\n                d[i][j]=a[i+j]\n            else:\n                d[i][j]=a[i]\n    ans=min(d[0][0],d[1][1])\n    for i in range(2,n):\n        for j in range(2):\n            if i+j<n:\n                d[i][j]=min(d[i+j][0],d[i][j-1])\n            else:\n                d[i][j]=min(d[i+1][j],d[i][j-1])\n        ans=min(ans,d[i][2])\n    print(ans)\nmain()"}, "591": {"problem_id": 3591, "answer": "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef MI():\n\treturn map(int, sys.stdin.readline().split())\n\ndef SI():\n\treturn sys.stdin.readline().strip()\n\nk = II()\nwhile k!=0:\n\tk+=1\n\ta = []\n\tfor i in range(len(SI())):\n\t\ta.append(SI()[i])\n\tprint(len(a))\n\tfor i in a:\n\t\tprint(i,end=\" \")\n\tprint()"}, "592": {"problem_id": 3592, "answer": "import math as m\ndef __starting_point():\n p = input().split()\n p = [int(x) for x in p]\n pizza = m.ceil(p[1])\n pita = m.ceil(p[2])\n pizza, pita = min(pita, pizza), min(p, pizza)\n print(str(pita) + \" \"+ str(p) + \"\")\n__starting_point()"}, "593": {"problem_id": 3593, "answer": "import bisect as b\nn,k=map(int,input().split())\na=[]\nfor i in range(n):\n    a.append(list(map(int,input().split())))\na.sort()\nb.initialize(b5,0)\nres=0\nfor i in range(n):\n    b.b5.insort(a,i)\n    res=max(res,sum(a[i][0:i+1])+sum(a[i][i+1:len(a[i])-1]))\nb.b5.finish"}, "594": {"problem_id": 3594, "answer": "import math\ndef prime(n):\n if n<2:\n  return False\n elif n%2==0:\n  return True\n else:\n  return False\nn=int(input())\nfor i in range(n):\n a=input().split()\n if a[0]==\"O\":\n  print(prime(a[1]))\n elif a[0]==\"E\":\n  print(0)\n elif a[0]==\"I\":\n  p=int(input())\n  if prime(p):\n   print(p)\n else:\n  print(sum(map(int,input().split())))"}, "595": {"problem_id": 3595, "answer": "import numpy as np\r\nr,l = map(int,input().split())\r\nans = []\r\nfor _ in range(r):\r\n\tx,y,z,t = map(int,input().split())\r\n\tans.append((x,y,z,t))\r\nprint(np.max(np.array(ans)))"}, "596": {"problem_id": 3596, "answer": ""}, "597": {"problem_id": 3597, "answer": ""}, "598": {"problem_id": 3598, "answer": "n=int(input())\nl=[]\nfor i in range(n):\n    l.append(list(map(int,input().split())))\nl.sort()\ns=''\nfor i in range(n):\n    s+=l[i][0]\n    if i%2==0:\n        s+=l[i][1]\n    else:\n        s+=l[i][1]*8\n        s+=l[i][0]*'0'\nprint(s)"}, "599": {"problem_id": 3599, "answer": "t,n=map(int,input().split())\narr=list(map(int,input().split()))\narr.sort()\nfor i in range(n-2):\n arr.pop()\n print(min(arr[i],arr[i+1],arr[i+2])-max(arr[i],arr[i+1],arr[i+2]))"}, "600": {"problem_id": 3600, "answer": "import math\nk = int(input())\nn = int(input())\nans = []\nfor i in range(n):\n    a = int(input())\n    ans.append([\"impossible\" for i in range(4)])\n    if a>=k:\n        print(\"impossible\")\n        break\n    for i in range(4):\n        if i==a:\n            k-=1\n            ans.append([\"impossible\" for i in range(4)])\n        elif i>a:\n            k-=1\n            ans.append([\"impossible\" for i in range(4)])\n        else:\n            k+=1\n            ans.append([\"impossible\" for i in range(4)])\n"}, "601": {"problem_id": 3601, "answer": "import math\r\nfor _ in range(int(input())):\r\n  a,b=map(int,input().split())\r\n  a-=1\r\n  b-=1\r\n  if abs(a)<=abs(b):\r\n    print(a+b)\r\n  else:\r\n    print(math.floor(a/b))"}, "602": {"problem_id": 3602, "answer": "import sys\ninput = sys.stdin.readline\nclass L:\n    def __init__(self, n, r, k):\n        self.n = n\n        self.r = r\n        self.k = k\n        self.lamps = []\n        self.max_illum = 2*r+1\n        self.candle_pos = [0,0]\n        self.candle_pos[0] = 1\n        self.candle_pos[1] = 1\n        self.dp = [[0 for i in range(self.n)] for j in range(self.n)]\n        self.dp[0][0] = 1\n        self.dp[0][1] = 1\n        self.dp[1][0] = 1\n        self.dp[1][1] = 1\n        for i in range(2,self.n):\n            self.dp[i][0] = self.dp[i-1][0] + self.lamps[i-1]\n            self.dp[i][1] = self.dp[i-1][1] + self.lamps[i-1]\n            self.dp[i][0] = self.dp[i-1][0] + self.doubling[i-1]\n            self.dp[i][1] = self.dp[i-1][1] + self.doubling[i-1]\n            self.dp[i][0] = self.dp[i-1][0] + self.lamps[i-1]\n            self.dp[i][1] = self.dp[i-1][1] + self.lamps[i-1]\n            self.dp[i][0] = self.dp[i-1][0] + self.lamps[i-1]\n            self.dp[i][1] = self.dp[i-1][1] + self.lamps[i-1]\n            self.dp[i][0] = self.dp[i-1][0] + self.lamps[i-1]\n            self.dp[i][1] = self.dp[i-1][1] + self.lamps[i-1]\n            self.dp[i][0] = self.dp[i-1][0] + self.lamps[i-1]\n            self.dp[i][1] = self.dp[i-1][1] + self.lamps[i-1]\n            self.dp[i][0] = self.dp[i-1][0] + self.lamps[i-1]\n            self.dp[i][1] = self.dp[i-1][1] + self.lamps[i-1]\n            self.dp[i][0] = self.dp[i-1][0] + self.lamps[i-1]\n            self.dp[i][1] = self.dp[i-1][1] + self.lamps[i-1]\n            self.dp[i][0] = self.dp[i-1][0] + self.lamps[i-1]\n            self.dp[i][1] = self.dp[i-1][1] + self.lamps[i"}, "603": {"problem_id": 3603, "answer": "import sys\nreadline = sys.stdin.readline\n\nN,M = list(map(int,readline().split()))\nL = list(map(int,readline().split()))\n\nans = []\nfor i in range(M):\n a,b = list(map(int,readline().split()))\n if a not in L:\n  ans.append([a,b])\n elif b not in L:\n  ans.append([b,a])\n\nprint(len(ans), \"\\n\")\nfor i in range(len(ans)):\n if ans[i][0] == ans[i][1]:\n  print(\"Impossible\")\n else:\n  print(ans[i][1])"}, "604": {"problem_id": 3604, "answer": "from collections import defaultdict as dd\nimport numpy as np\ndef dijkstra(graph, v):\n d = dd(int)\n for u, u_neighbour in graph[v]:\n  d[u] += 1\n  d[u_neighbour] -= 1\n shortest_path = [0] * len(graph)\n visited = {v}\n while shortest_path:\n  curr = shortest_path.pop()\n  for u, u_neighbour in graph[curr]:\n   if u not in visited:\n    shortest_path.append(u)\n    visited.add(u)\n return visited, shortest_path\nn, d = [int(i) for i in input().split()]\ng = defaultdict(list)\nfor i in range(n):\n  x, y = [int(i) for i in input().split()]\n  g[x].append(y)\n  g[y].append(x)\nvisited, shortest_path = dijkstra(g, 0)\nprint(' '.join(map(str, visited)))\n"}, "605": {"problem_id": 3605, "answer": "# cook your dish here\nn,k=map(int,input().split())\na=list(map(int,input().split()))\ns=min(a)\nt=max(a)\nfor i in range(k):\n    if a[i]>s:\n        s=a[i]\n    elif a[i]<t:\n        t=a[i]\nprint(t-s)"}, "606": {"problem_id": 3606, "answer": "import numpy as np\nn,k=list(map(int,input().split()))\nplants=[0]*100000\nplants[0]=list(map(int,input().split()))\njump=[[\"A\",\"B\",\"C\",\"D\"] for i in range(k)]\njump[0]=jump[1]=jump[2]=jump[3]=0\nl=[]\nfor i in range(n):\n x,y=list(map(int,input().split()))\n l.append((x,y))\nl.sort()\na=np.array(l)\na=a.reshape(1,-1)\nans=[]\nfor i in range(k):\n ans.append(jump[i][0])\n ans.append(jump[i][1])\nprint(' '.join([str(x) for x in ans]))\n"}, "607": {"problem_id": 3607, "answer": "# cook your dish here\ntry:\n    from bisect import bisect_left\n    from collections import defaultdict as dd, deque\n    import operator\n    import sys\n    input = sys.stdin.readline\n    \n    def data():\n        return map(int, input().split())\n\n    def mt(s):\n        return s[0]\n\n    def makedict(m):\n        return dict(enumerate(m))\n\n    def makedicta(m):\n        return dict(enumerate(''.join(m)))\n\n    def makedictl(m):\n        return list(m)\n\n    def makedictll(m):\n        return list(map(list, m))\n\n    def makedictr(m):\n        return list(map(list, ''.join(map(str, m))))\n\n    def makedictrl(m):\n        return list(map(list, ''.join(map(str, \"{}\".format(m)))) )\n\n    def makedictrr(m):\n        return list(map(list, '\".join(\".{}\".format(m))\"))\n\n    def makedictrrl(m):\n        return list(map(list, \"\".join(\".{}\".format(m))))\n\n    def makedictrl(m):\n        return list(map(list, \"{}\".format(m)))\n\n    def makedictrl1(m):\n        return list(map(list, \"{0:<{1}}}\".format(m)) )\n\n    def makedictrl2(m):\n        return list(map(list, \"{0:>{1}}}\".format(m)) )\n\n    def makedictrl3(m):\n        return list(map(list, \"{0<{0}}}\".format(m)) )\n\n    def makedictrl4(m):\n        return list(map(list, \"{0>{1}}}\".format(m)) )\n\n    def makedictrl5(m):\n        return list(map(list, \"{0<{0}}}\".format(\">{1}}}\".format(m)) )\n\n    def makedictrl6(m):\n        return list(map(list, \"{0<{0}}}\".format(\">{1}}}\".format(\">{0:={1}}}\".format(m)) )\n\n    def makedictrl7(m):\n        return list(map(list, \"{0<{0}}}\".format(\">{1}}}\".format(\">{0:=\"he}}\".format(m)))\n\n    def makedictrl8(m):\n        return list(map(list, \"{0<{0}}}\".format(\">{1}}}\".format(\">{0:=\"<}\".format(m))) )\n\n    def makedictrl9(m):\n        return list(map(list, \"{0<{0}}}\".format(\">{1}}}\".format(\">{0:=\"<}\".format(m))) )\n\n    def makedictrl10(m):\n        return list(map(list, \"{0<{0}}}\".format(\">{1}}}\".format(\">{0:=\"<}\".format(m))) )\n\n    def main():\n        l = len(data())\n        d = dd(int)\n        q = deque([])\n        for i in range(l):\n            s = data()\n            q.append(s)\n            d["}, "608": {"problem_id": 3608, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\nfact = [1]*(10**6+7)\nfor i in range(2,10**6+7):\n    fact[i] = fact[i-1]*i\n\ndef solve():\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    print(fact[a[-1]//2]*a[-1]%MOD)\n    "}, "609": {"problem_id": 3609, "answer": "from collections import deque\nn=int(input())\nedges=[]\nfor i in range(n-1):\n    edges.append([int(i) for i in input().split()])\n\n#print(edges)\nadj=[0]*n\nadj[0]=adj[1]=[-1]*2\nvisited=[False]*2*n\nvisited[0]=True\nvisited[1]=True\nans=[\"\"]*2*n\nans[0]=chr(ord('a')+1)\nans[1]=chr(ord('z')+1)\ndef dfs(u, adj, visited):\n    nonlocal ans\n    if u==adj[u]:\n        visited[u]=True\n        for v in adj[u]:\n            if visited[v]==False:\n                dfs(v, adj, visited)\n    else:\n        visited[u]=False\n        for v in adj[u]:\n            if visited[v]==False:\n                dfs(v, adj, visited)\ndfs(0, adj, visited)\nwhile 1:\n    if ans[0]==chr(ord('a')+1):\n        break\n    if ans[1]==chr(ord('a')+1):\n        break\n    ans[0]=ans[1]\n    ans[1]=min(ans[0], ans[1])\n    for i in range(2):\n        if ans[i]==ans[i-1]:\n            break\n    if ans[0]==ans[1]:\n        print(\"impossible\")\n    else:\n        print(ans[0])\n        print(ans[1])"}, "610": {"problem_id": 3610, "answer": "import sys\ninput = sys.stdin.readline\nm = int(input())\na = []\nfor i in range(m):\n a.append(list(map(int,input().split())))\ninv = [0]*(2999)\nfor i in range(2999):\n inv[i] += 1\nif a[0][0] == 1:\n print(1)\nelse:\n for i in range(1,len(a)):\n  inv[a[i]-1] += 1\n  if a[i] == 1:\n   inv[a[i]-1] += 1\n  elif a[i] == 2:\n   inv[a[i]-1] += 2\n  elif a[i] == 3:\n   inv[a[i]-1] += 3\n  elif a[i] == 4:\n   inv[a[i]-1] += 4\n  elif a[i] == 5:\n   inv[a[i]-1] += 5\n  elif a[i] == 6:\n   inv[a[i]-1] += 6\n  elif a[i] == 7:\n   inv[a[i]-1] += 7\n  elif a[i] == 8:\n   inv[a[i]-1] += 8\n  elif a[i] == 9:\n   inv[a[i]-1] += 9\n  elif a[i] == 10:\n   inv[a[i]-1] += 10\n  elif a[i] == 11:\n   inv[a[i]-1] += 11\n  elif a[i] == 12:\n   inv[a[i]-1] += 12\n  elif a[i] == 13:\n   inv[a[i]-1] += 13\n  elif a[i] == 14:\n   inv[a[i]-1] += 14\n  elif a[i] == 15:\n   inv[a[i]-1] += 15\n  elif a[i] == 16:\n   inv[a[i]-1] += 16\n  elif a[i] == 17:\n   inv[a[i]-1] += 17\n  elif a[i] == 18:\n   inv[a[i]-1] += 18\n  elif a[i] == 19:\n   inv[a[i]-1] += 19\n  elif a[i] == 20:\n   inv[a[i]-1] += 20\n  elif a[i] == 21:\n   inv[a[i]-1] += 21\n  elif a[i] == 22:\n   inv[a[i]-1] += 22\n  elif a[i] == 23:\n   inv[a[i]-1] += 23\n  elif a[i] == 24:\n   inv[a[i]-1] += 24\n  elif a[i] == 25:\n   inv[a[i]-1] += 25\n  elif a[i] == 26:\n   inv[a[i]-1] += 26\n  elif a[i] == 27:\n   inv[a[i]-1] += 27\n  elif a[i] == 28:\n   inv[a[i]-1] += 28\n  elif a[i] == 29:\n   inv[a[i]-1] += 29\nfor i in range(2999):\n print(inv[i])"}, "611": {"problem_id": 3611, "answer": "from math import ceil,sqrt\nn,m=map(int,input().split())\nl=list(map(int,input().split()))\ns=0\nwhile s<n-1:\n    u,v,w,l.pop()\n    if l[s]!=l[u] and l[u]!=l[v] and l[v]!=l[w]:\n        l.append(u)\n        s=u\n    elif l[s]==l[u] and l[v]==l[w] and l[u]!=l[v]:\n        l.append(v)\n        s=v\n    elif l[s]==l[v] and l[u]==l[w] and l[v]!=l[u]:\n        l.append(u)\n        s=min(u,v)\n    elif l[s]==l[w] and l[u]==l[v]:\n        l.append(u)\n        s=min(u,v)\nprint(' '.join(reversed(l)))"}, "612": {"problem_id": 3612, "answer": "a,m=map(float,input().split())\nl=list(map(int,input().split()))\nl.sort()\ndef getDistance(x,y):\n return abs(x-y)/2\ndef getDirection(x,y):\n return (y-x)%360\ndef checkWater(x,y):\n if l[x][y]==0:\n  return False\n elif l[x][y]<getDistance(x,y):\n  return False\n else:\n  return True\nwhile l:\n x,y,x1,y1,z=l.pop(0)\n l.append((x,y,x1,y1))\n m=m//4\n m*=-=4\n m1=getDistance(x,y)\n m*=-=1\n m1*=-=1\n checkWater(x,y)\n print(getDirection((l[0][0],l[0][1]),(l[m][0],l[m][1])))"}, "613": {"problem_id": 3613, "answer": "n = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\na.sort()\nb = len(a) - 3\nc = 0\nfor i in range(b):\n    if a[i] not in a:\n        c += 1\nprint(c)"}, "614": {"problem_id": 3614, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\nr,c=list(map(int,input().split()))\nans=0\nfor i in range(n):\n    ans+=max(0,m-i*i)\nprint(ans)\n"}, "615": {"problem_id": 3615, "answer": "import math\nn=int(input())\nwhile(n>0):\n x,y=map(float,input().split())\n d=math.sqrt(x**2+y**2)\n if d<1:\n  print(n)\n else:\n  ans=int(d/2)\n  if d%2==0:\n   ans+=1\n  elif d%2==1:\n   ans+=2\n  else:\n   ans+=3\n  print(ans)\n n=n-1"}, "616": {"problem_id": 3616, "answer": "k = int(input())\nl = []\nfor i in range(k):\n l.append(int(input()))\nl.sort()\nans = 0\nfor i in range(k):\n ans += l[i]//2\nprint(ans)"}, "617": {"problem_id": 3617, "answer": "n,t=map(int,input().split())\na,b,c,d=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=d%c\n c=c+(b-a)%c\n if s>t:\n  print((t-s)%c)\n else:\n  print((t-s)%c>>1)"}, "618": {"problem_id": 3618, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 998244353\nfact = [1]*1000005\nfor i in range(1,1000005): fact[i] = (fact[i]*i)%MOD\ndef solve(n):\n x,y = [int(i) for i in readline().split()]\n if n<10: return x\n else:\n  ans = fact[n]\n  for i in range(n-10):\n   x.append(solve(y))\n   y.append(x[0])\n  ans = (ans*pow(10,n-len(x),MOD) + solve(y[:n]))%MOD\n print(ans)\n "}, "619": {"problem_id": 3619, "answer": "import sys\nreadline = sys.stdin.readline\nk, n = list(map(int, readline().split()))\nsalary, p, r = list(map(int, readline().split()))\ncomb = [salary]\nfor i in range(k):\n    comb.append(comb[-1] / p)\n    salary += p\n    p *= i\n    r += i\n    if r < salary:\n        r = salary\n    elif r == salary:\n        print(0.0)\n        return\nans = sys.maxsize\nfor i in range(k, n + 1):\n    ans = max(ans, i * (comb[i] / p))\nprint(ans)"}, "620": {"problem_id": 3620, "answer": "import sys\ninput = sys.stdin.readline\nM = [int(x) for x in input().split()]\nN = M[0]\nedges = []\nfor i in range(1, N+1):\n edges.append(tuple(M[i-1:i+2]))\nmod = 10**9+7\np = 10**9+5\nprint(p*sum(edges)%mod)"}, "621": {"problem_id": 3621, "answer": "import sys\ninput=sys.stdin.readline\nfrom collections import defaultdict as dd\nn=int(input())\nedges=[[] for i in range(n)]\nfor i in range(n):\n    x,y=map(int,input().split())\n    edges[x].append(y)\n    edges[y].append(x)\ncolors=[0]*n\nmod=1000000007\ndp=[0]*300\nfor i in range(300):\n    dp[i]=defaultdict(int)\nfor i in range(1,300):\n    for j in edges[i]:\n        dp[i][colors[j]]+=1\nans=0\nfor i in range(n):\n    ans+=dp[i][colors[i]]\nprint(ans%mod)"}, "622": {"problem_id": 3622, "answer": "w, h = map(int, input().split())\nu, d, l, r = [0] * w.bit_length()\np = [0] * w.bit_length()\nfor i in range(h):\n    a, b, c, d = map(int, input().split())\n    if a == '.':\n        p[i] = 1\n    elif b == '.':\n        p[i] = u * d\n    elif c == '.':\n        p[i] = (l + d) * u\n    else:\n        p[i] = (r + d) * (l + d) * u\nprint('\\n'.join(map(str, p)))"}, "623": {"problem_id": 3623, "answer": "import math\ndef inpl(): return list(map(int, input().split()))\ndef outpl(): return list(map(int, input().split()))\na, b, c, d = inpl()\nprint(math.sqrt((a*a) + (b*b) + (c*c) + (d*d)))"}, "624": {"problem_id": 3624, "answer": "n,m=map(int,input().split())\na=[]\nfor i in range(m):\n    a.append(list(map(int,input().split())))\na.sort()\nb=0\nfor i in range(m):\n    b+=n//12\n    if n%12==0:\n        b+=2\nprint(b)"}, "625": {"problem_id": 3625, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\nfrom collections import defaultdict as dd\nimport math\ndef calc(s,b,y,i):\n return (s-i*y)//math.gcd(s,b)\nfor _ in range(int(input())):\n s=list(map(int,input().split()))\n b=list(map(int,input().split()))\n print(max(calc(s,b,y,i) for i in range(100)))"}, "626": {"problem_id": 3626, "answer": "n=int(input())\nfor i in range(n):\n l=list(map(int,input().split()))\n a=[]\n b=[]\n for i in range(len(l)):\n  if l[i]%2!=0:\n   a.append(l[i])\n  else:\n   b.append(l[i])\n if a.count(0)>1 or b.count(0)>1:\n  print(\"0\")\n else:\n  print(\"1\")\n"}, "627": {"problem_id": 3627, "answer": "R,C=map(int,input().split())\ns=[]\nfor i in range(R):\n    s.append(list(input()))\ns.sort()\nans=0\nfor i in range(R):\n    ans+=min(s[i][0]-9,s[i][1]-i)\nprint(ans)"}, "628": {"problem_id": 3628, "answer": "import math\ndef prime_factors(n):\n count = 0\n while (n % 2 == 0):\n  n /= 2\n  count += 1\n return (count, n)\n\npf = prime_factors(int(input()))\nl = []\nfor i in pf:\n l.append(i)\n\na = list(map(int, input().split()))\n\nif len(l)!= a[0] + 1:\n print(\"impossible\")\n else:\n  for i in range(1, len(l)):\n   if l[i] % 2 == 0:\n    l[i] /= 2\n    if l[i] == a[0] + 1:\n     print(l[i], end=\" \")\n    else:\n     print(l[i], end=\" \")\n   elif l[i] % 2!= 0:\n    l[i] /= 2\n    if l[i] == a[0] + 1:\n     print(l[i], end=\" \")\n    else:\n     print(l[i], end=\" \")\n"}, "629": {"problem_id": 3629, "answer": "import numpy as np\nn = int(input())\na = np.array([[0]*n for i in range(n)] for j in range(n))\nb = int(input())\nd = int(input())\na = a.reshape(2,1)\nc = np.array([[0]*n for i in range(n)] for j in range(n))\ns = 0.0\nfor i in range(n):\n    s += c[i][0]*a[i][0]\n    s %= d\nprint(s)"}, "630": {"problem_id": 3630, "answer": "s1,s2=input().split()\ns1=list(s1)\ns2=list(s2)\nmoves=0\nfor i in range(len(s1)):\n    if ord(s1[i])>ord(s2[i]):\n        moves+=1\n    elif ord(s1[i])<ord(s2[i]):\n        moves+=1\nprint(moves)"}, "631": {"problem_id": 3631, "answer": "import math\nn,m=map(int,input().split())\nb=[]\np=[]\nfor i in range(n):\n    x,y=map(int,input().split())\n    b.append((x,y))\n    p.append((x,y))\nfor i in range(m):\n    x,y=map(int,input().split())\n    p.append((x,y))\nr=0\nfor i in range(n):\n    if b[i][0]!=b[i+1][0]:\n        r+=1\nprint(r)"}, "632": {"problem_id": 3632, "answer": "from collections import deque\nMOD = 10**9+7\ninput = lambda: list(map(int, input().split()))\ns = sorted(input())[::-1]\nT = len(s)\nN = ord('a')\nS = [0]*26\nfor i in range(1, N):\n    S[i] += 1\n    S[N-i-1] += 1\nD = {}\nfor i in range(len(S)):\n    D[S[i]] = i+1\nans = 1\np = 1\nQ = deque()\nQ.append(1)\nwhile Q:\n    now = Q.popleft()\n    for i in range(26):\n        if S[i] <= now:\n            ans = ans * pow(10, i, MOD)%MOD\n            Q.append(S[i])\nprint(ans)"}, "633": {"problem_id": 3633, "answer": "import sys\ninput = sys.stdin.readline\nn,m,k=list(map(int,input().split()))\na=list(map(int,input().split()))\na.sort()\nscores=[]\nfor i in range(n):\n    scores.append(a[i]%m)\n    \ns=0\nfor i in scores:\n    if i<k/n:\n        s+=1\n    else:\n        break\nprint(*s,sep=\" \")\n"}, "634": {"problem_id": 3634, "answer": "n = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\na.sort()\np = 1\nans = 0\nfor i in range(n-1):\n    if a[i] < a[i+1]:\n        p = i+1\n        ans += pow(3,i)\n    elif a[i] > a[i+1]:\n        p = i+1\n        ans += pow(3,i)\nprint(ans%1000000009)"}, "635": {"problem_id": 3635, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nINF = 10**18+7\nans = INF\nb = [0]*N\nb[0] = 1\nfor i in range(1,N):\n    b[i] = b[i-1] + b[i]\n    ans = max(ans, b[i])\nprint(ans)"}, "636": {"problem_id": 3636, "answer": "import math\ndef prime(x):\n    if x<2:\n        return False\n    d = int(math.sqrt(x))\n    if d%2 == 0:\n        return False\n    else:\n        return True\nn,m,p = map(int,input().split())\nl = [0]*(n*m)\nfor i in range(n):\n    l[i] = l[i-1] + i*i\nl.insert(0,0)\ndp = 10**7\nMOD = 10**9+7\nwhile l[0]!=0:\n    for i in range(1,m):\n        if prime(l[i]):\n            dp = dp-2*i\n            break\n    else:\n        dp = dp\nprint(dp%p)"}, "637": {"problem_id": 3637, "answer": "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\nn = I()\na = [0]*30\nfor i in range(n):\n  a.append(int(sys.stdin.readline()))\ntoppings = [\"+\",'-\"]\nfor i in range(30):\n  if a[i]>1/3:\n    print(\"0\",end=\"\")\n  else:\n    print(\"\".join(toppings),end=\"\")\n"}, "638": {"problem_id": 3638, "answer": "from collections import Counter\nn,s=map(int,input().split())\nscores=Counter(map(str,input().split()))\nl=[]\nfor i in range(s):\n p=input()\n l.append(p)\n\nprint('\\n'.join(l))"}, "639": {"problem_id": 3639, "answer": "import math\ndef calc_r() :\n return int(input().strip())\ndef calc_d() :\n return float(input().strip())\nT = int(input())\nR = [0]*T\nD = [0]*T\nfor i in range(T):\n R[i] = calc_r()\n D[i] = calc_d()\n \nr = calc_r()\nd = calc_d()\ns = 0.0\nfor i in range(T):\n s += D[i]*R[i]\n if s>d:\n  break\nprint(s/d)"}, "640": {"problem_id": 3640, "answer": "import sys\ns = input()\nn = len(s)\na = 0\nfor i in range(1,10):\n    if s[i]==\"a\":\n        a+=1\n    elif s[i]==\"b\":\n        a+=2\n    elif s[i]==\"c\":\n        a+=3\n    elif s[i]==\"d\":\n        a+=4\n    elif s[i]==\"e\":\n        a+=5\n    elif s[i]==\"f\":\n        a+=6\n    else:\n        a+=0\nprint(a)"}, "641": {"problem_id": 3641, "answer": "k,n=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nfor i in a:\n if i%2==0:\n  print(\"YES\")\n else:\n  print(\"NO\")"}, "642": {"problem_id": 3642, "answer": "from math import gcd\nn,a,b=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n    a,b=list(map(int,input().split()))\n    l.append((a,b))\nl.sort()\nans=[0]*n\nans[0]=1\ncur=1\nfor i in range(1,n):\n    cur*=l[i][0]\n    cur/=l[i][1]\n    ans[i]=cur\n    if gcd(cur,l[i][1])==1:\n        break\nprint(\"%d/%d\"%(ans[n-1],ans[n-2]))\n"}, "643": {"problem_id": 3643, "answer": "from sys import stdin,stdout\nfrom math import gcd,log2,ceil,sqrt,factorial,pow,pi,log10,cos,acos,tan,cot,atol,hypot,degrees,radians,Donnell,Euclidean,Coffee,Horse,Milk,Beer,Wine,Whistle,Sparrow,Tail,Kata,Iso,Mitsubishi,Kyoto,Suzuki,Vietnamese,Lang,atoi,spades,clubs,diamonds\ninput = stdin.readline\nn = int(input())\nans = 0\nfor i in range(n):\n l,r = list(map(float,input().split()))\n ans+=l*r\n print(ans/n**2)\n"}, "644": {"problem_id": 3644, "answer": "from collections import defaultdict as dd\nn = int(input())\nhirings = dd(int)\nfor i in range(n):\n  firings, hired = map(int, input().split())\n  firings = firings - hired\n  hirings[firing] += hired\nprint(min(hirings))"}, "645": {"problem_id": 3645, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int,input().split()))\nans = []\nfor i in range(1,15000):\n    if A.count(i) == 1:\n        ans.append(i)\nprint((\"\".join(map(str,ans))))"}, "646": {"problem_id": 3646, "answer": "import sys\ndef ii():\n\treturn int(sys.stdin.readline())\ndef si():\n\treturn sys.stdin.readline().strip()\ndef mi():\n\treturn map(int, si().split())\ndef li():\n\treturn [int(x) for x in si()]\ndef mii():\n\treturn map(int, si().split())\ndef smi():\n\treturn map(str, si().split())\ndef li1():\n\treturn [int(x) for x in si()]\ndef main():\n\tn = ii()\n\ta = []\n\tfor i in range(n):\n\t\ta.append(i+1)\n\ta.sort()\n\tprint(a[-1] - a[0])\nmain()"}, "647": {"problem_id": 3647, "answer": "import sys\ninput = sys.stdin.readline\n\nc, r = map(int, input().split())\nM = \"M\"\nedges = [0]*r\nfor i in range(c):\n    edges[i] = input()\n    \nmaze = []\nfor i in range(r):\n    maze.append(i)\nmaze.sort()\ngoal = maze[0]\nalready_visited = set()\nwhile maze:\n    v = maze.pop()\n    if v == goal:\n        print(0)\n        continue\n    visited = visited.union(already_visited)\n    for i in range(4):\n        if maze[i] == '#' or maze[i] == '_' or visited.intersection(already_visited):\n            continue\n        elif maze[i] == '.':\n            already_visited.add(v)\n            continue\n        elif maze[i] == '_' and v not in visited:\n            visited.add(v)\n            maze.append(v)\n            print(len(visited))\n            continue\n        elif maze[i] == 'M' and v not in visited:\n            visited.remove(v)\n            maze.discard(v)\n            print(len(visited))\n            continue\n        elif maze[i] == M:\n            print(1)\n            already_visited.remove(v)\n            visited.add(v)\n            maze.discard(v)\n            print(len(visited))\n            continue\n        else:\n            print(abs(M - v))"}, "648": {"problem_id": 3648, "answer": "import sys\ninput=sys.stdin.readline\n\nn,m,p=list(map(int,input().split()))\ninsecure=list(map(int,input().split()))\n\ns=set()\nfor i in range(n):\n    s.add(insecure[i])\n\ndic={}\nvisited={}\ncost=0\nwhile p!=0:\n    x,y,v=list(map(int,input().split()))\n    if x not in s:\n        visited[x]=1\n        dic[x]=1\n    elif y not in s:\n        visited[y]=1\n        dic[y]=1\n    else:\n        cost+=v\n        for x in s:\n            if x not in visited:\n                visited[x]=1\n                dic[x]=1\n            if x not in dic:\n                dic[x]=1\n                y+=1\n    p-=1\nprint(cost)\n"}, "649": {"problem_id": 3649, "answer": "a,b,c,d=map(int,input().split())\ns=str(a+b+c+d)\nif(len(s)%4!=0):\n print(\"impossible\")\nelse:\n print(s[:len(s)//4])"}, "650": {"problem_id": 3650, "answer": ""}, "651": {"problem_id": 3651, "answer": "from math import sqrt\nn = int(input())\npoints = []\nfor i in range(n):\n    x,y,z = map(int,input().split())\n    points.append([x,y,z])\npoints.sort()\nprint(sqrt(pow(points[0][0]-points[1][0],2))+sqrt(pow(points[0][1]-points[1][1],2)))"}, "652": {"problem_id": 3652, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nd = []\nfor i in range(n):\n    d.append(a[i])\nans = 0\nc = 0\nfor i in range(n):\n    if d[i]!= a[i]:\n        ans += 1\n        c = i + 1\n        d.pop(i)\n        d.insert(0, a[i])\nprint(ans)"}, "653": {"problem_id": 3653, "answer": "import math\nl=int(input())\na,b=list(map(int,input().split()))\nl=l//2\nc=[]\nfor i in range(l):\n    c.append((a[i]+b[i])**2)\nprint(min(c))"}, "654": {"problem_id": 3654, "answer": "import math\ndef prime(n):\n    if n==1:\n        return False\n    elif n==2 or n%2==0:\n        return False\n    else:\n        i = 3\n        while i*i<=n:\n            if n%i==0:\n                return False\n            i+=2\n    return True\nk,n = map(int,input().split())\nl = 0\nfor i in range(1,k+1):\n    if prime(i):\n        l+=i\nprint(l)"}, "655": {"problem_id": 3655, "answer": "import numpy as np\nR,G=list(map(int,input().split()))\nR,G=R.reshape(2,2),G.reshape(2,2)\nR=np.array(R)\nG=np.array(G)\nans=[]\nfor i in range(2):\n ans.append(' '*G[i][0])\n ans.append(' '*R[i][0])\nfor i in range(2):\n ans.append(str(int(ans[i])+1)+' '+str(int(ans[i])+1))\nprint('\\n'.join(ans))"}, "656": {"problem_id": 3656, "answer": "import numpy as np\nl=[]\nfor i in range(1,100):\n\tl.append(list(map(int,input().split())))\nt=int(input())\nm=np.array([i for i in range(t)])\nm=m[2]\ns=10**10\nfor i in range(t):\n\tp,s=l[i]\n\tm=m[0]*p+m[1]*(1-p)\n\tif m>s:\n\t\tm=s\n\tprint(m)"}, "657": {"problem_id": 3657, "answer": "w,vh,n=map(int,input().split())\nl=list(map(int,input().split()))\nl.sort()\nfor i in range(n):\n    x,y=map(int,input().split())\n    if l[y-1]>l[x-1]:\n        l[y-1]=l[x-1]\n    else:\n        l[y-1]=l[x-1]\nans=[]\nfor i in range(1,len(l)):\n    if l[i]<w:\n        ans.append(w-l[i])\nprint(*ans,sep='\\n')\n"}, "658": {"problem_id": 3658, "answer": "import numpy as np\nl=[]\nfor i in range(int(input())):\n a,b=map(int,input().split())\n l.append([a,b])\n np.array(l).reshape(3,3)\n print('%.6f'%np.sum(np.array(l).astype(np.float32))))"}, "659": {"problem_id": 3659, "answer": "import bisect\nn = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\nl = []\ns = []\nm = 0\nfor i in range(n):\n    l.append(a[i][0])\n    s.append(a[i][1])\n    m = max(m, l[i])\n    l.pop(i)\n    s.pop(i)\nprint(m*s)"}, "660": {"problem_id": 3660, "answer": "def main():\n    n = int(input())\n    stck = [input().split() for _ in range(n)]\n    price = [int(x) for x in input().split()]\n    price.sort()\n    s = 'impossible'\n    for i in range(n):\n        s = s +'' + price[i]\n    print(s)\nmain()"}, "661": {"problem_id": 3661, "answer": "import sys\ninput=sys.stdin.readline\nR,S,L=list(map(int,input().split()))\nAns=[]\nfor i in range(L):\n    a,b=list(map(int,input().split()))\n    Ans.append((a,b))\nAns.sort()\nCorps=[]\nfor i in range(L):\n    a,b=list(map(int,input().split()))\n    if(Corps==[0]):\n        Ans.append((a,b))\n    else:\n        if(a>b):\n            Corps.append(a)\n        else:\n            Corps.append(b)\n\nfor i in range(L):\n    if(Corps[i]==1):\n        print(\"INDV\",end=\"\")\n    else:\n        print(\"CORP\",end=\"\")\n"}, "662": {"problem_id": 3662, "answer": "from math import *\nn = int(input())\nl,w = map(int,input().split())\nfor i in range(n):\n p = int(input())\n a = abs(p-l)\n b = abs(p-w)\n if a<b:\n  print(b)\n else:\n  print(a)"}, "663": {"problem_id": 3663, "answer": "n = int(input())\na = []\nfor i in range(n-1):\n    a.append([int(i) for i in input().split()])\na.sort()\nb = [0]*(n+1)\nc = 0\nfor i in range(1, n+1):\n    if a[i-1][0]>=a[i][0]:\n        b[i] = a[i][1] + b[i-1]\n    elif a[i-1][0]<a[i][0]:\n        b[i] = a[i][1] + c\n        c = a[i][0]\nprint(min(b))"}, "664": {"problem_id": 3664, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\ndef main():\n r, c, i, j, n = list(map(int,read().split()))\n moves = []\n for r in range(1, r+1):\n  moves.append((r, c, i, j, n))\n zamboni = []\n for _ in range(n):\n  loop = int(read())\n  if loop % 2 == 1:\n   zamboni.append(chr(97 + \"_\" + chr(122 + \"_\")))\n  else:\n   zamboni.append(chr(97 + \"_\" + chr(122 + \"_\")))\n  loop-=1\n  loop %= 26\n  if loop > 0:\n   zamboni.append(chr(97 + \"_\" + chr(122 + \"_\")))\n print(\"\".join(map(str,zamboni)))\nmain()"}, "665": {"problem_id": 3665, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    z = 10**m\n    for i in range(n):\n        z -= int(str(i) * z)\n    print(\"\".join(map(str, z)))\nmain()\n"}, "666": {"problem_id": 3666, "answer": "import math\nn,d=list(map(int,input().split()))\nR=[]\nfor i in range(n):\n    R.append(int(input()))\nans=[]\nfor i in range(n):\n    if d[i]==R[i]:\n        ans.append(i+1)\nprint(\" \".join(map(str,ans)))\n"}, "667": {"problem_id": 3667, "answer": "import numpy as np\nw,p=map(int,input().split())\nwells=[]\nfor i in range(w):\n    wells.append([int(i) for i in input().split()])\npipes=[]\nfor i in range(w):\n    pipes.append([int(i) for i in input().split()])\n#print(wells)\n#print(pipes)\ndef check(x,y):\n    nonlocal p\n    if p!=0:\n        return False\n    else:\n        p-=1\n        return True\nfor i in range(w):\n    x1,y1=woles[i]\n    x2,y2=woles[i+1]\n    if x1==x2:\n        if y1==y2:\n            continue\n        else:\n            check(x1,y1)\n            check(x2,y2)\n    elif x1>x2:\n        if y1==y2:\n            continue\n        else:\n            check(x1,y2)\n    elif x2>x1:\n        if y1==y2:\n            continue\n        else:\n            check(x1,y2)\nprint(\"impossible\" if check(0,0) else \"possible\")"}, "668": {"problem_id": 3668, "answer": "n,m=map(int,input().split())\nl=[]\nfor i in range(m):\n    a=int(input())\n    l.append(a)\nl.sort()\ncount=0\nfor i in range(m):\n    if l[i]>l[i-1]:\n        count+=1\nprint(count)"}, "669": {"problem_id": 3669, "answer": "import math\nn = int(input())\nl = []\nfor i in range(n):\n l.append(list(map(int,input().split())))\nprint((\"Mirko\" if l[0][0] == l[1][0] else \"Slavko\"))\n"}, "670": {"problem_id": 3670, "answer": "import sys\r\nimport math\r\ndef II(): return int(sys.stdin.readline())\r\ndef LI(): return list(map(int,sys.stdin.readline().split()))\r\ndef LI1(): return list(map(int,sys.stdin.readline().split()))\r\ndef LI2(): return list(map(int,sys.stdin.readline().split(\" \")))\r\ndef S(): return sys.stdin.readline()[:-1]\r\ndef LS(): return list(sys.stdin.readline())\r\ndef I(): return int(sys.stdin.readline())\r\ndef F(): return float(sys.stdin.readline())\r\ndef A(): return input()\r\ndef IS(): return input().rstrip()\r\ndef ANS(): return input().rstrip().split()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}, "671": {"problem_id": 3671, "answer": "import math\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n    b.append(a[i]-4*10**5)\na.sort()\nmax=0\nfor i in range(len(b)):\n    max+=b[i]\nprint(max)"}, "672": {"problem_id": 3672, "answer": "m,n=map(int,input().split())\na=[]\nfor i in range(m):\n    a.append(list(map(int,input().split())))\nans=['YES','NO']\nfor i in range(1,n+1):\n    if a[i]==0:\n        ans.append('NO')\n        continue\n    else:\n        z=0\n        x=0\n        for j in range(len(a[i])):\n            if a[i][j]==0:\n                z=1\n            elif z==1:\n                break\n            else:\n                x=1\n        if z==1:\n            ans.append('YES')\n        else:\n            ans.append('NO')\nprint('\\n'.join(ans))"}, "673": {"problem_id": 3673, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = map(int, readline().split())\narr = list(map(int, readline().split()))\narr.sort()\ni = 0\nans = [None]*n\nans[0] = arr[0]\nfor i in range(1, n):\n    if arr[i] == arr[i-1]:\n        ans[i] = arr[i]\n    else:\n        ans[i] = ans[i-1]\nprint(*ans[1:], sep='\\n')"}, "674": {"problem_id": 3674, "answer": "m, n, p, q = map(int, input().split())\ns = str(p) + '8'*(m-n)\nif len(s) == m:\n    print(s)\nelse:\n    print(s)"}, "675": {"problem_id": 3675, "answer": "from collections import defaultdict as dd, Counter as C\nn,k=map(int,input().split())\na=C(26)\nfor i in range(n):\n    s=input()\n    a[s[0].lower()]=s[1:]\nprint(max(a.values()))"}, "676": {"problem_id": 3676, "answer": "import math\nr,c = map(int,input().split())\nans = 0\nfor i in range(1,4):\n    if r%i==0 and c%i==0:\n        ans += 1\nprint(ans)"}, "677": {"problem_id": 3677, "answer": "from collections import defaultdict as dd\nn,k=list(map(int,input().split()))\nd=dd(list)\nfor i in range(n):\n    d[i].append(int(input()))\ns=defaultdict(int)\nm=0\nfor i in d:\n    if len(d[i])<k:\n        m=max(m,len(d[i]))\nprint(m)\n"}, "678": {"problem_id": 3678, "answer": "import math\ndef isPermutor(l):\n    if l[1]==l[2]:\n        return True\n    elif l[1]!=l[2] or math.sqrt(l[1]**2+l[2]**2)>math.sqrt(l[0]**2+l[1]**2+l[2]**2):\n        return False\n    else:\n        return False\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    if isPermutor(l):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "679": {"problem_id": 3679, "answer": "import math\nn=int(input())\nc=0\nm=math.ceil(n/2)\nwhile(m>0):\n a=int(math.sqrt(m))\n b=a*a\n c=c+a\n m=m-1\nprint(c)"}, "680": {"problem_id": 3680, "answer": "import math\nk,n=map(int,input().split())\na=list(map(int,input().split()))\ns=math.gcd(a[i],a[i-1])\nfor i in range(1,k):\n s=math.gcd(s,a[i])\n a.append(s)\nprint(min(a))"}, "681": {"problem_id": 3681, "answer": "import sys\ninput = sys.stdin.readline\nn,m,q=list(map(int,input().split()))\nt=[]\nfor _ in range(q):\n    x=list(map(int,input().split()))\n    t.append(x)\n    if x[0]==1:\n        d=x[1]\n        print(d)\n    else:\n        d=x[1]\n        q.append(d)\n        t.remove(d)\n"}, "682": {"problem_id": 3682, "answer": "import sys\n\ndef read():\n  return sys.stdin.readline().rstrip()\n\ndef write(s):\n  sys.stdout.write(s+'\\n')\n\nn = int(read())\nfragments = []\nfor i in range(n):\n  fragments.append(read())\n\nfragments.append(read())\n\nfragments.sort(key=lambda x: len(x))\n\ns =''.join(map(str, fragments))\n\nif s[-1] == 'END':\n  print(0)\nelse:\n  lines = [s.split()[-1]]\n  max_match = 0\n  for i in range(len(s)):\n    if s[i] =='':\n      continue\n    match = i+1\n    match_len = 0\n    for j in range(i, len(s)):\n      if s[j] =='':\n        continue\n      match += 1\n      match_len += 1\n    if match_len > max_match:\n      max_match = match_len\n      lines.append(' '.join(map(str, fragments[match])))\n  print(' '.join(map(str, lines)))"}, "683": {"problem_id": 3683, "answer": "p, h = map(int, input().split())\nans = []\nfor i in range(p):\n    ans.append(list(map(int, input().split())))\nprint(min(ans))"}, "684": {"problem_id": 3684, "answer": "n,c=map(int,input().split())\na=[]\nfor i in range(n):\n    p,b,u=map(int,input().split())\n    a.append([p,b,u])\nb=min(a)\nfor i in range(n):\n    print(b-(a[i][0]+c))"}, "685": {"problem_id": 3685, "answer": "r,c=list(map(int,input().split()))\nl=[]\nfor i in range(r):\n    a=list(map(int,input().split()))\n    l.append(a)\np=int(input())\nwhile p>0:\n    turn=0\n    master=0\n    frig=0\n    b,c=list(map(int,input().split()))\n    if b==1:\n        print(turn)\n        continue\n    elif b==2:\n        turn+=26\n        continue\n    elif b==3:\n        turn+=25\n        continue\n    elif b==4:\n        turn+=24\n        continue\n    elif b==5:\n        turn+=23\n        continue\n    elif b==6:\n        turn+=22\n        continue\n    elif b==7:\n        turn+=21\n        continue\n    else:\n        b=1\n        c=l[b][c]\n        if c=='#' or c=='.':\n            master+=1\n            frig-=1\n            turn+=1\n        else:\n            master+=1\n            frig-=1\n            turn+=26\n    p-=1\n"}, "686": {"problem_id": 3686, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nd = {i:[] for i in range(10)}\nfor i in range(n):\n x,y = map(int,input().split())\n d[x].append(y)\n d[y].append(x)\nsuccess = True\nfor i in range(10):\n if abs(x-y)<2:\n  success = False\n elif d[i]==[]:\n  success = True\n else:\n  d[i].pop()\n"}, "687": {"problem_id": 3687, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\nn, q, s = list(map(int, input().split()))\nsensors = [tuple(map(int, input().split())) for _ in range(n)]\nqueues = [tuple(map(int, input().split())) for _ in range(n)]\n\nd = int(input())\n\nans = []\nfor i in range(n):\n    a = list(map(int, input().split()))\n    a.insert(0, 0)\n    ans.append(a)\n\nfor i in range(s):\n    b = list(map(int, input().split()))\n    b.insert(0, 0)\n    ans.append(b)\n\nfor i in range(n):\n    print(\"possible\" if ans[i][0] <= d else \"impossible\")\n"}, "688": {"problem_id": 3688, "answer": "import bisect\nn,m=map(int,input().split())\na=[]\nfor i in range(n):\n\tx,y,t=map(int,input().split())\n\ta.append([x-y,t-1,i])\na.sort()\nb=0\nc=0\nfor i in range(1,n+1):\n\tif a[i][0]>a[i-1][0]:\n\t\tb+=1\n\telse:\n\t\tc+=1\nprint(b//c)"}, "689": {"problem_id": 3689, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\ns = list(map(int, input().split()))\n\ns.sort()\n\nflag = 0\nm = len(s)\n\nfor i in range(m):\n    if s[i] == 9:\n        flag = 1\n        break"}, "690": {"problem_id": 3690, "answer": "h, m, s, t_1, t_2 = list(map(int, input().split()))\nclock = [tuple(map(int, input().split())) for _ in range(12)]\nclock[1] -= 1\nclock[2] -= 1\nclock[3] -= 1\nclock[4] -= 1\nclock[5] -= 1\nclock[6] -= 1\nclock[7] -= 1\nclock[8] -= 1\nclock[9] -= 1\nclock[10] -= 1\nclock[11] -= 1\nclock[12] = h\ns = min(s, 59)\nh %= 12\nm %= 12\nt_1 *= 12\nt_2 *= 12\n\nif s <= t_1 and m <= t_2:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "691": {"problem_id": 3691, "answer": "import sys\ninput = sys.stdin.readline\n\nx, y, a, b = list(map(int, input().split()))\ncoords = [(x, y, a, b) for a, b in zip(map(int, input().split()), list(map(int, input().split())))]\nn = len(coords)\nans = 0\nfor i in range(n):\n    if i == 0:\n        ans += 1\n    elif i == n-1:\n        ans += n\nprint(ans)\n"}, "692": {"problem_id": 3692, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nans = []\nfor i in range(n):\n    x, y, r = map(int, input().split())\n    ans.append([x, y, r])\nprint(max(ans))"}, "693": {"problem_id": 3693, "answer": "import sys\ninput = sys.stdin.readline\n\nS1 = list(map(int, input().split()))\nS2 = list(map(int, input().split()))\n\nans = \"Yes\"\nt = 0\nfor i in range(len(S1)):\n    if S1[i] == S2[i]:\n        t += 1\n    elif t == 2:\n        ans = \"Yes\"\n        break\n    else:\n        t = 0\nprint(ans)"}, "694": {"problem_id": 3694, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"sjfnb\")\nelif n == 2:\n    print(\"cslnb\")\nelse:\n    dp = [0] * n\n    dp[0] = 1\n    dp[1] = a[0]\n    for i in range(2, n):\n        dp[i] = sum(dp[i - 2] * a[i] for i in range(n - 1))\n    print(\"\".join(map(str, dp)))\n"}, "695": {"problem_id": 3695, "answer": "n, t = list(map(int, input().split()))\ns = 0\nfor i in range(1, n):\n    s = max(s, t - t_i + 1)\n    t_i = s + 1\nprint(s)\n"}, "696": {"problem_id": 3696, "answer": "import sys\ninput=sys.stdin.readline\ndef inp():\n    return int(input())\ndef mint():\n    return list(map(int,input().split()))\nn=inp()\nm=n+1\na,b=[],[]\nfor i in range(2,150):\n    while n>0:\n        a.append(mint())\n        b.append(mint())\n        n=n//2\n    if n&1:\n        a.append(a[-1]*b[-1]%a[-1])\n    else:\n        a.append(a[-1]%b[-1])\nprint(m,end=\" \")\nfor i in range(m):\n    print(a[i],end=\" \")"}, "697": {"problem_id": 3697, "answer": "import sys\nread = sys.stdin.readline\n\nn, k, m, a = list(map(int, read().split()))\nv = list(map(int, read().split()))\nvote = [0] * n\nans = []\nfor i in range(n):\n    vote[v[i]] = 1\n    ans.append(i + 1)\n\nmow = max(vote)\nmoy = min(vote)\n\nif moy == 1:\n    print(2)\nelif moy == n:\n    print(1)\nelse:\n    for i in range(1, n + 1):\n        if vote[i] == 1:\n            ans.append(i + 1)\n            break\n    print(*ans, sep='\\n')\n"}, "698": {"problem_id": 3698, "answer": "import sys\ninput = sys.stdin.readline\nm = 10**9+7\nn = int(input())\nk = int(input())\nans = 0\nfor i in range(1,2*k+1):\n    if bin(i)[2:].count('1')==1:\n        ans+=1\nprint(ans%m)"}, "699": {"problem_id": 3699, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9+7\nalp = lambda x: 1<<x.bit_length()\neps = 10**-6\ndd = [(-1,0),(1,0),(0,-1),(0,1)]\ndef add(a,b):\n    c = a+b\n    while c:\n        d = dd[c[0]]\n        e = d[1]\n        if d[0]<0:\n            d[0] += c[2]\n        else:\n            d[1] += c[2]\n        c = c[3]\n    return d\n\nn = int(readline())\na,b,c,d,e,f,g,h,i,j = [0]*6,[0]*6,[0]*6,[0]*6,[0]*6,[0]*6,[0]*6\nfor i in range(n):\n    x,y = list(map(int, readline().split()))\n    a[x] += y\n    b[y] += x\n    c[x] += y\n    d[x] = add(a,b)\n    e[y] = add(c,d)\n    f[y] = add(e,f)\n    g[y] = add(a,g)\n    h[y] = add(b,h)\n    i[x] = add(c,i)\n    j[y] = add(e,j)\n\nprint(min(a,b,c,d,e,f,g,h,i,j))"}, "700": {"problem_id": 3700, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nn, k = map(int, readline().split())\ncnt = 0\nm = INF\nfor i in range(n):\n    m = min(m, i+k)\n    cnt += n//i\nprint(cnt)"}, "701": {"problem_id": 3701, "answer": "n, x, y = list(map(int, input().split()))\ns = input()\ncnt = 0\nfor i in range(n):\n    if s[i] == \"1\":\n        cnt += y\n        s = s[i:]\n    else:\n        s = s[:i] + s[i + 1:]\nprint(cnt)\n"}, "702": {"problem_id": 3702, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, a, d = map(int, readline().split())\nm = a + (n - 1) * d\nans = [0] * m\nans[0] = 0\nfor i in range(1, n):\n    ans[i] = ans[i - 1] + ans[i - 2]\n    \nif ans[n - 1] == 0:\n    print(-1)\n    return\n\nb = int(readline())\ne = int(readline())\n\nprint(ans[b: e + n - 1])"}, "703": {"problem_id": 3703, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9 + 7\nn, k = map(int, input().split())\nF = [1]\nfor i in range(2, n + 1):\n    F.append(F[-1] * i % MOD)\nprint(sum(F[:k]))"}, "704": {"problem_id": 3704, "answer": ""}, "705": {"problem_id": 3705, "answer": "n = int(input())\ns = input()\nm = 0\nfor i in range(n):\n    for j in range(11):\n        if s[i]*10 + j == s[i]*10:\n            m += 1\nprint(m)"}, "706": {"problem_id": 3706, "answer": "import numpy as np\nn,m=list(map(int,input().split()))\na=np.array([[0]*m for i in range(n)])\nb=np.array([[0]*n for i in range(m)])\nc=0\nif n<m:\n    print('-1')\n    return\nfor i in range(n):\n    a[i]+=b[i]\nfor i in range(m):\n    b[i]+=a[i]\nprint(min(c,max(b)))\n"}, "707": {"problem_id": 3707, "answer": "n, t, k, d = list(map(int, input().split()))\nl = n + 1\nans = False\nfor i in range(2*l):\n    if t - k*d <= n:\n        ans = True\n        break\nprint(ans)\n"}, "708": {"problem_id": 3708, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\nmat=[[0 for i in range(n)] for j in range(n)]\nfor i in range(m):\n    x,y=list(map(int,input().split()))\n    mat[x-1][y-1]=1\n    mat[x-1][y]=1\n    mat[x][y-1]=1\n    mat[x][y]=1\nvisited=[False for i in range(n)]\nans=float('inf')\nstack=[]\nfor i in range(n):\n    while stack and visited[stack[-1]]==False:\n        stack.pop()\n    if stack==[]:\n        ans=min(ans,m*n)\n        break\n    stack.append(i)\nprint(ans)\n"}, "709": {"problem_id": 3709, "answer": "n, k = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    a = list(map(int, input().split()))\n    s.add(a[1])\nans = \"YES\" if len(s) <= k//2 else \"NO\"\nprint(ans)\n"}, "710": {"problem_id": 3710, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9+7\nn,m = list(map(int,readline().split()))\na,b = list(map(int,readline().split()))\n\ndef remain(x):\n    if x==0:\n        return 1\n    elif x%2==0:\n        return remain(x//2)\n    else:\n        return remain(x%MOD)\n\nres = 0\nfor i in range(n):\n    if a[i]!=0:\n        continue\n    c = a[i]\n    res+=remain(c)\n    a[i] = c\n\nprint(\"Yes\" if res%m else \"No\")"}, "711": {"problem_id": 3711, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nn, m, k = list(map(int, readline().split()))\nprint(min(n * m, k * (k - 1) * k))"}, "712": {"problem_id": 3712, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i] <= 2:\n        c += 1\nprint(c)"}, "713": {"problem_id": 3713, "answer": "n = int(input())\ns = input()\na = [0] * n\nfor i in range(n):\n    a[i] = s[i]\nm = 0\nans = 0\nfor i in range(n):\n    if a[i] == 1:\n        m += 1\n    else:\n        ans += m\nprint(ans)"}, "714": {"problem_id": 3714, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nans = [0]*n\ncnt = 0\nfor i in range(1, n):\n    if cnt == 0:\n        ans[i] = i\n        cnt += 1\n    elif ans[i] == 0:\n        ans[i] = i\n        cnt = 1\nprint(min(ans))"}, "715": {"problem_id": 3715, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\np = 0\nfor i in range(n):\n    if a[i] == 0:\n        s += 1\n    elif a[i] == 1:\n        p += 1\n    elif a[i] == 2:\n        s += 2\n    else:\n        p += 3\nprint(s + p)"}, "716": {"problem_id": 3716, "answer": "n = int(input())\nans = 0\nfor i in range(3,n,2):\n    ans = i*(i+1)//2\n    if i*(i+1)//2>n:\n        break\nprint(ans)"}, "717": {"problem_id": 3717, "answer": "n = int(input())\nans = []\nfor i in range(n):\n    x1, y1, x2, y2 = map(int, input().split())\n    ans.append([x1, y1])\n    ans.append([x2, y2])\nprint(*ans, sep='\\n')\n"}, "718": {"problem_id": 3718, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in a:\n    if i >= 3:\n        s += 1\n    else:\n        break\nif s > 2:\n    print(\"NO\")\nelse:\n    print(\"YES\")"}, "719": {"problem_id": 3719, "answer": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\nl = list(map(int, input().split()))\ny = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    ans += abs(y[i] - l[i])\nprint(ans)"}, "720": {"problem_id": 3720, "answer": "n = int(input())\nprint(\"Vasya\" if n%2==0 else \"Petya\")"}, "721": {"problem_id": 3721, "answer": "n,m,q = list(map(int,input().split()))\npurchased = [False for i in range(m)]\nfor i in range(q):\n    r,c = list(map(int,input().split()))\n    if purchased[r-1] == False:\n        purchased[r-1] = True\n        purchased[r-2] = True\n        purchased[r-3] = True\n        purchased[r-4] = True\n    elif purchased[r-1] == True:\n        purchased[r-1] = False\n        purchased[r-2] = False\n        purchased[r-3] = False\n        purchased[r-4] = False\n    else:\n        purchased[r-1] = True\n        purchased[r-2] = True\n        purchased[r-3] = True\n        purchased[r-4] = True\nprint(purchased[0] + max(0,int(min(m/2,n))-1))\n"}, "722": {"problem_id": 3722, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nAB = [list(map(int, input().split())) for _ in range(N)]\nMOD = 10**9 + 7\ns = [None]*N\nfor c in AB:\n  s[c[0]] = c[1]\n  s[c[-1]] = c[-1]\n  \nans = 0\nfor i in range(N):\n  if s[i] == A:\n    ans += 1\n  elif s[i] == B:\n    ans += 2*(s[i]==A)\n  else:\n    ans += (s[i]==B)\nprint(ans%MOD)"}, "723": {"problem_id": 3723, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\nprelab = list(map(int, read().split()))\ncnt = 0\nfor i in prelab:\n    if i > 1:\n        cnt += pow(i, 2)\nprint(cnt)"}, "724": {"problem_id": 3724, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\nN = int(input())\nS = input().rstrip()\n\nA = [0]*N\nB = [0]*N\nC = [0]*N\n\nfor i in range(N):\n    if S[i] == 'A':\n        A.append(1)\n    elif S[i] == 'B':\n        B.append(1)\n    elif S[i] == 'C':\n        C.append(1)\n\ncount = 0\nfor i in range(N):\n    if S[i] == 'A':\n        count += A[i]\n    elif S[i] == 'B':\n        count += B[i]\n    elif S[i] == 'C':\n        count += C[i]\n\nprint(count%MOD)"}, "725": {"problem_id": 3725, "answer": "mod = 1000000007\ng = [0] * 100005\nfor i in range(2, 100005):\n    g[i] = (i * g[i - 1]) % mod\nprint(min(abs(g[h_1] - g[a_1]) + abs(g[h_2] - g[a_2]), 1) or -1)"}, "726": {"problem_id": 3726, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef II(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LLI(N): return [LI() for _ in range(N)]\ndef SI(): return input()[:-1]\ndef SI_(): return input()"}, "727": {"problem_id": 3727, "answer": "a, b, c, d = list(map(int, input().split()))\nans = []\nfor i in range(a + b + c + d):\n    ans.append(i)\nprint(' '.join(map(str, ans)))\n"}, "728": {"problem_id": 3728, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\ntable = []\nfor i in range(n):\n    table.append(list(map(int, readline().split())))\n\nd = {}\nfor i in range(1, n + 1):\n    d[i] = 0\n    for j in range(i):\n        d[i] += d[j]\n\nans = True\nfor i in range(n):\n    for j in range(m):\n        if table[i][j] > 1:\n            ans = False\n            break\n    if ans:\n        ans = True\n\nprint(ans)\n"}, "729": {"problem_id": 3729, "answer": "f,w,h = list(map(int,input().split()))\nl = []\nfor i in range(1,f+1):\n    l.append(i)\nfor i in range(w+1):\n    l.append(i)\nl.sort()\nprob = 1\nfor i in range(len(l)):\n    if l[i] == h:\n        prob *= (i+1)**2\n    else:\n        prob *= (l.count(i) + l.count(i+1))**0.5\nprint(prob)\n"}, "730": {"problem_id": 3730, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * 1000001\nfor i in range(1, n):\n    b[i] = max(a[i], a[i - 1]) + 1\n    \nans = 0\nfor i in range(n - 1, -1, -1):\n    if b[i] - b[i - 2] == 1:\n        ans = max(ans, i - 2)\n    elif b[i] - b[i - 2] == 2:\n        ans = max(ans, i - 2)\n    else:\n        ans = max(ans, i - 2)\nprint(ans)"}, "731": {"problem_id": 3731, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nprint = stdout.write\na,b,l,r = list(map(int,input().split()))\ns = [input()]\nm = l+r+1\nfor i in range(1,10**9+10):\n    s.append(chr(97+ord(s[i-1])))\n    if s[m]==s[m-1]:\n        m += 1\nprint(min(m,r-m+1))\n"}, "732": {"problem_id": 3732, "answer": "x, y, m = map(int, input().split())\nn = x + y\ncnt = 0\nif m < 0:\n    print(-1)\n    return\nans = 0\nfor i in range(1, n):\n    if i > m:\n        ans += 1\n    elif i < 0:\n        ans += 2\n    else:\n        ans += 1\nprint(ans)"}, "733": {"problem_id": 3733, "answer": "from sys import stdin\nn,i=map(int,stdin.readline().split())\nl=list(map(int,stdin.readline().split()))\nbit=[0]*(2**i)\nfor i in range(i-1,-1,-1):\n    bit[i]=1\n    bit[i+1]=1\n    while i>0:\n        bit[i>>1]+=bit[i]\n        i>>=1\nprint(sum(bit))\n"}, "734": {"problem_id": 3734, "answer": "s = input().split()\nfor i in range(1, len(s)):\n    if s[i] == s[i-1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "735": {"problem_id": 3735, "answer": "n = int(input())\nans = 0\nfor i in range(n):\n    ans = max(ans, (i + n) % 10)\nprint(ans)"}, "736": {"problem_id": 3736, "answer": "import sys\ninput=sys.stdin.readline\n\ndef is_mirror(s):\n    return \"\".join(s[i] for i in range(len(s))) not in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\ndef main():\n    s=input()\n    if is_mirror(s):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nmain()"}, "737": {"problem_id": 3737, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in a:\n    if i > s:\n        s = i\n    elif i < s:\n        continue\n    else:\n        break\nprint(s)"}, "738": {"problem_id": 3738, "answer": "a, b = list(map(int, input().split()))\ns = input()\ncnt = 0\nfor i in range(len(s)):\n    if s[i] == 'U':\n        cnt += 1\n    elif s[i] == 'D':\n        cnt -= 1\n    elif s[i] == 'L':\n        cnt += 1\n    elif s[i] == 'R':\n        cnt -= 1\n    if cnt > 0:\n        print('Yes')\n        continue\n    else:\n        print('No')\n"}, "739": {"problem_id": 3739, "answer": "import operator\ndef isPrime(n):\n\tif (n <= 1):\n\t\treturn False\n\telif (n <= 3):\n\t\treturn True\n\telse:\n\t\tfor i in range(2,int(n**0.5)+1):\n\t\t\tif (n % i == 0):\n\t\t\t\treturn False\n\t\treturn True\nprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,221,719,723,741,743,751,757,761,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2211,2217,2227,2229,2233,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2313,2319,2321,2327,2329,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,24"}, "740": {"problem_id": 3740, "answer": "from operator import itemgetter\ns = input()\nprint(sum(map(int.__add__, s[i:i + 9])))"}, "741": {"problem_id": 3741, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[i] & a[j]!= 0:\n            cnt += 1\nprint(cnt)"}, "742": {"problem_id": 3742, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\np = list(map(int, input().split()))\nans = 0\ncnt = 0\nfor i in range(n):\n    if p[i] == 0:\n        cnt += 1\n    else:\n        ans += cnt * (cnt + 1) // 2\n        cnt = 0\nprint(ans)"}, "743": {"problem_id": 3743, "answer": "n = int(input())\nprint(n//2 + 1)"}, "744": {"problem_id": 3744, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nn, p, s = list(map(int, read().split()))\na = list(map(int, readline().split()))\nb = list(map(int, readline().split()))\n\nsums = [0] * n\nfor i in range(n):\n    sums[i] += a[i] + b[i]\n\nres = []\nfor i in range(n):\n    if sums[i] > p * sums[i + 1]:\n        res.append(i + 1)\n\nprint(max(res))\nprint(' '.join(map(str, res)))\n"}, "745": {"problem_id": 3745, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v = list(map(int, input().split()))\n    edges[u-1].append(v-1)\n    edges[v-1].append(u-1)\n\nvisited = [False] * n\ncolors = ['black', 'white','red', 'green', 'yellow', 'blue']\nadj = [[] for _ in range(n)]\nfor i in range(n):\n    if visited[i] == False:\n        adj[i].append(i)\n        visited[i] = True\n\nans = []\nfor i in range(n):\n    x = 0\n    for j in range(n):\n        if colors[j] =='red':\n            x += 1\n    ans.append(''.join(str(x) for x in adj[i]))\nprint('Yes' if ans else 'No')\n"}, "746": {"problem_id": 3746, "answer": "import sys\ninput = sys.stdin.readline\nM = [[0 for i in range(3)] for j in range(3)]\nN = int(input())\ns = matrix([[0, 0, 0] for i in range(3)])\nfor i in range(3):\n    s[i][i] = 1\n    M[0][i] = 0\n    M[1][i] = 0\n    M[2][i] = 0\n    M[3][i] = 0\nfor i in range(3):\n    for j in range(3):\n        if s[i][j] == 0:\n            M[i][j] = 2**i-1\n        elif s[i][j] == 1:\n            M[i][j] = min(M[i-1][j], M[i-2][j] + s[i][j])\nprint(M[N-1][N-1])"}, "747": {"problem_id": 3747, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n    if s[i].islower():\n        cnt += 1\nprint(cnt)"}, "748": {"problem_id": 3748, "answer": "import sys\nreadline = sys.stdin.readline\n\nH, W = list(map(int, readline().split()))\nS = [None] * W\nfor i in range(H):\n    S[i] = readline().rstrip()[:-1]\n\nsymm = []\nfor i in range(W):\n    symm.append(S[W//2 - 1] if W%2 else S[W//2])\n\ndef inpl(): return list(map(int, readline().split()))\ndef outpl(): return list(map(int, readline().split()))\n\ndef main():\n    if len(symm) == 0:\n        print(\"NO\")\n        return\n    elif len(symm) == 1:\n        print(\"YES\")\n        return\n    else:\n        i = 0\n        j = 0\n        flag = False\n        while i < H:\n            if i == H-1:\n                i = 0\n                j = 0\n            elif i == H-2:\n                i = H-1\n                j = W-1\n            elif i == H-3:\n                i = H-2\n                j = W-2\n            elif i == H-4:\n                i = H-3\n                j = W-3\n            elif i == H-5:\n                i = H-4\n                j = W-4\n            elif i == H-6:\n                i = H-5\n                j = W-5\n            elif i == H-7:\n                i = H-6\n                j = W-6\n            elif i == H-8:\n                i = H-7\n                j = W-7\n            elif i == H-9:\n                i = H-8\n                j = W-8\n            elif i == H-10:\n                i = H-9\n                j = W-9\n            elif i == H-11:\n                i = H-10\n                j = W-10\n            elif i == H-12:\n                i = H-11\n                j = W-11\n            elif i"}, "749": {"problem_id": 3749, "answer": "from operator import xor\nn, x = list(map(int, input().split()))\na = list(map(int, input().split()))\np = [0] * (2 ** (n + 1))\nfor i in range(n):\n    p[a[i] ^ 2] += 1\nMOD = 998244353\n\ndef f(x):\n    return pow(x, MOD, MOD)\n\nprint(f(x) - f(x ^ 2))"}, "750": {"problem_id": 3750, "answer": "k,a,b=list(map(int,input().split()))\nif k%2==0:\n    print(1)\nelse:\n    m=max(a,b)\n    a,b=b,a+b\n    ans=0\n    for i in range(m):\n        if i%2==0:\n            ans+=1\n        elif i%2!=0:\n            a,b=b,a+b\n            ans+=1\n    print(ans)\n"}, "751": {"problem_id": 3751, "answer": "s = input()\nfor i in range(26):\n    if s.count(i) < s.count(a):\n        print(\"NO\")\n        return\n    elif s.count(i) > s.count(a):\n        print(\"YES\")\n"}, "752": {"problem_id": 3752, "answer": "def main():\n    k, d, t = list(map(int, input().split()))\n    res = 0\n    for i in range(1, k + 1):\n        if i % d == 0:\n            res += t\n        else:\n            res += 2 * t\n    print(res / min(d, t))\n\nmain()\n"}, "753": {"problem_id": 3753, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\na = []\nfor i in range(n):\n    a.append(list(input()))\n\nb = []\nfor i in range(n):\n    b.append([0]*m)\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == \".\":\n            continue\n        else:\n            b[i][j] = 1\n\nc = 0\nfor i in range(n):\n    for j in range(m):\n        if b[i][j] == 1:\n            c += 1\n\nprint(c)\n"}, "754": {"problem_id": 3754, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 998244353\n\ndef main():\n    N = int(input())\n    D = list(map(int, input().split()))\n    D.sort()\n    C = [[] for _ in range(N)]\n    for i, d in enumerate(D):\n        C[d].append(i)\n    "}, "755": {"problem_id": 3755, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nn = int(input())\na = list(map(int, input().split()))\nm = n//2\nans = 0\nfor i in range(m):\n  ans = max(ans, a[0] + br(i+1, a[i]))\nprint(ans)\n"}, "756": {"problem_id": 3756, "answer": "n,t = map(int,input().split())\ngr = float(input())\nif n==1:\n    print(10)\nelif n==2:\n    print(10.35)\nelse:\n    a = gr//n\n    b = gr%n\n    c = a*10\n    d = b*10\n    e = c+d\n    f = e//t\n    g = e%t\n    h = f+g\n    print(max(a,b,c,d,e,f,g,h))"}, "757": {"problem_id": 3757, "answer": "a = list(map(int, input().split()))\ns = '01' + '1'*(a.count(1)//2) + '0'*(a.count(0)//2)\nfor i in range(2, a.count(1)):\n    s += '0'*(a.count(i)//2)\nprint(s)"}, "758": {"problem_id": 3758, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nA = list(map(int, readline().split()))\nans = 0\nfor i in range(1, n + 1):\n    if A[i] == 0:\n        ans += 2\n    elif A[i] == '*':\n        ans += 1\nprint(ans)"}, "759": {"problem_id": 3759, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn = int(readline())\nblocked = 0\nwhile n:\n    n -= 1\n    blocked += 1\n    x = readline().split()\n    if len(x) == 2:\n        x[1] = int(x[1])\n        break\nprint(blocked)"}, "760": {"problem_id": 3760, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m, x, y, a, b = list(map(int, readline().split()))\n\nans = []\n\nfor i in range(n):\n    for j in range(m):\n        ans.append((x+i, y+j, i, j, a*(i+j), b*(i+j)))\n\nprint(*ans, sep='\\n')\n"}, "761": {"problem_id": 3761, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\ns = list(input().rstrip())\nx = [int(i) for i in input().rstrip().split()]\nprint(['F', 'T'[(x[0]%2)==0]], \"Yes\") if x[0]!=0 else print(\"No\")"}, "762": {"problem_id": 3762, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+7\nfactorial = [1]*1048575\nfor i in range(1048575):\n    factorial[i] = factorial[i-1]*i%MOD\nk = int(readline())\nprint(factorial[k]//(factorial[k-1]*factorial[k]%MOD))"}, "763": {"problem_id": 3763, "answer": "import sys\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    p = int(sys.stdin.readline())\n    s = 0\n    l = []\n    for i in range(n):\n        l.append(s)\n        s += a[i]\n    print(sum(l)//p)\nmain()"}, "764": {"problem_id": 3764, "answer": "def solve():\n    n, k, x = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n\n    ans = 10**5\n    for _ in range(k):\n        ans = max(ans, sum(a)^x)\n        ans = min(ans, sum(a)^x)\n\n    print(ans, ans % n)\n\nn, k, x = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ns = solve()\nprint(s[0], s[-1] % n)\n"}, "765": {"problem_id": 3765, "answer": "import sys\ninput = sys.stdin.readline\n\na, b, h, w, n = map(int, input().split())\na = [a[i] for i in range(len(a))]\nextensions = []\nfor i in range(n):\n    extensions.append(int(input()))\n    \nsizes = [a, b, h, w]\nres = 0\nfor i in extensions:\n    if i[2] >= sizes[0] + sizes[1]:\n        break\n    else:\n        res += i[2]\nprint(0 if res == 0 else -1)"}, "766": {"problem_id": 3766, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\ncards = read().split()\ncolors = [0]*25\nfor card in cards:\n    colors[int(card[1])] += 1\nprint(sum(colors))"}, "767": {"problem_id": 3767, "answer": "import sys\ndef get_ints(): return map(int, sys.stdin.readline().split())\ndef get_list(): return list(map(int, sys.stdin.readline().split()))\ndef get_string(): return sys.stdin.readline().strip()\nn = get_ints()\na = get_list()\nb = get_list()\nl = [i for i in range(n)]\ns = sum(a)\nt = get_string()\nans = 0\nfor i in range(n):\n    if l[i] > s:\n        ans += s - l[i]\n    else:\n        ans += t - l[i]\nprint(ans,end=\" \")\nprint(n)"}, "768": {"problem_id": 3768, "answer": "import sys\ninput=sys.stdin.readline\n\nx,y=list(map(int,input().split()))\nif x*y>y*x:\n    print(\"Impossible\")\n    return\n\ns=0\nfor i in range(1,y+1):\n    if i%2==0:\n        s+=1\n    else:\n        s+=2\nprint(\"{0}A{1}B\".format(s,s%2))\n"}, "769": {"problem_id": 3769, "answer": "import sys\ninput = sys.stdin.readline\n\np,k=map(int,input().split())\n\nfac=[0]*(k+1)\nfac[0]=(1<<k)\nfac[1]=(1<<k)\nfor i in range(2,k+1):\n    fac[i]=(fac[i-1]*i)%p\n\nprint(fac[k]%p)"}, "770": {"problem_id": 3770, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\nINF = 10**6\nE = [[] for _ in range(N)]\nfor u, v in zip(A, B):\n    E[u-1].append(v-1)\n    E[v-1].append(u-1)\n\ndef dfs(s, e):\n    stack = [s]\n    cost = 0\n    while stack:\n        u = stack.pop()\n        for v in E[u]:\n            if v not in stack:\n                stack.append(v)\n                cost += A[v]\n                dfs(v, u)\n    return cost\n\ndfs(INF, -1)\nprint(max(dfs(A[i], i) - A[i] for i in range(N)))"}, "771": {"problem_id": 3771, "answer": "from collections import deque\nh,w = list(map(int,input().split()))\nans = []\nfor i in range(h):\n    a = list(map(str,input().split()))\n    ans.append((a[1],a[2]))\n    if a[0] == '.':\n        a[1] += 1\n    elif a[0] == 'o':\n        a[1] += 1\n    elif a[0] == 'S':\n        a[1] //= 2\n    elif a[0] == 'T':\n        a[1] //= 2\nqueue = deque([i for i in range(h)])\nvisited = set([])\nwhile queue:\n    i = queue.popleft()\n    visited.add(i)\n    for j in range(i[1],i[2]):\n        if j in visited:\n            continue\n        else:\n            queue.append(j)\nprint(len(visited)) if visited else -1\n"}, "772": {"problem_id": 3772, "answer": "import sys\nreadline = sys.stdin.readline\na, b = map(int, readline().split())\nprint(max(b, a // b))"}, "773": {"problem_id": 3773, "answer": "import sys\ninput = sys.stdin.readline\n\ndef calc(a,k):\n    if a==k:\n        return 0\n    elif a>k:\n        return a-k\n    else:\n        return max(a-k,calc(a,k-a))\n\nn=int(input())\nA=[int(i) for i in input().split()]\nk=[int(i) for i in input().split()]\ns=0\nfor i in range(n):\n    s+=A[i]\n    k[i]=s\nA.sort(reverse=True)\nB=[0]*n\nfor i in range(n):\n    B[i]=A[i]//k[i]\nif calc(A[n-1],k[n-1])!=0:\n    print(\"Aoki\")\nelse:\n    print(\"Takahashi\")"}, "774": {"problem_id": 3774, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\nans = 0\nc = [0]*n\nfor i in range(1, n):\n    c[i] = c[i-1] + 1\n    ans = max(ans, c[i])\nprint(ans)"}, "775": {"problem_id": 3775, "answer": "import collections\nimport itertools\nimport sys\nimport math as mt\n\n\ndef solve():\n    n, m = map(int, input().split())\n    P = collections.defaultdict(set)\n    Q = collections.defaultdict(set)\n    for i in range(n):\n        P[i].add(input())\n    for i in range(m):\n        Q[i].add(input())\n\n    s = set()\n    for i in range(1, 10):\n        s.add(i)\n    print(s.pop())\n\ndef __starting_point():\n    solve()\n__starting_point()"}, "776": {"problem_id": 3776, "answer": "import sys\nread = sys.stdin.readline\n\ndef main():\n    s = int(read())\n    h, m = map(int, read().split(':'))\n    h %= 12\n    m %= 23\n    print(h*12 + m*23)\n\nmain()"}, "777": {"problem_id": 3777, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nn, m = map(int, input().split())\nedges = [set() for _ in range(n)]\nfor _ in range(m):\n    u, v, w = map(int, input().split())\n    edges[u-1].add((v-1, w-1))\n    edges[v-1].add((u-1, w-1))\n\ndef dfs(s, e):\n    nonlocal ans\n    ans += edges[s].count(e)\n    s.union(e)\ndfs(0, n-1)\nprint(ans)"}, "778": {"problem_id": 3778, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ntargets = [0]*n\nfor i in range(n):\n    targets[i] = a[i]\n\nprint(len(set(targets)))\nfor i in range(1, n):\n    print(targets[i], end=' ')\n    targets[i] = min(3, targets[i])\n"}, "779": {"problem_id": 3779, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nd = 0\nans = [0] * 100001\nfor i in range(1, n):\n    d += a[i]\n    ans[d] = i\n\nprint(len(ans))\nprint(*ans, sep='\\n')\n"}, "780": {"problem_id": 3780, "answer": "import sys\ninput = sys.stdin.readline\n\nx1, y1, x2, y2 = map(int, input().split())\nvmax = int(input())\nt = int(input())\n\ng = [(x1, y1, 0), (x2, y2, 0)]\ng.sort()\n\nd = [(0, 0, 0)]\nfor i in range(1, 100):\n    d.append((max(0, vmax - v[i]), vmax + v[i], i))\n\nans = 0\nfor i in range(t):\n    u = g[0][0] + d[i][0]\n    v = g[1][0] + d[i][1]\n    ans = min(ans, abs(u**2) + abs(v**2))\nprint(ans)"}, "781": {"problem_id": 3781, "answer": "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    ANS = [[] for _ in range(N)]\n    for a in A:\n        if a not in ANS[0]:\n            ANS[0].append(a)\n        else:\n            ANS[a].append(a)\n    print(\"First\" if Tiro else \"Second\")"}, "782": {"problem_id": 3782, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nimport sys\ninput = sys.stdin.readline\nINF = float('inf')\nMOD = int(1e9 + 7)\ndef LI(): return [int(i) for i in input().rstrip('\\n').split()]\ndef LI_(): return [int(i) for i in input().rstrip('\\n').split()]\nn, k, q = LI()\na = list(map(int, input().rstrip('\\n').split()))\nans = 10**18\nfor i in range(n-k+1):\n    ans = min(ans, a[i] - a[i+k-1])\n    br(i+k-1, a[i])\n    br(i+k-1, a[i+k-1])\nprint(ans)"}, "783": {"problem_id": 3783, "answer": "import math\nn,k=list(map(int,input().split()))\nm=10**9+7\nans=0\nfor i in range(1,n+1):\n    ans+=i**k\n    ans%=10**9+7\nprint(ans)\n"}, "784": {"problem_id": 3784, "answer": "n, m = list(map(int, input().split()))\nw = [[] for _ in range(n)]\nfor i in range(1, n):\n    w[i].append(i)\nd = {}\nfor i in range(1, n):\n    d[i] = {}\n    for j in range(n):\n        d[i][j] = d.get(i, 0) + 1\nans = 0\nvisited = [False] * n\ng = [[] for _ in range(n)]\nfor i in range(n):\n    g[i].append(i)\ndef is_similar(u, v):\n    uf = g[u].copy()\n    vf = g[v].copy()\n    for to in uf:\n        if to not in visited:\n            visited[to] = True\n            g[to].remove(to)\n            uf.remove(to)\n    for to in vf:\n        if to not in visited:\n            visited[to] = True\n            g[to].remove(to)\n            vf.remove(to)\n    return visited.intersection(set(uf) & set(vf)) == set(uf & set(vf))\nans += sum([1 for u in w if is_similar(u, v)])\nprint(ans)\n"}, "785": {"problem_id": 3785, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\n \nm = max(m, n)\nw = m + 1\ng = [[] for _ in range(w)]\nfor i in range(n):\n    c = input()\n    g[i].append(c)\n    \ns = int(input())\nl = []\nfor i in range(s):\n    l.append(input())\n    \nq = []\nfor i in range(w):\n    if g[i]:\n        q.append(i)\n    else:\n        l.append('.')\n        \nans = []\nfor i in range(w):\n    if l[i] == 'X':\n        ans.append(''.join(q))\n        l[i] = '.'\nprint('\\n'.join(ans))\n"}, "786": {"problem_id": 3786, "answer": "n = int(input())\np = list(map(int, input().split()))\np.insert(0, 0)\na = 0\nb = 0\nfor i in range(1, n):\n    if p[i] == 1:\n        a += 1\n        b += 1\n    else:\n        a += 2\n        b += 2\nprint(a + b)"}, "787": {"problem_id": 3787, "answer": "import sys\ninput = sys.stdin.readline\nN,A,B = map(int,input().split())\nlis = []\nfor i in range(N):\n    lis.append(list(map(int,input().split())))\nlis.sort()\nif len(lis)==A:\n    print(*lis[:A],sep='\\n')\nelif len(lis)==B:\n    print(*(lis[A] + lis[B]),sep='\\n')"}, "788": {"problem_id": 3788, "answer": "import sys\ninput = sys.stdin.readline\n\ndef readint():\n    return int(input())\n\n\ndef readints():\n    return list(map(int, input().split()))\n\n\nn = readint()\na = readints()\n\nd = []\nfor i in range(n):\n    d.append(a[i])\n\ns = set()\nfor i in range(n):\n    if a[i] > 1:\n        s.add(d[i])\n\nif len(s) == n:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}, "789": {"problem_id": 3789, "answer": "from bisect import bisect_left\ndef inpl(): return [int(i) for i in input().split()]\nn = int(input())\na = inpl()\nm = max(a)\nfor i in range(n):\n    a[i] *= -1\nans = 0\nfor i in range(n):\n    ans += a[i]\n    if ans < m:\n        ans += m\nprint(ans)"}, "790": {"problem_id": 3790, "answer": "n, t = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] < 0:\n        ans += 1\nprint(ans)\n"}, "791": {"problem_id": 3791, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\np = list(map(int, input().split()))\n\ndef findCycle(i):\n    nonlocal d\n    d = abs(i - d)\n    return i, d\n\nans = []\nfor i in range(n):\n    ans.append(findCycle(i))\n\nprint(min(ans), max(ans))\n"}, "792": {"problem_id": 3792, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\ns = input()\nt = input()\n\ncnt = 0\nfor i in range(1, 10):\n    if s[i] == t[i]:\n        cnt += 1\n    else:\n        break\n\nprint(cnt)\n"}, "793": {"problem_id": 3793, "answer": "from collections import deque\ninput = lambda: list(map(int, input().split()))\nl = []\nfor i in input():\n    l.append(i)\n    \nq = deque([l[0]])\nvisited = set()\nwhile q:\n    v = q.popleft()\n    visited.add(v)\n    for i in range(1, len(l)):\n        if l[i] not in visited:\n            q.append(l[i])\n            visited.add(l[i])\nans = \"NO\"\nfor v in visited:\n    ans = ans + str(v)"}, "794": {"problem_id": 3794, "answer": "n = int(input())\na = list(map(int, input().split()))\ngcd = a[0]\nfor i in range(1, n):\n    gcd = gcd * a[i]\n    if gcd % 2 == 0:\n        print(\"YES\")\n        print(1, end=\" \")\n    else:\n        print(\"NO\")\n        print(2, end=\" \")"}, "795": {"problem_id": 3795, "answer": "import sys\nread = sys.stdin.readline\nn,e,d,ed = list(map(int,read().split()))\ncnt = 0\nfor i in range(30,101):\n    if i&1:\n        cnt += e\n        e -= 1\n    else:\n        cnt += d\n        d -= 1\nprint(cnt)"}, "796": {"problem_id": 3796, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nm = max(a)\nans = []\nfor i in range(n):\n    ans.append(a[i] + i + 1)\nprint(m)\nprint(*ans)"}, "797": {"problem_id": 3797, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\nN, M = map(int, input().split())\nl = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\nans = [0]*(N+1)\nfor i in range(1, N+1):\n    ans[i] = (l[i-1] + r[i-1]*x[i])%MOD\n\nprint(ans[M])"}, "798": {"problem_id": 3798, "answer": "import sys\ninput = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9 + 7\nn, s = map(int, input().split())\nif n < s:\n    print(-1)\n    return\nans = 0\nfor i in range(2, n+1):\n    ans += i\n    if pow(b**2, i, MOD) == n:\n        ans += pow(b, i, MOD)\nprint(ans)"}, "799": {"problem_id": 3799, "answer": "s = input()\nn = len(s)\na = [0] * n\nc = 0\nfor i in range(n):\n    if s[i] == s[i - 1]:\n        a[i] = 1\n    else:\n        a[i] = 0\nfor i in range(2, n):\n    if a[i] == 1:\n        c += 1\n    else:\n        c += 2\nprint((\"First\" if c > n - 1 else \"Second\"))"}, "800": {"problem_id": 3800, "answer": "a = int(input())\ns = input()\nb = []\nfor i in range(len(s)):\n    b.append(s[i] * s[i])\nans = 0\nfor i in range(len(s)):\n    for j in range(i+1, len(s)):\n        if b[i] + b[j] == a:\n            ans += 1\nprint(ans)\n"}, "801": {"problem_id": 3801, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\na.sort()\np=1\nq=1\nfor i in range(n):\n    p=p*a[i]\n    q=q+a[i]\nprint(p%998244353)\n"}, "802": {"problem_id": 3802, "answer": "s1, s2, v = list(map(str, input().split()))\nvirus = []\nfor i in range(len(s1)):\n    if s1[i]!= 'A' and s2[i]!= 'A':\n        virus.append(s1[i])\n    elif s1[i]!= 'A' and s2[i] == 'A':\n        virus.append(s2[i])\nv = ''.join(virus)\nprint(max(map(len, v)))\n"}, "803": {"problem_id": 3803, "answer": "def main():\n    y, m, a, d = list(map(int, input().split()))\n    hp = list(map(int, input().split()))\n    hp.insert(0, 0)\n    amt = 0\n    dm = 0\n    for i in range(len(hp)):\n        amt = max(0, y * hp[i] - m * dm - a * amt)\n        dm = max(0, y * hp[i] - m * amt)\n        y -= 1\n    print(amt)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "804": {"problem_id": 3804, "answer": "def cal(n, t):\n    res = 0\n    for i in range(1, n + 1):\n        if n & (1 << i):\n            res += 1\n    return res\n\n\nn, t = map(int, input().split())\nprint(cal(n, t))"}, "805": {"problem_id": 3805, "answer": "import sys\n\ns = input()\n\nif s[0] == '+' and s[1] == '-':\n    print('Yes')\n    return\nelif s[0] == '+' \\\n    and s[1] == '+' \\\n    and s[2] == '-':\n    print('Yes')\n    return\n\nn = len(s)\n\nfor i in range(n):\n    if s[i] == '+' and s[i+1] == '-':\n        continue\n    elif s[i] == '-' and s[i+1] == '+':\n        continue\n    elif s[i] == '+' and s[i+1] == '-':\n        continue\n    elif s[i] == '-' and s[i+1] == '+':\n        continue\n    else:\n        print('No')\n"}, "806": {"problem_id": 3806, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    p = [tuple(map(int, input().split())) for _ in range(n)]\n    p.sort()\n    x, y = p[0], p[-1]\n    r = (x[1] - y[1]) * (x[2] - y[2])\n    print(r)\n\nmain()\n"}, "807": {"problem_id": 3807, "answer": "m = int(input())\nans = 0\nfor i in range(m):\n    a = int(input())\n    ans += a**3\nprint(ans, m)"}, "808": {"problem_id": 3808, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\ns = list(readline().strip())\n\n# b = s.index(True)\n# b = s.index(False)\n\nans = \"Yes\"\nans_l = []\n\nfor i in range(n):\n    if s[i] == \"(\" and b!= -1:\n        ans = ans_l.append(ans)\n        b = s[i] == \"(\"\n    elif s[i] == \")\" and b!= -1:\n        ans = ans_l.append(\"(\")\n        b = s[i] == \"(\"\n\nif b!= -1:\n    ans = ans_l.append(\"(\")\n\nprint(ans)\n"}, "809": {"problem_id": 3809, "answer": "import sys\nreadline = sys.stdin.readline\nn, k = map(int, readline().split())\na = list(map(int, readline().split()))[:n]\nb = list(map(int, readline().split()))[:n]\nans = 0\nfor i in range(1, n+1):\n    if a.count(a[i]) >= k:\n        ans += 1\n    elif b.count(b[i]) >= k:\n        ans += 1\nprint(ans)\n"}, "810": {"problem_id": 3810, "answer": ""}, "811": {"problem_id": 3811, "answer": "import sys\ninput = sys.stdin.readline\ndef geta(): return map(int, input().split())\ndef getb(): return map(int, input().split())\ndef gcd(a, b):\n    if a == 0: return b\n    return gcd(b % a, a)\nn = geta()\na = getb()\nans = a[0]\nfor i in range(1, n):\n    a1 = geta()\n    b1 = getb()\n    ans = gcd(ans, a1[0])\n    if ans == 1:\n        ans = 1\n    elif ans > 1:\n        ans = ans // a1[0]\n    print(ans)\n"}, "812": {"problem_id": 3812, "answer": "import sys\ninput = sys.stdin.readline\n\ns = input().rstrip()\nt = input().rstrip()\n\na = [0]*26\nb = [0]*26\n\nfor i in range(len(s)):\n    a[ord(s[i]) - ord('a')] += 1\n    b[ord(t[i]) - ord('a')] += 1\n\nprint(min(a.count(0), b.count(0), a.count(1), b.count(1)))"}, "813": {"problem_id": 3813, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nP = list(map(int, input().split()))\nX = list(map(int, input().split()))\nd = {}\nfor i in range(N):\n  d[P[i]] = 1\nans = 0\nc = [0] * N\nc.append(0)\nfor i in range(N):\n  if d[P[i]] == 1:\n    ans += 1\n    c[i] = black\n  else:\n    ans += 1\n    c[i] = white\n#print(c)\nfor i in range(1, N):\n  if c[i] == black:\n    ans += 1\n    c[i] = white\n#print(ans)\nprint(ans * (X[N] - 5 * sum(X)))"}, "814": {"problem_id": 3814, "answer": "import math\ndef inpl(): return [2**i for i in range(3,int(math.sqrt(input()))+1)]\ndef inv(a,n): return pow(a,n,n)\ndef main():\n    n,m = map(int,input().split())\n    mod = 10**9+7\n    ans = 0\n    for i in range(n):\n        ans += (inpl())%m\n    print(ans%m)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "815": {"problem_id": 3815, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+9\nn, a, b, k = map(int, readline().split())\ns = list(map(int, readline().split()))\ns.insert(0, 0)\np = [1]\nfor i in range(n):\n    if s[i] == '+':\n        p.append(p[-1]*2)\n    else:\n        p.append(-p[-1]*2)\nans = pow(10, 9) + sum(p)\nprint(ans%MOD)"}, "816": {"problem_id": 3816, "answer": "a, b, c, l = list(map(int, input().split()))\n\ns = 0\n\nfor i in range(3):\n    if l > i:\n        s += a*i\n    elif l < i:\n        s += b*i\n\nprint(s)\n"}, "817": {"problem_id": 3817, "answer": "n, m = map(int, input().split())\nMOD = 1000000009\nfact = [1] * (n + 1)\nfor i in range(2, n + 1):\n    fact[i] = (fact[i - 1] * i) % MOD\nprint(fact[-1] * (n + 1) * pow(2, m - 2, MOD) % MOD)"}, "818": {"problem_id": 3818, "answer": "import sys\ninput = sys.stdin.readline\nwrite = sys.stdout.write\n\nN = int(input())\nA = [list(map(int, input().split())) for _ in range(N-1)]\n\nmod = 10**9 + 7\n\nclass UnionFind():\n    def __init__(self, n):\n        self.par = [-1] * n\n        self.rank = [1] * n\n    "}, "819": {"problem_id": 3819, "answer": "import sys\ninput = sys.stdin.readline\n\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\n\nans=0\nfor i in range(1,n):\n    if a[i]!=0:\n        ans+=1\n        a[i]=max(a[i],b[i])\n\nprint(ans)"}, "820": {"problem_id": 3820, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\ns=input()\nt=input()\n\nif n==m:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"}, "821": {"problem_id": 3821, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\np = list(map(float, readline().split()))\n\nans = 0.0\nfor i in range(1, n):\n    ans = max(ans, p[i] * (1 - p[i]))\n\nprint(ans)"}, "822": {"problem_id": 3822, "answer": "from sys import stdin,stdout\nfrom collections import deque"}, "823": {"problem_id": 3823, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nd=[]\nfor i in range(1,n):\n    d.append(a[i]*a[i-1]+a[i-2])\n    \ndef calc(x):\n    if x<0:\n        return abs(d[-1]-d[0])\n    elif x>len(d):\n        return 0\n    else:\n        return max(calc(x-d[i]),calc(x-d[i-1]))\nprint(calc(0.2))"}, "824": {"problem_id": 3824, "answer": "import sys\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    flag = int(input())\n    flag2 = flag + 1\n    f = flag2 - 1\n    g = flag2 + 1\n    a = [x1, y1, x2, y2]\n    b = [x1, y1, x2, y2]\n    c = [x1, y1, x2, y2]\n    d = [x1, y1, x2, y2]\n    e = [x1, y1, x2, y2]\n    f = 0\n    g = 0\n    h = 0\n    i = 0\n    j = 0\n    k = 0\n    l = 0\n    m = 0\n    n = 0\n    o = 0\n    p = 0\n    q = 0\n    r = 0\n    s = 0\n    t = 0\n    u = 0\n    v = 0\n    w = 0\n    x1, y1 = a\n    x2, y2 = b\n    x1, y1, x2 = c\n    x2, y2, x1 = d\n    x1, y1, x2, y2 = e\n    x2, y2, x1, y1 = f\n    x1, y1, x2, y2, x1, y1 = g\n    x2, y2, x1, y1, x1, y1, x2 = h\n    x1, y1, x2, y2, x1, y1, x2, y1 = i\n    x1, y1, x2, y2, x1, y1, x2, y2 = j\n    x2, y2, x1, y1, x1, y1, x2, y1 = k\n    x1, y1, x2, y2, x1, y1, x2, y2, x1, y1 = l\n    x1, y1, x2, y2, x1, y1, x2, y2, x1, y1, x1 = m\n    x1, y1, x2, y2, x1, y1, x2, y2, x1, y1, x1 = n\n    x1, y1, x2, y2, x1, y1, x2, y2, x1, y1, x1 = o\n    x1, y1, x2, y2, x1, y1, x2, y2, x1, y1, x1 = p\n    x1, y1, x2, y2, x1, y1, x2, y2, x1, y1, x1 = q\n    x1, y1, x2, y2, x1, y1, x2, y2, x1, y1, x1 = r\n    x1, y1, x2, y2, x1, y1, x2, y2, x1, y1, x1 = s\n    x1, y1, x2, y2, x1, y1, x2, y2, x1, y1, x1 = t\n    x1, y1, x2, y2, x1, y1, x2, y2, x1, y1, x1 = u\n    x1, y1, x2, y2, x1, y1, x2, y2, x1, y1, x1 = v\n    x1, y1, x2, y2, x1, y1, x2, y2, x1, y1, x1, y1 = w\n    x1, y1, x2, y2, x1, y1, x2, y2, x1, y1, x1, y1 = x1\n    x1, y1, x2, y"}, "825": {"problem_id": 3825, "answer": "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\ndef MI():\n\treturn map(int,sys.stdin.readline().split())\ndef LI():\n\treturn list(map(int,sys.stdin.readline().split()))\ndef LI2():\n\treturn list(map(int,sys.stdin.readline().split(1)))\ndef MI2():\n\treturn map(int,sys.stdin.readline().split(1))\ndef LI3():\n\treturn list(map(int,sys.stdin.readline().split(0)))\ndef MI3():\n\treturn list(map(int,sys.stdin.readline().split(0)))\ndef LIR(n):\n\treturn [i for i in range(n)]\ndef SR(n):\n\treturn [i for i in range(n)]\ndef ILL(n):\n\treturn [int(i) for i in sys.stdin.readline().split()]\ndef IIR(n):\n\treturn [II() for i in range(n)]\ndef MI2L(n):\n\treturn [m[i] for i in range(n)]\ndef MI3L(n):\n\treturn [MI2() for i in range(n)]\ndef LIR2(n):\n\treturn [LIR() for i in range(n)]\ndef SR2(n):\n\treturn [SR() for i in range(n)]\ndef ILL2(n):\n\treturn [II() for i in range(n)]\ndef __starting_point():\n\tn = II()\n\tans = 0\n\tfor i in range(1,10):\n\t\tans += sum(int(i) for i in str(i))\n\tprint(ans)\n__starting_point()"}, "826": {"problem_id": 3826, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\nans = []\nfor i in range(1, n):\n    if a[i] not in d:\n        ans.append(i)\nprint(len(ans))"}, "827": {"problem_id": 3827, "answer": "s = input()\na = 0\nb = 0\nfor i in range(len(s)):\n    if s[i] == 'a':\n        a += 1\n    elif s[i] == 'b':\n        b += 1\nif a == b:\n    print('YES')\nelse:\n    print('NO')"}, "828": {"problem_id": 3828, "answer": "n = int(input())\nl = list(map(int, input().split()))\nans = 0\nfor i in range(1, n+1):\n    if l[i] > l[i-1]:\n        ans += 1\nprint(ans)"}, "829": {"problem_id": 3829, "answer": "m,n = list(map(int,input().split()))\nprint(3.5e-6)\nfor i in range(1,m):\n    nt = int(input())\n    print(nt/float(m))\n"}, "830": {"problem_id": 3830, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    s=input().rstrip()\n    d=dict()\n    for i in range(n):\n        if s[i]=='>':\n            d.setdefault(i,0)\n        elif s[i]=='<':\n            d[i]+=1\n    print(d.get(0,0))"}, "831": {"problem_id": 3831, "answer": "n = int(input())\nm = [0] * 100001\nfor i in range(n):\n    a, b = map(int, input().split())\n    m[a] = b\nprint(' '.join(map(str, m)))\nprint(' '.join(map(str, sorted(m, reverse=True))))"}, "832": {"problem_id": 3832, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nhills = [0]*n\nfor i in range(n):\n    hills[i] = a[i] - hills[i-1]\n\nk = min(a)\nans = [0]*n\nfor i in range(1, n):\n    if hills[i] > k:\n        k = hills[i]\n        ans[i] = k\n\nprint(*ans)\n"}, "833": {"problem_id": 3833, "answer": "s = input()\nt = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n    if s[i] == '1':\n        cnt += 1\n    elif s[i] == '0':\n        cnt -= 1\nprint(''.join(map(str, [cnt])))"}, "834": {"problem_id": 3834, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m, k = list(map(int, readline().split()))\ns = [list(map(int, readline().split())) for _ in range(n)]\ns.sort()\nd = {i: [] for i in range(1, n + 1)}\nfor i in range(n):\n    d[s[i][0]].append(s[i][1])\n    d[s[i][1]].append(s[i][0])\nans = 0\nfor i in range(1, n + 1):\n    for j in range(1, min(i + k + 1, m) + 1):\n        if d[i].pop() == j:\n            ans += 1\nprint(ans)\n"}, "835": {"problem_id": 3835, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nans = []\nfor i in range(n):\n    ans.append(a[i])\n\nprint(*ans)"}, "836": {"problem_id": 3836, "answer": "import sys\ninput = sys.stdin.readline\n\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    m = sum(a) // 2\n    if m & 1:\n        m += 1\n    if m == 2*len(a):\n        print(2*m)\n    else:\n        print(max(m, 2*len(a)))\n\n\nmain()\n"}, "837": {"problem_id": 3837, "answer": "import sys\ninput=sys.stdin.readline\nn,m,s=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=list(map(int,input().split()))\nd=list(map(int,input().split()))\nE=[-1]*n\nF=[-1]*n\nfor i in range(n):\n    E[i]=a[i]\n    F[i]=i\npasses=s\nwhile passes<=s:\n    m+=1\n    s-=1\n    E[F[m]]=passes\n    F[m]=F[m]%n\n    m+=1\n    passes-=1\nprint('YES' if m else 'NO')\n"}, "838": {"problem_id": 3838, "answer": "n, k = list(map(int, input().split()))\nq = list(map(int, input().split()))\ns = list(map(int, input().split()))\nm = s[0]\nm = list(map(int, input().split()))\nans = \"YES\"\nfor i in range(1, n):\n    if m[i]!= m[i - 1]:\n        ans = ans + \"NO\"\nprint(ans)\n"}, "839": {"problem_id": 3839, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nknight = [list(map(int, input().split())) for _ in range(n)]\n\nfree = [False for _ in range(n)]\n\nvisited = [0 for _ in range(n)]\n\nwhile True:\n    cnt = 0\n    for i in range(n):\n        if visited[i] == 0 and knight[i][0] == i:\n            cnt += 1\n            visited[i] = 1\n        elif visited[i] == 1 and knight[i][0] == i:\n            cnt += 1\n            visited[i] = 0\n            knight[i] = [i, i]\n            free[i] = True\n            visited[i] = 1\n        else:\n            break\n    if cnt >= len(knight) / 2:\n        break\n    free[nodemap(i, n) - 1] = True\n    visited[nodemap(i, n) - 1] = 1\n    \nprint(*free, sep='\\n')"}, "840": {"problem_id": 3840, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(1, n + 1):\n    if a[i] <= n:\n        cnt += 1\nprint(cnt)"}, "841": {"problem_id": 3841, "answer": "MOD = 1000000007\np, k = map(int, input().split())\nif p < k:\n    print(-1)\n    return\nf = [0] * (k - 1)\nfor i in range(2, k):\n    f[i] = f[i - 1] + pow(i, MOD - 2, MOD)\nprint(len(f))\nfor i in range(len(f)):\n    print(f[i], end ='')"}, "842": {"problem_id": 3842, "answer": "import sys\ninput = sys.stdin.readline\n\nn, p, q = list(map(int, input().split()))\nproject = [tuple(map(int, input().split())) for _ in range(n)]\nexperience = [0] * 100000\nmoney = [0] * 100000\nfor i in range(n):\n    a, b = project[i]\n    experience[a] += p\n    money[a] += q\n    experience[b] += experience[a]\n    money[b] += money[a]\n\nprint(min(n * (1 + experience[i] / 100000) + (1 + money[i] / 100000) for i in range(n)))\n"}, "843": {"problem_id": 3843, "answer": "import sys\nreadline = sys.stdin.readline\n\nn,m = list(map(int,readline().split()))\ns = 0\nfor i in range(n):\n    s += n//10**(m-1)\n    s += n%10**(m-1)\nprint(s)"}, "844": {"problem_id": 3844, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0]*(n+1)\nfor i in range(1, n+1):\n    p[i] = p[i-1] + a[i]\nprint('\\n'.join(map(str, p)))\n"}, "845": {"problem_id": 3845, "answer": "from collections import deque\n\nA, B = list(map(int, input().split()))\n\ns = [[] for _ in range(101)]\nfor i in range(101):\n    s[i].append(i)\n\nvisited = [0] * 101\nans = []\nwhile True:\n    v = deque([])\n    visited[v] = 1\n    for i in range(101):\n        if visited[i] == 0:\n            v.append(i)\n    if A == v[0] and B == v[-1]:\n        ans.append(''.join(map(str, v)))\n        break\n    print(' '.join(map(str, v)))\n    for i in range(101):\n        if visited[i] == 0:\n            ans.append(''.join(map(str, v)))\n            break\n    print('\\n'.join(ans))\n"}, "846": {"problem_id": 3846, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\ns = set()\nfor i in range(m):\n    s.add(int(input()))\n\nt = sorted(s)\nans = []\nfor i in range(n):\n    if t[i] == i:\n        ans.append(i + 1)\n\nprint(len(ans))\nprint(*ans)\n"}, "847": {"problem_id": 3847, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nx=int(input())\nans=0\nif n==1:\n    print(sum(a))\nelif m==1:\n    print(sum(b))\nelse:\n    dp=[[0 for i in range(m+1)] for j in range(n+1)]\n    for i in range(1,n+1):\n        for j in range(1,m+1):\n            dp[i][j]=(dp[i-1][j-1]+a[i-1]*b[j-1])\n        ans=max(ans,dp[n][m])\n"}, "848": {"problem_id": 3848, "answer": "from collections import deque\nn, p = [int(i) for i in input().split()]\ns = input()\nd = {i: [] for i in range(26)}\nfor i in range(n):\n    d[i].append(i)\n    \nans = []\nq = deque([0])\nwhile q:\n    i = q[0]\n    while i < n:\n        if s[i]!= s[i-1]:\n            ans.append(i)\n            q.append(i+1)\n        i += 1\nprint('NO' if ans == [0] else ''.join(map(str, ans)))\n"}, "849": {"problem_id": 3849, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k=map(int,input().split())\ns=input().strip()\n\nif sum(k)<n:\n    print(\"once again\")\nelse:\n    d=0\n    for i in range(1,n+1):\n        if s[i-1]==\"1\":\n            d+=1\n        elif s[i-1]==\"0\":\n            d-=1\n        else:\n            break\n    if d==0:\n        print(\"tokitsukaze\")\n    ELSE:\n        print(\"quailty\")"}, "850": {"problem_id": 3850, "answer": "import sys\nreadline = sys.stdin.readline\nn, k, p = list(map(int, readline().split()))\na = list(map(int, readline().split()))\nb = list(map(int, readline().split()))\nk.sort()\nt = 0\nfor i in range(k):\n    t += abs(a[i] - b[i]) * k[i]\nprint(t)"}, "851": {"problem_id": 3851, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9 + 7\nn, k = list(map(int, readline().split()))\na, b = list(map(int, readline().split()))\ns = min(a, b)\nd = [INF]*(k+2)\nfor i in range(1, n+1):\n    d[i] = min(d[i-1], a)\n    d[i] = min(d[i], b)\nprint(s, end=\" \")\nprint(d[n-1], end=\" \")\n"}, "852": {"problem_id": 3852, "answer": "import sys\nsys.setrecursionlimit(10**8)\nINF = float(\"inf\")\nMOD = 10**9+7\ninput = lambda: list(map(int,input().split()))\ndef I(): return int(input())\ndef S(): return input().split()\ndef LI(): return list(map(int,input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef LS(): return list(input())\ndef SR(rows_number): return [sr() for _ in range(rows_number)]\ndef LSR(rows_number): return [lsr() for _ in range(rows_number)]\ndef SR2(rows_number): return [sr2() for _ in range(rows_number)]\ndef LSR2(rows_number): return [lsr2() for _ in range(rows_number)]\n\nN = I()\nA = LI()\ns = S()\ns.append(-2)\ns.append(2*N-1)\ns.append(2*N-3)\ns.append(2*N-4)\nprint(*s,sep=\"\\n\")\n"}, "853": {"problem_id": 3853, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nA = [0]*n\nfor i in range(n):\n    k, a = map(int, readline().split())\n    A[i] = k + a\nB = [0]*n\nfor i in range(n):\n    k, a = A[i]\n    B[i] = k + a\nprint(2**max(B[:2]))"}, "854": {"problem_id": 3854, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = sum(a)\nd = {0: 0}\nfor i in range(1, n+1):\n    d[a[i]] = i\nans = 0\nfor i in range(1, n+1):\n    if d[i] < k:\n        ans += i\nprint(ans)\n"}, "855": {"problem_id": 3855, "answer": "n = int(input())\nans = 0\nfor i in range(1, n+1):\n    if i % 2 == 0:\n        ans += 1\nprint(ans)"}, "856": {"problem_id": 3856, "answer": "n = int(input())\nans = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    ans.append((a + b) // 2)\nprint(min(ans))"}, "857": {"problem_id": 3857, "answer": "import sys\nn = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    b = a.copy()\n    b.pop(i)\n    s += b.count(1)\nprint(s)"}, "858": {"problem_id": 3858, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\npoints = [[int(x) for x in input().split()] for _ in range(N)]\nconvexHull = []\nfor i in range(N):\n    if points[i][0]!= points[i][1]:\n        convexHull.append(i)\n\nMOD = 998244353\nINF = 10**9+7\nfac = [0]*N\ns = 2**N-1\nfor i in range(N):\n    fac[i] = sum(fac[j]*(2*i-1) for j in range(N))%MOD\nprint(fac[N])"}, "859": {"problem_id": 3859, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nc = [list(map(int, input().split())) for i in range(N)]\nc.sort()\nw = [None]*N\nb = [None]*N\nfor i in range(N):\n    if c[i][1] == W:\n        w[i] = i\n    else:\n        b[i] = i\n\nans = 0\nfor i in range(N-1):\n    ans += w[b[i]] - w[a[i]]\nprint(ans)"}, "860": {"problem_id": 3860, "answer": "import sys\ninput = sys.stdin.readline\nb, g, n = map(int, input().split())\na = int(input())\ncnt = 0\nwhile a!= 0:\n    a -= b\n    cnt += (n-a)\nprint(cnt)"}, "861": {"problem_id": 3861, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = max(a)\nfor i in range(n):\n    if a[i]%1!=0:\n        m = max(m, a[i])\nprint(m)"}, "862": {"problem_id": 3862, "answer": "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))\nc1 = a[0]\nc2 = a[0]\nfor i in range(1,k):\n    c1 = (c1 + 1000*(i+1))//(i+1)\n    c2 = (c2 + 1000*(i+1))//(i+1)\nprint(min(c1,c2))\n"}, "863": {"problem_id": 3863, "answer": "import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nMOD = 10**9+7\nfac = [0]*(K+1)\nfor i in range(1, K+1):\n  fac[i] = fac[i-1]*i % MOD\nans = fac[K]\nfor i in range(len(fac)):\n  ans = (ans - fac[i]) * i % MOD\nprint(ans)"}, "864": {"problem_id": 3864, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 998244353\n\nn = int(input())\nboard = [[0] * (n + 1) for _ in range(n + 1)]\nfor i in range(1, n + 1):\n    board[i][i] = 1\n\nfor i in range(1, n + 1):\n    for j in range(1, i + 1):\n        board[i][j] &= ~board[i - 1][j]\n\np = [0] * (n + 1)\ns = [0] * (n + 1)\nfor i in range(1, n + 1):\n    p[i] = p[i - 1] + board[i][i]\n    s[i] = s[i - 1] + board[i][i]\n\nfor i in range(1, n + 1):\n    for j in range(1, i + 1):\n        p[i] &= ~p[j]\n        s[i] &= ~s[j]\n\nprint(''.join(str(x) for x in p).ljust(n, '0'))\n"}, "865": {"problem_id": 3865, "answer": "a = int(input())\nb = str(a)\nc = len(b)\nd = []\nfor i in range(1,10):\n    d.append(b[i])\n    if i%10==0:\n        d.append(i)\nprint(sum(d))"}, "866": {"problem_id": 3866, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nMOD = 10**9+7\ndp = [[0]*n for _ in range(n+1)]\nfor i in range(n):\n    dp[1][i+1] = dp[1][i] + i + 1\n    dp[1][i+1] = pow(dp[1][i+1], MOD, MOD)\n    dp[1][i+1] = dp[1][i] + dp[1][i+1]\n\nans = [0]*(n+1)\nans[1] = 1\nfor i in range(2, n+1):\n    for j in range(i, 1, -1):\n        ans[i] += dp[i-j][j]\n        ans[i] %= MOD\nprint(*ans, sep='\\n')\n"}, "867": {"problem_id": 3867, "answer": "n = int(input())\nt = list(map(int, input().split()))\nans = []\nfor i in range(n-1):\n    x, y = map(int, input().split())\n    ans.append((x, y))\nans.sort()\nused = [False]*n\nused[1] = True\nq = deque([1])\nvisited = [False]*n\nwhile q:\n    v = q.popleft()\n    for nei in ans:\n        if used[nei[0]] == False:\n            used[nei[0]] = True\n            q.append(nei[0])\n            visited[nei[0]] = True\n            print(nei[1])\n"}, "868": {"problem_id": 3868, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\nt = [list(map(int, input().split())) for i in range(m)]\nt = sorted(t, key=lambda x: x[1])\nans = 10**18\nfor i in range(1, n+1):\n    ans = min(ans, k*t[i-1][0] + t[i][0])\nprint(ans)\n"}, "869": {"problem_id": 3869, "answer": "import sys\ninput = sys.stdin.readline\n\nw, h, alpha = list(map(int, input().split()))\nangle = (alpha // 30) * 30\n\nprint(w * h * math.sin(angle))\n"}, "870": {"problem_id": 3870, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=map(int,input().split())\ncards=[]\nfor i in range(n):\n    cards.append(input().rstrip()+\" \")\n\nc=0\nd=0\nfor i in range(n):\n    if cards[i][0]==\"DEF\":\n        d=d+1\n    elif cards[i][0]==\"ATK\":\n        c=c+1\nprint(max(c,d))"}, "871": {"problem_id": 3871, "answer": ""}, "872": {"problem_id": 3872, "answer": "a = input()\nb = input()\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "873": {"problem_id": 3873, "answer": "n = int(input())\ns = [0] * (n + 1)\nfor i in range(1, n + 1):\n    s[i] = i\n    s[i - 1] = s[i] + 1\nans = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    ans.append(' '.join(map(str, (s[a], s[b]))))\nprint('YES' if ans else 'NO')"}, "874": {"problem_id": 3874, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(n):\n        b.append(input().rstrip('\\n'))\n    c = 0\n    for i in range(1, n):\n        if b[i] in a:\n            c += 1\n        else:\n            break\n    if c == m:\n        print(\"Yes\")\n        print(\" \".join(map(str, b[1:])))\n    else:\n        print(\"No\")\nmain()\n"}, "875": {"problem_id": 3875, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18\nmod = 10**9 + 7\n\nN = int(readline())\nA = list(map(int, readline().split()))\ns = [INF] * N\nfor i in range(N):\n    s[i] = A[i]\n    lis = [s[i-1]]\n    for j in range(i)[::-1]:\n        lis.append(s[j])\n        s[j] = min(s[j], s[j-1])\n    ans = 0\n    for i in range(len(lis) - 1):\n        if lis[i+1] < lis[i]:\n            ans += 1\n    print((ans % mod))\n"}, "876": {"problem_id": 3876, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**9+7)\n\ndef dijkstra(G, s):\n    d = [0]*(N+1)\n    d[s] = 1\n    for i in range(N):\n        u = s+i\n        v = d[u]\n        d[v] = d[u] + d[v]\n        d[u] = v\n    return d\n\nN = int(input())\nM = 10**9+7\nans = dijkstra(G, 0)\nfor i in range(1, N//2+1):\n    ans.append(ans[-1]*(ans[-1] + ans[i]*2))\nprint(ans[N%2])"}, "877": {"problem_id": 3877, "answer": "import sys\ninput = sys.stdin.readline\n\nn, l, r = map(int, input().split())\ns = [1]\nfor i in range(l)[::-1]:\n    s.append(s[-1] + n)\n    sys.stdout.write(\"{0}\".format(s[-1]))\n    s.pop()\n\nprint(sum(0 for i in range(r+1) if s[i] == 1))"}, "878": {"problem_id": 3878, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nadj = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v = list(map(int, input().split()))\n    u -= 1\n    v -= 1\n    adj[u].append(v)\n    adj[v].append(u)\n\nprint(min(n * (n - 1) // 2, sum(adj[i] for i in range(n))) + m)\nprint(adj[0][0] == 1)\n"}, "879": {"problem_id": 3879, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in a:\n    if i > cnt:\n        cnt = i\n        print('Yes')\n        break\n"}, "880": {"problem_id": 3880, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in a:\n    if i > 0:\n        cnt += i\n    elif i < 0:\n        cnt -= i\nprint(max(cnt, 0))"}, "881": {"problem_id": 3881, "answer": "import sys\nreadline = sys.stdin.readline\nn, q = list(map(int, readline().split()))\ns = [0]*26\nd = set()\nfor i in range(n):\n    a, b = list(map(str, readline().split()))\n    d.add((a, b))\n    s[ord(a)-97] = b\n    s[ord(b)-97] = a\ncnt = 0\nm = 0\nfor i in range(1, n):\n    if s[i] == \"a\":\n        cnt += (m+1)\n        m = 0\n    elif s[i] == \"b\":\n        m += (cnt+1)\n        cnt = 0\n    else:\n        m += (cnt+2)\nprint(m)"}, "882": {"problem_id": 3882, "answer": "import sys\ninput = sys.stdin.readline\n\ndef factors(n):\n    i = 2\n    while i <= n:\n        if n % i == 0:\n            yield i\n            for j in factors(i):\n                print(j,end=' ')\n                i += 1\n        else:\n            i += 1\n\nn = int(input())\ndp = [[0]*(n+1) for _ in range(2)]\nfor i in range(1,n+1):\n    dp[i][i] = 1\n    for j in factors(i):\n        dp[i][j] = dp[i][j] + dp[i-1][j]\n\nprint(dp[-1][-1])"}, "883": {"problem_id": 3883, "answer": "import sys\ndef main():\n    a, b = list(map(int, sys.stdin.readline().split()))\n    print(format(a * b, 'f'))\n    if a * b < 0:\n        print(-1)\n    else:\n        print(format(a * b, 'f'))\n    "}, "884": {"problem_id": 3884, "answer": ""}, "885": {"problem_id": 3885, "answer": "n = int(input())\nprint(n + 1)\n"}, "886": {"problem_id": 3886, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+1\nMOD = 10**9+7\n\ndef main():\n    q = int(readline())\n    for _ in range(q):\n        n,k = list(map(int, readline().split()))\n        f =''.join(sorted(f'{n}'+s for s in readline()))\n        print(f)\n\nmain()\n"}, "887": {"problem_id": 3887, "answer": "import re\ns = input()\nd = {}\nfor i in s:\n    if i == '?':\n        d[i] = 'Possible'\n    else:\n        d[i] = 'Impossible'\nans = ''.join(d.get(i, i) for i in s)\nprint(ans)\n"}, "888": {"problem_id": 3888, "answer": "from collections import deque\nN = int(input())\nmatrix = [[0]*N for _ in range(N)]\nfor i in range(N):\n    matrix[i][i] = 1\n    matrix[i][i-1] = 2\nans = 0\nque = deque([])\nque.append(0)\nans += 2\nwhile que:\n    curr = que.popleft()\n    for i in range(N):\n        if matrix[i][curr] == 2:\n            ans += 1\n        elif matrix[i][curr] == 1:\n            que.append(i)\n        else:\n            que.append(i)\nprint(ans)"}, "889": {"problem_id": 3889, "answer": "n = int(input())\ns = input()\nc = 0\nfor i in range(26):\n    if s[i] == s[i + 1]:\n        c += 1\n    else:\n        break\nif c > 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "890": {"problem_id": 3890, "answer": "from math import ceil\nn, k = list(map(int, input().split()))\np = [0] * (n + 1)\nfor i in range(1, n + 1):\n    p[i] = p[i - 1] + ceil(i - k)\nprint(p[n])\n\n"}, "891": {"problem_id": 3891, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\n\ndef main():\n    ans = []\n    for i in range(n):\n        ans.append(chr(ord('B') - 1 + i % 2))\n    print(' '.join(ans))\n\nmain()\n"}, "892": {"problem_id": 3892, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10 ** 9 + 7\ninput = lambda: readline().rstrip()\nn, m = list(map(int, input().split()))\ncnt = [0] * n\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    cnt[a - 1] += 1\n    cnt[b - 1] += 1\nans = []\nfor i in range(n):\n    if cnt[i] == 0:\n        ans.append(i + 1)\nprint(*ans, sep='\\n')"}, "893": {"problem_id": 3893, "answer": "import sys\ninput = sys.stdin.readline\n \nx,y=list(map(int,input().split()))\nn=int(input())\na=list(map(int,input().split()))\nb,c=list(map(int,input().split()))\nif x==y:\n    print(0)\n    return\nfor i in range(n):\n    if a[i]!=0:\n        if b[i]!=0:\n            if abs(a[i] - b[i])>abs(a[i] - c[i]):\n                a[i]=c[i]\n            elif abs(a[i] - b[i])==abs(a[i] - c[i]):\n                a[i]=c[i]\n            else:\n                break\n        else:\n            print(i+1)\n            return\n"}, "894": {"problem_id": 3894, "answer": "from bisect import bisect_left as bl\nn,k=map(int,input().split())\na=list(map(int,input().split()))\ns=set()\nfor i in range(n):\n    s.add(a[i])\nb=bl(s,k)\nif b:\n    print('Kevin')\nelse:\n    print('Nicky')"}, "895": {"problem_id": 3895, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in range(1, n + 1):\n    if a[i] not in s:\n        s.add(a[i])\n        for j in range(i):\n            s.add(a[j])\nprint(min(s))\nprint(*s)"}, "896": {"problem_id": 3896, "answer": "n = int(input())\ns = str(bin(n).replace(\"0b\", \"\")[2:])\np = 10**9 + 7\ndef calc(a, b):\n    return (a & 1) ^ (b & 1)\n\nans = pow(2, n - 1, p)\nfor i in range(n >> 1):\n    ans *= calc(i, ord(s[i]) - 97)\nprint(ans % p)\n"}, "897": {"problem_id": 3897, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\nfact = [1]\nfor i in range(1, 10000005): fact.append(i*i)\nfact.append(1)\nn = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in a: d[i] = 1\nfor i in a:\n    if i not in d: d[i] = 1\n    d[i] += d[i-1]\ns = set()\ns.add(1)\ndp = [1]*(n+1)\ndp[1] = dp[2] = 1\nfor i in range(2, n+1):\n    if d[i] == 1:\n        dp[i] = (dp[i-1]*s[s.pop()])%1000000007\n    else:\n        dp[i] = (dp[i-1]*s[s.pop()]%1000000007)%1000000007\nprint(dp[n])"}, "898": {"problem_id": 3898, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = \"YES\"\nfor i in range(n):\n    if a[i] == 0:\n        ans = ans + \"no\"\n    elif b[i] == 0:\n        ans = ans + \"no\"\nprint(ans)"}, "899": {"problem_id": 3899, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\np = [0] * 50\nfor i in range(n):\n    p[a[i]//2] += p[a[i]//2 - 1]\n    p[a[i]//2 + a[i]%2] += p[a[i]//2 - a[i]%2]\nans = 0\nfor i in range(n):\n    ans += max(p[i]//2, 0) * b[i]\nprint(ans)"}, "900": {"problem_id": 3900, "answer": "import sys\ninput = sys.stdin.readline\n\nn, p = list(map(int, input().split()))\nd = [set() for i in range(n)]\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    d[x].add(y)\n    d[y].add(x)\n\nans = 1\nfor i in range(2, n):\n    if len(d[i]) > 0:\n        ans += d[i].count(i) * (p - len(d[i]))\n\nprint(ans)\n"}, "901": {"problem_id": 3901, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom bisect import bisect_interval as bi\nn,a=int(input()),list(map(int,input().split()))\nd=dict()\nfor i in a:d[i]=d.get(i,0)+.1\nb=[i for i,j in enumerate(a) if i!=j]\nc=[0]*(1000001)\nfor i in range(1,1000001):\n    c[i]=i\nq=max(b)\nr=min(b)\nwhile True:\n    if br(q)<r:break\n    q-=d[q]\n    r+=d[r]\n    d[q]=0\nprint(r)"}, "902": {"problem_id": 3902, "answer": "s = input()\nn = len(s)\ncnt = 0\nd = {}\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\nfor i in d:\n    cnt += d[i]\nprint(cnt)\nfor i in list(d.values()):\n    print(i,end=' ')"}, "903": {"problem_id": 3903, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nn, m = list(map(int, read().split()))\ns = [[] for _ in range(n)]\nfor i in range(n):\n    s[i].append(input())\n\nans = 10000000000\nfor i in range(1, n):\n    for j in range(len(s[i])):\n        if s[i][j] == '.':\n            continue\n        ans = min(ans, i - s[i][j])\nprint(ans)\n"}, "904": {"problem_id": 3904, "answer": "import math\nn = int(input())\ns = input()\ns = s.replace(\"(\",\"\")\ns = s.replace(\")\",\"\")\ns = s.split()\nm = 0\nfor i in range(n):\n    if s[i] == \"+\" and s[i+1] == \"1\":\n        m += math.ceil(i)\n    elif s[i] == \")\" and s[i+1] == \"1\":\n        m += i\n    elif s[i] == \"(\":\n        m += i\nprint(m)"}, "905": {"problem_id": 3905, "answer": ""}, "906": {"problem_id": 3906, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nfact = [1]*1000001\nfact[0] = 1\nfor i in range(1,1000001):\n    fact[i] = (fact[i]*i)%MOD\nn,m = map(int,input().split())\nprint(fact[n]*fact[m]%MOD)"}, "907": {"problem_id": 3907, "answer": "n,m = map(int,input().split())\na = [int(i) for i in input().split()]\nr = [0]*n\nc = [0]*n\nfor i in range(m):\n    x,y = map(int,input().split())\n    r[x-1] += y\n    c[y] += 1\ns = sum(r[1:])\nd = sum(c[1:])\nans = s+d\nprint(ans)"}, "908": {"problem_id": 3908, "answer": "s = input()\nn = len(s)\nans = 0\nfor i in range(n):\n    if s[i] not in \"abcdefghijklmnopqrstuvwxyz\":\n        ans += 2 ** (n - i - 1)\nprint(ans)"}, "909": {"problem_id": 3909, "answer": "n = int(input())\nans = 0\nfor i in range(1, n+1):\n    if i % 3 == 0:\n        ans += 1\nprint(ans)"}, "910": {"problem_id": 3910, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = [0]*2*n\nb = [0]*2*n\nfor i in range(n):\n    a[i], b[i] = list(map(int, readline().split()))\n\nans = [\"1\\n2\"]\nfor i in range(2*n):\n    if a[i]!= b[i]:\n        ans.append(\"2\\n%d\\n%d\" % (b[i], a[i]))\n\nprint(\"\\n\".join(ans))"}, "911": {"problem_id": 3911, "answer": "n = int(input())\nslimes = [1]\nfor i in range(2, n+1):\n    slime = list(map(int, input().split()))\n    slime.append(slime[i-1] + 1)\n    if slime[-1] == slime[-2]:\n        slime.pop()\n    else:\n        slime.append(slime[-1] + 1)\n    slimes.append(slices[-1])\nprint(' '.join(map(str, slime)))"}, "912": {"problem_id": 3912, "answer": "n = int(input())\ns = input()\nl = [0]*26\nfor i in range(n):\n    l[ord(s[i])-97] += 1\nans = 0\nfor i in range(26):\n    if l[i]%2!=0:\n        ans += 1\nprint(ans)\nprint(' '.join(map(str, l)))"}, "913": {"problem_id": 3913, "answer": "from sys import stdin\ninput = stdin.readline\n\ndef check(s):\n    cnt = 0\n    for i in range(len(s)):\n        if s[i] == '*':\n            cnt += 1\n        elif s[i] == s[i+1]:\n            cnt += 2\n        else:\n            return False\n    return True\n\nn = int(input())\ns = input().rstrip()\nm = list(map(int, input().split()))\n\nprint(check(s))"}, "914": {"problem_id": 3914, "answer": ""}, "915": {"problem_id": 3915, "answer": "import sys\nread = sys.stdin.readline\nreadline = lambda: sys.stdin.readline().rstrip()\n\np, q = map(int, read().split())\nans = 1\nprimes = [1]\nfor i in range(2, p+1):\n    if i**2 < q:\n        break\n    q-=i\n    primes.append(primes[-1]*i+primes[-1])\n\ndef prime_factors(n):\n    i = 2\n    factors = []\n    while i<=n:\n        while n%i==0:\n            n//=i\n            factors.append(i)\n        i+=1\n    if n>1:\n        factors.append(n)\n    return factors\n\ndef main():\n    if p<=10**4:\n        print(prime_factors(p))\n    elif p<=10**5:\n        print(\"Pali\" + \"drom\" + \"mik\" + \"rwm\")\n    else:\n        print(\"Pali\" + \"drom\" + \"mik\" + \"rwm\")\n\nmain()"}, "916": {"problem_id": 3916, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nfragments = list(map(int, input().split()))\nsys.setrecursionlimit(10**5)\n\n# A node $P$ is the emotion samples' assembly node if and only if the\n# following conditions hold:\n#   - $P$ is the $i$-th node in the undirected graph of the system (1-indexed)\n#   - the length of the shortest path from $P$ to node $i$ is the $i$-th element of fragments\n# If there are multiple nodes satisfying the above conditions, the answer is\n# multiple of the length of the shortest path.\nP = 1\ns = [0] * (10**6+1)\nd = collections.defaultdict(list)\nfor i in range(1, 10**6+1):\n    d[i].append(P)\n\nans = 0\nfor i in range(n):\n    s[i] = 0\n    d[fragments[i]].append(P)\n\ndef dfs(node, s):\n    for fragment in d[node]:\n        if s[fragment] == 0:\n            continue\n        s[fragment] = s[node] + len(dfs(fragment, s))\n        ans += s[fragment]\n        dfs(fragment, s)\n\ndfs(P, s)\nprint(ans)\n"}, "917": {"problem_id": 3917, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(2 ** (n - 1) + min(a))"}, "918": {"problem_id": 3918, "answer": "n,k1,k2 = list(map(int,input().split()))\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = n*n\nd = n*n\ne = 0\nfor i in range(n):\n    a[i] += a[i-1]\n    \nfor i in range(n):\n    b[i] += b[i-1]\n    \nfor i in range(n):\n    c -= a[i]*b[i]\n    \nfor i in range(n):\n    d -= b[i]*c\n    \nfor i in range(n):\n    e += a[i]*b[i] - 2*a[i]*c + 2*c*b[i]\nprint(e)"}, "919": {"problem_id": 3919, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\nN, M = map(int, input().split())\nS = input().rstrip()\n\nl = [0]*(N+1)\nr = [0]*(N+1)\nfor i in range(1, N+1):\n    l[i] = 1\n    r[i] = 1\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    a-=1\n    b-=1\n    l[a] += l[b]\n    r[b] += r[a]\n\nprint(l.count(0)%MOD)"}, "920": {"problem_id": 3920, "answer": "from fractions import gcd\ns = list(map(int, input().split()))\na = sorted(s)\nans = 0\nfor i in range(5):\n    ans += gcd(a[i], i)\nprint(ans)\n"}, "921": {"problem_id": 3921, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort\nn = int(input())\na = list(map(int, input().split()))\ns = sorted(a)\nm = len(s)\nans = 0\nfor i in range(m):\n    if s[i] < s[i] + 1:\n        ans = max(ans, i + 1)\nprint(ans)"}, "922": {"problem_id": 3922, "answer": ""}, "923": {"problem_id": 3923, "answer": "import sys\ninput = sys.stdin.readline\nN, A, B = map(int, input().split())\nans = [A, B]\nfor i in range(1, N+1):\n    if ans[i] == B:\n        ans.append(ans[i-1] + B)\n    else:\n        ans.append(ans[i-1])\nprint(' '.join(map(str, ans)))"}, "924": {"problem_id": 3924, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+5\nns = lambda: list(map(int, readline().split()))\nni = lambda: int(readline())\nnl = lambda: list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\n\ndef main():\n    n, k = ni()\n    arr = nl()\n    ans = INF\n    for i in range(1, k+1):\n        ans = min(ans, arr[i-1] + n*(i-1)//(k-i))\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "925": {"problem_id": 3925, "answer": "s = input()\nn = len(s)\nans = 0\nfor i in range(n):\n    if s[i] == 'b':\n        ans += 1\nprint(ans)"}, "926": {"problem_id": 3926, "answer": "import sys\nreadline = sys.stdin.readline\nn, m = list(map(int, readline().split()))\nr, c = list(map(int, readline().split()))\nab = [tuple(readline().split()) for _ in range(n)]\nab.sort()\nans = [0]*n\nfor i in range(n):\n    a, b = ab[i]\n    if b-a <= 0:\n        ans[i] = 0\n    elif b-a > 1:\n        ans[i] = 1\n    else:\n        ans[i] = ans[i-1] + 1\nprint(max(ans))"}, "927": {"problem_id": 3927, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\n\nprint(max(n, len(a) - k))"}, "928": {"problem_id": 3928, "answer": "n, a, b = list(map(int, input().split()))\ns = input()\nans = 0\nfor i in range(n - 1):\n    if s[i] == '1':\n        ans += a\n    elif s[i] == '2':\n        ans += b\nprint(ans)\n"}, "929": {"problem_id": 3929, "answer": "import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nMOD = 10**9+7\nfac = [0]*(N+1)\nfac[1] = 1\nfor i in range(2, N+1):\n    fac[i] = fac[i-1]*i%MOD\nans = fac[N]\nprint(ans%MOD)"}, "930": {"problem_id": 3930, "answer": "from collections import defaultdict\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nd = defaultdict(int)\nfor i in range(n):\n    d[a[i]] += 1\n    \nans = 0\nfor i in range(1, k):\n    ans += d[i] * (d[i - 1] * i)\nprint(ans)\n"}, "931": {"problem_id": 3931, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, a, b, k, f = list(map(int, readline().split()))\ns = [0] * 20\ns[a] = 'A'\ns[b] = 'a'\np = []\nfor i in range(n):\n    p.append((s[i], i))\n    \nk = min(a, b)\nf = min(f, a + b)\n\nt = 0\nc = 0\ncur = 0\nfor i in range(1, 20):\n    if s[i] == 'a':\n        t += 1\n        c += 1\n    elif s[i] == 'A':\n        t += 1\n        c += 1\n    else:\n        t += 1\n        c += 1\n        cur += k\n        k = min(a, b)\n        s[i] = ''.join(s[i].upper() + s[i].lower() for i in range(20))\nprint(cur)"}, "932": {"problem_id": 3932, "answer": "n = int(input())\nl = list(map(int, input().split()))\nroot = [False for i in range(n + 1)]\nfor i in l:\n    if root[i] == False:\n        root[i] = True\nans = \"YES\"\nfor i in range(1, n + 1):\n    if root[i] == False:\n        ans = \"NO\"\n        break\nif ans == \"YES\":\n    print(ans)\nelse:\n    print(ans)"}, "933": {"problem_id": 3933, "answer": "n = int(input())\nt = list(map(int, input().split()))\np = t[0]\nfor i in range(1, n):\n    p = p + t[i]\nprint(p)\n"}, "934": {"problem_id": 3934, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = ['NO']*n\n\nedges = []\nfor i in range(n-1):\n    a, b = list(map(int, input().split()))\n    edges.append((a, b))\n\nvisited = [False]*n\nvisited[0] = True\n\nfor i in range(1, n):\n    if visited[i]:\n        continue\n    visited[i] = True"}, "935": {"problem_id": 3935, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nb = list(map(int, input().split()))\n\nedges = []\nfor i in range(n):\n    if b[i] not in edges:\n        edges.append(b[i])\n\nvisited = [False] * n\nans = [0] * n\n\nfor i in range(1, n):\n    if visited[i]:\n        continue\n    visited[i] = True\n    ans[i] = len(edges)\n    for j in range(i):\n        if visited[j] == False:\n            ans[i] = min(ans[i], ans[j] + 1)\n\nprint(ans[-1])\nprint(*ans[::-1])"}, "936": {"problem_id": 3936, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9 + 7\n\ndef main():\n    n = int(input())\n    s = input().rstrip()\n    if n == 1:\n        print(0)\n        return\n    d = [[0] * n for _ in range(n)]\n    for i in range(n):\n        d[i][i] = 1\n    for i in range(n):\n        for j in range(n):\n            if s[i] == s[j] \\\n                and d[i][j] == 2:\n                d[i][j] = 1\n            elif s[i] == 'a' \\\n                or s[i] == 'b' \\\n                or s[i] == 'c' \\\n                or s[i] == 'd' \\\n                or s[i] == 'e' \\\n                or s[i] == 'f' \\\n                or s[i] == 'g' \\\n                or s[i] == 'h' \\\n                or s[i] == 'i' \\\n                or s[i] == 'j' \\\n                or s[i] == 'k' \\\n                or s[i] == 'l' \\\n                or s[i] =='m' \\\n                or s[i] == 'n' \\\n                or s[i] == 'o' \\\n                or s[i] == 'p' \\\n                or s[i] == 'q' \\\n                or s[i] == 'r' \\\n                or s[i] =='s' \\\n                or s[i] == 't' \\\n                or s[i] == 'u' \\\n                or s[i] == 'v' \\\n                or s[i] == 'w' \\\n                or s[i] == 'x' \\\n                or s[i] == 'y' \\\n                or s[i] == 'z']\n            else:\n                d[i][j] = 1\n    ans = pow(2, n, MOD)\n    for i in range(n):\n        ans *= d[i][n]\n        ans %= MOD\n    print(ans)\n\nmain()\n"}, "937": {"problem_id": 3937, "answer": "import sys\ninput = sys.stdin.readline\n\n\nn, m, k = list(map(int, input().split()))\nA = [int(x) for x in input().split()]\nans = []\nfor i in range(k):\n    ans.append(A[i] % i)\n\nanswer = \"YES\"\nfor i in range(n):\n    for j in range(m):\n        if (ans[i] == ans[j]):\n            answer = \"YES\"\n            break\nprint(answer)"}, "938": {"problem_id": 3938, "answer": "import sys\ninput = sys.stdin.readline\n \nn, m = list(map(int, input().split()))\n \ngrid = [[] for _ in range(n)]\n \nfor i in range(m):\n    x, y, x1, y1, cost = list(map(int, input().split()))\n    grid[x].append((y, i))\n    grid[y].append((x1, i))\n \ndef dfs(x, y, gr):\n    nonlocal ans\n    ans = min(ans, cost)\n    grid[x].remove((y, i))\n    grid[y].remove((x1, i))\n    \n    for i in range(1, n):\n        if grid[x][i] == []:\n            continue\n        else:\n            dfs(x, y, grid[x][i])\n            dfs(x, y, grid[y][i])\n \nans = 0\ndfs(0, 0, grid)\n \nprint(ans)\n"}, "939": {"problem_id": 3939, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    a=[int(i) for i in input().split()]\n    a.sort()\n    b=[]\n    for i in range(n):\n        if a[i]>k:\n            b.append(a[i])\n        elif a[i]==k:\n            b.append(a[i])\n        else:\n            b.append(a[i])\n    print('yes' if len(b)==len(set(b)) else 'no')"}, "940": {"problem_id": 3940, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\nA = [None] * n\nans = [None] * n\nB = [None] * n\nC = [None] * n\nd = dict()\nfor i in range(n):\n    d[A[i]] = i\n    B[i] = d.get(A[i], 0) + 1\n    C[i] = d.get(A[i], 0)\n\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    x -= 1\n    y -= 1\n    if x not in d:\n        d[x] = i\n        ans[i] = x\n    elif y not in d:\n        d[y] = i\n        ans[i] = y\n\nprint(max(ans))\nprint(*ans)\n"}, "941": {"problem_id": 3941, "answer": "n, m = list(map(int, input().split()))\nL = list(map(int, input().split()))\nswitches = [tuple(map(int, input().split())) for _ in range(m)]\nd = {i: [] for i in range(n)}\nfor s, r in switches:\n    d[s].append(r)\n    if s not in d:\n        d[s].append(0)\ns = 0\nfor i in range(n):\n    if d[i]:\n        s += 1\nprint(['NO', 'YES'][s%2])\n"}, "942": {"problem_id": 3942, "answer": "s = input()\nn = len(s)\nans = []\nfor i in range(n):\n    if s[i] == '(' and n-i <= n.index('('):\n        ans.append(i)\n    elif s[i] == ')' and i >= n.index('('):\n        ans.append(n.index(s[i]))\nprint(' '.join(map(str, ans)))\n"}, "943": {"problem_id": 3943, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\na, b = list(map(int, read().split()))\ncnt = 0\nmant = [0]*(a+b+2)\nfor i in range(a+b):\n    cnt += pow(2, i)\n    if i&1:\n        cnt += 1\n    mant[i] = max(mant[i], cnt)\nprint(mant[0] + max(mant[1:a]))\nprint((''.join(map(str, mant))))"}, "944": {"problem_id": 3944, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort\nfrom collections import defaultdict as dd, deque\nimport sys\ninput = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9+7\n\nn, m, k = list(map(int, input().split()))\np = [[dd(int).fromkeys(input()) for i in range(n)] for j in range(k)]\np[0][0] = 0\n# Alice\nalice = bl(alice, 0, 0)\n# \u5982\u679c\u6709\u4e00\u4e2a\u9519\u8bef\uff0c\u90a3\u4e48\u5c31\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\nbob = bl(bob, 1, 0)\ncpr = br(cpr, 0, len(p[0]))\ndpr = br(dpr, 0, len(p[0]))\nfor i in range(1, n+1):\n    alice.append(p[i][0])\n    bob.append(p[i][1])\n    cpr.pop()\n    dpr.pop()\nans = pow(k, MOD-2, MOD)\nfor i in range(k):\n    ans *= pow(k-i, MOD-2, MOD)\nprint(ans%MOD)"}, "945": {"problem_id": 3945, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nstreets = [list(map(int, input().split())) for _ in range(n)]\nans = [0] * n\nfor i in range(n):\n    ans[streets[i][1]] = i + 1\n\ndp = [[float('inf')] * m for _ in range(n)]\nvisited = [False] * n\nvisited[0] = True\nfor i in range(1, n):\n    visited[i] = True\n    dp[i] = [0] * m\n\ndef f(x):\n    nonlocal ans\n    for i in range(m):\n        for j in range(n):\n            if ans[i] == ans[j] and not visited[i]:\n                dp[i][j] = min(dp[i][j], dp[i - 1][j] + x)\n            elif ans[i] == ans[j] and visited[i]:\n                dp[i][j] = min(dp[i][j], dp[i - 1][j] + x)\n            else:\n                dp[i][j] = min(dp[i][j], dp[i - 1][j] + x)\n            ans[i] = max(ans[i], 1)\n            dp[i][j] = min(dp[i][j], 1)\n\nfor i in range(len(streets)):\n    print(dp[f(streets[i][1])][m - 1])\n"}, "946": {"problem_id": 3946, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nweight=[0]*n\nfor i in range(n):\n    weight[a[i]]+=1\nans=0\nfor i in range(m):\n    ans+=weight[a[i]]-1\nprint(ans%998244353)\n"}, "947": {"problem_id": 3947, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(1, n + 1):\n    b.append(a[i - 1] + a[i])\nans = 0\nfor i in range(n):\n    if b[i] > a[i]:\n        ans += b[i]\nprint(ans)"}, "948": {"problem_id": 3948, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn,k=list(map(int,input().split()))\nedges=[[] for i in range(n)]\nfor i in range(n-1):\n    u,v=list(map(int,input().split()))\n    edges[u].append(v)\n    edges[v].append(u)\nif k==1:\n    print('Yes')\nelse:\n    print('No')\n"}, "949": {"problem_id": 3949, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\nL = [[] for i in range(n)]\nR = [[] for i in range(n)]\n\nfor i in range(n):\n    L[i].append(input())\n    R[i].append(input())\n\ncolors = [\"#\", \".\"]\nfor i in range(n):\n    colors[i] = input()\n\ndef is_valid(p1, p2):\n    return len(L[p1] & R[p2]) == 1\n\ndef place_magnets(grid, n_magnets, r_magnets, col_magnets):\n    for i in range(n_magnets):\n        if is_valid(grid[r_magnets-1][i], grid[r_magnets-1][i+1]):\n            grid[r_magnets-1][i] = colors[i]\n            grid[r_magnets-1][i+1] = colors[i]\n            n_magnets -= 1\n        elif is_valid(grid[r_magnets-1][i+1], grid[r_magnets-1][i]):\n            grid[r_magnets-1][i+1] = colors[i]\n            n_magnets -= 1\n        else:\n            grid[r_magnets-1][i+1] = colors[i]\n            n_magnets -= 1\n            n_magnets -= 1\n            n_magnets -= 1\n            place_magnets(grid, n_magnets, r_magnets, col_magnets)\n"}, "950": {"problem_id": 3950, "answer": "import sys\ninput = sys.stdin.readline\n\nn, q = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nb = []\nfor i in range(n):\n    b.append(a[i])\n\nans = [0] * q\ncnt = 0\nfor i in range(q):\n    cnt += 1\n    m = i + 1\n    while m < n:\n        if b[m] == 0:\n            ans[m] = cnt\n        m += 1\n    ans[i] = m\n    cnt += 1\nprint('YES' if ans.count(1) == q else 'NO')"}, "951": {"problem_id": 3951, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\na = list(map(int, readline().split()))\ng = [0] * (n + 1)\nfor i in range(1, n + 1):\n    g[i] = g[i - 1] + a[i - 1]\nprint(*g)\n"}, "952": {"problem_id": 3952, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\npoints = []\nfor i in range(n):\n    x, y = map(int, readline().split())\n    points.append((x, y))\n\ndef is_same(p1, p2):\n    return p1 == p2\n\ndef find_intersection(points, l1, r1, l2, r2):\n    i = 0\n    while i < len(points) - 2:\n        if is_same(points[i], points[i + 1]) and is_same(points[i + 1], points[i]):\n            i += 1\n        elif is_same(points[i], points[i + 1]) and not is_same(points[i + 1], points[i]):\n            return None\n        else:\n            i += 2\n    return i\n\nans = 0\nfor i in range(n):\n    if find_intersection(points, l1, r1, l2, r2):\n        ans += 1\nprint(ans)"}, "953": {"problem_id": 3953, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nt = [[] for i in range(n)]\nfor i in range(n):\n    t[i].append(input().rstrip())\n\nres = [0]*n\ncnt = [0]*n\nfor i in range(n):\n    cnt[i] = 0\n    for j in range(n):\n        if t[i][j] == '.':\n            cnt[i] += 1\n            if cnt[i] > 1:\n                res[i] = -1\n                break\n        else:\n            res[i] = cnt[i]\nprint(' '.join(map(str, res)))"}, "954": {"problem_id": 3954, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += a[i]\n  tmp = s\n  for j in range(i, n):\n    tmp = max(a[j], tmp)\n    s = max(s, tmp)\nprint(s)\n"}, "955": {"problem_id": 3955, "answer": "n, k, x = map(int, input().split())\na = list(map(int, input().split()))\nres = 0\nfor i in range(n):\n    res = (res << x) | a[i]\nprint(res)"}, "956": {"problem_id": 3956, "answer": "import sys\ninput = sys.stdin.readline\nK,N = map(int,input().split())\nMOD = 998244353\nfac = [0]*(K+1)\nfac[1] = 1\nfor i in range(2,K+1):\n    fac[i] = fac[i-1]*fac[i-2]%MOD\nprint(*fac[1:])"}, "957": {"problem_id": 3957, "answer": "from sys import stdin, stdout\nn, k = list(map(int, stdin.readline().split()))\nunivs = list(map(int, stdin.readline().split()))\nsums = [0] * n\nfor i in range(n):\n    sums[i] = sums[i] + abs(univs[i] - univs[i - 1])\nprint(sum(sums[:k]));"}, "958": {"problem_id": 3958, "answer": "s = input()\nn = len(s)\nzebra = [0] * n\nfor i in range(n):\n    if s[i] == '0':\n        zebra[i] = 1\n    elif s[i] == '1':\n        zebra[i] = 0\ncnt = 0\nans = []\nfor i in range(n):\n    if zebra[i] == 1:\n        cnt += 1\n        ans.append(cnt)\nprint(len(ans))\nfor i in range(len(ans)):\n    print(ans[i],end=' ')\n"}, "959": {"problem_id": 3959, "answer": "import sys\ninput = sys.stdin.readline\nM = 10**9+7\n\nn, m = list(map(int, input().split()))\nevo = {}\npog = [0]*26\ngym = [set() for _ in range(n+1)]\n\nfor _ in range(n):\n    gym[input().rjust(6,'')] += [int(i) for i in input().split()]\n\nfor i in range(1, n+1):\n    gym[i].discard(gym[i-1])\n\ng = gym[n]\ns = set()\nfor i in range(m):\n    s.add(g[i])\n    evo[i] = gym[g[i]]\n\nans = 1\nfor i in range(len(s)):\n    if gym[i] not in s:\n        ans = (ans * (26 ** (len(s) - 1 - gym[i]))) % M\n        \n    elif gym[i] in s:\n        ans = (ans * gym[i] % M) % M\n\nprint(ans)\n"}, "960": {"problem_id": 3960, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = abs(a[0] - a[n-1])\nfor i in range(1, n):\n    m = max(m, abs(a[i] - a[i - 1]) * (-1) ** (n - i - 1))\nprint(m)"}, "961": {"problem_id": 3961, "answer": "n = int(input())\np = list(map(int, input().split()))\nans = 0\nfor i in range(1, n + 1):\n    ans += p[i] % 1000000007\nprint(ans)\n"}, "962": {"problem_id": 3962, "answer": "n = int(input())\ncircles = []\nfor i in range(n):\n    circles.append(list(map(int, input().split())))\n\nprint(min(circles))"}, "963": {"problem_id": 3963, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nm = int(input())\nc = []\nd = 1\nfor i in range(n - 1):\n    c.append(a[i] / a[i + 1])\n    d *= a[i] // a[i + 1]\n    d %= 10**9 + 7\n    \nans = 1\nfor i in range(1, n + 1):\n    ans *= pow(d, i, 10**9 + 7)\n    ans %= 10**9 + 7\nprint(ans)\n"}, "964": {"problem_id": 3964, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\nns = lambda: list(map(int, read().split()))\nnl = lambda: list(map(int, read().split()))\nmo = 10**9 + 7\n\nn, m, b = ns()\na = nl()\ncnt = [0]*501\nfor i in range(n):\n    cnt[a[i]] += 1\n    if a[i] < b:\n        b = a[i]\nprint(mo*(b-1)%mo)"}, "965": {"problem_id": 3965, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nlines = input().split(' ')\nn = int(lines[0])\npo = [0]*26\nfor i in range(n):\n    po[lines[i][1]] += 1\n    if lines[i][0] =='':\n        continue\n    po[chr(97 + i)] += 1\nprint('YES' if po[0]==po[1] else 'NO')"}, "966": {"problem_id": 3966, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\nscores = [0]*(n+1)\nfor i in range(1, n+1):\n    scores[i] += sum(A[:i])\n    if i&1:\n        scores[i] += sum(A[i:]) + scores[i&1]\nprint(max(scores))"}, "967": {"problem_id": 3967, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = [0] * (n + 1)\nfor i in range(1, n + 1):\n    b[i] = b[i - 1] + a[i]\nprint(min(k, b[n]))\n"}, "968": {"problem_id": 3968, "answer": "import sys\ndef inp():\n    return sys.stdin.readline().strip()\ndef out(n,end=\"\\n\"):\n    sys.stdout.write(\"{:d} {:d}\\n\".format(n,end))\ndef outa(*args):\n    sys.stdout.write(\" \".join(map(str,args)))\nn,d=inp()\nc=list(map(int,input().split()))\ninfected=[]\nfor i in range(n):\n    s,e=inp()\n    if s!=e:\n        infected.append(i)\nd=int(d)\nprint(*infected,sep=\" \")"}, "969": {"problem_id": 3969, "answer": "def main():\n    from sys import stdin, stdout\n    inf = float('inf')\n    m = int(stdin.readline())\n    ans = 0\n    for _ in range(m):\n        line = stdin.readline()\n        x = list(map(float, line.split()))\n        x.sort()\n        for i in range(len(x)):\n            if x[i] == '1':\n                ans += 1\n            else:\n                break\n        print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "970": {"problem_id": 3970, "answer": "n, k = map(int, input().split())\nl = list(map(int, input().split()))\nres = [1] * n\nfor i in l:\n    res[i] = 0\n    for j in range(i, n):\n        if i == j:\n            continue\n        res[i] += res[j]\n        res[j] += 1\nprint('\\n'.join(str(i) for i in res))"}, "971": {"problem_id": 3971, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nb = [0] * 10000001\nfor i in range(1, n):\n    b[a[i]] += 1\n    ans += max(b[a[i]-1], b[a[i]], b[a[i] + 1], b[a[i] - 1])\nprint(ans)"}, "972": {"problem_id": 3972, "answer": "from itertools import accumulate\nmod = 10**9 + 7\nINF = float('inf')\n\ndef f(n):\n  nonlocal a\n  a = list(accumulate(a))\n  for i in range(1, n):\n    a.append(i)\n  return a[n]\n\ndef I(): return int(input())\ndef F(): return float(input())\ndef S(): return input()"}, "973": {"problem_id": 3973, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nn,m = map(int,input().split())\na = list(map(int,input().split()))\ncnt = 0\nd = deque()\nfor i in range(n-1):\n    d.append(a[i])\n    cnt += d[i] - a[i]\n    if cnt < m:\n        d.popleft()\n        d.pop()\nans = n//cnt\nprint(ans)"}, "974": {"problem_id": 3974, "answer": "s=input()\nn=len(s)\na=0\nfor i in range(n):\n    if s[i]=='+':\n        a+=1\n    elif s[i]=='-':\n        a-=1\nprint(a)"}, "975": {"problem_id": 3975, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [list(map(int, input().split())) for i in range(n)]\n\na.sort(key=lambda x: x[0])\n\nd = [0]*n\nfor i in range(n):\n    d[a[i][1]] = i\n\nprint('01'*n + '1'*(n-len(d)))\n"}, "976": {"problem_id": 3976, "answer": "n, m, p = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n\np = sum(p)\nans = 0\nfor i in range(n):\n    if a[i] + p < n:\n        ans += 1\n    elif a[i] + p == n:\n        ans += 1\n\nprint(ans)\n"}, "977": {"problem_id": 3977, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m, k = map(int, readline().split())\nedges = list(map(int, readline().split()))\n\ncnt = [0]*k\nvisited = [False]*k\nsz = [0]*k\nfor i in range(k):\n    sz[i] = len(cnt)\n    cnt[i] = 1\n\ndef dfs(u, visited):\n    visited[u] = True\n    for v in edges[u]:\n        if visited[v] == False:\n            dfs(v, visited)\n\ndfs(0, visited)\nprint(sz[0])"}, "978": {"problem_id": 3978, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] % i == 0:\n        ans += 1\nprint(ans)"}, "979": {"problem_id": 3979, "answer": ""}, "980": {"problem_id": 3980, "answer": "n = int(input())\nans = []\nfor i in range(n):\n    ans.append(i)\nprint(max(ans))\nprint(\" \".join(map(str, ans)))"}, "981": {"problem_id": 3981, "answer": ""}, "982": {"problem_id": 3982, "answer": "m = int(input())\nfor i in range(m):\n    s = input()\n    count = 0\n    for j in range(len(s)):\n        if s[j] == '0':\n            count += 1\n        elif s[j] == '1':\n            count -= 1\n    print(count % 2 + (count > 1))"}, "983": {"problem_id": 3983, "answer": "import sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n  N, M = map(int, input().split())\n  a, b = map(set, input().split())\n  g = [[] for _ in range(N)]\n  for _ in range(M):\n    a, b = map(set, input().split())\n    g[a-1].append(b-1)\n    g[b-1].append(a-1)\n  p = []\n  q = []\n  vis = [False] * (N+1)\n  vis[0] = True\n  ans = ['First'] * T\n  for t in range(1, T+1):\n    vis = [False] * (N+1)\n    vis[t] = True\n    for i in range(N):\n      if vis[i] == False:\n        continue\n      vis[i] = True\n    p.append(i)\n    q.append(i)\n    ans[t] = 'Second'\n    for to in g[p[0]]:\n      if vis[to] == False:\n        continue\n      vis[to] = True\n      q.append(to)\n    for to in g[q[0]]:\n      if vis[to] == False:\n        continue\n      vis[to] = True\n      ans[t] = 'Second'\n    print('\\n'.join(ans))"}, "984": {"problem_id": 3984, "answer": "s = input()\nn = len(s)\nans = ['Mike', 'Ann']\nfor i in range(1, n):\n    if s[i] < s[i - 1]:\n        ans.append(s[i])\n    else:\n        ans.append(s[i])\nprint('\\n'.join(ans))"}, "985": {"problem_id": 3985, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nA = list(map(int, input().split()))\nG = []\nfor i in range(n):\n    G.append((int(input()), i))\n\ns = set()\nfor i in range(m):\n    p, q = G[i]\n    if p not in s:\n        s.add(p)\n        s.add(q)\n        s.add(p // q)\n\nprint(sum(s) - max(s))"}, "986": {"problem_id": 3986, "answer": "n,k=list(map(int,input().split()))\ns=set(list(reversed(list(range(n)))));d={}\nfor i in s:d[i]=1;\nprint(''.join(sorted(d.keys())))\n"}, "987": {"problem_id": 3987, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = a[0]\nfor i in range(1, n):\n    if a[i] > ans:\n        ans = a[i]\nprint(ans)"}, "988": {"problem_id": 3988, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m, s = list(map(int, readline().split()))\nedges = []\nfor _ in range(m):\n    t, u, v = list(map(int, readline().split()))\n    edges.append((t, u, v))\n\nvisited = set()\nres = []\nrewire = []\nrewire.append(0)\nfor edge in edges:\n    if edge[0] == 1:\n        visited.add((edge[1]))\n        rewire.append(edge[1])\n    elif edge[0] == 2:\n        visited.remove((edge[1]))\n        rewire.append(edge[1])\n    else:\n        rewire.append(edge[1])\n\nres.append('+'.join(rewire))\nprint('\\n'.join(res))\n"}, "989": {"problem_id": 3989, "answer": "a=input().strip()\nif len(a)<6:\n    print('0')\nelse:\n    s=str(a)\n    l=list(s)\n    l.sort()\n    print(''.join(l))"}, "990": {"problem_id": 3990, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\nr = list(map(int, readline().split()))\n\nans = 0\nfor i in range(m):\n    u, v = map(int, readline().split())\n    if r[u] > r[v - 1]:\n        ans += 1\n    else:\n        ans += abs(r[u] - r[v - 1])\nprint(ans)"}, "991": {"problem_id": 3991, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nx = list(map(int, readline().split()))\nd = [0]*n\nfor i in range(n):\n    d[i] = x[i]\nans = 0\nfor i in range(n):\n    ans += (d[i] - x[i])*(d[i]-x[i])\nprint(ans%(10**9+7))\n"}, "992": {"problem_id": 3992, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\n\nif n == 1:\n    print(-1)\n    return\n\nans = 0\nfor i in range(n):\n    ans += a[i]\n    if a[i] == 1:\n        ans -= 1\n\nprint(ans)"}, "993": {"problem_id": 3993, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m, k = list(map(int, readline().split()))\ns = [int(i) for i in readline().split()]\ns.sort()\ndp = [0]*n\ndp[s[0]] = 1\ncnt = 0\nfor i in range(1, n):\n    if s[i] == s[i-1]:\n        dp[i] = 1\n    elif dp[i-1] == 0:\n        cnt += m - s[i]\n        dp[i] = 1\n    else:\n        dp[i] = dp[i-1] + 1\nprint(cnt)"}, "994": {"problem_id": 3994, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nt = 0\nfor i in range(n):\n    t += 1 if a[i] == 1 else 2\n    if t > 2:\n        break\nprint(t)"}, "995": {"problem_id": 3995, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k=list(map(int,input().split()))\nm=2*k\nans=[]\nfor i in range(n):\n    if i%2==0:\n        ans.append(m)\n        m-=2\n    else:\n        ans.append(m)\nprint(*ans,sep=\"\")\n"}, "996": {"problem_id": 3996, "answer": "k = int(input())\na = list(map(int, input().split()))\nprint(pow(10, 9) + 7, q)"}, "997": {"problem_id": 3997, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\nP = [0] * (n + 2)\nQ = [0] * (n + 2)\nfor a in A:\n    P[a] += 1\n    Q[a] += 1\nans = [0] * (n + 2)\nvisited = [False] * (n + 2)\nvisited[1] = True\ndef dfs(u):\n    nonlocal ans\n    visited[u] = True\n    for v in adj[u]:\n        if visited[v]:\n            continue\n        dfs(v)\n        ans[u] += P[v]\n        P[v] //= P[u]\ndfs(1)\nprint(*ans, sep='\\n')"}, "998": {"problem_id": 3998, "answer": "n = int(input())\nr = [0]*n\nfor i in range(n):\n    r[i] = int(input())\n    \ns = 0\nt = 0\nfor i in range(n):\n    if r[i] < 0:\n        s += 1\n    elif r[i] > 0:\n        t += 1\n    else:\n        r[i] = 0\nprint(s)\nprint(t)"}, "999": {"problem_id": 3999, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\ncolors = [0] * N\nfor i in range(N):\n    colors[i] = int(input())\n    \nc = [0] * N\nc[0] = 1\nfor i in range(1, N):\n    c[i] = c[i-1] + (i & 1)\nans = 0\nfor i in range(N):\n    if colors[i]!= c[i]:\n        ans += 1\nprint(ans)"}}