{"0": {"problem_id": 0, "answer": "s = input()\nn = len(s)\nif n % 2 == 0:\n    print(n)\nelse:\n    print(-1)"}, "1": {"problem_id": 1, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\n\")\nx=int(input())\nans=0\nwhile x!=0:\n    ans+=x%10\n    x=x//10\nprint(ans)"}, "2": {"problem_id": 2, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nans = 0\ncnt = 0\nwhile n:\n    cnt += 1\n    n = int(n*10)%10\n    ans += cnt\nprint(ans)"}, "3": {"problem_id": 3, "answer": "import sys\ninput = sys.stdin.readline\n\nn, q = map(int, input().split())\n\np = [[] for _ in range(n)]\nfor _ in range(q):\n    a, b = map(int, input().split())\n    p[a-1].append(b-1)\n    p[b-1].append(a-1)\n\nans = 0\nfor i in range(n-2, -1, -1):\n    curr = p[i]\n    ans += max(curr[0] - 1, 1)\n    for j in range(1, len(curr)):\n        curr[j] = max(curr[j], curr[j-1] + 1)\n\nprint(ans)"}, "4": {"problem_id": 4, "answer": "def main():\n    n = int(input())\n    h, m = map(int, input().split())\n    a = str(h)\n    b = str(m)\n    print(len(set(a) & set(b)))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "5": {"problem_id": 5, "answer": "n, pos, l, r = list(map(int, input().split()))\na = l + r - 1\ns = 0\nfor i in range(1, n):\n    if pos[i] == a:\n        s += 1\n    elif pos[i] > a:\n        break\nprint(s)\n"}, "6": {"problem_id": 6, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor _ in range(t):\n    n,x = list(map(int,readline().split()))\n    d,h = list(map(int,readline().split()))\n    curX = x\n    l = [d,h]\n    while l:\n        d,h = divmod(l[0],d)\n        if d:\n            l.append(d)\n        elif h:\n            l.pop()\n            curX -= d\n    print(min(l))\n"}, "7": {"problem_id": 7, "answer": "import sys\nread = sys.stdin.readline\nn, m = map(int, read().split())\nprint(m - n + 1)"}, "8": {"problem_id": 8, "answer": "t = input()\ns = 0\nfor i in range(len(t)):\n    if t[i] == 'p':\n        s += 1\n    elif t[i] =='s':\n        s -= 1\nprint(s)"}, "9": {"problem_id": 9, "answer": ""}, "10": {"problem_id": 10, "answer": "import sys\n\nn = int(sys.stdin.readline())\n\nprint(0, n)\n"}, "11": {"problem_id": 11, "answer": "n, a, b, p, q = list(map(int, input().split()))\nprint(p * a + q * (a - 1) + b * (b - 1))\n"}, "12": {"problem_id": 12, "answer": "n = int(input())\ntrophies = input().split(' ')\ngolden = [0]*n\nsilver = [0]*n\nfor i in range(n):\n    if trophies[i] == 'G':\n        golden[i] = int(trophies[i])\n    else:\n        silver[i] = int(trophies[i])\nprint('\\n'.join(sorted(golden)))"}, "13": {"problem_id": 13, "answer": "n,k = map(int,input().split())\na = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n    s[i] = a[i]\n    for j in range(i):\n        if s[j] == 0:\n            s[j] = a[i]\n            break\nans = []\nfor i in range(n):\n    ans.append(s[i])\nprint(-1) if ans[-1] == 0 else print(' '.join(map(str,ans)))"}, "14": {"problem_id": 14, "answer": "n, k = map(int, input().split())\np = list(map(int, input().split()))\nif k < n - k:\n    print(-1)\nelse:\n    p.sort()\n    print(p[k])"}, "15": {"problem_id": 15, "answer": "a, b, c = list(map(int, input().split()))\ns = set(range(a, b + 1))\nprint('YES' if b in s else 'NO')\n"}, "16": {"problem_id": 16, "answer": "import sys\ninput = sys.stdin.readline\n\nS = input().rstrip()\nN = len(S)\nans = 0\nfor i in range(N):\n    ans += (N - i) * (N - 1) // 2\n    if S[i] == \"(\":\n        ans -= 1\n    elif S[i] == \")\":\n        ans += 1\nprint(ans)"}, "17": {"problem_id": 17, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k, t = map(int, input().split())\n\nprint(k + 1)"}, "18": {"problem_id": 18, "answer": "s = input()\nn = len(s)\nc = [0] * 26\nfor i in range(1, n):\n    c[ord(s[i]) - 97] += 1\nprint(min(c))"}, "19": {"problem_id": 19, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    p, c = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        p1, c1 = p, c\n        if p1 > p:\n            p1 -= 1\n        elif c1 > c:\n            c1 -= 1\n        else:\n            ans += (p1 - p) * (c1 - c)\n            ans += max(0, (p1 - p) * (c1 - c))\n    print(ans)\n"}, "20": {"problem_id": 20, "answer": "import math\ns = input().strip()\nt = int(s[0])\nfor i in range(1,60):\n    if s[i]!=s[i-1]:\n        t = i\n        break\nprint(t)"}, "21": {"problem_id": 21, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = a[0]\nfor i in range(1, n):\n    ans = min(ans, a[i])\n    a[i] = max(ans, a[i])\nprint(ans - 1)"}, "22": {"problem_id": 22, "answer": "s = input()\nif s[::-1] == s:\n    print('NIE')\nelse:\n    print('TAK')"}, "23": {"problem_id": 23, "answer": "a, b = input(), input()\nc = str(a)\nd = str(b)\nans = 0\nfor i in range(len(c) - 1):\n    if c[i]!= c[i + 1]:\n        continue\n    ans = max(ans, int(c[i]) + int(d[i]))\nprint(ans)\n"}, "24": {"problem_id": 24, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nmas = [0] * 100001\nmas[0] = 1\nfor i in range(1, 100001):\n    mas[i] = mas[i-1] + 1\nm = [['X' for i in range(10)] for j in range(100001)]\nfor i in range(10):\n    m[0][i] = 'X'\nfor i in range(1, 100001):\n    for j in range(10):\n        m[i][j] = m[i-1][j] + '.'\nn = len(mas)\nans = ['NO'] * n\nfor i in range(n):\n    if mas[i] == n - 1:\n        ans.append('YES')\n        break\nfor i in ans:\n    print(i)"}, "25": {"problem_id": 25, "answer": "import sys\ninput=sys.stdin.readline\nn,k=map(int,input().split())\nif k==0:\n    print(1)\n    return\nelif k==1:\n    print(0)\n    return\nelse:\n    m=[0]*n\n    for i in range(n):\n        m[i]=1\n    a=[]\n    for i in range(n):\n        a.append(m[i])\n    "}, "26": {"problem_id": 26, "answer": "import heapq\nx, y, z = map(int, input().split())\nh = []\nfor i in range(3):\n    heapq.heappush(h, x*y*z)\n    if h[0] == i:\n        heapq.heappop(h)\nc = ''.join(map(str, input().split()))\nprint('z^{}'.format(c))"}, "27": {"problem_id": 27, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(n):\n    if s[i] == \"a\":\n        cnt += 1\n    elif s[i] == \"b\":\n        cnt += 2\n    elif s[i] == \"c\":\n        cnt += 3\n    elif s[i] == \"d\":\n        cnt += 4\n    elif s[i] == \"e\":\n        cnt += 5\n    elif s[i] == \"f\":\n        cnt += 6\n    elif s[i] == \"g\":\n        cnt += 7\n    elif s[i] == \"h\":\n        cnt += 8\n    elif s[i] == \"i\":\n        cnt += 9\n    elif s[i] == \"j\":\n        cnt += 10\n    elif s[i] == \"k\":\n        cnt += 11\n    elif s[i] == \"l\":\n        cnt += 12\n    elif s[i] == \"m\":\n        cnt += 13\n    elif s[i] == \"n\":\n        cnt += 14\n    elif s[i] == \"o\":\n        cnt += 15\n    elif s[i] == \"p\":\n        cnt += 16\n    elif s[i] == \"q\":\n        cnt += 17\n    elif s[i] == \"r\":\n        cnt += 18\n    elif s[i] == \"s\":\n        cnt += 19\n    elif s[i] == \"t\":\n        cnt += 20\n    elif s[i] == \"u\":\n        cnt += 21\n    elif s[i] == \"v\":\n        cnt += 22\n    elif s[i] == \"w\":\n        cnt += 23\n    elif s[i] == \"x\":\n        cnt += 24\n    elif s[i] == \"y\":\n        cnt += 25\n    elif s[i] == \"z\":\n        cnt += 26\nprint(cnt)"}, "28": {"problem_id": 28, "answer": "n = int(input())\ns = set()\nfor i in range(n):\n    s.add(input())\n    s.add(str(input()))\nmoves = 0\nans = 0\nfor i in range(n):\n    if s.count(str(i+1)) == 1:\n        moves += 1\n        ans += 1\n    elif s.count(str(i+1)) == 0:\n        moves += 1\n        ans += 1\n    else:\n        print(ans)\n        break"}, "29": {"problem_id": 29, "answer": "s = input()\nn = len(s)\nans = 0\nfor i in range(n):\n    if s[i] == '0':\n        ans += 1\nprint(ans)"}, "30": {"problem_id": 30, "answer": "m,x = map(int,input().split())\nif x&1:\n    x=x>>1\n    y=x*m\n    for i in range(2,m):\n        y=y>>1\n        if y&1:\n            break\n    print(i-y)"}, "31": {"problem_id": 31, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nn, k = map(int, input().split())\ndp = [0]*(1<<30)\nfor i in range(n):\n    dp[i] = int(input())\n    if i&1:\n        dp[i]|= dp[i>>1]\nprint((dp[k]>>1)%MOD)"}, "32": {"problem_id": 32, "answer": "n = int(input())\ns = list(map(str, input().split()))\ns.sort()\nfor i in range(n):\n    t, d = int(s[i]), s[i]\n    if t == d:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "33": {"problem_id": 33, "answer": "a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,w,x1,y1,z1,w1=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"}, "34": {"problem_id": 34, "answer": "n, a, b = list(map(int, input().split()))\nl = [0] * (n + 1)\nr = [0] * (n + 1)\nfor i in range(1, n + 1):\n    l[i] = i + a\nfor i in range(n)[::-1]:\n    r[i] = i + b\nprint(min(l[n], r[n]))\n"}, "35": {"problem_id": 35, "answer": "n, m = list(map(int, input().split()))\nflag = ['R','G','B']\ns = []\nfor i in range(n):\n    s.append(input())\nflag = list(map(str, s))\ns = []\nfor i in range(n):\n    s.append(input())\nans = 'YES'\nfor i in range(n):\n    if flag[i] == flag[i+1]:\n        ans = 'NO'\nprint(ans)\n"}, "36": {"problem_id": 36, "answer": "n = int(input())\na = [0] * 26\nfor i in range(1,n):\n    a[i] = i\n    a[ord(a[i]) - 97] += 1\nprint(a[0],a[1])"}, "37": {"problem_id": 37, "answer": "a, b, c = list(map(int, input().split()))\nd = c // 2\nif d*b < c:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"}, "38": {"problem_id": 38, "answer": "import sys\ninput = sys.stdin.readline\n\nn, l = map(int, input().split())\na = list(map(int, input().split()))\nt = sorted(a)\n\ncnt = 0\nfor i in range(n):\n    if t[i] == t[i + 1]:\n        cnt += 1\n    if cnt == n:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "39": {"problem_id": 39, "answer": "import sys\ninput = sys.stdin.readline\n\ns = input().rstrip()\nn = len(s)\n\ndef F(i, j):\n    a = 0\n    b = 0\n    for c in s[i:j + 1]:\n        if c == c[::-1]:\n            a += 1\n        else:\n            b += 1\n    return a % 2!= b % 2\n\nprint(max(F(0, n - 1), F(n - 2, n - 1), F(n - 2, n - 2)))"}, "40": {"problem_id": 40, "answer": "n = int(input())\npoints = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    points.append([a, b])\npoints.sort()\nans = True\nfor i in range(n):\n    if points[i][1] > points[i][0]:\n        ans = False\n        break\nif ans:\n    print(\"rated\")\nelse:\n    print(\"unrated\")"}, "41": {"problem_id": 41, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0] * (n + 1)\nfor i in range(n):\n    p[i + 1] = p[i] + a[i] - a[i - 1]\nprint(' '.join(map(str, p)))\n"}, "42": {"problem_id": 42, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(n):\n    if s[i] == '1':\n        cnt += 1\nprint(cnt)"}, "43": {"problem_id": 43, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn = int(read())\na = [0] * n\nfor i in range(n):\n    x, y = list(map(int, readline().split()))\n    a[i] = (x**2 + y**2)**0.5\nprint(*a, sep='\\n')\n"}, "44": {"problem_id": 44, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nINF = 10**18\neps = 10**-9\nmod = 10**9 + 7\ndd = [(-INF, 0)]\nfor i in range(1, min(INF, 10**5)):\n    dd.append((eps, i))\ndd.append((INF, 0))\ndd.append((-dd[-1][0] + 1, 0))\ndd.append((dd[-1][0], 0))\ndd.append((dd[-1][len(dd) - 1], 0))\n\ndef main():\n    d, k, a, b, t = list(map(int, readline().split()))\n    a -= 1\n    b -= 1\n    t >>= 1\n    print(max(dd[0][0], d + k + a + b) % t)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "45": {"problem_id": 45, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nn,k = map(int,input().split())\ns = [i for i in range(1,k+1)]\ns.sort()\nif s[-1] == s[-2]:\n    print(' '.join(map(str,s[:k])))\nelse:\n    print(-1)"}, "46": {"problem_id": 46, "answer": "n, m = map(int, input().split())\nprint(sum([1 for i in range(n + 1) if i % 5 == 0]) * sum([1 for i in range(m + 1) if i % 5 == 0]))"}, "47": {"problem_id": 47, "answer": "import sys\ninput = sys.stdin.readline\n\nn, x = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nb = sum(a)\n\nans = 0\nfor i in range(n):\n    if i == 0:\n        ans += b\n    elif i == n - 1:\n        ans += b\n    else:\n        ans += b * x\n\nprint(ans)\n"}, "48": {"problem_id": 48, "answer": "n, m, k = list(map(int, input().split()))\ntable = [[] for _ in range(n + 1)]\nfor i in range(1, n + 1):\n    for j in range(1, min(i, n + 1)):\n        table[i].append(j)\n        table[j].append(i)\nsorted_table = sorted(table, key=lambda x: x[0])\nans = [0] * n\nfor i in range(k - 1, n):\n    for j in range(k - 1, n):\n        ans[i] = max(ans[i], sorted_table[i][j] * m)\nprint(ans[k - 1])\n"}, "49": {"problem_id": 49, "answer": "def rec(n):\n    s = str(n)\n    n = len(s)\n    c = 0\n    for i in range(n):\n        if s[i] == '0':\n            c += 1\n        else:\n            break\n    return c\n\na = int(input())\nb = input()\nc = 0\nfor i in range(a):\n    c += rec(i)\nprint(b[c-1])"}, "50": {"problem_id": 50, "answer": "import sys\nreadline = sys.stdin.readline\nn,m,r=list(map(int,readline().split()))\ns=list(map(int,readline().split()))\nb=list(map(int,readline().split()))\ns.sort()\nb.sort()\nans=0\nfor i in range(n):\n    ans+=s[i]*b[i]\nprint(ans)"}, "51": {"problem_id": 51, "answer": ""}, "52": {"problem_id": 52, "answer": "n = int(input())\nans = 0\ncnt = 0\nwhile n:\n    if n%2==0:\n        ans += 1\n        cnt += 1\n    else:\n        n -= 1\n        cnt += 1\nprint(ans)"}, "53": {"problem_id": 53, "answer": "n = int(input())\ns = input()\na = list(map(int, input().split()))\nb = [0]*26\nfor i in range(1, n):\n    b[a[i]-1] += 1\n    b[a[i]-1] //= 2\nprint(max(b))"}, "54": {"problem_id": 54, "answer": "w, m = list(map(int, input().split()))\nans = w*m\nif w<2 or m<w:\n    print('NO')\nelse:\n    print('YES')\n"}, "55": {"problem_id": 55, "answer": "import sys\ninput = sys.stdin.readline\n \nn,k=list(map(int,input().split()))\nprint(\"No\") if k==1 else \"Yes\" if n==sum(range(1,k+1)) else \"No\"\nfor i in range(1,k+1):\n  \n  l=[]\n  \n  a=n\n  b=n\n  for i in range(i+1):\n   \n    a=a%i\n    b=b%i\n    l.append(a)\n    l.append(b)\n  \n  print(\"Yes\" if max(l)<=n else \"No\")\n"}, "56": {"problem_id": 56, "answer": "import sys\nreadline = sys.stdin.readline\nn, t = list(map(int, readline().split()))\nprint(n // 2 + (n - 1) // 2 * t)"}, "57": {"problem_id": 57, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\npoints = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    points.append((x, y))\n\npoints.sort()\n\np = points[0][0]\nans = abs(p[0] - p[1])\n\nfor i in range(1, n):\n    p = points[i]\n    ans = ans - (p[0] - p[1])\n\nprint(ans)"}, "58": {"problem_id": 58, "answer": "n = int(input())\na = int(input())\nb = int(input())\nprint(n + max(a, b) + 2)"}, "59": {"problem_id": 59, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = input()\na.sort()\nprint('YES') if a[0] == s[0] else print('NO')"}, "60": {"problem_id": 60, "answer": "s = input()\nn, s = s.split()\nprint(n*2 + sum(int(x) for x in s.split()))"}, "61": {"problem_id": 61, "answer": "import sys\ninput = sys.stdin.readline\nb = lambda:list(map(int,input().split()))\nn,x = b(int)\ny,m = b(int)\na = list(map(int,input().split()))\na.sort()\nb = list(map(str,input().split()))\nb.sort()\nprint('<' if b[x] < y else '>' if b[y] > x else '=')\n"}, "62": {"problem_id": 62, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\np = 0\nm = -1\nfor i in range(n):\n    if a[i] > m:\n        m = a[i]\n        s += 1\n    elif a[i] == m:\n        p += 1\n    else:\n        if p == m:\n            print(\"BitAryo\")\n            return\n        s -= 1\nprint(\"BitLGM\")\n"}, "63": {"problem_id": 63, "answer": "from math import ceil\nn,k=map(int,input().split())\na=list(map(int,input().split()))\ns=set()\nfor i in a:\n    s.add(i)\nans=0\nfor i in range(1,n+1):\n    if k%i==0:\n        ans+=int(ceil(k/i))\nprint(ans)"}, "64": {"problem_id": 64, "answer": "n, k = list(map(int, input().split()))\ns = input()\nans = 'YES'\nfor i in range(k):\n    if s[i] == s[i + 1]:\n        ans = ans + ''.join(s[:i] + s[i + 1:])\nprint(ans)\n"}, "65": {"problem_id": 65, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(min(a)+1-max(a))"}, "66": {"problem_id": 66, "answer": "def main():\n    t, w, b = list(map(int, input().split()))\n    if w > b: w = b\n    if w == b: print(1)\n    elif w < b:\n        print(t/w)\n    else:\n        print(t/w - b)\n    return\n\nmain()\n"}, "67": {"problem_id": 67, "answer": "x,y,z=map(int,input().split())\nif x+y>z:\n    print(\"+\")\nelif x+y<z:\n    print(\"-\")\nelse:\n    print(\"?\")"}, "68": {"problem_id": 68, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list(map(int, input().split()))\ns.sort()\ncur = 0\nidx = -1\nfor i in range(n):\n    if s[i] == U:\n        cur = i\n    elif s[i] == D:\n        idx = i\n    elif s[i] == L:\n        idx = i - 1\n    else:\n        break\nprint(idx + 1)"}, "69": {"problem_id": 69, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n,x=list(map(int,input().split()))\n    s=input()\n    balance=0\n    for i in range(n):\n        if s[i]=='0':\n            balance+=1\n        else:\n            balance-=1\n        "}, "70": {"problem_id": 70, "answer": "def main():\n    n, k = list(map(int, input().split()))\n    rem = 0\n    while rem < n:\n        rem += n // 10\n    print(rem)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "71": {"problem_id": 71, "answer": "import sys\nread = sys.stdin.readline\nn, m, k, x, y = list(map(int, read().split()))\ns = [0]*n\nfor i in range(1, n):\n    for j in range(i):\n        s[i] += s[j] + k*(i-j)\nprint(max(s[x-1], s[y-1]))\nprint(min(s[x-1], s[y-1]))\n"}, "72": {"problem_id": 72, "answer": "from sys import stdin\ninput = stdin.readline\nprint = lambda : stdout.write(input())"}, "73": {"problem_id": 73, "answer": "c,v0,v1,a,l=list(map(int,input().split()))\nb=c*v0 + (a*l)\ng=v1-v0\nh=a*l\nprint(g+h)\n"}, "74": {"problem_id": 74, "answer": "import math\ndef isprime(n):\n    if n<2:\n        return False\n    elif n==2:\n        return True\n    else:\n        i = 3\n        while i*i<=n:\n            if n%i==0:\n                return False\n            i += 2\n        return True\nprime=[]\nfor i in range(int(input())):\n    if isprime(i):\n        prime.append(i)\nprint(len(prime))\nfor i in prime:\n    print(i+int(math.sqrt(i)))"}, "75": {"problem_id": 75, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\na = [[] for _ in range(n)]\nfor i in range(n):\n    a[i].append(input())\n\nb = [[] for _ in range(m)]\nfor i in range(m):\n    b[i].append(input())\n\nans = []\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == '.':\n            ans.append((i, j))\n        else:\n            b[i].append([])\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == '.':\n            ans.append((i, j))\n        else:\n            b[i].append([])\n\nfor i in range(n):\n    for j in range(m):\n        if ans[i][j] == 'YES':\n            ans[i][j] = 'NO'\n            break\n\nprint(''.join(map(str, ans)))\n"}, "76": {"problem_id": 76, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, a, b = list(map(int, input().split()))\nd = n // m\nans = 0\nfor i in range(m):\n    ans += a * d\n    d -= 1\nprint(ans)"}, "77": {"problem_id": 77, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i]\n    if s & 1:\n        s -= 1\n    elif s & 2:\n        s += 1\nprint(s)"}, "78": {"problem_id": 78, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nn, t = list(map(int, input().split()))\ns = [1]*n\nfor i in range(1, n+1):\n    s[i] = s[i-1] + t\ndp = [[0]*15 for _ in range(n)]\nvisited = [0]*n\nans = 0\nfor i in range(n):\n    if visited[i] == 0:\n        visited[i] = 1\n        dp[i][0] = 1\n        dp[i][s[i]] = 1\n        ans += 1\n        for j in range(15):\n            if j not in visited:\n                dp[i][j] = sum(dp[i][k] for k in range(15) if k not in visited) % MOD\n                ans += dp[i][j]\n    else:\n        dp[i][0] = 1\n        visited[i] = 1\nprint(ans)\n"}, "79": {"problem_id": 79, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+7\nM = mod(2187244353)\ns = int(readline())\na = [1]\nfor i in range(2, s+1):\n    a.append(a[-1]*i)\nprint(a[-1]*M)"}, "80": {"problem_id": 80, "answer": "import sys\ninput=sys.stdin.readline\n\nl,r,x,y=list(map(int,input().split()))\n\nans=0\nif l%x==0 and r%y==0:\n    ans+=1\nelif l%x!=0 and r%y!=0:\n    ans+=1\n\nprint(ans)\n"}, "81": {"problem_id": 81, "answer": "a,b=list(map(int,input().split()))\nif a==b:\n    print(b)\nelse:\n    m=a+b\n    n=m//b\n    if n%a!=0:\n        print(0)\n    else:\n        m-=n//a\n        if m<0:\n            print(0)\n        else:\n            print(m)\n"}, "82": {"problem_id": 82, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(min(k + sum(a) - n * sum(a[::-1]), k))"}, "83": {"problem_id": 83, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\nn = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in a:\n    ans += i * (i > 1)\n    if ans > n // 2:\n        ans = 0\n    elif ans < n // 2:\n        ans += n // 2\nprint(ans)"}, "84": {"problem_id": 84, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nmas = [0]*(n+1)\nmas[1] = 1\nfor i in range(2,n+1):\n    mas[i] = mas[i-1]*i\nans = 0\nfor i in range(1,n+1):\n    ans += mas[n] - mas[i-1]\nprint(ans)"}, "85": {"problem_id": 85, "answer": "a, b = map(int, input().split())\nc = a**2 + b**2\nm = abs(b-a)//2\nprint(m)\nprint('1 '*m+'6 '*(m//3)+'2 '*m+'1')\nfor i in range(3, min(a, b)+1):\n    print('{} '.format(i), end ='')"}, "86": {"problem_id": 86, "answer": "import sys\ninput = sys.stdin.readline\n\nx, y, p1, p2 = map(int, input().split())\n\nans = \"Vasiliy\"\n\nif x > 0 and y > 0:\n    ans = \"Polycarp\"\n\nif abs(x - p1) > abs(y - p2):\n    ans = \"Vasiliy\"\n\nif x > 0 and y < 0:\n    ans = \"Polycarp\"\n\nif abs(x - p1) > abs(y - p2):\n    ans = \"Vasiliy\"\n\nprint(ans)"}, "87": {"problem_id": 87, "answer": "import sys\nreadline = sys.stdin.readline\n\nm, d = list(map(int, readline().split()))\n\ndays = [7, 7]\nfor i in range(m):\n    days[i] += 1\n\nprint(days[d] + sum(days[i] for i in range(1, 7)))\n"}, "88": {"problem_id": 88, "answer": "import sys\ninput = sys.stdin.readline\n\na,b = map(int,input().split())\ncnt = 0\nfor i in range(a):\n    x = bin(i)[2:]\n    if x.count('0') == 1:\n        cnt += 1\nprint(cnt)"}, "89": {"problem_id": 89, "answer": "import sys\ninput = sys.stdin.readline\ndef main():\n    n=int(input())\n    if n&1:\n        print(2)\n    else:\n        a=bin(n)[2:].zfill(n+2)\n        b=a.count('1')\n        c=a.count('0')\n        d=int(b*c)\n        print(d)\n        \nmain()"}, "90": {"problem_id": 90, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k, s = list(map(int, input().split()))\na = list(map(int, input().split()))\n\np = [0] * (n + 1)\nfor i in range(n):\n    p[i + 1] = p[i] + a[i]\n\nans = 0\nfor i in range(n):\n    if p[i] > s:\n        ans += 1\n\nprint(ans)\n"}, "91": {"problem_id": 91, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nread = lambda: list(map(int, input().split()))\n\nfor _ in range(int(input())):\n    n, k = read()\n    a = read()\n    v = [0] * n\n    for i in range(n):\n        v[i] += a[i]\n    ans = sum(v) % k\n    print(ans)\n"}, "92": {"problem_id": 92, "answer": "a,b,c=list(map(int,input().split()))\nMOD=10**9+7\ns=0\nfor i in range(1,a+1):\n    for j in range(1,b+1):\n        for k in range(1,c+1):\n            s+=d(i*j*k)\nprint(s%MOD)"}, "93": {"problem_id": 93, "answer": "from collections import deque\n\ns = input()\np = input()\nn = len(s)\nq = deque([])\nfor i in range(n):\n    q.append(s[i][0])\n    if s[i][1] == 'C':\n        q.append(s[i][0])\n        q.append(s[i][1])\n    elif s[i][1] == 'B':\n        q.append(s[i][0])\n        q.append(s[i][1])\n    else:\n        q.append(s[i][0])\n        q.append(s[i][1])\nprint('YES' if len(q) == 1 else 'NO')"}, "94": {"problem_id": 94, "answer": "n = int(input())\nk = int(input())\nprint(1 << n.bit_length() - 1) << k.bit_length()"}, "95": {"problem_id": 95, "answer": "n = int(input())\na = list(map(int, input().split()))\nif a[0] == 1:\n    print('YES')\nelse:\n    print('NO')"}, "96": {"problem_id": 96, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\nd = {} for i in range(1, n+1):\n    d[i] = d.get(i, 0) + 1\n    d[i] += d[i-1]\nans = 0\nfor i in range(1, n+1):\n    ans = max(ans, d[i])\nprint(ans)"}, "97": {"problem_id": 97, "answer": "n,m,x,y,vx,vy,v=[int(i) for i in input().split()]\na=[0]*n\nb=[0]*m\np=[x,y]\nfor i in range(n):\n    for j in range(m):\n        if p[0]+vx==i:\n            a[i]=j\n        elif p[0]+vy==j:\n            b[j]=i\n        else:\n            p=p+[vx,vy]\nprint(' '.join(map(str,a)))\n"}, "98": {"problem_id": 98, "answer": "a, b = list(map(int, input().split()))\nc, d = list(map(int, input().split()))\nans = \"YES\"\nfor i in range(1, 1000):\n    if a[i]!= c[i] and b[i]!= d[i]:\n        ans = ans + \"NO\"\nprint(ans)\n"}, "99": {"problem_id": 99, "answer": "import sys\ninput = sys.stdin.readline\nb, q, l, m, a = list(map(int, input().split()))\nb = b // q\na = a // q\nans = 0\nif b == 0:\n    ans = 1\nelif a == 0:\n    ans = 1\nelse:\n    for i in range(l):\n        if b[i] == a[i]:\n            ans += 1\nif ans == 10**9 + 7:\n    print(\"inf\")\nelse:\n    print(ans)"}, "100": {"problem_id": 100, "answer": "import sys\nread = sys.stdin.readline\nn, m = list(map(int, read().split()))\ndp = [0]*n\nfor i in range(n):\n    c = read()[:-1]\n    if c == \".\":\n        dp[i] = 1\n    else:\n        dp[i] = dp[i+1]\nanswers = []\nfor i in range(1, n+1):\n    if dp[i] == 1:\n        answers.append(\"w\")\n    elif dp[i] == 2:\n        answers.append(\".\")\n    else:\n        answers.append(\"\".join(map(str, dp[i])))\nprint(\"\".join(answers))"}, "101": {"problem_id": 101, "answer": "n = int(input())\na = int(input())\nb = int(input())\nans = 'NO'\nfor i in range(1,n+1):\n    ans = 'YES'\n    a = a + i*b\nprint(ans)\nprint(2*ans[1] + 1, end ='')\nprint(0, end ='')"}, "102": {"problem_id": 102, "answer": "s = int(input())\nprint(f'{s:b}')"}, "103": {"problem_id": 103, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\ni = 1\nwhile i+1 < n:\n    if a[i-1] == i+1:\n        ans += 1\n    i += 1\nprint(ans)"}, "104": {"problem_id": 104, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = n // 2\nfor i in range(n):\n    if a[i] > ans:\n        ans = a[i]\nprint(ans)"}, "105": {"problem_id": 105, "answer": "import heapq\nn=int(input())\na=list(map(int,input().split()))\nm=[]\nfor i in range(n):\n    heapq.heappush(m,a[i])\n    \nres=0\nc=0\nfor i in range(1,n):\n    c+=1\n    if m[i]==2:\n        res+=1\n    elif m[i]==3:\n        res-=1\n    else:\n        res+=abs(heapq.heappop(m)-i)\n        heapq.heappush(m,a[i])\nprint(res,c)"}, "106": {"problem_id": 106, "answer": ""}, "107": {"problem_id": 107, "answer": "s = input()\n\nif s.count('1') % 2 == 0:\n    print(\"yes\")\nelse:\n    print(\"no\")"}, "108": {"problem_id": 108, "answer": "s = input()\nn = len(s)\nans = [0]*26\nfor i in range(n):\n    if s[i] not in 'aeiou':\n        ans[ord(s[i])-97] += 1\nprint(''.join(ans))"}, "109": {"problem_id": 109, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, r, k = map(int, input().split())\nW = [0] * (n + 1)\nE = [0] * (m + 1)\nfor i in range(1, n + 1):\n    W[i] = W[i - 1] + 1\n    E[i] = E[i - 1] + 1\n\nans = 0\nfor i in range(1, min(m, n) + 1):\n    for j in range(1, min(m, r) + 1):\n        if W[i - 1] * r + W[j - 1] <= k:\n            ans = max(ans, E[i] + W[i - 1] * r)\n            W[i] = W[i - 1] + 1\nprint(ans)"}, "110": {"problem_id": 110, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nm = max(a)\nans = [-m-1]*n\nfor i in range(n):\n    if a[i] < 0:\n        ans[i] = a[i]\n    elif a[i] == m:\n        ans[i] = -ans[i]\n    else:\n        ans[i] = max(ans[i-1], a[i])\nprint(' '.join(map(str, ans)))"}, "111": {"problem_id": 111, "answer": "n, k = map(int, input().split())\nif k > n:\n    print(-1)\nelse:\n    print(n // pow(10, k) + 1)"}, "112": {"problem_id": 112, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = [0]*n\nfor i in range(n):\n    a = list(map(int, input().split()))\n    ans[i] = a[0]\n\nprint(max(ans))\n"}, "113": {"problem_id": 113, "answer": "n, k = map(int, input().split())\nl = []\nfor i in range(8):\n    l.append(n)\n    while k < i:\n        l[-1] = (l[-1] + n) % i\n        k += 1\nprint(''.join(map(str, l)))"}, "114": {"problem_id": 114, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nA = [0] * n\nB = [0] * m\nfor i in range(n):\n    A[i] = int(input())\n    B[m-1-i] = 1\n\nans = []\nfor i in range(n):\n    for j in range(m):\n        if A[i][j] == 0:\n            ans.append(i+1)\n        elif B[j] == 1:\n            ans.append(i+1)\n\nprint('\\n'.join(ans))\n"}, "115": {"problem_id": 115, "answer": "import sys\nreadline = sys.stdin.readline\n\nINF = 1 << 60\neps = 10**-5\n\nr, s, p = list(map(int, readline().split()))\n\na = INF\nb = INF\nc = INF\n\nr1 = r * (r - 1) / 2\ns1 = s * (s - 1) / 2\np1 = p * (p - 1) / 2\n\na = min(a, r1)\nb = min(b, s1)\nc = min(c, p1)\n\nprint(\"%.9f\" % (a + b - c, a + c))\n"}, "116": {"problem_id": 116, "answer": "l, r, k = list(map(int, input().split()))\ns = l + r + k\ns //= 60\nprint(s)\n"}, "117": {"problem_id": 117, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nA = [list(map(int, input().split())) for i in range(N)]\nB = [list(map(int, input().split())) for i in range(M)]\n\nE = [0] * (N+M)\nF = [0] * (N+M)\n\nans = 0\nfor i in range(N):\n    ans += A[i][0] * A[i][1]\n    ans += B[i][0] * B[i][1]\n    ans += abs(E[i] - F[i])\n\nif ans < 0:\n    print(ans)\nelse:\n    print(ans)"}, "118": {"problem_id": 118, "answer": "t, s, x = list(map(int, input().split()))\np = []\nfor i in range(2, 10**9 + 1):\n    p.append(t + i*s)\n    if p[-1] < t:\n        print(\"NO\")\n        break\nelse:\n    print(\"YES\")\n"}, "119": {"problem_id": 119, "answer": "n = int(input())\na = [list(map(int, input().split())) for i in range(n)]\na.sort()\nans = []\nfor i in range(n):\n    if a[i][0] == i:\n        ans.append(i)\n    elif a[i][0] > i:\n        ans.append(i)\n    else:\n        ans.append(-1)\nprint(' '.join(map(str, ans)))\n"}, "120": {"problem_id": 120, "answer": "n = int(input())\ns = input()\na = 0\nb = 0\nfor i in s:\n    if i == '?':\n        a += 1\n    else:\n        b += 1\nif a == b:\n    print(' '.join(map(str, s)))\nelse:\n    print('==='*a +''*b)"}, "121": {"problem_id": 121, "answer": "t = list(map(int, input().split()))\n\ndef check(i):\n    if t[i] == 0:\n        return True\n    elif t[i] == 1:\n        return check(i + 1)\n    else:\n        return False\n\nans = 'NO'\nfor i in range(len(t)):\n    if check(i):\n        ans = 'YES'\nprint(ans)"}, "122": {"problem_id": 122, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nm = a[0]\nfor i in range(1, n):\n    s += a[i]\n    if s == m:\n        m = a[i]\n    elif s > m:\n        m = s\n    else:\n        break\nif m == 0:\n    print(\"NO\")\nelse:\n    print(\"YES\")"}, "123": {"problem_id": 123, "answer": "import sys\nread = sys.stdin.readline\nn,k=list(map(int,read().split()))\na=list(map(int,read().split()))\nb=list(map(int,read().split()))\nif k==1:\n    print(\"No\")\n    return\nd=[0]*n\nfor i in range(n):\n    if a[i]!=0:\n        d[i]=a[i]\n        continue\nans=[]\nfor i in range(n):\n    if d[i]==0:\n        ans.append(i+1)\n        continue\n    else:\n        ans.append(d[i])\nans.reverse()\nprint(\"Yes\" if ans==[1]*n else \"No\")"}, "124": {"problem_id": 124, "answer": "import sys\nreadline = sys.stdin.readline\n\nINF = 10**9+7\neps = 1<<30\n\ng = lambda x: pow(x,Inf) - x\ng2 = lambda x: g(x-1)\n\n\ndef main():\n    x,y,z = list(map(int, readline().split()))\n    a,b,c = list(map(int, readline().split()))\n\n    if a+b+c<INF:\n        print(\"NO\")\n        return\n\n    d = g2(a+b+c)\n    mx,my,mz = d,d+g2(b+c),d+g2(c)\n\n    if mx+my+mz<2*INF:\n        print(\"NO\")\n        return\n\n    ans = 0\n    for i in range(max(0,x-a),x):\n        for j in range(max(0,y-b),y):\n            for k in range(max(0,z-c),z):\n                ans += d\n                if ans>x*y*z:\n                    ans -= x*y*z\n                    print(\"NO\")\n                    return\n\n    print(\"YES\")\n\nmain()\n"}, "125": {"problem_id": 125, "answer": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ninp = sys.stdin.read().split()\n\nt = int(inp[0])\nfor i in range(1, t + 1):\n    t = int(inp[i])\n    if t & 1:\n        print(\"NO\")\n    else:\n        print(\"YES\")"}, "126": {"problem_id": 126, "answer": "n = int(input())\ns = input()\nc = set()\nfor i in range(10):\n    c.add(s[i])\n    \nif len(c) == 9:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "127": {"problem_id": 127, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint = stdout.write\n\nn, f = list(map(int, input().split()))\nl = [0] * (n + 1)\nfor i in range(n):\n    l[i + 1] = l[i] * 2\n    l[i] = 0\n\nans = 0\nfor i in range(1, n + 1):\n    ans += l[i] / 2 * l[i]\n\nprint(ans)\n"}, "128": {"problem_id": 128, "answer": "n,k = map(int,input().split())\ns = 0\nfor i in range(1,n+1):\n    if i>=k:\n        s+=1\nprint(s)"}, "129": {"problem_id": 129, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+10\nn, m, k, l = map(int, readline().split())\ng = [0]*n\nfor i in range(n):\n    g[i+1] = g[i] + k\nans = [-1]*n\nfor i in range(n):\n    if g[i]>m:\n        ans[i] = -1\n    else:\n        ans[i] = m\nprint(ans[0])"}, "130": {"problem_id": 130, "answer": "n, m = list(map(int, input().split()))\nmat = []\nfor i in range(n):\n    mat.append(input())\n\nans = 0\nfor i in range(n):\n    if mat[i][1] == 'W':\n        cnt = mat[i][0]\n        ans += cnt * (cnt + 1) // 2\n    else:\n        ans += min(mat[i][0] * mat[i][1], mat[i][0] * mat[i][2] + mat[i][1] * mat[i][2])\nprint(ans)\n"}, "131": {"problem_id": 131, "answer": "n = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\np = x[0]\nfor i in range(1, n):\n    p = max(p, x[i])\n    x[i] = p\nprint(\"Yes\" if p == y else \"No\")"}, "132": {"problem_id": 132, "answer": "import sys\ninput = sys.stdin.readline\nINF = float('inf')\nns = lambda: list(map(int, input().split()))\nnsn = lambda: list(map(int, input().split()))\neps = 10**9+7\ndef inp():\n    return int(input())\ndef nsl(ls):\n    ls.sort()\n    return ls\ndef nsr(ls):\n    ls.sort(reverse=True)\n    return ls\ndef inv(a, m=1):\n    if m == 1:\n        return a\n    return inv(a[1:], m=m-1)\nn = inp()\na = list(nsn())\nprint(abs(sum(a[:n//2])-sum(a[n//2:])))"}, "133": {"problem_id": 133, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, m = map(int, input().split())\n    MOD = 10**9 + 7\n    ans = [0] * (n + 1)\n    for i in range(1, n + 1):\n        ans[i] = ans[i - 1] * (m + 1) % MOD\n        ans[n - i - 1] += ans[i]\n    print(ans[n])\n\nmain()"}, "134": {"problem_id": 134, "answer": "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n \ndef MI():\n\treturn list(map(int,sys.stdin.readline().split()))\n \ndef LI():\n\treturn list(map(int,sys.stdin.readline().split()))\nn=II()\nprint(n//3,n%3)"}, "135": {"problem_id": 135, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nn,k = map(int,input().split())\nif n%k!=0:\n    print(\"No\")\nelse:\n    print(\"Yes\")"}, "136": {"problem_id": 136, "answer": "a = int(input())\nb = int(input())\nprint('<', end='')\nif a == b:\n    print('=', end='')\nelse:\n    print('>', end='')"}, "137": {"problem_id": 137, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nn,p = list(map(int,input().split()))\na = list(map(int,input().split()))\nf = [0]*n\nfor i in range(n):\n    f[i] = a[i]%2\nans = 0\nfor i in range(n):\n    if f[i]!=p[i]:\n        ans += 1\nprint(ans)\n"}, "138": {"problem_id": 138, "answer": "import sys\nread = sys.stdin.readline\nn,a,b,c = list(map(int,read().split()))\nif n%4!=0:\n    print(0)\nelse:\n    d = n//4\n    a,b,c = divmod(d,4)\n    print(min(a,b,c))"}, "139": {"problem_id": 139, "answer": "n, m = [int(i) for i in input().split()]\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v = [int(i) for i in input().split()]\n    edges[u].append(v)\n    edges[v].append(u)\n\nvisited = [0] * n\nstack = deque()\nvisited[0] = 1\nstack.append(0)\nwhile stack:\n    u = stack.popleft()\n    for v in edges[u]:\n        if visited[v] == 0:\n            stack.append(v)\n            visited[v] = 1\n            stack.append(v)\n\nprint('YES' if visited[0] else 'NO')\n"}, "140": {"problem_id": 140, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\nscopes = [0] * (m + 1)\nanavs = []\nfor i in range(n):\n    x, s = list(map(int, input().split()))\n    scopes[x] += s\n    anavs.append((x, s))\n\nans = 0\nfor a in anavs:\n    if a[0] == 0:\n        continue\n    else:\n        ans += 1\n        m -= a[1]\n        for b in anavs:\n            if b[0] == a[1]:\n                continue\n            else:\n                break\nprint(ans)\n"}, "141": {"problem_id": 141, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nw = 8\nn = int(input())\na = [int(x) for x in input().split()]\nd = {}\nfor i in a:\n    d[i] = 0\n    d[i+w] += 1\nans = 0\nfor i in sorted(d):\n    ans = max(ans,d[i])\nprint(ans)"}, "142": {"problem_id": 142, "answer": "import sys\ninput=sys.stdin.readline\nn,l=map(int,input().split())\nc=list(map(int,input().split()))\nd=c.copy()\nfor i in range(1,n):\n    d[i]=min(d[i-1],c[i])\nans=0\nfor i in range(n):\n    ans+=d[i]*l\nprint(ans)"}, "143": {"problem_id": 143, "answer": "from bisect import bisect_left\nn = int(input())\na = list(map(int, input().split()))\nm = 0\nfor i in range(1, n):\n    m = max(m, a[i])\n    if a[i] > m:\n        m = a[i]\nans = m\nfor i in range(n - 1):\n    ans = max(ans, m)\nprint(ans)\n"}, "144": {"problem_id": 144, "answer": "n = int(input())\na = input()\nans = 0\nfor i in range(n):\n    if a[i] == '0':\n        ans += 1\n    elif a[i] == '1':\n        ans += 2\n    else:\n        ans += 1\nprint('YES' if ans % 2 == 0 else 'NO')"}, "145": {"problem_id": 145, "answer": "s = input()\nn = len(s)\nif n % 2 == 0:\n    print(\"CHAT WITH HER!\")\nelse:\n    print(\"IGNORE HIM!\")"}, "146": {"problem_id": 146, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\na = list(map(int, readline().split()))\n\ns = 0\ne = 0\nans = 0\nfor i in range(k):\n    if a[i] == 1:\n        s += 1\n    else:\n        e += 1\n    ans = max(ans, abs(e - s))\nprint(ans)\n"}, "147": {"problem_id": 147, "answer": "n,c0,c1=map(int,input().split())\nl=[]\nfor i in range(97oshop):\n    l.append(i)\nl.sort()\nprint(c0+c1*len(l))"}, "148": {"problem_id": 148, "answer": "import sys\ninput = sys.stdin.readline\n\nn, a, x, b, y = list(map(int, input().split()))\n\nd = {a: 0, b: 1}\nfor i in range(2, n):\n    d[i] += 1\n\nans = [0] * (n + 1)\n\nfor i in range(1, n + 1):\n    if d[i] > a:\n        a = d[i]\n        ans[i] = 1\n\nfor i in range(n):\n    if ans[i] == 0:\n        print('NO')\n        return\n\nfor i in range(len(ans)):\n    if ans[i] == 1:\n        print('YES')\n        return\n\nprint('YES')\n"}, "149": {"problem_id": 149, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n##################################################################\n# 3D matrix (N, M, Q)\n##################################################################\ndef ncr(n, r, matrix):\n    nonlocal val\n    c = val()\n    if c > n:return\n    r_min = min(r, n - c)\n    c_min = min(c, n - r)\n    for i in range(c_min, r_min):\n        matrix[i][i] = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            matrix[i][j] = matrix[i][j - 1] + matrix[i - 1][j - 1]\n    for i in range(r)[::-1]:\n        matrix[r][i] = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            matrix[i][j] = matrix[i][j - 1] + matrix[i - 1][j - 1]\n    for i in range(r):\n        for j in range(n):\n            matrix[i][j] = max(matrix[i][j], val() - c_min)\n    for i in range(len(matrix)):\n        print(matrix[i][len(matrix) - 1])\nlist(li())\n"}, "150": {"problem_id": 150, "answer": "n = int(input())\nans = 0\nfor i in range(2, n + 1):\n    if n % i == 0:\n        ans += i * (i - 1) // 2\nprint(ans)\n"}, "151": {"problem_id": 151, "answer": "import re\ns = input()\nv = set('aeiou')\nc = 0\nfor i in re.findall(r'[a-z]{3}', s):\n    if i not in v:\n        c += len(i)\n    else:\n        v.add(i)\nprint(' '.join(i[1:] if i[1] not in v else i[:-1]))"}, "152": {"problem_id": 152, "answer": "from sys import stdin\ninput = stdin.readline\nn, m, k = list(map(int, input().split()))\nspells = list(map(int, input().split()))\nt = list(map(int, input().split()))\ns = int(input())\np = [0]*100001\nfor i in range(1, 2*10**5+1):\n    p.append(p[i-1] + s)\nk = m+1\nc = [0]*100001\nfor i in range(k):\n    d = min(k, n)\n    c[i] = d\nfor i in range(k):\n    d = c[i]\n    for j in range(m):\n        b = d + spells[j]\n        c[i] = b\n        spells[j] = spells[j].replace('b', '1')\nprint(min(p[:s]))\n"}, "153": {"problem_id": 153, "answer": "def main():\n    n, k, m = list(map(int, input().split()))\n    tasks = [int(input()) for _ in range(k)]\n    tasks.sort()\n    t = 0\n    for i in range(n):\n        t += tasks[i]\n        t //= k\n    print(t + 1)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "154": {"problem_id": 154, "answer": "def inp():\n    return int(input())\n\n\ndef main():\n    n = inp()\n    d = [0]*(n+1)\n    d[0] = 1\n    for i in range(1, n+1):\n        d[i] = d[i-1] + 1\n    mod = 998244353\n    ans = 0\n    for i in range(1, n+1):\n        ans += d[i]*(d[i-1]//2)\n        ans %= mod\n        d[i] = (d[i]%2) + 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "155": {"problem_id": 155, "answer": "import sys\ninput = sys.stdin.readline\nclass cell:\n    def __init__(self, n, m, k):\n        self.row = n\n        self.col = m\n        self.k = k\n        self.visited = False\n        self.next = cell(n, m, k + 1)\n        self.next.next = self\n        self.next.visited = True\n        print(self.row, self.col)\n        return\n\nn, m, k = map(int, input().split())\nmat = cell(n, m, k)\nfor i in range(n):\n    for j in range(m):\n        if i == j:\n            continue\n        mat.cell((i + 1) % n, (j + 1) % m, k)\n"}, "156": {"problem_id": 156, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        c = min(a, b)\n        ans = solve(a - c, b - c)\n        return ans\n\nprint(solve(2, 3), \" \", solve(6, 8))"}, "157": {"problem_id": 157, "answer": "import sys\ninput = sys.stdin.readline\n\na, b, c = list(map(int, input().split()))\nd = min(a, b, c)\nans = 0\nfor i in range(c):\n    ans += i * (d // float(i))\n    d %= 4\nprint(ans)\n"}, "158": {"problem_id": 158, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nm = 2*s//n\nans = \"YES\"\nfor i in range(1, n):\n    if m%i!=0: ans = \"NO\"\n    m = m//i\nprint(ans)"}, "159": {"problem_id": 159, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 10**9+1\nb = []\nfor i in range(n):\n    if a[i]%m == 0:\n        b.append(a[i])\n    else:\n        b.append(a[i]//m)\nm = 10**9+1\nc = [0]*(n+1)\nfor i in range(n):\n    c[i+1] = c[i] + a[i]\nans = 0\nfor i in range(n):\n    if c[i]%m == 0:\n        ans += 1\nprint(ans)\nprint(' '.join(map(str, b)))"}, "160": {"problem_id": 160, "answer": "import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\nans = 0\nfor i in range(N-1):\n    ans = max(ans, pow(A[i], 2) // 2)\n    A[i] = ans\nprint('\\n'.join(map(str, A)))"}, "161": {"problem_id": 161, "answer": "import sys\ninput = sys.stdin.readline\n\nx = int(input())\n\nprint(0)\nfor i in range(30):\n    print(i + 1)"}, "162": {"problem_id": 162, "answer": "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    if a[i] == i+1:\n        ans += 1\nprint(ans)\n"}, "163": {"problem_id": 163, "answer": "n,k = list(map(int,input().split()))\ns = input()\na = s.count('T')\nb = s.count('#')\nc = s.count('.')\nd = s.count('G')\ne = s.count('T')\nf = s.count('.')\ng = s.count('G')\nh = s.count('T')\nif a*k!= n:\n    print(\"NO\")\nelse:\n    if d*k!= n:\n        print(\"NO\")\n    else:\n        if e*k!= n:\n            print(\"NO\")\n        else:\n            print(\"YES\")\n"}, "164": {"problem_id": 164, "answer": ""}, "165": {"problem_id": 165, "answer": "b,d,s=list(map(int,input().split()))\nc=0\nfor i in range(1,10**18+1):\n    if s+i<b:\n        c+=1\n    else:\n        break\nprint(c)\n"}, "166": {"problem_id": 166, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = [0] * (n + 1)\n    for i in range(1, n + 1):\n        s[i] = s[i - 1] + a[i]\n    print(['NO', 'YES'[sum(s) == n]])\n\nmain()\n"}, "167": {"problem_id": 167, "answer": "a = input()\nb = input()\ncnt = 0\nfor i in range(0, len(a)):\n    if a[i] == 'a':\n        cnt += 1\n    else:\n        break\nif cnt > 0:\n    print(-1)\nelse:\n    print(''.join(['a' for i in range(0, len(b)) if b[i] == 'a']))"}, "168": {"problem_id": 168, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip('\\n')\n\ndef f(s):\n    return sum(s.count('+')-s.count('-') for i in range(n))\n\nprint(f(s))"}, "169": {"problem_id": 169, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nn, a, b, c = list(map(int, read().split()))\nd = min(a, b)\nres = 0\nfor i in range(1, n + 1):\n    if c < d:\n        res = max(res, i * i)\nprint(res)"}, "170": {"problem_id": 170, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nk = int(input())\n\ns1 = [int(x) for x in input().split()]\ns2 = [int(x) for x in input().split()]\n\ns1.reverse()\ns2.reverse()\n\nm1 = min(s1)\nm2 = min(s2)\n\nprint(m1 + m2, 2)\n"}, "171": {"problem_id": 171, "answer": "import re\npassword = input()\np = re.compile(r'\\W([abcdefghijklmnopqrstuvwxyz]{5,})')\nif p.match(password):\n    print(\"Correct\")\nelse:\n    print(\"Too weak\")"}, "172": {"problem_id": 172, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\n    d[b[i]] = i\n\nans = 0\nfor i in range(1, 5):\n    if a[i] == 1:\n        ans += 1\n    elif a[i] == 2:\n        ans += 1\n    else:\n        ans += 1\n\nif ans % 2!= 0:\n    print(-1)\nelse:\n    print(ans)"}, "173": {"problem_id": 173, "answer": "import sys\nread = sys.stdin.readline\nn,m = map(int,read().split())\ns = read(0)\ns1 = read(1)\ns2 = read(2)\nif s[0]=='<' and s1[0]=='>' and s2[0]=='^':\n    print(\"YES\")\n    return\nelif s[0]=='<' and s1[0]=='>' and s2[0]=='v':\n    print(\"NO\")\n    return\nelse:\n    print(\"NO\")"}, "174": {"problem_id": 174, "answer": "n=int(input())\na=list(map(int,input().split()))\nif a[0]==0:\n    print(\"YES\")\n    for i in range(1,n):\n        if a[i]==1:\n            print(\"(\"+str(i)+\")->\"+str(i)+\"=\"+str(a[i])+\"=\"+str(a[i-1]))\n        else:\n            print(\"(\"+str(i)+\")->\"+str(i)+\"=\"+str(a[i]))\nelse:\n    print(\"NO\")"}, "175": {"problem_id": 175, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\na=n//2\nb=m//2\ngcd=n//a\nres=a*b\nif gcd<2*m:\n    print(0,0)\n    return\nres*=2\nfor i in range(1,int(m**.5)+1):\n    if m%i==0:\n        res-=i\n    elif m//i==i:\n        res+=i\n    else:\n        res+=m//i\n    "}, "176": {"problem_id": 176, "answer": "k, a, b = list(map(int, input().split()))\ncount = 0\nfor i in range(min(a, b), k):\n    if i % k == 0:\n        count += 1\nprint(count)\n"}, "177": {"problem_id": 177, "answer": "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef main():\n    k = inp()\n    print(k)\n\nmain()"}, "178": {"problem_id": 178, "answer": "n = int(input())\ns = input()\nc = 0\nfor i in range(1, n):\n    if s[i] == '8':\n        c += 1\n    else:\n        break\nif c == 11:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "179": {"problem_id": 179, "answer": "import sys\ninput = sys.stdin.readline\n\nn, x, pos = map(int, input().split())\nans = 0\nans += bin_search(x, n)\nprint(ans % (10**9 + 7))"}, "180": {"problem_id": 180, "answer": "import re\ns = input()\nn = int(input())\ncnt = 0\nfor i in range(n):\n    if re.findall('[\\w]', s[i]):\n        cnt += 1\n        s = re.sub(r'[^\\w\\s]', '', s[i])\n    else:\n        break\nif cnt > 1:\n    print('Impossible')\nelse:\n    print(s)"}, "181": {"problem_id": 181, "answer": "import math\nn = int(input())\na = math.pi/180*n\nc = math.pi/180\np = int(input())\nq = int(input())\ns = 0\nfor i in range(p):\n    s += (a*(i%90) * c)\n    if s < q:\n        q = s\n        s = 0\nprint(q)"}, "182": {"problem_id": 182, "answer": "a, b, c = list(map(int, input().split()))\nx, y, z = list(map(int, input().split()))\nspheres = []\nfor i in range(1, min(a, b, c) + 1):\n    if i % 3 == 0:\n        spheres.append((a, b, i))\n    elif i % 3 == 1:\n        spheres.append((b, a, i))\n    elif i % 3 == 2:\n        spheres.append((a, b, i))\n\ns = 0\nfor i in range(len(spheres)):\n    if s % 3 == 0:\n        s += 1\n    elif s % 3 == 1:\n        s -= 1\n    elif s % 3 == 2:\n        s //= 3\n\nprint('Yes' if s >= x else 'No')\n"}, "183": {"problem_id": 183, "answer": "import sys\ninput = sys.stdin.readline\nn,k,m = list(map(int,input().split()))\nmod = 10**9+7\npow2 = 10**9+9\ndef get_remainder(x):\n    x = pow(x,2,mod)\n    return x%mod\nans = get_remainder(n)\nprint(ans%m)\n"}, "184": {"problem_id": 184, "answer": "l,r,a=map(int,input().split())\ns=l*2+r-a\nif l&1 and r&1:\n    s-=l\nelif l&1 and r&1:\n    s-=r\nprint(s)"}, "185": {"problem_id": 185, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = map(int, readline().split())\n\ndef isClosed(x):\n    return x.islower()\n\nmanholes = [[0] * n for _ in range(n)]\nfor i in range(n - 1):\n    manholes[i][i] = 1\n    \nfor i in range(k):\n    p = i + 1\n    while p < n and manholes[p][i] == 0:\n        p += 1\n    manholes[i][p] = 0\n\nans = 0\nfor i in range(n):\n    if isClosed(manholes[i]):\n        continue\n    ans += 1\n    i += 1\nprint(ans)"}, "186": {"problem_id": 186, "answer": "n,m=list(map(int,input().split()))\nans=0\nfor i in range(m):\n    if n%2==0:\n        ans+=n//2\n    else:\n        ans+=n//3\nprint(ans)\n"}, "187": {"problem_id": 187, "answer": "n = int(input())\ncards = list(map(int, input().split()))\np = cards.copy()\nv = cards.copy()\nfor i in range(n):\n    p.append(i)\n    v.append(i)\n\ns = 0\nfor i in range(n):\n    if p[i]!= v[i]:\n        s += 1\n\nif s == n:\n    print(\"YES\")\n    print(p[0], p[1])\nelse:\n    print(\"NO\")\n    print(p[0], p[1])"}, "188": {"problem_id": 188, "answer": "from collections import deque\nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nd=deque()\nfor i in range(k):\n    d.append(a[i])\nflag=0\nfor i in range(8):\n    if d[i]!=i:\n        flag=1\n        break\nif flag==0:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n"}, "189": {"problem_id": 189, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\n\nans = [0]*n\nans[0] = A[0]\nfor i in range(1, n):\n    ans[i] = min(ans[i-1]+A[i], A[i])\n\nprint(ans[-1])"}, "190": {"problem_id": 190, "answer": ""}, "191": {"problem_id": 191, "answer": "import sys\nreadline = sys.stdin.readline\nn, k = map(int, readline().split())\na = list(map(int, readline().split()))\ns = sum(a)\nm = 10**9+7\nans = 0\nfor i in range(1, n):\n    ans = (ans * (s-a[i-1])) % m\n    a[i] = a[i] + 1\nprint(ans)"}, "192": {"problem_id": 192, "answer": "import sys\ninput = sys.stdin.readline\n\nx, y = list(map(int, input().split()))\ns = x + y\nprint(min(s // 2, abs(s - y))))\n"}, "193": {"problem_id": 193, "answer": "import math\na,b = map(int,input().split())\nc,d = map(int,input().split())\nn = a*a + b*b\nm = abs(a)\ns = m*m\nt = m*d - m*b\nprint(s)"}, "194": {"problem_id": 194, "answer": "n,a,b=list(map(int,input().split()))\nt=list(map(int,input().split()))\ns=0\nfor i in range(n):\n    if t[i]==1:\n        s+=1\n    else:\n        s+=(2*(a+b-i-1))\nprint(s)\n"}, "195": {"problem_id": 195, "answer": "A, B, C, N = map(int, input().split())\nprint(sum([A in range(B, C+1) for _ in range(N)]))"}, "196": {"problem_id": 196, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\ns = list(map(int,input().split()))\ns.insert(0,0)\nfor i in range(1,len(s)):\n    s[i]*=2\nprint(s[-1]%MOD)"}, "197": {"problem_id": 197, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 1000000007\n\n\ndef solve(n, l, r):\n    if n < l or n > r:\n        return 0\n    ans = 1\n    for i in range(n):\n        if l[i] < r[i]:\n            ans += solve(i + 1, l[i], r[i])\n        else:\n            ans += solve(i + 1, l[i], r[i] - 1)\n    return ans\n\n\nn = int(readline())\nl = [int(x) for x in readline().split()]\nr = [int(x) for x in readline().split()]\nprint(solve(n, l, r) % MOD)\n"}, "198": {"problem_id": 198, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**20\nn = int(readline())\nans = 0\nfor i in range(1, n+1):\n    if i%2!=0:\n        ans += 2*(i//2)\nprint(ans)"}, "199": {"problem_id": 199, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, s = list(map(int, readline().split()))\nv = list(map(int, readline().split()))\n\nif s > n:\n    print(-1)\n    return\n\np = [0] * s\nfor i in range(s):\n    p[v[i]] += 1\n\nans = 0\nfor i in range(s):\n    ans += p[i]\n\nprint(ans)"}, "200": {"problem_id": 200, "answer": "h1, h2 = list(map(int, input().split()))\na, b = list(map(int, input().split()))\nt = h1\nh1 += t * (b // a)\nh2 += t * (b // a)\nprint(t + int(h1 - h2))\n"}, "201": {"problem_id": 201, "answer": "c,h,r,b,w = map(int,input().split())\ns = 0\nfor i in range(1,min(w,r)+1):\n    s += (h*i)\n    if i&1:\n        s -= (b*i)\nprint(s)"}, "202": {"problem_id": 202, "answer": "x1, y1 = list(map(int, input().split()))\nx2, y2 = list(map(int, input().split()))\n\nans = abs(x1-x2) + abs(y1-y2)\nprint(ans)\n"}, "203": {"problem_id": 203, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\na.sort()\ndep = [0] * n\nrem = [0] * n\nfor i in range(n):\n    if dep[i] == a[i]:\n        dep[i] = -1\n    else:\n        rem[i] = -1\n\ncnt = 0\nfor i in range(n):\n    if dep[i] == rem[i]:\n        cnt += 1\n    else:\n        break\n\nif cnt % 2 == 0:\n    print('D')\nelse:\n    print('R')"}, "204": {"problem_id": 204, "answer": "a, b, x, y = list(map(int, input().split()))\ns = a + (y > a)\nt = b + (x > y)\n\nans = 0\nfor i in range(1, 20):\n    if i % 2 == 1:\n        ans += t\n    else:\n        ans += s\nprint(ans)\n"}, "205": {"problem_id": 205, "answer": "import sys\ninput = sys.stdin.readline\n\nn, b = map(int, input().split())\n\nprint(sum([int(x) for x in list(str(n!)) if len(x)>0]))"}, "206": {"problem_id": 206, "answer": "m, a, b = list(map(int, input().split()))\nprint(m-b+sum(a-1)+(m-a)*b)\n"}, "207": {"problem_id": 207, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nans = set()\nfor i in range(n):\n    if a[i] & 1:\n        ans.add(i)\n\nprint('Yes' if ans else 'No')"}, "208": {"problem_id": 208, "answer": "import sys\nimport math\nreadline = sys.stdin.readline\ndef main():\n    x1, y1, x2, y2 = map(int, readline().split())\n    if x1 == x2 or y1 == y2:\n        print(1, 0, 1, 0)\n    elif x1 > x2 or y1 > y2:\n        print(-1)\n    else:\n        d1 = abs(x1 - x2)\n        d2 = abs(y1 - y2)\n        if d1 == 1.0:\n            print(1, 0, 1, 0)\n        elif d1 > 1.0:\n            print(1, math.floor(d1 / 2.0), 1, math.floor(d1 / 2.0))\n        elif d1 < -1.0:\n            print(1, math.ceil(d1 / 2.0), 1, math.ceil(d1 / 2.0))\n        else:\n            print(1, math.floor(d1 / 2.0), 1, math.floor(d1 / 2.0))\n"}, "209": {"problem_id": 209, "answer": "import sys\ninput = sys.stdin.readline\n\nx, y = map(int, input().split())\nn = int(input())\np = 1000000007\nans = pow(x, n, p)\nprint(ans%p)"}, "210": {"problem_id": 210, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn = int(input())\nA = list(map(int, input().split()))\ns = 0\nfor i in range(1, n):\n    s += A[i]\n    if s == 0:\n        print('NO')\n        return\n    elif s%2 == 0:\n        s //= 2\n        new = s+A[i]\n        s -= new\n        print('YES')\n        print(s, end ='')\n        print(new, end ='')\n    else:\n        s //= 2\n        new = s+A[i]\n        s -= new\n        print('YES')\n        print(s, end ='')\n        print(new, end ='')"}, "211": {"problem_id": 211, "answer": "import sys\nread = sys.stdin.readline\nn, m, k = map(int, read().split())\nsys.setrecursionlimit(10**9+10)\nans = 0\np = 10**9+9\ndef dfs(cur):\n    ans += (cur-1) * p\n    cur -= 1\n    if cur < 0:\n        return\n    dfs(cur//2)\n    cur -= cur & -cur\n    dfs(cur//2)\n    cur -= cur & -cur\ndfs(0)\nprint(ans)"}, "212": {"problem_id": 212, "answer": "n=int(input())\nif n%10==0:\n    print(\"YES\")\n    print(n//10)\nelif n%10==1:\n    print(\"YES\")\n    print(n//10+1)\nelse:\n    print(\"NO\")"}, "213": {"problem_id": 213, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\n\nif n < m:\n    print(-1)\n    return\n\nflats = {}\nfor i in range(n):\n    flat = list(map(int, readline().split()))\n    if flat[0] not in flats:\n        flats[flat[0]] = 1\n    else:\n        flats[flat[0]] += 1\n\nres = 0\nres = flats.get(m, 0) + flats.get(0, 0)\n\nfor flat in flats:\n    if res == flat:\n        res *= flat\n        continue\n    print(res)"}, "214": {"problem_id": 214, "answer": "s = input()\np = s.count('0')\nans = 0\nfor i in range(1, len(s)):\n    if s[i] == '0':\n        ans += p\nprint(ans)"}, "215": {"problem_id": 215, "answer": "n = int(input())\ns = input()\ncnt = 0\ndic = {}\nfor i in range(n):\n    if s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ':\n        cnt += 1\n    elif s[i].islower():\n        dic[i] = cnt\n    else:\n        dic[i] = cnt\nprint(max(dic.values()))\n"}, "216": {"problem_id": 216, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nc = []\nfor i in a:\n    b.append(i)\nfor i in range(n):\n    if b[i] > 0:\n        c.append(b[i])\nans = 0\nfor i in range(n):\n    ans += max(c[i] - c[0], 0)\nprint(ans)"}, "217": {"problem_id": 217, "answer": "a, b, f, k = list(map(int, input().split()))\ngas = b + (a - 0.5)\ntour = 0\nb = b + a\nwhile k:\n    if b >= k:\n        b = b - k + a\n        gas -= b\n    elif b < k:\n        b = b + k - a\n        gas += b\n        tour += 1\n    k-=1\nprint(tour if tour<k else -1)\n"}, "218": {"problem_id": 218, "answer": "n, p, q = list(map(int, input().split()))\ns = input()\np, q = min(p, q), max(p, q)\nres = []\nfor i in range(n - p):\n    for j in range(q):\n        res.append(s[i:i + p][j:j + q])\nprint(res[0][0])\n"}, "219": {"problem_id": 219, "answer": "n, m, s, d = list(map(int, input().split()))\na = list(map(int, input().split()))\np = [0] * 200001\nfor i in range(1, n):\n    p[a[i]] = i\nmj = m\njump = [0] * 200001\nfinish = [0] * 200001\nans = [\"IMPOSSIBLE\"] * n\nans[0] = \"RUN \"\nfor i in range(1, n):\n    if p[a[i]] > p[a[i - 1]]:\n        mj = min(mj, p[a[i - 1]])\n        jump.append(jump[mj] + s)\n    elif p[a[i]] < p[a[i - 1]]:\n        jump.append(jump[jump[mj]] + d)\n        mj = min(mj, p[a[i - 1]])\n        jump.pop()\n        jump.pop()\n    else:\n        ans[i] = \"JUMP \"\nprint(ans[mj])"}, "220": {"problem_id": 220, "answer": "s, x = [int(i) for i in input().split()]\na = s[0]\nb = x[0]\ncnt = 0\nfor i in range(1, s[1]):\n    if a + i in s:\n        cnt += 1\n    a = a + i\nprint(cnt)"}, "221": {"problem_id": 221, "answer": "n, k = map(int, input().split())\nprint(n - 1)\nfor i in range(n - 1):\n    print(min(k, i + k - 1), end ='')"}, "222": {"problem_id": 222, "answer": "import sys\nimport math\ninput = sys.stdin.readline\n\nn = int(input())\nans = 0\nfor i in range(10):\n    if n % i == 0:\n        ans += 1\n        n /= i\nprint(ans)"}, "223": {"problem_id": 223, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\nn = int(input())\n\ndef factors(n):\n    \"\"\"Recursively factors n\"\"\"\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [2]\n    if n % 2 == 0:\n        return factors(n-1)\n    else:\n        return factors(n//2)\n\nfactors(n)\n\nprint(factors(n).count(1) * 2**n % MOD)"}, "224": {"problem_id": 224, "answer": "s = input()\nn = len(s)\nc = 0\nfor i in range(n):\n    if s[i] in 'aeiou':\n        c += 1\nprint(c)"}, "225": {"problem_id": 225, "answer": "a = int(input())\nfor i in range(a):\n    print(a, end=' ')\n"}, "226": {"problem_id": 226, "answer": "n = int(input())\na = [int(i) for i in input().split(' ')]\na.sort()\nb = [0] * 100000\nb[0] = a[0]\nfor i in range(1, n):\n    b[i] = max(a[i], b[i-1])\nprint(b[n-1], b[0])"}, "227": {"problem_id": 227, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * 10 ** 5\nfor i in range(1, n):\n    b[i] += a[i]\nans = sum(b)\nprint(ans)"}, "228": {"problem_id": 228, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = [\"Alice\", \"Bob\"]\n\npiles = [0] * (n//2 + 1)\n\nfor i in range(n):\n    if piles[i] == 0:\n        piles[i + 1] = a[i]\n    else:\n        break"}, "229": {"problem_id": 229, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\nn=int(input())\na=list(map(int,input().split()))\nif sum(a)%2!=0:\n    print('NO')\nelse:\n    print('YES')"}, "230": {"problem_id": 230, "answer": "import sys\ninput = sys.stdin.readline\n\nclass Bit:\n    def __init__(self, n):\n        self.size = n\n        self.tree = [0] * (n + 1)\n\n    def sum(self, i):\n        s = 0\n        while i > 0:\n            s += self.tree[i]\n            i -= i & -i\n        return s\n\n    def add(self, i, x):\n        while i <= self.size:\n            self.tree[i] += x\n            i += i & -i\n\n\nN = int(input())\nS = input().rstrip()\n\nprint(max(list(map(int, list(S)))) if len(S) == 1 else 0)"}, "231": {"problem_id": 231, "answer": "n, a = map(int, input().split())\nprint(2 + min(n//2, a//2) + (n&1) * 2)"}, "232": {"problem_id": 232, "answer": "n, m = list(map(int, input().split()))\nk = list(map(int, input().split()))\nk.sort()\nl = [0] * m\nfor i in range(m):\n    l[i] = int(input())\nans = []\nfor i in range(m):\n    ans.append(l[i])\nprint('YES' if ans == [1] + list(range(1, n + 1)))\n"}, "233": {"problem_id": 233, "answer": "import sys\ndef __starting_point():\n    n = int(input())\n    rounds = [0]*6\n    for i in range(n):\n        m,c = list(map(int,input().split()))\n        if m>c:\n            m,c = c,m\n        rounds[m]+=1\n    print(\"Mishka\" if rounds[5]>0 else \"Chris\")\n    sys.stdout.write(\"\\n\"+\" \".join([str(round) for round in rounds]))\n__starting_point()"}, "234": {"problem_id": 234, "answer": "import sys\nreadline = sys.stdin.readline\nn, m = list(map(int, readline().split()))\nans = [['*' for i in range(8)]]\nfor i in range(n):\n    ans.append(['*' for i in range(m)])\n    \nfor i in range(8):\n    ans[i] = ['*' for i in range(m)][::-1]\n    \nprint('YES' if ans[0][-1] == '*' else 'NO')\n"}, "235": {"problem_id": 235, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\nans = 0\nm = n.bit_length()\ndp = [0]*(2*m)\ndp[0] = 1\ndp[1] = n\nfor i in range(2, n+1):\n    dp[i] = max(dp[i-2], n-dp[i-1])\n    ans += pow(2, i, m)\nprint(ans)"}, "236": {"problem_id": 236, "answer": "s = input()\nn = len(s)\nc = 0\nfor i in range(n):\n    if s[i] == '-':\n        c += 1\n    else:\n        c += 2\nif c == n:\n    print('YES')\nelse:\n    print('NO')"}, "237": {"problem_id": 237, "answer": "def main():\n    n, m, k = list(map(int, input().split()))\n    a = [0] * k\n    for i in range(k):\n        a[i] = i + 1\n    b = [0] * min(m, n)\n    for i in range(min(m, n)):\n        b[i] = i + 1\n    print(min(b))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "238": {"problem_id": 238, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18\nns = lambda: list(map(int, readline().split()))\nni = lambda: int(readline())\nnl = lambda: list(map(int, readline().split()))\nna = lambda: list(map(int, readline().split()))\nnsn = lambda: list(map(int, readline().split()))\nni = ni()\nnlin = lambda: list(map(int, readline().split()))\nnln = lambda: list(map(int, readline().split()))\n\nN = ni()\nA = na()\nM = ni()\nk = min(A)\nd = M+k\nans = [0]*N\nfor i in range(N):\n    ans[i] = max(ans[i], 0) + A[i]-k*nlin[i]\nprint(ans[-1])"}, "239": {"problem_id": 239, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nn, m = map(int, read().split())\nans = [0]*n\nfor i in range(4):\n    ans[i] = sum(ans[i-1:i+1])\nprint(' '.join(map(str, ans)))"}, "240": {"problem_id": 240, "answer": "s = input()\nn = len(s)\na = list(s)\nb = [0] * 10\nb[0] = a.index(s[0])\nfor i in range(1, n):\n    b[i] = int(a[i]) + b[i - 1]\nprint(b[n - 1])"}, "241": {"problem_id": 241, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m, min, max = map(int, readline().split())\nt = list(map(int, readline().split()))\n\nif n - m == 1:\n    print('Correct')\nelse:\n    t.sort()\n    if t[1] < min:\n        print('Incorrect')\n    elif t[1] > max:\n        print('Incorrect')\n    else:\n        print('Correct')"}, "242": {"problem_id": 242, "answer": "from sys import stdin,stdout\nfrom math import floor,ceil,sqrt,log\nfrom collections import defaultdict as dd,OrderedDict as odict\nfrom bisect import bisect_left as bl,bisect_right as br,bisect as bs\nfrom heapq import heapify,heappush,heappop,heapify\nfrom itertools import permutations as pp,combinations as cc\r\nfrom functools import reduce\r\nfrom operator import itemgetter\r\nfrom collections import deque,Counter as C\r\nfrom datetime import date\r\nfrom re import sub,subn,subexp\r\nfrom random import randrange,shuffle\r\nfrom string import ascii_lowercase\r\nletters = 'abcdefghijklmnopqrstuvwxyz'\r\nspaces =' '\r\nalpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\ndigits = '0123456789'\r\nn = int(stdin.readline())\r\nif n:\r\n    print(n)\r\n    return\r\nk = 1\r\nwhile k <= n:\r\n    k += 1\r\n    odict[alpha[int(log(k,2))]] = k\r\n    k = k**2\r\nC.clear()\r\nspaces =' '\r\nfor i in range(len(spaces)):\r\n    spaces[i] = spaces[i] + alpha[int(log(spaces[i],2))]\r\nprint(''.join(map(str,odict.values())))"}, "243": {"problem_id": 243, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9+7\ninput = lambda: readline().rstrip()\nM = [[] for i in range(INF)]\nfor i in range(M[0][0]+1):\n    M[0].append(i)\nM[0].sort()\nN, E, k = M[0], M[1], M[2]\nedges = []\nfor i in range(k):\n    for j in range(N):\n        if i == j:\n            continue\n        edges.append((i, j))\nprint(*edges, sep='\\n')\n"}, "244": {"problem_id": 244, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nm = int(readline())\n\na = [0]*3\na[0] = n%2\na[1] = n//2\na[2] = 1\n\nb = [0]*3\nb[0] = n%2\nb[1] = n//2\nb[2] = 1\n\nfor i in range(3):\n    if a[i] == 0:\n        continue\n    if a[i] == 1:\n        a[i] = n%2\n    elif a[i] == 2:\n        a[i] = n//2\n    else:\n        a[i] = a[i-1]\n\nprint(a[-1])"}, "245": {"problem_id": 245, "answer": "n = int(input())\nl = [list(map(int, input().split())) for i in range(n)]\nl.sort()\nsquare = True\nfor i in range(n):\n    if l[i][1] == l[i][0]:\n        square = False\n        break\nprint('YES' if square else 'NO')"}, "246": {"problem_id": 246, "answer": "import math\nn,s = list(map(int,input().split()))\nres = 0\nfor i in range(1,10**(n-1)):\n    res += i\n    if math.floor(res) > n:\n        break\nprint(res)\n"}, "247": {"problem_id": 247, "answer": "import sys\nn = int(sys.stdin.readline())\na = [tuple(map(int, sys.stdin.readline().split())) for i in range(n)]\nd = {}\nfor i in range(n):\n    d[a[i][0]] = a[i][1]\n    d[a[i][1]] = a[i][0]\n\ncnt = 0\nfor i in range(1, n):\n    if d.get(a[i][0]):\n        cnt += 1\n        d[a[i][0]] = a[i][1]\n    else:\n        break\n\nif cnt > 1:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "248": {"problem_id": 248, "answer": "a, b, k, t = list(map(int, input().split()))\nMOD = 10**9 + 7\ns = a + b\ncnt = 0\nfor i in range(1, t+1):\n    if s % i == 0:\n        cnt += (s // i) * pow(2, i)\n        s = s // i\nprint(cnt % MOD)\n"}, "249": {"problem_id": 249, "answer": "n,l,x,y = list(map(int,input().split()))\na = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n    s[i] = a[i]\n    \nt = x+y\nans = 0\nfor i in range(n-1,-1,-1):\n    if t%i==0:\n        ans += s[t//i]\n        t = t//i\nprint(ans)\nprint(' '.join(map(str,s)))\n"}, "250": {"problem_id": 250, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nr = [0]*n\nh = [0]*n\nfor i in range(n):\n    ri, hi = map(int, input().split())\n    r[i] = ri + ri*hi\n    h[i] = hi + h[i]\n\nprint(pow(1.0, n, 0.5) * sum(r)*n/2)"}, "251": {"problem_id": 251, "answer": "n, k = list(map(int, input().split()))\nh = list(map(int, input().split()))\nheight = [0] * n\nfor i in range(n):\n    height[i] = h[i]\n    \nl = []\nfor i in range(n):\n    l.append((height[i], i))\nl.sort()\nans = 0\nfor i in range(n):\n    if l[i][1] <= k:\n        ans += 1\nprint(ans)\n"}, "252": {"problem_id": 252, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(1, n):\n    ans += a[i] + a[i - 1]\nprint(ans)"}, "253": {"problem_id": 253, "answer": "k1, k2, k3 = list(map(int, input().split()))\nans = 0\nfor i in range(k1):\n    x = i + k3\n    ans += 1\n    if x > k2:\n        x = k2\n    if x > k3:\n        x = k3\n    print(\"YES\")\n    if x == k1:\n        print(\"NO\")\n    elif x == k2:\n        print(\"YES\")\n    elif x == k3:\n        print(\"NO\")"}, "254": {"problem_id": 254, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(n):\n    if s[i] == s[i - 1]:\n        cnt += 1\nprint(cnt)\n"}, "255": {"problem_id": 255, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nb = list(map(int, input().split()))\n\nd = 0\nfor i in range(n):\n    if a[i]!=0:\n        d+=1\n    elif m!=len(a):\n        d+=1\n\nprint(d)"}, "256": {"problem_id": 256, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    team1 = [0]*4\n    team2 = [0]*4\n    for i in range(4):\n        x, y = map(int, input().split())\n        team1[i] = x\n        team2[i] = y\n    for i in range(4):\n        print(\"Team %s\" % (team1[i]))\n        if team1[i] > team2[i]:\n            print(\"Draw\")\n        elif team2[i] > team1[i]:\n            print(\"Team %s\" % (team2[i]))\n        else:\n            print(\"Team %s\" % (team1[i]))\n\nmain()\n"}, "257": {"problem_id": 257, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\ndef solve():\n    N, K = map(int, input().split())\n    X = []\n    Y = []\n    C = []\n    for i in range(N):\n        x, y, c = map(int, input().split())\n        X.append(x)\n        Y.append(y)\n        C.append(c)\n    X.sort()\n    Y.sort()\n    c_max = 10000000\n    num_slices = K\n    curr_h = C[0]\n    curr_w = C[0]\n    print(2.4*curr_h**0.5 + (curr_w/2.4)*max(0, curr_h**0.5 - num_slices*curr_w/2))\n\nN, K = map(int, input().split())\nX = []\nY = []\nC = []\nfor i in range(N):\n    x, y, c = map(int, input().split())\n    X.append(x)\n    Y.append(y)\n    C.append(c)\nX.sort()\nY.sort()\nc_max = 10000000\nnum_slices = K\ncurr_h = C[0]\ncurr_w = C[0]\nfor i in range(1, len(C)):\n    curr_h = min(curr_h, C[i])\n    curr_w = max(curr_w, C[i])\n    curr_w //= 2\n    curr_h *= c_max\n    print(2.4*curr_h**0.5 + (curr_w/2.4)*max(0, curr_h**0.5 - num_slices*curr_w/2))"}, "258": {"problem_id": 258, "answer": "from sys import stdin\ninput = stdin.readline\n\nn = int(input())\ns = input()\ns = list(s)\neven = 0\nodd = 0\nfor i in range(n):\n    if s[i] == \"?\":\n        even += 1\n    else:\n        odd += 1\nprint(\"Bicarp\" if even%2!=0 else \"Monocarp\")"}, "259": {"problem_id": 259, "answer": "import sys\ninput = sys.stdin.readline\n\nn,t = list(map(int,input().split()))\nL = [[] for i in range(n)]\nfor i in range(n):\n    s,d = list(map(int,input().split()))\n    L[s-1].append(d-s)\n    L[d-1].append(s-d)\n\nans = []\nfor i in range(n):\n    ans.append(sum(L[i]))\nprint(ans[-1])"}, "260": {"problem_id": 260, "answer": "m, k = list(map(int, input().split()))\nif m*max(k, k<<5) < k:\n    print(m*max(k, k<<5))\nelse:\n    print(m*max(k, k<<5))"}, "261": {"problem_id": 261, "answer": "n = int(input())\ns = input()\na = [0]*n\nfor i in range(n):\n    if s[i] == '*':\n        a[i] = 1\n    else:\n        a[i] = 0\nans = 'yes'\nfor i in range(n):\n    if a[i] == 0:\n        ans = 'no'\nprint(ans)"}, "262": {"problem_id": 262, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nans = []\nfor i in range(n):\n    a = list(map(int, readline().split()))\n    ans.append(a)\n\nif n % 2 == 0:\n    print(-1)\n    return\n\nm = 10**9 + 7\ns = 0\nfor i in range(n):\n    s += a[i]\n    for j in range(i + 1, n):\n        s -= a[j]\n        m = min(m, s)\n        s *= 2\n\nif m % 2 == 0:\n    print(m)\n    return\n\nm = 10**9 + 7\ns = 0\nfor i in range(n):\n    s += a[i]\n    for j in range(i + 1, n):\n        s -= a[j]\n        m = min(m, s)\n        s *= 2\n\nif m % 2 == 0:\n    print(m)\n    return\n\nans.sort()\nprint(ans[0])"}, "263": {"problem_id": 263, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nm = int(input())\nans = []\nfor i in range(n):\n    a = int(input())\n    ans.append(a)\nans.sort()\nprint(min(ans[-1], max(ans[-1], key=lambda x: x[1])), max(ans[-1], key=lambda x: x[1]))"}, "264": {"problem_id": 264, "answer": "n, m = list(map(int, input().split()))\nMOD = 10**9 + 7\n\nans = 1\nfor i in range(1, n+1):\n    ans *= i\n    ans %= MOD\n\nprint(ans)\n"}, "265": {"problem_id": 265, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\npizzas = list(map(int, input().split()))\ningredient_dict = {}\nfor _ in range(n):\n    i = int(input())\n    ingredient_dict[i] = input().split()\n\nans = []\nfreq = {}\nfor i in range(m):\n    a = int(input())\n    b = list(map(int, input().split()))\n    freq[b[0]].add(a)\n    ans.append(i+1)\n\nfor i in range(1, 10):\n    if i not in freq:\n        freq[i] = set()\n    freq[i].add(i)\n\nfreq = sorted(freq.keys())\n\n# print(freq)\n\nfrom collections import deque\nd = deque()\nd.append(1)\nsatisfied = 0\nwhile satisfied < m:\n    v = d[-1]\n    satisfied += 2\n    for i in freq[v]:\n        if satisfied >= i:\n            d.append(i)\n            satisfied -= i\n\nprint(' '.join(map(str, ans)))\n"}, "266": {"problem_id": 266, "answer": "m, s = list(map(int, input().split()))\nprint('{} {}'.format(m, s))\n"}, "267": {"problem_id": 267, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9 + 7\nINF = 10**20\ns = list(map(int, readline().split()))\ndp = [[0] * (s[i] - s[i-1]) for i in range(len(s))]\ndp[0][0] = 1\nfor i in range(1, len(s)):\n    for j in range(i):\n        dp[i][j] = (dp[i-1][j-1] + s[j]) % MOD\nprint(dp[len(s)-1][s[len(s)-1]-1])\n"}, "268": {"problem_id": 268, "answer": "import bisect\nn, k, d = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = sum(a)\nb = [(s - min(a), s) for s in a]\nb.sort()\nc = [0] * n\nfor i in range(n):\n    c[i] = b[i][1]\n    if i > k:\n        c[i] = min(c[i], b[i][0] - d)\n    elif i == k:\n        c[i] = min(c[i], b[i][0] + d)\nprint('YES' if all([x >= d for x in c]) else 'NO')\n"}, "269": {"problem_id": 269, "answer": "import sys\ns = input()\nn = len(s)\nc = {i:0 for i in 'R','B','Y','G'}\nfor i in s:\n    if i == 'R':\n        c[i] += 1\n    elif i == 'B':\n        c[i] += 2\n    elif i == 'Y':\n        c[i] += 1\n    else:\n        c[i] += 3\nprint(c[0],c[1],c[2],c[3])"}, "270": {"problem_id": 270, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nINF = float('inf')\nMOD = 10**9+7\n\ndef dfs(s,t,path):\n    nonlocal INF\n    INF = INF if INF < INF else INF+path[0]\n    for i in range(1,len(path)):\n        if path[i]==t:\n            dfs(s,path[i],i)\n        elif path[i]==s:\n            dfs(path[i],t,i)\n\nN,M = map(int,input().split())\nS = [int(x) for x in input().split()]\nT = [int(x) for x in input().split()]\n\npath = [0]*N\ndfs(S,T,0)\nprint(INF)"}, "271": {"problem_id": 271, "answer": "n = int(input())\nprint(n + 0.5)"}, "272": {"problem_id": 272, "answer": "s = list(input())\nt = list(input())\nn = len(s)\ncnt = 0\nfor i in range(n):\n    if s[i] not in t:\n        cnt += 1\n        t.append(s[i])\n        s.pop(i)\nprint(cnt)\nfor i in range(cnt):\n    print(''.join(s), end=' ')\n"}, "273": {"problem_id": 273, "answer": "s1 = input().strip()\ns2 = input().strip()\na = sorted(s1 + s2, key=lambda x: x[0] + x[1], reverse=True)\nprint(a[0][1:])"}, "274": {"problem_id": 274, "answer": "n = int(input())\narr = input()\nm = 0\np = []\nfor i in range(n):\n    if arr[i]=='[':\n        p.append([])\n    elif arr[i]==']':\n        p.append([])\n    else:\n        p[-1].append(arr[i])\n        m+=1\n        p[-1].append('|')\n        p[-1].append('+')\n        p[-1].append('-'*(m-1))\n        p[-1].append('+')\n        p[-1].append('-'*(m-1))\n        p[-1].append('-')\n        p[-1].append('+')\n        p[-1].append('-'*(m-1))\n        p[-1].append('+')\n        p[-1].append('-')\n        p[-1].append('+')\n        p[-1].append('1')\n        m-=1\n        p.pop()\nprint(''.join(p[::-1]))"}, "275": {"problem_id": 275, "answer": "import sys\ninput = sys.stdin.readline\n\nS = input()\nn = len(S)\nans = [0] * (n + 1)\nfor i in range(n):\n    ans[i + 1] = int(S[i] * (2 * S[i] - 1) / 2)\nprint(\"=\" * n + \">\" if ans[n] > n else \"<\" if ans[n] < n)"}, "276": {"problem_id": 276, "answer": "n = int(input())\ns = set()\nfor i in range(n):\n    s.add(input().strip())\nprint(len(s))\nfor i in s:\n    print(i[0],end=' ')"}, "277": {"problem_id": 277, "answer": "n, a, b = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if a[i] & 1 > 0:\n        cnt += 1\nif cnt % 2 == 1:\n    print(\"Final!\")\nelse:\n    print(n - 1)"}, "278": {"problem_id": 278, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\np = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if b[i] == 1:\n        b[i] = -1\n        ans += 1\n\nprint(ans)\n"}, "279": {"problem_id": 279, "answer": "v1, v2, t, d = map(int, input().split())\nt = int(t)\nv1 *= 2\nv2 *= 2\nans = 0\nfor i in range(t):\n    ans += abs(v1 - v2)\n    v1 /= 2\n    v2 /= 2\nprint(ans)"}, "280": {"problem_id": 280, "answer": "import sys\ninput = sys.stdin.readline\n\ndef dfs(s, i):\n    nonlocal N, M, W, L, d\n    if N < 2:\n        return\n    N -= 1\n    M -= 1\n    W -= sum(s[i:i+L])\n    L *= 2\n    d = 0\n    for j in range(i+1, i+L):\n        d += W\n        W = min(W, d)\n        if d > L:\n            break\n    print(d)\n\nN, M = list(map(int, input().split()))\nW = [float(\"inf\")] * N\nL = [0] * N\nfor _ in range(M):\n    l, v = list(map(int, input().split()))\n    W[l-1] = v\n    L[l-1] = v\ndfs(0, 0)\n"}, "281": {"problem_id": 281, "answer": "a, b = map(int, input().split())\nprint(str(bin(a * b // 9))[2:])"}, "282": {"problem_id": 282, "answer": "n, d = [int(i) for i in input().split()]\ns = input()\na = [0] * 1001\nfor i in range(1, n):\n    if s[i] == '1':\n        a[i] = 1\n    else:\n        a[i] = 0\nres = 0\nfor i in range(1, n):\n    if a[i] == 1:\n        res += 1\n    elif a[i] == 0:\n        break\nprint(res)"}, "283": {"problem_id": 283, "answer": "import math\nn = int(input())\nfor i in range(2,math.floor(math.sqrt(n))+1):\n    if n%i == 0:\n        print(i)\n        break\n"}, "284": {"problem_id": 284, "answer": "n = int(input())\nif n % 3 == 0:\n    print('YES')\nelse:\n    print('NO')"}, "285": {"problem_id": 285, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\na=[]\nfor i in range(n):\n    a.append(list(map(int,input().split())))\nb=sorted(a,key=lambda x:x[0])\nc=0\nfor i in range(n):\n    if b[i][1] in a[i]:\n        c+=1\nif c>1:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"}, "286": {"problem_id": 286, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nprint(sum([1 for i in range(n) if i == first]))"}, "287": {"problem_id": 287, "answer": "n, k = list(map(int, input().split()))\nif k > n:\n    print(n)\nelse:\n    print(min(n, k) + 1)"}, "288": {"problem_id": 288, "answer": "n = int(input())\ncnt = 0\nfor i in range(n):\n    if i+1!= n:\n        cnt += 1\nprint(cnt)"}, "289": {"problem_id": 289, "answer": "s = input()\nn = len(s)\nc = 0\nfor i in range(n):\n    if s[i] == \"V\":\n        c += 1\n    elif s[i] == \"K\":\n        c -= 1\nprint(c)"}, "290": {"problem_id": 290, "answer": "import sys\nread = sys.stdin.readline\n\nn = int(read())\n\nans = 0\nfor i in range(1, n+1):\n    if i*i == n:\n        ans += 1\nprint(ans)"}, "291": {"problem_id": 291, "answer": "a,b=map(int,input().split())\nprint(a//2+b//2)"}, "292": {"problem_id": 292, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nl = lambda:list(map(int,input().split()))\nh,n = l()\nl.clear()\nwhile n:\n    l.append(n)\n    n = n[1:]\nprint(len(l))"}, "293": {"problem_id": 293, "answer": "import sys\nread = sys.stdin.readline\nreadline = lambda: sys.stdin.readline().rstrip('\\n')\nINF = float('inf')\nMOD = 10**9+7\n\nns = lambda: list(map(int, read().split()))\nni = lambda: int(readline())\nnm = lambda: list(map(int, read().split()))\nnsn = lambda: list(map(int, read().split()).count(x) for x in ns())\nnn = lambda: list(map(int, read().split()).count(x) for x in nsn())\nnmn = lambda: list(map(int, read().split()).count(x) for x in nm())\n\ndef solve():\n    n, m = ni()\n    print(n + m)\n    print(' '.join(map(str, nm())))\n    print(' '.join(map(str, nmn())))\nsolve()"}, "294": {"problem_id": 294, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] % 4 == 0 and a[i] > 2:\n        s += 1\n    elif a[i] % 400 == 0 and a[i] > 3:\n        s += 1\nprint('Yes' if s == n else 'No')"}, "295": {"problem_id": 295, "answer": "n = int(input())\nans = []\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    ans.append((a, b))\n\nprint(\"YES\" if ans else \"NO\")\nfor i in ans:\n    print(i[1], end=' ')\n    print(i[0])\n"}, "296": {"problem_id": 296, "answer": "import sys\ndef read_line():\n    return sys.stdin.readline().strip()\n\nn = int(read_line())\na, b = list(map(int, read_line().split()))\nh = list(map(int, read_line().split()))\nvisited = [False for i in range(n)]\nans = 0\nfor i in range(n - 1):\n    if visited[i + 1]:\n        continue\n    elif h[i] <= h[i + 1]:\n        ans += min(a, b)\n    else:\n        ans += max(a, b)\n    visited[i + 1] = True\nprint(ans)"}, "297": {"problem_id": 297, "answer": "n,m,k = map(int,input().split())\nif n==m==k:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "298": {"problem_id": 298, "answer": "n, k = list(map(int, input().split()))\ns = n-k\nif s<=0:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n"}, "299": {"problem_id": 299, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i] * (i + 1) // 2\n    a[i] = max(a[i], s)\nprint('biceps')\nprint('back')"}, "300": {"problem_id": 300, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ngrades = list(map(int, input().split()))\n\ngr = 0\nfor i in range(2, 5):\n    if grades[i] > grades[i - 2]:\n        gr += 1\n    else:\n        gr += (grades[i] - grades[i - 2]) / 2\n\nprint(gr)"}, "301": {"problem_id": 301, "answer": "import sys\ninput = sys.stdin.readline\n\nu, v = map(int, input().split())\nif u < v:\n    print(\"-1\")\n    return\n\nans = [0] * (u + v)\nans[0] = 1\nfor i in range(1, u + 1):\n    ans[i] = ans[i - 1] << 1\n    ans[i] |= ans[i - 2] >> 1\n\nprint(\"\".join(map(str, ans)))"}, "302": {"problem_id": 302, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nn = int(input())\nprint(2 + sum(int(d) for d in input().split()))"}, "303": {"problem_id": 303, "answer": "import sys\nreadline = sys.stdin.readline\n\nx, y = list(map(int, readline().split()))\ns = list(map(int, readline().split()))\ns.sort()\nt = 0\nfor i in range(1, 10**5+10):\n    t += abs(x - s[i])\n    t += abs(y - s[i])\nif t <= y:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "304": {"problem_id": 304, "answer": "n = int(input())\nprint(n//2 + n%2)"}, "305": {"problem_id": 305, "answer": "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nf = int(input())\n\ns = 0\nfor i in range(a):\n    s+=i+1\n\nm = min(a,b,c,d,e)\n\nres = s*m + max(0,f-s)\n\nprint(res)"}, "306": {"problem_id": 306, "answer": "a,b,p,x=list(map(int,input().split()))\ns=0\nfor i in range(x):\n    if pow(a,i,p)==i:\n        s+=1\nprint(s)\n"}, "307": {"problem_id": 307, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    k2, k3, k5, k6 = map(int, input().split())\n    print(sum(int(''.join(e)) for e in sorted([e for e in map(int, input().split()) if e < k2] + [k3] + [k6])))\n\nmain()\n"}, "308": {"problem_id": 308, "answer": "n, x, y, c = list(map(int, input().split()))\nb = n * n\nans = 0\nfor i in range(1, n):\n    for j in range(i) :\n        if x + j < n and x + j >= i :\n            b -= (i - x) * (i - x) + (y - i) * (y - i)\n        elif x + j > n and x + j < i :\n            b -= (i - x) * (i - x) + (y - i) * (y - i)\n        else :\n            ans += b\nprint(ans)\n"}, "309": {"problem_id": 309, "answer": "import sys\nread = sys.stdin.readline\nl, r = map(int, read().split())\nif l < r:\n    print(0)\nelse:\n    x = bin(l)[2:]\n    y = bin(r)[2:]\n    ans = 0\n    for i in range(len(x)):\n        ans = max(ans, x[i]^y[i])\n    print(ans)"}, "310": {"problem_id": 310, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\n\ndef main():\n    x = y = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            x += 1\n        y = max(0, y)\n        print(k - x)\n\nmain()\n"}, "311": {"problem_id": 311, "answer": "import sys\ninput = sys.stdin.readline\n\nx, y, z, t1, t2, t3 = map(int, input().split())\nelevator = max(0, min(x - 1, y) - 1)\nstairs = max(0, min(x + 1, y) - 1)\n\nans = \"YES\"\n\nif stairs > elevator:\n    stairs -= 1\n    elevator += 1\n    stairs -= 1\nelif stairs < elevator:\n    stairs += 1\n    elevator -= 1\n    stairs += 1\n\nprint(ans)"}, "312": {"problem_id": 312, "answer": "import sys\nreadline = sys.stdin.readline\nn,m = map(int,readline().split())\na = list(range(1,n+1))\nd = [0]*(n+1)\nfor i in range(1,n+1):\n    d[i] = d[i-1] + i\nans = 0\nfor i in range(1,n+1):\n    if abs(a[i]-m)<=abs(a[i-1]-m):\n        ans += 1\n        a[i] = m\nprint(ans)"}, "313": {"problem_id": 313, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if a[i] == 1:\n        cnt += 2*(i-1)\n    elif a[i] == 0:\n        cnt += 1\nprint(cnt)"}, "314": {"problem_id": 314, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn, k = list(map(int, input().split()))\ncandies = list(map(int, input().split()))\nsaved = 0\nfor i in range(n):\n    if k > 8 * i + 1:\n        print(-1)\n        return\n    saved += candies[i]\n    k -= 8 * i + 1\nprint(saved)"}, "315": {"problem_id": 315, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nb = [0] * 500\nfor i in range(1, 500):\n    b[i] = a[i - 1] + b[i - 2]\n\nprint(min(b))\nprint(' '.join(map(str, b)))"}, "316": {"problem_id": 316, "answer": "n = int(input())\nprint(n * (n + 1) // 2)"}, "317": {"problem_id": 317, "answer": "n = int(input())\ns = input()\nc = 'abcdefghijklmnopqrstuvwxyz'\na = []\nfor i in range(26):\n    a.append(c[i])\na.sort()\nprint('YES' if a[0] in s else 'NO')"}, "318": {"problem_id": 318, "answer": "import sys\n\ndef i2h(s):\n    return int(s.split(':')[1])\n\ndef main():\n    t = sys.stdin.readline()\n    h, m = i2h(t)\n    ans = '%02d:%02d' % (h % 60, m // 60)\n    print(ans)\n\nmain()\n"}, "319": {"problem_id": 319, "answer": "n, m = list(map(int, input().split()))\nL = [0] * (n + 1)\nfor i in range(1, n + 1):\n    L[i] = 1 if i&1 else 0\n    \nfor i in range(m):\n    c = input()\n    if c[0] == '1' and c[1] == '0':\n        L[i] = -1\n    elif c[0] == '0' and c[1] == '1':\n        L[i] = 1\n    else:\n        L[i] = 0\n\nans = 'YES'\nfor i in range(n):\n    if L[i] == 0:\n        ans = ans + 'NO'\nprint(ans)\n"}, "320": {"problem_id": 320, "answer": "n = int(input())\nt = [0]*n\nfor i in range(n):\n    a, b = map(int, input().split())\n    t[i] = a+b%2\nprint(t[n//2])"}, "321": {"problem_id": 321, "answer": "import math\nt=int(input())\nfor _ in range(t):\n\ta,b=map(int,input().split())\n\tif a==1 or b==1:\n\t\tprint(\"YES\")\n\telif a==2 or b==2:\n\t\tprint(\"NO\")\n\telse:\n\t\tc=math.gcd(a,b)\n\t\tif c%2==0:\n\t\t\tprint(\"YES\")\n\t\telif c%2==1:\n\t\t\tprint(\"NO\")\n\t\telse:\n\t\t\tprint(\"NO\")"}, "322": {"problem_id": 322, "answer": "n = int(input())\npoints = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    points.append((x, y))\n\npoints.sort()\n\nif points[0][0]!= points[1][0]:\n    print('No')\n    return\n\nc1 = points[0][1]\nc2 = points[1][1]\n\nfor i in range(2, n):\n    if points[i][1] - c1 < c2:\n        print('No')\n        return\n\nprint('Yes')"}, "323": {"problem_id": 323, "answer": "import math\na,b=list(map(int,input().split()))\nc=math.gcd(a,b)\nprint(c)\n"}, "324": {"problem_id": 324, "answer": "import math\ndef inp():\n    return int(input())\ndef inpl():\n    return list(map(int, input().split()))\nn=inp()\na=[]\nfor i in range(1,n):\n    if i not in a:\n        a.append(i)\nprint(a[0],a[1])"}, "325": {"problem_id": 325, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M, P = map(int, input().split())\nedges = [[] for _ in range(N)]\nfor _ in range(M):\n    a, b, c = map(int, input().split())\n    edges[a-1].append((b-1, c))\n    edges[b-1].append((a-1, c))\n\nt = 0\np = 0\nans = [0]*N\ncurr = [0]*N\nvisited = [False]*N\ndef dfs(v, t):\n    nonlocal p\n    visited[v] = True\n    p = t\n    for e in edges[v]:\n        if visited[e]:\n            continue\n        dfs(e, t+1)\n        curr[v] += curr[e]\n        ans[v] = curr[e]\n\ndfs(1, t)\nprint(ans)"}, "326": {"problem_id": 326, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    S = [input().rstrip() for _ in range(N)]\n    C = [int(input()) for _ in range(N)]\n    dp = [0]*N\n    dp[0] = C[0]\n    for i in range(1, N):\n        dp[i] = min(dp[i-1]*C[i], C[i]) + dp[i-1]\n    print(dp[N])\n\nmain()"}, "327": {"problem_id": 327, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\na = [0]*n\nb = [0]*n\nfor i in range(1, n):\n    a[i] ^= i\n    b[i] ^= i\nans = max(a)\nprint(ans)"}, "328": {"problem_id": 328, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    ans.append((min(x, y), \"\".join(map(str, input().split()))))\nprint(len(ans[0]))"}, "329": {"problem_id": 329, "answer": "s = input()\nc = 0\nfor i in range(len(s)):\n    if s[i] == 19:\n        c += 1\nprint(c)"}, "330": {"problem_id": 330, "answer": "p,y=map(int, input().split())\nif p<=y:\n    ans=p\nelse:\n    ans=y\nl=[]\nfor i in range(1,p+1):\n    l.append(i)\n    if l[i]!=i:\n        break\nprint(ans)"}, "331": {"problem_id": 331, "answer": "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] == 0:\n        s += i + 1\n    elif a[i] == a[i][::-1]:\n        s += i\nprint(s + 10 * k)\n"}, "332": {"problem_id": 332, "answer": ""}, "333": {"problem_id": 333, "answer": "s1 = input()\ns2 = input()\nm = 0\nfor i in range(0,len(s1)):\n    if s1[i] == s2[i]:\n        m = max(m,len(s1[i:]))\nprint(m)"}, "334": {"problem_id": 334, "answer": "a, b = list(map(int, input().split()))\nc, d = list(map(int, input().split()))\na, b, c, d = divmod(a, 2) + divmod(b, 3)\nprint(a == b == c == d)"}, "335": {"problem_id": 335, "answer": "n = int(input())\nans = []\nfor i in range(1, n//3+1):\n    if i*3 % 2 == 0:\n        ans.append(i)\nfor i in ans:\n    print(i, end ='')"}, "336": {"problem_id": 336, "answer": "import sys\ninput = sys.stdin.readline\n\nn, a, b, c, d = map(int, input().split())\n\ndp = [[0] * 4 for _ in range(3)]\ndp[0][0] = a\nfor i in range(1, 4):\n    for j in range(3):\n        if dp[i][j]!= 0:\n            dp[i][j] += dp[i - 1][j]\n            if i!= j:\n                dp[i][j] += dp[i - 1][j]\n            elif a!= dp[i - 1][j]:\n                dp[i][j] += dp[i - 1][j]\n            else:\n                dp[i][j] += dp[i - 1][j]\nprint(dp[-1][-1])"}, "337": {"problem_id": 337, "answer": "import sys\ninput=sys.stdin.readline\nw,h=list(map(int,input().split()))\nu1,d1=list(map(int,input().split()))\nu2,d2=list(map(int,input().split()))\ns1=w\ns2=h\nif d1==d2:\n    print(s1+min(u1,u2)*s2)\nelif d1>d2:\n    print(max(u1,u2)*s1+min(u1,u2)*s2)\nelse:\n    print(max(u1,u2)*s1)"}, "338": {"problem_id": 338, "answer": "m = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\np = [0]*1000001\nfor i in range(m):\n    if x[i]<y[i]:\n        p[i] = 1\n    else:\n        p[i] = 2\nans = []\nfor i in range(len(p)):\n    if p[i]!=0:\n        ans.append(i+1)\nprint(ans[0])"}, "339": {"problem_id": 339, "answer": "n, k, a, b = int(input()), int(input()), int(input()), int(input())\na //= k // pow(2, 9)\nb //= k // pow(2, 9)\nprint(b * (a // 2) - a * max(a-1, 0) // 2)"}, "340": {"problem_id": 340, "answer": "n = int(input())\nprint(mul(n,2),sqrt(n))"}, "341": {"problem_id": 341, "answer": "import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nR, S, P = [0]*N, [0]*N, [0]*N\nT = input().rstrip()\nfor i in range(N):\n  ch = T[i]\n  if ch=='r':\n   R[i] = R[i] + 1\n  elif ch=='p':\n   R[i] = R[i] + 2*S[i]\n  elif ch=='s':\n   R[i] = R[i] + 2*S[i] + P[i]\n  else:\n   R[i] = R[i] + 3*R[i]\nans = max(R)\nprint(ans)"}, "342": {"problem_id": 342, "answer": "a, b, c = list(map(int, input().split()))\ns = []\nfor i in range(min(a, b), max(a, b) + 1):\n    s.append(i)\nprint(max(s))\n"}, "343": {"problem_id": 343, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k, p, x, y = list(map(int, readline().split()))\na = list(map(int, readline().split()))\nm = y.quantize()\nans = [0]*k\nfor i in range(n):\n    if m[a[i]] < x:\n        ans[i] = a[i]\n    elif m[a[i]] > x:\n        ans[i] = max(ans[i-1], a[i])\nprint(\" \".join(map(str, ans)))"}, "344": {"problem_id": 344, "answer": "s=input()\nfor i in range(len(s)):\n    if s[i] in 'aeiou':\n        print('YES')\n   "}, "345": {"problem_id": 345, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b = list(map(int, input().split()))\n    edges[a-1].append(b-1)\n    edges[b-1].append(a-1)\n\ndoubling = [0] * n\nvisited = [0] * n\nans = 0\nfor i in range(n):\n    if visited[i] == 0:\n        visited[i] = 1\n        doubling[i] = 1\n    else:\n        doubling[i] = doubling[visited[i]] + 1\n\ndef dfs(v, in_direction):\n    nonlocal ans\n    visited[v] = in_direction\n    for u in edges[v]:\n        if visited[u] == in_direction:\n            continue\n        dfs(u, in_direction ^ 1)\n    ans += doubling[v]\n\ndfs(0, 0)\nprint(ans)\n"}, "346": {"problem_id": 346, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = [[0] * (m + 1) for _ in range(n + 1)]\nfor i in range(1, n + 1):\n    c[i][1] = a[i]\nfor i in range(2, m + 1):\n    c[b[i - 1]][i] = max(c[b[i - 1]][i - price] + a[i] - b[i - 1], c[b[i - 1]][i - price])\nprint(c[n][m])\n"}, "347": {"problem_id": 347, "answer": "m = list(map(int, input().split()))\nw = list(map(int, input().split()))\nh = list(map(int, input().split()))\nans = 0\nfor i in range(5):\n    ans += (m[i] - m[i - 1]) * 100\n    ans += w[i] * (1 - (m[i] / 250))\n    ans += h[i] * (i + 1)\nprint(ans)\n"}, "348": {"problem_id": 348, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 998244353\n\nn, m, l, r = map(int, readline().split())\ns = [[0] * (r + 1) for _ in range(n + 1)]\nfor i in range(1, n + 1):\n    s[i][0] = i\n    s[i][1] = 1\n\ndp = [[0] * (m + 1) for _ in range(n + 1)]\ndp[0][0] = 1\n\nfor i in range(1, n + 1):\n    for j in range(m + 1):\n        dp[i][j] = s[i][j]\n        if j > 0:\n            dp[i][j] += dp[i - 1][j - 1]\n        if j < m:\n            dp[i][j] += dp[i - 1][j + 1]\n\nprint(dp[n][m])"}, "349": {"problem_id": 349, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nA = [[int(i) for i in input().split()] for _ in range(n)]\nB = [[int(i) for i in input().split()] for _ in range(n)]\n\nans = [0] * n\nfor i in range(n):\n    for j in range(m):\n        ans[i] += A[i][j]\n        ans[i] -= B[i][j]\n\nprint('Possible') if ans[0] > 0 else print('Impossible')\n"}, "350": {"problem_id": 350, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = 1\n    if a[i] not in d:\n        d[a[i]] = 1\n        a[i] = 1\nans = 0\nfor i in sorted(d):\n    ans = max(ans, i)\nprint(ans)"}, "351": {"problem_id": 351, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nd = max(a)\ns = [0] * (10**5+10)\nfor i in range(1, 10**5+10):\n    s[i] = s[i-1] + a[i]\n    if i > d:\n        s[i] = s[i-d]\n    else:\n        s[i] = s[i-d] + a[i]\nsol = 0\nfor i in range(n):\n    if s[i] <= k:\n        sol += 1\n        continue\n    cur = i\n    while cur + 1 + s[cur] <= n:\n        cur += 1\n    sol += cur - i\nprint(sol)"}, "352": {"problem_id": 352, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\na,b,c = map(int,read().split())\nd = map(int,read().split())\nans = [0]*3\nfor i in range(n):\n    ans[a-i] += d[i]\n    if a-i < b:\n        ans[b-i] += d[i]\nprint('\\n'.join(map(str,ans)))"}, "353": {"problem_id": 353, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i]\n    if s > 10:\n        print(\"UP\")\n    elif s < 10:\n        print(\"DOWN\")\n    else:\n        print(-1)"}, "354": {"problem_id": 354, "answer": "import re\ns=input()\nt=input()\nif s.lower()==t.lower():\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "355": {"problem_id": 355, "answer": "from collections import deque\nboard = [list(map(int, input().split())) for _ in range(8)]\npawns = [None] * 8\nwin, cnt = 0, 0\nfor r in range(1, 8):\n    for c in range(8):\n        if board[r][c] == '.':\n            continue\n        pawns[r].append(board[r][c])\n        if pawns[r][c] not in pawns.keys():\n            pawns[r][c] = win\n        else:\n            cnt += 1\n    win += pawns[r][c]\nprint('A' if win else 'B')"}, "356": {"problem_id": 356, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\na = list(map(int, readline().split()))\nb = list(map(int, readline().split()))\n\nif n == 1:\n    print(0)\n    return\n\ncnt = 0\nans = -1\nfor i in range(1, n+1):\n    if a[i]!= b[i]:\n        cnt += 1\n    else:\n        ans = max(ans, i - cnt)\nprint(ans)"}, "357": {"problem_id": 357, "answer": "s = input()\nfor i in set(s):\n    if i.startswith(\"Alex\"):\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "358": {"problem_id": 358, "answer": "import math\na,b,k=list(map(int,input().split()))\nif(a<=b):\n    print(min(b-a+1,math.ceil(math.log(a,2)))+1)\nelse:\n    print(-1)\n"}, "359": {"problem_id": 359, "answer": "a, h, w = list(map(int, input().split()))\ns = a*h + w\nprint(min(0.0, s/(h-1)))\n"}, "360": {"problem_id": 360, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nchapters = []\nfor i in range(n):\n    pages = list(map(int, input().split()))\n    pages.append(int(input()))\n    pages.append(int(input()))\n    pages.append(int(input()))\n    pages.append(int(input()))\n    pages.append(int(input()))\n    pages.sort(reverse=True)\n    pages.reverse()\n    pages.extend(chapters)\nprint(len(set(chapters)))\n"}, "361": {"problem_id": 361, "answer": "import re\ns = input()\nn = len(s)\nfor i in range(n):\n    if s[i]!=s[i+1]:\n        print('NO')\n        return\nprint('YES')"}, "362": {"problem_id": 362, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\n\na = [0]*n\nfor i in range(1,n):\n    a[i] = a[i-1] + i*i\n\nprint(sum(a))"}, "363": {"problem_id": 363, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nread = lambda: int(input())\nn = int(input())\nans = 0\nfor i in range(1, n+1):\n    ans += sum(1 for j in range(10) if i%j==0)\nprint(ans)"}, "364": {"problem_id": 364, "answer": "import sys\ninput = sys.stdin.readline\n\nn, a = map(int, input().split())\narr = list(map(int, input().split()))\n\nif n & 1 == 1:\n    print(-1)\n    return\n\ncnt = [0]*(n+1)\nfor i in range(1, n+1):\n    cnt[i] += arr[i]\n\nans = 10**6\nfor i in range(len(arr) - 1):\n    if cnt[i] > cnt[i + 1]:\n        ans = max(ans, cnt[i] + cnt[i + 1])\n\nif ans > a:\n    print(ans)\n    return\n\nb = ans\nfor i in range(len(arr)):\n    if arr[i] > b:\n        b = arr[i]\n        ans = max(ans, b)\nprint(ans)"}, "365": {"problem_id": 365, "answer": "n, x = map(int, input().split())\na = list(map(int, input().split()))\nif n % 2 == 0:\n    for i in range(n):\n        if a[i]!= x:\n            print(\"NO\")\n            return\nelse:\n    for i in range(n):\n        if a[i]!= x:\n            print(\"NO\")\n            return\n"}, "366": {"problem_id": 366, "answer": "import sys\ninput = sys.stdin.readline\n\nn, s = map(int, input().split())\n\nans = 0\nfor i in range(1, 100):\n    if s + i <= n:\n        ans += i\nprint(ans)"}, "367": {"problem_id": 367, "answer": "s = input()\nm = len(s)\nfor i in range(1, m):\n    if s[i]!= s[m-i-1]:\n        m = i\n    else:\n        break\nprint(s[0] + s[m])"}, "368": {"problem_id": 368, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n \ndef main():\n    board = input().strip()\n    white = board.upper()\n    black = board.lower()\n    \n    ans = 0\n    for i in white:\n        ans += int(i)\n    "}, "369": {"problem_id": 369, "answer": "import heapq\nn, m = list(map(int, input().split()))\ns = list(map(int, input().split()))\nheapq.heapify(s)\na = []\nfor i in range(n):\n    if s[i] == 0:\n        a.append(i)\n    else:\n        a.append(i + 1)\ns.sort()\ndp = [-1] * n\nvisited = [False] * n\nans = []\nfor i in range(n):\n    if visited[i]:\n        continue\n    vis = True\n    for j in range(0, n):\n        if s[j] == 0:\n            vis = False\n            break\n        if dp[j]!= -1:\n            heapq.heappush(dp, i + dp[j])\n            visited[i] = True\n            ans.append(i + 1)\n            dp[j] = -1\n            heapq.heappush(dp, i + dp[j])\n    if vis:\n        ans.append(i + 1)\nprint(' '.join(map(str, ans)))\n"}, "370": {"problem_id": 370, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    K = int(readline())\n    X, Y = list(map(int, readline().split()))\n    mx = abs(X[0]-X[1]) + abs(Y[0]-Y[1])\n    mn = abs(X[0]-X[1]) + abs(Y[1]-Y[0])\n    print((min(mx, mn) + 1) // 2)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "}, "371": {"problem_id": 371, "answer": "from sys import stdin,stdout\nm=int(stdin.readline())\nif m==1:\n    print(1)\nelse:\n    a=4\n    b=2\n    c=m//a\n    d=m//b\n    e=m//c\n    f=m//d\n    g=m//e\n    h=m//f\n    print(min(a,b,c,d,e,f,g,h))"}, "372": {"problem_id": 372, "answer": "import sys\nread = sys.stdin.readline\n\nx1, y1, r1 = map(int, read().split())\nx2, y2, r2 = map(int, read().split())\n\nans = (x2 - x1) * (y2 - y1)\nprint(ans)"}, "373": {"problem_id": 373, "answer": "v = int(input())\nans = 0\nwhile v > 0:\n    ans += v\n    v //= 10\nprint(ans)"}, "374": {"problem_id": 374, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef check(i):\n    if a[i] == i+1:\n        return i == n\n    elif a[i] == i+2:\n        return i == n-1\n    else:\n        return False\n\nans = 0\nfor i in range(1, n):\n    if check(i):\n        ans += 1\nprint(ans)"}, "375": {"problem_id": 375, "answer": "n = int(input())\ns = input()\nt = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i]!= t[i]:\n        count += 1\n\nprint(count)"}, "376": {"problem_id": 376, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\np = [0]*n\nfor i in range(1, n):\n    if p[i] > a[i]:\n        p[i] = a[i] + 1\nans = 1000000000\nfor i in range(n-1):\n    u, v = list(map(int, input().split()))\n    if p[u] < p[v]:\n        ans = min(ans, p[u] - p[v])\nprint(ans)"}, "377": {"problem_id": 377, "answer": "n,m=map(int,input().split())\nif m==0:\n    print(1)\nelse:\n    ans=m\n    for i in range(1,n+1):\n        if i%2==0:\n            ans-=1\n        elif i==n:\n            ans+=1\n        else:\n            ans-=2\n    print(ans)"}, "378": {"problem_id": 378, "answer": "k, r = list(map(int, input().split()))\ns = 0\nfor i in range(1, 10):\n    s += pow(k, i) * r\nprint(s)\n"}, "379": {"problem_id": 379, "answer": "from collections import deque\nn,m=list(map(int,input().split()))\ns=deque()\nfor i in range(n):\n    s.append([i])\ns1=s[0]\ns=[s1]\nwhile len(s)!=0:\n    t=s.popleft()\n    for i in range(len(s1)):\n        if s[i][0]!=t[0]:\n            s.append([t[0],i])\n            s1.append(s[i])\n            if s1[-1][0]!=t[0]:\n                s.append([t[0],i])\n                s1.append(s[i])\n            elif s1[-1][0]==t[0]:\n                s.append([t[0],i])\n                s1.append(s[i])\n            else:\n                s.append([t[0],i])\n                s1.append(s[i])\nprint('YES' if len(s)%2 else 'NO')\n"}, "380": {"problem_id": 380, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nprint2 = stdout.write\ndef main():\n    l1 = sorted((int(x), int(y)) for x, y in input().split())\n    l2 = sorted((int(x), int(y)) for x, y in l1)\n    print(sum(l2) - max(l2) + 1)\n    \nmain()\n"}, "381": {"problem_id": 381, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    if m > 10**6:\n        print(\"NO\")\n        return 0\n    ans = []\n    for i in range(m):\n        a, b = list(map(int, input().split()))\n        ans.append((a, b))\n    d = {}\n    for i in range(n):\n        d[i] = []\n    for i in range(m):\n        a, b = list(map(int, input().split()))\n        d[a].append(b)\n        d[b].append(a)\n    d.clear()\n    v = [0] * n\n    e = [0] * n\n    for i in range(n):\n        v[i] = i\n        e[i] = i\n    for i in range(min(n, m)):\n        a, b = list(map(int, input().split()))\n        if d[a]!= d[b]:\n            v[d[a]].append(e[b] - e[a])\n            e[d[a]].pop()\n        else:\n            v[cumsum(d[a])].append(e[b] - e[a])\n            e[cumsum(d[a])].pop()\n    print(\"YES\")\n    for i in ans:\n        print(i[0] + \" \" + str(i[1]))\nmain()"}, "382": {"problem_id": 382, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, q = map(int, input().split())\nqueries = list(map(int, input().split()))\nstrings = input()\ns = set()\nt = set()\nfor i in range(q):\n    l, r = map(int, input().split())\n    s.add(l)\n    t.add(r)\n    s.add(t)\n    s = sorted(s)\n    t = sorted(t)\n    ans = 0\n    for i in range(len(s)):\n        if s[i] == t[i]:\n            ans += 1\n    print(ans)"}, "383": {"problem_id": 383, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k, d = map(int, input().split())\nsys.setrecursionlimit(10**9+7)\n\np = 10**9+7\n\ndef dfs(vert, d):\n    nonlocal ans\n    ans = (ans+1)%p\n    for i in range(k):\n        vert[i] = d\n        dfs(vert[i+1:], d+1)\n\ndfs(0, 0)\n"}, "384": {"problem_id": 384, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(n):\n    if s[i] == 'B':\n        cnt += 1\nprint(cnt)\nprint(*s)"}, "385": {"problem_id": 385, "answer": "from sys import stdin,stderr\ninput=stdin.readline\nn,m,p=map(int,input().split())\ncbs=input()[:-1]\nbr=cbs.split(')')\nb=[]\nfor i in range(n):\n    b.append(i+1)\n    if b[i]==len(cbs)-1:\n        break\nfor i in range(i+1,n):\n    b.append(i+1)\n    if b[i]==len(cbs)-1:\n        break\nl=0\nr=n-1\nd=0\nfor i in range(n):\n    if b[i]==i+1:\n        l=i+1\n    elif b[i]==i-1:\n        r=i-1\n    else:\n        d=i\n        break\nans=''\nfor i in range(l,r+1):\n    if d<i:\n        ans+=cbs[i]\n        d=i\n    else:\n        ans+=cbs[d]\nprint(ans)"}, "386": {"problem_id": 386, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nanswers = []\nfor i in range(n):\n    s = input().rstrip()\n    if s[0] == '>':\n        answers.append('Y')\n    elif s[0] == \"<\":\n        answers.append('N')\n    elif s[0] == '>=' and s[1] == 'Y':\n        answers.append('Y')\n    elif s[0] == '<' and s[1] == 'Y':\n        answers.append('Y')\n    elif s[0] == '<=' and s[1] == 'Y':\n        answers.append('Y')\n    else:\n        answers.append('N')\n\nprint(''.join(ansers))"}, "387": {"problem_id": 387, "answer": "a, b = map(int, input().split())\nprint(len(set(a + b)))"}, "388": {"problem_id": 388, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\ns = list(map(int, input().split()))\n\ndef f(s):\n    return ''.join(sorted(s, key=lambda x: x[-1]))\n\nans = []\nfor i in range(n - k + 1):\n    ans.append(f(s))\n\nprint(' '.join(ans))"}, "389": {"problem_id": 389, "answer": "a,b=list(map(int,input().split()))\nif a%2==0:\n    print(b//b-1)\nelif a%3==0:\n    print(b//b-2)\nelse:\n    print(b//b-3)\n"}, "390": {"problem_id": 390, "answer": "import sys\ninput = sys.stdin.readline\n\nn, a, b = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\ndancing_suits = []\nfor i in range(n):\n    dancing_suits.append((c[i], i))\n\nsans = 0\nfor i in range(n):\n    if i == 0:\n        dancing_suits[i].pop()\n    else:\n        sans += b\n        dancing_suits[i].append(i)\n\nans = -1\nfor i in range(n):\n    if len(dancing_suits[i])%2!= 0:\n        continue\n    dancing_suits[i].sort(reverse=True)\n    i1 = 0\n    i2 = len(dancing_suits[i])-1\n    while i1 < len(dancing_suits[i]):\n        if dancing_suits[i][i1] == dancing_suits[i][i2]:\n            i1 += 1\n        else:\n            i2 -= 1\n    ans = min(ans, sans*(len(dancing_suits[i])-i2))\nprint(ans)\n"}, "391": {"problem_id": 391, "answer": "k = int(input())\nc = [[0 for i in range(k)] for i in range(2)]\nc[0][0][0] = 1\nc[1][0][0] = 1\nfor i in range(1, k):\n    for j in range(1, k):\n        c[i][j][0] = 0\n        c[i][j][1] = 0\n        c[i][j][2] = 0\n        for m in range(3):\n            if c[i][j][m] == 0:\n                c[i][j][m] = 1\n            elif c[i][j][m] == 1:\n                c[i][j][m] = 0\n            elif c[i][j][m] == 2:\n                c[i][j][m] = 1\n            elif c[i][j][m] == 3:\n                c[i][j][m] = 0\n            elif c[i][j][m] == 1:\n                c[i][j][m] = 0\n            elif c[i][j][m] == 2:\n                c[i][j][m] = 1\n            elif c[i][j][m] == 3:\n                c[i][j][m] = 0\n            elif c[i][j][m] == 1:\n                c[i][j][m] = 0\n            elif c[i][j][m] == 2:\n                c[i][j][m] = 1\n            elif c[i][j][m] == 3:\n                c[i][j][m] = 0\n            elif c[i][j][m] == 1:\n                c[i][j][m] = 0\n            elif c[i][j][m] == 2:\n                c[i][j][m] = 1\n            elif c[i][j][m] == 3:\n                c[i][j][m] = 0\n            elif c[i][j][m] == 1:\n                c[i][j][m] = 0\n            elif c[i][j][m] == 2:\n                c[i][j][m] = 1\n            elif c[i][j][m] == 3:\n                c[i][j][m] = 0\n            elif c[i][j][m] == 1:\n                c[i][j][m] = 0\n            elif c[i][j"}, "392": {"problem_id": 392, "answer": "import math\ndef isPow(n):\n    i = 2\n    while i * i <= n:\n        if n % i == 0:\n            return False\n        i += 1\n    return True\npow = [1]\nfor i in range(2, int(math.sqrt(10)) + 1):\n    if isPow(i):\n        pow.append(i)\nprint(max(pow))"}, "393": {"problem_id": 393, "answer": "n = int(input())\ns = input()\nr = len(s)\nans = \"No\"\nfor i in range(1, n):\n    if s[i] == \"0\":\n        if r == i:\n            ans = \"Yes\"\n            break\n        else:\n            ans = \"No\"\n            break\n"}, "394": {"problem_id": 394, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\n# d = dict()\n# d[0] = a[0]\n# ans = []\n\nfor i in range(1, n + 1):\n    if a[i] not in d:\n        d[a[i]] = i\n    else:\n        ans.append(d[a[i]])\n\nprint(len(ans))\nprint(*ans)\n"}, "395": {"problem_id": 395, "answer": "a = list(map(int, input().split()))\na.sort()\nif a[-1] > a[-2] :\n    print(\"NO\")\nelse:\n    print(\"YES\")\n"}, "396": {"problem_id": 396, "answer": "l, r = map(int, input().split())\nans = 0\nfor i in range(1, r):\n    for j in range(i):\n        if i % 2 == 0 and j % 3 == 0:\n            ans += l\n        elif i % 2 == 1 and j % 3 == 1:\n            ans += l\n"}, "397": {"problem_id": 397, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\ns = 0\nans = 0\nfor i in range(n):\n    s += k\n    if k < s:\n        ans += 1\nprint(ans)"}, "398": {"problem_id": 398, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] > 2*a[i] and a[i]%2 == 0:\n        ans += 1\nprint(ans)\n"}, "399": {"problem_id": 399, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\ncl = lambda x: all(a <= x for a in x)\ninp = lambda: int(input())\nout = lambda st,n: stdout.write(str(n)+' '+inp(cl(stdin.readline())))\n\n\n"}, "400": {"problem_id": 400, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+999999\n\n\ndef solve(a,k):\n    n = a\n    ans = INF\n    for i in range(1,n+1):\n        ans = max(ans,\\\n                  i-floor(i/10) + ceil(i/10) + solve(a,k))\n    return ans\n\n\nn, k = map(int, readline().split())\na = list(map(int, readline().split()))\ns = solve(a,k)\nprint(s)"}, "401": {"problem_id": 401, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nans=[10**i for i in range(10)]\nfor i in range(m):\n    for j in range(n):\n        if a[j]!=b[i]:\n            ans[i] = min(ans[i],ans[j]%10)\nprint(ans[0])\n"}, "402": {"problem_id": 402, "answer": "n,k = map(int,input().split())\nprint(2*(k-1)+n-k)"}, "403": {"problem_id": 403, "answer": ""}, "404": {"problem_id": 404, "answer": "import math\nb = int(input())\nans = 0\nfor i in range(1,10**5+1):\n    ans += math.gcd(b, i)\nprint(ans)"}, "405": {"problem_id": 405, "answer": "n = int(input())\ns = input()\na = 0\nb = 0\nfor i in range(n):\n    if s[i] == '<':\n        a += 1\n    else:\n        b += 1\nprint(max(a,b))"}, "406": {"problem_id": 406, "answer": "n = int(input())\nl = list(map(int, input().split()))\np = [0] * 100001\nfor i in range(1, 100001):\n    p[i] += l[i]\nprint(max(p))\n"}, "407": {"problem_id": 407, "answer": "from operator import itemgetter\nn = int(input())\na = list(map(int, input().split()))\np = [0]*26\nfor i in range(n):\n    p[a[i]] += 1\nres = 0\nfor i in range(26):\n    res += max(p[i], p[i-1])\nprint(res)"}, "408": {"problem_id": 408, "answer": "n,m=list(map(int,input().split()))\nans=0\nif n==m:\n    print(3)\nelif n>m:\n    a=m\n    b=n-m\n    c=2*max(a,b)\n    d=max(a,b)\n    e=max(a,b)\n    f=max(a,b)\n    g=max(a,b)\n    h=max(a,b)\n    i=max(a,b)\n    j=max(a,b)\n    k=max(a,b)\n    l=max(a,b)\n    m=a+b\n    n=a-b\n    ans=3\nelse:\n    a=n\n    b=m\n    c=2*max(a,b)\n    d=max(a,b)\n    e=max(a,b)\n    f=max(a,b)\n    g=max(a,b)\n    h=max(a,b)\n    i=max(a,b)\n    j=max(a,b)\n    k=max(a,b)\n    l=max(a,b)\n    m=a+b\n    n=a-b\n    ans=3\n"}, "409": {"problem_id": 409, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(1,n):\n    if s[i] == 'A' or s[i] == 'B':\n        cnt += 1\n    elif s[i] == 'a' or s[i] == 'b':\n        cnt += 1\nif cnt > 2:\n    print('YES')\nelse:\n    print('NO')"}, "410": {"problem_id": 410, "answer": ""}, "411": {"problem_id": 411, "answer": "import collections\nr,b=map(int,input().split())\nc=collections.defaultdict(list)\nfor i in range(r):\n    x,y=map(int,input().split())\n    c[x].append(y)\n    c[y].append(x)\nans=False\nfor i in c:\n    if ans==True:\n        ans=False\n        print('Yes')\n    else:\n        print('No')\n"}, "412": {"problem_id": 412, "answer": ""}, "413": {"problem_id": 413, "answer": "n, m = map(int, input().split())\na = m + 2 * n\nb = n - 1\nprint(min(a, b))"}, "414": {"problem_id": 414, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nsegments = [list(map(int, input().split())) for i in range(n)]\nsizes = [0] * n\nfor i in range(n):\n    sizes[i] = segments[i][1]\n    seg = segments[i][0]\n    seg_size = sizes[seg]\n    if seg_size > sizes[i]:\n        seg_size = sizes[i]\n    sizes[i] = seg_size\ng = defaultdict(list)\nfor i in range(n):\n    g[segments[i][0]].append(i)\nvisited = set()\nans = [False] * n\ndef dfs(v, parent):\n    visited.add(v)\n    for nv in g[v]:\n        if nv not in visited:\n            dfs(nv, parent)\ndfs(1, 0)\nprint(\"YES\" if all([isTree(g) for g in g]) else \"NO\")"}, "415": {"problem_id": 415, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort\nn = int(input())\nr = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += r[i]\n    if s > 100 * n:\n        br(bl(0, r), s)\n    elif s > br(bl(0, r), 100 * n):\n        insort(r, s)\nprint(len(r))\n"}, "416": {"problem_id": 416, "answer": "n,k=list(map(int,input().split()))\ns=input()\na=s.split()\nif a[0]==\"Y\":\n    k-=1\nelif a[0]==\"N\":\n    k-=1\nelse:\n    k-=1\nprint(\"YES\") if k==0 else print(\"NO\")"}, "417": {"problem_id": 417, "answer": "from collections import deque\nN,X,D = list(map(int, input().split()))\ns = 0\nfor i in range(N):\n    s += deque()\n    s.append(X)\nans = sum(map(lambda x: abs(x-s), deque(s)))\nprint(ans)"}, "418": {"problem_id": 418, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nh = [0] * 1001\nfor i in range(n):\n    h[int(input(), 2)] = list(map(int, input().split()))\n\nans = 'NO'\nfor i in h:\n    if i[0]!= 0:\n        if i[1] > i[0]:\n            ans = 'YES'\n        elif i[1] < i[0] and i[0] > i[1]:\n            ans = 'NO'\n"}, "419": {"problem_id": 419, "answer": "s = int(input())\nt = s & 0xffff\nfor i in range(t):\n    s >>= 16\n    s += i & 0xffff\nprint(s)"}, "420": {"problem_id": 420, "answer": "from sys import stdin,stdout\nfrom collections import defaultdict,deque\ninput = stdin.readline\nn,m = list(map(int,input().split()))\na = []\nfor i in range(n):\n    a.append(list(map(int,input().split())))\nd = defaultdict(list)\nfor i in range(n):\n    d[a[i][1]].append(i)\nans = 0\nfor i in range(1,n+1):\n    for j in range(i,n+1):\n        if i not in d.keys():\n            d[i] = [j]\n        else:\n            d[i].append(j)\n        ans += abs(len(d[i]))\nprint(ans)"}, "421": {"problem_id": 421, "answer": "n = int(input())\nl = [int(x) for x in input().split()]\nres = 0\nfor i in range(n):\n    start = l[i]\n    end = l[i+1]\n    if start < end:\n        res = max(res, i+1-start)\nprint(res)"}, "422": {"problem_id": 422, "answer": "from sys import stdin\ninput = stdin.readline\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nres = [0]*n\nfor i in range(n):\n    res[i] = a[i] + b[i]\nv = 0\nfor i in range(1, n+1):\n    if res[i] > k:\n        v += 1\n    else:\n        v = 0\n        for j in range(i):\n            res[j] -= k\n            v += 1\n            if res[j] == 0:\n                break\nprint('YES' if v else 'NO')"}, "423": {"problem_id": 423, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n, k = map(int, readline().split())\n    if k == 0:\n        print('Yes')\n        return\n    dp = [0]*(n+1)\n    for i in range(1, n+1):\n        dp[i] = max(dp[i-1], dp[i-k]*i)\n    print(dp[n] % k)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "424": {"problem_id": 424, "answer": "import math\ndef is_prime(n):\n    if n<2:\n        return False\n    elif n==2:\n        return True\n    else:\n        i = 3\n        while i*i<=n:\n            if n%i==0:\n                return False\n            i+=2\n        return True\nx=int(input())\nprint(2**x)"}, "425": {"problem_id": 425, "answer": "import sys\ninput = sys.stdin.readline\n\nn, p = map(int, input().split())\nres = n\nans = 0\nfor i in range(1, 10**5+10):\n    if p == 0:\n        ans += pow(2, i)\n    elif i&1:\n        ans += pow(2, i-1)\n    else:\n        ans += pow(2, i-2)\nprint(ans)"}, "426": {"problem_id": 426, "answer": "import sys\nreadline = sys.stdin.readline\nn, k = list(map(int, readline().split()))\ns = list(map(int, readline().strip().split()))\nd = [0]*(n+1)\nfor i in range(n):\n    d[i+1] = s[i] - '0'\nans = min(k, len(s)-n)\nfor i in range(1, n+1):\n    if s[i] > d[i]:\n        ans = min(ans, s[i] - d[i])\nprint(ans)"}, "427": {"problem_id": 427, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef prime_factors(n):\n    if n < 2:\n        return []\n    factors = []\n    for x in range(2, int(n ** 0.5) + 1):\n        if n % x == 0:\n            factors.append(x)\n            while n % x == 0:\n                n //= x\n    if n > 2:\n        factors.append(n)\n    return factors\n\n\ncnt1, cnt2, x, y = list(map(int, readline().split()))\nprimes = prime_factors(max(x, y) + 2)\n\nsieve = [False] * (prime_factors(prime_factors(max(x, y) + 2) - 1))\nsieve[0] = True\n\npresent = [0] * (prime_factors(prime_factors(10) - 1) + 1)\nfor i in range(prime_factors(prime_factors(10) - 1) + 1):\n    if sieve[i]:\n        continue\n    for j in range(i, prime_factors(prime_factors(10) - 1) + 1):\n        if i!= j:\n            present[i] += 1\nprint(sum(present))"}, "428": {"problem_id": 428, "answer": "import sys\ninput = sys.stdin.readline\n\nn, sx, sy, dx, dy, t = list(map(int, input().split()))\nr = [0] * n\nfor i in range(n):\n    r[i] = int(input())\n\nans = []\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            ans.append((r[i] + r[j]), i, j)\n\nprint(*ans, sep='\\n')\n"}, "429": {"problem_id": 429, "answer": "s = input()\nn = len(s)\nans = '?' * (26 - n)\nfor i in range(n):\n    if s[i] == '?':\n        ans += '?' * (26 - i)\n    else:\n        ans += s[i]\nprint(ans)"}, "430": {"problem_id": 430, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = sum(a)\nif b == 200:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "431": {"problem_id": 431, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\nA = [0]*n\nB = [0]*m\nfor i in range(n):\n    A[i] = readline()\n    B[i] = readline()\n\nans = sum(A[i]==B[i] for i in range(m+1))\nprint(ans)\n"}, "432": {"problem_id": 432, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\narr = list(map(int, input().split()))\nd = dict()\nfor i in range(1, n):\n    d[arr[i]-1] = d.get(arr[i]-1, 0) + arr[i]\nans = 0\nfor i in range(n):\n    ans += min(d[i], arr[i])\nprint(ans)\n"}, "433": {"problem_id": 433, "answer": "n, a, b = list(map(int, input().split()))\ns = 0\np = n + 1\nq = n + 1\nc = [0] * 100000001\nfor i in range(1, n):\n    c[i] = c[i - 1] + a\n    if b > 0:\n        p = min(p, i + b)\n    else:\n        q = min(q, i + b)\nprint(c[s])\n"}, "434": {"problem_id": 434, "answer": "n = int(input())\na = list(map(int, input().split()))\np = 0\ncnt = 0\nm = -1\nfor i in range(n):\n    if a[i] == -1:\n        p += 1\n        cnt += 1\n        m = i\n    elif a[i] < m:\n        p += 1\n        cnt += 1\n        m = i\n"}, "435": {"problem_id": 435, "answer": "n, k = list(map(int, input().split()))\ns = input()\na = [0] * 26\nfor i in range(1, n):\n    a[i] = max(a[i - 1], s[i: i + k])\nprint(a[n - 1])\n"}, "436": {"problem_id": 436, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort\nfrom collections import deque\nimport sys\ninput = sys.stdin.readline\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    l = len(a)\n    ans = [0] * l\n    que = deque()\n    que.append(1)\n    while que:\n        p = que.popleft()\n        for i in range(l):\n            if a[i] > p:\n                break\n        else:\n            ans[l-1] += 1\n            insort(que, p)\n    print(ans[l//2])\n    print(*ans, sep='\\n')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "437": {"problem_id": 437, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nopponents = [int(x) for x in readline().split()]\nm = 1e10\nans = 0\nfor i in range(1, len(opponents) + 1):\n    m *= opponents[i]\n    ans += m\nprint(ans)"}, "438": {"problem_id": 438, "answer": "n = int(input())\ns = 0\nfor i in range(1, n + 1):\n    if i % 10 == 0:\n        s += 1\n    elif i % 5 == 0:\n        s += 1\nprint(s)\nfor i in range(2, n + 1):\n    if i % 10 == 0:\n        print(i)\n        print(1, end ='')\n    elif i % 5 == 0:\n        print(i)\n        print(1, end ='')"}, "439": {"problem_id": 439, "answer": "n, m = map(int, input().split())\nprint(2 * m % n)"}, "440": {"problem_id": 440, "answer": "n = int(input())\ns = input()\nvowels = ['a','e','i','o','u','y']\ncorrect = ['w','o','e','i','a','u','d','r','p','n','m','l','t','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r','p','s','d','f','t','d','g','h','j','k','q','v','w','r"}, "441": {"problem_id": 441, "answer": "import sys\ninput = sys.stdin.readline\n\nn,a,b=list(map(int,input().split()))\ns=input().rstrip()\na+=n//2\nb+=n//2\nprint(max(a,b))\n"}, "442": {"problem_id": 442, "answer": "import sys\ninput = sys.stdin.readline\n\nR = lambda x: int(x) - 1\n\nn = int(input())\n\na = [0] * (n + 1)\nfor i in range(1, n + 1):\n    a[i] = a[i - 1] + i\n\np = [0] * (n + 1)\nfor i in range(n):\n    p[i] = p[i - 1] + i\n\nans = []\nfor i in range(n):\n    if a[i] == 0:\n        ans.append(i)\n    elif a[i] & 1:\n        ans.append(p[i] + i)\n    else:\n        ans.append(p[i] + min(ans[-1], ans[-2]))\n\nprint(' '.join(map(str, ans)))"}, "443": {"problem_id": 443, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nd = {}\nfor i in range(n):\n    if a[i] not in d:\n        d[a[i]] = i\n    else:\n        cnt += 1\n        d[a[i]] = i\nprint(cnt)"}, "444": {"problem_id": 444, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\ndigits = [0] * 10\nfor i in range(10):\n    digits[i] += 1\n\nprint(len(digits))\nprint(*sorted(list(set(digits))), sep ='')"}, "445": {"problem_id": 445, "answer": "from math import sqrt\nn = int(input())\na = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(1, n + 1):\n    s[i] = s[i - 1] + a[i]\nans = []\nfor i in range(n):\n    t = s[i]\n    ans.append(t)\nm = 0\nb = [0] * (n + 1)\nfor i in range(n):\n    t = s[i]\n    b[i] = t\n    m = max(m, b[i])\nprint(m)\nprint(' '.join(map(str, b)))"}, "446": {"problem_id": 446, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\ndp=[[0]*(10) for i in range(1,10)]\ndp[0][0]=1\nfor i in range(1,10):\n    for j in range(10):\n        if i%2==0:\n            dp[i][j]=(2*dp[i-1][j])\n        else:\n            dp[i][j]=(2*dp[i-1][j]+dp[i-2][j-1])\nprint(max(dp[n]))"}, "447": {"problem_id": 447, "answer": "MOD = 10**9 + 7\n\nm, d = list(map(int, input().split()))\na, b = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(1, 10):\n    if i & 1:\n        ans += (m % i) * (d // i)\n    else:\n        ans += (m // i) * (d % i)\n\nprint(ans % MOD)\n"}, "448": {"problem_id": 448, "answer": "import sys\ndef get_array(): return list(map(int, input().split()))\ndef get_ints(): return input()\nn, m = get_ints()\na = get_array()\ncnt = 0\nfor i in range(n):\n    if a[i] > m:\n        cnt += 1\n    else:\n        break\nprint(cnt)"}, "449": {"problem_id": 449, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nprint(n // 2 + sum(map(int, readline().split())))"}, "450": {"problem_id": 450, "answer": "import sys\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef MI():\n\treturn map(int, sys.stdin.readline().split())\n\ndef SI():\n\treturn sys.stdin.readline().strip()\n\nn, k = MI()\nMOD = 10**9 + 7\ng = pow(2, n-k)\nfor i in range(k):\n\tg = (g%MOD)*pow(2, i+1)%MOD\nprint(g)"}, "451": {"problem_id": 451, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint = stdout.write\nn, k = map(int, input().split())\nb = list(map(int, input().split()))\nc = input()\nu = ''.join(input().split())\nprint(sum(min(k, b[i] - b[i - 1] for i in range(n)) for _ in range(n)))"}, "452": {"problem_id": 452, "answer": "import math\ndef inp():\n    return int(input())\ndef inpl():\n    return list(map(int, input().split()))\ndef main():\n    n = inp()\n    a = inpl()\n    f = [a[i] for i in range(n)]\n    f.sort()\n    if f[0] == f[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nmain()"}, "453": {"problem_id": 453, "answer": "from collections import deque\n\nstk = []\nfor i in range(1,101):\n    stk.append([i,i])\n\ndef dfs(s,e):\n    nonlocal res\n    if s == e:\n        return\n    elif s[0] == e[0]:\n        res.append(s[1:])\n    else:\n        dfs(s[1:],e[1:])\n        stk.append([s[0],e[0]])\n\nres = []\nfor i in range(len(stk)):\n    print((\"Impossible\" if dfs(stk[i][0],stk[i][1]) else \"\".join(map(str,dfs(stk[i][0],stk[i][1]))))[-1])\n"}, "454": {"problem_id": 454, "answer": "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\nmod = 10**9+7\nn,k = MI()\nif n==1:\n    print(1)\n    return\nelif n==2:\n    print(2)\n    return\nn,k = MI()\nl = n//2\nfor i in range(1,l+1):\n    if i*i!=n:\n        a = pow(2,i-1)\n        b = pow(2,i)\n        c = a%mod\n        d = b%mod\n        if c==0:\n            print(k+1)\n            return\n        elif d==0:\n            print(k+1)\n            return\n        else:\n            print(k+1)\n            return\nans = 0\nfor i in range(1,n+1):\n    ans+=pow(2,i-1)\nprint(ans)"}, "455": {"problem_id": 455, "answer": ""}, "456": {"problem_id": 456, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip()\n\nres = []\nfor i in range(n):\n    if s[i] == 'g':\n        res.append('*')\n    elif s[i] == 'o':\n        res.append('**')\n    else:\n        res.append(s[i])\nprint(''.join(res))"}, "457": {"problem_id": 457, "answer": "import sys\ninput = sys.stdin.readline\n\nx, n = map(int, input().split())\ns = 0\nfor i in range(1, n+1):\n    s += (x*i)\n    x = i\nprint(s%(10**9 + 7))"}, "458": {"problem_id": 458, "answer": "import math\na, b, c = list(map(int, input().split()))\ns = str(x)\nd = math.sqrt(b ** 2 + c)\nres = 0\nfor i in range(10**9):\n    if s[i] < d:\n        res += i\n        break\nprint(res)\n"}, "459": {"problem_id": 459, "answer": "import sys\ninput = sys.stdin.readline\n\nS = [[0 for i in range(7)] for j in range(7)]\nA = [0 for i in range(7)]\nfor i in range(1,7):\n    S[i][i] = 1\n    A[i] = 1\n\nans = []\nfor i in range(7):\n    ans.append(0)\n    for j in range(7):\n        if S[i][j] == 0:\n            ans[j] = 1\n        elif A[j] == 0:\n            ans[j] = 1\n        else:\n            ans[j] = 0\n\nprint('YES' if ans[0] == 1 else 'NO')"}, "460": {"problem_id": 460, "answer": "import sys\ninput=sys.stdin.readline\np,x,y=list(map(int,input().split()))\nwin=0\nwinx=0\nwiny=0\nfor i in range(0,25):\n    if (p*50)%475==i%50:\n        win+=1\n        break\n    elif (p*50)%475==(i-1)*50:\n        win+=1\n        break\n    elif (p*50)%475==(i+1)*50:\n        win+=1\n        break\n    else:\n        print(win)\n        winx+=1\n        winy+=1\n"}, "461": {"problem_id": 461, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = int(input())\nb = int(input())\nc = int(input())\n\nsys.setrecursionlimit(200000)\n\nd = [0]*101\nfor i in range(1,101):\n    d[i] = i*(i-1)//2\n\nans = 0\nm = 0\nfor i in range(n):\n    if d[a] + d[b] + d[c] < i:\n        ans += i\n        m = max(m,i)\nprint(ans)"}, "462": {"problem_id": 462, "answer": "import sys\nreadline = sys.stdin.readline\n\nx = list(map(int, readline().split()))\n\ny = [x[0]]\nfor i in range(1, 3):\n    y.append(tuple(x[i] - x[i - 1]))\n\nprint(min(y[1], y[2], y[3]))"}, "463": {"problem_id": 463, "answer": "import sys\ninput = sys.stdin.readline\n\nn, x = map(int, input().split())\na = list(map(int, input().split()))\nd = [0]*n\nfor i in range(n):\n    if a[i] == i:\n        d[i] = 1\n\ncnt = 0\nres = n\nfor i in range(n):\n    if d[a[i]] == 1:\n        cnt += x\n        res -= 2\n        continue\n    else:\n        res += x\n        cnt += 1\nprint(min(res, cnt))"}, "464": {"problem_id": 464, "answer": "h,w=list(map(int,input().split()))\nans=[]\nfor i in range(h):\n    s=input()\n    ans.append(s)\nif \"+\" in ans:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"}, "465": {"problem_id": 465, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 2**63-1\n\n\ndef main():\n    n, a, b = map(int, readline().split())\n    g = [[0] * n for _ in range(n)]\n    for i in range(n):\n        g[i][i] = 1\n    c = [i for i in range(n)]\n    c[0] = n-1\n    for i in range(1, n):\n        for j in range(n):\n            if g[i][j] == 1:\n                c[j] = c[i] + 1\n                g[i][j] = 0\n    print('YES')\n    for i in range(n):\n        print(''.join(map(str, c[i])))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "466": {"problem_id": 466, "answer": "c, d = list(map(int, input().split()))\nn, m = list(map(int, input().split()))\nk = int(input())\ns = 0\nfor i in range(k):\n    d -= 1\n    if d < 0:\n        d += k\n        s += n * m\nprint(s)\n"}, "467": {"problem_id": 467, "answer": "s = input()\nn = 27\na = [\"\"] * n\nfor i in range(n):\n    a[i] += s[i]\np = []\nfor i in range(n):\n    p.append(a[i])\n    for j in range(i):\n        a[i] += \"\".join(p[j].upper() + p[j].lower())\nprint(\"\".join(a))"}, "468": {"problem_id": 468, "answer": "import sys\ninput = sys.stdin.readline\n\nx, y = map(int, input().split())\n\nif x < y:\n    print('<')\nelse:\n    print('=' * (y - x))"}, "469": {"problem_id": 469, "answer": "r, h = list(map(int, input().split()))\nprint(2 + min(r**2, h + r**.5))\n"}, "470": {"problem_id": 470, "answer": "t = list(map(int, input().split()))\nprint(sum(t[:4]))"}, "471": {"problem_id": 471, "answer": "from collections import deque\nn, a = [int(i) for i in input().split()]\nx = deque([i for i in input().split()])\ns = 0\nwhile x:\n    s += x.popleft()[0]\n    x.append(x.popleft()[1])\nprint(s + n - 1)"}, "472": {"problem_id": 472, "answer": "import sys\ninput = sys.stdin.readline\nN = 100000\ns = [0] * N\nfor i in range(1, N):\n    s[i] = int(i ** 0.5)\n    if s[i] == 0:\n        print(-1)\n        return\n    for j in range(i + 1):\n        if s[i] == 0 and s[j] == 0:\n            break\n        s[j] = s[i] + j\n        if s[j] == 0:\n            print(-1)\n            return\n    print(i)"}, "473": {"problem_id": 473, "answer": "s, t = list(map(int, input().split()))\np = s + t*60\nprint(p)\n"}, "474": {"problem_id": 474, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n - 1)\nfor i in range(1, n):\n    if a[i] / i > a[i - 1] / i:\n        a[i] = a[i - 1]\n    elif a[i] / i == a[i - 1] / i:\n        a[i] = a[i - 1]\nprint(a[-1])"}, "475": {"problem_id": 475, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 1000000007\nfac = [1]\nfac[0] = fac[1] = 0\nfor i in range(2, MOD):\n    fac[i] = fac[i-1] * i % MOD\nprint(fac[k-1])"}, "476": {"problem_id": 476, "answer": "n = int(input())\nprint('YES' if n==1444*n else 'NO')"}, "477": {"problem_id": 477, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m, i, j, a, b = list(map(int, readline().split()))\n\nchesscob = [[0] * m for _ in range(n)]\nchesscob[i][j] = 1\nfor i in range(1, n):\n    for j in range(m):\n        if chesscob[i - 1][j] == 0:\n            chesscob[i][j] = 1\n        elif chesscob[i - 1][j] == chesscob[i][j - 1] == 0:\n            chesscob[i][j] = chesscob[i - 1][j] + 1\n        else:\n            chesscob[i][j] = chesscob[i].pop() + 1\n\nprint(min(a, b))"}, "478": {"problem_id": 478, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip()\n\nans = 0\nfor i in range(n):\n    if s[i]!=s[i-1] and s[i]!=s[i+1]:\n        ans+=1\nprint(ans)"}, "479": {"problem_id": 479, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nq = int(input())\nt = [0]*(10**7+1)\nfor i in range(q):\n    x = list(map(int, input().split()))\n    t.append(x[2])\n    \nfor i in range(1, 10**7+1):\n    if t[i] == 0:\n        print(-1)\n        break\n"}, "480": {"problem_id": 480, "answer": "s, x1, x2 = list(map(int, input().split()))\nt1, t2 = list(map(int, input().split()))\np, d = list(map(int, input().split()))\n\ndef go(x):\n    if x == 0:\n        return 0\n    elif x == s:\n        return t2 + abs(p[0] - x1)\n    else:\n        return go(x) + abs(t2 - t1)\n\nans = 0\nfor i in range(1, s):\n    ans = min(ans, go(x1) + go(x2))\nprint(ans)\n"}, "481": {"problem_id": 481, "answer": "n, x = list(map(int, input().split()))\nans = 0\nfor i in range(1, n+1):\n    for j in range(1, n+1):\n        if i!=j:\n            ans += n*(n+1)//2\n            break\nprint(ans)\n"}, "482": {"problem_id": 482, "answer": "n, k = map(int, input().split())\ns = \"\"\nfor i in range(26):\n    s += chr(ord(\"a\") + i)\nfor i in range(n):\n    if k & (1 << i):\n        s += \"\".join(sorted(set(s[:i]) - set(s[i + 1:])))\nprint(s)"}, "483": {"problem_id": 483, "answer": "n = int(input())\nx = list(map(int, input().split()))\ny = [0]*n\nfor i in range(n):\n    y[i] = x[i] + y[i-1]\nans = 0\nfor i in range(n):\n    if y[i] == y[i+1]:\n        ans += 1\nprint(ans)"}, "484": {"problem_id": 484, "answer": "from collections import deque\nn, a, b = [int(i) for i in input().split()]\nseals = [tuple(map(int, input().split())) for _ in range(n)]\nseals.sort()\nd = deque()\ncnt = 0\nfor i in range(n):\n    d.append(seals[i][0]**2 + seals[i][1]**2)\n    if d[0] > cnt:\n        cnt = d[0]\n        ans = max(ans, cnt*(cnt-1)//2)\n    else:\n        ans = max(ans, cnt*(cnt-1)//2)\n    d.pop()\nprint(ans)"}, "485": {"problem_id": 485, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9 + 7\n\nn = int(readline())\npoints = []\nfor _ in range(n):\n    x, y = list(map(int, readline().split()))\n    points.append((x, y))\n\ndef solve(x, y):\n    nonlocal d\n    if x == y:\n        return 0\n    d[x][y] = 1\n    return d[x][y]\n\np = [[0] * (4 + 2) for _ in range(n + 1)]\nfor i in range(1, n + 1):\n    for j in range(4 + 2):\n        p[i][j] = solve(i, j)\n\nprint(*p, sep='\\n')\n"}, "486": {"problem_id": 486, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**9+7\nn = int(readline())\nans = []\nfor i in range(1,n+1):\n    ans.append(str(i*i))\nprint(''.join(ans))"}, "487": {"problem_id": 487, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in a:\n    ans += i\n    if i > 0:\n        ans += a[i - 1]\n\nprint(ans)"}, "488": {"problem_id": 488, "answer": "s = input()\nc = 0\nans = 0\nfor i in range(len(s)):\n    if s[i] == \"a\":\n        c += 1\n    elif s[i] == \"b\":\n        c -= 1\n    else:\n        ans += c\n        c = 0\nprint(ans)"}, "489": {"problem_id": 489, "answer": "import itertools as it\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nd = {i:0 for i in range(n)}\ncnt = [0]*n\nfor i in range(n):\n    for j in range(i+1,n):\n        cnt[i] += cnt[j]\n        cnt[j] += cnt[i]\nprint(cnt.count(min(cnt))//2)"}, "490": {"problem_id": 490, "answer": "n = int(input())\nans = 0\nfor i in range(1, n+1):\n    if i % 2 == 0:\n        ans += 1\nprint(ans)"}, "491": {"problem_id": 491, "answer": "n = int(input())\nif n<0:\n    print(n)\nelse:\n    n = n-1\n    m = 0\n    for i in range(1,10):\n        m = max(m,n%10)\n        n = n//10\n    print(m)"}, "492": {"problem_id": 492, "answer": "s,d = input(),input()\na = s.count(\"^\")\nb = s.count(\">\")\nc = s.count(\"<\")\nprint((\"cw\",c>0),(\"ccw\",c<0),\"undefined\")"}, "493": {"problem_id": 493, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\ns = list(map(str,readline().split()))\ns.sort()\ncnt = 0\nfor i in range(n):\n    if s[i] == \"L\":\n        cnt += 1\n    elif s[i] == \"R\":\n        cnt -= 1\nprint(cnt)"}, "494": {"problem_id": 494, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nt = list(map(int, input().split()))\n\nans = []\nfor i in range(1, n + 1):\n    ans.append(t[i - 1] + 1)\n\nflag = True\nfor i in range(m):\n    if ans[i] == n:\n        flag = False\n        break\n\nif flag:\n    print(-1)\nelse:\n    print(ans[-1])"}, "495": {"problem_id": 495, "answer": "a, k = list(map(int, input().split()))\nn = 0\nwhile k:\n    n += a%10\n    a //= 10\n\nprint(n)\n"}, "496": {"problem_id": 496, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint2=stdout.write\ndef solve(s):\n    if s==int(s):\n        return 42\n    elif s[0]==0 or s[-1]==0:\n        return 42\n    else:\n        a=s[0]\n        b=s[-1]\n        c=abs(a-b)\n        if c==0:\n            return int(s)\n        else:\n            return solve(s[1:])\n        "}, "497": {"problem_id": 497, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n-2):\n    if a[i]!= a[i+1] and a[i]!=a[i+2]:\n        ans[i] = max(ans[i], a[i] - a[i+2])\nprint(ans[n-1])"}, "498": {"problem_id": 498, "answer": "n, m, k = list(map(int, input().split()))\ns = \"\"\nfor i in range(1, n+1):\n    if i % 2 == 0:\n        s += \"L\"\n    else:\n        s += \"R\"\nprint(2*n + 2*m + 2)\nprint(s[0] if s[1] == \"L\" else s[1] == \"R\")\n"}, "499": {"problem_id": 499, "answer": "n = int(input())\ns = input()\nm = n//2\nr = 'B'*m + 'BR'*(m-1) + 'GB'*(m-2) + 'GR'*(m-3)\nprint(r[:m])"}, "500": {"problem_id": 500, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nedges = []\nfor i in range(n-1):\n    u, v = map(int, input().split())\n    edges.append((u, v, i))\n\nedges.sort()\n\nx = [0]*n\ny = [0]*n\nfor edge in edges:\n    x[edge[0]] = edge[1]\n    y[edge[1]] = edge[0]\n\nprint(\"YES\")\nfor i in range(n-1):\n    if abs(x[i] - y[i]) > 1e-9:\n        continue\n    d = abs(x[i] - y[i])\n    if d > n-1:\n        print(\"NO\")\n    else:\n        print(\"YES\")"}, "501": {"problem_id": 501, "answer": "import sys\ninput = sys.stdin.readline\nM = 10**9+7\nMOD = 10**9+7\nfac = [0]*(10**6+1)\nfac[0] = 1\nfor i in range(1,10**6+1):\n    fac[i] = fac[i-1]*i\n    fac[i] = fac[i]%MOD\nn = int(input())\nans = fac[n-1]\nprint(ans)"}, "502": {"problem_id": 502, "answer": "a = input().split(' ')\na = [int(x) for x in a]\na.sort()\nb = a[0]\nc = a[1]\nd = a[2]\ne = a[3]\nf = a[4]\ng = a[5]\nh = a[6]\nprint('Yes' if h == h else 'No')"}, "503": {"problem_id": 503, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn,k=map(int,input().split())\na=list(map(int,input().split()))\nc=0\nfor i in a:\n    c+=i//k\nprint(c)"}, "504": {"problem_id": 504, "answer": "import bisect\nn, a, b = list(map(int, input().split()))\ncreatures = []\nspells = []\ndamage = [0]*n\nfor i in range(n):\n    creatures.append(list(map(int, input().split())))\n    spells.append(list(map(int, input().split())))\n\ndoubles = []\nfor i in range(n):\n    doubles.append(max(creatures[i]))\n\npow2 = [0]*n\nfor i in range(n):\n    pow2[i+1] = pow2[i]//2\n\nfor i in range(n):\n    damage[i] = damage[i] + doubles[i]\n\nans = 0\nfor i in range(n):\n    if damage[i] > pow2[i]:\n        ans = max(ans, damage[i] - pow2[i])\n\nprint(ans)\n"}, "505": {"problem_id": 505, "answer": "import sys\nreadline = sys.stdin.readline\nn,m,k = list(map(int,readline().split()))\ns = [0]*n\ns[0] = 1\nfor i in range(1,n):\n    s[i] = s[i-1] + 1\n    \ndef solve():\n    x = ord(s[k]) - 96\n    if x > n-k:\n        return False\n    d = ord(s[k]) - x + 1\n    if d > n-k:\n        return False\n    for i in range(k):\n        if s[i] == '*':\n            s[i] = chr(x+97)\n        elif s[i] == 'X':\n            break\n    if s[k] == '*':\n        return False\n    return True\nans = solve()\nprint(ans)"}, "506": {"problem_id": 506, "answer": "a, b = map(int, input().split())\nprint(2 + sum(a - b * (b // a) **.5 for a in range(1, 11) if a!= b))"}, "507": {"problem_id": 507, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ns = set(a)\nt = set(b)\nans = []\nfor i in range(n):\n    if s.intersection(t):\n        ans.append(i+1)\nprint(*ans)"}, "508": {"problem_id": 508, "answer": "import math\nimport bisect\nINF = float('inf')\nMOD = 10**9 + 7\ninput = lambda: list(map(int, input().split()))\nn, a = INF, 0\nd = [[] for _ in range(n)]\nfor i in range(1, n+1):\n    d[i].append(i)\nans = []\nfor i in range(n):\n    x = bisect.bisect_left(d[i], a)\n    ans.append(x)\n    a = x\nprint(*ans, sep='\\n')\n"}, "509": {"problem_id": 509, "answer": "n = int(input())\nans = []\nfor i in range(n):\n    a = int(input())\n    if a % 2 == 0:\n        ans.append('NO')\n    else:\n        ans.append('YES')\nprint('\\n'.join(ans))"}, "510": {"problem_id": 510, "answer": "a,b,c,d=list(map(int,input().split()))\ns=0\nwhile 1:\n    if d>0:\n        d-=1\n    elif d<0:\n        d+=1\n    else:\n        break\n    s+=1\nprint(s)"}, "511": {"problem_id": 511, "answer": "x, y = list(map(int, input().split()))\nf = lambda a, b: 1 + f(a, b - gcd(a, b))\nprint(f(x, y))\n"}, "512": {"problem_id": 512, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    \n    dp = [[0] * 2 for _ in range(n)]\n    dp[0] = [-1] * 2\n    \n    for i in range(1, n):\n        if a[i] == -1:\n            dp[i] = [-1] * 2\n        elif b[i] == -1:\n            dp[i] = [i] * 2\n        else:\n            dp[i] = [a[i], b[i]]\n    "}, "513": {"problem_id": 513, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    xs = list(map(int, readline().split()))\n    ys = list(map(int, readline().split()))\n    mx = ys[0]\n    my = ys[1]\n    if mx > my:\n        print('ugly')\n    elif mx < my:\n        print('respectable')\n    else:\n        print('both')\n    "}, "514": {"problem_id": 514, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,d=list(map(int,input().split()))\n    print(\"YES\" if n%d==0 else \"NO\")\n"}, "515": {"problem_id": 515, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nk = int(read())\nans = 0\ni = 1\nwhile i <= k:\n    ans = 10**18 + (k-i)\n    i += 1\nprint(ans)"}, "516": {"problem_id": 516, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\ns = input()\nt = input()\n\nr = [0]*26\nfor c in s:\n    r[ord(c)-97] = r[ord(c)-97] + 1\n\nl = [0]*26\nfor c in t:\n    l[ord(c)-97] = l[ord(c)-97] + 1\n\nprint(min(r) + min(l))"}, "517": {"problem_id": 517, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nn,d,h=list(map(int,input().split()))\nR=[1]*n\nC=[1]*n\nfor i in range(n-1):\n    R[i]=R[i+1]\n    C[i]=C[i+1]\n    if d==i+1:\n        R[i]=R[i]^2\n    elif d==i+2:\n        R[i]=R[i]^2\n    elif d==i+3:\n        R[i]=R[i]^2\nprint(\" \".join(map(str,R)))\n"}, "518": {"problem_id": 518, "answer": "import sys\nread = sys.stdin.readline\nn, r = map(int, read().split())\nprint(r ** (1.0 + 6 * r / 100))"}, "519": {"problem_id": 519, "answer": "l = int(input())\np, q = map(int, input().split())\nh, to = 0.0, 0.0\nfor i in range(l):\n    h += p*i\n    to += q*i\nprint(abs(h-to))"}, "520": {"problem_id": 520, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sum(a[1:])\nfor i in range(1, n):\n    if a[i] - s > 2000:\n        s = a[i] - 2000\n    elif a[i] - s == 2000:\n        s *= -1\n    else:\n        s += a[i] - 2000\nprint(s)"}, "521": {"problem_id": 521, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\ns = list(map(int, readline().split()))\np = [0]*n\nfor i in range(n):\n    p[i] = s[i]\n    \nc = 0\nfor i in range(n):\n    if p[i] == 'C':\n        c += 1\n    elif p[i] == 'M':\n        c //= 2\n    elif p[i] == 'Y':\n        c //= 2\n\nprint('Yes' if c >= 2 else 'No')"}, "522": {"problem_id": 522, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+7\nfact = [1]\nfor i in range(2,INF):\n    fact.append(fact[i-1]*i%1000000007)\nMOD = 1000000007\nfac = [fact[2]]+[fact[3]]*2\nfor i in range(4,len(fac)):\n    fac[i] = fac[i-2]*i%MOD\nfac.append(fac[-1]*fac[-2]%MOD)\nfac = fac[:-1]\nprint(fac[-1]%MOD)"}, "523": {"problem_id": 523, "answer": "n,m=map(int,input().split())\ns=[]\nfor i in range(n):\n    s.append(input())\ns.sort()\nif m==1:\n    print(n)\n    print(\"\")\n    return\ndp=[0]*n\ndp[0]=n-1\nfor i in range(1,n):\n    dp[i]=dp[i-1]+(n-i)\nans=[]\nfor i in range(n):\n    if s[i]==s[i+1]:\n        ans.append(i+1)\n    else:\n        ans.append(i)\nprint(len(ans))\nprint(\"\".join(ans))"}, "524": {"problem_id": 524, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = min(a)\nprint(m)"}, "525": {"problem_id": 525, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    s=set()\n    for i in range(n):\n        if a[i] not in s:\n            s.add(a[i])\n            a[i]=a[i]+a[i+1]\n    print(min(len(s),n-1))"}, "526": {"problem_id": 526, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nt = [[0] * m for _ in range(n)]\nfor i in range(n):\n    t[i][i] = int(input())\n\nans = []\nfor i in range(n):\n    ans.append(t[i][i])\n\nprint(\"NIE\")\nfor i in ans:\n    print(i)"}, "527": {"problem_id": 527, "answer": "s = input()\nt = input()\nn = len(s)\nm = len(t)\nif n < m:\n    print(-1)\nelse:\n    print(min(n,m))"}, "528": {"problem_id": 528, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9 + 7\nn, m = list(map(int, readline().split()))\nE = [[] for _ in range(n)]\nfor i in range(m):\n    a, b = list(map(int, readline().split()))\n    E[a].append(b)\n    E[b].append(a)\nd = {}\nfor i in range(n):\n    d[i] = set()\nans = []\nfor i in range(n):\n    for j in range(n):\n        if i!= j:\n            if E[i].count(j) == E[j].count(i):\n                ans.append('YES')\n            elif E[i].count(j) > E[j].count(i):\n                ans.append('NO')\n            else:\n                d[i].add(j)\n                d[j].add(i)\nprint('\\n'.join(map(str, ans)))\n"}, "529": {"problem_id": 529, "answer": "# cook your dish here\na = input()\nb = list(a)\nc = int(input())\nd = ['a','b','c']\ne = 0\nfor i in range(0,c):\n    e = e + d.index(a[i])\n    d.remove(a[i])\nprint(''.join(d))"}, "530": {"problem_id": 530, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip()\nt = input().rstrip()\n\nans = [0]*3\nmoves = 0\nfor i in range(3):\n    moves += (s[i]==t[i])\n    ans[i] = moves//2\n\nposs = [0]*3\nfor i in range(3):\n    poss[i] = ans[i]//2\n\ndp = [0]*3\ndp[0] = s[0]\ndp[1] = s[1]\ndp[2] = s[2]\n\nfor i in range(3):\n    dp[i] = pow(dp[i-1],2,n)\n\ndef move(x):\n    nonlocal moves\n    nonlocal poss\n    nonlocal dp\n    x%=n\n    if poss[x]!=0:\n        return\n    moves += poss[x]\n    dp[x] = pow(dp[x-1],2,n)\n    poss[x] = 0\n\nmove(0)\nprint(\"First\")"}, "531": {"problem_id": 531, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 0\nfor i in range(n):\n    if a[i]!= a[i+2]:\n        m += 1\n    elif a[i] == a[i+2]:\n        m += 1\nprint(m)\nfor i in a:\n    print(i)"}, "532": {"problem_id": 532, "answer": "import sys\ninput = sys.stdin.readline\n\nS = 97 + 26*ord('a')\nt = [1]\nfor i in range(26):\n    t.append(t[-1]*i%S)\nprint(min(t[-1]%S, t[0]%S))"}, "533": {"problem_id": 533, "answer": "a = int(input())\nb = int(input())\nc = 0\nd = 0\ne = 0\nf = 0\nfor i in range(a):\n    if i%2==0:\n        c+=1\n    else:\n        d+=1\n        e+=1\n        f+=1\nprint(c,d)\n"}, "534": {"problem_id": 534, "answer": "n, t = list(map(int, input().split()))\ns = input()\na = []\nb = []\nfor i in range(n):\n    if s[i] == 'B':\n        a.append('B')\n    else:\n        a.append('G')\n    "}, "535": {"problem_id": 535, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9 + 7\nn, k = map(int, readline().split())\nprint(pow(n, k, MOD) * pow(2, k - 1, MOD) % MOD)"}, "536": {"problem_id": 536, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = lambda x: stdout.write(x+\"\\n\")"}, "537": {"problem_id": 537, "answer": "import sys\nreadline = sys.stdin.readline\nn,k = map(int,readline().split())\nif n<k*(n+1)//2:\n    print(0)\nelif k%2==0:\n    print(n//2)\nelse:\n    print(k//2)"}, "538": {"problem_id": 538, "answer": "x = int(input())\ns = str(x)\nn = len(s)\nc = 0\nfor i in range(1, n):\n    if s[i] == s[i - 1]:\n        c += 1\n    else:\n        break\nif c == n:\n    print('YES')\nelse:\n    print('NO')"}, "539": {"problem_id": 539, "answer": "n = int(input())\nans = 0\nfor i in range(1, n):\n    a = i << 1\n    b = (a + i) << 1\n    c = a + b\n    ans += bin(c).count('1')\nprint(ans)"}, "540": {"problem_id": 540, "answer": "import sys\ninput=sys.stdin.readline\nn,m=list(map(int,input().split()))\na=[[0]*n for _ in range(m)]\nb=[[0]*n for _ in range(m)]\nfor i in range(n):\n    a[i][0]=int(input())\n    a[i][1]=int(input())\nfor i in range(1,m):\n    b[i]=[[0]*n for _ in range(n)]\n    b[i][0]=int(input())\nprint('YES' if sum(a[i][j]==b[i][j] for i in range(n))==1 else 'NO')\n"}, "541": {"problem_id": 541, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = list(map(int, input().split()))\nislands = [tuple(map(int, input().split())) for _ in range(N)]\n\nedges = []\nfor i in range(N-1):\n    edges.append((islands[i], islands[i+1]))\n\nans = 0\nfor a, b in edges:\n    if a < b:\n        ans += 1\n    elif a == b:\n        ans += 1\n\nprint(ans)\n"}, "542": {"problem_id": 542, "answer": "def main():\n    n = int(input())\n    a = [0] * (n + 1)\n    for i in range(n):\n        a[i + 1] = int(input())\n    c = 0\n    for i in range(n):\n        c += a[i]\n        if c > a[i]:\n            print(\"second\")\n        elif c == a[i]:\n            print(\"first\")\n        else:\n            print(\"second\")"}, "543": {"problem_id": 543, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if cnt == n:\n        print(\"YES\")\n        break\n    elif a[i] > 1:\n        print(\"NO\")\n        cnt += 1\n    else:\n        print(\"YES\")"}, "544": {"problem_id": 544, "answer": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    a = [0] * 26\n    for i in s:\n        a[ord(i) - 97] += 1\n    if a.count(0) % 2 == 1:\n        print(\"NO\")\n    else:\n        print(\"YES\")"}, "545": {"problem_id": 545, "answer": "from sys import stdin,stderr\nn, t = list(map(int, stdin.readline().split()))\ns1, s2 = list(map(str, stdin.readline().split()))\ns1 = sorted(s1)\ns2 = sorted(s2)\nif n % 3!= 0:\n    print(-1)\n    return\nm = n // 3\ncnt = 0\nfor i in range(m):\n    if s1[i]!= s2[i]:\n        cnt += 1\n    else:\n        break\nif cnt == t:\n    print(\"yess\")\nelse:\n    print(-1)"}, "546": {"problem_id": 546, "answer": "import sys\nread = sys.stdin.readline\ns = list(read())[::-1]\nn = int(read())\nfor i in range(n):\n    s = list(read())[::-1]\n    d = {}\n    for j in range(26):\n        if s[j] not in d:\n            d[s[j]] = 1\n        else:\n            d[s[j]] += 1\n    a = 0\n    for k in d:\n        if d[k] > 1:\n            a += 1\n            break\n    if a > 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "547": {"problem_id": 547, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\n\np = [0] * (n + 1)\nfor i in range(n):\n    p[i + 1] = list(map(int, readline().split()))\n\nans = 0\nm = min(k, n)\nfor i in range(1, n + 1):\n    ans += abs(p[i] - p[i - 1]) * 5\n    m = min(m, abs(p[i] - p[i - 1]))\nprint(ans, m)\n"}, "548": {"problem_id": 548, "answer": "n = int(input())\na = list(map(int, input().split()))\np = 0\nq = 0\nfor i in a:\n    if i%2==0:\n        p+=1\n    else:\n        q+=1\nif p>q:\n    print(\"First\")\nelse:\n    print(\"Second\")"}, "549": {"problem_id": 549, "answer": "n = int(input())\nprint(2*n+2,2*n+1)"}, "550": {"problem_id": 550, "answer": "s = input()\nn = int(input())\nlogin = []\nfor i in range(n):\n    s = input()\n    if s.count('0') == 0:\n        login.append(s)\n\nprint(['Yes', '%s' % ('Similar with %s' % (len(login), '.'.join(map(str, login))))])"}, "551": {"problem_id": 551, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ny = list(map(int, input().split()))\nd = [[0] * n for _ in range(n)]\nfor i in range(n):\n    d[i][y[i]] = 1\nans = True\nfor i in range(n):\n    for j in range(n):\n        if d[i][j] == 0:\n            continue\n        x1, y1 = y[j]\n        x2, y2 = y[i]\n        if x1 + x2 > x2:\n            x1, x2 = x2, x1\n        ans = ans and d[i][j] >= x1 + x2\n"}, "552": {"problem_id": 552, "answer": "import copy\nn,m=map(int,input().split())\na=list(input())\nb=copy.deepcopy(a)\ns=list(input())\nans=0\nfor i in range(n-1):\n    if s[i]!=s[i+1]:\n        ans+=len(set(b[i:i+m])&set(a[i:i+m]))\nprint(ans)"}, "553": {"problem_id": 553, "answer": "n = int(input())\nd = {}\nfor i in range(n):\n    d[input()] = 6\nans = []\nfor i in d:\n    if i not in ans:\n        ans.append(i)\nprint(max(ans))"}, "554": {"problem_id": 554, "answer": "n, m = [int(i) for i in input().split()]\nflowers = [int(i) for i in input().split()]\nc = collections.Counter(flowers)\nans = 0\nmoods = []\nfor i in range(n):\n    if c[i] == -1:\n        c[i] = 0\n    elif c[i] == 1:\n        c[i] += 1\n    else:\n        c[i] -= 1\n        if c[i] == -1:\n            c[i] = 0\n        else:\n            c[i] += 1\n            if c[i] == -1:\n                c[i] = 0\n            else:\n                c[i] -= 1\n                if c[i] == -1:\n                    c[i] = 0\n                else:\n                    c[i] += 1\n                    moods.append(moods.pop())\nprint(ans)"}, "555": {"problem_id": 555, "answer": "n = int(input())\nd = 1023\na = str(n)\nb = \"\"\nfor i in range(len(a)):\n    b += a[i]\n    if i < len(a) - 1:\n        b += \"9\"\n    else:\n        b += \"0\"\nprint(int(b))"}, "556": {"problem_id": 556, "answer": "import math\ndef solve():\n    l, r, k = map(int, input().split())\n    n = l + r + k\n    if 2**(math.floor(math.sqrt(n))) > n:\n        print(\"-1\")\n    else:\n        print(2**(math.floor(math.sqrt(n)) - 1) * n)\nsolve()"}, "557": {"problem_id": 557, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nn, m = list(map(int, read().split()))\nans = []\nfor i in range(n):\n    a, b = list(map(int, read().split()))\n    ans.append((a, b))\n\ndef is_finite(x):\n    return x >= 0 and x <= m\n\n\ndef dfs(pig, dist, is_finite):\n    if is_finite(pig):\n        if dist > m:\n            return False\n        else:\n            pig_neighs = dist - abs(pig[0] - a)\n            if all(dist < pig_neighs for a in ans):\n                return True\n            else:\n                return False\n    else:\n        return dfs(pig, dist + 1, is_finite)\n\n\ndfs(pig, 0, False)\n"}, "558": {"problem_id": 558, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nn, m, k = map(int, input().split())\nMOD = 998244353\n\np = [[] for _ in range(n)]\nfor i in range(1, n):\n    p[i].append(i)\n\nc = [0]*(n+1)\nc[0] = 1\nfor i in range(1, n+1):\n    c[i] = c[i-1]*m%MOD\n\ndef paint(x, y):\n    nonlocal MOD\n    if x-1 not in p[y]:\n        p[y].append(x-1)\n        paint(x-1, y)\n    elif y-1 not in p[x]:\n        p[x].append(y-1)\n        paint(x, y-1)\n    else:\n        c[x] += c[y]\n        paint(x, y)\n\nans = 0\nfor i in range(1, n+1):\n    ans += p[i].count(i) * paint(i, i) % MOD\nprint(ans)"}, "559": {"problem_id": 559, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    p = int(input())\n    a = list(map(int, input().split()))\n    if 2 not in a:\n        print(1, end=\" \")\n        print(*a)\n        return\n    d = 2\n    for i in range(2, p):\n        if i*d == p:\n            d += 1\n        else:\n            break\n    ans = [0]*p\n    for i in range(p-1):\n        if ans[i] == 0:\n            ans[i] = 1\n        elif ans[i] == 1:\n            ans[i] = 2\n        else:\n            ans[i] = ans[i-1] + 1\n    print(*ans[:p], sep=\" \")\n"}, "560": {"problem_id": 560, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nr,c = map(int,input().split())\ns = '.'*c\nfor i in range(r):\n    s = s+input()[i]\nprint(max(s.count('S'),len(s)))"}, "561": {"problem_id": 561, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 0\nans = []\nfor i in range(n):\n    if a[i]!= 0:\n        m = i\n        ans.append(a[i])\nprint(' '.join(map(str, ans)))\n"}, "562": {"problem_id": 562, "answer": "n = int(input())\ns = [0] * (n + 1)\nfor i in range(n):\n    s[i + 1] = list(map(int, input().split()))\nans = \"YES\"\nfor i in range(1, n + 1):\n    if s[i] & s[i - 1]:\n        ans = \"NO\"\nprint(ans)"}, "563": {"problem_id": 563, "answer": "import sys\ninput=sys.stdin.readline\n\nl,r=list(map(int,input().split()))\nif l<2 or r<2:\n    print(-1)\n    return\n\na=l\nb=2*l-1\nc=2*r-1\n\nm=max(a,b,c)\nif m%2==0:\n    print(m)\n    return\n\nans=[]\nfor i in range(3,r+1):\n    if m%i==0:\n        ans.append(i)\n\nif len(ans)==3:\n    print(ans[0],ans[1],ans[2])\nelse:\n    print(-1)"}, "564": {"problem_id": 564, "answer": "n, s = list(map(int, input().split()))\na = list(map(int, input().split()))\np = [0] * (s + 1)\nfor i in range(1, n):\n    p[i] += p[i - 1]\n    p[i] %= s\nans = \"YES\"\nfor i in range(n - 1):\n    if p[i] > s:\n        ans = \"NO\"\nprint(ans)\n"}, "565": {"problem_id": 565, "answer": "import sys\ninput = sys.stdin.readline\n\ny, b, r = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(y):\n    if i % 2 == 0:\n        ans += i\n    elif i % 2 == 1:\n        ans += i - 1\n\nprint(ans)\n"}, "566": {"problem_id": 566, "answer": "def main():\n    r, g, b = map(int, input().split())\n    print(max(r * (g + b) - r - g, r * (g + b) - r - b, r * (g + b) - r - 2 * g))\n\nmain()"}, "567": {"problem_id": 567, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 10**6\ns = 0\nfor i in range(n):\n    s += a[i] - m\n    m = min(m, a[i])\nprint(s)"}, "568": {"problem_id": 568, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nans = 0\nfor i in range(3*n):\n    if i + n + i not in set(range(6)) and i + n + i + n not in set(range(6)) and i + n + i + n + 2n not in set(range(6)):\n        ans += 1\nprint(ans%(10**9 + 7))\n"}, "569": {"problem_id": 569, "answer": "n = int(input())\ns = input()\na = []\nfor i in range(n):\n    a.append(s[i])\nans = 0\nfor i in range(n):\n    if a.count(a[i]) > 1:\n        ans += 1\nprint(ans)"}, "570": {"problem_id": 570, "answer": "a,b=list(map(int,input().split()))\nif a<b:\n    print('Vladik')\nelse:\n    print('Valera')"}, "571": {"problem_id": 571, "answer": "import sys\ninput = sys.stdin.readline\n\ns = input().strip()\nres = \"\".join(s[i:i+2] for i in range(len(s) - 2))\nif s == \"?\":\n    print(\":(\", end=\"\")\nelse:\n    print(res)"}, "572": {"problem_id": 572, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\nA = list(map(int, input().split()))\n\nans = 2\nfor i in range(1, n + 1):\n    if A[i] % k!= 0:\n        ans += 2\n    else:\n        ans += 1\nprint(ans)"}, "573": {"problem_id": 573, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] == 2:\n        ans += 1\n    elif a[i] == 1:\n        ans += 2\nprint(ans)\n"}, "574": {"problem_id": 574, "answer": "import sys\nread = sys.stdin.readline\n\nx1, y1, x2, y2 = list(map(int, read().split()))\n\ncount = 0\n\nif x1 <= x2:\n    count += abs(x2 - x1) // 2\nelif y1 <= y2:\n    count += abs(y2 - y1) // 2\nelse:\n    count += abs(x1 - x2) // 2\n\nprint(count)"}, "575": {"problem_id": 575, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nboard = list(map(int, input().split()))\nqueen = list(map(int, input().split()))\nking = list(map(int, input().split()))\n\nboard.append(queen)\nking.append(queen)\n\nranks = [0]*n\nfors = [0]*n\ndiags = [0]*n\nfor i in range(n):\n    ranks[i] = board[i][i]\n    for j in range(i+1, n):\n        if ranks[j] < board[i][j]:\n            ranks[j] += board[i][j]\n            for di in fol[j]:\n                if ranks[di] < board[i][j]:\n                    ranks[di] += board[i][j]\n                    diags[j] += 1\n\ndiags[king[0] - 1] += 1\nans = \"YES\"\nfor i in range(n):\n    if ranks[king[i]] > riig[king[i]]:\n        ans = \"NO\"\nprint(ans)"}, "576": {"problem_id": 576, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nm = a[0]\nfor i in range(1, n):\n    m = max(m, a[i] % m)\n    a[i] = m\nprint(m)"}, "577": {"problem_id": 577, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = map(int, readline().split())\n\nB = [0]*n\nfor i in range(n):\n    a, b = map(int, readline().split())\n    B[i] = max(B[i-1]+a, B[i] + b)\n\nprint(sum(B))"}, "578": {"problem_id": 578, "answer": "import math\ndef get_decimal_from_string(s):\n    d,n = divmod(s,10)\n    return '{:.10f}'.format(d)\n\ndef get_string_from_decimal(d):\n    s = str(d)\n    return s[:-1] if s[-1] == '.' else s\n\ndef get_integer_from_string(s):\n    d,n = divmod(s,10)\n    return int(s,2)\n\ndef __starting_point():\n    s = input()\n    a,b,c = get_integer_from_string(s)\n    print(get_decimal_from_string(a))\n    print(get_integer_from_string(b))\n    print(get_decimal_from_string(c))\n__starting_point()"}, "579": {"problem_id": 579, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\np = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\nd = [[0]*n for _ in range(n)]\nfor i in range(n):\n    d[p[i]-1][i] = c[i]\n\nans = 0\nfor i in range(n):\n    ans += max(0, d[i][P[0]-1])\n    d[i][P[0]] = ans\n\nprint(ans)"}, "580": {"problem_id": 580, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, s, t = list(map(int, input().split()))\na = []\nb = []\nc = []\nd = []\nfor i in range(m):\n    aa, bb, cc, dd = list(map(int, input().split()))\n    a.append(aa)\n    b.append(bb)\n    c.append(cc)\n    d.append(dd)\n\ng = {}\nfor i in range(n):\n    if a[i] not in g:\n        g[a[i]] = []\n    g[a[i]].append(i)\n\ng[\"\"] = g.keys()\n\ncost = [0] * n\nvisited = set()\nans = [\"NO\"] * m\n\ndef repair(i):\n    nonlocal cost\n    nonlocal visited\n    visited.add(i)\n    for j in g.get(i, []):\n        if j not in visited:\n            cost[j] = min(cost[j], cost[i] + repair(j))\n    return cost[i]\n\nprint(ans[0] if visited[0] else \"YES\")\nfor i in range(1, m):\n    print(ans[i], end=\" \")\n    print(cost[i], end=\" \")\n    print(re repair(i))\n"}, "581": {"problem_id": 581, "answer": "import sys\nimport math\n \ndef II():\n\treturn int(sys.stdin.readline())\n \ndef MI():\n\treturn map(int, sys.stdin.readline().split())\n \ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef SI():\n\treturn sys.stdin.readline().strip()\n \nn = II()\na = [0]*n\nb = [0]*n\nc = [0]*n\nfor i in range(n-1):\n\ta[i], b[i] = MI()\n\tc[i] += a[i] + b[i]\nprint(max(a))\nfor i in range(n-1):\n\tx = c[i]\n\ty = a[i] + b[i]\n\tz = c[i] - a[i] - b[i]\n\tprint(max(x,y,z))"}, "582": {"problem_id": 582, "answer": "n = int(input())\na = list(map(int, input().split()))\nt = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i] > t[i]:\n        c += a[i] - t[i]\nprint(c)"}, "583": {"problem_id": 583, "answer": "import sys\nreadline = sys.stdin.readline\n \nn = int(readline())\ns = readline()[:-1]\n \na = [0]*n\nb = [0]*n\nfor i in range(n):\n    a[i] = s[i]\n    b[i] = s[i]\n \nans = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        ans += 1\n    else:\n        ans += 2\n \nprint(ans)\n"}, "584": {"problem_id": 584, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip()\n\nans = []\nfor i in range(26):\n    if s[i] in 'aeiouAEIOU':\n        ans.append(i)\n\nprint(max(ans), end=' ')\nprint(len(ans), end=' ')\n"}, "585": {"problem_id": 585, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nM = 998244353\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nf = [0] * (n + 1)\nfor i in range(1, n + 1):\n    f[i] = f[i - 1] + a[i] - b[i]\nans = 0\nfor i in range(len(f)):\n    ans += f[i] % M\nprint(ans % M)\n"}, "586": {"problem_id": 586, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 1000000007\nfac = [1]*8\nfac[1] = 2\nfac[2] = 2\nfac[3] = 2\nfac[4] = 2\nfac[5] = 2\nfac[6] = 2\nfac[7] = 2\nfac[8] = 2\nfac[9] = 2\nfac[10] = 2\nfac[11] = 2\nfac[12] = 2\nfac[13] = 2\nfac[14] = 2\nfac[15] = 2\nfac[16] = 2\nfac[17] = 2\nfac[18] = 2\nfac[19] = 2\nfac[20] = 2\nfac[21] = 2\nfac[22] = 2\nfac[23] = 2\nfac[24] = 2\nfac[25] = 2\nfac[26] = 2\nfac[27] = 2\nfac[28] = 2\nfac[29] = 2\nfac[30] = 2\nfac[31] = 2\nfac[32] = 2\nfac[33] = 2\nfac[34] = 2\nfac[35] = 2\nfac[36] = 2\nfac[37] = 2\nfac[38] = 2\nfac[39] = 2\nfac[40] = 2\nfac[41] = 2\nfac[42] = 2\nfac[43] = 2\nfac[44] = 2\nfac[45] = 2\nfac[46] = 2\nfac[47] = 2\nfac[48] = 2\nfac[49] = 2\nfac[50] = 2\nfac[51] = 2\nfac[52] = 2\nfac[53] = 2\nfac[54] = 2\nfac[55] = 2\nfac[56] = 2\nfac[57] = 2\nfac[58] = 2\nfac[59] = 2\nfac[60] = 2\nfac[61] = 2\nfac[62] = 2\nfac[63] = 2\nfac[64] = 2\nfac[65] = 2\nfac[66] = 2\nfac[67] = 2\nfac[68] = 2\nfac[69] = 2\nfac[70] = 2\nfac[71] = 2\nfac[72] = 2\nfac[73] = 2\nfac[74] = 2\nfac[75] = 2\nfac[76] = 2\nfac[77] = 2\nfac[78] = 2\nfac[79] = 2\nfac[80] = 2\nfac[81] = 2\nfac[82] = 2\nfac[83] = 2\nfac[84] = 2\nfac[85] = 2\nfac[86] = 2\nfac[87] = 2\nfac[88] = 2\nfac[89] = 2\nfac[90] = 2\nfac[91] = 2\nfac[92] = 2\nfac[93] = 2\nfac[94] = 2\nfac[95] = 2\nfac[96] = 2\nfac[97] = 2\nfac[98] = 2\nfac[99] = 2\nfac[100] = 2\nfac[101] = 2\nfac[102] = 2\nfac[103] = 2\nfac[104] = 2\nfac[105] = 2\nfac[106] = 2\nfac[107] = 2\nfac[108] = 2\nfac[109] = 2\nfac[110] = 2\nfac[111] = 2\nfac[112] = 2\nfac[113] = 2\nfac[114] = 2\nfac[115] = 2\nfac[116] = 2\nfac[117] = 2\nfac[118] = 2\nfac[119] = 2\nfac[120] = 2\nfac[121] = 2\nfac[122] = 2\nfac[123] = 2\nfac[124] = 2\nfac[125] = 2\nfac[126] = 2\nfac[127] = 2\nfac[128] = 2\nfac[129] = 2\nfac[130] = 2\nfac[131] = 2\nfac[132] = 2\nfac[133] = 2\nfac[134] = 2\nfac[135] = 2\nfac[136] = 2\nfac[137] = 2\nfac[138] = 2\nfac[139] = 2\nfac[140] = 2\nfac[141] = 2\nfac[142] = 2\nfac[143"}, "587": {"problem_id": 587, "answer": "import sys\ninput = sys.stdin.readline\n\ndef read_int():\n  return int(input())\n\ndef read_int_n():\n  return list(map(int, input().split()))\n\nN, K = read_int_n()\nt = read_int_n()\nt.sort()\nx = 1\nfor i in range(N):\n  if t[i]!=i+1:\n    x+=1\n  else:\n    x*=i+1\nprint(max(x,sum(t[:i+1])+x*x))"}, "588": {"problem_id": 588, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    xs = [list(map(int, input().split())) for _ in range(n)]\n    ys = [list(map(int, input().split())) for _ in range(n)]\n    zeroes = [i for i in range(2 * n)]\n    zeroes.append(0)\n    ans = 0.0\n    for i in range(n):\n        ans = max(ans, xs[i][0] + ys[i][1])\n        zeroes.pop()\n        zeroes.append(i)\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "589": {"problem_id": 589, "answer": "s = input()\nhint = \"\".join(sorted(set(s)))\nposs = [0]*10\nfor i in range(10):\n    if hint[i]=='?':\n        poss[i] = 1\n        continue\n    elif hint[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ':\n        poss[i] = 1\n        continue\n    else:\n        poss[i] = 0\nans = 0\nfor i in poss:\n    ans += pow(10,i)\nprint(ans)"}, "590": {"problem_id": 590, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\n\ncnt = 0\nm = a.count(1)\nfor i in range(1, n):\n    if a[i] < a[i - 1]:\n        cnt += 1\n    else:\n        break\n\ns = []\nfor i in range(n):\n    s.append(a[i])\n\ns.sort()\n\nans = []\nfor i in range(cnt):\n    if s[i] < s[i - 1]:\n        ans.append(s[i])\n    else:\n        ans.append(s[i - 1])\n\nprint(len(ans))\nprint(' '.join(map(str, ans)))\n"}, "591": {"problem_id": 591, "answer": "n, k = map(int, input().split())\nt = list(map(int, input().split()))\nt.insert(0, 0)\nl = []\nfor i in t:\n    l.append(i)\nprint(min(l))\nb = [None] * k\nb[1:] = 0\nfor i in range(2, n + 1):\n    b[i] = b[i - 1] + l[i - 1]\nprint(\" \".join(b))"}, "592": {"problem_id": 592, "answer": "n = int(input())\nprint(0) if n&1 else print(max(0, n-int(n&1))+2)"}, "593": {"problem_id": 593, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\ncandidates = []\ncities = []\nfor i in range(m):\n    candidates.append(list(map(int, input().split())))\n\nfor i in range(m):\n    candidates[i].sort()\n\ncandidates.sort()\n\nfor i in range(n):\n    index = candidates[i][1]\n    cities.append(index)\n\ncities.sort()\n\nans = 0\nfor i in range(len(cities)):\n    if index == cities[i]:\n        ans += 1\n\nprint(ans)\n"}, "594": {"problem_id": 594, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\nt = list(map(int, readline().split()))\na = [0] + list(map(int, readline().split()))\nb = [0] + list(map(int, readline().split()))\nfor i in range(1, n + 1):\n    if a[i] < t[i]:\n        a.append(t[i])\n    else:\n        a.append(a[i])\nfor i in range(m):\n    if b[i] < t[i]:\n        b.append(t[i])\n    else:\n        b.append(b[i])\nprint(min(a, b))"}, "595": {"problem_id": 595, "answer": "import sys\ny = int(sys.stdin.readline())\nd = {0:1, 1:5, 2:400, 3:4, 4:1, 5:365}\nfor i in range(y):\n    if i%4 == 0:\n        d[i] += 1\n    elif i%4 == 1:\n        d[i] += 2\n    elif i%4 == 2:\n        d[i] += 3\n    elif i%4 == 3:\n        d[i] += 4\nprint(d[2044])"}, "596": {"problem_id": 596, "answer": "import calendar\ndef cal_days(year, month, day):\n    if year%4==0 and year%100!=0:\n        return 1\n    elif year%400==0 and year%100!=0:\n        return cal_days(year+1,month,day) + 1\n    else:\n        return cal_days(year+1,month,day) + cal_days(year,month+1,day) + cal_days(year,month,31)\nd = calendar.Date(1901, 12, 31)\nprint(cal_days(d,1,31))"}, "597": {"problem_id": 597, "answer": "from collections import deque\nn,m=map(int,input().split())\nl=deque([])\nl.append(0)\ns=set()\ns.add(n-1)\nfor i in range(n-1):\n    u,v=map(int,input().split())\n    l.append((u,v))\n    s.add((u,v))\nt=10**9+7\nans=0\nfor i in range(1,123456):\n    if l[i] not in s:\n        ans=min(ans,t)\n        break\nprint(ans)\nprint(l[0]//2+l[1]//2)"}, "598": {"problem_id": 598, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, x = map(int, readline().split())\nvouchers = [list(map(int, readline().split())) for _ in range(n)]\ndur = [0]*n\nfor i in range(n):\n    l, r, c = vouchers[i]\n    dur[i] = min(l, r) + 1\n\nans = [-1]*n\ns = 0\nfor i in range(n):\n    if dur[i] == x:\n        ans[i] = s\n        s = 0\n    elif dur[i] > x:\n        s = ans[i]\n        ans[i] = s\n    else:\n        j = i\n        while j < n and dur[j] == x:\n            j += 1\n        if j == n:\n            ans[i] = s\n            s = 0\n        else:\n            ans[i] = ans[j] + 1\nprint(ans[-1])"}, "599": {"problem_id": 599, "answer": "s = input()\n\nif s[0] == s[-1]:\n    print(\"NA\")\n    return\n\na = 0\nc = 0\nfor i in range(len(s)):\n    if s[i]!= s[i+1]:\n        c += 1\n        a += 1\n        if c == 1:\n            break\n\nif a == len(s):\n    print(\"NA\")\n    return\n\nprint(s[a:])"}, "600": {"problem_id": 600, "answer": "a = int(input())\nb = int(input())\ns = 0\nfor i in range(a):\n    s += i*2\nprint(s)"}, "601": {"problem_id": 601, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    p,f=list(map(int,input().split()))\n    cnt_s=list(map(int,input().split()))\n    cnt_w=list(map(int,input().split()))\n    #print(cnt_s)\n    #print(cnt_w)\n    sm=0\n    for i in range(p):\n        sm+=cnt_s[i]\n    for i in range(f):\n        sm+=cnt_w[i]\n    #print(sm)\n    sm*=p+f\n    #print(sm)\n    #print(cnt_s)\n    #print(cnt_w)\n    ans=0\n    for i in range(sm):\n        ans+=cnt_s[i]\n    print(ans)\n"}, "602": {"problem_id": 602, "answer": "n = int(input())\nprint(''.join(['ADAMS' for i in range(n)]))\n"}, "603": {"problem_id": 603, "answer": "import sys\nreadline = sys.stdin.readline\n\nR, G, B = map(int, readline().split())\n\nans = 0\n\nfor i in range(1, R + 1):\n    if R == 3:\n        ans += G\n    elif R == 2:\n        ans += B\n    elif G == 1:\n        ans += B\n    elif B == 1:\n        ans += B\n\nprint(ans)"}, "604": {"problem_id": 604, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nb[0] = a[0]\nfor i in range(1, n):\n    b[i] = max(b[i-1], a[i])\nans = 0\nfor i in range(n):\n    if b[i] == 0:\n        ans += 1 << 60\n    elif b[i] > 0:\n        ans += 1 << 60\nprint(ans)"}, "605": {"problem_id": 605, "answer": "a,b,c,d = list(map(int,input().split()))\ns = (c*abs(d-b))**0.5\nprint('Misha'*a,end=' ')\nprint('Vasya'*b,end=' ')\nprint('Tie'*d)\n"}, "606": {"problem_id": 606, "answer": "from math import sqrt\n\nd = {\n    1: (0,0),\n    2: (0,0),\n    3: (0,0),\n    4: (0,0),\n    5: (0,0),\n}\n\ndef f(x,y):\n    return abs(sqrt(x**2 + y**2))\n\nR = int(input())\nP = []\nfor i in range(6):\n    P.append((f(d[i],d[i+1])-f(d[i],i+2),i+2))\n\nans = float('inf')\nfor i in range(R+1):\n    ans = min(ans,f(P[i][0],P[i][1]))\nprint(ans,end=\" \")\nprint(R+ans)"}, "607": {"problem_id": 607, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\ndef prime(n):\n    if n==2: return True\n    elif n==3: return True\n    else: return False\n\nn,m = map(int,input().split())\nl = [0]*(n+1)\nfor i in range(2,n+1):\n    if prime(i):\n        l[i]+=1\nprint(l[n-1])"}, "608": {"problem_id": 608, "answer": ""}, "609": {"problem_id": 609, "answer": "n = int(input())\ns = set()\nfor i in range(n):\n    s.add(input())\nif 'x' in s:\n    print('YES')\nelse:\n    print('NO')"}, "610": {"problem_id": 610, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\n\nans = [0]*n\nans[0] = n+m-1\nfor i in range(1, n+m-1):\n    ans[i] = ans[i-1] + (n+m-1-i)\n\nprint(*ans, sep='\\n')"}, "611": {"problem_id": 611, "answer": "import heapq as hq\nn,m=map(int,input().split())\na=[]\nb=[]\nfor i in range(n):\n    x,d=map(int,input().split())\n    a.append(x)\n    b.append(d)\na.sort()\nb.sort(reverse=True)\nhq.heapify(b)\nans=a[0]*a[1] + a[1]*a[0]\nfor i in range(1,n):\n    ans=ans+a[i]*b[i]\nprint(ans)"}, "612": {"problem_id": 612, "answer": "import sys\nreadline = sys.stdin.readline\nn, k, p = list(map(int, readline().split()))\na = list(map(int, readline().split()))\neven = 0\nodd = 0\nfor i in range(n):\n    if a[i] % 2 == 0:\n        even += 1\n    else:\n        odd += 1\ncnt = 0\nfor i in range(n):\n    if cnt == even:\n        print(i, end=' ')\n        cnt *= 2\n    elif cnt == odd:\n        print(i, end=' ')\n        cnt += 1\n    else:\n        print(i, end=' ')\n        cnt += 1\n"}, "613": {"problem_id": 613, "answer": "import sys\ninput = sys.stdin.readline\n\nt, a, b = map(int, input().split())\n\nfac = [1]\nfor i in range(2, t + 1):\n    fac.append(fac[-1] * i % (10**9 + 7))\n\nif a == 0:\n    print(1)\nelif b == 0:\n    print(1)\nelse:\n    print(fac[t] % (10**9 + 7))"}, "614": {"problem_id": 614, "answer": "import sys\nn,m=list(map(int,sys.stdin.readline().split()))\ntotals=[[0]*n for _ in range(n)]\nfor i in range(n):\n    totals[i][0]=int(sys.stdin.readline().split()[1])\n    totals[i][1]=int(sys.stdin.readline().split()[2])\n    if totals[i][0]>m:\n        m=totals[i][0]\nprint(m)"}, "615": {"problem_id": 615, "answer": "from collections import deque\nN = int(input())\nA = list(map(int, input().split()))\nans = 10**10\nd = deque()\nfor i in range(N):\n  d.append(A[i])\nans = min(ans, sum(A[i] for i in range(N))-d[0])\nprint(ans)"}, "616": {"problem_id": 616, "answer": "import sys\ninput = sys.stdin.readline\nfrom heapq import heappush, heappop, heapify\n\nN, M = map(int, input().split())\nA = [0] + list(map(int, input().split()))\nB = [0] + list(map(int, input().split()))\nfor i in range(M):\n    heappush(A, -i)\n    heappush(B, i)\n\nans = 0\ncnt = 0\nfor i in range(1, N + 1):\n    if A[i] + B[i] <= N:\n        cnt += 1\n    else:\n        break\n    ans += min(cnt * a[i] * b[i], a[i] * b[i] // 2, cnt * a[i] * b[i] // 2)\nprint(ans)"}, "617": {"problem_id": 617, "answer": "s = input()\nn = len(s)\nans = [0]*10\nfor i in range(n):\n    if s[i]=='+':\n        ans[i] = ans[i]*2+1\n    elif s[i]=='*':\n        ans[i] = ans[i]*2\n    ans[i]%=10\nprint(ans[-1])"}, "618": {"problem_id": 618, "answer": "s=input()\nl=s.split('|')\nfor i in range(len(l)):\n    if l[i]=='A':\n        l[i]=1\n    elif l[i]=='W':\n        l[i]=int(l[i])\n    else:\n        l[i]=0\nprint(''.join(l))"}, "619": {"problem_id": 619, "answer": "x, y, z = list(map(int, input().split()))\nsasha = x\nmasha = y\ncant = z\n\nans = []\nfor i in range(0, z):\n    if cant > i:\n        ans.append(cant - i)\n    cant -= i\n\nans.sort()\nprint(ans[-1], ans[-2])\n"}, "620": {"problem_id": 620, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\nalp=lambda a,b:a[::2]*a[1::2]\nst=lambda:input()"}, "621": {"problem_id": 621, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\ncnt = 0\nans = 0\nfor i in range(n):\n    if a[i] < 0:\n        b.append(i+1)\n        cnt += 1\n    elif a[i] == 0:\n        b.append(i+1)\n        cnt += 1\n    else:\n        b.append(i+1)\n        cnt += b[b.index(a[i])]\n        ans += cnt\nprint(ans)\nprint(*b, sep ='')"}, "622": {"problem_id": 622, "answer": "n, k = map(int, input().split())\ns = 1\nfor i in range(2, n + 1):\n    if s & (1 << i):\n        s = s << 1 | 1 << i\n    else:\n        break\nprint(s)"}, "623": {"problem_id": 623, "answer": "a1,a2=list(map(int,input().split()))\nt=0\nwhile a1>0 and a2>0:\n    t+=a1//a2\n    a1-=a2\n    a2-=a1\nprint(t)\n"}, "624": {"problem_id": 624, "answer": "import sys\ninput = sys.stdin.readline\nn, k, m = map(int, input().split())\na = list(map(int, input().split()))\np = [0] * (n + 1)\nfor i in range(1, n + 1):\n    p[i] += a[i] - p[i - 1]\nans = 0\nfor i in range(k):\n    ans += p[m - k] * p[i]\nprint(ans / k)"}, "625": {"problem_id": 625, "answer": "n = int(input())\nprint(2*(-1)**n)"}, "626": {"problem_id": 626, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nd=[0]*n\nfor i in range(n):\n    d[a[i]-1]=i+1\n    if a[i]==1:\n        d[i+1]=d[i]\n    else:\n        d[i+1]=d[i]\nprint(d[n-1])"}, "627": {"problem_id": 627, "answer": "n = int(input())\nl = list(input())\nl.sort()\nans = ''\nfor i in range(n):\n    if l[i] < l[n-i-1]:\n        ans += l[i]\nprint(ans)"}, "628": {"problem_id": 628, "answer": "import sys\nreadline = sys.stdin.readline\nn, k = map(int, readline().split())\na = list(map(int, readline().split()))\ns = [0]*k\nfor i in range(k):\n    s[i] = a[i]\n    s[i&(i+1)]:=max(s[i>>1], s[i&(i+1)])\nprint(s[k&1])"}, "629": {"problem_id": 629, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\np = [0]*n\nq = [0]*n\nfor i in range(n-1):\n    p[i+1] = p[i] + a[i]\n    q[i+1] = q[i] + b[i]\nans = 0\nfor i in range(n):\n    ans += max(p[i] - q[i], 0)\nprint(ans)"}, "630": {"problem_id": 630, "answer": "import sys\ninput=sys.stdin.readline\nn,k=list(map(int,input().split()))\ns=input().split()\ns=s[:2]\nk=int(s[-1])\nans=[]\nfor i in range(2,n+1):\n    ans.append(k)\n    k+=1\nprint(*ans,sep=\"\\n\")\n"}, "631": {"problem_id": 631, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n,m=list(map(int,input().split()))\n    a=list(map(int,input().split()))\n    if n==0 or m==0:\n        print(\"YES\")\n    else:\n        flag=0\n        for i in range(n):\n            for j in range(i+1,n):\n                a[i]+=a[j]//j\n                if a[i]%j==0:\n                    flag=1\n                    break\n            if flag==0:\n                print(\"NO\")\n                break\n        else:\n            print(\"YES\")\n"}, "632": {"problem_id": 632, "answer": "import sys\ninput = sys.stdin.readline\n \nt=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    if n==1:\n        print(1)\n        continue\n    d=set()\n    for i in range(2,10):\n        if n%i==0:\n            d.add(n//i)\n            if n//i not in d:\n                d.add(n//i)\n            elif n//i not in d:\n                d.remove(n//i)\n            else:\n                break\n    print(n+sum(d))"}, "633": {"problem_id": 633, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\ng = [[] for _ in range(n)]\nfor i in range(m):\n    u, v = map(int, input().split())\n    g[u-1].append(v-1)\n    g[v-1].append(u-1)\n\nans = []\nfor i in range(m):\n    ans.append(' '.join(f'{x} {y}' for x, y in g[i]))\nprint('\\n'.join(ans))"}, "634": {"problem_id": 634, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nr, n = map(int, read().split())\nans = [0]*n\nfor i in range(n):\n    ans[i] = r+2*i+1\n\np = []\nfor i in range(2):\n    p.append((r+2*i+1, i))\n\ndef dfs(r, c):\n    if r < 0 or r >= n:\n        return 0\n    if ans[r] == c:\n        return 1\n    a = dfs(r-1, c-1)\n    b = dfs(r, c)\n    cnt = a + b + c\n    if cnt > ans[r]:\n        ans[r] = cnt\n    elif cnt < ans[r]:\n        ans[r] = cnt\n    return cnt\n\ndfs(0, n-1)\nprint('LOSE' if ans[0] == n-1 else 'WIN')"}, "635": {"problem_id": 635, "answer": "import sys\ninput = sys.stdin.readline\n\nn, s = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\nclosed = [False]*n\nfor i in range(n):\n    if A[i] == 1:\n        closed[i] = True\n\nopen = [False]*n\nfor i in range(n):\n    if closed[i] and B[i] == 1:\n        open[i] = True\n\nc = 0\nfor i in range(s):\n    if open[i]:\n        c += 1\n    else:\n        break\n\nif c == n:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"}, "636": {"problem_id": 636, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nm = 0\nans = []\nfor i in range(k):\n    ans.append(i + 1)\n    m = max(m, a[i])\n    a[i] -= m\nprint(m)\nprint(' '.join(map(str, ans)))"}, "637": {"problem_id": 637, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] == 1:\n        s += 1\n    else:\n        s -= 1\nprint('YES' if s % 2 == 0 else 'NO')"}, "638": {"problem_id": 638, "answer": "n,m=map(int,input().split())\nt=list(map(int,input().split()))\nt.sort()\nans=0\nfor i in range(n):\n    if t[i]<m:\n        ans+=1\nprint(ans)"}, "639": {"problem_id": 639, "answer": "import sys\nread = sys.stdin.readline\n\nn, x = map(int, read().split())\nt = list(map(int, read().split()))\n\nmex = t[0]\nfor i in range(1, n):\n    if t[i] == mex:\n        mex *= -1\n    else:\n        mex += 1\nprint(max(mx - 1, 0))"}, "640": {"problem_id": 640, "answer": "a,b=map(int,input().split())\nc=0\nd=0\ne=0\nfor i in range(1,7):\n    if a[i]-b[i]!=0:\n        c+=1\n    elif a[i]-(b[i])!=0:\n        d+=1\n    else:\n        e+=1\nprint(c,d,e)"}, "641": {"problem_id": 641, "answer": "s=input()\nweek=s.split(' of week')\nweek[0]=int(week[0])\nmonth=s.split(' of month')\nmonth[0]=int(month[0])\nprint(sum([int(i) for i in week[1:]]+[int(i) for i in month[1:]]))"}, "642": {"problem_id": 642, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    clean = [False] * (n + 1)\n    for i in range(1, n):\n        clean[i] = True\n    p = 0\n    q = len(clean)\n    while p < q:\n        mn = p + 2\n        for i in range(min(m, n - m)):\n            if clean[i] and mn + 1 < q:\n                print(\"YES\")\n                q = mn + 1\n                break\n        clean[mn] = False\n        p += 1\n    else:\n        print(\"NO\")"}, "643": {"problem_id": 643, "answer": "import sys\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        x, y, p, q = list(map(int, input().split()))\n        if p / q == 1.0:\n            print(0)\n            continue\n        if p > q:\n            print(-1)\n            continue\n        y -= 1\n        p *= y\n        q *= y\n        if p / q == 0.0:\n            print(-1)\n            continue\n        print(2 * y - 1)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "644": {"problem_id": 644, "answer": "l = int(input())\nfor i in range(l):\n    c = 0\n    n = int(input())\n    while n>0:\n        c += n%2\n        n = n//2\n    print(c)"}, "645": {"problem_id": 645, "answer": "s = input()\ncnt = 0\nfor i in range(len(s)):\n    if s[i] in 'aeiou':\n        cnt += 1\n    elif s[i] not in 'aeiou':\n        cnt += int(s[i]) & 1\nprint(cnt)"}, "646": {"problem_id": 646, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    ans.append((x, y))\n\nans.sort()\n\nfor i in range(n-1):\n    d = ans[i][0] - ans[i+1][0]\n    e = ans[i][1] - ans[i+1][1]\n    if d > 0:\n        d = abs(d)\n    elif e > 0:\n        e = abs(e)\n    else:\n        continue\n    t = min(abs(d), abs(e))\n    d = t**2\n    e = t**2 + d\n    if e > 0:\n        ans[i][1] += 1\n    else:\n        ans[i][1] = 1\n\nprint(ans[-1][1])"}, "647": {"problem_id": 647, "answer": "n = int(input())\ns = input().split(' ')\ns[1] = s[1][::-1]\nfor i in range(2, n):\n    if s[i] == 'L':\n        s[i] = s[i][::-1]\nprint(len(s),''.join(map(str, s)))"}, "648": {"problem_id": 648, "answer": "import sys\ninput = sys.stdin.readline\nM, B = map(int, input().split())\nans = 0\nfor i in range(M):\n    x, y = i*B, i*(-B)\n    if x+y<0:\n        x += B\n        y *= -B\n    d = abs(x)\n    ans += max(0, d//2)\nprint(ans)"}, "649": {"problem_id": 649, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nt = list(map(int, input().split()))\n\nvisited = [0]*30\nfor i in range(1, n+1):\n    visited[i] = 1\n    s = 0\n    for j in range(i):\n        s = (s + t[j])%2\n        if visited[s] == 0:\n            visited[s] = 1\n            s = (s + 45)%2\n        elif visited[s] == 1:\n            break\n"}, "650": {"problem_id": 650, "answer": "s = input()\n\nif s.isalnum():\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "651": {"problem_id": 651, "answer": "import sys\ninput = sys.stdin.readline\nM = [[] for i in range(30)]\nM[0] = ['.']\nM[1] = ['#', 'S']\ns = input().rstrip()\nn, m = list(map(int, s.split()))\nM[n-1].append('E')\nM[n-1] = M[n-1][::-1]\nm = len(M[n-1])\nans = 0\nfor i in range(m):\n    x = M[i]\n    d = ord(x[0])-97\n    ans += d*(d=='D')\n    d = ord(x[1])-97\n    ans += d*(d=='D')\nprint(ans)"}, "652": {"problem_id": 652, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ninp = lambda: list(map(int,sys.stdin.readline().rstrip(\"\\r\\n\").split()))\n\nn = int(input())\npoints = [tuple(inp()) for i in range(n)]\npar = [tuple(points[i] for i in range(n)) for i in range(n)]\nprint(sum([2 for i in range(n)]*(sum([1 for j in range(n)] if j!= i))))"}, "653": {"problem_id": 653, "answer": "n = int(input())\ns = input()\na = [0]*10\nfor i in range(n):\n    if s[i] == '0':\n        a[i] = '0'\n    elif s[i] == '1':\n        a[i] = '1'\n    else:\n        a[i] = str(a[i])\nprint(''.join(a))"}, "654": {"problem_id": 654, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\n\nn = int(input())\n\nedges = []\nfor i in range(1, n+1):\n    s = input()\n    edges.append((i, s))\n\nedges.sort()\n\nans = 1\ncurr = 0\nfor i in range(n):\n    ans = (ans * (curr+1)) % MOD\n    curr += 1\n\nprint(ans)"}, "655": {"problem_id": 655, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nx, y = map(int, input().split())\n\nif x == y:\n    print(\"White\")\nelse:\n    print(\"Black\")"}, "656": {"problem_id": 656, "answer": "from sys import stdin\ninput = stdin.readline\nn, k = list(map(int, input().split()))\nt = list(map(int, input().split()))\nres = 0\nfor i in range(k):\n    if t[i] < 0:\n        res += 1\n        t[i] = -t[i]\nprint(res)\n"}, "657": {"problem_id": 657, "answer": "a, b = map(int, input().split())\nc = list(map(int, input().split()))\nd = 0\nfor i in c:\n    d += i[1]\nprint(d)"}, "658": {"problem_id": 658, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nprint2 = lambda x,y: stdout.write(str(x)+\"\\n\")\nprint3 = lambda x,y,z: stdout.write(str(x)+\"\\n\"+str(y)+\"\\n\"+str(z))\ndef isValid(x,y):\n    if y<0 or y>=w:\n        return False\n    elif x<0 or x>=u:\n        return False\n    else:\n        return True\nn,w,v,u = list(map(int,input().split()))\nfor _ in range(n):\n    x,y = list(map(int,input().split()))\n    if isValid(x,y):\n        print(w*v)\n    else:\n        x-=v\n        y-=u\n        if isValid(x,y):\n            print(w*u)\n        else:\n            print(abs(x) + abs(y))\n"}, "659": {"problem_id": 659, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nd = deque()\nfor i in range(n):\n    d.append(a[i])\nif d[0] <= a[1] and d[1] <= a[2]:\n    print(-1)\nelse:\n    swap = 0\n    for i in range(2, n):\n        if d[i] > d[i-1]:\n            swap = 1\n            break\n    if swap:\n        print(a[1], a[0])\n    else:\n        print(-1)"}, "660": {"problem_id": 660, "answer": "n, b, p = list(map(int, input().split()))\nt = n//2 + b\nans = 0\nfor i in range(t):\n    k = n-i\n    if k<m:\n        ans+=b*p\n        k += 1\n    else:\n        ans+=b*p\n        k //= 2\nprint(ans)\n"}, "661": {"problem_id": 661, "answer": "import sys\nsys.setrecursionlimit(10 ** 6)\nINF = float('inf')\nMOD = 10 ** 9 + 7\ninput = lambda: list(map(int, input().split()))\nM, K = list(map(int, input().split()))\nxor = [0] * (2 ** M)\nfor m in range(1, M + 1):\n    xor.append(xor[-1] ^ m)\n    xor.append(xor[-1] ^ pow(2, m - 1, MOD))\nprint((-1, []))\nfor i in range(M):\n    a = bin(K)[2:][int(bin(i)[2:]):]\n    print(a, end=\" \")\n"}, "662": {"problem_id": 662, "answer": "n = int(input())\na = []\nfor i in range(n):\n    a.append(tuple(map(int, input().split())))\nprint('YES' if sum(a) % 3 == 0 else 'NO')"}, "663": {"problem_id": 663, "answer": "from math import *\nR,C=map(int,input().split())\ns=0\nfor i in range(1,R+1):\n    for j in range(i,R):\n        s+=i**2+j**2\nprint(s)"}, "664": {"problem_id": 664, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 0\nfor i in range(n):\n    if a[i] > a[i-1]:\n        m += 1\nprint(m)"}, "665": {"problem_id": 665, "answer": "t = int(input())\nfor _ in range(t):\n    n, s = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans = max(ans, arr[i] - s)\n    print(ans)"}, "666": {"problem_id": 666, "answer": "n = int(input())\na = []\nfor i in range(n):\n    a.append(bin(i).replace('0b','')[2:])\nprint(a[n-1])"}, "667": {"problem_id": 667, "answer": "from collections import deque\nn = int(input())\na = [tuple(map(int, input().split())) for _ in range(n)]\ns = sorted(a, reverse=True)\nd = deque()\nfor i in range(n):\n    d.append(s[i])\n    \nwhile d[0] <= 100:\n    c = d.popleft()\n    for i in range(1, len(d)):\n        if d[i] <= c:\n            d.append(d[i])\n            \nprint(max(d))"}, "668": {"problem_id": 668, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] <= i - 1:\n        s += 1\n    elif a[i] <= i - 2:\n        s += 2\n    else:\n        s += 3\nprint(s)\n"}, "669": {"problem_id": 669, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\np=[]\nfor i in range(n):\n    p.append(a[i]%m)\nans=0\nfor i in range(n):\n    ans=max(ans,p[i])\nprint(ans)\n"}, "670": {"problem_id": 670, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nINF = float('inf')\nMOD = 10**9+7\ndef main():\n    a, b, c = list(map(int, input().split()))\n    x1, y1, x2, y2 = list(map(int, input().split()))\n    a -= x1\n    b -= y1\n    c -= abs(x1-x2)\n    a += x2\n    b += y2\n    print(min(a, b) * c)\n    return\nmain()\n"}, "671": {"problem_id": 671, "answer": "n = int(input())\nprint(n+1)"}, "672": {"problem_id": 672, "answer": "import math\na,b=list(map(int,input().split()))\nm=math.pi//2\nif a%m==0:\n    print(b)\nelse:\n    print(\"infinity\")\n"}, "673": {"problem_id": 673, "answer": "import sys\nn,k=list(map(int,sys.stdin.readline().split()))\nif n<=k:\n    print(n)\nelse:\n    print(k)"}, "674": {"problem_id": 674, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = [input().split() for i in range(n)]\n\ns = set()\n\ndef isGood(s, i):\n    nonlocal s\n    s.add(i)\n    return all(s[i] in s for i in range(len(s)))\n\nans = \"\"\nfor i in range(n):\n    ans += A[i]\n\nif isGood(s, 0):\n    print(ans)\n    return\n\nd = {}\nd[0] = 1\nans = \"\".join(sorted(ans))\n\nfor i in range(1, n):\n    if isGood(s, i):\n        d[i] = d[i - 1] + 1\n    else:\n        d[i] = 1\n\ncnt = 0\nfor i in range(len(ans) + 1):\n    if d[ans[i]] > cnt:\n        cnt = d[ans[i]]\n\nif cnt == 0:\n    print(\"NO\")\nelse:\n    print(ans)"}, "675": {"problem_id": 675, "answer": "m, t, r = list(map(int, input().split()))\nw = list(map(int, input().split()))\ncandles = [0] * 300\nfor i in range(m):\n    candles[i] = int(input()) + 1\nr = min(w)\nans = candles[r]\nfor i in range(1, r + 1):\n    if candles[i] < r:\n        ans -= 1\nprint(ans)\n"}, "676": {"problem_id": 676, "answer": "n = int(input())\nans = []\nfor i in range(n):\n    a = int(input())\n    ans.append(a)\nprint(\"YES\" if len(ans) == 4 - n else \"NO\")\nfor i in ans:\n    print(i, end = \" \")"}, "677": {"problem_id": 677, "answer": "q = int(input())\nfor _ in range(q):\n    l, r, d = list(map(int, input().split()))\n    ans = l + 2 * (r - l)\n    if d % l == 0:\n        ans = min(ans, l)\n        ans //= d\n    else:\n        ans = min(ans, r)\n        ans //= d\n    print(ans)\n"}, "678": {"problem_id": 678, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nread = lambda x: list(map(int, x.split()))\n\ndef main():\n    n = read()\n    print(0.5*abs(n), end=\"\")\n    for i in range(1, 11):\n        print(0.5*abs(n+i), end=\"\")\n    print()\n\ndef __starting_point():\n    main()\n__starting_point()"}, "679": {"problem_id": 679, "answer": "s = input()\nc = 0\nfor i in range(len(s)):\n    if s[i] == '.':\n        c += 1\n    elif s[i] in 'ABDC' and c == 2:\n        print('Yes')\n        break\n    elif s[i] in 'ABC' and c == 2:\n        print('Yes')\n        break"}, "680": {"problem_id": 680, "answer": "import sys\ninput = sys.stdin.readline\n \ndef main():\n    xA, yA = map(int, input().split())\n    xB, yB = map(int, input().split())\n    xC, yC = map(int, input().split())\n    \n    if xA%2!=0:\n        xA//=2\n    elif yA%2!=0:\n        yA//=2\n    \n    if xB%2!=0:\n        xB//=2\n    elif yB%2!=0:\n        yB//=2\n    \n    if xC%2!=0:\n        xC//=2\n    elif yC%2!=0:\n        yC//=2\n    \n    print(3)\n    print(*main())\n    return\nmain()"}, "681": {"problem_id": 681, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nn,m = map(int,input().split())\nif n==1:\n    print(1)\nelif n==2:\n    print(2)\nelse:\n    a = bin(n)[2:].count('1')\n    b = bin(m)[2:].count('1')\n    c = pow(2,a-2,MOD)\n    d = pow(2,b-2,MOD)\n    e = d*m\n    f = e*(m-1)\n    g = pow(2,c-2,MOD)\n    h = g*(m-1)\n    print(f%MOD)"}, "682": {"problem_id": 682, "answer": "import sys\nreadline = sys.stdin.readline\nR,C = list(map(int,readline().split()))\nans = 0\nfor i in range(8):\n    ans += max(R[i]+C[i],1)\nprint(ans)"}, "683": {"problem_id": 683, "answer": "n = int(input())\nprint(n ** 0.5)"}, "684": {"problem_id": 684, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    a,b,c,d=list(map(int,input().split()))\n    m=min(a,b)+c\n    n=max(c,d)+d\n    print(m,n)\n"}, "685": {"problem_id": 685, "answer": "import sys\ninput = sys.stdin.readline\n\nn, h = map(int, input().split())\nsegs = sorted([int(x) for x in input().split()])\n\nm = h-max(segs)\nans = 1000000000\nfor i in range(n):\n    x1, x2 = map(int, input().split())\n    ans = max(ans, m-abs(x1-x2))\nprint(ans)"}, "686": {"problem_id": 686, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    x, y = map(int, readline().split())\n    if x == y:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "687": {"problem_id": 687, "answer": "import sys\nreadline = sys.stdin.readline\n\nD = {i:int(n) for i,n in enumerate(readline().split())}\ns = str(D.get(i))\nn = len(s)\nans = \"\"\nfor i in range(10):\n    if n%10==i:\n        ans += s[n//10]\n        n -= n//10\nprint(int(ans,2))"}, "688": {"problem_id": 688, "answer": "t = int(input())\ns = input()\na = [0] * 10\nfor i in s:\n    a[i] += 1\nprint(sum(a))"}, "689": {"problem_id": 689, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = [i for i in input().split()]\n    b = set(a)\n    print('YES' if len(a) == len(b) else 'NO')\n"}, "690": {"problem_id": 690, "answer": "n = int(input())\nprint(\"\".join([\"OO-\" + str(i) + \"-\" for i in range(n)]) + [\"|\" * (n - i) for i in range(n)]) + [\"-\" * (n - i) + \"O\" * (n - i) for i in range(n)])\n"}, "691": {"problem_id": 691, "answer": "def main():\n    n, x = map(int, input().split())\n    if x == 0:\n        print(\"NO\")\n    else:\n        d = [0] * (10 ** 6 + 1)\n        d[0] = n\n        for i in range(1, 10 ** 6 + 1):\n            d[i] = sum(d[i - j] for j in range(10 ** 6))\n        print(\"YES\")\n        for i in d:\n            print(i, end=\" \")"}, "692": {"problem_id": 692, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\nM,R=list(map(int,input().split()))\nfor i in range(n):\n    M[i]=R[i]\n    R[i]+=M[i]\nans=0.500000\nfor i in range(1,17):\n    ans+=((M[i]-R[i])/(n-i+1))**2\nprint(\"{0:.6f}\".format(ans))"}, "693": {"problem_id": 693, "answer": "n, m = list(map(int, input().split()))\nk = list(map(int, input().split()))\nk.sort()\ncounts = [0] * m\nfor i in range(m):\n    counts[k[i]] += 1\n    \ndef find(x):\n    if x == 1:\n        return x\n    else:\n        x -= 1\n        while x!= 0:\n            x //= 2\n        return x\n    "}, "694": {"problem_id": 694, "answer": "import sys\nread = sys.stdin.readline\n\nN = int(read())\nA, B = map(int, read().split())\nM = A // B\nP = pow(10, M-2, M)\nS = (1 << (M-1)) - 1\nres = [S]\nfor i in range(1, N+1):\n    if A%i == 0:\n        res.append(pow(10, i, M) * S)\n    elif B%i == 0:\n        res.append(pow(10, i, M) * (S+1))\n    else:\n        break\nif len(res) == 0:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(\"\".join(res))"}, "695": {"problem_id": 695, "answer": "a = input().split(' ')\na = [int(x) for x in a]\nn = len(a)\nans = 0\nfor i in range(n):\n    if a[i] == 1:\n        ans += 1\nprint(ans)"}, "696": {"problem_id": 696, "answer": "import math\np = int(input())\na = []\nfor i in range(2, p):\n    a.append(i)\na.sort()\nans = 0\nfor i in range(len(a)):\n    if a[i] == 1:\n        ans += 1\nprint(ans)"}, "697": {"problem_id": 697, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 1000000007\nfac = [1]\nfor i in range(1,20000000):\n    fac.append(fac[i]*i)\nfac.append(1)\ndp = [[0]*(2+2*m) for m in range(2+2*len(fac))]\nfor i in range(2,2+2*len(fac)):\n    for j in range(i):\n        dp[i][j] = dp[i-1][j] + fac[i-1]*fac[j]\nans = 0\nfor i in range(2,2+2*len(fac)):\n    ans = (ans + dp[i][0])%MOD\nprint(ans)"}, "698": {"problem_id": 698, "answer": "import sys\nreadline = sys.stdin.readline\n\nx, k = list(map(int, readline().split()))\n\nres = []\nfor i in range(k):\n    s = list(map(int, readline().split()))\n    res.append(s[1]-s[0])\n\nprint(max(res), max(res[1:]))\n"}, "699": {"problem_id": 699, "answer": "y, k, n = list(map(int, input().split()))\n\nif k % 100!= 0:\n    print(-1)\nelse:\n    ans = 0\n    for i in range(1, y + 1):\n        if i % k == 0:\n            ans += 1\n    print((\" \".join(map(str, ans))))\n"}, "700": {"problem_id": 700, "answer": "import sys\nimport math\n \ndef main():\n    n = int(input())\n    a = input().split(' ')\n    a = [int(x) for x in a]\n    \n    if n == 1:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n \n    \n    \n "}, "701": {"problem_id": 701, "answer": "s = input()\nt = input()\nn = len(s)\nm = len(t)\n\ntree = [None]*n\nsuffix = [set() for i in range(n)]\nfor i in range(n):\n    suffix[i] = set()\n    tree[i] = s[i]\n    suffix[i].add(i)\n\nfor i in range(m):\n    suffix[i].add(i)\n    tree[i] = t[i]\n    suffix[i].add(i)\n\nprint(\"need tree\" if tree else \"automaton\" if s not in suffix else \"array\" if t not in suffix else \"both\")"}, "702": {"problem_id": 702, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ntiles = []\nfor i in range(n):\n    s = input()\n    tiles.append(s)\n\nans = ['#' for i in range(n)]\n\nfor i in range(n):\n    for j in range(n):\n        if tiles[j][i] == '.':\n            continue\n        else:\n            ans[j] = '#'\n            j += 1\n\nif '#' in ans:\n    print('YES')\n    return\n\nfor i in range(n):\n    for j in range(n):\n        if j == 0:\n            t = tiles[j]\n        elif j == n - 1:\n            t = tiles[j]\n        else:\n            t = ans[j]\n            j += 1\n        "}, "703": {"problem_id": 703, "answer": "import math\ndef isDivisor(n):\n    count = 0\n    for i in range(1, int(math.sqrt(n))+1):\n        if n % i == 0:\n            count += 1\n            if count == i:\n                return True\n    return False\nk,a,b,v = list(map(int, input().split()))\nt = k//a + (k%a==0)\nu = sum(1 for i in range(a+1))\ns = k%v + (k%v==0)\nprint(max(isDivisor(t),isDivisor(u),isDivisor(s)))\n"}, "704": {"problem_id": 704, "answer": ""}, "705": {"problem_id": 705, "answer": "from math import ceil\nn = int(input())\na, b = list(map(int, input().split()))\ns, t = list(map(int, input().split()))\nk, p = {}, {}\nfor i in range(n):\n    k[a[i]] = i\n    p[a[i]] = i\nfor i in range(n):\n    for j in range(n):\n        if s[i] == j:\n            k[j] = min(k.get(j, i), j)\n        else:\n            k[j] = max(k.get(j, i), j)\n            \nfor i in range(n):\n    if t[i] == i:\n        k[i] = min(k.get(i, n), n)\n    else:\n        k[i] = max(k.get(i, n), n)\nprint('Karen' if k[1] % 2 == 0 else 'Koyomi')\n"}, "706": {"problem_id": 706, "answer": "from math import gcd\na, b, n, x = list(map(int, input().split()))\ng = x // (10 ** 9 + 7)\nprint(g * a % gcd(a, b) * b % gcd(a, b))\n"}, "707": {"problem_id": 707, "answer": "n, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append(min(a[i], b[i] + m))\n\nprint('YES\\n'.join(ans))\ny, j = map(int, input().split())\nif y < j:\n    print('NO')\n    return\n\np = b[j] - a[i]\ni = j\nwhile i < n:\n    if a[i] < b[i]:\n        i += 1\n    else:\n        break\nj += 1\n\nprint('YES\\n'.join(ans))\nprint(y, j)"}, "708": {"problem_id": 708, "answer": "import sys\ndef I(): return sys.stdin.readline().rstrip()\ndef MI(): return map(int, I().split())\ndef LI(): return list(map(int, I().split()))\nn, k = MI()\na, b, c, d = MI()\ng = [[] for _ in range(n)]\nfor i in range(1, n):\n    g[a].append(i)\n    g[b].append(i)\n    g[c].append(i)\n    g[d].append(i)\nvisited = [0] * n\nvisited[a] = 1\nvisited[b] = 1\nvisited[c] = 1\nvisited[d] = 1\nq = []\ns = set()\nwhile q:\n    t = q[-1]\n    s.add(t)\n    for i in g[t]:\n        if visited[i]:\n            continue\n        q.append(i)\nprint(' '.join(map(str, q)))"}, "709": {"problem_id": 709, "answer": "x = int(input())\nprint(2 + min(x // 3, x % 3))"}, "710": {"problem_id": 710, "answer": "n = int(input())\ns = input()\na = [0] * 26\nfor i in range(97, 97 + 26):\n    a[ord(s[i]) - ord('A')] += 1\nprint(n - max(a))"}, "711": {"problem_id": 711, "answer": "import sys\nreadline = sys.stdin.readline\n\nMOD = 10**9 + 7\n\nN, M = list(map(int, readline().split()))\n\nres = 0\nfor i in range(N):\n    a = [1] + list(map(int, readline().split()))\n    res = (res + (sum(a) % MOD)) % MOD\nprint(res)"}, "712": {"problem_id": 712, "answer": "import sys\nread = sys.stdin.readline\n\nn, p, t = map(int, read().split())\n\nans = 0\ncnt = 0\nfor i in range(t):\n    cnt += (p * (1 - p))\n    ans += pow(p, i+1)\nprint(ans)"}, "713": {"problem_id": 713, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\n\ndef find_nearest(x):\n    d = 0\n    for i in range(n):\n        if x[i] > d:\n            d = x[i]\n    return d\n\nans = []\nfor i in range(1, 100):\n    ans.append((i, find_nearest(i)))\n\nprint(len(ans))\nprint(*ans, sep='\\n')"}, "714": {"problem_id": 714, "answer": "n = int(input())\na = list(map(int, input().split()))\np = []\nfor i in range(n//2):\n    p.append(a[i])\nans = 0\nfor i in range(n//2):\n    for j in range(i+1, n//2):\n        ans += p[j] - p[i]\n        p[i] = p[j]\nprint(ans)"}, "715": {"problem_id": 715, "answer": "a = list(map(int,input().split()))\ns = 0\nfor i in range(3):\n    if a[i]<a[i-1]:\n        s+=1\nprint('%s%s%s' %(a[s-1],a[s-2],a[s-3],a[s-4]))"}, "716": {"problem_id": 716, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, a, b = list(map(int, readline().split()))\nst = list(map(int, readline().split()))\nd = {}\nfor i in range(n):\n    d[st[i]] = i\nans = 0\ncompanies = [1]\nfor i in range(n):\n    companies.append(companies[-1] + d[i])\ncompanies.sort()\nans += companies[n - 1] - companies[n]\nprint(ans)\n"}, "717": {"problem_id": 717, "answer": "n = int(input())\na = sorted(map(int, input().split()), reverse=True)\nprint(max(a[-1], a[0] + a[1]))"}, "718": {"problem_id": 718, "answer": "a=input()\nif a.isdigit():\n    b=int(a)\n    print(b)\nelse:\n    print(8)"}, "719": {"problem_id": 719, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\ndef main():\n    k = int(input())\n    print(10**k)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "720": {"problem_id": 720, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import deque,defaultdict\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n \nM = defaultdict(int)\nfor i in range(int(input())):\n    M[int(input().split())]+=1\nINF = float('inf')\nMOD = int(1e9)+7\nI = lambda:list(map(int,input().split()))\nprint(max(bl(M,INF),br(M,MOD)))"}, "721": {"problem_id": 721, "answer": "n, d = list(map(int, input().split()))\na = list(map(int, input().split()))\nm = int(input())\np = sum(a) - min(a)\nprint(p)\n"}, "722": {"problem_id": 722, "answer": "import sys\ninput=sys.stdin.readline\nabbrevs=[]\nfor i in range(int(input())):\n    s=input()\n    if len(s)==9:\n        abbrevs.append(s)\n    else:\n        s=s[1:]\n        if s[0]=='0' or s[0]=='9':\n            continue\n        else:\n            a=int(s[0])\n            b=s[1:]\n            c=a*10+b\n            if c<=9:\n                abbrevs.append(c)\n                break\nprint((' '.join(map(str,abbrevs))))"}, "723": {"problem_id": 723, "answer": ""}, "724": {"problem_id": 724, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint = stdout.write\nn, d = list(map(int, input().split()))\npoints = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if points[i] - points[i - 1] > d:\n        cnt += 1\nprint(cnt)\n"}, "725": {"problem_id": 725, "answer": "import sys\nread = sys.stdin.readline\n\nn, m = map(int, read().split())\n\nans = ['#Color'] * n\nans = sorted(ans, key=lambda x: x[0])\n\nfor i in range(n):\n    ch = read().rstrip()\n    if ch.count('W') == 0:\n        ans[i] = '#Black&White'\n    elif ch.count('B') == n - 1:\n        ans[i] = '#Black&White'\n    else:\n        ans[i] = ch\n\nprint('\\n'.join(ans))"}, "726": {"problem_id": 726, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, d = list(map(int, readline().split()))\ns = list(map(int, readline().split()))\ns.sort()\ncnt = 0\nfor i in range(n):\n    if s[i] == -1:\n        continue\n    else:\n        cnt += (abs(s[i] - d) // d)\nprint(cnt)\n"}, "727": {"problem_id": 727, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\ncnt = 0\nd = {}\nfor i in a:\n    d[i] = d.get(i, 0) + 1\n    cnt += d[i]\n    if cnt == n:\n        break\nprint(cnt)"}, "728": {"problem_id": 728, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\na = list(map(int,read().split()))\ncnt = [0]*n\nfor i in range(n):\n    cnt[i] += a[i]\nprint(min(cnt))\n"}, "729": {"problem_id": 729, "answer": "n = int(input())\ns = input()\na = []\nfor i in range(n):\n    a.append(s[i:i+len(s)])\nans = \"YES\"\nfor i in range(len(a)):\n    if len(set(a[i])) == len(a[i]):\n        ans = \"YES\"\n        break\nprint(ans)"}, "730": {"problem_id": 730, "answer": "import sys\nimport math\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nk = int(readline())\n\ndef print_occupy(x):\n    if x == 'O':\n        return\n    print('+------------------------+')\n    print('|'.join(['O' if x.count('O') == 1 else '#' for x in readline().strip()]))\n    print('+------------------------+')\n    print('|'.join(['D' if x.count('D') == 1 else '#' for x in readline().strip()]))\n    print('+------------------------+')\n    print('|'.join(['D' if x.count('D') == 1 else '#' for x in readline().strip()]))\n    print('+------------------------+')\n    print('|'.join(['D' if x.count('D') == 1 else '#' for x in readline().strip()]))\n    print('+------------------------+')\n    print('|'.join(['D' if x.count('D') == 1 else '#' for x in readline().strip()]))\n    print('+------------------------+')\n    print('|'.join(['D' if x.count('D') == 1 else '#' for x in readline().strip()]))\n    print('+------------------------+')\n    print('|'.join(['D' if x.count('D') == 1 else '#' for x in readline().strip()]))\n"}, "731": {"problem_id": 731, "answer": "w,m,k = list(map(int, input().split()))\ns = 0\nfor i in range(1, 100):\n    s += w\n    t = m + k\n    while t < i:\n        t += w\n        s += 1\n    print(s)\n"}, "732": {"problem_id": 732, "answer": "n = int(input())\nans = 0\nfor i in range(1, 10):\n    if str(i) not in str(n)[:n].upper():\n        ans += 1\nprint(ans)"}, "733": {"problem_id": 733, "answer": "import sys\ninput=sys.stdin.readline\n\na,b=list(map(int,input().split()))\n\nif a<2*10**5+b:\n    print(0)\nelse:\n    red=a\n    pink=b\n    print(red+pink)\n"}, "734": {"problem_id": 734, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    a[i] -= 1\n    if a[i] <= 0:\n        ans = max(ans, i)\nprint(ans)\n"}, "735": {"problem_id": 735, "answer": "import sys\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 1:\n        print(\"yes\")\n        print(1, end=\" \")\n    elif n%2 == 0:\n        p = a[0]\n        q = a[n-1]\n        if p > q:\n            print(\"no\")\n        else:\n            rev = p\n            p = q\n            q = rev\n            print(p, end=\" \")\n            print(q, end=\" \")\n            print(a[0], end=\" \")\n            print(a[n-1], end=\" \")\n            print(a[n], end=\" \")\n            print(len(a), end=\" \")\n            print(sorted(a), end=\" \")\n            print(reversed(a), end=\" \")\n            print(a.pop(p), end=\" \")\n            print(a.pop(q), end=\" \")\n            print(a.pop(p), end=\" \")\n            print(a.pop(q), end=\" \")\n            print(a.pop(p), end=\" \")\n            print(a.pop(q), end=\" \")\n            print(a.pop(p), end=\" \")\n            print(a.pop(q), end=\" \")\n            print(a.pop(p), end=\" \")\n            print(a.pop(q), end=\" \")\n            print(a.pop(p), end=\" \")\n            print(a.pop(q), end=\" \")\n            print(a.pop(p), end=\" \")\n            print(a.pop(q), end=\" \")\n            print(a.pop(p), end=\" \")\n            print(a.pop(q), end=\" \")\n            print(a.pop(p), end=\" \")\n            print(a.pop(q), end=\" \")\n            print(a.pop(p), end=\" \")\n            print(a.pop(q), end=\" \")\n            print(a.pop(p), end=\" \")\n            print(a.pop(q), end=\" \")\n            print(a.pop(p), end=\" \")\n            print(a.pop(q), end=\" \")\n            print(a.pop(p), end=\" \")\n            print(a.pop(q), end=\" \")\n            print(a.pop(p), end=\" \")\n  "}, "736": {"problem_id": 736, "answer": "import sys\ndef II():\n\treturn int(sys.stdin.readline())\n \ndef MI():\n\treturn map(int,sys.stdin.readline().split())\n \ndef LI():\n\treturn list(map(int,sys.stdin.readline().split()))\n \ndef LI2():\n\treturn list(map(int,sys.stdin.readline().split(1)))\n \ndef MI2():\n\treturn map(int,sys.stdin.readline().split())\n \ndef SI():\n\treturn sys.stdin.readline().rstrip()\n \ndef SI2():\n\treturn sys.stdin.readline().rstrip()\n \ndef LS():\n\treturn list(map(int,sys.stdin.readline().split()))\n \ndef LS2():\n\treturn list(map(int,sys.stdin.readline().split(1)))\n \ndef I():\n\treturn ord(sys.stdin.readline())+97\ndef LI():\n\treturn list(map(int,sys.stdin.readline().split()))\ndef LIs():\n\treturn list(map(int,sys.stdin.readline().split(1)))\ndef SR():\n\treturn sys.stdin.readline().rstrip()\ndef SIs():\n\treturn sys.stdin.readline().rstrip()\nn,m=MI()\nif n%m!=0:\n\tprint(-1)\nelse:\n\tprint(n-1)"}, "737": {"problem_id": 737, "answer": "import sys\ndef main():\n    n = int(input())\n    ans = sys.maxsize\n    m = n*n\n    for i in range(1,n):\n        m = min(m,i*i)\n        ans = min(ans,i*m)\n    print(ans)\nmain()"}, "738": {"problem_id": 738, "answer": "A, B, C, D = list(map(int, input().split()))\nans = 0\nfor i in range(1, A+1):\n    for j in range(i, A+1):\n        for k in range(j, A+1):\n            if i+k < B+1:\n                ans += 1\n            elif j+i < C+1:\n                ans += 1\n            else:\n                ans += 2\nprint(ans)\n"}, "739": {"problem_id": 739, "answer": "import bisect\ninput = lambda : list(map(int, input().split()))\nL = int(input())\nM = 1000000007\nans = 0\na, b, c, d, e, f, g, h, i, j = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 4"}, "740": {"problem_id": 740, "answer": "import sys\nreadline = sys.stdin.readline\ns = readline().strip()\nn, m, t, s1, s2, s3 = map(int, s.split())\ncnt = 0\nd = [[] for _ in range(n)]\nfor i in range(1, n):\n    d[i].append(i)\n    cnt += t\n    if len(d[i]) > 1:\n        d[i].pop()\n    else:\n        d[i].append(i)\nprint(min(m, cnt))"}, "741": {"problem_id": 741, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+3\nn, m = map(int, readline().split())\na = list(map(int, readline().split()))\nt = INF\nfor i in range(n):\n    t = min(t, a[i] - i + m)\nprint(t)"}, "742": {"problem_id": 742, "answer": "import bisect\nimport heapq\nimport itertools\nimport sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    print(*a)"}, "743": {"problem_id": 743, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = 0\nans = 0\nfor i in range(1, n):\n    if a[i] < a[i - 1]:\n        b = i\n    elif a[i] > a[i - 1]:\n        b = i - 1\n    ans = min(ans, b + 1)\nprint(ans)\n"}, "744": {"problem_id": 744, "answer": "n = int(input())\ns = input()\ncount = 0\nfor i in range(n):\n    if s[i] == 'S':\n        s = s[:i] + s[i+1:]\n    elif s[i] == 'F':\n        s = s[:i] + s[i+1:]\n    count += abs(ord(s[i]) - ord('S'))\nif count > n//2:\n    print('YES')\nelse:\n    print('NO')"}, "745": {"problem_id": 745, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 998244353\nn, k = map(int, readline().split())\nif k == 0:\n    print(0)\nelif k == 1:\n    rook = [0] * (n + 1)\n    rook[0] = 1\n    rook[1] = 1\n    rook[2] = 1\n    rook[3] = 1\n    rook[4] = 1\n    rook[5] = 1\n    rook[6] = 1\n    rook[7] = 1\n    rook[8] = 1\n    rook[9] = 1\n    rook[10] = 1\n    rook[11] = 1\n    rook[12] = 1\n    rook[13] = 1\n    rook[14] = 1\n    rook[15] = 1\n    rook[16] = 1\n    rook[17] = 1\n    rook[18] = 1\n    rook[19] = 1\n    rook[20] = 1\n    rook[21] = 1\n    rook[22] = 1\n    rook[23] = 1\n    rook[24] = 1\n    rook[25] = 1\n    rook[26] = 1\n    rook[27] = 1\n    rook[28] = 1\n    rook[29] = 1\n    rook[30] = 1\n    rook[31] = 1\n    rook[32] = 1\n    rook[33] = 1\n    rook[34] = 1\n    rook[35] = 1\n    rook[36] = 1\n    rook[37] = 1\n    rook[38] = 1\n    rook[39] = 1\n    rook[40] = 1\n    rook[41] = 1\n    rook[42] = 1\n    rook[43] = 1\n    rook[44] = 1\n    rook[45] = 1\n    rook[46] = 1\n    rook[47] = 1\n    rook[48] = 1\n    rook[49] = 1\n    rook[50] = 1\n    rook[51] = 1\n    rook[52] = 1\n    rook[53] = 1\n    rook[54] = 1\n    rook[55] = 1\n    rook[56] = 1\n    rook[57] = 1\n    rook[58] = 1\n    rook[59] = 1\n    rook[60] = 1\n    rook[61] = 1\n    rook[62] = 1\n    rook[63] = 1\n    rook[64] = 1\n    rook[65] = 1\n    rook[66] = 1\n    rook[67] = 1\n    rook[68] = 1\n    rook[69] = 1\n    rook[70] = 1\n    rook[71] = 1\n    rook[72] = 1\n    rook[73] = 1\n    rook[74] = 1\n    rook[75] = 1\n    rook[76] = 1\n    rook[77] = 1\n    rook[78] = 1\n    rook[79] = 1\n    rook[80] = 1\n    rook[81] = 1\n    rook[82] = 1\n    rook[83] = 1\n    rook[84] = 1\n    rook[85] = 1\n    rook["}, "746": {"problem_id": 746, "answer": "import math\na,b = list(map(int,input().split()))\nn = int(input())\nc = 0\nfor i in range(n):\n    x,y,v = list(map(int,input().split()))\n    c += v**(0.5)\n    if x+y < 0:\n        x += y\n    if x+y>=a:\n        break\nprint(c/math.sqrt(a))\n"}, "747": {"problem_id": 747, "answer": "n, x = list(map(int, input().split()))\na = list(map(int, input().split()))\np = []\nfor i in range(n):\n    p.append([0, 0, a[i]])\ncnt = 0\nsaz = 0\nfor i in range(1, x+1):\n    if p[i][1] <= x:\n        cnt += p[i][0]\n        saz += abs(x-p[i][1])\n    else:\n        break\nprint(cnt + saz)\n"}, "748": {"problem_id": 748, "answer": "import bisect\nn = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\nans = []\nfor i in range(3):\n    if d.get(i)!= None:\n        ans.append(d[i])\nprint(' '.join(map(str, ans)))\n"}, "749": {"problem_id": 749, "answer": "s = input()\nn = len(s)\nc = 0\nd = 0\nfor i in range(n):\n    if s[i] == c:\n        c += 1\n    else:\n        d += 1\n    if d > n-i-1:\n        break\nprint(i+1)\n"}, "750": {"problem_id": 750, "answer": "import sys\ninput = sys.stdin.readline\nn, k = map(int, input().split())\nd = {1: [1] * n}\nfor i in range(2, n + 1):\n    d[i] = sorted(d[i - 1] + [i - k + 1] * i)[::-1]\nprint(min(d.values()))"}, "751": {"problem_id": 751, "answer": "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n    b.append(min(a)+max(a))\nans=0\nfor i in range(m):\n    if b[i]<m:\n        ans+=1\nprint(ans)\n"}, "752": {"problem_id": 752, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [input().split() for i in range(n)]\na.sort()\nb = [0] * n\nfor i in range(n):\n    b[i] = int(a[i][1])\n\nans = 0\nfor i in range(n):\n    if b[i] == 0:\n        ans += 1\n    else:\n        b[i] = ord(b[i]) - 65\nprint(ans)"}, "753": {"problem_id": 753, "answer": "from fractions import Fraction\na, b, c, d = list(map(int, input().split()))\nprint(Fraction(a * b // c, a * d // c, a // c))\n"}, "754": {"problem_id": 754, "answer": "n = int(input())\ns = input()\na = 0\nfor i in range(n):\n    if s[i] == 'R':\n        a += 1\nprint(a)"}, "755": {"problem_id": 755, "answer": "import sys\ninput=sys.stdin.readline\ndef main():\n    x=int(input())\n    print(x-x//2)\ndef __starting_point():\n    main()\n__starting_point()"}, "756": {"problem_id": 756, "answer": "n = int(input())\nt = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if t[i] > 15:\n        cnt += 1\nprint(cnt)"}, "757": {"problem_id": 757, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn, m, k = list(map(int, read().split()))\na = list(map(int, readline().split()))\n\ns = n+m\nb = [0]*s\nb[0] = 1\nfor i in range(1, s):\n    b[i] = b[i-1] + a[i]\nans = m+1\nfor i in range(s-1,-1,-1):\n    if b[i] <= k:\n        ans = min(ans, i+1)\nprint(ans)"}, "758": {"problem_id": 758, "answer": "n = int(input())\ns = input()\nc = 0\nred = []\nblue = []\nfor i in range(n):\n    if s[i] == 'R':\n        red.append(i)\n    else:\n        blue.append(i)\nc += len(red)\nc += len(blue)\nwhile True:\n    if red[0] == blue[0]:\n        red.pop(0)\n        blue.pop(0)\n    else:\n        red.append(blue.pop(0))\n        blue.append(red.pop(0))\n    c += 1\n"}, "759": {"problem_id": 759, "answer": "import math\nh,m=list(map(int,input().split()))\nN=list(map(int,input().split()))\np=list(map(int,input().split()))\nd=math.ceil((m-N)*p[0])\nc=p[1]\nn=0\nwhile 1\u2264d:\n    if d>0:\n        n+=d\n    d-=1\nif n<=3:\n    print(\"%.3f\"%n)\nelse:\n    print(\"%.3f\"%n+\"0\"*(3-n))\n"}, "760": {"problem_id": 760, "answer": "s = input()\nk = int(input())\nans = 0\nfor i in range(1, k+1):\n    ans = max(ans, len(s) - i)\nprint(ans)"}, "761": {"problem_id": 761, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(1, n):\n    ans = max(ans, a[i] - a[i - 1])\nprint(ans)"}, "762": {"problem_id": 762, "answer": "from sys import stdin\ninput = stdin.readline\nn, B = list(map(int, input().split()))\na = list(map(int, input().split()))\nodd = [0] * (n + 1)\neven = [0] * (n + 1)\nfor i in range(n):\n    if a[i] % 2 == 0:\n        odd[i] = even[i - 1] + 1\n    else:\n        even[i] = odd[i - 1] + 1\nprint(sum(odd) + sum(even))\n"}, "763": {"problem_id": 763, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = {0: 0}\nfor i in range(1, n):\n    d[a[i]] += 1\n    if a[i] not in d:\n        d[a[i]] = 1\nprint(min(d.values()))"}, "764": {"problem_id": 764, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\ns = list(map(int, readline().split()))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    xor = s[i - 1]\n    for j in range(i, n):\n        if s[j] == xor:\n            dp[i] += 1\n            break\n        xor = s[j]\nprint(dp[n])\n"}, "765": {"problem_id": 765, "answer": "t,s,q=list(map(int,input().split()))\nstart=0\nfinish=0\nwhile start<t:\n    s-=1\n    start+=q\n    print(start)\n    if s>0:\n        finish+=1\n        s-=1\n"}, "766": {"problem_id": 766, "answer": "s = input()\nn = len(s)\na = []\nfor i in range(n):\n    a.append(s[i])\nif n&1:\n    a.append(s[n-1])\nans = ['Yes']*n\nfor i in range(n):\n    for j in range(n):\n        if i&1 and a[i] == a[j]:\n            ans[j] = 'Yes'\n            break\nprint('\\n'.join(ans))"}, "767": {"problem_id": 767, "answer": "def main():\n    n, z = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if abs(x[i] - x[j]) >= z:\n                ans += 1\n    print(ans)\n\nmain()\n"}, "768": {"problem_id": 768, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ninp = lambda: list(map(int, input().split()))\n#______________________________________________________________________________________________________\n# from collections import defaultdict\n# import heapq\n# ____ ____ ____\n# __init__.py:\n#     Dict of friends.\n#     Key is item name.\n#     Value is number of friends who like it.\n# __thread: Python 2\n# pypy: Python 3\n#______________________________________________________________________________________________________\n# https://leetcode.com/problems/recommend-users-items/discuss/819910/Python-3-and-Python-2-are-equals\n# class User:\n#     def __init__(self):\n#         self.friends = defaultdict(lambda: 0)\n#     def like(self, item):\n#         self.friends[item] += 1\n#         print(self.friends)\n#     def get_friends(self):\n#         return self.friends\n#     def friend(self, item):\n#         print(item, self.friends[item])\n#         self.friends[item] += 1\n#         return True\n#     def dislikes(self, item):\n#         print(item, self.friends[item])\n#         self.friends[item] -= 1\n#         return self.friends[item] == 0\n#     def get_friends(self):\n#         return self.friends\n#     def like(self, item, friends=None):\n#         if friends is None:\n#             friends = self.get_friends()\n#         self.friends[item] += friends\n#         print(self.friends)\n#         return self.friends[item] >= len(friends)\n#     def __str__(self):\n#         return '\\n'.join('{}: {}'.format(item, self.get_friends()) for item in self.friends)\n#______________________________________________________________________________________________________\n# Decompose a list into a permutation of it's elements.\n# __thread: Python 3\n# pypy: Python 3\n#______________________________________________________________________________________________________\n# https://leetcode.com/problems/recommend-users-items/discuss/819910/Python-3-and-Python-2-are-equals\n# class User:\n#     def __init__(self):\n#         self.friends = defaultdict(lambda: 0)\n#     def like(self, item):\n#         self.friends[item] += 1\n#         print(self.friends)\n#     def get_friends(self):\n#         return self.friends\n#     def friend(self, item):\n#         print(item, self.friends[item])\n#         self.friends[item] += 1\n#         return True\n#     def dislikes(self, item):\n#         print(item, self.friends[item])\n#         self.friends[item] -= 1\n#         return self.friends[item] == 0\n#     def get_friends(self):\n#         return self.friends\n#     def like(self, item, friends=None):\n#         if friends is None:\n#             friends = self.get_friends()\n#         self.friends"}, "769": {"problem_id": 769, "answer": "from decimal import Decimal as Dec\na, b, c = list(map(int, input().split()))\nans = []\nwhile c.is_integer():\n    ans.append(Dec(c))\n    c = c//10\nprint(len(ans))\nfor i in ans:\n    print(i)\n"}, "770": {"problem_id": 770, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in a:\n    if i == 0:\n        d[i] = 1\n    else:\n        d[i] = 0\ncnt = 0\nfor i in d:\n    if d[i] == 0:\n        cnt += 1\nprint(cnt)"}, "771": {"problem_id": 771, "answer": "n, k, m = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    s.add(a[i])\nans = []\nfor i in range(n):\n    if abs(a[i] - i) % m == 0:\n        ans.append(i + k)\n    else:\n        ans.append('No')\nprint('Yes')\nfor i in ans:\n    print(i)\n"}, "772": {"problem_id": 772, "answer": "from collections import deque\nl = [int(i) for i in input().split()]\nl.sort()\nd = deque([0])\nfor i in range(1,101):\n    d.append(l[i])\n    if d[0] == 0:\n        l[i] = 1\n    else:\n        l[i] = 0\nprint(''.join(['1' if i == 1 else '0' for i in l]))"}, "773": {"problem_id": 773, "answer": "import sys\ninput = sys.stdin.readline\n\nn, q = list(map(int, input().split()))\n\nd = {}\nfor i in range(1, n+1):\n    d[i] = sum(int(x)**2 for x in input().split())\n\nans = 0\nfor i in range(len(d)):\n    if d[i] not in d:\n        ans += 1<<i\n\nprint(ans)\n"}, "774": {"problem_id": 774, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nx, y, n = map(int, input().split())\n\nf = [0] * (y + 1)\nans = float(\"inf\")\nfor i in range(1, y + 1):\n    if i % x == 0:\n        f[i] = abs(f[i] / x)\n        ans = min(ans, f[i])\nprint(\"{0:.6f}\".format(ans))"}, "775": {"problem_id": 775, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = map(int, input().split())\nh = list(map(int, input().split()))\n\ncups = [0]*n\nh[0] = 1\n\nfor i in range(1, n+1):\n    cups[i] = h[i]\n    cups[i] += cups[i-1]\n\nt = []\nfor i in range(k):\n    u, v = map(int, input().split())\n    t.append((u, v))\n\nt.sort()\n\np = t[0][0]\nh[p] = t[-1][0]\n\nans = p\n\nfor i in range(1, k):\n    ans = max(ans, h[i])\n\nprint(ans)"}, "776": {"problem_id": 776, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nINF = 10**9+7\ndef main():\n    a, b, c = list(map(int, read().split()))\n    m = int(readline())\n    P = []\n    for i in range(m):\n        P.append(readline())\n    P.sort()\n    r = 0\n    c_us = 0\n    c_ps2 = 0\n    for i in range(m):\n        if P[i][0] == 'U':\n            c_us += 1\n        elif P[i][0] == 'S':\n            c_ps2 += 1\n        else:\n            c_us = 0\n            c_ps2 = 0\n        r += c_us\n        c_us = 0\n        c_ps2 = 0\n    print(r, c_us)\nmain()"}, "777": {"problem_id": 777, "answer": "import sys\ns = input()\nn = len(s)\nans = 0\nfor i in range(n):\n    a = s[i]\n    ans += ord(a) - 97\nprint(ans)"}, "778": {"problem_id": 778, "answer": "n, k = list(map(int, input().split()))\nL = []\nfor i in range(k):\n    L.append((int(input()), input().split()))\ns = set()\ns.add((2, 0))\ns.add((1, 1))\ns.add((2, 1))\ns.add((3, 1))\ns.add((4, 1))\ns.add((2, 2))\ns.add((2, 3))\ns.add((3, 2))\ns.add((3, 3))\ns.add((4, 2))\ns.add((4, 3))\ns.add((4, 4))\ns.add((1, 4))\ns.add((2, 4))\ns.add((3, 4))\ns.add((4, 4))\nprint(sum(i * (i - 1) // 2 for i in s))\n"}, "779": {"problem_id": 779, "answer": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef iinput(): return int(input())\ndef ilookup(): return list(map(int, input().split()))\ndef isinstance(d, int, type must be int) :\n    return isinstance(d, mustbeinstance(str,HAVE_STR))\ndef str2bool(x): return True if x else False\ndef bool2str(b): return str(b) if hasstr(b) else b\ndef havenequiv(a,b): return a[0] == b[0] and a[1] == b[1]\ndef h2b(h,bl): return h*bl\ndef b2ha(b,h): return b*(h-1)\nn = iinput()\nl = list(inp)\nm = n//l[0]\nans = 1\nfor i in range(1,m+1):\n    ans*=(l[i]-l[i-1])\n    ans += l[i] - l[i-1]\nprint(ans)"}, "780": {"problem_id": 780, "answer": "import sys\ninput = sys.stdin.readline\n\nS = [0]\nfor i in range(1, 100001):\n    S.append(S[-1]+i)\n\nans = [-1] * 100001\nanswer = []\nfor s in S:\n    ans[len(s)] = s\n    answer.append(ans[len(s)])\n\nprint(' '.join(map(str, answer)))\n"}, "781": {"problem_id": 781, "answer": "w = input()\nb = input()\nc = [0]*8\nfor i in range(1,len(w)):\n    if w[i] == 'W':\n        c[i] = 1\n    elif w[i] == 'B':\n        c[i] = -1\nfor i in range(8):\n    print('YES' if c[i] == 0 else 'NO')"}, "782": {"problem_id": 782, "answer": "m = int(input())\nl = list(map(int, input().split()))\ns = [1]\nfor i in range(2, m):\n    for j in range(i):\n        s.append(s[j] * (i - j))\nprint(len(s))\nprint(' '.join(map(str, s)))\n"}, "783": {"problem_id": 783, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum([1 for i in range(n) if a[i] > a[i + 1] ]), end ='')\n"}, "784": {"problem_id": 784, "answer": "a,b=list(map(int,input().split()))\nif a==b:\n    print(\"NO\")\nelif a>b:\n    print(\"NO\")\n    return\nn=len(str(a))\na=list(str(a))\nc=0\nfor i in range(n):\n    if a[i]=='1':\n        a[i]='10'+a[i]\n    else:\n        c+=1\n        a[i]=''.join(a[i:i+c])\nprint(\"YES\")\nfor i in range(1,len(a)):\n    print(a[i],end=\" \")\n"}, "785": {"problem_id": 785, "answer": "import sys\nn, a, b = list(map(int, input().split()))\nans = 0\nm = n//6\nans = a*m + b*(n-m)\nprint(ans)\n"}, "786": {"problem_id": 786, "answer": "n = int(input())\na = [int(i) for i in input().split()]\na.sort()\nd = []\nfor i in range(n):\n    d.append(a[i] - a[i - 1])\n    if d[i] > 0:\n        d[i] = d[i] - 1\nans = 0\nfor i in range(n):\n    if d[i] > 0:\n        ans = max(ans, d[i] + a[i])\nprint(ans)"}, "787": {"problem_id": 787, "answer": "k = int(input())\ns = input()\nans = []\nfor i in range(k):\n    if s.find(s[i])!= -1:\n        ans.append(s[i])\n    elif s.find(\"\\n\") == -1:\n        ans.append(s[i])\nprint(\"YES\") if len(ans) == k else print(\"NO\")"}, "788": {"problem_id": 788, "answer": "s = input()\nn = len(s)\nprint(int(n) + 7)"}, "789": {"problem_id": 789, "answer": "n = int(input())\nlucky = ['4', '7']\nfor i in lucky:\n    if i in n:\n        print(i)\n"}, "790": {"problem_id": 790, "answer": "import sys\ninput = sys.stdin.readline\n\nN,K=list(map(int,input().split()))\nA=list(map(int,input().split()))\nD=list(map(int,input().split()))\n\nbonds=[]\nfor i in range(N):\n    if i not in bonds:\n        bonds.append(i+1)\n\nans=0\nfor i in range(len(bonds)):\n    if abs(A[i]-D[i])<ans:\n        ans=abs(A[i]-D[i])\n    else:\n        ans+=1\nprint(ans)\n"}, "791": {"problem_id": 791, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(n):\n    if s[i] == '1':\n        cnt += 1\nprint(cnt)"}, "792": {"problem_id": 792, "answer": "def main():\n    n, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if n % 2 == 0:\n        print(-1)\n        return\n    for i in range(n):\n        if a[i] < 0:\n            a[i] = 0\n            a.pop(i)\n        elif a[i] > 0:\n            a[i] *= -1\n            a.pop(i)\n        else:\n            a[i] += d\n            a.pop(i)\n            if a[i] < 0:\n                print(-1)\n                return\n    print(sum(a) // 2)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "793": {"problem_id": 793, "answer": "from collections import deque\nN, M = list(map(int, input().split()))\nS = [int(x) for x in input().split()]\nT = [int(x) for x in input().split()]\np = 10**9+7\nMOD = 10**9+7\n\ndef dfs(s, t, cur):\n    nonlocal MOD\n    MOD = cur\n    s.append(cur)\n    t.append(cur)\n    for i in range(N):\n        if S[i] == T[i]:\n            dfs(s, t, cur+1)\n            dfs(s, t, cur+2)\n            dfs(s, t, cur+3)\n\ndfs(1, 1, 0)\nprint(p % MOD)\n"}, "794": {"problem_id": 794, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**9+7\nns = lambda: list(map(int, readline().split()))\nni = lambda: int(readline())\nnl = lambda: \" \".join(reversed(readline().split()))\ner = lambda: \"Error: \" + str(sys.stdin.readline())\nprn = lambda x: print(*x, sep=\"\\n\")\n"}, "795": {"problem_id": 795, "answer": "n = int(input())\nans = [0]*3\nfor i in range(1,n):\n    a = (i**2 + n**2 - i)/2\n    b = (2*i - n**2)/2\n    c = (2*n**2 - i**2)/2\n    ans[0] = min(a,b,c)\nprint(ans[0])"}, "796": {"problem_id": 796, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+7\nn,k = map(int,readline().split())\nif k<2:\n    print(0)\n    return\nans = pow(k-1,n-1,MOD)\nfor i in range(n):\n    ans.extend([1,0])\n    ans.extend([0,1])\nprint(ans)"}, "797": {"problem_id": 797, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, a, b = list(map(int, input().split()))\ns = [list(map(int, input().split())) for i in range(n)]\n\ns[a][b] = s[b][a] = 0\nmx = max(s[a].count(m*i+j) for i in range(a))\nsm = min(s[b].count(m*i+j) for i in range(b))\n\nans = mx*sm\nprint(ans)\n"}, "798": {"problem_id": 798, "answer": "a, b, c = list(map(int, input().split()))\ns = 0\nfor i in range(1, min(a, b) + 1, 1):\n    s += i * (i + 1) // 2\n    if s > c:\n        break\nprint(s, end=' ')\n"}, "799": {"problem_id": 799, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(1, n+1):\n    if a[i] > s:\n        s = a[i]\nprint(s)"}, "800": {"problem_id": 800, "answer": "import math\nn = int(input())\nx = []\ny = []\nfor i in range(n):\n    x.append(list(map(int,input().split())))\n    y.append(list(map(int,input().split())))\nprint(math.sqrt((x[0][0]**2) + (x[0][1]**2) + (x[0][2]**2)))"}, "801": {"problem_id": 801, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\na = list(map(int, readline().split()))\nmxx = 0\nfor i in range(1, n):\n    if a[i] < a[i - 1]:\n        mxx = i\n    elif a[i] > a[i - 1]:\n        break\nprint(mxx + 1)"}, "802": {"problem_id": 802, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list(map(str, input().split()))\nans = 0\nfor i in range(n):\n    ans += s[i] == s[i - 1]\nprint(ans)\n"}, "803": {"problem_id": 803, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\ninp = list(read(0))\ns = 'x' * (n//2) + 'x' * (n//2-n%2)\nans = 0\nfor i in range(n):\n    if inp[i] == 'x':\n        ans += 1\nprint(ans)\nprint(s)"}, "804": {"problem_id": 804, "answer": "s = input()\nn = int(input())\nc = 0\nfor i in range(26):\n    if s[i] not in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\":\n        c += 1\nif c < n:\n    print(\"impossible\")\nelse:\n    print(c)"}, "805": {"problem_id": 805, "answer": "n = int(input())\nl, r = list(map(int, input().split()))\nprint(2 * n - 1)"}, "806": {"problem_id": 806, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\nfactorial = lambda x: 1 if x<1 else x*factorial(x-1)\n\n\nn, l, r = list(map(int, input().split()))\nnum = [0]*10**5\nnum[l] = 1\nnum[r+1] = 1\nfor i in range(10**5):\n    num[i] = num[i] + num[i]\nans = factorial(n+1)\nans %= 1000000007\nprint2(ans)\n"}, "807": {"problem_id": 807, "answer": "n,c=map(int,input().split())\nhoney=list(map(int,input().split()))\nr=0\ns=0\nfor i in range(n):\n    s+=(honey[i]*c)\n    r+=(honey[i]*c)\nprint(s//r)"}, "808": {"problem_id": 808, "answer": "import decimal\ninput = decimal.getcontext()\ns = input()\nexp = \"E\" * (len(s) - 1)\ni = 0\nwhile i < len(s):\n    exp += s[i]\n    i += 1\nprint(exp)"}, "809": {"problem_id": 809, "answer": "n, k, a, b = list(map(int, input().split()))\nteas = []\nfor i in range(n):\n    teas.append(i + 1)\nif a + b == n:\n    print('NO')\n    return\nt = 0\nr = n\nwhile t < k:\n    teas[t] -= 1\n    t += 1\n    if teas[t] == 0:\n        r -= 1\n    elif teas[t] > n:\n        r -= teas[t]\n        teas.pop(t)\nif r < n:\n    print('NO')\n"}, "810": {"problem_id": 810, "answer": "a, b, n = list(map(int, input().split()))\ns = int(n **.5)\nr = a % 1000000007\nt = pow(10, b - 10, s)\nprint(t * t % 1000000007)\n"}, "811": {"problem_id": 811, "answer": "a, b = map(int, input().split())\nprint(b // (a + 1) + b % (a + 1))"}, "812": {"problem_id": 812, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\np = [0]*n\nq = deque([10**9])\ns = 0\nfor i in range(n-1):\n    while q and a[i+1] - a[i] >= p[i]:\n        q.pop()\n    if q:\n        s += 1\n        q.append(a[i+1] - a[i])\n    p[i] = s\nprint(s)"}, "813": {"problem_id": 813, "answer": "n, a, b = list(map(int, input().split()))\na += 1\nb += 1\ninput().split()\ns = set()\nfor i in range(1, n+1):\n    if i not in s:\n        s.add(i)\nans = '2' * (n-a) + '1' * (n-b)\nfor i in range(n):\n    if i not in s:\n        print(ans, end=' ')\n    else:\n        print(ans, end=' ')\nprint()\n"}, "814": {"problem_id": 814, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append(sum(a[i]))\nprint(*ans)"}, "815": {"problem_id": 815, "answer": "import sys\nreadline = sys.stdin.readline\n\nV = list(map(int, readline().split()))\nans = []\n\nfor i in range(1, 100):\n    if V[i] > V[i - 1]:\n        ans.append(i)\n\nprint(max(ans))\n"}, "816": {"problem_id": 816, "answer": "from sys import stdin\ninput = stdin.readline\n\nn, x = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[i] ^ a[j] == x:\n            cnt += 1\nprint(cnt)\n"}, "817": {"problem_id": 817, "answer": "import sys\ninput = sys.stdin.readline\n\ns = input().rstrip()\n\nn = len(s)\n\nans = [0]*26\n\nfor i in range(n):\n    ans[ord(s[i])-97] += 1\n\nprint(''.join(ans))"}, "818": {"problem_id": 818, "answer": "n = int(input())\nif n<2:\n    print(\"-1\")\n    return\nelif n==2:\n    print(2)\n"}, "819": {"problem_id": 819, "answer": "import sys\ninput = sys.stdin.readline\nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=[0]*n\nfor i in range(n):\n    b[i]=a[i]\nans=max(b)\nprint(ans)\n"}, "820": {"problem_id": 820, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nm = int(input())\na = [int(i) for i in input().split()]\nans = 0\nfor i in range(n):\n    ans += a[i]\n    if ans > m:\n        ans = m\n    a[i] -= min(a[i-1], a[i])\nprint(ans)"}, "821": {"problem_id": 821, "answer": "s,v1,v2,t = list(map(int,input().split()))\np1,p2 = 0,0\nfor i in range(s):\n    p1 += i*v1\n    p2 += i*v2\nif p1 > p2:\n    print(\"First\")\nelse:\n    print(\"Second\")\n"}, "822": {"problem_id": 822, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn, m, z = list(map(int, read().split()))\ncnt = 0\nfor i in range(min(n, m, z)):\n    if readline()[2:] == '1':\n        cnt += 1\nprint(cnt)"}, "823": {"problem_id": 823, "answer": "x, y = list(map(int, input().split()))\n\ndef spiral(x, y):\n    if x == 0:\n        return y\n    elif y == 0:\n        return x\n    else:\n        c = 0\n        while x >= 0:\n            x = x - (x % 2)\n            c += 1\n        return c\n\nans = 0\nspiral(x, y)\nturns = 0\nwhile turns < 4:\n    turns += spiral(x, y)\n    ans += turns\nprint(ans)\n"}, "824": {"problem_id": 824, "answer": "s = input()\nn = len(s)\np = [0] * (n+1)\nfor i in range(n):\n    if s[i] == \"(\":\n        p[i+1] += 1\n    else:\n        p[i+1] += p[i] + 1\nans = 0\nfor i in range(2, n+1):\n    if p[i] == 0:\n        ans += (p[i] - 1) * 2\n    elif p[i] == 1:\n        ans += p[i] * 2\nprint(ans % 1000000007)"}, "825": {"problem_id": 825, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nans = 0\nprime = [2,3,5,7,11,13,17,19]\ndic = {prime[i]:i for i in range(2,int(N**.5)+1)}\ndef isp():\n    return all(x%y for x,y in dic.items())\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a%b)\ndef lcm(a, b):\n    return (a*b)//gcd(a, b)\ndef divs(n):\n    if n == 1:\n        return [1]\n    elif n == 2:\n        return [2]\n    else:\n        r = []\n        while n%2 == 0:\n            r.append(2)\n            n //= 2\n        for i in range(3,int(n**.5)+1,2):\n            if n%i == 0:\n                r.append(i)\n        if n > 2:\n            r.append(n)\n        return r\ndef add(a,b):\n    return a + b\ndef sub(a,b):\n    return a - b\ndef mul(a,b):\n    return a*b\ndef ceil(a,b):\n    return a+b-1 if a else b+a-1\ndef to_int(x):\n    return int(x,2)\ndef from_int(x,y=0):\n    return x+y if x<y else y\ndef list(l, sep=\"_\"):\n    return [i for i in l if i!= sep]\ndef flush(output):\n    sys.stdout.write(\"\\n\".join(list(map(str, output))))\ndef __starting_point():\n    N = int(input())\n    print(3)\n__starting_point()"}, "826": {"problem_id": 826, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    dp = [[0] * (n + 1) for _ in range(2)]\n    for i in range(1, n + 1):\n        dp[i][i] = 1\n    for i in range(2, n + 1):\n        for j in range(i):\n            dp[i][j] += dp[i - 1][j - 1]\n            dp[i][j] += dp[i - 1][j]\n    print(dp[n][n])\n\nmain()"}, "827": {"problem_id": 827, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18\nnaive = lambda x: sum(x)//x\ndef li(): return [int(i) for i in readline().split()]\ndef st(): return readline().rstrip('\\n')\ndef ld(): return list(map(int, readline().split()))\ndef nd(): return list(map(int, readline().split()))\ndef mset(): return list(islice(ms(INF)))\ndef ms(n): return [i for i in range(n+1)]\ndef lcm(a, b): return (a*b)//gcd(a,b)\ndef gcd(a, b): return a if b==0 else gcd(b, a%b)\n#lcm(1,10000000000)==10000000000\n#lcm(1,100000000000)==10**100\n#lcm(998244353,998244353)==998244353\n\nN = st()[0]\nT = st()[1]\nans = 0\nfor _ in range(N):\n    ans += li()[T]\nprint(ans)"}, "828": {"problem_id": 828, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, s = list(map(int, readline().split()))\nA = list(map(int, readline().split()))\nC = [0] * n\nfor i in range(n):\n    if A[i] == 0:\n        C[i] = 1\n    else:\n        C[i] = C[i - 1] + 1\nprint(sum(C))\n"}, "829": {"problem_id": 829, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input()\n\nprint(min([len(i) for i in zip(s, list(range(1, n)))]))\nprint(\" \".join(sorted(list(map(str, s)), key=lambda x: x[1])))"}, "830": {"problem_id": 830, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\ntowers = list(map(int, input().split()))\n\ns = [0]*k\nm = []\nfor tower in towers:\n    s[tower-1] += 1\n    m.append(s[-1])\n\nprint(min(m), k)\n"}, "831": {"problem_id": 831, "answer": "t = input()\nn = int(input())\ns = [input() for i in range(n)]\ns.sort()\np = [0] * (n + 1)\nans = 0\nfor i in range(n):\n    p[i + 1] = s[i] + p[i]\n    ans += sum(p[:i] + p[i + 1:])\nprint(ans)"}, "832": {"problem_id": 832, "answer": "n = int(input())\nans = 0\nfor i in range(n):\n    h, a = list(map(int, input().split()))\n    if h == a:\n        ans += 1\nprint(ans)\n"}, "833": {"problem_id": 833, "answer": "n, v = list(map(int, input().split()))\ntrees = []\nfor i in range(n):\n    trees.append(list(map(int, input().split())))\nd = [0] * n\nd[0] = 1\nfor i in trees:\n    d[i[1] - 1] += i[0] - 1\nprint(max(d))\n\n"}, "834": {"problem_id": 834, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef is_pow(x):\n    return 1 == pow(x, 0)\n\nd = {}\nfor i in range(1, n + 1):\n    d[i] = is_pow(i)\n\nans = 0\nfor i in a:\n    if d[i] == 1:\n        continue\n    else:\n        k = i\n        while k < n:\n            if is_pow(k):\n                ans = min(ans, k)\n            k += 1\nprint(ans)"}, "835": {"problem_id": 835, "answer": "s = input()\nb = s.count('B')\ns = s[:b] + 'S' + s[b+1:]\nc = s.count('C')\ns = s[:c] + 'C' + s[c+1:]\nd = s.count('D')\ns = s[:d] + 'B' + s[d+1:]\ne = s.count('E')\ns = s[:e] + 'B' + s[e+1:]\nprint(max(b+d+e, int(s)))"}, "836": {"problem_id": 836, "answer": "n, t = map(int, input().split())\na = list(map(int, input().split()))\nk = 0\nfor i in range(n):\n    if a[i] == 'H':\n        k += 1\n    elif a[i] == 'S':\n        k += 1\n    else:\n        print(-1)\n        break"}, "837": {"problem_id": 837, "answer": "def main():\n    n, x, y = list(map(int, input().split()))\n    print(min(n, x, y))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "838": {"problem_id": 838, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\nA = [[] for _ in range(n)]\nfor i in range(n):\n    A[i].append(int(input()))\nans = 0\nfor i in range(n):\n    for j in range(m):\n        if A[i].count(1) == 0 and A[j].count(1) == 1:\n            ans += 1\nprint(ans)\n"}, "839": {"problem_id": 839, "answer": "import sys\ninput = sys.stdin.readline\n\ndef calc(a, b):\n    return a*b + g[a] - g[b]\n\ng = [0] + list(map(int, input().split()))\nans = calc(1, 5)\nprint(max(ans, calc(2, 4) + calc(4, 2)))"}, "840": {"problem_id": 840, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\nn, k = map(int, read().split())\na = list(map(int, readline().split()))\nb = list(map(int, readline().split()))\nd = [0]*(n+1)\nfor i in range(1, n+1):\n    d[i] = max(d[i-1], a[i] + b[i])\nprint(d[n])"}, "841": {"problem_id": 841, "answer": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = ''.join(str(n%10) for n in range(10))\n    print(s.count('1'))\n    for i in range(n):\n        print(1337, end ='')"}, "842": {"problem_id": 842, "answer": "from itertools import takewhile\nn=int(input())\nodd=0\nfor i in takewhile(int(i)**2+i<=n,i):\n    if i%2!=0:\n        odd+=1\nprint(next(i for i in takewhile(int(i)**2+i<=n,i) if i%2==0))"}, "843": {"problem_id": 843, "answer": "n = int(input())\ns = input()\na = [int(x) for x in s.split(' ')]\na.sort()\ncount = 0\nfor i in range(n):\n    if a[i] == 1:\n        count += 1\nif count == n:\n    print('INFINITE')\nelse:\n    print('FINITE')"}, "844": {"problem_id": 844, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip()\n\nm = len(s)\n\nif n == m:\n    print(0)\nelse:\n    m = max(m - (n - m + 1), 0)\n    print(m)"}, "845": {"problem_id": 845, "answer": "import sys\nread = sys.stdin.readline\n\ndef main():\n    l = list(read().rstrip())\n    if l[0] == 'L':\n        l[1] = l[1].ljust(3)\n    else:\n        l[1] = l[1].ljust(3) + '\\n' + l[0]\n    print(l[0])\n\nmain()"}, "846": {"problem_id": 846, "answer": "import random\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nans=[]\nfor i in range(n):\n    ans.append(random.randint(a[i]))\nprint(*ans)\n"}, "847": {"problem_id": 847, "answer": "import sys\ninput = sys.stdin.readline\n\nn, x = list(map(int, input().split()))\nt = list(map(int, input().split()))\n\ns = sum(t)\n\nif s < 0:\n    print(0)\n    return\n\nr = n + 1\nans = 0\nfor i in range(n):\n    if abs(t[i] - x) < abs(t[i] + x):\n        ans += abs(t[i] - x)\n        r <<= 1\n    elif abs(t[i] - x) < abs(t[i] + x):\n        ans += abs(t[i] - x)\n        r <<= 1\n\nprint(ans)\n"}, "848": {"problem_id": 848, "answer": "n, k = map(int, input().split())\nif n == 1:\n    print(k)\nelse:\n    table = [[0] * (k + 1) for i in range(n + 1)]\n    for i in range(1, n + 1):\n        table[i][i] = 1\n    for i in range(1, n + 1):\n        for j in range(1, k + 1):\n            table[i][j] += table[i - 1][j - 1]\n            if table[i][j] == 0:\n                table[i][j] = 1\n    print(len(table))\n"}, "849": {"problem_id": 849, "answer": "a,b,c,d = list(map(int,input().split()))\ns = 0\nfor i in range(1,1000):\n    s += (a/b)*i\nprint(s)\n"}, "850": {"problem_id": 850, "answer": "def main():\n    k, l = input().split()\n    print(sum(int(l[i]) for i in range(k)))\n    print(' '.join(map(str, l)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "851": {"problem_id": 851, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\nchoc = input()\nbar = 0\nfor i in range(n):\n    if choc[i] == '0':\n        bar += 1\n    else:\n        bar = bar + 1\nprint(bar // 2)"}, "852": {"problem_id": 852, "answer": ""}, "853": {"problem_id": 853, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = sum(a)%10\nif d==0:\n    print(\"0\")\nelse:\n    print(d)"}, "854": {"problem_id": 854, "answer": "import sys\ninput = sys.stdin.readline\n\ndef readint():\n    return int(input())\n\n\ndef readints():\n    return list(map(int, input().split()))\n\n\nn, t = readints()\na = list(readints())\ncnt = 0\nfor i in range(1, n + 1):\n    if a[i] <= t:\n        cnt += 1\n    else:\n        break\nprint(cnt)"}, "855": {"problem_id": 855, "answer": "k,a,b=map(int,input().split())\na+=k*(k-1)//2\nb+=k*(k-1)//2\nif a==b:\n    print(0)\nelif a>b:\n    a,b=b,a\n    print(a-b)"}, "856": {"problem_id": 856, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,k=list(map(int,input().split()))\n    a=list(map(int,input().split()))\n    m=max(a)\n    for i in range(n):\n        if a[i]!=m:\n            m=a[i]\n            a[i]=m\n    print(*a)\n"}, "857": {"problem_id": 857, "answer": "n, m = list(map(int, input().split()))\ns = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[s[i]] = i\nprint(*[1]*10 + sorted(d.keys()), sep=' ')"}, "858": {"problem_id": 858, "answer": "n = int(input())\nans = 0\nwhile n>0:\n n -= 1\n a = int(input())\n ans += a\n"}, "859": {"problem_id": 859, "answer": "s1 = input().split()\ns2 = input().split()\nn = len(s1)\ns1 = [s1[i] for i in range(n)]\ns2 = [s2[i] for i in range(n)]\n\nans = 0.5*(1-0.5*sum(s1.count(x) for x in set(s1)))\nfor i in range(n):\n    ans += 0.5*(1-0.5*sum(s2.count(x) for x in set(s2)))/n\nprint(ans)"}, "860": {"problem_id": 860, "answer": ""}, "861": {"problem_id": 861, "answer": "m, r = map(int, input().split())\nans = 2 * r * (r + 1) // 2\nfor i in range(1, m + 2):\n    ans = ans * (pow(m, 2, 1.0) + 1) / 2\nprint(ans)"}, "862": {"problem_id": 862, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+9\nn = int(readline())\na = list(map(int, readline().split()))\nd = [INF]*(n+1)\nfor i in range(1, n+1):\n    d[i] = min(d[i-1], a[i])\nans = n+1\nm = d[n]\nfor i in range(1, n+1):\n    ans = min(ans, m-d[i])\nprint(ans)"}, "863": {"problem_id": 863, "answer": "import bisect\ninput()\ns = input()\nt = input()\nans = 0\nfor i in range(1,121):\n    ans += bisect.bisect_left(s, t[i-1:i+2])\nprint(ans)"}, "864": {"problem_id": 864, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\na = list(map(int, readline().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\nans = 0\nfor i in range(n):\n    if d.get(a[i]) == None:\n        ans += 1\nprint(ans)\n"}, "865": {"problem_id": 865, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,t=list(map(int,input().split()))\na=list(map(int,input().split()))\nans=0\nfor i in range(n):\n  a[i]=t\nans=sum(a)\nfor i in range(1,n):\n  if a[i]>ans:\n   ans=a[i]\nprint(ans)"}, "866": {"problem_id": 866, "answer": "import sys\ninput = sys.stdin.readline\n\nX, Y = map(int, input().split())\n\ndp = [[0]*(Y+1) for _ in range(X+1)]\ndp[0][0] = 1\n\nfor i in range(1, X+1):\n    for j in range(Y+1):\n        dp[i][j] = dp[i-1][j] + dp[i][j-2]\n        dp[i][j] %= (10**9+7)\n\nprint(dp[X][Y])"}, "867": {"problem_id": 867, "answer": "import sys\ndef inp(): return sys.stdin.readline().strip()\ndef out(s,l): sys.stdout.write(str(s)+\"\\n\")\ndef outa(*args): sys.stdout.write(\" \".join(args) +\"\\n\")\nn = int(inp())\nz = 1\nwhile z <= n:\n    z += 1\n    a = z//n\n    b = z%n\n    if a*n < b:\n        z += 1\n        a = a*n\n    elif a*n == b:\n        z += 1\n        a = a*n\n    else:\n        print(a)\n"}, "868": {"problem_id": 868, "answer": "def main():\n    n = int(input())\n    print(1378%10**(n-1))\n\nmain()"}, "869": {"problem_id": 869, "answer": "import sys\nread = sys.stdin.readline\n\nS=read().rstrip()\na=S.index(S[0])\nb=S.index(S[1])\nif a!=0:\n    print(a+1)\nelse:\n    print(0)\n"}, "870": {"problem_id": 870, "answer": "from math import *\nd,l,v1,v2=map(int,input().split())\ns=l/v1+l/v2\nprint(pow(1.000000000000000,s)//2)"}, "871": {"problem_id": 871, "answer": "import sys\ninput = sys.stdin.readline\n\nn, s = list(map(int, input().split()))\nL = [0] * 60\nfor i in range(n):\n    h, m = list(map(int, input().split()))\n    L[h-1] += m\n    L[h]     += m\nprint(min(L[1], L[0]), min(L[2], L[1] + s))\n"}, "872": {"problem_id": 872, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = [0]*(n+1)\nfor i in range(1, n+1):\n    if a[i]%2!=0:\n        ans[i] = 1\n    else:\n        ans[i] = 0\nprint(*ans)"}, "873": {"problem_id": 873, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ns = input().rstrip()\ns1 = input().rstrip()\ns2 = input().rstrip()\ncomb = s1 + s2\nmoves = 0\nfor i in range(0, 10):\n    if s[i] == comb:\n        moves += 1\n        comb = s[i]\n    elif s[i]!= comb:\n        moves += abs(s[i] - comb)\n        comb = s[i]\nprint(moves)"}, "874": {"problem_id": 874, "answer": "n = int(input())\nans = []\nfor i in range(1, n + 1):\n    if i % 2!= 0:\n        ans.append(i)\nprint(' '.join(map(str, ans)))\n"}, "875": {"problem_id": 875, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\nA=[int(i) for i in input().split()]\nans=[]\nfor i in range(n):\n    ans.append(A[i][0]+A[i][1]+A[i][2])\nif n==1:\n    print(-1)\n    return\nd=[[0,0] for i in range(n)]\nd[0][0]=1\nd[0][1]=1\ncur=1\nfor i in range(1,n):\n    for j in range(i+1,n):\n        if d[i][j]==1:\n            d[i][j]=d[i-1][j]+d[i][j-1]\n            cur+=d[i].pop()\n            break\n    else:\n        cur+=d[i].pop()\n        break\nprint(min(cur,ans[n-1]))\n"}, "876": {"problem_id": 876, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    a[i] += a[i] - k\n    ans = max(ans, i - i % n + 1)\nprint(ans)"}, "877": {"problem_id": 877, "answer": "def solve():\n    n = int(input())\n    m = int(input())\n    d = {}\n    for i in range(n):\n        d[i] = set()\n    for i in range(m):\n        a, b = map(int, input().split())\n        d[a].add(b)\n        d[b].add(a)\n    print(sum([len(d[a]) for a in d]))\n\ndef __starting_point():\n    solve()\n__starting_point()"}, "878": {"problem_id": 878, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nr = [0]*(n+1)\nfor i in range(1, n+1):\n    r[i] = r[i-1] + a[i]\nans = set()\nfor i in range(1, n+1):\n    if r[i] > r[i-1]:\n        ans.add(i)\nprint('Infinite' if len(ans)==0 else 'Finite')"}, "879": {"problem_id": 879, "answer": "n = int(input())\nl = list(map(int, input().split()))\nans = []\nfor i in range(n-1):\n    ans.append(l[i+1:])\nprint(' '.join(map(str, ans)))"}, "880": {"problem_id": 880, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 1000000007\nn = int(input())\nprint(bin(n).count('1')%MOD)"}, "881": {"problem_id": 881, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('INF'+'inf')\nMOD = 10**9+7\n\nn = int(readline())\na = list(map(int, readline().split()))\ncnt = [0]*(n+1)\nfor i in range(1, n+1):\n    cnt[i] += cnt[i-1]\n    cnt[i] += a[i].count(a[i-1])\nprint(min(cnt))"}, "882": {"problem_id": 882, "answer": "import sys\ndef main():\n    s = input()\n    t = input()\n    print(max(map(int,s.split())))\n    print(max(map(int,t.split())))\nmain()"}, "883": {"problem_id": 883, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in a:\n    if i == 0:\n        ans += 1\n    else:\n        ans += n - i\nprint(ans)"}, "884": {"problem_id": 884, "answer": "import sys\nMOD = 998244353\na, b, c = list(map(int, input().split()))\nislands = [set() for i in range(1, 50000) for j in range(i)]\nislands[0].add(a)\nislands[1].add(b)\nislands[2].add(c)\n\nn = len(islands)\n\nans = 0\nfor i in range(1, n):\n    if i & 1:\n        ans += 2 ** (n - i)\n    else:\n        ans += 1\n\nprint(ans % MOD)\n"}, "885": {"problem_id": 885, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 998244353\n\nn = int(input())\nedges = []\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    edges.append((a, b))\n\nv = [0] * n\ns = set()\nvisited = [0] * n\ndef dfs(v, s):\n    visited[v] = 1\n    for u in s:\n        if u!= v:\n            dfs(u, s)\ndfs(1, v)\nprint(s[0] * len(s))\n"}, "886": {"problem_id": 886, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\n\nif n&1:\n    print(n//2)\nelse:\n    print(n//2 - 1)"}, "887": {"problem_id": 887, "answer": "n = int(input())\na = list(map(int, input().split()))\nif n == 0:\n    print(\"NO\")\nelse:\n    print(\"YES\")"}, "888": {"problem_id": 888, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint = stdout.write\nn = int(input())\np = list(map(int, input().split()))\ns = list(map(int, input().split()))\nt = s + p\nans = 0\nfor i in range(n - 1):\n    ans += t[i + 1] - p[i]\nprint(ans)\nprint((' '.join(map(str, p[1: -1]))))\n"}, "889": {"problem_id": 889, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    rows = 4\n    cols = 4\n    dp = [[0] * cols for _ in range(rows)]\n    for i in range(rows):\n        dp[i][0] = 0\n    for i in range(1, rows):\n        for j in range(cols):\n            if i & 1:\n                dp[i][j] = dp[i].get(j, 0) + 1\n            elif j & 1:\n                dp[i][j] = dp[i].get(j, 0)\n            else:\n                dp[i][j] = dp[i - 1][j]\n    print(\"YES\" if all(dp[i][j] == 2 for j in range(cols) for i in range(rows)):\n          else \"NO\")\nmain()"}, "890": {"problem_id": 890, "answer": "import sys\nimport math\nfrom collections import defaultdict as dd\ninput = sys.stdin.readline\n\nn, l, r, x = list(map(int, input().split()))\nc = list(map(int, input().split()))\nd = dd(int)\nans = 0\nfor i in range(1, n+1):\n    d[c[i-1]] = d[c[i-1]] + x\n    if c[i] > c[i-1]:\n        ans += 1\nprint(ans)\n"}, "891": {"problem_id": 891, "answer": "import sys\nreadline = sys.stdin.readline\nn, k = map(int, readline().split())\ns = readline().strip()\nans = \"\"\nfor i in range(k):\n    if s[i] == \"W\":\n        ans += \"W\"\n    else:\n        ans += \"B\"\nprint(ans)"}, "892": {"problem_id": 892, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn,m=map(int,input().split())\na=list(map(int,input().split()))\nans=[]\nfor i in range(n):\n    ans.append(a[i]%m)\nprint(l,max(ans))"}, "893": {"problem_id": 893, "answer": "from collections import defaultdict as dd\nMOD = 10**9+7\nd, n = [int(i) for i in input().split()], int(input())\na = [int(i) for i in input().split()]\nV = dd(list)\nadj = defaultdict(list)\nfor i in range(1, n):\n    adj[i].append(i)\nvis = [0]*n\ncnt = [0]*n\nans = 0\nfor i in range(n):\n    vis[a[i]-1] += 1\n    for j in adj[a[i]-1]:\n        if vis[j] == 0:\n            cnt[i] += 1\n            vis[j] += 1\n            adj[j].remove(j)\n            adj[i].remove(i)\nprint(cnt[-1]%MOD)"}, "894": {"problem_id": 894, "answer": "import math\ndef is_prime(n):\n    i = 2\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            return False\n        i += 1\n    return True"}, "895": {"problem_id": 895, "answer": "n = int(input())\nt = int(input())\na = [0] * 1001\nfor i in range(1, 1001):\n    a[i] += i\nans = 0\nfor i in range(n):\n    t = list(map(int, input().split()))\n    if t[0] == t[1]:\n        ans += 1\n    elif t[0] > t[1]:\n        ans += 2\nprint(ans)\n"}, "896": {"problem_id": 896, "answer": "n,m = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = [[0 for _ in range(m+1)] for _ in range(n+1)]\nfor i in range(n):\n  c[i][0] = a[i]^b[i]\nfor i in range(m):\n  c[0][i] = a[i]^b[i]\nans = [0 for _ in range(n+1)]\nfor i in range(1,n+1):\n  for j in range(1,m+1):\n    ans[i] = ans[i-1]^c[j][i-1]\nprint('\\n'.join(map(str,ans)))"}, "897": {"problem_id": 897, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if a[i] == 0:\n            a[i] = 1\n        elif b[i] == 0:\n            b[i] = 1\n        else:\n            ans += (a[i] + b[i])\n    print(ans % (10**9 + 7))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "898": {"problem_id": 898, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nN, M = map(int, input().split())\ndivisors = [1]*(N+1)\nfor i in range(2, N+1):\n    if M//i <= i:\n        continue\n    divisors[i] = max(divisors[i], i)\nprint(max(divisors[M//i] for i in range(N+1)))"}, "899": {"problem_id": 899, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import deque"}, "900": {"problem_id": 900, "answer": "s = input()\nn = len(s)\nMOD = 10**9 + 7\nans = 0\nfor i in range(n):\n    if s[i] == '?':\n        continue\n    ans += pow(13, i)\nprint(ans % MOD)"}, "901": {"problem_id": 901, "answer": "n, m = list(map(int, input().split()))\nr = []\nm = []\nfor i in range(m):\n    k, v = list(map(int, input().split()))\n    r.append(k)\n    m.append(len(r))\n\na = [0] * m\nb = [0] * m\nc = [0] * m\nd = [0] * m\nfor i in range(m):\n    a[i] = list(map(int, input().split()))\n    b[i] = list(map(int, input().split()))\n\ns = 0\nfor i in range(n):\n    if a[i] > 1:\n        s += 1\n    elif b[i] > 1:\n        s += 1\n    elif c[i] > 1:\n        s += 1\n    elif d[i] > 1:\n        s += 1\n\nif s > m:\n    print('NO')\nelse:\n    if sum(a[i] & b[i]) > 0:\n        print('YES')\n    else:\n        print('NO')\n"}, "902": {"problem_id": 902, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\np = 0\nfor i in range(n):\n    p += a[i] * k\nprint(p)\n"}, "903": {"problem_id": 903, "answer": "import sys\nreadline = sys.stdin.readline\nn, k = list(map(int, readline().split()))\na = list(map(int, readline().split()))\nm = max(a)\na.sort()\nans = m\nfor i in range(n):\n    ans = max(ans, a[i] + 1)\nprint(ans)"}, "904": {"problem_id": 904, "answer": "n = int(input())\ns = input().strip()\nprint(sum(s[i].upper() for i in range(n) if s[i].isalpha()))"}, "905": {"problem_id": 905, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\nn,s=list(map(int,input().split()))\na=sorted(map(int,input().split()),reverse=True)\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    a[i]=max(a[i],x*y)\nprint(a[-1])"}, "906": {"problem_id": 906, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = map(int, input().split())\n\nMOD = 10**9+7\n\nres = 1\nfor i in range(n):\n    for j in range(m):\n        if k*i == 1 or k*i == -1:\n            res *= i\n        elif k*i == -1:\n            res %= MOD\n\nprint(res)"}, "907": {"problem_id": 907, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\na = []\nb = []\nfor i in range(m):\n    a.append(list(map(int, input().split())))\n    b.append(list(map(int, input().split())))\n\nans = \"YES\"\nfor i in range(n):\n    if a[i][0] > b[i][0]:\n        ans = \"NO\"\n        break\n\nfor i in range(1, n):\n    if a[i][0] > b[i][0]:\n        ans = \"NO\"\n        break\n\nprint(ans)\n"}, "908": {"problem_id": 908, "answer": "def main():\n    n = int(input())\n    c = list(map(int, input().split()))\n    c.sort()\n    ans = 0\n    for i in range(n):\n        if c[i] < c[i + 1]:\n            ans += c[i]\n        else:\n            ans += c[i] - c[i + 1]\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "909": {"problem_id": 909, "answer": "a, b, c = list(map(int, input().split()))\ns = 0\nres = 0\nfor i in range(1, b+1):\n    if i&1:\n        res += a*(i+1)\n    elif i&2:\n        res += b*(i+1)\n    else:\n        res += c*(i+1)\nprint(res)\n"}, "910": {"problem_id": 910, "answer": "n, a, b = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    if i % 2 == 0:\n        s.add((a+i)//2)\n    else:\n        s.add((a+i)//2 + 1)\nif n % 2 == 1:\n    print(-1)\nelse:\n    d = n//2\n    for i in range(d):\n        if s & set(range(a, a+i, b)):\n            s.intersection_update(set(range(a, a+i, b)))\n    print(' '.join([str(i) for i in s]))"}, "911": {"problem_id": 911, "answer": ""}, "912": {"problem_id": 912, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,s,k=list(map(int,input().split()))\n    a=list(map(int,input().split()))\n    d=[]\n    for i in range(s):\n        d.append(a[i])\n    print(min(k-1,len(d)))\n"}, "913": {"problem_id": 913, "answer": "from collections import deque\nn = int(input())\np = list(map(int, input().split()))\nb = list(map(int, input().split()))\npoints = [0]*n\nque = deque()\nque.append(0)\nflag = True\nfor i in range(n):\n    if que[i] == 0:\n        flag = False\n        break\n    que.append(que[i])\n    points[i] += p[i]\n    if points[i] > b[i]:\n        flag = False\nif flag:\n    print(-1)\nelse:\n    m = float('inf')\n    for i in range(n):\n        if points[i] > m:\n            m = points[i]\n    print(m)"}, "914": {"problem_id": 914, "answer": "s = input()\nn = int(input())\nbuy = 0\nfor i in range(n):\n    if s[i] == s[i+1]:\n        buy += 1\n    elif s[i] == ''.join(sorted(s[i])):\n        buy += 1\nprint(buy)\ns = input()\nprint(len(s))\nfor i in range(len(s)):\n    print(s[i],end=' ')"}, "915": {"problem_id": 915, "answer": "k = int(input())\nc = 0\nfor i in range(1, k + 1):\n    if i & 1:\n        c += 1\n    else:\n        break\nprint(''.join(reversed(input())))\n"}, "916": {"problem_id": 916, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\np = list(map(int, input().split()))\nt = deque([])\nfor i in range(n):\n    t.append(1)\n    t.append(t[i]%2)\nwhile t:\n    now = t.popleft()\n    a[now] = 0\n    for nei in p[now]:\n        if nei == 1:\n            t.append(now+1)\n            a[now] |= (1<<t[now])\n        elif nei == 2:\n            t.append(now+1)\n            a[now] |= (1<<t[now])\n        else:\n            t.append(now+1)\n            a[now] |= (1<<t[now])\nprint(len(set(a.keys())))\n"}, "917": {"problem_id": 917, "answer": "import sys\ninput = sys.stdin.readline\n\nn,h,m=list(map(int,input().split()))\nl=[]\nr=[]\nx=[]\nfor i in range(m):\n    l.append(tuple(map(int,input().split())))\n    r.append(tuple(map(int,input().split())))\n    x.append(h)\nd=[[0]*n for i in range(n)]\nfor i in range(1,n+1):\n    for j in range(i,n+1):\n        d[i][j]=d[i-1][j-1]+max(x[i-1],x[j-1])*l[i-1][j-1]\nprint(sum(d[i][j] for j in range(1,n+1)) if n>1 else sum(d[i][j] for j in range(1,n+1)))\n"}, "918": {"problem_id": 918, "answer": "n,m=map(int,input().split())\na=[]\nb=[]\nfor i in range(n):\n    s,r,n=map(str,input().split())\n    a.append([s,int(r)])\n    b.append([s,int(r)])\nc=[]\nd=[]\nfor i in range(m):\n    s,r=map(str,input().split())\n    c.append([s,int(r)])\n    d.append([s,int(r)])\nans=[]\nfor i in range(len(a)):\n    if len(ans)==0:\n        ans.append(a[i][1])\n        print(a[i][0],a[i][2])\n    elif len(ans)==1:\n        ans.append(\"?\")\n        print(ans[0])\n    else:\n        i=0\n        while i<len(ans) and ans[i]==\"?\":\n            i+=1\n        if i==len(ans):\n            print(\"?\",\" \".join(a[i]))\n        else:\n            print(\"?,\".join(ans[i:]))"}, "919": {"problem_id": 919, "answer": "n,k = list(map(int,input().split()))\ns = input()\na = []\nfor i in range(n):\n    a.append(s[i])\nans = 0\nfor i in range(k):\n    if a[i]=='a' and i<n-1:\n        ans+=1\n    elif a[i]=='b' and i<n-1:\n        ans+=1\n    else:\n        ans+=1\nprint(ans)\n"}, "920": {"problem_id": 920, "answer": "n = int(input())\na, b, c, d = list(map(int, input().split()))\ng = []\nh = []\nfor i in range(2):\n    g.append((min(a, b), min(c, d)))\nfor i in range(4):\n    h.append((max(a, b), max(c, d)))\ns = 0\nfor i in range(len(g)):\n    if g[i][0] < s:\n        s = g[i][0]\n        cnt = len(h)\n        print(cnt + 1)\n        print(g[i][1] * s)\n    else:\n        s += g[i][1] * g[i][0]\n"}, "921": {"problem_id": 921, "answer": "from bisect import bisect_left as bl, bisect_right as br, bisect\nn, w = map(int, input().split())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\nans = []\nfor i in range(1, max(a)+1):\n    if i not in d:\n        ans.append(i)\nprint(sum(ans)) if sum(ans)>=w else -1"}, "922": {"problem_id": 922, "answer": "from collections import deque\nn, a = list(map(int, input().split()))\nd = list(map(int, input().split()))\ns = deque(max(d))\nans = [0]*n\nfor i in range(n):\n    while s and a[i] <= a[s[0]]:\n        s.popleft()\n    ans[i] = s[0] + a[i]\nprint(*ans)\n"}, "923": {"problem_id": 923, "answer": "n = int(input())\na = list(map(int, input().split()))\nt = 0\nfor i in range(n):\n    if a[i] == 0:\n        t += 1\n    else:\n        t += 2\nprint(\"Yes\" if t == n - 1 else \"No\")"}, "924": {"problem_id": 924, "answer": "from collections import deque\nl = list(map(int,input().split()))\nl = deque(l)\na = deque(int(input()),fillvalue=0)\nb = deque(int(input()),fillvalue=0)\na.append(l[2])\nb.append(l[1])\ns = 0\nwhile s < len(l):\n    if a[s][0] <= b[s]:\n        a.popleft()\n    else:\n        b.popleft()\n    s += 1\nprint(len(a))\nprint(len(b))"}, "925": {"problem_id": 925, "answer": "import sys\nread = sys.stdin.readline\n\nn = int(read())\nans = 0\nfor i in range(n):\n    if read() == '0' and i == 0:\n        ans += 1\nprint(ans)"}, "926": {"problem_id": 926, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = []\nfor i in range(n):\n  a, b, c = list(map(int, input().split()))\n  s.append((a, b, c))\nprint(2)\nprint(*s[1:])\n"}, "927": {"problem_id": 927, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nans = 998244353\nfor a in A:\n    ans = max(ans, a % 10)\n    if a == ans:\n        ans //= 10\n\nprint(ans)\n"}, "928": {"problem_id": 928, "answer": "from collections import deque\nN,K=list(map(int,input().split()))\nA=list(map(int,input().split()))\ns=0\nfor i in range(N):\n    s+=A[i]\n    if s>K:\n        s=0\nans=0\ndeq=deque([i for i in range(N)])\nwhile deq:\n    now=deq.popleft()\n    if now>K:\n        ans+=1\n        deq.append(now)\nprint(ans)"}, "929": {"problem_id": 929, "answer": "from collections import deque\nh, w = list(map(int, input().split()))\na = [list(map(int, input().split())) for i in range(h)]\nans = []\nfor i in range(w):\n    ans.append(deque()\n               .append(tuple(a[i]))\n               .popleft()\n               .pop())\n\nprint(len(ans))\nfor i in range(len(ans)):\n    ans[i] = max(ans[i], 0)"}, "930": {"problem_id": 930, "answer": "import sys\nsys.setrecursionlimit(10**9)\nINF = 10**20\nMOD = 10**9+7\nna = lambda:list(map(int,input().split()))\nns = lambda:int(input())\nna2 = lambda:input().strip()\nnm = lambda:map(int,input().split())\nnl = lambda:list(map)\n\nn,k = nm()\ndp = [[0]*n for _ in range(n)]\nfor i in range(n):\n    dp[i] = [INF]*k\n    for j in range(i+1,n):\n        dp[i][j] = dp[i].get(j,0) + dp[j].get(i,0)\nans = 0\nfor i in range(n):\n    ans += dp[i][k-1]\nprint(ans%MOD)"}, "931": {"problem_id": 931, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m, x, y, z, p = list(map(int, readline().split()))\nr = [list(map(int, readline().split())) for _ in range(n)]\n\ncands = []\nfor i in range(1, n + 1):\n    cands.append((r[i][0], r[i][1]))\n\nfor i in range(1, m + 1):\n    cands.append((r[x + i][0], r[x + i][1]))\n\nfor i in range(1, z + 1):\n    cands.append((r[y + i][0], r[y + i][1]))\n\nfor i in range(2, n + 1):\n    cands.append((cands[i - 1][0], cands[i - 1][1]))\n\nfor i in range(2, z + 1):\n    cands.append((cands[1 + i - 1][0], cands[1 + i - 1][1]))\n\nfor i in range(2, m + 1):\n    cands.append((cands[x + i - 1][0], cands[x + i - 1][1]))\n\nfor i in range(2, n + 1):\n    print((' '.join(map(str, cands[i - 1])))\n"}, "932": {"problem_id": 932, "answer": "m,n = list(map(int,input().split()))\na = []\nfor i in range(m):\n    a.append(list(map(int,input().split())))\nb = []\nfor i in range(n):\n    b.append(a[i][1:])\nans = ''.join(str(x) for x in b)\nprint(ans)\n"}, "933": {"problem_id": 933, "answer": "s = input()\nn = len(s)\nans = []\nfor i in range(n):\n    if s[i] == s[i+1]:\n        ans.append(s[i])\n        s = s[:i] + s[i+2:]\n        break\nprint(min(ans), sep=\"\\n\")\n"}, "934": {"problem_id": 934, "answer": "from collections import deque\n\ns = input()\nq = deque()\nfor i in range(5):\n    q.append(input())\n    \nwhile q:\n    s, c, h, a = q.popleft()\n    if s == c:\n        print('YES')\n        break\n    elif h == a:\n        print('NO')\n        break"}, "935": {"problem_id": 935, "answer": "n,m=map(int,input().split())\nif n==1 and m==1:\n    print(\"Akshat\")\nelif n==2 and m==2:\n    print(\"Malvika\")\nelse:\n    a,b=0,0\n    for i in range(n):\n        for j in range(m):\n            if i==0 and j==0:\n                a+=1\n            elif i==0 and j==1:\n                b+=1\n            elif i==1 and j==0:\n                a+=1\n            elif i==1 and j==1:\n                b+=1\n    if a!=b:\n        print(\"Akshat\")\n    else:\n        print(\"Malvika\")"}, "936": {"problem_id": 936, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ns = 0\nfor i in a:\n    s += i\n    if s > n//2:\n        s -= n//2\n        break\nprint(a[s-1])"}, "937": {"problem_id": 937, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\n\n\nn,k = list(map(int,input().split()))\na = list(map(int,input().split()))\nt = list(map(int,input().split()))\n\nmemo = [0]*(n+1)\nfor i in range(1,n+1):\n    memo[i] = memo[i-1] + t[i-1]\n\n\nclass Solution:\n    def maxTheorems(self, n, k, a, t):\n        ans = 0\n        for i in range(n-k+1):\n            ans = max(ans,bl(i,k))\n        for i in range(n-k+1,0,-1):\n            heappush(memo[i],a[i])\n        print(ans)\n\\t\\t\n"}, "938": {"problem_id": 938, "answer": "a, b = list(map(int, input().split()))\ncnt = 0\nfor i in range(1, a + 1):\n    cnt += i * b\nfor i in range(1, b + 1):\n    cnt += i * a\nprint(cnt)\nprint(*sorted(list(range(1, a + 1)), reverse=True))\nprint(a)\nprint(b)"}, "939": {"problem_id": 939, "answer": "import sys\nread = sys.stdin.readline\n\nn, m = list(map(int, read().split()))\nd = [tuple(map(int, read().split())) for _ in range(n)]\n\ndef is_prime(x):\n    if x < 2:\n        return False\n    if x == 2:\n        return True\n    if x % 2 == 0:\n        return False\n    i = 3\n    while i * i <= x:\n        if x % i == 0:\n            return False\n        i += 2\n    return True\n\nans = []\nfor i in range(3, n + 1, 2):\n    if is_prime(i):\n        ans.append(i)\n\nprint(' '.join(ans))\n"}, "940": {"problem_id": 940, "answer": "a, b, c = list(map(int, input().split()))\nans = 0\nfor i in range(1, 100):\n    if a + i < b + i:\n        ans += i - b\n    elif a + i > b + i:\n        ans += i - a\nprint(ans)\n"}, "941": {"problem_id": 941, "answer": "import sys\ninput = sys.stdin.readline\nb,k=map(int,input().split())\na=list(map(int,input().split()))\nans=0\nfor i in a:\n    ans|=i&1\n    ans+=i&1\nprint(\"even\" if ans&1 else \"odd\")"}, "942": {"problem_id": 942, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n & 1:\n    a.append(n-1)\nelse:\n    a.append(n)\n\nprint(\"Possible\")\nfor i in range(n):\n    if a[i]!= i:\n        print(\"Impossible\")\n        return\n\nd = {}\nfor i in range(1, n+1):\n    d[i] = 0\n    d[a[i]] += 1\n\nans = []\nfor i in range(n):\n    ans.append(d[a[i]])\n\nprint(\"\\n\".join(ans))\n"}, "943": {"problem_id": 943, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\ndef II(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef LI2(): return list(map(int, input().split()))\ndef S(): return input()\ndef LS(): return list(map(int, input().split()))\ndef I(): return int(input())\ndef L(): return list(map(int, input().split()))\ndef F(): return float(input())\ndef LS2F(): return list(map(float, input().split()))\ndef MS(): return list(map(int, input().split()))\ndef LSS(): return list(map(float, input().split()))\ndef MI(): return map(int, input().split())\ndef LMI(): return list(map(int, input().split()))\ndef NM(): return list(map(int, input().split()))\ndef LNM(): return list(map(float, input().split()))\ndef MSS(): return list(map(float, input().split()))\ndef Smi(): return list(map(int, input().split()))\ndef LSmi(): return list(map(float, input().split()))\ndef AMP(): return [int(i) for i in input().split()]\ndef LAMP(): return [int(i) for i in input().split()]\ndef ANS(): return [int(i) for i in input().split()]\ndef LANS(): return [int(i) for i in input().split()]\ndef AANS(): return list(map(int, input().split()))\ndef ALM(): return list(map(float, input().split()))\ndef ALM(): return list(map(float, input().split()))\ndef PQRS(): return [int(i) for i in input().split()]\ndef QRS(): return [int(i) for i in input().split()]\ndef CRT(): return [int(i) for i in input().split()]\ndef LCRT(): return [int(i) for i in input().split()]\ndef BINARY(n):\n    return''.join(map(str, input().split()))\ndef DEC(n):\n    return '{:b}'.format(n // 2)\nn = II()\nt = [0]*(n+1)\nfor i in range(1,11):\n    t[i] += t[i-1]\nprint(t[n%2])"}, "944": {"problem_id": 944, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\n\nn = int(input())\nm = n-1\ng = [[] for i in range(n)]\nfor i in range(n-1):\n    u, v = map(int, input().split())\n    g[u].append(v)\n    g[v].append(u)\n\nd = [0]*(m+1)\nday = 0\nfor i in range(1, m+1):\n    d[i] = i\n    day += 1\n\nans = 0\nfor i in range(m-1):\n    a, b = g[i]\n    if d[a] < d[b]:\n        a, b = b, a\n    ans += abs(d[a] - d[b])\nprint(ans)\nfor i in range(m):\n    print2(d[i], end=' ')\n"}, "945": {"problem_id": 945, "answer": "from bisect import *\nn = int(input())\nx = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    l.append((x[i], 0))\nsemi = []\nfor i in range(n):\n    if i == n-1:\n        break\n    xs = l[i+1]\n    d = abs(xs[0]-xs[1])\n    if d == 0:\n        print(\"yes\")\n        break\n    else:\n        p = bisect(semi, d)\n        for j in range(i+1, n):\n            if semi[j] <= semi[p] and semi[j] <= semi[p+1]:\n                semi.pop(j)\n            elif semi[j] > semi[p] and semi[j] > semi[p+1]:\n                semi.pop(j)\n            else:\n                break\n        bisect.insort(semi, (bisect(semi, d), d))\n"}, "946": {"problem_id": 946, "answer": "n = int(input())\nt = list(map(int, input().split()))\nt.sort()\nfor i in range(n):\n    if t[i] == 0:\n        print(\"EASY\")\n    else:\n        print(\"HARD\")"}, "947": {"problem_id": 947, "answer": "import sys\nread = sys.stdin.readline\nt=int(read())\nfor _ in range(t):\n    n=int(read())\n    print(2,n)\n"}, "948": {"problem_id": 948, "answer": "n,m=list(map(int,input().split()))\npicture=[]\nfor i in range(n):\n    picture.append(input())\npicture.sort()\ncnt=0\nfor i in range(n):\n    for j in range(1,m+1):\n        if picture[i][j]=='f':\n            cnt+=1\nprint(cnt)\n"}, "949": {"problem_id": 949, "answer": "import math\ndef gcd(a,b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(b % a, a)\n\n\nnumbers = input().split()\na = int(numbers[0])\nb = int(numbers[1])\nans = gcd(a,b)\nprint(ans)"}, "950": {"problem_id": 950, "answer": "n,m=list(map(int,input().split()))\ns=[0]*26\nfor i in range(n):\n    s[ord(input())-97]+=1\nt=0\nfor i in range(m):\n    t+=s[i]\n    if chr(97) not in s:\n        s[chr(97)]+=1\nprint(t//n)\n"}, "951": {"problem_id": 951, "answer": "import sys\ninput = sys.stdin.readline\n\nk = int(input())\nn = int(input())\n\nif k%len(n)!= 0:\n    print(0)\nelse:\n    diff = k//len(n)\n    print(min(diff, abs(diff-n)))"}, "952": {"problem_id": 952, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+7\nMOD = 10**9+7\n\n\ndef main():\n    n, m = map(int, readline().split())\n    uvs = [tuple(map(int, readline().split())) for _ in range(m)]\n    cnt = collections.defaultdict(int)\n    for u, v, c in uvs:\n        cnt[u] += 1\n        cnt[v] -= 1\n        cnt[u] |= c\n\n    t = min(cnt.values())\n    print(2*t,''.join(map(str, sorted(list(reversed(cnt.keys()))))))\n    print(*main())\n\nmain()\n"}, "953": {"problem_id": 953, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nmat=[]\nfor i in range(n):\n    mat.append(list(map(int,input().split())))\nans=[0]*n\nd={}\nfor i in range(n):\n    d[a[i]]=i\n    ans[i]=max(0,len(mat[i])-1)\nfor i in range(n):\n    print(ans[i],end=\" \")\nprint()"}, "954": {"problem_id": 954, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n    if s[i] == s[i+1]:\n        cnt += 1\nprint(cnt)"}, "955": {"problem_id": 955, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\njuices = []\nvitamins = []\n\nfor i in range(n):\n    s = input().split()\n    juices.append(int(s[0]))\n    vitamins.append(s[1:])\n\njuices.sort()\nvitamins.sort()\n\nres = 0\nfor i in range(n):\n    res += juices[i] + vitamins[i]\n\nif res > 100000:\n    print(-1)\nelse:\n    print(res)"}, "956": {"problem_id": 956, "answer": ""}, "957": {"problem_id": 957, "answer": "s = input()\nn = len(s)\na = [0] * 26\nfor i in range(n):\n    a[ord(s[i]) - 97] += 1\nprint(['NO', 'YES'][(ord(s[i]) - 97) % 2])"}, "958": {"problem_id": 958, "answer": "n, k = map(int, input().split())\ns = input()\ndist = {}\nfor i in range(n):\n    dist[i] = dist.get(i, 0) + 1\nres = 0\nfor i in range(97, 97+n):\n    res += chr(i)\n    if s[i] not in dist:\n        dist[s[i]] = dist.get(s[i], 0) + 1\n    else:\n        res += dist[s[i]]\nprint(res)"}, "959": {"problem_id": 959, "answer": "n, m, mod = list(map(int, input().split()))\nt = [0] * n\nfor i in range(m):\n    a = input()\n    b = [0] * n\n    for c in a:\n        if c == '1':\n            b[ord(c) - 97] += 1\n        else:\n            b[ord(c) - 97] = 1\n    t[i] = sum(b)\nprint(t[0] / mod)\n"}, "960": {"problem_id": 960, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = map(int, readline().split())\nd = n % k\nans = 0\nwhile d!= 0:\n    ans += 1\n    d = n // d\n\nprint(ans)"}, "961": {"problem_id": 961, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = [0]*(n+1)\nfor i in range(1, n+1):\n    d[i] = d[i-1]^a[i-1]\nans = 0\nfor i in range(n):\n    ans += d[i]\nprint(ans)"}, "962": {"problem_id": 962, "answer": "import sys\ninput = sys.stdin.readline\nN, M = map(int, input().split())\nedges = [[] for _ in range(N)]\nfor _ in range(M):\n    a, b = map(int, input().split())\n    edges[a-1].append(b-1)\n    edges[b-1].append(a-1)\ng = [[] for _ in range(N)]\nfor i in range(M):\n    g[i].append(i)\nvisited = [0]*N\nans = [-1]*N\nans[0] = 1\nfor i in range(1, N):\n    if visited[i] == -1:\n        visited[i] = 1\n        stack = [i]\n        while stack:\n            v = stack.pop()\n            for e in edges[v]:\n                stack.append(e)\n                if visited[e] == -1:\n                    visited[e] = visited[v]+1\n                    ans[e] = 1\n                    stack.append(e)\n                    \n    elif visited[i] == 1:\n        print(-1)\n        return\n    ans[i] = 1\n    for e in g[i]:\n        if ans[e] == -1:\n            print(-1)\n            return\n    print(*ans, sep='\\n')"}, "963": {"problem_id": 963, "answer": "import sys\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\nN, K = map(int, input().split())\nS = [set() for _ in range(N)]\nfor _ in range(K - 1):\n\tl, r = map(int, input().split())\n\tl -= 1\n\tr -= 1\n\tS.append((l, r))\n\nMOD = 998244353\nfact = [1] * N\nfact[0] = 1\nfor i in range(1, N):\n\tfact[i] = (fact[i - 1] * i) % MOD\n\ndp = [0] * (N + 1)\ndp[0] = 1\nfor i in range(1, N + 1):\n\tdp[i] = dp[i - 1] * fact[N - i] % MOD\n\nans = 1\nfor i in range(N):\n\tans *= pow(2, i)\n\tans %= MOD\n\nprint(ans)"}, "964": {"problem_id": 964, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    xs, ys = list(map(int, input().split()))\n    ad = [[0] * (xs[0] + ys[0]) for _ in range(xs[1] + 1)]\n    ad[0][ys[0]] = xs[0]\n    for i in range(1, xs[0] + 1):\n        ad[i][ys[i]] = xs[i]\n    print(''.join(['A' if i == xs[0] else 'B' if i == xs[i] else 'C' for i in range(xs[1] + 1)]))\n    for i in range(1, xs[1] + 1):\n        print(''.join(['A' if i == xs[i] else 'B' if i == ys[i] else 'C' for i in range(ys[0] + 1)]))"}, "965": {"problem_id": 965, "answer": "n = int(input())\nc = list(input().split())\nc.sort()\nprint(n-len(c[0]))"}, "966": {"problem_id": 966, "answer": "import sys\ninput = sys.stdin.readline\n\ny = int(input())\nyear = y%10\nprint(2012)"}, "967": {"problem_id": 967, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\na = list(map(int,read().split()))\ns = set()\ncnt = 0\nfor i in a:\n    if i not in s:\n        s.add(i)\n        cnt += 1\nprint(cnt)"}, "968": {"problem_id": 968, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\np = list(map(int, input().split()))\ntasks = [input() for _ in range(n)]\ns = set()\nfor i in range(n):\n    s.add(input().split())\n\nd = defaultdict(int)\nfor i in range(n):\n    d[p[i]] += 1\n\nans = \"YES\"\nfor k in s:\n    if k in tasks:\n        ans = ans.format(tasks[k])\n        break\n\nprint(ans)\n"}, "969": {"problem_id": 969, "answer": "s = input()\nt = input()\nn = len(s)\nc = 0\nans = []\nfor i in range(n):\n    if s[i] == t[i]:\n        c += 1\n        ans.append(i + 1)\n    elif c > 1:\n        ans.append(i + 1)\n        c = 1\n        s = s[::-1]\nprint(ans[0])"}, "970": {"problem_id": 970, "answer": "n = int(input())\np = list(map(int, input().split()))\nans = 0\nfor i in range(2, n//2 + 1):\n    if p[i] == p[i-1]:\n        ans += 1\nprint(ans)"}, "971": {"problem_id": 971, "answer": "n, b, d = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\nfor i in a:\n    if i > d:\n        s += 1\nprint(s)\n"}, "972": {"problem_id": 972, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn, m = list(map(int, read().split()))\ng = [[] for i in range(n)]\nfor i in range(n):\n    s = readline().strip()\n    g[s[0]].append(s[1:])\n    g[s[1]].append(s[0])\n\nif any(x == 'B' for x in g):\n    print('YES')\nelse:\n    print('NO')"}, "973": {"problem_id": 973, "answer": "from collections import deque\nr,c = [int(i) for i in input().split()]\nans = []\nfor i in range(r):\n    ans.append(input())\nwhile ans:\n    x,y,z = 0,0,0\n    y += 1\n    if x == r:\n        print(\"No\")\n        return\n    y = y - min(c,z)\n    if ans[y] == \"S\":\n        z += 1\n    elif ans[y] == \"W\":\n        z -= 1\n    else:\n        if z < 0:\n            z += 1\n        if z > c:\n            z = c\n        if x == r:\n            print(\"No\")\n            return\n        x = x + min(c,z)\n        if ans[y] == \"S\":\n            z %= 2\n        elif ans[y] == \"W\":\n            z %= 2\n        ans[y] = \"D\"\n        ans.pop(y)\n        ans.append(x)\n"}, "974": {"problem_id": 974, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nstack = [None] * n\nremovals = set()\nfor i in range(n):\n    s = input()\n    stack.append(s)\n    removals.add(int(s[len(s) - 1:]))\n\ndruid = [0] * n\ndruid[0] = 1\nwhile len(druid) > 0:\n    idx = 0\n    while idx < len(druid):\n        box = stack.pop()\n        if box == ruid:\n            break\n        else:\n            ruid = box\n            idx += 1\n    if idx == len(druid):\n        druid.append(1)\n    else:\n        druid[idx] = 1\n\nprint(min(druid))"}, "975": {"problem_id": 975, "answer": "n = int(input())\nl = list(map(int, input().split()))\nm = int(input())\nl.sort()\nprint(sum(l[i] == l[j] for i in range(n) for j in range(i + n)))\nprint(max(sum(l[i] == l[j] for i in range(n) for j in range(i + n)) for j in range(m)))\n"}, "976": {"problem_id": 976, "answer": "n, x = list(map(int, input().split()))\na = []\nb = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n    b.append(i+1)\nans = 0\nfor i in range(n):\n    if a[i][1] > x:\n        ans += abs(a[i][0] - x)\n    elif a[i][1] == x:\n        ans += abs(a[i][0] - x)\n    else:\n        ans += abs(a[i][0] - x) + 1\nprint(ans)\n"}, "977": {"problem_id": 977, "answer": "import sys\ninput = sys.stdin.readline\n\nn, p = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] > i:\n        ans += 1\n    elif a[i] == i:\n        ans += 1\nprint(ans)\n"}, "978": {"problem_id": 978, "answer": "k = int(input())\nc = list(map(int, input().split()))\nfor i in range(k):\n    c[i] = '.'.join(map(str, range(1, i + 1)))\nprint('YES' if all([c[i] - c[i - k] > 1 for i in range(k)]))\n"}, "979": {"problem_id": 979, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\np = pow(10, n - 1)\nans = 0\nfor i in a:\n    ans += p * (i - p) * (i - p * i)\n    ans %= m\nprint(ans)"}, "980": {"problem_id": 980, "answer": "k, n = list(map(int, input().split()))\ns = []\nfor i in range(k):\n    s.append(input())\nif k == 1:\n    print(-1)\nelse:\n    d = 0\n    for i in range(2501):\n        d += n[i]\n    if d > 5000:\n        print(-1)\n    else:\n        a = [0] * 2501\n        for i in range(1, 2501):\n            a[i] = a[i-1] + n[i]\n        print(''.join(a))\n"}, "981": {"problem_id": 981, "answer": "import sys\nread = sys.stdin.readline\n\nv = int(read())\na = list(map(int, read().split()))\nd = dict()\nfor i in range(10):\n    d[str(i)] = a.count(str(i))\n\nans = 0\nfor i in d:\n    if i not in d:\n        ans = max(ans, i)\nprint(ans)"}, "982": {"problem_id": 982, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    l, r = map(int, readline().split())\n    print('YES' if l+1 <= r else 'NO')"}, "983": {"problem_id": 983, "answer": "import sys\nn,p,q,r=list(map(int,input().split()))\na=list(map(int,input().split()))\nans=0\nfor i in range(1,n+1):\n    ans=max(ans,p*a[i]+(q*a[i-1])+r*a[i])\nprint(ans)"}, "984": {"problem_id": 984, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nT = [list(map(int, input().split())) for i in range(n)]\n\nres = [0]*(n+1)\nstack = [None]*(n+1)\nvisited = [False]*(n+1)\nans = 0\nfor i in range(n):\n    stack[i] = T[i].right\n    while stack[i]!= None:\n        ans += 1\n        stack[i] = T[i].left\n        visited[stack[i]] = True\n        stack.pop(i)\nprint(ans)"}, "985": {"problem_id": 985, "answer": "import sys\ndef __starting_point():\n    n = int(input())\n    Bishops = [[] for i in range(1001)]\n    for i in range(n):\n        x, y = map(int, input().split())\n        Bishops[x].append(y)\n        Bishops[y].append(x)\n    cnt = 0\n    for i in range(n):\n        d = 1\n        for j in range(i+1,1001):\n            if Bishops[j] and Bishops[j[0]][0] == i:\n                d += 1\n        cnt += sum(d)\n    print(cnt)\n\n__starting_point()"}, "986": {"problem_id": 986, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nt = {}\nfor i in range(n):\n    t[a[i]] = 1\nb = {}\nfor i in range(n):\n    if a[i] not in b.keys():\n        b[a[i]] = 0\n    b[a[i]] += 1\nans = 0\nfor i in range(n):\n    if b[a[i]] > k:\n        ans += b[a[i]] * t[a[i]]\n    else:\n        ans += b[a[i]] * t[a[i]] + t[a[i]] * (k - b[a[i]])\nprint(ans)\n"}, "987": {"problem_id": 987, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\np = list(map(int, input().split()))\n\nd = [[] for _ in range(n)]\nfor i, pi in enumerate(p):\n    d[i].append(i)\n\nmach = [0] * n\nans = [0] * n\n\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    a -= 1\n    b -= 1\n    d[a].append(b)\n    d[b].append(a)\n\nfor i in range(n):\n    ans[i] = max(ans[i], p[i])\n\nfor i in range(n):\n    ans[i] = max(ans[i], ans[i] - 1)\n\nprint(' '.join(str(x) for x in ans))"}, "988": {"problem_id": 988, "answer": "# -*- coding: utf-8 -*-\nimport sys\nread = lambda: sys.stdin.readline().split()\nread_string = lambda: list(map(int, read().split()))\nread_list = lambda: list(map(int, read().split()))\nread_tuple = lambda: (int(x), x) # 1-indexed\nread_tuple_list = lambda: list(map(int, read_tuple(None)))\nread_str_list = lambda: list(read_string())\nread_str_tuple_list = lambda: list(read_tuple_list(None))\nread_chr_list = lambda: list(map(int, read().split()))\nread_chr_tuple_list = lambda: list(map(int, read_tuple_list(None)))\nread_dict_list = lambda: list(map(int, read().split()))\nread_dict_tuple_list = lambda: list(map(int, read_tuple_list(None)))\nread_col_list = lambda: list(map(int, read().split()))\nread_col_tuple_list = lambda: list(map(int, read_tuple_list(None)))\nread_row_list = lambda: list(map(int, read().split()))\nread_row_tuple_list = lambda: list(map(int, read_tuple_list(None)))\ndef __starting_point():\n for _ in range(int(input())):\n  row, col = read_col_list()\n  if col == -1:\n   print('-', '-'*(len(read_row_list())-1)+'P')\n  else:\n   print('-', '-'*(len(read_row_list())-1)+'P')\n\n__starting_point()"}, "989": {"problem_id": 989, "answer": "n, k = map(int, input().split())\ns = list(map(int, input().split()))\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a%b)\n\n\nfor i in range(n):\n    s[i] += s[i-1]\n    s[i] //= gcd(s[i], k)\n\nans = 10**9\ncurr = 0\nfor i in range(n-1):\n    curr = max(curr, s[i] - s[i+1])\n    ans = min(ans, curr + 1)\n\nprint(ans)"}, "990": {"problem_id": 990, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nadj = [[] for _ in range(N)]\nfor _ in range(N-1):\n    a, b = map(int, input().split())\n    adj[a-1].append(b-1)\n    adj[b-1].append(a-1)\n\nM = int(input())\nans = 0\nfor m in range(M):\n    u, v = map(int, input().split())\n    ans += adj[u-1].count(v-1)\n    ans += adj[v-1].count(u-1)\nprint(ans)"}, "991": {"problem_id": 991, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M, S = list(map(int, input().split()))\nU = [0] + list(map(int, input().split()))\nV = [0] + list(map(int, input().split()))\nA = [0] * (M + 1)\nB = [0] * (N + 1)\nC = [0] * (M + 1)\nD = [0] * (N + 1)\n\nfor i in range(N):\n    U[i] += 1\n    V[i] += 1\n\nans = []\nfor i in range(min(M, N)):\n    ans.append(sum(A[i]))\n    ans.append(sum(B[i]))\n    ans.append(sum(C[i]))\n    ans.append(sum(D[i]))\n\nfor i in range(min(M, N)):\n    ans.append(sum(A[i]))\n    ans.append(sum(B[i]))\n    ans.append(sum(C[i]))\n    ans.append(sum(D[i]))\n\nfor i in range(min(M, N)):\n    ans.append(sum(A[i]))\n    ans.append(sum(B[i]))\n    ans.append(sum(C[i]))\n    ans.append(sum(D[i]))\n\nfor i in range(min(M, N)):\n    ans.append(sum(A[i]))\n    ans.append(sum(B[i]))\n    ans.append(sum(C[i]))\n    ans.append(sum(D[i]))\n\nfor i in range(min(M, N)):\n    ans.append(sum(A[i]))\n    ans.append(sum(B[i]))\n    ans.append(sum(C[i]))\n    ans.append(sum(D[i]))\n\nfor i in range(min(M, N)):\n    ans.append(sum(A[i]))\n    ans.append(sum(B[i]))\n    ans.append(sum(C[i]))\n    ans.append(sum(D[i]))\n\nfor i in range(min(M, N)):\n    ans.append(sum(A[i]))\n    ans.append(sum(B[i]))\n    ans.append(sum(C[i]))\n    ans.append(sum(D[i]))\n\nfor i in range(min(M, N)):\n    ans.append(sum(A[i]))\n    ans.append(sum(B[i]))\n    ans.append(sum(C[i]))\n    ans.append(sum(D[i]))\n\nsys.stdout.write('\\n'.join(ans))\n"}, "992": {"problem_id": 992, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\nwrite = lambda x: sys.stdout.write(x + '\\n')\nread = lambda x: int(x) * 1000 % 1000000007\nmod = 998244353\n\nN, S = list(map(int, input().split()))\nA = list(map(int, input().split()))\np = mod\nfor i in range(N):\n    p = (p * (p - 1) // 2) % p\nans = sum(f(set(A))) % p\nprint(ans)"}, "993": {"problem_id": 993, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, M = list(map(int, readline().split()))\nA = list(map(int, readline().split()))\n\nans = 0\nfor i in range(N):\n    ans += (A[i] % M) * (N - i)\n\nprint(ans)"}, "994": {"problem_id": 994, "answer": "n, m = list(map(int, input().split()))\nd = {} for i in range(n):\n    d[i+1] = 0\n    d[i] = i+1\nprint(max(d.values()))\n"}, "995": {"problem_id": 995, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]"}, "996": {"problem_id": 996, "answer": "import sys\nreadline = sys.stdin.readline\nn, m, k = list(map(int, readline().split()))\nsys.setrecursionlimit(10**6)\nlayers = [list(map(int, readline().split())) for _ in range(n)]\ndef dfs(x):\n    nonlocal l, stack, critical\n    if x == n:\n        return 0\n    stack.append(x)\n    critical = max(critical, len(stack) - 1)\n    for i in range(1, n):\n        dfs(layers[x] + i)\n        if critical < len(stack) - i - 1:\n            critical = len(stack) - i - 1\ndfs(0)\nprint(critical)"}, "997": {"problem_id": 997, "answer": "s=input()\nn=len(s)\nif n==0:\n    print('-')\n    return\nfor i in range(n):\n    if s[i]=='1'or s[i]=='2'or s[i]=='3'or s[i]=='4':\n        print('-',end=' ')\n        return\na=s.split(';')\nb=[]\nfor i in range(n):\n    if a[i]=='1'or a[i]=='2'or a[i]=='3'or a[i]=='4':\n        b.append(a[i])\n    elif a[i]=='0'or a[i]=='1'or a[i]=='2'or a[i]=='3'or a[i]=='4':\n        b.append(a[i])\n    else:\n        b.append(a[i])\n        print('-',end=' ')\n        return\nprint('-'*(n-1)+''.join(b))"}, "998": {"problem_id": 998, "answer": "import sys\ninput = sys.stdin.readline\n\nn,x=list(map(int,input().split()))\n\na=[0]*26\nfor i in range(1,n+1):\n    a[i]=1\n    a[i>>1]|=(1<<x)\nprint(max(len(a),len(a[::-1])))\n    \n"}, "999": {"problem_id": 999, "answer": "import bisect\nn = int(input())\na = [list(map(int, input().split())) for i in range(n)]\nm = int(input())\na.sort(key=lambda x:x[1])\nb = [0]*n\nfor i in range(n):\n    b[a[i][1]] = i+1\nans = 0\nfor i in range(n):\n    l1, r1 = a[i]\n    l2, r2 = a[i][1]\n    d = abs(l2-r2)\n    if l1 < l2:\n        ans = max(ans, d)\nprint(ans)"}, "1000": {"problem_id": 1000, "answer": "n,v=map(int,input().split())\nt=0\nfor i in range(1,n):\n    t+=v\n    m=int(i/2)\n    if i%2==0:\n        t+=m\n    else:\n        t+=m\nprint(t)"}, "1001": {"problem_id": 1001, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, a = int(readline()), list(map(int, readline().split()))\nsl, sr = [0]*n, [0]*n\nans = 0\nfor i in range(1, n):\n    sl[i] += a[i-1]\n    sr[i] += a[i]\n    if i&1:\n        sr[i] += a[i+1]\n    elif i&2:\n        sl[i] -= a[i+1]\n        sr[i] -= a[i]\n    ans += sr[i] - sl[i]\nprint(ans)"}, "1002": {"problem_id": 1002, "answer": "n, d = list(map(int, input().split()))\nt = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if d > i + 1:\n        ans = -1\n        break\n    t[i] += min(t[i - 1], t[i])\nprint(ans)\n"}, "1003": {"problem_id": 1003, "answer": "import math\nn,m=map(int,input().split())\ns=0\nif n==1:\n    print(m)\nelif n==2:\n    print(2*m)\nelse:\n    for i in range(1,n):\n        s=s+i\n        if s>m:\n            break\n    print(s)"}, "1004": {"problem_id": 1004, "answer": ""}, "1005": {"problem_id": 1005, "answer": "t = int(input())\nfor _ in range(t):\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    m = dict()\n    for i in range(d):\n        m[a[i]] = i\n    ans = len(set(m.values()))\n    for i in range(d):\n        ans = min(ans, len(m.values()) + m[a[i]] - i)\n    print(ans)\n"}, "1006": {"problem_id": 1006, "answer": "import math\nn = int(input())\nfor i in range(n):\n    a = input()\n    b = list(map(int, a.split()))\n    c = 0\n    for i in range(5):\n        if b[i] == \"#\":\n            c += 1\n        else:\n            break\n    if c == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "1007": {"problem_id": 1007, "answer": "MOD = 10**9 + 7\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\np = pow(10, 9)\nk, p = list(map(int, input().split()))\nprint(gcd(k, p - k))\n"}, "1008": {"problem_id": 1008, "answer": "s = input()\nk = int(input())\nif k == 1:\n    print(\"YES\")\nelse:\n    for i in range(1, k):\n        if s[i]!= s[i-1]:\n            print(\"NO\")\n"}, "1009": {"problem_id": 1009, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = map(int, readline().split())\ns = list(map(int, readline().split()))\na = sorted(s)\nb = n - 1\nc = 0\nfor i in range(n):\n    if a[i] <= b:\n        b = a[i]\n        c += i\n    elif a[i] > b:\n        a.pop()\n        b -= i\nprint(min(b, k))"}, "1010": {"problem_id": 1010, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if a[i] == 0:\n        cnt += 1\n    else:\n        cnt += 2*(a[i]%2)\nprint(cnt)"}, "1011": {"problem_id": 1011, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    d = [0]*n\n    for i in range(n):\n        if a[i] - b[i] > d[i]:\n            d[i] = a[i] - b[i]\n    print('{}:{}'.format(max(d), max(m - d[i] for i in range(n))))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1012": {"problem_id": 1012, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s = input().rstrip()\n    n = len(s)\n    if n%2 == 0:\n        print(-1)\n    else:\n        d = n//2\n        a = ''.join(sorted(s))\n        b = ''.join(sorted(s[:d]))\n        print(a+b)"}, "1013": {"problem_id": 1013, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\ntable = [[0] * m for _ in range(n)]\nfor i in range(n):\n    table[i] = [int(i) for i in input().split()]\n\ncolors = [0] * n\nfor i in range(n):\n    colors[table[i][0] - 1] += 1\n\nans = 0\nfor i in range(1, n):\n    for j in range(m):\n        if colors[j] == 0:\n            continue\n        else:\n            ans += min(colors[j] - 1, i)\nprint(ans)\n"}, "1014": {"problem_id": 1014, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nif n&1:\n    print(\"white\")\n    r,c = min(n-2, list(map(int,input().split())))\nelif n==2:\n    print(\"white\")\n    r,c = n-1,n-2\nelse:\n    print(\"black\")\n    r,c = n-2,n-1\n"}, "1015": {"problem_id": 1015, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = []\np = 0\nfor i in range(n):\n    if a[i] == 1:\n        ans.append(p)\n        p += 1\nprint(' '.join(map(str, ans)))"}, "1016": {"problem_id": 1016, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nn, m = map(int, readline().split())\nt = [list(map(int, readline().split())) for _ in range(m)]\nt.sort(key=lambda x: x[1])\nans = INF\nfor i in range(n):\n    ans = max(ans, t[i][0] + t[i][1])\nprint(ans)"}, "1017": {"problem_id": 1017, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nans = 1\nm = 1\nfor i in range(1, n+1):\n    ans += m\n    m *= 2\n    ans += m\n    m += 1\nprint(ans)"}, "1018": {"problem_id": 1018, "answer": "n = int(input())\na = list(map(int, input().split()))\np = a[0]\nfor i in range(1, n):\n    p = max(p, a[i])\n    if p - a[i - 1] >= 0:\n        p -= a[i - 1]\n    else:\n        break\nprint(i)"}, "1019": {"problem_id": 1019, "answer": "n = int(input())\na, b = n, n\nwhile b > 0:\n if a % b == 0:\n  a, b = b, a\n else:\n  a, b = b, a\nprint(a, b)"}, "1020": {"problem_id": 1020, "answer": "w, h, k = list(map(int, input().split()))\nans = w * h * k\nfor i in range(k):\n    ans += w * h\nprint(ans)\n"}, "1021": {"problem_id": 1021, "answer": "n = int(input())\na = list(map(int, input().split()))\nt = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n-1):\n    ans[i+1] = max(a[i] - t[i], 0)\nprint('Yes' if ans[n-1] == 0 else 'No')"}, "1022": {"problem_id": 1022, "answer": ""}, "1023": {"problem_id": 1023, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, t, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nc = [t + k for t in a]\nd = [t + k for t in b]\n\nans = [-1] * n\nfor i in range(n):\n    if c[i] < t:\n        ans[i] = min(ans[i], c[i] + t)\n\nfor i in range(1, n):\n    if ans[i] < t:\n        ans[i] = min(ans[i], ans[i] - t)\n\nprint(ans[-1])\n"}, "1024": {"problem_id": 1024, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(1, n):\n    c += a[i]*(i+1)**2\nprint(c/n)"}, "1025": {"problem_id": 1025, "answer": "import sys\nread = sys.stdin.readline\n\nn = int(read())\nans = 0\nfor i in range(n):\n    x, y = list(map(int, read().split()))\n    ans += (x!= y)\nprint(ans)"}, "1026": {"problem_id": 1026, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    a[i] = max(a[i], a[i - 1] + b[i])\n    ans = max(ans, a[i])\nprint(ans)"}, "1027": {"problem_id": 1027, "answer": "from sys import stdin, stdout\nimport math\nfrom collections import defaultdict, deque\nfrom itertools import permutations, combinations_with_replacement\nfrom heapq import heapify, heappush, heappop, heappushpop, heappushall\n\n\ndef main():\n    n = int(stdin.readline())\n    dp = [0]*14\n    for i in range(14):\n        dp[i] = int(stdin.readline())\n    for _ in range(n):\n        dp[0] += 1\n    for i in range(1, 14):\n        dp[i] += dp[i-1]\n    print(dp[14])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1028": {"problem_id": 1028, "answer": "n, m = list(map(int, input().split()))\nans = 0\nfor i in range(m):\n    if n & (1 << i) > 0:\n        ans = max(ans, i)\nprint(ans, end=' ')\nprint(ans)\n"}, "1029": {"problem_id": 1029, "answer": "import sys\ninput = sys.stdin.readline\n\np = int(input())\na = [0] * 1000001\nfor i in range(1, 1000001):\n    a[i] += 1\nans = 0\ncnt = 0\nfor i in range(len(a)):\n    if a[i] == 0:\n        ans += 1\n        cnt += 1\n    elif a[i] > 0:\n        ans += 2\n        cnt += 1\nprint(ans)"}, "1030": {"problem_id": 1030, "answer": "n, p, k = map(int, input().split())\nprint(\"<<\", p-k+1, p+1, p+k-1)"}, "1031": {"problem_id": 1031, "answer": "n = int(input())\na = list(map(int, input().split()))\ny = []\nfor i in range(n):\n    y.append(a[i])\nans = ''\nfor i in range(n):\n    ans += '\\''+str(y[i])+'\\''\nprint(ans)"}, "1032": {"problem_id": 1032, "answer": "import sys\ninput = sys.stdin.readline\n\nn, p = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] <= p:\n        ans += 1\nprint(ans)\n"}, "1033": {"problem_id": 1033, "answer": "import sys\nreadline = sys.stdin.readline\n\nINF = 10**18\nn, h = map(int, readline().split())\n\ndef dfs(x):\n    nonlocal ans\n    ans = min(ans, x - h)\n    cnt = 0\n    for i in range(1, x):\n        cnt += dfs(i)\n    return cnt + 1\n\nans = INF\nprint(dfs(0))"}, "1034": {"problem_id": 1034, "answer": "import sys\ninput = sys.stdin.readline\n\nX, Y, Z = map(int, input().split())\nABC = [list(map(int, input().split())) for _ in range(Z)]\n\ndef bfs(adj):\n    adj.append([0, 0, 0])\n    stack = deque([0])\n    visited = set()\n    while stack:\n        cur, c, d = stack.popleft()\n        if adj[cur][c] == c:\n            continue\n        adj[cur][c] = d\n        visited.add(cur)\n        for a, b in adj[cur]:\n            if a not in visited:\n                stack.append(_)\n    return visited\n\nvisited = bfs(adj=[[0] * X for _ in range(Y) for _ in range(Z)])\n\nfor a in range(1, 11):\n    for b in range(1, 11):\n        for c in range(1, 11):\n            for d in range(1, 11):\n                print(visited[ABC[a][b][c]], end=\"\")\n            print()"}, "1035": {"problem_id": 1035, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom bisect import bisect_inversion as bi\na, b = list(map(int, input().split()))\nm = {}\nfor i in range(2, int(b**.5)+1):\n    if b%i==0:\n        m[i]=1\n        m[b//i]+=1\ndef gcd(a,b):\n    if b==0:\n        return a\n    return gcd(b,a%b)\ndef sieve(n):\n    if n<2:\n        return [1]\n    r = sieve(n//2)\n    l = r[-1] if r else [1]\n    for i in range(n//2):\n        l.append(l[-1]*i)\n    return l\nans = []\nfor i in range(len(m)):\n    if m[i]==1:\n        ans.append(i+1)\nprint(len(ans))\nfor i in ans:\n    print(i)"}, "1036": {"problem_id": 1036, "answer": "import sys\nreadline = sys.stdin.readline\nn, k = list(map(int, readline().split()))\ns = list(map(int, readline().split()))\n\nMOD = 10**9 + 7\nP = [0] * (2**k)\nfor i in range(1, 2**k):\n    P[i] = P[i-1] + i\n\nans = ['R', 'P', 'S']\nfor i in range(n):\n    ans.append(ans[-1][i] + (P[i] if i&1 else 0))\n\nprint('\\n'.join(ans))"}, "1037": {"problem_id": 1037, "answer": "import bisect\ndef read():\n    return int(input())\n\ndef read_once():\n    return int(input())\n\nN = read()\nA = list(map(int, input().split()))\n\nans = 0\nm = 1000000007\nfor i in range(1, N):\n    ans += A[i]*(i-1)**2\n    m = min(m, A[i]*i**2)\nprint(ans)"}, "1038": {"problem_id": 1038, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    A, B = map(int, input().split())\n    y = 0\n    for a in range(A+1, B+1):\n        y = y^a\n    print(y)\n\nmain()"}, "1039": {"problem_id": 1039, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\n\nn = int(input())\nadj = [[] for _ in range(n)]\nfor i in range(n-1):\n    a, b, c = map(int, input().split())\n    adj[a-1].append((b-1, c))\n    adj[b-1].append((a-1, c))\n\nQ = int(input())\nS = [None] * Q\nVisited = [0] * Q\nans = [None] * Q\n\nfor _ in range(Q):\n    x, y = map(int, input().split())\n    S[x-1] = y\n    Visited[y] = True\n    ans[x] = ans[y] = len(adj[y])\n\nque = deque([0])\nwhile que:\n    t = que.popleft()\n    for to, c in adj[t]:\n        if Visited[to] == False:\n            que.append(to)\n            S[to] = c\n\nfor a, b, c in ans:\n    print(a)"}, "1040": {"problem_id": 1040, "answer": "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI2(): return list(map(int,sys.stdin.readline().rstrip()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\ndef LS2(): return list(sys.stdin.readline().rstrip())\nn = I()\ns = S()\nc = 0\nfor i in range(n):\n    if s[i]!=s[i-1]:\n        c+=1\nprint(c)"}, "1041": {"problem_id": 1041, "answer": "n = int(input())\ns = input()\nl = []\nfor i in range(n):\n    l.append(s[i])\nl.sort()\nans = \"YES\"\nfor i in range(n):\n    if l[i] == \"0\":\n        ans = \"NO\"\nprint(ans)"}, "1042": {"problem_id": 1042, "answer": "import math\nx, y = map(int, input().split())\ns = pow(10, 9) + 7\ndp = [0] * (y + 1)\ndp[1] = 1\nfor i in range(2, y + 1):\n    dp[i] = (dp[i - 1] * i) % s\nprint(dp[y])"}, "1043": {"problem_id": 1043, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\na = list(map(int, readline().split()))\nd = [0] * n\nfor i in range(1, n):\n    if a[i] == -1:\n        d[i] = i\nans = sum(d)\nprint(ans)"}, "1044": {"problem_id": 1044, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\np = [0]*(n+1)\nfor i in range(1, n+1):\n    p[i] = p[i-1] + a[i]\n\nans = []\nfor i in range(n):\n    ans.append(p[i]//2)\n\nprint(1 if ans[-1] < p[-1] else 2)"}, "1045": {"problem_id": 1045, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nans = 1\nfor i in range(2, n + 1):\n    ans = max(ans, i + 1 + i)\nprint(ans)"}, "1046": {"problem_id": 1046, "answer": "n = int(input())\ns = list(map(int, input().split()))\ns.sort()\nans = 0\nfor i in range(n):\n    if s[i] == 0:\n        ans += 1\nprint(ans)\n"}, "1047": {"problem_id": 1047, "answer": "n = int(input())\ns = [0] * 100001\nfor i in range(1, n):\n    s[i] += min(s[i-j] for j in range(2, i))\nprint(n - sum(s))"}, "1048": {"problem_id": 1048, "answer": "n = int(input())\ns = input()\nm = 0\nfor i in range(n):\n    if s[i] == 'U':\n        m = max(m, i - 2)\n    elif s[i] == 'D':\n        m = max(m, i - 1)\n    elif s[i] == 'L':\n        m = max(m, i + 1)\n    else:\n        m = max(m, i)\nprint(m)"}, "1049": {"problem_id": 1049, "answer": "n, d = map(int, input().split())\nans = 0\nfor i in range(d):\n    s = input()\n    ans += n - len(s)\nprint(ans)"}, "1050": {"problem_id": 1050, "answer": "n,m,k=list(map(int,input().split()))\nprint(\"Yes\" if n==m*k else \"No\")\n"}, "1051": {"problem_id": 1051, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = sorted(a)\nc = 0\nfor i in range(n):\n    if b[i] == 1:\n        c += 1\nprint(c)"}, "1052": {"problem_id": 1052, "answer": "n, k = map(int, input().split())\ns = [0] * (n + 1)\nfor i in range(1, n + 1):\n    s[i] += 1\nans = 0\nfor i in range(k):\n    if s[i] == i:\n        ans += 1\nprint(ans)"}, "1053": {"problem_id": 1053, "answer": "import sys\nn = int(sys.stdin.readline())\nans = [0]*n\nfor i in range(1,n):\n    ans[i] = ans[i-1] ^ i\nsys.stdout.write(' '.join(map(str,ans)))"}, "1054": {"problem_id": 1054, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [list(map(int, input().split())) for i in range(n)]\nans = 99999999999999*(n-1)\nfor i in range(n-1):\n    x, y = a[i]\n    ans = min(ans, abs(x-y))\nprint(ans)\n"}, "1055": {"problem_id": 1055, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] > a[i+1]:\n        ans += 1\nprint(ans)"}, "1056": {"problem_id": 1056, "answer": ""}, "1057": {"problem_id": 1057, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 998244353\n\nn = int(input())\ns = input().rstrip()\n\nd = defaultdict(list)\n\nfor i in range(n):\n    d[s[i]].append(i)\n\ncnt = 0\n\nfor i in range(1, n):\n    if s[i] == s[i - 1]:\n        cnt += 1\n    else:\n        cnt += d[s[i]].count(s[i - 1])\n\nprint(cnt % MOD)"}, "1058": {"problem_id": 1058, "answer": "n = int(input())\na = []\nfor i in range(4):\n    a.append([0]*n)\n    a[i][i] = i\n\nb = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i][0] == b[i][0]:\n        c += 1\n    elif a[i][0] > b[i][0]:\n        b[i] = [a[i][0]] + b[i][1:]\n        c += 1\nprint(c)"}, "1059": {"problem_id": 1059, "answer": "import sys\ninput = sys.stdin.readline\n\nk = int(input())\n\ndef vowel(s):\n    return ''.join(['a' if i not in s else i for i in s]).lower()\n\nVOWELS = {'a': 'a', 'e': 'e', 'i': 'i', 'o': 'o', 'u': 'u'}\n\nfor i in range(k):\n    print(-1)\n    \n"}, "1060": {"problem_id": 1060, "answer": "n = int(input())\na = list(map(int, input().split()))\ng = [[] for i in range(n)]\nfor i in range(n):\n    g[a[i]].append(i)\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if g[j] & g[i]:\n            ans = max(ans, len(g[j]) - g[j].count(i))\nprint(ans)"}, "1061": {"problem_id": 1061, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    a, b, c, d, e = map(int, input().split())\n    if a == b:\n        print(c + 1)\n    elif a == c:\n        print(d + 1)\n    elif a == d:\n        print(e + 1)"}, "1062": {"problem_id": 1062, "answer": "import sys\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    d = {i: 0 for i in range(n)}\n    for i in range(n):\n        d[i] = s.count(i)\n    print(d[0])\n    print(*(d[i] for i in range(n) if d[i]!= 0))\nmain()"}, "1063": {"problem_id": 1063, "answer": "n = int(input())\ns = input()\ns = list(s)\np = s.count('?')\nq = s.count('0')\nif p>q:\n    print(\"YES\")\n    for i in range(n):\n        print(s[i],end=\"\")\nelse:\n    print(\"NO\")"}, "1064": {"problem_id": 1064, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9+7\ndef main():\n    n, m, k = map(int, readline().split())\n    blocked = list(map(int, readline().split()))\n    lamps = list(map(int, readline().split()))\n    lamps.sort()\n    ans = INF\n    for i in range(m):\n        ans = min(ans, lamps[i] + sum(lamps[i:i+k]) + k*a[i])\n    print(ans if ans!= INF else -1)\n\nmain()\n"}, "1065": {"problem_id": 1065, "answer": "import sys\ninput = sys.stdin.readline\nn, k, M, D = list(map(int, input().split()))\na = k // M\nb = (k - M * a) // M\nc = n // M\nprint(max(a * b * c, a + b + c, a + b + c + D))"}, "1066": {"problem_id": 1066, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nn, k = map(int, input().split())\na = [0]*(n+1)\na[1::2] = [x for x in list(map(int, input().split()))]\nb = [0]*(n+1)\nb[1::2] = [x for x in list(map(int, input().split()))]\nfor i in range(2, n+1):\n    if br(a[i]):\n        b[i] = a[i]\n    elif bl(a[i]):\n        b[i] = a[i] + 1\nprint(b[k-1])"}, "1067": {"problem_id": 1067, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(1, n):\n    if a[i] == 0:\n        ans += 1\nprint(ans)"}, "1068": {"problem_id": 1068, "answer": "s = input()\na = []\nfor i in range(len(s)):\n    a.append(s[i])\n    if s[i] == '+':\n        a.append(s[i])\n    elif s[i] == '-':\n        a.append(s[i])\n    else:\n        a.append(s[i])\nprint(''.join(a))"}, "1069": {"problem_id": 1069, "answer": "import math\nn = int(input())\np = pow(10, n)\nprint(p % 5)"}, "1070": {"problem_id": 1070, "answer": "n,k=map(int,input().split())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n    if a[i]==a[i+1]:\n        s+=1\nprint(k-s)"}, "1071": {"problem_id": 1071, "answer": "a = list(map(int,input().split()))\nb = list(map(int,input().split()))\nn = int(input())\nc = []\nfor i in range(0,n):\n    c.append(a[i])\n    c.append(b[i])\nprint('YES' if len(c) == n else 'NO')"}, "1072": {"problem_id": 1072, "answer": "n, m = list(map(int, input().split()))\ns = [input() for _ in range(n)]\ns.sort()\nres = 0\nfor i in range(n-1):\n    for j in range(i+1, n):\n        if s[i] < s[j]:\n            res += 1\nprint(res)\n"}, "1073": {"problem_id": 1073, "answer": "n = int(input())\ns = input()\nans = 0\nfor i in range(n):\n    if s[i] == \"U\":\n        ans += 2*(n-i-1)\n    elif s[i] == \"R\":\n        ans += 2*(i-n+1)\n    elif s[i] == \"D\":\n        ans += 2*(n-i-2)\nprint(ans)"}, "1074": {"problem_id": 1074, "answer": "import sys\nreadline = sys.stdin.readline\n\na = int(readline())\nprint(a)"}, "1075": {"problem_id": 1075, "answer": "n = int(input())\nans = []\nfor i in range(n):\n    ans.append(i + 1)\n    ans.append(i + 2)\n    ans.append(i + 3)\n    ans.append(i + 4)\n    ans.append(i + 5)\n    ans.append(i + 6)\n    ans.append(i + 7)\n    ans.append(i + 8)\n    ans.append(i + 9)\n    ans.append(i + 10)\n    ans.append(i + 11)\n    ans.append(i + 12)\n    ans.append(i + 13)\n    ans.append(i + 14)\n    ans.append(i + 15)\n    ans.append(i + 16)\nprint(' '.join(map(str, ans)))"}, "1076": {"problem_id": 1076, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\nMOD = 1000000007\nfac = [1]*(n+m)\nfac[0] = fac[1] = 0\nfor i in range(2, n+m):\n    fac[i] = fac[i-1]*i % MOD\nprint(fac[n]*pow(fac[n], MOD-2, MOD) % MOD)"}, "1077": {"problem_id": 1077, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = [0] * (2000 + 1)\nfor i in range(1, 2000 + 1):\n    b[i] += a[i]\nans = b[m]\nans_min = b[0]\nfor i in range(1, m):\n    ans_min = min(ans_min, b[i])\n    b[i] -= ans_min\nprint(ans, b)\n"}, "1078": {"problem_id": 1078, "answer": "import sys\ninput = sys.stdin.readline\n\ndef calc(a):\n    n = len(a)\n    a.sort()\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i])\n        else:\n            b.append(a[i]//2)\n    return b\n\nn = int(input())\nans = []\nfor i in range(n):\n    a = int(input())\n    b = calc(a)\n    ans.append(b)\nprint(*ans, sep='\\n')\n"}, "1079": {"problem_id": 1079, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nans = 0\n\nwhile n > 0:\n    ans += pow(2, n)\n    n = n - 1\n\nprint(ans)"}, "1080": {"problem_id": 1080, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] < a[i+1]:\n        ans += a[i]\n    elif a[i] > a[i+1]:\n        ans -= a[i]\n    else:\n        ans += a[i]\nprint(ans)\n"}, "1081": {"problem_id": 1081, "answer": "a = int(input())\nif a % 2 == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "1082": {"problem_id": 1082, "answer": "from math import sqrt\nn = int(input())\na = list(map(int, input().split()))\nm = 10**9+7\nc = [0]*n\nfor i in range(n):\n    c[i] = c[i] + a[i]*a[i]\nans = 1\nfor i in range(n):\n    ans = (ans*c[i]%m)%m\nprint(ans)"}, "1083": {"problem_id": 1083, "answer": "n = int(input())\na = []\nfor i in range(n):\n    a.append(i)\na.sort()\nb = 0\nfor i in range(n):\n    b += a[i]\nprint(b)\nb = 0\nfor i in range(n):\n    b += a[i]\nprint(b)"}, "1084": {"problem_id": 1084, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\nA = [list(row) for row in readline().split()]\n\nans = [0]*n\nfor i in range(n):\n    for j in range(m):\n        if i == 0 or j == 0:\n            continue\n        ans[i] |= A[i][j]\n\nB = [list(row) for row in readline().split()]\n\ncnt = 0\nfor i in range(n):\n    for j in range(m):\n        if i == 0 or j == 0:\n            continue\n        if cnt > 0:\n            break\n        if ans[i] and cnt > 0:\n            cnt += 1\n        elif ans[i] and cnt == 0:\n            cnt = 1\nprint(\"Yes\" if cnt else \"No\")"}, "1085": {"problem_id": 1085, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nans = 0\nwhile N > 1:\n  ans += (N % 2)\n  N //= 2\n"}, "1086": {"problem_id": 1086, "answer": "import sys\nreadline = sys.stdin.readline\n\nH, W = list(map(int, readline().split()))\nA = list(map(int, readline().split()))\nB = list(map(int, readline().split()))\n\n# \u8986\u76d6\u6a61\u9802\u70b9\u306e\u6570\uff0c\u6700\u77ed\u6570\u4ee5\u4e0b\u306e\u70b9\u306b\u5206\u3051\u308b\u5fc5\u8981\u6761\u4ef6\u4e0b\uff1a\n# \u533a\u9593\u53d6\u5f97\u3059\u308b\u533a\u9593\u306e\u9577\u3055\uff0c\u7d4c\u8def\u5185\u306b\u5b58\u5728\u3059\u308b\uff0c\u533a\u9593\u914d\u7f6e\u65b9\u6cd5\u306b\u95a2\u3059\u308b\u8ca0\ufffdas\uff1a\nn = len(A)\nm = len(B)\n\nINF = 10**9+7\ndef dijkstra(s):\n    d = [INF]*n\n    d[s] = 0\n    for i in range(n):\n        for j in range(mApi, n):\n            if d[i] + d[j] < d[s]:\n                d[i] = d[s] + 1\n                d[j] = d[s]\n    return d\n\nans = INF\nfor i in range(H):\n    for j in range(W):\n        d = dijkstra(A[i])\n        d = min(d, abs(d[1]-A[i][1])+abs(d[2]-A[i][2]))\n        ans = min(ans, d)\n\nprint(ans)"}, "1087": {"problem_id": 1087, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\np = [0]*(k+1)\nfor i in range(n):\n  p[a[i] & 1] += 1\nm = 10**9 + 7\nans = 0\nfor i in range(k+1):\n  ans = max(ans, f(m-p[i]))\nwrite(ans)"}, "1088": {"problem_id": 1088, "answer": "import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nA = [list(map(int, input().split())) for i in range(N)]\nMOD = 998244353\nfact = [1] * N\nfor i in range(N):\n    fact[A[i][i]] = i * fact[A[i][i]]\ncnt = [0] * N\nfor i in range(N):\n    cnt[A[i][i]] = sum(fact[a] * (i - a) % MOD for a in fact[i]) % MOD\nprint(cnt[K] - cnt[K - 2])"}, "1089": {"problem_id": 1089, "answer": "import sys\ninput = sys.stdin.readline\n\ndef calc(n, m, k):\n    return (sum(list(range(n-i, n+i+1))) + k*(k-1)//2)%(10**9+7)\n\nmod = 10**9+7\nINF = float('INF')\n\nN, M, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    A.append((calc(N, M, K) % mod) % mod)\n\nprint(A[N*M:])"}, "1090": {"problem_id": 1090, "answer": "import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nS = input().rstrip()\nc = 0\nfor i in range(N):\n  if S[i] == \"L\":\n    c += 1\n  elif S[i] == \"R\":\n    c += 1\nprint(max(c))"}, "1091": {"problem_id": 1091, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append(a[i])\nprint(2, max(ans))\n"}, "1092": {"problem_id": 1092, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nread = stdin.read\n\nn, m = list(map(int, input().split()))\nlights = list(map(int, input().split()))\n\nans = 1\nfor i in range(1, n + 1):\n    if lights[i] == 1:\n        lights[i] = 0\n        ans *= (i + 1)\n    elif lights[i] == 0:\n        lights[i] = 1\n        ans %= 1000000007\n\nprint(ans)\n"}, "1093": {"problem_id": 1093, "answer": ""}, "1094": {"problem_id": 1094, "answer": "n = int(input())\ns = list()\nfor i in range(n):\n    s.append(input())\n    \nprint(' '.join(s))"}, "1095": {"problem_id": 1095, "answer": "import sys\nreadline = sys.stdin.readline\n\nn,y_1=list(map(int,readline().split()))\na=list(map(int,readline().split()))\nm,y_2=list(map(int,readline().split()))\na.sort()\nb.sort()\nans=0\nfor i in range(n):\n    ans+=a[i]*y_1+b[i]*y_2\nprint(ans)"}, "1096": {"problem_id": 1096, "answer": "s = input()\nn = int(s.split(' ')[0])\nans = 0\nfor i in range(n):\n    if s[i] == 'd':\n        ans += 1\nprint(ans)"}, "1097": {"problem_id": 1097, "answer": "import sys\nreadline = sys.stdin.readline\nn, t, k = map(int, readline().split())\na = list(map(int, readline().split()))\ndead_ends = [0] * n\ndead_ends[0] = 1\nk %= n\n\nfor i in range(1, n):\n    if dead_ends[i] == 0:\n        dead_ends[i] = k\n        for j in range(i):\n            if a[j] == 1:\n                dead_ends[len(a)] = 1\n                break\nprint(n)\nfor i in range(n):\n    print(i + 1, end ='')"}, "1098": {"problem_id": 1098, "answer": "n = int(input())\nalarm_list = []\nalarm_list.append(input().split())\nfor i in range(n):\n    hour, minute = int(alarm_list[i][1]), int(alarm_list[i][0])\n    if hour < 23:\n        hour += 24\n    elif hour > 2 and minute > 59:\n        hour -= 60\n        minute += 59\n    else:\n        minute += 60\n    alarm_list.append((hour, minute))\nprint(\"24:00\" + \" \".join(str(i) for i in alarm_list[::-1]))"}, "1099": {"problem_id": 1099, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nedges = []\nadj=[[] for i in range(n)]\nfor i in range(n-1):\n    a, b, c = list(map(int, input().split()))\n    adj[a].append(b)\n    adj[b].append(c)\n    adj[c].append(a)\nvisited = set()\nvisited.add(0)\nans = 0\nfor i in range(1, n):\n    visited.add(i)\n    d = adj[i].pop()\n    ans += d[1] + 1\n    edges.append((i, d))\nprint(ans)\n"}, "1100": {"problem_id": 1100, "answer": "from math import sqrt\nn = int(input())\nans = 0\nfor i in range(1, n):\n    a = int(sqrt(i))\n    if a*a == i:\n        ans += 1\nprint(ans)"}, "1101": {"problem_id": 1101, "answer": "n, k = list(map(int, input().split()))\ns = input()\ncnt = 0\nr = n-k+1\nfor i in range(1, n):\n    if s[i] == '0':\n        cnt += 1\n    else:\n        r = min(r, i-cnt)\nprint(r)\n"}, "1102": {"problem_id": 1102, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\n')\nn, a = list(map(int, input().split()))\nt = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    t[i] -= 1\n    if t[i] == 0:\n        cnt += 1\nprint(cnt)"}, "1103": {"problem_id": 1103, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nd = deque()\nfor i in range(8):\n    d.append(a[i])\n    if d[0]!= a[i]:\n        d.popleft()\nans = 0\ncnt = 0\nfor i in range(1, 8):\n    if d[i] - d[i - 1]!= 1:\n        cnt += 1\n    else:\n        ans = max(ans, cnt)\n        cnt = 0\nprint(ans)"}, "1104": {"problem_id": 1104, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = [0]*(n+1)\nfor i in range(n-1):\n    ans[i] = a[i] | b[i+1]\n\nprint(\"YES\" if ans[n-1]==3 else \"NO\")\nfor i in range(n-1):\n    print(ans[i], end=\" \")\nprint()"}, "1105": {"problem_id": 1105, "answer": "n = int(input())\nsolutions = []\nfor i in range(n):\n    x, k = map(int, input().split())\n    solutions.append((x, k))\nsolutions.sort()\nprint('YES' if solutions[0][0] == 0 else 'NO')"}, "1106": {"problem_id": 1106, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if a[i] % 2!= 0:\n        cnt += a[i] // 2\nprint(cnt)"}, "1107": {"problem_id": 1107, "answer": "n = int(input())\ns = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if s[i] == 'a':\n        ans += 1\n    elif s[i] == 'b':\n        ans += (i + 1) % n\nprint(ans)"}, "1108": {"problem_id": 1108, "answer": "n = int(input())\na = []\nfor i in range(n):\n    a.append(tuple(map(int, input().split())))\nc = 0\nfor i in range(n):\n    if a[i][1] > a[i][0]:\n        c += 1\nprint(c)"}, "1109": {"problem_id": 1109, "answer": "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))\ncnt = 0\nfor i in range(n):\n    if a[i]==1 or a[i]==2:\n        cnt+=1\nprint(cnt)\n"}, "1110": {"problem_id": 1110, "answer": "n = int(input())\nans = 0\nfor i in range(1, n+1):\n    if i == n:\n        ans += 1\nprint(ans)"}, "1111": {"problem_id": 1111, "answer": "import sys\ninput = sys.stdin.readline\nM = 10**9+7\nn, k = map(int, input().split())\nw = list(map(int, input().split()))\ndp = [0]*n\ndp[0] = 1\nfor i in range(1, n):\n    dp[i] = (dp[i-1]*w[i])%M\nprint(dp[n-k:])"}, "1112": {"problem_id": 1112, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\ninp = list(map(int, read().split()))\nn, m = inp[0], inp[1]\nres = []\nfor i in range(3):\n    if n[i] == 0:\n        res.append(i)\n    else:\n        res.append(res[-1] + n[i])\nprint(' '.join(map(str, res)))"}, "1113": {"problem_id": 1113, "answer": "import sys\ninput = sys.stdin.readline\n\nn=int(input())\na=list(map(int,input().split()))\nif n%2==0:\n    print(-1)\nelse:\n    d=0\n    for i in range(n):\n        if a[i]==0:\n            d+=1\n        elif a[i]==1:\n            continue\n        else:\n            print(d)\n            break"}, "1114": {"problem_id": 1114, "answer": "n, m = list(map(int, input().split()))\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\ng = set(range(1, n + 2))\nh = {f: i for i, f in enumerate(b)}\n\ns = set()\nfor i in range(m):\n    s.add(g.intersection_update(h.get(i, set()))[1])\n\nprint('Possible' if len(s) == n else 'Ambiguity' if len(s) > n else 'Impossible')\n"}, "1115": {"problem_id": 1115, "answer": "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    l, r = map(int, input().split())\n    dp = [[0] * (n + 1) for _ in range(m)]\n    for i in range(1, n + 1):\n        dp[i][0] = i\n    for j in range(1, m):\n        l_j, r_j = map(int, input().split())\n        if l_j > r_j:\n            print(-1)\n            return\n        cur = 0\n        for i in range(1, n + 1):\n            if dp[i][cur] < dp[i - 1][cur]:\n                cur = i\n            elif dp[i][cur] == dp[i - 1][cur]:\n                break\n        if cur == n:\n            print(dp[n][cur])\n            return\n        for i in range(cur + 1, n + 1):\n            dp[i][cur] = dp[i - 1][cur] + 1\n        for i in range(cur + 1, n + 1):\n            dp[i][cur] = dp[i - 1][cur]\n    print(dp[-1][-1])\n"}, "1116": {"problem_id": 1116, "answer": "import sys\nread = sys.stdin.readline\n\nt = int(read())\nfor _ in range(t):\n    r, b, k = list(map(int, read().split()))\n    r -= 1\n    b -= 1\n    k -= 1\n    if k % 2 == 0:\n        print('REBEL')\n    else:\n        print('Obey')\n"}, "1117": {"problem_id": 1117, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint2=stdout.write\nans=0\nn=int(input())\nfor i in range(n):\n    w,h=list(map(int,input().split()))\n    if w>h:\n        w,h=h,w\n    ans|=w>h\n    print(ans)\n"}, "1118": {"problem_id": 1118, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * n\nc = [0] * n\nfor i in range(n):\n    b[i] = a[i]\n    c[i] = i\nans = 0\nfor i in range(n):\n    if b[i] == i:\n        ans += 1\nprint(ans)"}, "1119": {"problem_id": 1119, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**9+7\nfac = [1]*1000001\nfor i in range(1,100001):\n    fac[i] = i*fac[i-1]\ns = int(readline())\na = s//2\nb = s%2\nprint(a*b*(a-1)*(b-1)//sqrt(4*a*b))"}, "1120": {"problem_id": 1120, "answer": "import sys\ndef II():\n\treturn int(sys.stdin.readline())\n \ndef MI():\n\treturn map(int, sys.stdin.readline().split())\n \ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef SI():\n\treturn sys.stdin.readline().rstrip()\n \ndef IR(n):\n\treturn [int(x) for x in range(1, 10**5+1)]\n \ndef IRL(n):\n\treturn [i << i for i in range(n+1)]\n \ndef LIR(n):\n\treturn [2*i + 1 for i in range(n+1)]\n \ndef SR(n):\n\treturn [2*i - 1 for i in range(n+1)]\n \ndef LSR(n):\n\treturn [2*i - 2 for i in range(n+1)]\n \ndef LSRA(n):\n\treturn [2*i - 3 for i in range(n+1)]\n \ndef SRN(n):\n\treturn [2*i - 4 for i in range(n+1)]\n \ndef SRSN(n):\n\treturn [2*i - 5 for i in range(n+1)]\n \ndef DEC(n):\n\treturn bin(n).replace(\"0b\", \"\")\n \ndef INC(n):\n\treturn bin(n).replace(\"0b\", \"\")\n \ndef POWR(a, b):\n\treturn pow(a, b, 10)\n \ndef POWR2(a, b):\n\treturn pow(a, b, 2)\n \ndef MOD(n):\n\treturn 10**(n.bit_length() - 1)\n \ndef BIT(n):\n\treturn 1 << n\n \ndef BITX(n):\n\treturn 1 << n | 1\n \ndef MOV(a, b):\n\treturn a << n | b\n \ndef MUL(a, b):\n\treturn a * b\n \ndef IDX(i):\n\treturn i+1\n \ndef ILL(n):\n\treturn len(str(n))\n \ndef LIST(n):\n\treturn [int(x) for x in sys.stdin.readline().split()]\n \ndef PRINT(s):\n\tprint(\" \".join(list(map(str, s.split()))), end=\"\")\n \ndef main():\n\tn = II()\n\tprint(n)\n\treturn"}, "1121": {"problem_id": 1121, "answer": "from collections import deque\nn,m=list(map(int,input().split()))\ntable=[[''for _ in range(3)] for _ in range(n)]\ndef dfs(i):\n    nonlocal table,colors\n    colors[i]=1\n    que=deque([i])\n    while que:\n        v=que.popleft()\n        for j in range(len(table[v])):\n            if table[v][j]==' ':\n                continue\n            else:\n                colors[table[v][j]]=colors[v]%2\n                que.append(j)\ndfs(0)\ntable=[[''for _ in range(3)] for _ in range(n)]\nans=[]\nfor i in range(n):\n    for j in range(m):\n        if table[i][j]==' ':\n            ans.append(i)\nprint(' '.join(map(str,ans)))\n"}, "1122": {"problem_id": 1122, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nans = []\n\nfor i in range(N):\n    a, b = map(int, input().split())\n    ans.append((a, b + 1))\n\nprint(*ans, sep='\\n')"}, "1123": {"problem_id": 1123, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**9)\nINF = float('inf')\nMOD = 10**9+7\n\ndef I(): return int(input())\ndef F(): return float(input())\ndef LS(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LI2(): return list(map(int, input().split()))\ndef LI3(): return list(map(int, input().split()))\ndef S(): return input()\ndef SR(s, l): return SR(s, l-1)\ndef LSR(s, l): return LSR(s, l)\nmod = pow(10, 9) + 7\n\nn, k = LS()\np = 1\nfor i in range(1, n+1):\n    p *= i\n    p %= MOD\nans = I()\nprint(ans)"}, "1124": {"problem_id": 1124, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [0]*(n+1)\n    for i in range(n):\n        dp[i+1] = max(dp[i], a[i])\n        dp[i+1] = min(dp[i], a[i])\n        dp[i+1] = max(dp[i], a[i] - dp[i])\n        dp[i+1] = min(dp[i], a[i] + dp[i])\n    print(dp[n])\n\nmain()\n"}, "1125": {"problem_id": 1125, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    dp = [0]*(N+1)\n    dp[0] = A[0]\n    for i in range(1, N):\n        dp[i] = max(dp[i-1] + A[i], A[i])\n    "}, "1126": {"problem_id": 1126, "answer": "import sys\nread = sys.stdin.readline\n\ndef I(): return int(read().rstrip())\ndef MI(): return list(map(int, read().split()))\ndef LI(): return list(map(int, read().split()))\ndef LI2(): return list(map(int, read().split(' ')))\ndef LI3(): return list(map(int, read().split(' ', 1)))\ndef LI4(): return list(map(int, read().split(' ', 2)))\ndef LI5(n): return list(map(int, read().split(n)))\ndef S(): return map(int, read().split())\ndef LS(): return list(map(int, read().split()))\ndef LI5S(n): return [ls() for _ in range(n)]\n\nN, M = MI()\nprint(N+M-sum(A[M::2]))"}, "1127": {"problem_id": 1127, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    print(2 if a[-1]%2==0 else 1)"}, "1128": {"problem_id": 1128, "answer": "a,m=map(int,input().split())\nif a%m==0:\n    print('Yes')\nelse:\n    print('No')"}, "1129": {"problem_id": 1129, "answer": "n = int(input())\npoints = list(map(int, input().split()))\ndist = []\nfor i in range(n):\n    dist.append(points[i] - points[i - 1])\ndist.sort()\nprint(dist.pop())"}, "1130": {"problem_id": 1130, "answer": "n, m, k = map(int, input().split())\nt = [list(input())[:4] + [0] * (m + 1) for i in range(4)]\nt[3][0] = 1\nfor i in range(4):\n    if t[i][0] == 1:\n        t[i][1] = t[i][0] + 1\n    else:\n        t[i][1] = t[i][0]\nprint(sum(t[i][1:]))"}, "1131": {"problem_id": 1131, "answer": "a, b, w, x, c = list(map(int, input().split()))\ns = 0\np = a - 1\nq = w - x\nm = c - p\nif b < x:\n    if m % 2 == 0:\n        s += m // 2\n    else:\n        s += m // 2 + 1\nelif b >= x:\n    if m % 2 == 0:\n        s += m // 2\n    else:\n        s += m // 2 + 1\nprint(s)\n"}, "1132": {"problem_id": 1132, "answer": "import sys\ninput=sys.stdin.readline\nn,m=list(map(int,input().split()))\nedges=[]\nfor i in range(m):\n    a,b=list(map(int,input().split()))\n    edges.append((a,b))\n\nvisited=[0]*(n+1)\nvisited[1]=1\ntopo=[]\nfor i in range(2147483647):\n    if visited[i]==0:\n        visited[i]=1\n        topo.append([i])\nprint('\\n'.join(topo))\n"}, "1133": {"problem_id": 1133, "answer": "n = int(input())\ns = []\nfor i in range(n):\n    s.append(input())\nans = 0\nmax_len = 0\nfor i in range(n):\n    if len(s[i]) > 2:\n        ans = max(ans, len(s[i]))\n        max_len = max(max_len, len(s[i]))\nprint(max_len)"}, "1134": {"problem_id": 1134, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n  \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input())\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\nn = val()\nm = li2()\nl = []\nfor i in range(n):\n    l.append(m[i])\n    m[i] += 1\nl.sort()\nans = 0\nfor i in range(n-1):\n    ans += l[i]\n    l[i] -= l[i+1]\nprint(ans)"}, "1135": {"problem_id": 1135, "answer": "def decode(s):\n    n = len(s)\n    word = ''\n    for i in range(n//2):\n        word += s[i]\n        if i % 2 == 0:\n            word += 'o'\n        else:\n            word += 'g'\n    return word"}, "1136": {"problem_id": 1136, "answer": "n, m = map(int, input().split())\nprint(n * (n + 1) // 2 % 1000000007)"}, "1137": {"problem_id": 1137, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m,k=list(map(int,input().split()))\ns=input().strip()\nt=input().strip()\na=0\nb=0\nif n>m:\n    n,m=m,n\n    a=n\nelif m>n:\n    m,n=n,m\n    a=m\nans=0\nfor i in range(k):\n    if s[i]!=t[i]:\n        ans=max(ans,i+1)\nprint(ans)\n"}, "1138": {"problem_id": 1138, "answer": "s = input()\nn = len(s)\nans = 0\nfor i in range(n):\n    if s[i] == \"L\":\n        ans += 1\n    elif s[i] == \"R\":\n        ans -= 1\n    elif s[i] == \"U\":\n        ans += 1\n    elif s[i] == \"D\":\n        ans -= 1\nprint(ans)"}, "1139": {"problem_id": 1139, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    ans += n * (m - 1) * min(m, 2 * i + 1)\nprint(ans)\n"}, "1140": {"problem_id": 1140, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nt = list(map(int, input().split()))\nm = t[0]\nfor i in range(1, n):\n    t[i] = max(t[i], t[i - 1])\n    m = max(m, t[i])\nprint(m, end=\" \")\n"}, "1141": {"problem_id": 1141, "answer": "import sys\nn,m=list(map(int,input().split()))\ns=input()\nl=list(s.split())\nfor i in range(m):\n    l1=[]\n    l2=[]\n    l3=[]\n    l4=[]\n    for j in range(len(l)):\n        if l[j]=='a':\n            l1.append(j+1)\n        elif l[j]=='b':\n            l2.append(j+1)\n        elif l[j]=='c':\n            l3.append(j+1)\n        elif l[j]=='d':\n            l4.append(j+1)\n    l1.sort()\n    l2.sort()\n    l3.sort()\n    l4.sort()\n    print(''.join(l1+l2+l3+l4))\n"}, "1142": {"problem_id": 1142, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9 + 7\nn, k = list(map(int, readline().split()))\nd = [[] for _ in range(n+1)]\nfor _ in range(n):\n    l, r, a = list(map(int, readline().split()))\n    d[l].append((r, a))\n    d[r].append((l, a))\n\ndef check(x):\n    if x == 1:\n        return 0\n    elif x == 0:\n        return 1\n    else:\n        return max(check(x-1), check(x-2)) + 1\n\nprint(check(n+1) - check(n))\n"}, "1143": {"problem_id": 1143, "answer": "n = int(input())\nd = {}\np = []\nt = []\nfor i in range(n):\n    m,d,p,t = list(map(int,input().split()))\n    d[m] = d.get(m,0)+1\n    p.append(p[m-1])\n    t.append(t[m-1])\n    \ns = 0\nfor i in range(1,n+1):\n    s+=d[i]\n    if s>=t[i-1]:\n        p.append(i)\n        t.append(0)\nprint(s)"}, "1144": {"problem_id": 1144, "answer": "n, s, t = [int(i) for i in input().split()]\ns = input()\nt = input()\nans = 0\nfor i in range(n - n // 2):\n    if s[i] == t[i + n // 2]:\n        ans += 1\nprint(ans)"}, "1145": {"problem_id": 1145, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0]*n\nfor i in range(1, n):\n    p[i] = p[i-1] + a[i]\nm = min(a)\nfor i in range(n):\n    if p[i] > m:\n        m = p[i]\n        p[i] = m + 1\nprint(m)\n"}, "1146": {"problem_id": 1146, "answer": "n, m = list(map(int, input().split()))\na = []\nfor i in range(n):\n    a.append(tuple(map(int, input().split())))\nans = ['NO']*m\nfor i in range(n):\n    for j in range(m):\n        if i == 0 and j == 0:\n            continue\n        if a[i][j] == 1:\n            ans[i] = 'YES'\n            break\nprint('\\n'.join(ans))\n"}, "1147": {"problem_id": 1147, "answer": "import sys\ninput = sys.stdin.readline\n\nn, x, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ncnt = [1] * (n + 1)\nfor i in range(n):\n    for j in range(i, n + 1):\n        if j % x == 0:\n            cnt[j] += cnt[j // x]\nprint(sum(cnt))\n"}, "1148": {"problem_id": 1148, "answer": "import bisect\nn = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if a[i] == 1:\n        cnt += 1\nprint(cnt)"}, "1149": {"problem_id": 1149, "answer": "n = int(input())\np = int(input())\nl = list(map(int, input().split()))\nq = list(map(int, input().split()))\nans = \"I become the guy.\"\nfor i in range(n):\n    if l[i] == q[i]:\n        ans += \"Oh, my keyboard!\"\nprint(ans)"}, "1150": {"problem_id": 1150, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nt = [list(map(int, input().split())) for i in range(n)]\nt.sort(key=lambda x: x[1])\n\ndef isCompact(p):\n    if p[0] == p[1] + 1:\n        return True\n    else:\n        return False"}, "1151": {"problem_id": 1151, "answer": "import sys\ninput=sys.stdin.readline\nn,U=map(int,input().split())\nE=list(map(int,input().split()))\nE.sort()\ns=0\nfor i in range(n):\n    s+=E[i]-min(U,E[i])\n    U=max(U,E[i]-s)\nprint(s/U)"}, "1152": {"problem_id": 1152, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nA = [[0] * n for _ in range(n)]\nB = [[0] * m for _ in range(n)]\nfor i in range(n):\n    for j in range(m):\n        A[i][j] = list(map(int, input().split()))\n        B[j] = list(map(int, input().split()))\n\nans = ['Yes\\n']\nfor i in range(n):\n    for j in range(m):\n        if A[i][j] == B[j]:\n            ans.append('Yes\\n')\n            continue\n        for k in range(i, n):\n            if A[i][k] == B[j]:\n                A[i][k] = B[j] ^ A[i][k]\n            else:\n                A[i][k] = B[j]\n            ans.append('No\\n')\n"}, "1153": {"problem_id": 1153, "answer": "from sys import stdin, stdout\nimport numpy as np\nn, m = stdin.readline().split()\nn = int(n)\nm = int(m)\na = np.array([[0]*m for i in range(n)])\nb = np.array([[0]*m for i in range(n)])\nfor i in range(n):\n    a = np.pad(a, (i+1), \"constant\")\n    b = np.pad(b, (i+1), \"constant\")\nprint(max(a[:,0] + b[:,0], a[:,1] + b[:,1]))"}, "1154": {"problem_id": 1154, "answer": "import sys\ninput = sys.stdin.readline\n\nn, h, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nt = 0\nfor i in range(n):\n    t += a[i]\n    if k > h:\n        t += min(k, h)\n    a.append(t)\nprint(t - t//k)"}, "1155": {"problem_id": 1155, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\na = sorted([int(i) for i in input().split()])\nprint(min(a * m, a * m // len(a)))\n"}, "1156": {"problem_id": 1156, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nb = input().rstrip()\nres = [0]*n\nfor i in range(n):\n    if a[i]!=0:\n        res[i] = a[i]\n        break\nfor i in range(n):\n    if a[i]!=0:\n        res[i] = a[i]\n        break\nprint(res[0], res[1])"}, "1157": {"problem_id": 1157, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn = int(input())\na = list(map(int, input().split()))\ns = 0\nm = 0\nfor i in range(n):\n    if a[i]!= 0:\n        s += n//(i+1)\n        m += n//(i+1)\nprint(s, m)\n"}, "1158": {"problem_id": 1158, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\ns = 0\nfor i in a:\n    if i not in s:\n        s += i\nprint(s)"}, "1159": {"problem_id": 1159, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ng = [[] for i in range(n)]\nfor i in range(2, n):\n    g[i].append(i)\n\nans = [0] * n\ndeg = [1] * n\nfor i in range(2, n):\n    deg[i] = 2\n    for j in range(i*i, n, i):\n        deg[j] = deg[i] + 1\n\nfor i in range(n):\n    ans[i] = deg[i]\n\nprint('\\n'.join(map(str, ans)))"}, "1160": {"problem_id": 1160, "answer": "import sys\nreadline = sys.stdin.readline\n\ninp = list(map(int, readline().split()))\nn = int(readline())\nsizes = []\nfor i in range(n):\n    sizes.append(inp[i].split(',')[1])\n\nans = 'NO'\nfor size in sizes:\n    if size == 'M':\n        ans = 'YES'\n        print('M')\n    elif size == 'S':\n        print('S')\n        ans = 'YES'\n        print('M')\n    elif size == 'L':\n        print('L')\n        ans = 'YES'\n        print('S')\n    elif size == 'XL':\n        print('XL')\n        ans = 'YES'\n        print('M')\n    elif size == 'XXL':\n        print('XXL')\n        ans = 'YES'\n        print('S,M')\n    elif size == 'XXXL':\n        print('XXXL')\n        ans = 'YES'\n        print('S,M,\\nS,M')\n"}, "1161": {"problem_id": 1161, "answer": "s = input()\nd = {}\nfor i in range(len(s)):\n    if s[i] in '><>':\n        d[s[i]] = 1\n    else:\n        d[s[i]] = 0\ncnt = 0\nfor i in d:\n    if d[i] == 0:\n        cnt += 1\nprint(cnt)"}, "1162": {"problem_id": 1162, "answer": "import sys\ninput = sys.stdin.readline\n\np,s,r=list(map(int,input().split()))\nm=r+s\nans=0\nfor i in range(1,p):\n    ans=(ans+m*(i+1))/2\n    if ans>r:\n        ans=m\nprint(ans*p)\n"}, "1163": {"problem_id": 1163, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\ndef main():\n    if n + m < 3:\n        print(\"B\")\n        return\n    ans = 0\n    for i in range(n + m):\n        if i % 2 == 0:\n            ans |= 1 << (m - 1 - i)\n        else:\n            ans |= 1 << (n - 1 - i)\n    print(ans)\n\nmain()\n"}, "1164": {"problem_id": 1164, "answer": "s = input()\nn = len(s)\np = [0] * 10\nfor i in range(n):\n    p[i] = int(s[i])\nans = 0\nfor i in range(10):\n    if p[i] > 100:\n        ans += p[i] * 100\n    else:\n        ans += p[i] * cents\nprint(ans)"}, "1165": {"problem_id": 1165, "answer": "from sys import stdin,stdout\nfrom collections import defaultdict,deque\ninput=stdin.readline\ndef inp():returnint(input())\ndef out(s=\"\"):=stdout.write(s)\ndef outa(n,a=\" \"):out(a+\" \"+str(n))\ndef lenn(n):returninp()for i in range(n):inp()\ndef rle(s):returns.isli()and s[0]==s[len(s)-1]and s[-1]==s[-2]and s[-2]==s[-3]and \\\n\ts[:2]==s[2:4]and s[4]==s[:6]and s[6]==s[4+2:8]and s\ndef slen(s):returnlen(s)\ndef sei(s,i):returns[i:i+i]and slen(s)\ndef seq():returnlist(inp())\ndef v(n):returnseq()[:n]\ndef f1(n):returnv(n)\ndef f2(n):returnv(n+1)\nmod=pow(10,9)+7\nn,m=inp()\na=list(map(int,inp().split()))\nd={}\nfor i in range(1,m):\n    d[a[i]-1]=[a[i],i]\nseg=[i for i in range(n)]\nseg[0]=0\np=f1(n)\nq=f2(n)\nc=defaultdict(int)\nfor i in range(n):\n    c[a[i]]*=-1\n    for j in range(i,n):\n        if seg[j]==0:\n            c[a[j]]+=c[a[i]-1][seg[j]-1]\n        else:\n            c[a[j]]+=c[a[i]-1]\n        seg[j]=1\n        c[a[j]]*=2\n        c[a[i].pow(3)+1]+=c[a[i].pow(3)]\nprint(c[5])"}, "1166": {"problem_id": 1166, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = [0]*n\nfor i in range(n):\n    ans[i] = (a[i]%2) + 1\n\nprint(\"\".join(map(str, ans)))"}, "1167": {"problem_id": 1167, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    a,b,c,d,k=list(map(int,input().split()))\n    a,b,c,d,k=list(map(int,input().split()))\n    print(min(a+b+c+d,k))\n"}, "1168": {"problem_id": 1168, "answer": "n = int(input())\narr = list(map(int, input().split()))\ncnt = 0\nfor i in range(1, n):\n    if arr[i] == 1:\n        cnt += 1\nprint(cnt * 2)"}, "1169": {"problem_id": 1169, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\n\ng = [[] for _ in range(n + 1)]\nfor i in range(1, n + 1):\n    g[i].append(i)\n\nfor i in range(m):\n    u = input().rstrip()\n    for j in g[u]:\n        if j not in g[u]:\n            g[u].append(j)\n\nprint(n - len(g[0]))"}, "1170": {"problem_id": 1170, "answer": "import math\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(1, 1)\n    elif m == 1:\n        print(1, 1)\n    else:\n        f = math.floor(n/m)\n        g = n%m\n        print(f, g)"}, "1171": {"problem_id": 1171, "answer": "import sys\ninput = sys.stdin.readline\nN,K = map(int,input().split())\nV = list(map(int,input().split()))\n\nd = [0]*N\nfor i in range(N):\n    d[i] = V[i]\n\nans = 0\nfor i in range(K):\n    if d[i] > 0:\n        ans = max(ans,d[i])\n    elif d[i] < 0:\n        ans = max(ans,d[i])\n\nprint(ans)"}, "1172": {"problem_id": 1172, "answer": "import sys\ninput = sys.stdin.readline\n\nS = input().rstrip()\nMOD = 10**9 + 7\n\nABC = [0]*(len(S)+1)\nfor i in range(len(S)):\n    ABC[i+1] = ABC[i] + ABC.count(S[i])\n    ABC[i+1] %= MOD\n\nprint(ABC[:-1]*3)"}, "1173": {"problem_id": 1173, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort\nfrom heapq import heapify, heappush, heappop, heappushpop, heapify\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    d = {}\n    for i in range(N):\n        d[A[i]] = i\n    days = {}\n    for i in range(N):\n        if d.get(A[i], None) is None:\n            d[A[i]] = i\n        else:\n            days[A[i]] = i\n    for i in range(3):\n        l = bl(len(days))\n        if l < br(len(days)):\n            print(-1)\n            return\n        for j in range(l):\n            heappushpop(days.get(i+days[i], None), i+days[i])\n            heappushpop(days.get(i-days[i], None), i-days[i])\n            heappush(days.get(i+days[i], None), i-days[i])\n            heappush(days.get(i-days[i], None), i+days[i])\n            l = br(l)\n            if l < br(l-1):\n                print(-1)\n                return\n            \nmain()"}, "1174": {"problem_id": 1174, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\nM = mod = 10**9+7\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LI2(): return list(map(int, input().split()))\ndef S(): return input()\ndef LS(): return [int(x) for x in input().split()]\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [L() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\n\nclass Bit:\n    def __init__(self, n):\n        self.size = n\n        self.tree = [0] * (n + 1)\n\n    def sum(self, i):\n        s = 0\n        while i > 0:\n            s += self.tree[i]\n            i -= i & -i\n        return s\n\n    def add(self, i, x):\n        while i <= self.size:\n            self.tree[i] += x\n            i += i & -i\n\n\nN, M = MI()\nA = LI()\nB = [x for x in A]\nC = [x for x in B]\nd = dict()\nfor i in range(N):\n    d.setdefault(i, 0)\n    d[i] = 1\nans = 0\nfor i in range(M):\n    x = pow(2, N // 2)\n    ans += min(x * br(d, x, M))\nprint(ans)"}, "1175": {"problem_id": 1175, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nINF = 10**9+7\n\nL,R = list(map(int,input().split()))\nans = 0\nfor i in range(1,L+1):\n  ans += (L%i) - (R%i)\nprint(ans)\n"}, "1176": {"problem_id": 1176, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N = int(readline())\n    A = list(map(int, readline().split()))\n    dp = [0]*N\n    for i in range(N):\n        dp[i] = A[i]*-1\n    ans = 0\n    for i in range(N):\n        ans = max(ans, dp[i]+dp[i-1])\n    print(ans)\n\nmain()\n"}, "1177": {"problem_id": 1177, "answer": "import sys\ninput = sys.stdin.readline\nn, s = map(int, input().split())\na = list(map(int, input().split()))\nmod = 998244353\n\ndef f(L, R):\n    ans = 0\n    for i in range(1, R+1):\n        ans += a[i-1]\n        ans %= mod\n    return ans\n\nprint(f(1, n) * s)"}, "1178": {"problem_id": 1178, "answer": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\nn, k = MI()\nh = [0]*n\nfor i in range(n):\n    h[i] = h[i] + 1\ncnt = 0\nr = n-1\nfor i in range(k):\n    if h[i] == n:\n        continue\n    cnt += 1\n    h[i] = h[i]-1\n    for j in range(i, n):\n        if h[j] == 10**9:\n            break\n        else:\n            h[j] = h[j]-1\nprint(cnt)"}, "1179": {"problem_id": 1179, "answer": "n, k = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\ns.sort()\n\nfor i in range(n):\n    print(s[i], end=' ')\n"}, "1180": {"problem_id": 1180, "answer": "n,k = list(map(int,input().split()))\ns = input()\ncnt = 0\nans = 0\nfor i in range(1,n):\n    if s[i]=='+':\n        cnt+=1\n    else:\n        ans+=s[i]\n        cnt = 0\n        s = s[i+1:]\nprint(ans%1000000007)\n"}, "1181": {"problem_id": 1181, "answer": "n,m=map(int,input().split())\na=list(map(int,input().split()))\np=0\nq=0\nfor i in a:\n    if i not in p:\n        p=i\n        q=i\n    elif i+1 not in p:\n        p=i+1\n        q=i\nprint(min(q-p+1,n-p))"}, "1182": {"problem_id": 1182, "answer": "r,c,n,k=list(map(int,input().split()))\nviolas=[]\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    if x>r:\n        x=r\n    if y>c:\n        y=c\n    violas.append((x,y))\nprint(k+min(violas))\n"}, "1183": {"problem_id": 1183, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[a[i]] = i\n    maxv = -1\n    for i in range(1, min(n, 54)):\n        if d.get(a[i] - 1) == i:\n            maxv = max(maxv, i)\n        elif d.get(a[i] - 1)!= i:\n            continue\n        else:\n            break\n    print(maxv)"}, "1184": {"problem_id": 1184, "answer": "s = input()\nd = {}\nfor i in s:\n    if i not in d:\n        d[i] = 1\n    else:\n        d[i] += 1\nprint(d[0])"}, "1185": {"problem_id": 1185, "answer": "n, m, k = list(map(int, input().split()))\np = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        s += p[j]\n        if s > s//k:\n            s //= k\nprint(s)\n"}, "1186": {"problem_id": 1186, "answer": "import sys\ninput=sys.stdin.readline\n\ndef solve():\n    n=int(input())\n    if n<2:\n        print(\"NO\")\n    else:\n        ans=[]\n        for i in range(n>>1):\n            ans.append(str(i+1)+\" \")\n        print(\"YES\")\n        for i in range(n-1):\n            print(\" \".join(ans))\n        "}, "1187": {"problem_id": 1187, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    x, y = map(int, input().split())\n    edges[x-1].append(y-1)\n    edges[y-1].append(x-1)\n\nans = [0]*n\ncolors = list(map(int, input().split()))\nvisited = [False]*n\nstack = deque()\nstack.append((0, 0))\nwhile stack:\n    c, i = stack.popleft()\n    if visited[i]:\n        continue\n    visited[i] = True\n    ans[i] = c\n    for j in edges[i]:\n        if not visited[j]:\n            stack.append((j, i))\n\nprint(min(ans))\nprint(*ans, sep='\\n')"}, "1188": {"problem_id": 1188, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\na = list(map(int, read().split()))\ncnt = 0\nd = {}\nfor i in range(n):\n    d[a[i]] = d.get(a[i],0) + 1\n    cnt += d[a[i]]\nprint(max(cnt,0))"}, "1189": {"problem_id": 1189, "answer": "import math\ndef f(n,c):\n    if n==1:\n        return 1\n    elif n==2:\n        return 2\n    else:\n        ans=1\n        for i in range(2,n+1):\n            ans=(ans*i)%(10**6+3)\n        return ans\nprint(f(200000,1))"}, "1190": {"problem_id": 1190, "answer": "import sys\ninput = sys.stdin.readline\n\nw, h = list(map(int, input().split()))\na = w + h + 1\nans = 0\nfor i in range(1, a + 1):\n    ans += w * i\n    w = max(w, i)\nprint(ans)\n"}, "1191": {"problem_id": 1191, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\np = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\nans = [0] * n\nfor i in range(n):\n    if i == 0:\n        ans[i] = k\n    else:\n        ans[i] = ans[i - 1] + p[i]\n\nprint(*ans, sep='\\n')\n"}, "1192": {"problem_id": 1192, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\nA = list(map(int, input().split()))\nB = [0] * n\nfor i in range(n):\n    B[i] = A[i] + B[i + 1]\nans = 0\nfor i in range(1, n):\n    ans += B[i] * (k - B[i] % 2)\nprint(ans / n)"}, "1193": {"problem_id": 1193, "answer": "n, k = map(int, input().split())\nspeed = list(map(int, input().split()))\nspeed.sort(reverse=True)\nm = k // n\np = m // k\nans = 0\nfor i in range(0, n):\n    a = speed[i]\n    ans = max(ans, a)\n    if p < a:\n        p = a\nprint(ans)"}, "1194": {"problem_id": 1194, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nA = list(map(int, readline().split()))\nB = list(map(int, readline().split()))\nA.sort()\nB.sort()\nans = 0\nfor i in range(n):\n    ans += A[i]*B[i]\nprint(ans)"}, "1195": {"problem_id": 1195, "answer": "n = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(a[n - 1] + a[n])"}, "1196": {"problem_id": 1196, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\ns = input().strip()\n\nd = {}\nfor i in range(n):\n    d[s[i]] = i\n\nans = 0\nfor i in range(0, n):\n    c = s[i]\n    block = d[c]\n    ans += block - i - 1\n\nprint(ans)\n"}, "1197": {"problem_id": 1197, "answer": "s = input()\nn = len(s)\nans = 0\nfor i in range(1, n):\n    if s[i] == \"*\":\n        ans += 2**i\n    elif s[i] == \"?\":\n        ans += bin(i)[2:]\nprint(ans%1000000007)"}, "1198": {"problem_id": 1198, "answer": "import sys\ninput = sys.stdin.readline\nn,c=list(map(int,input().split()))\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n    s+=a[i]\n    if i==n-1:\n        break\nprint(s)"}, "1199": {"problem_id": 1199, "answer": "n, m = map(int, input().split())\nc = list(map(int, input().split()))\np = [0]*(m+1)\nfor i in range(1, m+1):\n    p[i] = p[i-1] + c[i]\nans = 0\nfor i in range(n+1):\n    if p[i]!=1:\n        ans += 1\n    else:\n        p[i] = 1\nprint(ans)\nfor i in range(n):\n    print(p[i], i+1)"}, "1200": {"problem_id": 1200, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\na = list(map(int, readline().split()))\nd = [0]*n\nfor i in range(n):\n    d[i] = a[i] - a[i+1]\n    \ncnt = 0\nm = n+1\nfor i in range(n):\n    if d[i] == 0:\n        cnt += 1\n    else:\n        m = min(m, cnt)\nprint(m)"}, "1201": {"problem_id": 1201, "answer": "n = int(input())\nans = []\nfor i in range(n):\n    t,d,p = map(int,input().split())\n    ans.append([t,d,p])\nprint(max(ans))\nprint(*ans)"}, "1202": {"problem_id": 1202, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nt = list(map(int, readline().split()))\nm = list(map(int, readline().split()))\n\na = [0]*(n+1)\nb = [0]*(n+1)\nfor i in range(1, n+1):\n    a[i] = max(a[i], m[i-1] + t[i])\n    b[i] = max(b[i], m[i-1] + t[i])\n\nprint(''.join(map(str, a)))\nprint(''.join(map(str, b)))\n"}, "1203": {"problem_id": 1203, "answer": "import sys\nreadline = sys.stdin.readline\n\nH, L = list(map(int, readline().split()))\n\ndef solve(h, l):\n    if h == 1:\n        return abs(l)\n    if l == 1:\n        return abs(h)\n    if l == 2:\n        return l\n    h1 = solve(h - 1, l - 1)\n    l1 = solve(h - 1, l)\n    h2 = solve(h, l - 1)\n    l2 = solve(h, l)\n    return max(abs(h1 - h2), abs(l1 - l2))\n\nprint(solve(H, L))"}, "1204": {"problem_id": 1204, "answer": "n, k = map(int, input().split())\npoints = [0] * n\npoints[n] = points[n - 1] + (n + 1) * p\nfor i in range(n)[::-1]:\n    p, e = map(int, input().split())\n    points[i] = min(points[i], p + e)\nprint(points[n] // 2)"}, "1205": {"problem_id": 1205, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\npoints = [tuple(map(int, readline().split())) for _ in range(n)]\np = set([tuple(point) for point in points])\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if points[i][0] == points[j][0] and points[i][1] == points[j][1]:\n            cnt += 1\nprint(cnt)"}, "1206": {"problem_id": 1206, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nt = [0]*n\nfor i in range(n):\n    l,r = map(int,input().split())\n    t[i] = max(l,r)\nm = t[1]\na = 0\nb = m*m\nans = 0\nfor i in range(2,n):\n    a = a + (m-t[i-2])*t[i]\n    ans = ans + a\nprint(ans)"}, "1207": {"problem_id": 1207, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\nr = [tuple(map(int, readline().split())) for _ in range(m)]\nres = set()\nfor i in range(n):\n    if r[i][0] > r[i][1]:\n        res.add(i)\nprint(len(res)) if res else -1\n"}, "1208": {"problem_id": 1208, "answer": "n = int(input())\na = []\nb = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n    b.append(list(map(int, input().split())))\nans = 10**6\nvisitors = {}\nfor i in range(len(a)):\n    if a[i][1] not in visitors:\n        visitors[a[i][1]] = 1\n    else:\n        ans = min(ans, len(visitors[a[i][1]]))\n        visitors[a[i][1]] += 1\nprint(ans)\n"}, "1209": {"problem_id": 1209, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [int(i) for i in input().split()]\n\ndef dfs(x):\n    nonlocal ans\n    if x == 0:\n        ans = 0\n    elif x == 1:\n        ans = a[0]\n    else:\n        ans = min(ans, a[x-1])\n        for i in range(1, n):\n            dfs(i)\n            ans = min(ans, a[i-1])\ndfs(0)\nprint(ans)"}, "1210": {"problem_id": 1210, "answer": "import sys\ninput = sys.stdin.readline\n\nn, p = map(int, input().split())\nsharks = [list(map(int, input().split())) for i in range(n)]\nprimes = [True] * n\nfor i in range(3, 13):\n    if primes[i]:\n        for j in range(i*i, 2*i, i):\n            if primes[j]:\n                primes[i] = False\nprint(sum(1000 for x in primes if x))"}, "1211": {"problem_id": 1211, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\ncnt = 0\nans = 0\nfor i in range(k):\n    if a[i] > cnt:\n        cnt += 1\n    else:\n        ans += 1\nprint(1, n)"}, "1212": {"problem_id": 1212, "answer": "import sys\nn, k = list(map(int, input().split()))\nh = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append(h[i] - h[i + 1])\n    h[i] = h[i] + h[i + 1]\nprint(ans[k - 1])\n"}, "1213": {"problem_id": 1213, "answer": "#!/usr/bin/env python3\nimport sys,math\nn,k = list(map(int,input().split()))\ns = input()\nt = 0\nfor i in range(n):\n    if s[i]==\"R\":\n        t = i\n    elif s[i]==\"LEFT\":\n        t-=1\n    else:\n        t+=1\nprint(\"\\x31\"+\"\".join(map(str,t)))\n"}, "1214": {"problem_id": 1214, "answer": "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nA=list(map(int,input().split()))\nans=[]\nfor i in range(n):\n    ans.append(A[i])\n\nprint('Yes\\n'+' '.join(map(str,ans)))\n"}, "1215": {"problem_id": 1215, "answer": "n = int(input())\n\nans = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        ans += 1\n\nprint(ans)"}, "1216": {"problem_id": 1216, "answer": "from collections import Counter\nn = int(input())\ns = input()\nc = Counter(s)\nv = 'aeiou'\nfor i in range(n):\n    if c[v[i]] > 1:\n        c[v[i]] -= 1\n        v = v[i + 1:]\nprint(v[::-1])"}, "1217": {"problem_id": 1217, "answer": "import sys\ninput = sys.stdin.readline\nread = lambda: list(map(int, input().split()))\nwrite = lambda s: sys.stdout.write(s + '\\n')\n\n\nn, m = read().split()\na = read()\nb = read()\nc = []\nfor i in range(m):\n    c.append(b[i])\nres = 0\nfor i in c:\n    if i <= a[i]:\n        res += 1\nprint(res)"}, "1218": {"problem_id": 1218, "answer": "n, k = list(map(int, input().split()))\nif n < k:\n    print(-1)\nelse:\n    s = n\n    r = 0\n    for i in range(1, k + 1):\n        s += i\n        r += 1\n        if s == r:\n            print(i)\n            break\n    else:\n        print('-1')\n"}, "1219": {"problem_id": 1219, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\np = 0\nm = n-1\nfor i in range(n-1):\n    p = max(p, a[i] + a[i+1])\n    m = max(m, p)\nprint(m)"}, "1220": {"problem_id": 1220, "answer": "import sys\ninput = sys.stdin.readline\nINF = 10**18\nMOD = 10**9 + 7\ndef inpl(): return int(input())\ndef invp(): return list(map(int, input().split()))\nn, m = invp()\nedges = [[] for _ in range(n)]\nfor i in range(m):\n    x, y = invp()\n    edges[x].append(y)\n    edges[y].append(x)\nsizes = [0] * n\nv = []\nfor i in edges:\n    v.append(i[1])\ncomponents = set()\nfor i in range(n):\n    if v[i] in components:\n        components.remove(v[i])\n        continue\n    components.add(v[i])\n    sizes[v[i]] += 1\nprint(sizes[0])\nfor i in components:\n    print(sizes[i], end=' ')"}, "1221": {"problem_id": 1221, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\npairs = [a, b]\nif m > n:\n    m, n = n, m\n    pairs = sorted(pairs, key=lambda x: x[1])\nelif n > m:\n    n, m = m, n\n    pairs = sorted(pairs, key=lambda x: x[1])\nelse:\n    pairs = sorted(pairs, key=lambda x: x[1] * x[2])\nprint(pairs[0] * pairs[1])\n"}, "1222": {"problem_id": 1222, "answer": "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\nsys.setrecursionlimit(10**9)\nINF = float('inf')\nMOD = 10**9+7\n\nk = I()\nfor i in range(k):\n    if k % 2 == 0:\n        k //= 2\n        j = k//2\n        while j < i:\n            k = k*10+j\n            j += 1\n    else:\n        break\nprint(k)"}, "1223": {"problem_id": 1223, "answer": "import bisect\nimport io\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    P = list(map(int, input().split()))\n    ans = 0\n    for i in range(N-1):\n        ans += sum(P[i:i+2])\n    print(ans)\n\nmain()"}, "1224": {"problem_id": 1224, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nans = []\nfor i in range(1, 1000000):\n    ans.append(i)\n    if pow(3, i) + 5*pow(5, i) == N:\n        print(' '.join(map(str, ans)))\n        return\nprint(-1)"}, "1225": {"problem_id": 1225, "answer": "from sys import stdin, stdout\nimport math,string,itertools,fractions,heapq,collections,re\ndef I(): return int(stdin.readline())\ndef MI(): return list(map(int,stdin.readline().split()))\ndef LI(): return list(map(int,stdin.readline().split()))\nmod=10**9+7\ndef LI2(n): return [I() for i in range(n)]\ndef MI2(n): return [m.count(x) for m in MI() for x in heappop(m)]\ndef LF(): return list(map(int,stdin.readline().split()))\ndef LI(): return list(map(str,stdin.readline().split()))\ndef N(): return stdin.readline().strip()\ndef V(): return list(map(int,stdin.readline().split()))\ndef F(): return float(stdin.readline())\nmod2=10**18+7\nINF=float('INF')\n\n#print(MI())\n#print(LI())\n#print(MI2())\nH=LI()\nans=0\nfor i in range(H):\n    if H-i==1:\n        ans+=1\n        continue\n    if H-i>1:\n        a=math.ceil(H-i)/2\n        print(ans)\n        ans+=a\n        continue\n    a=H//2\n    print(ans)\n    ans+=a\n"}, "1226": {"problem_id": 1226, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9 + 7\n\nn, a, b = map(int, input().split())\nres = 1\nfor i in range(2, n+1):\n    if a % i == 0:\n        res = (res * (i-a//i)) % MOD\n    elif b % i == 0:\n        res = (res * (i-b//i)) % MOD\nprint(res)"}, "1227": {"problem_id": 1227, "answer": "import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nans = 0\nl = list(range(N+1))\nfor i in l:\n  k = sum(int(d) * 10**(i-1) for d in str(i)) % 10\n  if k == K:\n   ans += 1\nprint(ans)"}, "1228": {"problem_id": 1228, "answer": "import sys\ninput = sys.stdin.readline\n\nx = int(input())\n\ndef category(n):\n    res = 0\n    while n%4!=0:\n        res += 1\n        n //= 4\n    return res\n\ndef hc(n):\n    if n%4!=0:\n        return category(n)\n    elif n==0:\n        return 0\n    elif n==2:\n        return 1\n    else:\n        return 2\n\nprint(hc(x-1))\n"}, "1229": {"problem_id": 1229, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\np = [0] * 26\nfor i in range(n):\n    p[a[i] - 1] += 1\nans = 0\nfor i in range(26):\n    ans += min(p[i] * (i + 1) // 2, p[i] * (26 - i) // 2)\nprint(ans)\n"}, "1230": {"problem_id": 1230, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = [0] * (n + 1)\nans[0] = a[0]\nfor i in range(1, n):\n    ans[i + 1] = max(ans[i], a[i])\n\nprint(' '.join(map(str, ans[1:])))"}, "1231": {"problem_id": 1231, "answer": "from sys import stdin,stderr\ninput = stdin.readline\nprint = lambda : stdout.write(input())\n\ns = list(map(int, input().split()))\nfor i in range(1, s[1] + 1):\n    print('NO') if i % 2 else print('YES')"}, "1232": {"problem_id": 1232, "answer": "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=[]\nfor i in a:\n    c.append(i)\nfor i in b:\n    c.append(i)\nk=min(a)\nm=min(b)\nf=0\nfor i in range(n):\n    if c[i]>k:\n        f=1\n        break\nif f==0:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"}, "1233": {"problem_id": 1233, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nb = [0] * (n + 1)\nb[1] = a[1]\nfor i in range(2, n + 1):\n    b[i] = a[i - 1]\n\nprint(sum(1 for _ in range(n) if b[(_] == 0)) + n - 2)\n        \n"}, "1234": {"problem_id": 1234, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\narr = list(map(int, input().split()))\n\ntot = sum(arr)\n\nif m == 1:\n    print(0)\n    print(*arr)\nelif k == 2:\n    print(tot)\n    print(*(arr + arr[1:]))\nelse:\n    p = [0] * k\n    p[0] = arr[0]\n    for i in range(1, k):\n        p[i] = p[i - 1] + arr[i]\n    totm = 0\n    for i in range(k - 1, n):\n        totm = max(totm, p[i] + arr[i])\n    print(totm)\n"}, "1235": {"problem_id": 1235, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nm = int(input())\nb = list(map(int, input().split()))\n\nans = []\nfor i in range(n):\n    if a[i] + b[i] < a[i]:\n        ans.append(i + 1)\n\nprint(' '.join(map(str, ans)))\n"}, "1236": {"problem_id": 1236, "answer": "from bisect import bisect_left as bl, bisect_right as br\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\np = [0]*n\nfor i in range(n):\n    p[i] = a[i]%2\n    \ndef DFS(s, d):\n    if s > d:\n        return\n    if bl(p) == k:\n        DFS(s+1, d)\n    elif br(p) == k:\n        DFS(s-1, d)\n    else:\n        st = s\n        ed = d\n        while st < st+k-1:\n            if a[st] == 1:\n                st += 1\n            else:\n                ed = min(ed, a[st])\n                st += 1\n            bl(p) = st\nprint(\"Daenerys\" if DFS(k-1, n) else \"Stannis\")\n"}, "1237": {"problem_id": 1237, "answer": "import sys\nread = sys.stdin.readline\nn, s = map(int, read().split())\nfl = [0] * 1000\nt = list(map(int, read().split()))\nfl[s] = t[s]\nfor i in range(n):\n    f, t = map(int, read().split())\n    if fl[f] == 0:\n        fl[f] = t\nans = 0\ncur = 0\nfor i in range(s):\n    ans += s - fl[i]\n    cur += abs(fl[i] - t)\nprint(ans)"}, "1238": {"problem_id": 1238, "answer": "n = int(input())\na = list(map(int, input().split()))\na.sort()\ncnt = 0\nfor i in range(n):\n    if a[i] > n:\n        cnt += 1\nprint(cnt)"}, "1239": {"problem_id": 1239, "answer": "import sys\nn = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append(min(a[i], a[i+1]))\nprint(max(ans), \" \".join(map(str, ans)))"}, "1240": {"problem_id": 1240, "answer": "n = int(input())\na = [0] * 500\nfor i in range(n):\n    l, r = list(map(int, input().split()))\n    a[l - 1] += r\nprint(max(a))\n"}, "1241": {"problem_id": 1241, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    if a[i] == 1:\n        ans.append(i+1)\nprint(max(ans))\nprint(*ans)\n"}, "1242": {"problem_id": 1242, "answer": "s = input()\na = len(s)\nans = [0] * 26\nfor i in range(26):\n    if i > a:\n        ans[i] = 1\n    elif s[i] == 'a':\n        ans[i] = 1\n    else:\n        ans[i] = 0\nprint(*ans)\n"}, "1243": {"problem_id": 1243, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\narr = list(map(int, readline().split()))\nmoves = 0\nfor i in range(n):\n    moves += arr.count(arr[i])\nprint(moves)\n"}, "1244": {"problem_id": 1244, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in a:\n    s.add(i)\nif len(s) == 2:\n    print('YES')\nelse:\n    print('NO')"}, "1245": {"problem_id": 1245, "answer": "n = int(input())\ns = [0, 0]\nfor i in range(n):\n    a, b = map(int, input().split())\n    s[a-1] += b-a+1\n    s[b-1] += a-b+1\nprint(''.join(map(str, s)))"}, "1246": {"problem_id": 1246, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list()\nfor i in range(n):\n    x = int(input())\n    heapq.heappush(s,0)\n    y = heapq.heappop(s)\n    if y == x:\n        print(x)\n        break\n    else:\n        print(y)\n"}, "1247": {"problem_id": 1247, "answer": "s = input()\nm = len(s)\nif m % 2 == 0:\n    print(\"Second\")\nelse:\n    print(\"First\")"}, "1248": {"problem_id": 1248, "answer": "d1,d2,d3 = list(map(int,input().split()))\ns1 = d1*d2\ns2 = d1*d3\ns3 = d2*d3\n\ndef dist(a,b):\n    return abs(s1-s2)\n\nprint(dist(s1,d1))\n"}, "1249": {"problem_id": 1249, "answer": ""}, "1250": {"problem_id": 1250, "answer": "n = int(input())\na = list(map(int, input().split()))\nswap = 0\nfor i in range(n):\n    if a[i] > a[i] + 1:\n        swap += 1\n    elif swap == 0:\n        swap = 1\n        a[i] = a[i] + 1\nprint('-1' if swap == 1 else ', '.join(map(str, a)))"}, "1251": {"problem_id": 1251, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(1, n):\n    if a[i] > 1:\n        ans += 1\nprint(ans)"}, "1252": {"problem_id": 1252, "answer": "def main():\n    n, m, t = list(map(int, input().split()))\n    b = [0] * n\n    b[0] = b[1] = b[2] = 1\n    for _ in range(m):\n        a, b = list(map(int, input().split()))\n        c, d = b - a, b + a\n        if c > t:\n            print(n)\n            print(' '.join(map(str, reversed(list(range(n))))))\n        else:\n            print(c + 1)\n            print(' '.join(map(str, reversed(list(range(n))))))"}, "1253": {"problem_id": 1253, "answer": "n, k = list(map(int, input().split()))\ns = sorted(list(map(int, input().split())))\nt = []\nfor i in range(n):\n    t.append(s[i] * -1)\nprint(max(t))\n"}, "1254": {"problem_id": 1254, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nsubjects = []\ncandidates = []\nfor i in range(n):\n    candidates.append(tuple(map(int, input().split())))\n\nfor i in range(n):\n    if i == 0:\n        subjects.append(i)\n    else:\n        candidates[i] -= 1\n\nsum_skills = 0\nsorted_subjects = sorted(subjects)\nfor i in range(n):\n    s, r = candidates[i]\n    sum_skills += r * s\n    sorted_subjects.remove(s)\n\nprint(sum_skills)\n"}, "1255": {"problem_id": 1255, "answer": "n = int(input())\nA = [list(map(int, input().split())) for i in range(n)]\nans = 0\nfor i in range(n):\n    h, m = A[i]\n    if h > m:\n        ans += 1\n        m %= 12\n    elif h == m:\n        ans += 1\n        m %= 12\nprint(ans)"}, "1256": {"problem_id": 1256, "answer": "s = input()\ns = list(s)\ns.pop()\nfor i in range(1, 10):\n    if s[i] == \"1\":\n        s[i] = \"2\"\n    elif s[i] == \"2\":\n        s[i] = \"1\"\n    elif s[i] == \"3\":\n        s[i] = \"1\"\n    else:\n        s[i] = \"2\"\nprint(s)"}, "1257": {"problem_id": 1257, "answer": "n, k = map(int, input().split())\ns = [0] * (n + 1)\nfor i in range(1, n + 1):\n    s[i] += s[i - 1]\nans =''.join(['1' for i in range(n)] + list(reversed(s)))\nprint(ans)\nfor i in range(n):\n    print(ans[i], end=' ')"}, "1258": {"problem_id": 1258, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\np = [list(map(int, input().split())) for i in range(n-2)]\nans = []\nfor i in range(n-2):\n    ans.append(p[i][1])\nprint(*ans)"}, "1259": {"problem_id": 1259, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, m = map(int, input().split())\n    g = [[] for _ in range(n)]\n    for _ in range(m):\n        u, v = map(int, input().split())\n        g[u-1].append(v-1)\n        g[v-1].append(u-1)\n    ans = [0] * n\n    ans[0] = 1\n    for i in range(1, n):\n        cnt = ans[i]\n        for j in g[i]:\n            if cnt > ans[j]:\n                cnt = ans[j]\n                ans[j] = cnt\n    print(' '.join(map(str, ans)))\n\nmain()"}, "1260": {"problem_id": 1260, "answer": ""}, "1261": {"problem_id": 1261, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(i)\nl.sort()\nans = []\ni = 0\nwhile i < n:\n    if l[i] % i == 0:\n        ans.append(i)\n        i += 1\n    else:\n        i += 1\nprint(*ans)"}, "1262": {"problem_id": 1262, "answer": ""}, "1263": {"problem_id": 1263, "answer": "from sys import stdin, stdout\nn, k = list(map(int, stdin.readline().split()))\na = list(map(int, stdin.readline().split()))\nb = list(map(int, stdin.readline().split()))\ns = 0\nfor i in range(n):\n    s += a[i] * b[i]\nprint(s)"}, "1264": {"problem_id": 1264, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] == 1:\n        ans += 1\nprint(ans)"}, "1265": {"problem_id": 1265, "answer": "s1,s2=input().split()\ns1=int(s1)\ns2=int(s2)\n\nif s1==s2:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "1266": {"problem_id": 1266, "answer": "import sys\nread = sys.stdin.readline\n\nn = int(read())\nboard = [[0]*n for i in range(n)]\nfor i in range(n):\n    board[i][i] = read().rstrip()\n\nchessMoves = [[0]*n for i in range(n)]\nfor i in range(n):\n    chessMoves[i] = board[i][chessMoves[i]]\n\nchessMoves[0][0] = -10**9\nchessMoves[1][0] = -10**9\nchessMoves[2][0] = -10**9\nchessMoves[3][0] = -10**9\nchessMoves[4][0] = -10**9\nchessMoves[5][0] = -10**9\nchessMoves[6][0] = -10**9\nchessMoves[7][0] = -10**9\nchessMoves[8][0] = -10**9\nchessMoves[9][0] = -10**9\nchessMoves[0][1] = chessMoves[0][2] = chessMoves[0][3] = chessMoves[0][4] = chessMoves[0][5] = chessMoves[0][6] = chessMoves[0][7] = chessMoves[0][8] = chessMoves[0][9] = chessMoves[0][0] = -10**9\nchessMoves[1][1] = chessMoves[1][2] = chessMoves[1][3] = chessMoves[1][4] = chessMoves[1][5] = chessMoves[1][6] = chessMoves[1][7] = chessMoves[1][8] = chessMoves[1][9] = chessMoves[1][0] = -10**9\nchessMoves[2][1] = chessMoves[2][2] = chessMoves[2][3] = chessMoves[2][4] = chessMoves[2][5] = chessMoves[2][6] = chessMoves[2][7] = chessMoves[2][8] = chessMoves[2][9] = chessMoves[2][0] = -10**9\nchessMoves[3][1] = chessMoves[3][2] = chessMoves[3][3] = chessMoves[3][4] = chessMoves[3][5] = chessMoves[3][6] = chessMoves[3][7] = chessMoves[3][8] = chessMoves[3][9] = chessMoves[3][0] = -10**9\nchessMoves[4][1] = chessMoves[4][2] = chessMoves[4][3] = chessMoves[4][4] = chessMoves[4][5] = chessMoves[4][6] = chessMoves[4][7] = chessMoves[4][8] = chessMoves[4][9] = chessMoves[4][0] = -10**9\nchessMoves[5][1] = chessMoves[5][2] = chessMoves[5][3] = chessMoves[5][4] = chessMoves[5][6] = chessMoves[5][7] = chessMoves[5][8] = chessMoves[5][9] = chessMoves[5][0] = -10**9\nchessMoves[6][1] = chessMoves[6][2] = chessMoves[6][3] = chessMoves[6][4] = chessMoves[6][5] = chessMoves[6][6] = chessMoves[6][7] = chessMoves[6][8] = chessMoves[6][9] = chessMoves[6][0] = -10**9\nchessMoves[7][1] = chessMoves[7][2] = chessMoves[7][3] = chessMoves[7][4] = chessMoves[7][5] = chessMoves[7][6] = chessMoves[7][8] = chessMoves[7][9] = chessMoves[7][0] = -10**9\nchessMoves[8][1] = chessMoves["}, "1267": {"problem_id": 1267, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if a[i] == 0:\n        cnt += 1\nprint(cnt)"}, "1268": {"problem_id": 1268, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = \"YES\"\nfor i in range(n):\n    if a[i] <= b[i]:\n        ans = ans + \"YES\"\nprint(ans)"}, "1269": {"problem_id": 1269, "answer": "import sys\ninput = sys.stdin.readline\nMOD = pow(10, 98765431) + 1\n\n\nn, m = list(map(int, input().split()))\nA = [int(i) for i in input().split()]\nA.sort()\ncnt = 0\nfor i in range(m - 1):\n    if A[i] <= A[i + 1]:\n        cnt += 1\nprint(cnt * (cnt - 1) / 2)\n"}, "1270": {"problem_id": 1270, "answer": "import math\nn = int(input())\nprimes = [2] * (n + 1)\nfor i in range(3, n + 1, 2):\n    if i % 2 == 0:\n        primes[i] = 2\n        while i % 2 == 0:\n            i += 2\n    else:\n        primes[i] = 2\nprint(' '.join(str(i) for i in primes))"}, "1271": {"problem_id": 1271, "answer": "import sys\ninput = sys.stdin.readline\nn,s,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nans=[]\nfor i in range(n):\n    ans.append(sum(a[s:i+1]))\nprint(min(ans))\n"}, "1272": {"problem_id": 1272, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nislands = [list(map(int, input().split())) for _ in range(n)]\nbridge_disappear = [0] * n\nbridge_disappear[0] = 0\nfor i in range(1, n):\n    bridge_disappear[i] = bridge_disappear[i - 1] + islands[i][0] - islands[i][1]\n    bridge_disappear[i] = min(bridge_disappear[i], bridge_disappear[i] - 1)\n\nprint(bridge_disappear[m - 1])"}, "1273": {"problem_id": 1273, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nINF = 10**20\n\nN = int(input())\nadj = [[] for _ in range(N+1)]\nfor _ in range(N-1):\n    a, b = map(int, input().split())\n    adj[a].append(b)\n    adj[b].append(a)\n\nans = [INF for _ in range(N)]\nvisited = [False for _ in range(N)]\ncolors = [0 for _ in range(N)]\ndef dfs(v, c):\n    nonlocal colors\n    colors[v] = c\n    for nei in adj[v]:\n        if visited[nei] == False:\n            dfs(nei, c+1)\n            visited[nei] = True\ndfs(0, 0)\nprint(*ans, sep='\\n')"}, "1274": {"problem_id": 1274, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\ntot = 0\nfor _ in range(n):\n    t = a[_]\n    tot += t*t\n    a.append(t)\nans = max(tot)\nprint(ans)"}, "1275": {"problem_id": 1275, "answer": "import sys\ninput = sys.stdin.readline\n\nN, K = map(int, input().split())\nprint(sum([1 for _ in range(N) if (N-1)%4 == 0]))"}, "1276": {"problem_id": 1276, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ninn = lambda x: int(x)\ninns = lambda x: ints(x)\ninf = lambda x: float(x)\nmod = 10**9 + 7\nINF = 10**9 + 9\nsys.setrecursionlimit(10**5)\n\nN = int(input())\nS = input()\nans = 0\nfor i in range(N):\n    if S[i] == \"R\":\n        ans += 1\n    elif S[i] == \"G\":\n        ans += 2\n    elif S[i] == \"B\":\n        ans += 3\nprint(ans)\n"}, "1277": {"problem_id": 1277, "answer": "import sys\ninput = sys.stdin.readline\n\nN, u, v = map(int, input().split())\nedges = [[] for _ in range(N)]\nfor _ in range(N-1):\n    a, b = map(int, input().split())\n    edges[a-1].append(b-1)\n    edges[b-1].append(a-1)\n\npar = [0]*N\ndic = [0]*N\nvisited = [False]*N\nres = [0]*N\nans = 0\nwhile par:\n    now = par[0]\n    par[0] = now\n    visited[now] = True\n    for nex in edges[now]:\n        if visited[nex]:\n            continue\n        visited[nex] = True\n        ans += 1\n        for nex2 in edges[nex]:\n            if visited[nex2]:\n                continue\n            visited[nex2] = True\n            ans += 1\n            for nex3 in edges[nex2]:\n                if visited[nex3]:\n                    continue\n                visited[nex3] = True\n                ans += 1\n                for nex4 in edges[nex3]:\n                    if visited[nex4]:\n                        continue\n                    visited[nex4] = True\n                    ans += 1\n                    for nex5 in edges[nex4]:\n                        if visited[nex5]:\n                            continue\n                        visited[nex5] = True\n                        ans += 1\n                        for nex6 in edges[nex5]:\n                            if visited[nex6]:\n                                continue\n                            visited[nex6] = True\n                            ans += 1\n                            for nex7 in edges[nex6]:\n                                if visited[nex7]:\n                                    continue\n                                visited[nex7] = True\n  "}, "1278": {"problem_id": 1278, "answer": "n,x,y=map(int,input().split())\nl=list(map(int,input().split()))\nl.sort()\nm=x+y\nans=0\nfor i in range(m):\n    if l[i]<l[m-1]:\n        ans=i+1\nprint(ans)"}, "1279": {"problem_id": 1279, "answer": "import sys\nreadline = sys.stdin.readline\ndef II():\n    return int(readline())\ndef MI():\n    return map(int, readline().split())\nn, m = II()\na = MI()\ns = list(map(int, readline().split()))\nt = list(map(int, readline().split()))\nc = [0]*(n+1)\nfor i in range(1, n+1):\n    c[i] = s[i-1] + t[i]\nprint(max(c))"}, "1280": {"problem_id": 1280, "answer": "s = input()\nn = 26\nbad = 0\nfor i in range(len(s)):\n    if s[i] == '0':\n        bad += 1\n    elif s[i] == '1':\n        bad -= 1\ncnt = 0\nfor i in range(len(s)):\n    if s[i] == '0':\n        cnt += 1\n    else:\n        cnt -= 1\nprint(cnt)"}, "1281": {"problem_id": 1281, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    if a[i] == 0:\n        continue\n    cnt = 0\n    for j in range(i, n):\n        if a[j]!= 0:\n            cnt += abs(a[j] - a[i])\n            if cnt > k:\n                cnt = k\n                res = i\n                break\n    if cnt > k:\n        cnt = k\n        res = i\n"}, "1282": {"problem_id": 1282, "answer": "s = list(map(int, input().split()))\nn = len(s)\nb = 0\nfor i in range(n):\n    if s[i] == 'M':\n        b += 1\n    elif s[i] == 'F':\n        b -= 1\nprint(b)\n"}, "1283": {"problem_id": 1283, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nn,k=list(map(int,input().split()))\nl=[[] for i in range(n)]\nfor i in range(n):\n    l[i]=input().strip()\n    l[i].count('#')!=-1\nans=[0]*n\nfor i in range(n):\n    ans[l[i][1]]+=1\nmax=0\nfor i in range(n):\n    j=i+1\n    while j<n:\n        if ans[j]==max:\n            max=ans[j]\n        j+=1\n    ans[i]=max\n    ans[i]-=1\n    ans[i]%=k\nprint(ans[0],ans[n-1])\n"}, "1284": {"problem_id": 1284, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\nn = int(input())\na = list(map(int, input().split()))\nc = 0\nans = 0\nfor i in range(n):\n    if a[i] > c:\n        ans = max(ans, c + a[i])\n    elif a[i] == c:\n        ans = max(ans, c + a[i])\n    c = a[i]\nprint(ans)"}, "1285": {"problem_id": 1285, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nA = [0]*n\nfor i in range(n):\n    A[i] = list(map(int, input().split()))\nmx = 10**10\nans = 0\nfor i in range(4, mx+2):\n    if A[i] % mx == 0:\n        ans = max(ans, i)\nprint(ans)"}, "1286": {"problem_id": 1286, "answer": "from math import ceil\nn = int(input())\na = list(map(int, input().split()))\np, q = 1, 1\nfor i in range(1, n+1):\n    p, q = ceil(p * a[i]), ceil(q * a[i])\n    if p % 10 == q % 10:\n        print(0, end = '/')\n    else:\n        print(str(p // 10) + '/' + str(q // 10))"}, "1287": {"problem_id": 1287, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nmatrix = []\nfor i in range(n):\n    x = list(map(float, input().split()))\n    matrix.append(x)\n\nprint(matrix.count(1) / n)"}, "1288": {"problem_id": 1288, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\nans = 0\nm = -1\nfor i in range(1, n+1):\n    m = max(m, d[a[i]])\n    if m not in d:\n        ans += k\nprint(ans)\n"}, "1289": {"problem_id": 1289, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nb = list(map(int, input().split()))\nans = -1\nfor i in range(n):\n    if b[i] > ans:\n        ans = b[i]\nprint(ans)"}, "1290": {"problem_id": 1290, "answer": "n,m=map(int,input().split())\na=list(map(int,input().split()))\nc=0\nfor i in range(m):\n    if a[i]!=1:\n        c+=1\nprint(c)"}, "1291": {"problem_id": 1291, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\npoints=[]\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    points.append((x,y))\npoints.sort()\ns=list(map(int,input().split()))\ns.sort()\nc=0\nfor i in range(m):\n    x,y=s[i]\n    if points[i][0]<0 or points[i][1]>0:\n        continue\n    else:\n        c=1\n        break\nif c==1:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "1292": {"problem_id": 1292, "answer": "from collections import deque\nn,m,p = list(map(int,input().split()))\ng = [list(input()) for i in range(n)]\ns = list(map(int,input().split()))\ndef get_speed(x):\n    return int(input(),2) - 1\ndef get_x(x):\n    return ord(x[0])-97\ndef get_y(x):\n    return chr(122+int(x[1]))-97\ndef get_chunk(x):\n    return chr(122+int(x[1]))-97+1\nqueue = deque([get_speed(x) for x in range(1,p+1)])\nqueue.append(get_speed(get_x(x) for x in range(1,p+1)))\nwhile len(queue) > 0:\n    chunk = queue.popleft()\n    for i in range(1,len(g)):\n        if g[i-1][0] == \"#\":\n            g[i].popleft()\n        elif get_chunk(g[i-1][0]) <= get_speed(g[i][0]):\n            g[i].popleft()\n        else:\n            g[i].append([g[i-1][0],g[i][0]])\n            get_x(g[i-1][0])\n            get_y(g[i][0])\n            get_chunk(g[i-1][0])\n            get_chunk(g[i][0])\n            queue.append(get_speed(g[i-1][0]))\nprint((\" \".join(map(str,g[1][::]))))\n"}, "1293": {"problem_id": 1293, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nb = [0]*n\nb[0] = a[0]\nans = 0\nfor i in range(1, n):\n    if b[i] == 0:\n        ans += 1\n    elif b[i] + a[i] == a[i]:\n        ans += 1\n    else:\n        b[i] = a[i] - 1\nprint(ans)"}, "1294": {"problem_id": 1294, "answer": "t = int(input())\nfor _ in range(t):\n    s = input()\n    a = ''.join(sorted(s))\n    b = ''.join(sorted(s, key=len))\n    if a == b:\n        print(' '.join(['a']) + ['b'])\n    else:\n        print(' '.join([''.join(['a', 'b'])]) + [''.join([''.join(['c', 'z', 'z'])])])"}, "1295": {"problem_id": 1295, "answer": "n,m = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = {}\nfor i in range(m):\n    c[b[i]] = i\n    \nr = 0\nfor i in range(n):\n    if a[i] not in c:\n        c[a[i]] = i\n        r += 1\nprint(r)"}, "1296": {"problem_id": 1296, "answer": "import sys\ninput = sys.stdin.readline\n\nn, s = list(map(int, input().split()))\nitems = list(map(int, input().split()))\n\nmax_items = sum(items)\nmin_cost = 0\ncnt = 0\nfor i in range(1, n + 1):\n    cnt += items[i]\n    max_items -= items[i]\n    if max_items < 0:\n        max_items = 0\n    elif max_items == 0:\n        break\n    min_cost += items[i] * cnt\nprint(max_items, min_cost)\n"}, "1297": {"problem_id": 1297, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(1, n):\n    if s[i] == s[i - 1]:\n        cnt += 2\n    else:\n        break\nprint(cnt)"}, "1298": {"problem_id": 1298, "answer": "n = int(input())\ns = input()\nm = 0\nfor i in range(n):\n    if s[i] == '0':\n        m += 1\n    elif s[i] == '1':\n        m += 2\nprint(m)\n"}, "1299": {"problem_id": 1299, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nn, k = list(map(int, input().split()))\na, b = sorted(set(map(int, input().split())))\np = [i for i in range(1, n + 1)]\nfor i in range(1, n + 1):\n    p.append(p[-1] - i)\n    if br(p, k) < i:\n        br(p, k) += 1\n    else:\n        br(p, k) += 2\nprint(a, b)\n"}, "1300": {"problem_id": 1300, "answer": "n, c = map(int, input().split())\na = list(map(int, input().split()))\nans = 0\nfor i in a:\n    ans += i*(i-1)//2\nprint(ans)"}, "1301": {"problem_id": 1301, "answer": "n = int(input())\ns = input()\np = set()\nfor i in range(n):\n    if s[i] not in p:\n        p.add(s[i])\n    else:\n        p.add(s[i])\nprint(' '.join(p))"}, "1302": {"problem_id": 1302, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = map(int, readline().split())\n\nif k > n:\n    print(-1)\n    return\n\nans = []\ni = 0\nwhile i < k:\n    j = i + 1\n    while j < n and j!= i:\n        ans.append(j)\n        j += 1\n    i = j\n\nprint(' '.join(ans))"}, "1303": {"problem_id": 1303, "answer": "import sys\nreadline = sys.stdin.readline\n\np, q, l, r = list(map(int, readline().split()))\na = [int(x) for x in readline().split()]\nb = [int(x) for x in readline().split()]\n\ndef binarySearch(start, end):\n    left = 0\n    right = len(a) - 1\n\n    while left <= right:\n        mid = (left + right) // 2\n\n        if a[mid] < start:\n            left = mid + 1\n        elif a[mid] > end:\n            right = mid - 1\n        else:\n            return mid\n\n    return -1"}, "1304": {"problem_id": 1304, "answer": ""}, "1305": {"problem_id": 1305, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n    b.append(25)\n    b.append(50)\n    b.append(75)\nfor i in range(n):\n    if b[i] == 25:\n        print(\"YES\")\n    elif b[i] == 50:\n        print(\"YES\")\n    elif b[i] == 75:\n        print(\"NO\")\n"}, "1306": {"problem_id": 1306, "answer": "from sys import stdin,stderr\ninput = stdin.readline\nM = 10**9+7\nn, h = map(int, input().split())\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    s.add(a[i])\n    s.add(a[i] + 1)\nans = 0\nfor i in range(1, n+1):\n    if i in s:\n        ans += (pow(2, i, M) % M)\nprint(ans)"}, "1307": {"problem_id": 1307, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\nif n&1:\n    print('Ehab')\nelse:\n    print('Mahmoud')"}, "1308": {"problem_id": 1308, "answer": "n, m = list(map(int, input().split()))\ns = input()\nqueries = []\nfor i in range(m):\n    queries.append(list(map(int, input().split())))\nfor query in queries:\n    x, y, len = query\n    if len(s[x])!= len(s[y]):\n        print(\"NO\")\n        break\n    else:\n        if s[x] == s[y]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n"}, "1309": {"problem_id": 1309, "answer": "n = int(input())\nw = list(map(int, input().split()))\nt = [0] * (n - 1)\nfor i in range(n - 1):\n    t[i] += w[i]\n    t[i + 1] += w[i]\nprint(min(t))\n"}, "1310": {"problem_id": 1310, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = lambda x: stdout.write(str(x)+\"\\n\")\nprint = lambda x: stdout.write(str(x))\na = list(map(int, input().split()))\nans = []\nfor i in a:\n    ans.append(xor(i[0], i[1]))\nprint(max(ans))"}, "1311": {"problem_id": 1311, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ng = [[] for i in range(n)]\nfor i in range(n):\n    x, y = map(int, input().split())\n    g[x-y].append(i)\nprint(n-len(g[0]))"}, "1312": {"problem_id": 1312, "answer": "n, m = map(int, input().split())\na = [0] * (n + 1)\nans = []\nfor i in range(1, m + 1):\n    a[i] = max(a[i], a[i - 1] + 1)\n    ans.append(a[i])\nprint(' '.join(map(str, ans)))"}, "1313": {"problem_id": 1313, "answer": "n = int(input())\na = list(map(int, input().split()))\nk = 0\nfor i in range(n):\n    if a[i] <= k_1:\n        k = a[i]\n    elif a[i] <= k_2:\n        k = a[i]\n    else:\n        break\nif k == n_1:\n    print(\"First\")\nelse:\n    print(\"Second\")"}, "1314": {"problem_id": 1314, "answer": ""}, "1315": {"problem_id": 1315, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    if a[i] > i:\n        ans.append(i)\n    else:\n        ans.append(a[i])\nprint(' '.join(map(str, ans)))"}, "1316": {"problem_id": 1316, "answer": "n,k=list(map(int,input().split()))\ns=input()\nl=[]\nfor i in range(n):\n    l.append(s[i])\n    l.append(s[i]!=k)\nl.append(''.join(reversed(l)))\nprint(l.index(max(l)))\n"}, "1317": {"problem_id": 1317, "answer": "import sys\nreadline = sys.stdin.readline\nn,m = list(map(int,readline().split()))\ncnt = 0\nfor i in range(1,n+1):\n    cnt += sum(bin(i)[2:].count('1')*(i**2+j**2) for j in range(1,n+1))\nprint(cnt)"}, "1318": {"problem_id": 1318, "answer": "n = int(input())\nt = list(map(int,input().split()))\nk = int(input())\nr = list(map(int,input().split()))\nans = []\nfor i in range(k):\n    ans.append(t[i] - r[i])\nprint(*ans,sep=\" \")\n"}, "1319": {"problem_id": 1319, "answer": "import math\nm = int(input())\nprimes = [i for i in range(2, 2000000) if n==2]\nfactors = [1]*m\nfor p in primes:\n    factors[p] += 1\nprod = 0\nfor p in factors:\n    prod = prod*p\n    if p>1:\n        prod *= p\n        factors[p] -= 1\nprint(prod)"}, "1320": {"problem_id": 1320, "answer": "import sys\ndef read():\n    return list(sys.stdin.readline())\n\nn = int(read())\na = [i for i in read()]\nc = 0\nr = 0\nfor i in a:\n    c += (i.count('C') + i.count('.') - 1) * (i.count('C') + i.count('.') - 2)\n    r += i.count('C') * i.count('.')\nprint(r)"}, "1321": {"problem_id": 1321, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [tuple(map(int, input().split())) for i in range(n)]\nans = []\nfor i in range(n):\n    ans.append(a[i][0] + a[i][1])\nprint(' '.join(map(str, ans)))"}, "1322": {"problem_id": 1322, "answer": "import math\nn = int(input())\nm = 10**9 + 7\nans = 0\nfor i in range(2, n+1):\n    ans += (n-i)*(n-i)\n    ans %= m\nprint(ans)"}, "1323": {"problem_id": 1323, "answer": "m, n = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 0\nfor i in range(m):\n    ans += a.count(a[i]) * min(n, b.count(b[i]))\nprint(ans)\n"}, "1324": {"problem_id": 1324, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nread = lambda: list(map(int, input().split()))\na = read()\ns = read()\nc = 0\nfor i in s:\n    c += a[i]\nprint(c)"}, "1325": {"problem_id": 1325, "answer": "n, p = list(map(int, input().split()))\ns = list(input())\nc = 0\nfor i in range(1, n):\n    if s[i]!= s[i - 1]:\n        c += 1\n    else:\n        break\nprint(c)\n"}, "1326": {"problem_id": 1326, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\ns = sum(int(d) for d in range(1, N+1))\nprint(s*f(N))"}, "1327": {"problem_id": 1327, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\ndef main():\n    n, m = map(int, readline().split())\n    xyxyz = [list(map(int, readline().split())) for _ in range(n)]\n    xyz = [list(map(int, readline().split())) for _ in range(m)]\n    xyz.sort()\n    ans = 0\n    for i in range(n):\n        ans = max(ans, abs(sum(xyxyz[i]) - sum(xyxyz[i])))\n    print(ans)\n\nmain()\n"}, "1328": {"problem_id": 1328, "answer": "import sys\ninput = sys.stdin.readline\nn,m_a,m_b = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = sum(a)*m_a + sum(b)*m_b\nprint(min(c,abs(c-c//m_a-abs(c//m_a))) if c else -1)"}, "1329": {"problem_id": 1329, "answer": "import math\nn = int(input())\nans = 0\nfor i in range(1,n+1):\n    if i % 7 == 0:\n        ans += 1\nprint(ans)"}, "1330": {"problem_id": 1330, "answer": ""}, "1331": {"problem_id": 1331, "answer": "def main():\n    n, m, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = [0] * (max(a) + 1)\n    for i in range(1, n + 1):\n        b[i] = min(b[i - 1], a[i]) + k\n    print(min(b[n: 2 * n]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1332": {"problem_id": 1332, "answer": "def main():\n    cnt = 0\n    for i in map(int, input().split()):\n        cnt += i\n    if cnt < 0:\n        print(-1)\n    else:\n        print(cnt)\n\nmain()"}, "1333": {"problem_id": 1333, "answer": "import sys\nreadline = sys.stdin.readline\nn,m = list(map(int,readline().split()))\ns =''.join(map(''.join,readline().split()))\nfor i in range(m):\n    s+=s[i]\n    s+=str(i+1)\nprint(s)"}, "1334": {"problem_id": 1334, "answer": "n,k=list(map(int,input().split()))\ns=input()\nl=[]\nfor i in range(n):\n    l.append(s[i])\n#print(l)\n#print(s)\nans=[]\ni=0\nwhile i<n-1:\n    j=i+1\n    while j<n ithink {i+1}<=j<n:\n        if l[i]!=l[j]:\n            ans.append(l[i])\n            i=j\n            break\n        j+=1\nprint(\"\".join(ans))\n"}, "1335": {"problem_id": 1335, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    if a[i] == 0:\n        continue\n    cnt += 1\n\nprint(cnt)\n"}, "1336": {"problem_id": 1336, "answer": "import sys\ninput = sys.stdin.readline\nM = 10**9+7\nINF = 10**12\nN = int(input())\nA = [list(map(int, input().split())) for _ in range(N)]\nmod = M\nB = [INF]*(N+1)\nfor i in range(1, N+1):\n    B[i] = min(B[i-1], A[i-1][0] + A[i][0])\n    B[i] = min(B[i-1], A[i-1][1] + A[i][1])\nprint(B[N])"}, "1337": {"problem_id": 1337, "answer": "import sys\nread = sys.stdin.readline\nreadline = lambda: sys.stdin.readline().rstrip()\n\nn = int(read())\na = list(map(int, readline().split()))\nm = int(read())\nb = list(map(int, readline().split()))\nc = list(map(int, readline().split()))\n\nans = b[0] + c[0]\nfor i in range(1, n):\n    ans = max(ans, a[i] - a[i - 1])\n    if ans > m:\n        ans = max(ans, a[i] - a[i - 1])\nprint(ans)"}, "1338": {"problem_id": 1338, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nans = [None] * n\nans[0] = 1\nfor i in range(1, n):\n    for j in range(i):\n        ans[i] = max(ans[i], ans[j] + min(ans[i - 1], ans[j - 1]))\nprint(''.join(ans))"}, "1339": {"problem_id": 1339, "answer": "n = int(input())\nS = [0] * (10**5+1)\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    S[a-1] += 1\n    S[b-1] += 1\nans = S[1]\nfor i in range(1, n):\n    if S[i] == ans:\n        ans = i\n    elif S[i] > ans:\n        ans = S[i]\nprint(ans)\n"}, "1340": {"problem_id": 1340, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\n\ncnt = 0\nseg = []\ns = 0\nans = 0\nfor i in range(n):\n    if d[a[i]] == i:\n        seg.append(a[i])\n        s += 1\n    else:\n        cnt += 1\n        ans += cnt\n        seg.append(a[i])\nprint(ans)"}, "1341": {"problem_id": 1341, "answer": "import sys\ninput = sys.stdin.readline\n\ns = input().rstrip()\nt = input().rstrip().split()\n\nmoves = 0\nans = 0\nfor i in t:\n    if i == \"R\":\n        moves += 1\n    elif i == \"G\":\n        moves -= 1\n    else:\n        moves = 0\n        ans += 1\nprint(ans + 1)"}, "1342": {"problem_id": 1342, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nc = [0]*n\nfor i in range(n):\n    b[i] = a[i]\n    c[i] = 0\nans = min(b)\nfor i in range(n):\n    if b[i]>c[i]:\n        ans += b[i]-c[i]\nprint(ans)"}, "1343": {"problem_id": 1343, "answer": "import sys\nread = sys.stdin.readline\nreadline()\nn, m, k = list(map(int, read().split()))\nroad = list(map(int, read().split()))\nflour = [0] * (n + 1)\nfor i in range(1, n + 1):\n    j = min(road[i - 1], road[i])\n    flour[j] += i\nd = {}\nfor i in range(len(road)):\n    if flour[i] not in d:\n        d[flour[i]] = []\n    d[flour[i]].append(i)\nans = 0\nvisited = set()\nvisited.add(0)\ndef bfs(start, end):\n    nonlocal ans\n    stack = deque([start])\n    visited.add(start)\n    while stack:\n        curr = stack.pop()\n        for road in d[curr]:\n            if road not in visited:\n                bfs(road, curr)\n                visited.add(road)\n                stack.append(road)\nprint(ans if ans < m else -1)"}, "1344": {"problem_id": 1344, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] < a[i+1]:\n        s += 1\nprint(s)"}, "1345": {"problem_id": 1345, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint('+' + ''.join(map(str, [0] + a[i::])))\n"}, "1346": {"problem_id": 1346, "answer": "import math\nn,m,p = list(map(int,input().split()))\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\ngcd = lambda x,y: gcd(x,y) if y == 0 else gcd(abs(x),abs(y))\ndef isprime(x):\n    if x < 2: return False\n    if x % 2 == 0: return False\n    for i in range(3,int(math.sqrt(x))+1,2):\n        if x % i == 0: return False\n    return True\nif n<m:\n    print(0)\nelse:\n    for i in range(m-2):\n        if isprime(a[i]) and isprime(b[i]):\n            print(i+2)\n            break\n"}, "1347": {"problem_id": 1347, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nm=int(input())\nwords=input().split()\nn=int(input())\ns=set()\nfor i in words:\n    s.add(i)\n    s=s-{i}\nans=0\nfor i in range(n):\n    x,y=input().split()\n    x=int(x)\n    y=int(y)\n    if x>65 and y>65:\n        ans+=1\n    elif x<65 and y<65:\n        ans+=1\n    else:\n        ans+=abs(x-65)+(abs(y-65))\nprint(ans,10-ans)"}, "1348": {"problem_id": 1348, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = map(int, readline().split())\nd = list(map(int, readline().split()))\nedges = [[] for _ in range(n)]\nfor i in range(n):\n    edges[d[i]].append(i)\n\nvisited = [0] * n\nsorted_edges = []\nfor i in range(1, n):\n    visited[i] = 1\n    s = 0\n    heapq.heappush(s, d[i])\n    while s < n:\n        s = heapq.heappop(s)\n        visited[s] = 1\n        for e in edges[s]:\n            if visited[e]:\n                continue\n            heapq.heappush(s, e)\n    sorted_edges.append(sorted(list(visited), key=lambda x: x[1]))\n\nprint(len(sorted_edges))\nans = []\nfor i in range(len(sorted_edges)):\n    ans.append(str(i + 1) +'' + str(sorted_edges[i][1]))\nprint('\\n'.join(ans))"}, "1349": {"problem_id": 1349, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    beds = list(map(int, input().split()))\n    taps = list(map(int, input().split()))\n    l = 0\n    r = n-1\n    for i in range(1, n+1):\n        if beds[i] - 1 < taps[i]:\n            l += 1\n        elif taps[i] - 1 < beds[i] and beds[i] - 1 not in l:\n            r += 1\n        else:\n            l = 0\n            r = 0\n            beds.remove(taps[i])\n            taps.remove( beds[i] )\n    print(min(l, r))"}, "1350": {"problem_id": 1350, "answer": "n, k = map(int, input().split())\ns = input()\nl = [0] * 26\nfor i in range(n):\n    l[ord(s[i]) - ord('a')] += 1\nans = 0\nfor i in range(k):\n    if l[i] == 0:\n        ans = max(ans, i + 1)\nprint(ans)"}, "1351": {"problem_id": 1351, "answer": "l,r=map(int,input().split())\nif l&1==0 or r&1==0:\n    print(-1)\nelse:\n    l=l%10\n    r=r%10\n    print(l*10+r*('0'+str(l).zfill(r)))"}, "1352": {"problem_id": 1352, "answer": "import sys\ninput = sys.stdin.readline\n\nn, x = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = 0\nd = [[] for _ in range(x)]\nfor i in range(n):\n    d[a[i]].append(i)\nans += sum(1 for i in range(len(d)) if d[i]!=i)\nprint(ans)\n"}, "1353": {"problem_id": 1353, "answer": "n,m,a,b=list(map(int,input().split()))\nprint(sum(a+b*n-m*int(n/2)))"}, "1354": {"problem_id": 1354, "answer": "import sys\ninput = sys.stdin.readline\nn, k, a = list(map(int, input().split()))\nm = int(input())\ns = list(map(int, input().split()))\ns.sort()\nb = [0]*n\nfor i in range(m):\n    b[s[i]-1] = 1\n    print(b[i])\n"}, "1355": {"problem_id": 1355, "answer": "import math\nn,m = list(map(int,input().split()))\ng = []\nfor i in range(n):\n    a,b = list(map(int,input().split()))\n    g.append((a,b))\nans = 0\nfor i in range(m):\n    a,b = list(map(int,input().split()))\n    c = abs(a-b)\n    d = abs(n-g[i][1])\n    ans += math.hypot(c,d)\nprint(\"\\n\".join(map(str,ans[1:])))\n"}, "1356": {"problem_id": 1356, "answer": "s = input()\nn = len(s)\na = [0] * n\nc = 0\nfor i in range(n):\n    if s[i] == 'a':\n        a[i] += 1\n    elif s[i] == 'b':\n        c += 1\nprint(c)"}, "1357": {"problem_id": 1357, "answer": "n, m = map(int, input().split())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in a:\n    b[i] += 1\nans = b[1] // 2\nfor i in range(1, n):\n    ans = min(ans, b[i] - b[i - 1])\nprint(ans)"}, "1358": {"problem_id": 1358, "answer": "import sys\ninput = sys.stdin.readline\nk,n=list(map(int,input().split()))\ns=[]\nfor i in range(k):\n    s.append(input())\n    a=int(s[-1])\n    if a<0:\n        a=abs(a)\n    s.append(a)\nprint(sum(s))"}, "1359": {"problem_id": 1359, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\nc = [0]*n\nd = [0]*n\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    c[a] += 1\n    d[b] += 1\nr = 0\nfor i in range(1, n+1):\n    if i&1:\n        r += c[i]\n    elif i&2:\n        r += d[i]\nprint(r)\n"}, "1360": {"problem_id": 1360, "answer": "from bisect import bisect_left as bl\nn = int(input())\na, b = [int(x) for x in input().split()]\nfor i in range(n):\n    a, b = [int(x) for x in input().split()]\n    if a > b:\n        a, b = b, a\n    d = max(a, b)\n    ans = i + bl(d - 1)\n    print(ans)"}, "1361": {"problem_id": 1361, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nns = lambda: list(map(int, readline().split()))\nns()\nn = int(readline())\na = ns()\nd = INF\ncnt = 0\nh = [0]*n\nfor i in range(n-1):\n    h[i+1] = a[i]\n    d = min(d, h[i+1]-h[i])\n    cnt += d\nprint(cnt)"}, "1362": {"problem_id": 1362, "answer": "n, p, m = list(map(int, input().split()))\nd = {i: 0 for i in range(n)}\nfor i in range(n):\n    d[i+1] = sum(map(int, input().split()))\nbalance = 0\ntop = n\ncnt = 0\nfor i in range(m):\n    if balance < 0:\n        top -= 1\n        cnt += p\n        balance = balance - d[top]\n    elif balance > 0:\n        top += 1\n        cnt += p\n        balance = balance + d[top]\nprint(cnt)\n"}, "1363": {"problem_id": 1363, "answer": ""}, "1364": {"problem_id": 1364, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nt = list(map(int, readline().split()))\nd = {}\nfor i in range(n):\n    d[t[i]] = i\nans = 0\nm = max(t)\nfor i in range(1, n):\n    if t[i] == m:\n        ans = max(ans, i - m + 1)\nprint(ans)"}, "1365": {"problem_id": 1365, "answer": "mod = 10**9+7\nfrom sys import stdin\ninput = stdin.readline\n\ndef f(n):\n    if n==0:\n        return 1\n    return f(n-1)*f(n-2)%mod\n\nn, k = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor i in range(n-1):\n    u, v = list(map(int, input().split()))\n    edges[u-1].append((v-1, i))\n    edges[v-1].append((u-1, i))\n\ndp = [0]*n\ndp[0] = 1\nfor i in range(1, n):\n    for j in range(i):\n        dp[j] = (dp[j-1] + f(j)*f(i))%mod\nprint(dp[-1])\n"}, "1366": {"problem_id": 1366, "answer": "n = int(input())\na = [0]*1000001\nb = [0]*1000001\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n    b[i] = list(map(int, input().split()))\ns = sum(a[i] & b[i] for i in range(1000001))\nprint(s)"}, "1367": {"problem_id": 1367, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in a:\n    if i not in s:\n        s = i\nprint(s)"}, "1368": {"problem_id": 1368, "answer": "from statistics import mean\nn, a, b = list(map(int, input().split()))\nv = list(map(int, input().split()))\na = v[0]\nb = v[-1]\nc = []\nfor i in range(n):\n    c.append(v[i])\n    a = max(a, mean(c))\n    b = min(b, mean(c))\nprint(a + b // 2)\n"}, "1369": {"problem_id": 1369, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nINF = float('inf')\nMOD = 10**9 + 7\nsys.setrecursionlimit(10**5)\n\nN = int(input())\nP = [[INF for _ in range(N)] for _ in range(N)]\nfor _ in range(N):\n    P[0][(_] = [_]\n    P[1][(_] = [_]\n\nans = 0\nfor i in range(2, N):\n    for j in range(i):\n        x1, y1 = P[i][j]\n        x2, y2 = P[i][j]\n        d = abs(x1-x2)\n        if d > ans: ans = d\n        if d == 0:\n            ans += 1\nprint(ans)"}, "1370": {"problem_id": 1370, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nH, W, K = map(int, input().split())\ns = [0] + list(map(int, input().split()))\nfor i in range(1, W):\n  s.append(s[i-1] + s[i-1][1:])\nA = [0]*K\nB = [0]*K\nfor i in range(K):\n  A[i] = s[i][i]\n  B[i] = s[i][W-i-1] + s[W-i-1][i]\nans = 0\nfor i in range(K, H*W):\n  ans += max(A[i], B[i])\nprint(ans)"}, "1371": {"problem_id": 1371, "answer": "from itertools import combinations\ns = int(input())\nans = []\nfor i in range(1,s+1):\n    if i not in ans:\n        ans.append(i)\n        ans.append(0)\nprint(len(ans))"}, "1372": {"problem_id": 1372, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nh, n = map(int, input().split())\na = [0] + list(map(int, input().split()))\nfor i in range(n):\n    a.append(min(a[-1], a[-2]))\nans = sum(a[-1:])\nprint(ans)"}, "1373": {"problem_id": 1373, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, K = map(int, readline().split())\nMOD = 10**9 + 7\nans = pow(K, MOD-2, MOD)\nfor i in range(N):\n    ans *= i+1\nprint(ans%MOD)"}, "1374": {"problem_id": 1374, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nINF = 10**9+7\ns = list(map(int, readline().split()))\ns.sort()\nm = INF\nfor i in range(N):\n    m = (m//2+1)//2\n    ind = bisect.bisect_right(s, INF)\n    ans = s[ind]\n    s[ind] = m\n    ans //= 2\n    m = ans\nprint(m)"}, "1375": {"problem_id": 1375, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nfrom collections import defaultdict as dd"}, "1376": {"problem_id": 1376, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i]\nprint(s)"}, "1377": {"problem_id": 1377, "answer": "import sys\nimport math\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nans = 'YES'\nfor i in range(n):\n    if a[i] > i:\n        ans = 'NO'\n        break\nprint(ans)"}, "1378": {"problem_id": 1378, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = [0]*n\nfor i in range(n):\n    ans[l[i]-1] = i+1\nprint(' '.join(map(str,ans)))"}, "1379": {"problem_id": 1379, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import deque\nimport math\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n \nn,m,d = map(int,input().split())\nl = list(map(int,input().split()))\nl.sort()\nd = min(d,m)\nfor i in range(n):\n    a = l[i]\n    if a % 2 == 0:\n        print(i+1)\n        print(l[i],end=\" \")\n    else:\n        print(i+1)\n        print(l[i],end=\" \")\nprint()"}, "1380": {"problem_id": 1380, "answer": "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n    if a[i]>k:\n        s+=i\n    elif a[i]==k:\n        s+=abs(i-k)\n    else:\n        s+=i-k\nprint(s)\nfor i in range(p):\n    print(\"+\",i*x,sep=\" \")\n    if i%2==0:\n        print(\"-\",i*x,sep=\" \")\n"}, "1381": {"problem_id": 1381, "answer": "k, n, s, p = list(map(int, input().split()))\nprint(k + s * min(n, s * p) // k)\n"}, "1382": {"problem_id": 1382, "answer": "from collections import deque\nn,m=list(map(int,input().split()))\nedges=deque([])\nfor i in range(m):\n    a,b=list(map(int,input().split()))\n    edges.append((a,b))\n\nc=0\nvisited=[False]*n\ndef dfs(x):\n    visited[x]=True\n    for y in edges[x]:\n        if not visited[y]:\n            dfs(y)\n\ndfs(0)\nprint(w//2+c)\n"}, "1383": {"problem_id": 1383, "answer": "import sys\ninput = sys.stdin.readline\n\ndef pow2(x):\n    res = 1\n    while x:\n        res *= 2\n        x //= 2\n    return res\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = len(a)\n    r = len(b)\n    ans = pow2(m)\n    for i in range(l):\n        ans += pow2(a[i] + i)\n    for i in range(r):\n        ans += pow2(b[i] + i)\n    print(ans % m)\n\nmain()"}, "1384": {"problem_id": 1384, "answer": "n = int(input())\ns = list(map(int, input().split()))\nans = 0\nfor i in range(1, n):\n    if s[i] == 0:\n        ans += 1\nprint(ans)\n"}, "1385": {"problem_id": 1385, "answer": "s = input()\nn = len(s)\na = []\nfor i in range(n):\n    if s[i] == '\"':\n        a.append(s[i])\n    else:\n        a.append(s[i])\nb = []\nfor i in range(n):\n    if a[i] == '':\n        b.append(a[i])\n    else:\n        b.append(a[i])\nc = []\nfor i in range(n):\n    if b[i] == '':\n        c.append(b[i])\n    else:\n        c.append(b[i])\nd = []\nfor i in range(n):\n    if c[i] == '':\n        d.append(c[i])\n    else:\n        d.append(c[i])\ne = []\nfor i in range(n):\n    if d[i] == '':\n        e.append(d[i])\n    else:\n        e.append(d[i])\nf = []\nfor i in range(n):\n    if e[i] == '':\n        f.append(e[i])\n    else:\n        f.append(e[i])\ng = []\nfor i in range(n):\n    if f[i] == '':\n        g.append(f[i])\n    else:\n        g.append(f[i])\nh = []\nfor i in range(n):\n    if g[i] == '':\n        h.append(g[i])\n    else:\n        h.append(g[i])\ni = 0\nj = 0\nk = 0\nfor i in range(len(s)):\n    if s[i] == '\"':\n        i += 1\n    elif s[i] == '!':\n        j += 1\n    elif s[i] == '?':\n        k += 1\nprint(' '.join(map(str, range(i, j))))\n"}, "1386": {"problem_id": 1386, "answer": "import math\nw, h = map(int, input().split())\nprime = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317]\ndef is_prime(n):\n    if n < 2:\n        return False\n    elif n == 2:\n        return True\n    else:\n        return math.isclose(math.sqrt(n), int(math.pow(2, 31) - 1))\nans = 10**18\nfor i in range(2, w*h + 1):\n    if is_prime(i):\n        ans -= (i**2)//2\nprint(ans)"}, "1387": {"problem_id": 1387, "answer": "n, t = list(map(int, input().split()))\na = list(map(int, input().split()))\np = []\nfor i in range(n - 1):\n    p.append(t + i)\nvisited = set()\nvisited.add(1)\nans = \"YES\"\nfor i in p:\n    if i in visited:\n        continue\n    else:\n        visited.add(i)\n        ans = \"NO\"\n        break\nprint(ans)\n"}, "1388": {"problem_id": 1388, "answer": "import sys\nreadline = sys.stdin.readline\nfrom collections import deque\nn = int(readline())\nA = [0]*n\nB = [0]*n\nC = [0]*n\nans = []\nfor i in range(n):\n    a,b,c = list(map(int,readline().split()))\n    A[i] = a\n    B[i] = b\n    C[i] = c\ndp = [[0]*n for _ in range(n)]\ndp[0][0] = 1\nq = deque()\nq.append(1)\nwhile q:\n    t = q.popleft()\n    for i in range(t):\n        if dp[i][t]!=-1:\n            continue\n        dp[i][t] = min(dp[i][t],dp[i]+(t-i)**2*a)\n        ans.append(ans[t]+t**2)\n        q.append(i+1)\nprint(min(ans))\n"}, "1389": {"problem_id": 1389, "answer": ""}, "1390": {"problem_id": 1390, "answer": "n, m = list(map(int, input().split()))\nf = list(map(int, input().split()))\np = [0] * (m + 1)\nfor i in range(1, m + 1):\n    p[i] = p[i - 1] + f[i - 1]\nans = p[m] - p[0]\nprint(ans)\n"}, "1391": {"problem_id": 1391, "answer": "n,m,a=list(map(int,input().split()))\nb=list(map(int,input().split()))\np=list(map(int,input().split()))\nans=0\nfor i in range(n):\n    ans+=min(m*p[i],b[i])\nprint(ans)\nprint(0) if ans==0 else print(ans+1)\n"}, "1392": {"problem_id": 1392, "answer": "n, k = list(map(int, input().split()))\na = [int(i) for i in input().split()]\ns = 0\nfor i in a:\n    if i >= k:\n        s += 1\nprint(s)\n"}, "1393": {"problem_id": 1393, "answer": "s, t = input(), input()\nn = len(t)\nfor i in range(2 * n):\n    if t[i].isupper():\n        t[i] = t[i].lower()\nprint(0 if s.count('A') == n else n - 1)"}, "1394": {"problem_id": 1394, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = readline().rstrip()\n\na = [c for c in t]\n\ndef f(s):\n    if len(s) == len(set(s)):\n        return ''.join(s)\n    else:\n        return ''.join(reversed(s))\n\nprint('(' + f(a) + ')')"}, "1395": {"problem_id": 1395, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nm = int(readline())\n\nans = 0\nfor i in range(1, 2000001):\n    ans += (n - i) * m\n\nprint(ans)"}, "1396": {"problem_id": 1396, "answer": "n, k, x = list(map(int, input().split()))\nc = list(map(int, input().split()))\nd = {}\nm = 0\nfor i in range(n):\n    if c[i] not in d:\n        d[c[i]] = i\n    else:\n        m = max(m, i - d[c[i]])\nprint(m)\n"}, "1397": {"problem_id": 1397, "answer": "import math\nn,m=list(map(int,input().split()))\ng=[[0]*n for i in range(n)]\nfor i in range(m):\n    a,b=list(map(int,input().split()))\n    g[a-1][b-1]=1\n    g[a-1][b]=0\nprint(min(g[1][1],g[1][2]))"}, "1398": {"problem_id": 1398, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nA = list(map(int, readline().split()))\nans = 0\nfor i in range(1, n):\n    if A[i] - 2 * A[i - 1] > 2:\n        ans += 1\n    elif A[i] - 2 * A[i - 1] == 2:\n        ans += 1\nprint(ans)"}, "1399": {"problem_id": 1399, "answer": "n = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\nans = 0\nfor i in range(n):\n    for j in range(n):\n        if i!=j:\n            if a[i][0]>a[j][0] and a[i][1]>a[j][1]:\n                ans+=1\nprint(ans)\n"}, "1400": {"problem_id": 1400, "answer": "import sys\ninput = sys.stdin.readline\n\nn, t = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += (2*s[i] - 1) * t[i]\n\nprint(ans%1000000007)\n"}, "1401": {"problem_id": 1401, "answer": "import sys\ninput = sys.stdin.readline\n \nn = int(input())\na = list(map(int, input().split()))\nadj = [[] for i in range(n)]\nfor i in range(n-1):\n    u, v = map(int, input().split())\n    adj[u-1].append(v-1)\n    adj[v-1].append(u-1)\nvis = [0]*n\ncnt = [0]*n\nans = 0\nfor i in range(n-1):\n    if vis[i] == 0:\n        cnt[i] = 1\n        ans += 1\n        vis[i] = 1\n        for j in adj[i]:\n            if vis[j] == 0:\n                cnt[j] = 1\n                ans += 1\nprint(ans)"}, "1402": {"problem_id": 1402, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\ns1 = list(map(int, readline().split()))\ns2 = list(map(int, readline().split()))\nres = 0\nfor i in range(n):\n    if s1[i] > s2[i]:\n        res += (s1[i] - s2[i]) * (s2[i] - s1[i])\nprint(res / 1000000007)"}, "1403": {"problem_id": 1403, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**9+7\ndef inp(): return int(readline())\ndef out(s, end=\"\\n\"): sys.stdout.write(str(s)+\"\\n\"+end)\nn,k = inp()\na = list(map(int, readline().split()))\nb = a[1:]\nc = 0\nfor i in range(1,n):\n    if a[i]>a[i-1]:\n        b.append(a[i])\n    elif a[i]<a[i-1]+k:\n        c += a[i-1]-a[i]\n        b.append(a[i])\nprint(c)"}, "1404": {"problem_id": 1404, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(1, n):\n    if a[i]!= -1:\n        cnt += (i - a[i]) * (a[i] > a[i - 1])\nprint(cnt % 1000000)"}, "1405": {"problem_id": 1405, "answer": "n = int(input())\na = list(map(int, input().split()))\nf = [0, 1, 3, 5, 8, 13, 21, 28, 58, 61, 611, 1279, 220, 7, 11, 228,\n     9, 13, 17, 4, 70, 71, 143, 144, 20, 85, 86, 231, 10, 10, 611, 613,\n     614, 115, 116, 615, 616, 617, 618, 619, 220, 621, 1122, 1131, 3, 4,\n     619, 1124, 1142, 1129, 3, 3, 622, 1129, 11364, 11346, 11364, 11364,\n     1129, 3, 3, 622, 2333, 2335, 333, 334, 623, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624,\n     624, 624, 624,"}, "1406": {"problem_id": 1406, "answer": "import sys\nn, k, d = list(map(int, input().split()))\nif n < k*d:\n    print(-1)\n    return\n\nans = []\nfor i in range(1, k+1):\n    ans.append(str(i+1) +'' + str(k) +'' + str(d))\n\nprint('\\n'.join(ans))\n"}, "1407": {"problem_id": 1407, "answer": "from itertools import accumulate\nn, m = list(map(int, input().split()))\nmatrix = []\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\nprime = [True] * n\nsieve = [False] * n\nprimes = set()\nfor i in range(n):\n    if sieve[i]:\n        continue\n    for j in range(2, int(ceil(m / j)) + 1):\n        if prime[j]:\n            prime[j] = False\n            break\n    else:\n        prime[0] = True\n        primes.add(j)\nans = 0\nfor p in primes:\n    j = len(primes) - 1\n    while j >= 0 and prime[j]:\n        j -= 1\n    ans += j\nprint(ans)\n"}, "1408": {"problem_id": 1408, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nt = [list(map(int, input().split())) for i in range(n)]\nt.sort()\nw = [t[i][1] for i in range(n)]\nh = [t[i][0] for i in range(n)]\n\nm = min(w)\ns = sum(w)\nans = m + s\nprint(ans)"}, "1409": {"problem_id": 1409, "answer": "n,k = map(int,input().split())\na = list(map(int,input().split()))\na.sort()\nb = [0]*(n+1)\nb[0] = a[0]\nfor i in range(1,n):\n    b[i] = max(b[i-1],a[i])\nprint(b[n-1])"}, "1410": {"problem_id": 1410, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ng = []\nfor i in range(n):\n    g.append((a[i], i))\nvisited = [False] * n\nvisited[0] = True\nans = 0\nq = deque()\nq.append((0, 0))\nwhile q:\n    now, color = q.popleft()\n    for nex, cost in g[color].itervalues():\n        if visited[nex]:\n            continue\n        visited[nex] = True\n        ans += cost\n        q.append((nex, cost))\nprint(ans)"}, "1411": {"problem_id": 1411, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\nn, s = list(map(int, input().split()))\nhappiness = [0] * (n + 1)\nfor i in range(1, n + 1):\n    happiness[i] = happiness[i - 1] + b[i - 1] - a[i - 1]\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    happiness[a] = max(happiness[a], b - a)\nprint(s + happiness[s])"}, "1412": {"problem_id": 1412, "answer": "from sys import stdin, stdout\ninput = stdin.readline\n#print = stdout.write\nn, k = list(map(int, input().split()))\ncoupons = [set() for i in range(n)]\ncoupons[0].add(1)\ncoupons[1].add(130)\nfor i in range(2, n):\n    s = input().split()\n    s[0] -= 10**9\n    s[1] -= 10**9\n    for p in s[1].intersection(s[0]):\n        if p not in coupons[i]:\n            coupons[i].add(p)\nprint(k + sum(coupons))\nfor i in range(k):\n    print(' '.join(str(x) for x in sorted(coupons[i])))\n"}, "1413": {"problem_id": 1413, "answer": "import sys\nreadline = sys.stdin.readline\n \nn = int(readline())\ns = list(map(int, readline().split()))\nans = 0\nfor i in range(n):\n    if s[i] == 1:\n        ans += 1\nprint(ans)"}, "1414": {"problem_id": 1414, "answer": "n, m = list(map(int, input().split()))\ntable = []\nfor i in range(n):\n    table.append(input())\nd = {}\nfor i in range(n):\n    d[i] = 0\nans = 0\nfor i in range(n):\n    if table[i][0] in d:\n        ans += d[table[i][0]]\n    elif table[i][0] not in d:\n        ans += 1\n    d[table[i][0]] = 1\nprint(ans)\n"}, "1415": {"problem_id": 1415, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nx, y, x_0, y_0 = list(map(int, input().split()))\nr = [0] * 100001\na = [0] * 100001\nans = [0] * 100001\nfor i in range(1, 1000001):\n    r[i] += a[i]\n    a[i] += 1\n    ans[i] = r[i]\nprint(' '.join(map(str, ans)))\n"}, "1416": {"problem_id": 1416, "answer": "n,w=map(int,input().split())\ns=list(map(int,input().split()))\na=sorted(s)\nb=[]\nfor i in range(n):\n    b.append(a[i]*w)\nprint(max(b))"}, "1417": {"problem_id": 1417, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 1000000007\n\n\ndef main():\n    n = int(readline())\n    print(2 ** (n * (n + 1) // 2))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1418": {"problem_id": 1418, "answer": "n = int(input())\nans = [1]*n\nfor i in range(2, n):\n    ans[i] = max(ans[i-2]+i, i)\nprint(' '.join(map(str, ans)))"}, "1419": {"problem_id": 1419, "answer": "k = int(input())\ns = input().strip().lower()\nn = len(s)\ncnt = 0\nfor i in range(n):\n    if s[i] =='':\n        continue\n    elif s[i] == '-':\n        cnt += 1\n        continue\n    else:\n        if cnt > k:\n            k = cnt\n            print(k)\n        else:\n            print(k)"}, "1420": {"problem_id": 1420, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\nn, l = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    x = a[i]\n    ans = min(ans, l - x + 1)\nprint(ans)"}, "1421": {"problem_id": 1421, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nedges = []\nfor i in range(n-1):\n    u, v = map(int, input().split())\n    edges.append((u-1, v-1, i))\n\nt = list(map(int, input().split()))\nt.sort()\n\ns = sum(t[0])\nd = {}\nfor i in range(1, n):\n    d[t[i]] = i\n\nans = 0\ncur = 0\nvisited = set()\nwhile cur < n:\n    v = t[cur]\n    visited.add(v)\n    cur = next(i for i in visited if i < v)\n    s -= d[v]\n    visited.remove(v)\n\nif s < 0:\n    print(0)\nelse:\n    print(s)"}, "1422": {"problem_id": 1422, "answer": "s = input()\nm = int(input())\nans = []\nfor i in range(m):\n    ans.append(0)\n    if s[i] == '1':\n        ans[-1] += 1\n    else:\n        ans[-1] += 1\nfor i in range(m):\n    print(ans[i], end=' ')\n"}, "1423": {"problem_id": 1423, "answer": "import sys\ninput = sys.stdin.readline\n\nn, l, r = map(int, input().split())\na = list(map(int, input().split()))\np = list(map(int, input().split()))\n\nres = [-1] * n\nans = []\nfor i in range(n):\n    ans.append(p[i] - a[i])\n\nfor i in range(n):\n    if ans[i] == 0:\n        ans.pop()\n        continue\n    else:\n        res.append(ans[i])\n\nprint(' '.join(map(str, res)))"}, "1424": {"problem_id": 1424, "answer": "import sys\nn, m, k = map(int, input().split())\na = [0]*(n+1)\nfor i in range(1, n+1):\n    a[i] = int(input(), 2)\nans = 0\nfor i in range(m+1):\n    b = bin(a[i])[2:]\n    if '1' in b:\n        ans += 1\nprint(ans)"}, "1425": {"problem_id": 1425, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nans = [0]*n\nans[0] = a[0]\nfor i in range(1, n):\n    if a[i] > ans[i-1]:\n        ans[i] = a[i] + ans[i-1]\n    else:\n        ans[i] = ans[i-1]\nprint(\"YES\")\nfor i in range(1, n):\n    print(ans[i], end=\" \")"}, "1426": {"problem_id": 1426, "answer": "import sys\nsys.setrecursionlimit(10**6)\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nN, M = list(map(int, read().split()))\nadj = [[] for _ in range(N)]\nfor _ in range(M):\n    u, v = list(map(int, read().split()))\n    adj[u].append((v, -1))\n    adj[v].append((u, -1))\n\ns, t = [i for i in range(N)], [i for i in range(N)]\ng = [[] for _ in range(N)]\nfor i in range(M):\n    u, v = list(map(int, read().split()))\n    g[u-1].append(v-1)\n    g[v-1].append(u-1)\n\ndef dfs(s, t):\n    nonlocal ans\n    if s == t:\n        ans = 0\n    elif s > t:\n        ans = 1\n    else:\n        vis[s] = 1\n        vis[t] = 1\n        for adj in adj[s]:\n            if adj[0] == t:\n                continue\n            dfs(adj[1], t)\n            dfs(adj[0], t)\n\nans = float('inf')\ndfs(s, t)\nprint(ans)"}, "1427": {"problem_id": 1427, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\nN = int(input())\nA = list(map(int, input().split()))\n\nd = {}\nfor i in range(N):\n    d[A[i]] = i\n\ndp = [0]*N\ndp[0] = 1\nmod = pow(2, N)\nfor i in range(1, N):\n    dp[i] = min(dp[i-1]*i%mod, dp[i]*i%mod)\n\nprint(dp[N])"}, "1428": {"problem_id": 1428, "answer": "import sys\ninput = sys.stdin.readline\n\nN,C=list(map(int,input().split()))\nD=list(map(int,input().split()))\n\ndef f(i,j):\n    if i%3==0:\n        x,y=i%3,(j-1)%3\n        return 0\n    elif i%3!=0 or j%3!=0:\n        return D[i][j]\n    else:\n        return -1\n\nM=[[0]*C for _ in range(N)]\nfor i in range(N):\n    for j in range(C):\n        M[i].append((f(i,j),i,j))\n\nans=[]\nfor i in range(N):\n    for j in range(C):\n        ans.append((sum(D[i]==D[j] for j in range(C)))+sum(M[i][j]!=M[j][i] for j in range(C)))\nprint(ans[0])\n"}, "1429": {"problem_id": 1429, "answer": "import sys\ninput = sys.stdin.readline\nN, S = list(map(int, input().split()))\nc = set()\nfor i in range(N):\n    if S[i] in c:\n        c.remove(S[i])\n    else:\n        c.add(S[i])\nans = 0\nfor i in range(1, N):\n    a = list(map(str, S[i:]))\n    c1 = set()\n    for j in range(len(a)):\n        if a[j] in c1:\n            c1.remove(a[j])\n        else:\n            c1.add(a[j])\n    ans += len(c1)\nprint(ans)\n"}, "1430": {"problem_id": 1430, "answer": "import sys\ninput = sys.stdin.readline\nN, K = list(map(int, input().split()))\nS = input().rstrip()\nl = [0]*N\nfor i in range(N):\n    if S[i]==\"1\":\n        l[i+1] = 1\nans = 0\nfor i in range(N-1):\n    if l[i]==1:\n        ans+=1\n        l[i+1] = 1\n    else:\n        l[i+1] = 1\nfor i in range(N):\n    if l[i]==1:\n        ans+=1\n        l[i+1] = 1\nprint(ans)"}, "1431": {"problem_id": 1431, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef II(): return int(readline())\ndef MI(): return map(int, readline().split())\ndef LI(): return list(map(int, readline().split()))\n\nclass SegTree:\n    def __init__(self, N, a):\n        self.N = N\n        self.A = a\n        self.seg = [0] * (N + 1)\n        for i in range(1, N + 1):\n            self.seg[i] = (i + self.A) % 2\n\n    def add(self, x, y):\n        x, y = self.seg[x], self.seg[y]\n        if x == y:\n            return\n        if self.A == 1:\n            self.seg[x] = self.SEG[x] = 2\n        else:\n            self.seg[y] = self.SEG[x] = 2\n\nINF = 10**18\nN = II()\na = LI()\ns = SegTree(N, INF)\nfor i in range(N):\n    s.add(a[i], i)\nprint(s.get_num_balls())"}, "1432": {"problem_id": 1432, "answer": "import sys\nread = sys.stdin.readline\n\nN = int(read())\nA = list(map(int, read().split()))\n\ndam_indices = [i for i in range(N) if i!= 0]\nrain_amounts = [0] * N\nfor i in range(1, N):\n    rain_amounts[i] = A[i]\n    if i - 1 > 0:\n        dam_indices[i] = i - 1\n    elif i + 1 < N:\n        dam_indices[i] = i + 1"}, "1433": {"problem_id": 1433, "answer": "import sys\nreadline = sys.stdin.readline\nn, m = map(int, readline().split())\na = [list(map(int, readline().split())) for _ in range(n)]\na.sort()\ncnt = 0\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 1:\n            cnt += 1\nprint(cnt)"}, "1434": {"problem_id": 1434, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9 + 5\n\nn = int(readline())\na = [0]*(n+2)\nfor i in range(n):\n    a[i+1] = list(map(int, readline().split()))\n    a[i] ^= a[i+1]\n\nprint(n*(n+1)//2)\nprint(list(map(lambda x: x^a[x], a)))\n"}, "1435": {"problem_id": 1435, "answer": "a = input()\nd = {}\nfor i in range(1, 10**9 + 100000):\n    d[i] = a.count(i)\nprint(d[9])"}, "1436": {"problem_id": 1436, "answer": "n = int(input())\na = list(map(int, input().split()))\nres = 0\nfor i in range(n):\n    if a[i] == -1:\n        res += 1\nprint(res)"}, "1437": {"problem_id": 1437, "answer": "s = input()\nn = len(s)\na = ['0', '1', 'a', 'b', 'c', 'd', 'e', 'f', 'A', 'B', 'C', 'D', 'E', 'F']\np = 1\nfor i in range(n):\n    p *= a[ord(s[i]) - 65]\n    p %= pow(64, 10, 7)\nprint(p)"}, "1438": {"problem_id": 1438, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    ans += a[i]*k\n    if b[i] == 1:\n        ans += b[i]\nprint(ans)\n"}, "1439": {"problem_id": 1439, "answer": "n, m = map(int, input().split())\na = list(map(int, input().split()))\nans = False\nfor i in range(n):\n    if a[i] % m == 0:\n        ans = True\nif ans:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "1440": {"problem_id": 1440, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\na = list(map(int, readline().split()))\nprint(sum([i*(i-1)//2 for i in range(n)]))"}, "1441": {"problem_id": 1441, "answer": "n, m = map(int, input().split())\na = [int(i) for i in input().split()]\na.sort()\ndp = [0] * (m + 1)\ndp[0] = 1\nfor i in range(1, m + 1):\n    dp[i] = (dp[i - 1] * a[i]) % 1000000007\nprint(dp[m])"}, "1442": {"problem_id": 1442, "answer": "import sys\ninput = sys.stdin.readline\n\nn, s = map(int, input().split())\n\nd = {'B': 0, 'S': 0}\nres = []\nfor i in range(n):\n    p, q, d = map(int, input().split())\n    res.append((p, q, d))\nprint('\\n'.join(res))"}, "1443": {"problem_id": 1443, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nseg = list(map(int, input().split()))\nsp, wp = 0, 0\nfor i in range(n):\n    if seg[i] == 'G':\n        sp += 1\n    elif seg[i] == 'W':\n        wp += 1\n    elif seg[i] == 'L':\n        sp += 3\nans = 0\nmw, ml = max(sp, wp), min(sp, wp)\nfor i in range(n):\n    if seg[i] == 'G':\n        ans += mw\n    elif seg[i] == 'W':\n        ans += ml\n    elif seg[i] == 'L':\n        ans += mw\nprint(ans)"}, "1444": {"problem_id": 1444, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nk = int(input())\n\nstations = []\nfor i in range(n):\n    stations.append([int(x) for x in input().split()])\n\nstations.sort()\n\ns = 0\nans = [0] * n\ncnt = 0\nfor i in range(k):\n    s += stations[i][0]\n    cnt += stations[i][1] / k\n    ans[i] = s\nprint(*ans)\n"}, "1445": {"problem_id": 1445, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\n\nn = int(input())\narr = list(map(int, input().split()))\narr.sort()\ni = 0\nans = []\nwhile i < n:\n    ans.append(arr[i])\n    i += 1\nprint(\" \".join(ans))"}, "1446": {"problem_id": 1446, "answer": "n, m, k = list(map(int, input().split()))\nc = list(map(int, input().split()))\nd = [[0 for i in range(n)] for j in range(n)]\nans = {}\nfor i in range(n):\n    ans[c[i]] = i\nfor i in range(1, n + 1):\n    u, v, x = list(map(int, input().split()))\n    d[u][v] = x\n    d[v][u] = x\nfor i in range(m):\n    u, v, x = list(map(int, input().split()))\n    u -= 1\n    v -= 1\n    d[u][v] = x\n    d[v][u] = x\nfor i in range(n):\n    if ans[c[i]] == i:\n        print('Yes', end=' ')\n    else:\n        print('No', end=' ')\n    for j in range(len(ans)):\n        print(ans[j], end=' ')\n    print()\n"}, "1447": {"problem_id": 1447, "answer": "from sys import stdin\ninput = stdin.readline\nn, m = list(map(int, input().split()))\nd = [0]*(n+1)\nfor i in range(1, n+1):\n    d[i] = 1.0*i/(n+1)\nprint(d[n]/n)\n"}, "1448": {"problem_id": 1448, "answer": "n,d=list(map(int,input().split()))\nm=int(input())\na=[]\nb=[]\nfor i in range(m):\n    x,y=list(map(int,input().split()))\n    a.append(x)\n    b.append(y)\nans=sorted(list(zip(a,b),key=lambda x:x[1]))\nprint(\"YES\" if ans[0] in range(n-1,n-d,1) else \"NO\")\n"}, "1449": {"problem_id": 1449, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,k=list(map(int,input().split()))\n    a=list(map(int,input().split()))\n    d={}\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]]=1\n        else:\n            d[a[i]]+=1\n    m=min(d.values())\n    print(m)\n"}, "1450": {"problem_id": 1450, "answer": "s = input()\nn = len(s)\na = [0] * n\nb = [0] * n\nc = [0] * n\nfor i in range(n):\n    if s[i] == '1':\n        a[i] = 1\n    elif s[i] == '2':\n        a[i] = 2\n    else:\n        a[i] = a[i - 1] + 1\nprint(''.join(str(x) for x in sorted(a)))"}, "1451": {"problem_id": 1451, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ncnt = 0\nfor i in a:\n    if i < k:\n        cnt += 1\nprint(cnt)\n"}, "1452": {"problem_id": 1452, "answer": "h, w = list(map(int, input().split()))\nr = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\nMOD = 10**9 + 7\ndp = [0]*h\ndp[0] = 1\nfor i in range(1, h):\n    dp[i] = (dp[i-1]*r[i]+dp[i-1]*c[i])%MOD\n    \nans = 0\nfor i in range(h):\n    for j in range(w):\n        if r[j]!=0:\n            ans += dp[h-1-i]*dp[j+w-j-1]*r[j]*c[j]\n            \nprint(ans%MOD)\n"}, "1453": {"problem_id": 1453, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\na = list(map(int, readline().split()))\ns = 0\nfor i in range(n):\n    s += a[i] * (i + 1) // 2\nprint(*min(s, m))"}, "1454": {"problem_id": 1454, "answer": "n, m = list(map(int, input().split()))\nrows = []\ncols = []\nfor i in range(n):\n    rows.append(list(map(int, input().split())))\nfor i in range(m):\n    cols.append(list(map(int, input().split())))\n\nrows.sort(reverse=True)\ncols.sort(reverse=True)\n\nans = 0\nmax_sum = 0\ni = 0\nj = 0\nwhile i < n:\n    if rows[i][0] == 0:\n        ans += 1\n        i += 1\n    elif cols[j][0] == 0:\n        ans += 1\n        j += 1\n    else:\n        if ans > max_sum:\n            max_sum = ans\n            ans = 0\n        i += 1\n        j += 1\n        \nprint(max_sum)\n"}, "1455": {"problem_id": 1455, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nm = min(n,1000)\n\ndef check(i):\n    for j in range(1,m+1):\n        if i+j>m:\n            return False\n    return True\n\nans = m\nfor i in range(n):\n    r,c = map(int,input().split())\n    ans = min(ans,r+c-m)\nprint(ans)"}, "1456": {"problem_id": 1456, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nmas = [[0]*n for i in range(n)]\nfor i in range(n):\n    s = input().rstrip()\n    for i in range(n):\n        if s[i] == '.':\n            mas[i][i] = 1\n        elif s[i] == 'o':\n            mas[i][i] = i\n        else:\n            mas[i][i] = 0\n\nknight = [0]*n\nrook = [0]*n\nknight[0] = 1\nrook[0] = 1\n\nans = []\nfor i in range(n):\n    x, y = list(map(int, mas[i]))\n    ans.append((x, y))\n\ndef check(x, y):\n    if knight[x]!=1e9:\n        knight[x] = 1e9\n        for i in range(n):\n            if mas[i][y]==0:\n                return False\n        return True\n    for i in range(n):\n        if knight[y]!=1e9:\n            knight[y] = 1e9\n            for i in range(n):\n                if mas[i][x]==0:\n                    return False\n            knight[y] = 1e9\n            for i in range(n):\n                if mas[i][x]==0:\n                    return False\n    return True\n\nposs = []\nfor i in range(n):\n    x, y = list(map(int, mas[i]))\n    poss.append((x, y))\n\nfor i in range(n):\n    if knight[i]!=1e9:\n        continue\n    for j in range(n):\n        if knight[i]!=knight[j]:\n            continue\n        check(i, j)\n\nif check(0, n-1):\n    print('YES')\n    print('....x....')\n    print('....x....')\n    print('....x....')\n    print('.')\n"}, "1457": {"problem_id": 1457, "answer": "import sys\ninput = sys.stdin.readline\n\nAILI = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12,'m': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18,'s': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}\n\ndef check(ai):\n    c = 0\n    for c in ai:\n        if c in AILI:\n            return c\n        else:\n            c += 1\n    return c\n\nai = input().strip()\nprint(check(ai))"}, "1458": {"problem_id": 1458, "answer": "n = int(input())\ns = input()\nl = []\nr = []\nfor i in range(n):\n    l.append(s[i])\n    r.append(s[i])\nans = []\nfor i in range(n):\n    if l[i] < r[i]:\n        ans.append(l[i])\n        l[i] = 'z'\n    else:\n        ans.append(r[i])\n        r[i] = 'z'\nprint(''.join(ans))"}, "1459": {"problem_id": 1459, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nd = list(map(int, readline().split()))\ns, t = map(int, readline().split())\n\nans = 1000000000\nfor i in range(n-1):\n    ans = min(ans, d[i+1]-d[i])\n\nprint(ans)"}, "1460": {"problem_id": 1460, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = [0] * n\nans[0] = 1\nfor i in range(1, n):\n    ans[i] = ans[i-1] + ans[i-2]\n    ans[n-i-1] = ans[n-i-2] + ans[n-i-3]\nprint(ans[-1])"}, "1461": {"problem_id": 1461, "answer": "import sys\ninput = sys.stdin.readline\nn, k = list(map(int, input().split()))\nf = list(map(int, input().split()))\nw = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append((f[i], i))\nans.sort()\nres = [0] * n\ncur = 0\nfor i in range(n):\n    cur += ans[i][0]\n    res[i] = cur\n    ans[i][0] = ans[i][0] + 1\nprint('\\n'.join(map(str, res)))\n"}, "1462": {"problem_id": 1462, "answer": "import sys\nn, k = list(map(int, input().split()))\na = list(input().split())\ns = 0\nfor i in a:\n    s += i.count(u'D')\nprint(s)\n"}, "1463": {"problem_id": 1463, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(list(map(int, input().split())))\nprint('Yes' if sum(l) % 2 == 0 else 'No')"}, "1464": {"problem_id": 1464, "answer": "n = int(input())\ntitles = input().split(' ')\ns = [0] * (n + 1)\nfor title in titles:\n    s[int(title[0]) - 1] += 1\n    for i in range(1, len(s)):\n        if s[i] > s[i - 1]:\n            s[i] = s[i - 1]\nprint(''.join(s))"}, "1465": {"problem_id": 1465, "answer": "import sys\nreadline = sys.stdin.readline\nn, k = map(int, readline().split())\ns = list(readline())[::-1]\nd = {}\nfor i in range(n):\n    d[s[i]] = i\nans = []\nfor i in range(len(s)):\n    if s[i] == \"L\":\n        ans.append(d[s[i]])\n    else:\n        ans.append(-1)\nprint(*ans, sep=\"\\n\")"}, "1466": {"problem_id": 1466, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('INF')\nMOD = 10**9+7\ninput = lambda: readline().rstrip()\nM = [0]*len(input)\nfor i in range(len(M)):\n  M[i] = int(input()[3:])\nn, m, k = M[0], M[1], M[2]\ng = [[] for i in range(n+1)]\nfor i in range(3, n+1):\n  for j in range(i):\n    g[i].append((j, M[i]))\n    g[j].append((i, M[j]))\nvisited = [0]*(n+1)\nans = [0]*(m+1)\nans[0] = 1\ndef dfs(v, d):\n  visited[v] = d\n  for nei in g[v]:\n    if visited[nei] == 0:\n      dfs(nei, d+1)\n      ans[min(d, visited[nei])] += 1\ndfs(1, 0)\nprint(ans[0])\n"}, "1467": {"problem_id": 1467, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\n\nans = 0\nsegments = []\nfor i in range(n):\n    if A[i] < A[i+1]:\n        segments.append(i)\n        ans += 1\n    elif A[i] > A[i+1]:\n        segments.pop()\n        ans += 1\n        break\n\nif segments:\n    mx = max(ans)\nelse:\n    mx = -1\n\nprint(mx)"}, "1468": {"problem_id": 1468, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nhashtags = []\n\nfor i in range(n):\n    hashtags.append(input().rstrip()[:-1])\n\ns = set(hashtags)\n\ns.discard(max(s, key=len))\n\nprint('#' + ''.join(s))"}, "1469": {"problem_id": 1469, "answer": "from collections import deque\nl=int(input())\ndef dfs(i):\n    nonlocal pq\n    queue=[i]\n    pq.append(i)\n    while len(queue)>0:\n        temp=queue.pop()\n        for j in adj[temp]:\n            if j not in pq:\n                dfs(j)\n                queue.append(j)\ndfs(1)\nprint(len(set([1,2,3,4])-set([1,2,3])))\nprint(len(set([1,5,6,7])))\nprint(len(set([2,3,4,5])-set([2,3,4])))\n"}, "1470": {"problem_id": 1470, "answer": "import sys\ninput=sys.stdin.readline\na=int(input())\nprint(0)"}, "1471": {"problem_id": 1471, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    edges = [list(map(int, input().split())) for _ in range(N - 1)]\n    d = [[] for _ in range(N + 1)]\n    for u, v, w in edges:\n        d[u].append((v, w))\n        d[v].append((u, w))\n\n    def is_even(n):\n        return n & 1 == n\n\n    even = [0] * (N + 1)\n    even[1] = 1\n    ans = []\n    for u, w in d[1]:\n        if is_even(w):\n            ans.append(0)\n        else:\n            ans.append(1)\n            even[u] = 1\n            even[v] = 1\n            if u!= v:\n                even[u] |= even[v]\n            elif u == v:\n                even[u] |= even[v]\n            else:\n                even[u] |= even[v]\n                even[v] = 1\n            print(*ans, sep='\\n')\n            print()"}, "1472": {"problem_id": 1472, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18\n\nN, X, Y = map(int, readline().split())\nedges = [[] for _ in range(N)]\nfor _ in range(N-1):\n    edges[X].append(Y)\n    edges[Y].append(X)\n\n# \u8996\u5148\u9762\u7ee7\ufffdano3\uff0c\u8981\u4e0d\u80fd\u76f4\u63a5\u627e\u5230\u5173\u952e\u5730\u5740\n# \u5f53\u524d\u8981\u6c42\u7684\u90a3\u4e2a\u6570\u4e0e\u5f53\u524d\u6570\u6700\u5c0f\u7684\u6570\u4e4b\u95f4\u7684\u533a\u95f4\u8fde\u63a5\u8d85\u8fc7\u4e00\u5b9a\u65f6\u95f4\uff0c\u8003\u8651\u73b0\u5728\u7684\u533a\u95f4\u592a\u5927\u4e86\uff0c\u9700\u8981\u5728\u4e4b\u524d\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\u627e\u5230\n# \u5982\u679c\u8fde\u63a5\u8d85\uff0c\u5219\u91cd\u590d\u8be5\u6b7b\u5faa\u73af\uff0c\u5426\u5219\u91cd\u590d\u6b7b\u5faa\u73af\ndef edge_checker(k):\n    adj = defaultdict(list)\n    for x, y in edges[k]:\n        adj[x].append(y)\n        adj[y].append(x)\n    ans = [0] * N\n    stack = [x for x in range(N)]\n    visited = set()\n    while stack:\n        x = stack.pop()\n        for y in adj[x]:\n            if y not in visited:\n                visited.add(y)\n                ans[y] = ans[x] + 1\n                stack.append(y)\n    return ans\n\nprint('\\n'.join(map(str, ans)))"}, "1473": {"problem_id": 1473, "answer": "from bisect import bisect_left, bisect_right\ninput=lambda:list(map(int,input().split()))\nn=int(input())\na,b=input().split()\nif n==0:\n    print(0)\n    return\nans=[0]*n\nans[0]=a[0]\nfor i in range(1,n):\n    a,b=input().split()\n    if a!=0:\n        ans[i]=a\n    elif b!=0:\n        ans[i]=b\nprint(*ans)"}, "1474": {"problem_id": 1474, "answer": "from math import *\nn = int(input())\na = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n    d[a[i]] = i+1\nans = 0\nfor i in range(1, 10001):\n    ans += pow(d[i], 2)\nprint(ans)"}, "1475": {"problem_id": 1475, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nn,b,k,x = map(int,input().split())\na = list(map(int,input().split()))\ns = [0]*10\nfor i in a:\n    s[i] += 1\ns = s[::-1]\np = x%b\nr = x//b\nc = 1\nfor i in range(1,len(s)):\n    c = (c*p)%MOD\n    r = (r*s[i])%MOD\n    p = pow(c,k-i,MOD)\nprint(c)"}, "1476": {"problem_id": 1476, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nans = 0\nfor i in range(n):\n    if a[i] > a[i + 1]:\n        ans += 1\nprint(ans)\nprint(' '.join(map(str, a)))"}, "1477": {"problem_id": 1477, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\ntasks = list(map(int, input().split()))\ndep_graph = [[] for _ in range(n)]\nfor _ in range(m):\n    t, v = map(int, input().split())\n    tasks.append(t)\n    dep_graph[t].append(v)\n\ncompleted = [False] * n\ncoprocessor_calls = [0] * n\n\nfor i in range(n):\n    if completed[i]:\n        continue\n    task = tasks[i]\n    for node in dep_graph[task]:\n        if node == i:\n            continue\n        completed[node] = True\n        coprocessor_calls[i] += 1\n\nprint(min(coprocessor_calls))"}, "1478": {"problem_id": 1478, "answer": "import sys\ninput = sys.stdin.readline\n\nC=lambda:list(map(int,input().split()))\ns=lambda:list(input().strip())\nd=lambda:list(map(int,input().split()))\ne=lambda:list(map(int,input().split()))\n\ndef main():\n    n=int(s())\n    for i in range(1,n+1):\n        print(i,sep=' ')\n    print(n)\nmain()"}, "1479": {"problem_id": 1479, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\nfield = [[input() for _ in range(n)] for _ in range(n)]\n\nadj = [[] for _ in range(n)]\nadj[0] = [0] * n\n\nfor i in range(1, n):\n    x = list(map(int, input().split()))\n    x[i] -= 1\n    adj[i].append(x)\n\nvisited = [False for _ in range(n)]\nvisited[0] = True\n\nans = [0] * n\n\ndef bfs(adj, r):\n    q = deque([r])\n    while q:\n        r = q.pop()\n        for y in adj[r]:\n            if visited[y] == False:\n                visited[y] = True\n                bfs(adj, y)\n                visited[y] = False\n\nbfs(adj, 0)\nprint(*ans, sep='\\n')\n"}, "1480": {"problem_id": 1480, "answer": "n,k = map(int,input().split())\na = list(map(int,input().split()))\nans = []\nfor i in range(k):\n    ans.append(a[i])\nprint(' '.join(ans))"}, "1481": {"problem_id": 1481, "answer": "n = int(input())\na = [list(input()) for i in range(n)]\na.sort()\nans = \"NO\"\nfor i in range(n):\n    if a[i][0] == 'o':\n        ans = \"YES\"\n"}, "1482": {"problem_id": 1482, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\np = [0] * (n + 1)\nq = [0] * (n + 1)\nfor i in range(1, n + 1):\n    p[i] = a[i] - p[i - 1]\n    q[i] = a[i] - q[i - 1]\n\nprint(*p, sep='\\n')\nprint(*q, sep='\\n')"}, "1483": {"problem_id": 1483, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\np = list(map(int, input().split()))\n\ns = set()\nfor i in range(n):\n    s.add(p[i])\n\nans = []\nfor i in range(n):\n    if len(s) > 1:\n        ans.append(s.pop())\n\nprint(ans.pop())"}, "1484": {"problem_id": 1484, "answer": "from sys import stdin\nMOD = 1000000007\nf = stdin.readline().strip()\nn, k = list(map(int, f.split()))\na = list(map(int, f.split()))\np = [0] * (n + 1)\nfor i in range(1, n + 1):\n    p[i] = p[i - 1] + a[i - 1]\nans = 0\nfor i in range(1, k + 1):\n    if a[i] == -1:\n        ans += 1\n    else:\n        m = pow(2, i)\n        f = a[:i] + ''.join(map(str, f))\n        f = f.replace('-1', '')\n        p[i] = p[i - 1] + m\n        ans += f.count('1')\nprint(ans % MOD)"}, "1485": {"problem_id": 1485, "answer": "n, m = map(int, input().split())\na = list(map(int, input().split()))\ns = set()\nfor i in range(1, n):\n    s.add(a[i] + 1)\n    s.add(a[i] >> 1)\nprint(sum(s))"}, "1486": {"problem_id": 1486, "answer": "n = int(input())\nx = list(map(int, input().split()))\nprint(2*min(x[i] for i in range(n)), 2*max(x[i] for i in range(n)))\n"}, "1487": {"problem_id": 1487, "answer": "s = input()\nt = input()\nn = len(s)\nd = [0] * 10\nfor i in range(10):\n    if s[i]!= t[i]:\n        d[i] = 1\n    else:\n        d[i] = 0\nans = ''.join(str(d // 2) for d in list(reversed(d)))\nprint(ans)"}, "1488": {"problem_id": 1488, "answer": "from collections import defaultdict\nn = int(input())\na = list(map(int, input().split()))\nd = defaultdict(list)\nfor i in range(1, n):\n    d[a[i]].append(i)\nans = 0\nfor i in d:\n    ans += sum(d[i])[1]\nprint(ans/n, end=' ')\nprint(ans%n)"}, "1489": {"problem_id": 1489, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nMOD = 10**9+7\nans = 0\nfor i in range(n):\n    x,y = list(map(int, input().split()))\n    ans = (ans + pow(x-y, MOD-2, MOD))%MOD\nprint(ans)\n"}, "1490": {"problem_id": 1490, "answer": "n, m = map(int, input().split())\na = list(map(int, input().split()))\nans = [0] * 10 ** 9\nfor i in a:\n    ans[i] += 1\nd = {}\nfor i in range(1, 10 ** 9):\n    d[i] = 0\n    if i not in d:\n        d[i] = 1\n    elif i not in d[a[-1]]:\n        d[i] = 1 + d[a[-1]]\nprint(max(ans))\nprint(' '.join(map(str, ans)))"}, "1491": {"problem_id": 1491, "answer": "import sys\nn = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if a[i]**2 == i:\n        cnt += 1\n    elif a[i]**2 > i:\n        cnt += 1\nprint(cnt)\n"}, "1492": {"problem_id": 1492, "answer": "import sys\nreadline = sys.stdin.readline\nn, m = list(map(int, readline().split()))\ns = [[] for _ in range(n)]\nfor _ in range(n):\n    s[0].append(s[1].pop())\n    s[1].append(s[0].pop())\nd = {}\nfor i in range(1, n+1):\n    d[i] = {}\n    for j in range(len(s[i])):\n        d[i][s[i][j]].clear()\n        d[i][s[i][j]] = 1\nfor i in range(n):\n    for j in range(m):\n        if s[i][j] == '.':\n            d[i].setdefault(j, []).append(i)\n        else:\n            d[i][j].append(i)\nans = 0\nfor i in range(n):\n    ans = max(ans, d[i].get(i, []) + max(0, len(d[i][j]) - 1) * 60)\nprint(ans)\n"}, "1493": {"problem_id": 1493, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nboard = [[] for _ in range(n)]\nfor i in range(n):\n    board[i] = input().rstrip().split()\n\nfor i in range(1, n):\n    for j in range(len(board[i])):\n        if board[i][j] == '.':\n            board[i].remove(board[i][j])\n        else:\n            board[i].append(board[i][j])\n\nvisited = [False] * n\nans = []\nfor i in range(n):\n    if visited[i]:\n        continue\n    x = 0\n    for j in range(len(board[i])):\n        if board[i][j] == 'W':\n            x |= 1 << (j + 1)\n        elif board[i][j] == 'B':\n            x |= 1 << (j + 2)\n        else:\n            x |= 1 << (j + 3)\n    if x not in visited:\n        visited[x] = True\n        ans.append('-' * (m - 1) + 'W' * x + 'B' * (m - 2))\n\nprint('\\n'.join(ans))\n"}, "1494": {"problem_id": 1494, "answer": "s = input()\np = input()\nans = [0] * len(s)\nfor i in range(len(p)):\n    ans[i] = ans[i] + 1 if p[i] == '0' else ans[i] + 1\nprint(' '.join([str(ans[i]) for i in range(len(s))]))"}, "1495": {"problem_id": 1495, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = d.get(a[i], 0) + 1\nans = 10**10\nfor i in range(1, n):\n    ans = min(ans, d[i] * 2)\nprint(ans)\n"}, "1496": {"problem_id": 1496, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nfrom operator import *\nfrom decimal import Decimal\ngetcontext().prec = 10**9\nINF = float('inf')\nmod = int(1e9)+7\n\n\ndef main():\n    n, m, k, s = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    t = [tuple(map(int, input().split())) for _ in range(m)]\n    g = []\n    for i in range(n):\n        g.append(tuple(map(int, input().split())))\n    l = []\n    for i in range(m):\n        t, c = br(g, i)\n        if t == (1, 1):\n            l.append((c, i+1))\n        elif t == (2, 2):\n            l.append((c, i+1))\n        else:\n            l.append((c, i+1))\n    print(min([i for l, i in l if i not in g]))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1497": {"problem_id": 1497, "answer": "n = int(input())\ns = input()\nans = 0\nfor i in range(n):\n    s = s.replace('1', '')\n    clean = True\n    for j in range(n):\n        if s[j] == '1':\n            clean = False\n    if clean:\n        ans += n - len(s)\nprint(ans)"}, "1498": {"problem_id": 1498, "answer": "import sys\nreadline = sys.stdin.readline\nn, q = list(map(int, readline().split()))\ntasks = []\nfor _ in range(q):\n    tasks.append([tuple(map(int, readline().split())) for _ in range(n)])\n\ns = set()\nd = {i:0 for i in range(1, n+1)}\nfor t, k, d in tasks:\n    s.add(tuple(k) if d else k)\n    d[t] = d[t] + k\n\nres = []\nfor i in s:\n    if i not in res:\n        res.append(i)\n\nprint(' '.join(map(str, sorted(res))))\n"}, "1499": {"problem_id": 1499, "answer": "n, m = list(map(int, input().split()))\ns = [0] * (m + 1)\nfor i in range(1, m + 1):\n    s[i] = int(input())\nprint(*s, sep=' ')\n"}, "1500": {"problem_id": 1500, "answer": ""}, "1501": {"problem_id": 1501, "answer": "n, m = map(int, input().split())\ns = input()\np = input()\nr = [0] * 26\nfor i in range(n):\n    r[ord(s[i]) - ord('a')] += 1\n    for j in range(26):\n        if r[j] == 0:\n            r[j] = 1\nans = (1 << (n - m + 1)) - 1\nfor i in range(m):\n    x = input()\n    ans.add(ansig(x[:len(x) - 1]))\nprint(ans)"}, "1502": {"problem_id": 1502, "answer": "a = int(input())\nprint(a + 13)"}, "1503": {"problem_id": 1503, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nt = set()\nans = 0\nfor i in range(m):\n    t.add(int(input()))\n\nfor i in range(1, n):\n    for j in range(len(t)):\n        if i not in t.intersection(t[j:]):\n            ans += 2 ** (n - j)\nprint(ans)\n"}, "1504": {"problem_id": 1504, "answer": ""}, "1505": {"problem_id": 1505, "answer": "from sys import stdin, stdout\ninput = stdin.readline\np,x,y,vx,vy = map(int,input().split())\nans = [0,0]\nfor i in range(1,7):\n    ans.append(max(ans[i-1]**2+a*vx**i,ans[i-1]**2+b*vy**i,ans[i-1]**2+c*vx**i+d*vy**i,a*vx**i+b*vy**i+c*vx**i+d*vy**i))\nstdout.write(str(max(ans)) + '\\n')"}, "1506": {"problem_id": 1506, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [1] * n\nfor i in range(1, n):\n    p.append(a[i] + p[i - 1])\nf = 0\nm = 10 ** 9 + 7\nfor i in range(n):\n    f += p[i]\n    m = (m * (i + 1)) % m\nprint(f)"}, "1507": {"problem_id": 1507, "answer": "import sys\nread = sys.stdin.readline\n\nn, k = map(int, read().split())\ns = list(map(int, read().split()))\n\ndef guard(d, s):\n    nonlocal d, s\n    if k > len(s):\n        return \"NO\"\n    else:\n        for i in range(k):\n            if s[i] == d:\n                return \"YES\"\n            elif s[i] > d:\n                return \"NO\"\n"}, "1508": {"problem_id": 1508, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n    d[a[i]] = i\n\nres = [0] * n\ns = sorted(a)\nfor i in range(n):\n    res[s[i]-1] = i\n\nprint(' '.join(map(str, res)))"}, "1509": {"problem_id": 1509, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9+7\n\nn = int(readline())\na = list(map(int, readline().split()))\ng = [[] for _ in range(n)]\nfor i in range(1, n):\n    g[i].append(i)\n\nfor i in range(n):\n    s = a[i]\n    for j in g[i]:\n        if s > j:\n            s = j\n            break\n    else:\n        s = a[i]\n        g[i].append(s)\n\nprint(g[0][1])"}, "1510": {"problem_id": 1510, "answer": "import sys\nread = sys.stdin.readline\nn,m = map(int,read().split())\na = list(map(int,read().split()))\nb = list(map(int,read().split()))\nf = 0\ns = 0\nfor i in range(n):\n    if a[i]>b[i]:\n        f = 1\n        break\nif f==0:\n    print(0)\nelse:\n    c = 0\n    for i in range(n):\n        if a[i]>b[i]:\n            c += 1\n    print(c)"}, "1511": {"problem_id": 1511, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nn, m, k = list(map(int, read().split()))\ncache = [0] * (n + 1)\nfor i in range(1, n + 1):\n    cache[i] = read().count(1) + k\n\nlocked = [False] * (n + 1)\nunlocked = [False] * (n + 1)\nfor i in range(n):\n    if cache[i] == 0:\n        print(i + 1)\n        print(0)\n        unlocked[i] = True\n    else:\n        if unlocked[i]:\n            print(i + 1)\n            print(0)\n        else:\n            print(i + 1)\n            print(locked[i])\n"}, "1512": {"problem_id": 1512, "answer": "n = int(input())\np = list(map(int, input().split()))\nm = len(p)\nans = 0\nfor i in range(m):\n    ans = max(ans, p[i])\n    if ans == i:\n        ans = 0\nprint(ans)"}, "1513": {"problem_id": 1513, "answer": "n, m, k = list(map(int, input().split()))\nbroken = list(map(int, input().split()))\ntape = [1] * n\nfor i in range(n):\n    tape[i] += 1\n\nans = 0\nfor i in range(n):\n    if tape[i] > k:\n        ans += i - broken.index(i)\n\nprint(ans)\n"}, "1514": {"problem_id": 1514, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\nprint(*a, sep='\\n')\nfor i in range(1, n-1):\n    if b[i] < a[i]:\n        print(-1)\n        break\n    elif b[i] == a[i]:\n        print(i+1, end=' ')\n    else:\n        print(i+1, end=' ')"}, "1515": {"problem_id": 1515, "answer": "p,x=list(map(int,input().split()))\ns=str(p)\nif len(s)==p:\n    print(s)\n    return\na=int(s[-1])*2\ns=s[:-1]\nm=len(s)\nfor i in range(m):\n    a*=10**i\n    a//=10**i\n    if a>9:\n        break\nprint(a)\n"}, "1516": {"problem_id": 1516, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 1000000007\nn = int(input())\na = list(map(int, input().split()))\nprint(sum(f(a[i], a[j]) for i in range(n) for j in range(n) if i + j < n))"}, "1517": {"problem_id": 1517, "answer": "n = int(input())\nans = 0\nfor i in range(1, n + 1):\n    ans += pow(i, 2, n)\nprint(ans)"}, "1518": {"problem_id": 1518, "answer": "from bisect import bisect_left as bl\nn = int(input())\na = list(map(int, input().split()))\ns = sorted(a)\nb = bl(s, n)\nprint(len(set(list(map(int,''.join(input().split())), []))) - b.bit_length())"}, "1519": {"problem_id": 1519, "answer": "import sys\ninput = sys.stdin.readline\nn, l, a = list(map(int, input().split()))\narr = [0] * n\narr[0] = 1\nfor i in range(1, n):\n    arr[i] = arr[i-1] + a + arr[i-1]\n    if arr[i] > l:\n        arr[i] = l\nprint(max(arr))\n"}, "1520": {"problem_id": 1520, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nprod = [0] * 100001\nfor i in range(n):\n    p = input().rstrip()\n    prod[i] = p\n\nres = 0\nfor i in range(1, len(prod)):\n    if prod[i] == '0':\n        continue\n    else:\n        res += 1\n        for j in range(i):\n            prod[j] = '1'\nprint(res)"}, "1521": {"problem_id": 1521, "answer": "p,n=list(map(int,input().split()))\na=[]\nfor i in range(n):\n    a.append(int(input()))\nif p%2:\n    print(-1)\nelse:\n    d=p//2\n    for i in range(d):\n        if a[i]>a[i+1]:\n            print(i+1)\n            return\n"}, "1522": {"problem_id": 1522, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip()\nd = {}\nfor i in range(n - 1):\n    d[s[i]] = s[i + 1]\n    \nkeys = set()\nfor i in range(n - 1):\n    if s[i] in keys:\n        keys.remove(s[i])\n    else:\n        keys.add(s[i])\n\nm = 0\nfor i in keys:\n    m += d[i]\nprint(m)"}, "1523": {"problem_id": 1523, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = 0\nfor i in range(k):\n    ans += b[a[i] - 1]\n\nprint(ans)\n"}, "1524": {"problem_id": 1524, "answer": "from collections import deque\ns = input()\nn = len(s)\nL = [0]*n\nR = [0]*n\ncnt = 0\nfor i in range(n):\n    if s[i] == 'R':\n        R[i] = 1\n    elif s[i] == 'L':\n        L[i] = 1\n    else:\n        cnt += 1\nans = 0\nfor i in range(2, n+1):\n    if R[i-1] == L[i] == 'R' and L[i-1] == 'L' and i >= 2:\n        ans += cnt\n        cnt = 0\n    elif R[i-1] == L[i] == 'L' and L[i-1] == 'R' and i >= 1:\n        ans += cnt\n        cnt = 0\nprint(ans)"}, "1525": {"problem_id": 1525, "answer": "from math import ceil\nh,w,k=list(map(int,input().split()))\nif k==1:\n    print(1)\nelif k==2:\n    print(2)\nelse:\n    m=1000000007\n    for i in range(1,w+1):\n        m=(m*(h+i)%m)%m\n    print(m)\n"}, "1526": {"problem_id": 1526, "answer": "from collections import deque\nA,B,C=list(map(int,input().split()))\ns=deque()\ns.append((A,0))\ns.append((B,0))\ns.append((C,0))\nwhile s:\n    a,v=s.popleft()\n    if a<B:\n        s.append((B,v+1))\n    elif a>C:\n        s.append((C,v+1))\n    else:\n        s.append((A,v+2))\nprint(max(A,B,C))\n"}, "1527": {"problem_id": 1527, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\n\ndef read():\n    return int(input())\n\n\nclass SegTree():\n    \"\"\"\u533a\u9593\u52a0\u7b97\uff0c\u5727\u7e2e\u533a\u9593\u5185\u306e\u9802\u70b9\u53ca\u3073\u8ddd\u96e2\"\"\"\n    def __init__(self, s):\n        self.s = s\n        self.n = len(s)\n        self.seg = [None] * (2*self.n-1)\n        for i in range(1,self.n):\n            self.seg[i] = self.seg[i-1]\n        for i in range(self.n-2,0,-1):\n            self.seg[i] = self.seg[i-1]\n            self.seg[i+1] = self.seg[i]\n\n    def update(self, i, x):\n        i += self.n\n        self.seg[i] = x\n        while i:\n            i = i-1\n            self.seg[i] = self.seg[i+1]\n\n    def query(self, i, j):\n        i += self.n\n        j += self.n\n        return self.seg[i] == self.seg[j]\n\n    def invert(self):\n        \"\"\"\u9006\u5408\u64cd\u4f5c\"\"\"\n        self.n = 2*self.n-1\n        self.seg = [None] * (2*self.n-1)\n        for i in range(1,self.n):\n            self.seg[i] = self.seg[i-1]\n\n    def add_edge(self, i, j):\n        \"\"\"\u659c\u3081\u306e\u70b9\u6570\u3092\u6c42\u3081\u308b\"\"\"\n        self.update(i, i)\n        self.update(j, j)\n\n    def get_components(self):\n        \"\"\"\u533a\u9593\u306e\u533a\u9593\u30af\u30a8\u30ea\u3092\u8fd4\u3059\"\"\"\n        ret = []\n        for i in range(self.n):\n            ret.append([])\n        for i in range(self.n):\n            for j in range(self.n):\n                if i+1 < self.n and j+1 < self.n:\n                    ret[i].append(self.seg[i+1])\n                elif i+1 == self.n:\n                    ret[i].append(self.seg[i+1])\n                elif j+1 < self.n:\n                    ret[i].append(self.seg[j+1])\n                else:\n                    ret[i].append(self.seg[j+1])\n        return ret\n\n\ndef main():\n  "}, "1528": {"problem_id": 1528, "answer": "import sys\ninput = sys.stdin.readline\n\nN, X = list(map(int, input().split()))\n\nbottom = 10 ** (N - 1).bit_length()\n\nLayers = [0] * (N + 1)\nfor i in range(1, N + 1):\n    Layers[i] = sum(Layers[i - 1] * 2 + (1 if i - 1 else 0) for _ in range(bottom))\n\nprint(sum(Layers[N] // 2) % 1)"}, "1529": {"problem_id": 1529, "answer": "import re\nn=int(input())\nfor i in range(n):\n    s=input()\n    if re.match('^[a-zA-Z]+\\.',s):\n        print('Freda's')\n    elif re.match('^[a-zA-Z]+\\.',s+'miao.'):\n        print('OMG>.< I don't know!')\n    elif re.match('^[a-zA-Z]+\\.',s+'lala.'):\n        print('OMG>.< I don't know!')"}, "1530": {"problem_id": 1530, "answer": "import sys\nread = sys.stdin.readline\ns = set()\nn = int(read())\nfor i in range(n):\n    s.add(i+1)\n    s.add(i+2)\n    s.add(i+3)\n    s.add(i+4)\n    s.add(i+5)\n    s.add(i+6)\ndef primes(n):\n    prime = [True] * (n+1)\n    for i in range(2, n + 1):\n        if prime[i]:\n            for j in range(i * i, n + 1, i):\n                prime[j] = False\n    return prime\nprimes(10**6)\nl = []\nfor i in range(1, 10**6 + 1):\n    if primes(i):\n        l.append(i)\nprint(*l, sep='\\n')"}, "1531": {"problem_id": 1531, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\na = list(map(int,read().split()))\nm = max(a)\nb = [0]*n\nfor i in range(1,n):\n    b[i] = b[i-1]+a[i]\nans = 0\nfor i in range(n-1,-1,-1):\n    if b[i]==m:\n        ans+=1\n    elif b[i]>m:\n        ans+=1\nprint(ans,n-ans)"}, "1532": {"problem_id": 1532, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nS = set()\nfor i in range(2, n+1):\n    S.add(i)\n    g = int(input())\n    I = []\n    for j in range(2, g+1):\n        if j not in S:\n            I.append(j)\n    print(' '.join(map(str, I)))\n"}, "1533": {"problem_id": 1533, "answer": "n = int(input())\ns = input()\nfor i in range(n):\n    s = s.replace(\"a\", \" \").replace(\"b\", \"A\").replace(\"c\", \"B\").replace(\"d\", \"C\").replace(\"e\", \"D\").replace(\"f\", \"E\").replace(\"g\", \"F\").replace(\"h\", \"G\").replace(\"i\", \"H\").replace(\"j\", \"I\").replace(\"k\", \"J\").replace(\"l\", \"K\").replace(\"m\", \"M\").replace(\"n\", \"N\").replace(\"o\", \"O\").replace(\"p\", \"P\").replace(\"q\", \"Q\").replace(\"r\", \"R\").replace(\"s\", \"S\").replace(\"t\", \"T\").replace(\"u\", \"U\").replace(\"v\", \"V\").replace(\"w\", \"W\").replace(\"x\", \"X\").replace(\"y\", \"Y\").replace(\"z\", \"Z\")\nprint(\"YES\" if s in s else \"NO\")"}, "1534": {"problem_id": 1534, "answer": "s = input()\nn = len(s)\nans = 0\nfor i in range(n):\n    if s[i] == 'a':\n        ans += 1\n    elif s[i] == 'b':\n        ans -= 1\nprint(ans)"}, "1535": {"problem_id": 1535, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nn, x0, y0 = map(int, input().split())\nL = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    L.append((x, y))\nL.sort()\nans = n\ncnt = 0\nj = 0\nwhile j < n:\n    if L[j][0] - L[j][1] <= 10**9:\n        ans += 1\n        cnt += 1\n    j += 1\nprint(ans)"}, "1536": {"problem_id": 1536, "answer": "import sys\ninput = sys.stdin.readline\n \nn=int(input())\na=[]\nfor i in range(n):\n    x,y,z=map(int,input().split())\n    a.append((x,y,z))\nprint(\" \".join([str(x) for x in a]))"}, "1537": {"problem_id": 1537, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nc = [0] * n\nfor i in range(n):\n    c[i] = input().rstrip('\\n')\n\nans = 0\nm = max(c)\nfor i in range(1, n):\n    if c[i] == m:\n        ans += 1\nprint(ans)\n"}, "1538": {"problem_id": 1538, "answer": "from fractions import gcd\nn = int(input())\na = list(map(int, input().split()))\nl = [1]\nfor i in range(2, n):\n    l.append(l[-1]*a[i])\nl.sort()\nprint(l[-1]//gcd(l[-1], n))"}, "1539": {"problem_id": 1539, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18\nns = lambda: list(map(int, readline().split()))\nni = lambda: int(readline())\nnl = lambda: list(map(int, readline().split()))\n\nn, l = ni()\nd = ni()\ne = 0\nm = min(l, d)\nfor i in range(m):\n    e += d[i]\n    d[i] -= e\n    e = 0\nprint(e)"}, "1540": {"problem_id": 1540, "answer": "import sys\ninput = sys.stdin.readline\nINF = 10**18+9999998193\nMOD = 10**9 + 7\n\n\nn, m, k = list(map(int, input().split()))\nA = [[0] * (m+1) for i in range(n+1)]\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    A[x][y] = 1\nans = []\nfor i in range(1, k+1):\n    x, y = list(map(int, input().split()))\n    ans.append(A[x][y])\nprint(*ans, sep='\\n')\n"}, "1541": {"problem_id": 1541, "answer": "s = input()\nbalance = 0\nfor i in range(len(s)):\n    if s[i] == '^':\n        balance += 1\n    elif s[i] == '=':\n        balance -= 1\n    elif s[i] in '0123456789':\n        if balance > 0:\n            balance -= 1\n        else:\n            balance += 1\n    elif s[i] == '0':\n        if balance == 0:\n            balance += 1\n        else:\n            balance -= 1\n    elif s[i] == '-':\n        if balance == 0:\n            balance -= 1\n        else:\n            balance += 1\n    elif s[i] == '.':\n        if balance == 0:\n            balance += 1\n        else:\n            balance -= 1\n    elif s[i] == '^':\n        if balance == 0:\n            balance %= 10\n        else:\n            balance += 1\n    elif s[i] == '=':\n        if balance == 0:\n            balance %= 10\n        else:\n            balance -= 1\n    elif s[i] == '-':\n        if balance == 0:\n            balance %= 10\n        else:\n            balance -= 1\n    elif s[i] == '.':\n        if balance == 0:\n            balance %= 10\n        else:\n            balance += 1\nprint(\"left\" if balance else \"right\" if balance else \"balance\")"}, "1542": {"problem_id": 1542, "answer": "n = int(input())\nx = list(map(int,input().split()))\nq = int(input())\ns = [0]*n\nfor i in range(n):\n    s[i] = x[i]\nans = 0\nfor i in range(n):\n    ans += s[i]*m[i]\nprint(*ans)"}, "1543": {"problem_id": 1543, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\ncities = []\ndisputes = []\nb_cities = []\nfor i in range(n):\n    x, c = map(int, input().split())\n    cities.append(x)\n    disputes.append(c)\n\nb_cities.append(cities)\n\nfor i in range(n-1):\n    if b_cities[i] == cities[i+1]:\n        b_cities[i] = -1\n    elif b_cities[i] == abs(cities[i] - cities[i+1]):\n        b_cities[i] = -1\n    else:\n        b_cities[i] = abs(cities[i] - cities[i+1])\n\ndisputes.clear()\nb_cities.clear()\n\nans = 0\nbyteland = []\ndebarreland = []\n\nfor i in range(n):\n    if b_cities[i] == -1:\n        byteland.append(i)\n        debarreland.append(i)\n    elif b_cities[i] == 1:\n        byteland.append(i)\n        debarreland.append(i)\n    else:\n        ans += 1\n\nfor i in range(len(byteland)):\n    if byteland[i] not in debarreland:\n        byteland[i] = -1\n    else:\n        ans += 1\n\nfor i in range(len(debarreland)):\n    if debarreland[i] not in b_cities:\n        b_cities[debarreland[i]] = -1\n    else:\n        ans += 1\n\nprint(ans)"}, "1544": {"problem_id": 1544, "answer": "n=int(input())\nc=0\nfor i in range(1,n+1):\n    if i%2==0:\n        c+=1\nprint(c)"}, "1545": {"problem_id": 1545, "answer": "from sys import stdin,stdout\nmod=10**9+7\ninput=stdin.readline\ndef f(s,n):\n    n%=mod\n    if n<2:return 0\n    ans=1\n    for i in range(1,n):\n        ans*=s[i]\n        ans%=mod\n    return ans\nprint(f(input(),int(input())))\nprint(f(input(),int(input())))\nprint(f(input(),int(input())))\n"}, "1546": {"problem_id": 1546, "answer": "from collections import deque\nn = int(input())\na = []\nfor i in range(n):\n    a.append([int(i) for i in input().split()])\nd = deque()\nans = []\nfor i in range(n):\n    d.append([i,a[i]])\n    ans.append(a[i][1])\n    a[i][1] = 0\nvisited = set()\nwhile d:\n    now,curr = d.popleft()\n    visited.add(curr)\n    for nei in a[curr]:\n        if nei not in visited:\n            d.append([nei,curr])\nvisited.clear()\nd.extend(ans)\nprint(*ans)"}, "1547": {"problem_id": 1547, "answer": "import sys\ninput = sys.stdin.readline\nn,m,k=list(map(int,input().split()))\nc=0\na=[]\nfor i in range(n):\n    a.append(list(map(int,input().split())))\n    c+=1\nwhile(k):\n    t=list(map(int,input().split()))\n    if(t[0]==1):\n        print(' '.join(map(str,a)))\n    elif(t[0]==2):\n        print(' '.join(map(str,list(range(1,n+1)))))\n    else:\n        print(' '.join(map(str,list(range(1,m+1))))+' '*(c%2))\n    k-=1\n"}, "1548": {"problem_id": 1548, "answer": "from sys import stdin\ninput = stdin.readline\nprint = lambda x: stdout.write(x+\"\\n\")\n\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nm = max(a)\nans = 0\nfor i in range(1, m):\n    if a[i] < m:\n        ans = max(ans, m - a[i])\nprint(ans)"}, "1549": {"problem_id": 1549, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, m, q = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n\n    ans = [0]*q\n    ans[0] = a[0]\n    for i in range(1, n):\n        ans[i] = min(ans[i-1], a[i])\n\n    j = 0\n    for i in range(q):\n        k = int(input())\n        if k-1 >= ans[j]:\n            print(k-1)\n        else:\n            print(ans[j])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1550": {"problem_id": 1550, "answer": "n = int(input())\ns = list(map(int, input().split()))\ns.reverse()\nd = '0' * n\nfor i in range(n):\n    if s[i] == 9:\n        d = d + '0'\n    else:\n        d = d + '1'\nprint(d)"}, "1551": {"problem_id": 1551, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, s = list(map(int, readline().split()))\np = []\nfor i in range(n):\n    p.append(tuple(map(int, readline().split())))\n    \nans = 0\nr = 10**6+1\nfor i in range(n):\n    t = p[i]\n    ans = min(ans, max(0, t-r))\nprint(ans)"}, "1552": {"problem_id": 1552, "answer": "n = int(input())\nteams = [list(map(int, input().split())) for i in range(n)]\nans = 0\nfor i in range(n):\n    if teams[i][0] == 1:\n        ans += 1\n    elif teams[i][0] == 2:\n        ans += 2\n    elif teams[i][0] == 3:\n        ans += 3\nprint(ans)\n"}, "1553": {"problem_id": 1553, "answer": "n, h = map(int, input().split())\na = list(map(int, input().split()))\ns = 0\nfor i in range(1, h+1):\n    if a[i] > s:\n        s = a[i]\n    elif a[i] == s:\n        s += 1\nprint(s)"}, "1554": {"problem_id": 1554, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * (n + 1)\nc = [0] * (n + 1)\nfor i in range(1, n + 1):\n    b[i] = a[i - 1] + 1\n    c[i] = max(a[i - 1], a[i])\n\np = [0] * (n + 1)\nseg = [0] * (n + 1)\nfor i in range(n):\n    if b[i] == i:\n        seg[i] = i\n    else:\n        p[i] = i + 1\n\ndp = [0] * (n + 1)\ndp[0] = 1\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1] + p[i]\n    if dp[i] > n:\n        dp[i] = n\nprint(dp[n])\n"}, "1555": {"problem_id": 1555, "answer": "n, m = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[input()] = i\nans = []\nfor i in d:\n    ans.append(sum(d[i]))\nprint('Yes' if ans[0] <= n * m else 'No')\n"}, "1556": {"problem_id": 1556, "answer": "import sys\nread = sys.stdin.readline\nn, k, x = list(map(int, read().split()))\na = list(map(int, read().split()))\np = [0] * n\nfor i in range(n):\n    p[i] = a[i] - x\nans = []\nfor i in range(n):\n    ans.append(p[i])\n    p[i] = p[i] + x\nprint(' '.join(map(str, ans)))\n"}, "1557": {"problem_id": 1557, "answer": "h1,a1,c1 = list(map(int,input().split()))\nh2,a2,c2 = list(map(int,input().split()))\nd = {}\nfor i in range(1,100):\n    d[i] = i*a1\n    if h2-h1<0:\n        print(2)\n        print(STRIKE)\n    elif h2-h1==0:\n        print(STRIKE)\n    else:\n        print(STRIKE)\n        print(heal(h1,d[i]))\n"}, "1558": {"problem_id": 1558, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn,r,avg=map(int,input().split())\na=sorted(map(int,input().split()))\nprint(sum([x>avg for x in a]))"}, "1559": {"problem_id": 1559, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = int(readline())\n\nans = 10**100000\nfor i in range(1,10**100000):\n    if a >= i:\n        ans = i\n        break\n\nprint(ans)"}, "1560": {"problem_id": 1560, "answer": "n = int(input())\ns = input()\nc = 0\nfor i in range(n):\n    if s[i] == 'r':\n        c += 1\n    else:\n        c ^= 1\nprint(c)"}, "1561": {"problem_id": 1561, "answer": "import sys\ninput = sys.stdin.readline\nn,m,k=list(map(int,input().split()))\na=[[False]*n for i in range(m)]\nfor i in range(n):\n    a[i][i]=0\nans=0\nfor i in range(m):\n    ans+=sum(a[i].count('*')%2)\nprint(ans)\n"}, "1562": {"problem_id": 1562, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k, q = list(map(int, input().split()))\nr = [tuple(map(int, input().split())) for _ in range(k)]\nsafe = [tuple(map(int, input().split())) for _ in range(k)]\n\nq = 0\nans = 0\nfor i in range(k):\n    for j in range(m):\n        if i == j:\n            continue\n        ans += 1\n        r[i] -= 1\n        safe[i] = min(safe[i], r[i])\n        r[i] = min(r[i], safe[i])\n\nprint(ans)\n"}, "1563": {"problem_id": 1563, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nedges = []\nfor i in range(n):\n    edges.append((int(input()), i))\n\ncolors = dict()\nfor i in range(1, n + 1):\n    colors[i] = 0\n    for j in edges:\n        u, v = j[0], j[1]\n        if colors[u] < colors[v]:\n            colors[u] += 1\n        elif colors[v] < colors[u]:\n            colors[v] += 1\nprint(sum(colors.values()))\n"}, "1564": {"problem_id": 1564, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn = int(input())\ns = input()\nt = input()\nswap = 0\nfor i in range(n):\n    if s[i]!= t[i]:\n        swap += 1\nprint(swap)\n"}, "1565": {"problem_id": 1565, "answer": "import sys\nreadline = sys.stdin.readline\n\nINF = float('inf')\nMOD = 10**9 + 7\n\nn = int(readline())\ns = list(map(int, readline().split()))\ns.append(INF)\n\nans = 0\nfor i in range(1, len(s)):\n    ans += s[i]\n    if s[i] > 0:\n        ans += s[i] * 10\nprint(ans)"}, "1566": {"problem_id": 1566, "answer": "#!/usr/bin/env python3\n\ndef readint():\n    return int(input())\n\n\ndef readline():\n    return input().strip()\n\n\ndef solve():\n    n = readint()\n    l = list(readline())\n    l.sort()\n    print(\"Yes\" if sum(l[i] for i in range(n)) <= 4 else \"No\")\n\n\ndef __starting_point():\n    solve()\n__starting_point()"}, "1567": {"problem_id": 1567, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\nMOD = 998244353\n\nans = 0\nm = n\nfor i in range(1, k):\n    a = bin(m)[2:]\n    ans += (int(a[i]) * pow(2, k - i, MOD)) % MOD\n    m = max(m, int(a[i]))\nprint(ans)"}, "1568": {"problem_id": 1568, "answer": "import sys\nn, a, b, t = list(map(int, input().split()))\ns = input()\np = [0] * n\nfor i in range(n):\n    t = int(s[i])\n    p[i] = b * t\n    b %= a\n    a += b\nprint(max(p))\n"}, "1569": {"problem_id": 1569, "answer": "n, m = list(map(int, input().split()))\np = [list(map(int, input().split())) for i in range(m)]\ndef f(i):\n    nonlocal p\n    if i not in p:\n        p[i] = {0, 0}\n    elif p[i][0] == 1:\n        p[i][1] += 1\n    else:\n        p[i][1] *= -1\n    return p[i][1]\n\ng = f(0)\nprint(g)\nfor i in range(1, m):\n    x, y, z = list(map(int, input().split()))\n    g.add(f(i) - f(i - 1))\n    g.add(f(i - 1) - f(i))\n    print(g.pop())\n"}, "1570": {"problem_id": 1570, "answer": "k, n, w, nb = list(map(int, input().split()))\ns = k // (k + 2**(1+n))\nprint(s * nb)\n"}, "1571": {"problem_id": 1571, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 998244353\n\nS = input().rstrip()\nTA = input().rstrip()\n\nTA = [i for i in TA]\n\ns = len(S)\nt = len(TA)\n\nans = 0\n\nfor i in range(s):\n    ans += (TA[i] - i) * (TA[i] - t)\n    ans %= MOD\n\nprint(ans)"}, "1572": {"problem_id": 1572, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0]*(n+1)\nfor i in range(1, n+1):\n    if l[i] == 0:\n        l[i] = 1\n    else:\n        l[i] = l[i-1] + 1\nans = max(l)\nprint(ans)\n"}, "1573": {"problem_id": 1573, "answer": "from collections import deque\nn, d = list(map(int, input().split()))\nfriends = []\nfor i in range(n):\n    friends.append(list(map(int, input().split())))\nfriends.sort(key=lambda x: x[1], reverse=True)\npq = deque([0])\nvisited = set()\nwhile pq:\n    v = pq.popleft()\n    visited.add(v)\n    for i in friends[v]:\n        if i[1] > v[0]:\n            pq.append(i)\nmax_friend = friends[0][1]\nvisited.clear()\nvisited.add(friends[0][0])\nans = 0\nfor i in range(1, n):\n    if max_friend > friends[i][1]:\n        ans += friends[i][1]\n        max_friend = friends[i][1]\nprint(ans)\n"}, "1574": {"problem_id": 1574, "answer": "import sys\n\ndef main():\n    n, m = map(int, input().split())\n    dp = [[0] * n for _ in range(m)]\n    for i in range(m):\n        a, b = map(int, input().split())\n        dp[a].append(b)\n        dp[b].append(a)\n    print(min(sum(dp[a]) for a in dp[0]))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1575": {"problem_id": 1575, "answer": "import bisect\nt = int(input())\nn = int(input())\nvisitors = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    ans = bisect.bisect_left(visitors, min(visitors[i], i + 1))\n    print(ans)"}, "1576": {"problem_id": 1576, "answer": "s = input()\nfor i in range(len(s)):\n    s = s.replace(' ', '')\n    s = s.lower()\n    print(s)"}, "1577": {"problem_id": 1577, "answer": "n = int(input())\ns = input()\na = 0\nb = 0\nfor i in range(n):\n    if s[i] == 'A':\n        a += 1\n    else:\n        b += 1\nif a > b:\n    print(\"Anton\")\nelse:\n    print(\"Danik\")"}, "1578": {"problem_id": 1578, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nans = 1\nfor i in range(1, N+1):\n  ans = ans * i\n  ans %= 2\n  if ans > 1:\n   ans = 2"}, "1579": {"problem_id": 1579, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nX = [list(map(int, input().split())) for _ in range(N)]\nans = 0\nfor i in range(N):\n    x, y = X[i]\n    if x not in X[i+1:]:\n        ans = max(ans, i+1)\n    elif y not in X[i+1:]:\n        ans = max(ans, i+1)\nprint(ans)"}, "1580": {"problem_id": 1580, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nX = [list(map(int, input().split())) for _ in range(N)]\nY = [list(map(int, input().split())) for _ in range(N)]\nZ = [0] * N\nfor i in range(N):\n    Z[i] = sum(1 for _ in range(i+1))\n\ns = sorted(list(zip(X, Y, Z)))\nans = 0\nfor i in range(N):\n    if s[i][0] == s[i+1][0]:\n        ans += 1\nprint(ans)"}, "1581": {"problem_id": 1581, "answer": "from sys import stdin\ninput = stdin.readline\nN, K = map(int, input().split())\nres = 0\nfor i in range(K):\n    res += (pow(2, K - i, 10**9+7) % 1000000007)\nprint(res)"}, "1582": {"problem_id": 1582, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nmod = 10**9+7\n\ndef I(): return int(input())\ndef F(): return float(input())\ndef LS(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LI_(): return list(map(int, input().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [F() for i in range(n)]\ndef SR(n): return [LS() for i in range(n)]\ndef LSR(n): return [LS_() for i in range(n)]\ndef SRN(n): return [LIR(n) for i in range(n)]\ndef LSN(n): return [LIR(n) for i in range(n)]\n\nN = I()\nprint(N//2)"}, "1583": {"problem_id": 1583, "answer": "from numpy import sign\na,b,x=list(map(int,input().split()))\nc=sign(a**2-b**2)\nprint(float(c))\n"}, "1584": {"problem_id": 1584, "answer": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\nn = I()\nL = LI()\nprint((sorted(L, reverse=True)))\n"}, "1585": {"problem_id": 1585, "answer": "from collections import deque\ndef f(x):\n    n=len(x)\n    if n%2==0:\n        x.sort()\n        return x[n//2]\n    else:\n        x.sort()\n        y=x[n//2]\n        y=max(y,x[n//2]+1)\n        return y\nx,y=list(map(int,input().split()))\nl=f(x)\nl.sort()\nprint(l.__getitem__(0))"}, "1586": {"problem_id": 1586, "answer": "import sys\ninput = sys.stdin.readline\n\ndef calc(n):\n    r = 0\n    while n>0:\n        r += n%10\n        n //= 10\n    return r\n\nN = int(input())\nans = 0\nfor i in range(1,10**6+1):\n    ans += calc(i)\nprint(ans)"}, "1587": {"problem_id": 1587, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nc = list(map(int, input().split()))\nd = [0]*N\nfor i in range(N):\n    if c[i] == 'R':\n        d[i] = 1\n    elif c[i] == 'W':\n        d[i] = 2\n\nans = 0\nfor i in range(N):\n    if d[i] == 2:\n        ans += 1\nprint(ans)"}, "1588": {"problem_id": 1588, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\na = list(map(int,read().split()))\ns = a[0]\nd = {}\nfor i in range(1,s+1):\n    d[i] = d.get(i-1,0) + i\nans = [0]*s\nfor i in range(s):\n    ans[i] = d[i]\nprint(ans[-1])\nfor i in ans:\n    print(i,end=\" \")\nprint()"}, "1589": {"problem_id": 1589, "answer": "import sys\nread = sys.stdin.readline\nn, m = list(map(int, read().split()))\nflats = [[] for i in range(n)]\nfor i in range(m):\n    s = read().split()\n    floors[int(s[1])-1].append(int(s[0]))\nprint(sum(1 for x in floors if x[0] == 2*m))"}, "1590": {"problem_id": 1590, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nm = 10**9+7\nans = 0\nfor i in range(1, n):\n    ans += a[i]*(m-len(a))*i\n    m = len(a)\nprint(ans % m)"}, "1591": {"problem_id": 1591, "answer": "import sys\ninput = sys.stdin.readline\n\ndef get_ints(): return map(int, input().split())\n\ndef get_ints_lst(): return list(map(int, input().split()))\n\ndef main():\n    n, k = get_ints()\n    d = [0]*(k+1)\n    d[0] = 1\n    for i in range(1, k+1):\n        d[i] = d[i-1] + 1\n    print(min(k, n//2) + sum(d.values()))\n\nmain()\n"}, "1592": {"problem_id": 1592, "answer": "n = int(input())\ntasks = []\nfor i in range(n):\n    t, c = map(int, input().split())\n    tasks.append((t, c))\nprint(max(tasks), end=' ')"}, "1593": {"problem_id": 1593, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, s = list(map(int, readline().split()))\nl = [tuple(map(int, readline().split())) for _ in range(n)]\nr = 10**6\nfor i in range(1, n):\n    r = min(r, l[i][0] - l[i][1])\n    for j in range(i):\n        if l[i][0] - l[j][0] <= r:\n            r = l[i][0] - l[j][0]\n            break\nprint(r)"}, "1594": {"problem_id": 1594, "answer": "import sys\nreadline = sys.stdin.readline\nn, m = list(map(int, readline().split()))\nc = [0] * n\nfor i in range(n):\n    c[i] = list(map(int, readline().split()))\nd = {}\nfor i in range(n):\n    d[c[i]].append(i)\nans = [0] * n\nv = list(map(int, readline().split()))\nfor i in range(n):\n    v[d[c[i]] - 1] //= 2\n    ans[d[c[i]] - 1] += 1\nprint(*ans)\n"}, "1595": {"problem_id": 1595, "answer": "import sys\nreadline = sys.stdin.readline\n\nS = [0] * (10**5+3)\nlim = int(readline()) + 1\nfor i in range(int(lim)):\n    S[i] = int(readline())\nprint(len(S))\nfor i in range(len(S)):\n    print(S[i], end=\" \")"}, "1596": {"problem_id": 1596, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\nalp = [0]*26\nfor i in range(1,len(input())):\n    s = input()\n    print(alp[len(s)-1] + 1)\n"}, "1597": {"problem_id": 1597, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = [list(map(int, input().split())) for i in range(n)]\ns.sort(reverse=True)\nprefixes = [0] * 26\nfor i in range(n):\n    prefixes[s[i][1]] = s[i][0]\n    \nres = []\nfor i in range(26):\n    if prefixes[i] == 0:\n        res.append(i)\nprint(' '.join(map(str, res)))"}, "1598": {"problem_id": 1598, "answer": "s = input()\nn = len(s)\nif n == 1:\n    print(s)\nelse:\n    i = 0\n    j = n-1\n    ans = []\n    while i < j:\n        if s[i] == '1':\n            ans.append(i)\n            i += 1\n        elif s[i] == '0':\n            j -= 1\n        else:\n            i += 1\n    print(*ans, sep='\\n')"}, "1599": {"problem_id": 1599, "answer": "s = input()\nm = int(input())\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n    print(s[l - 1] if l - 1 < r else 0)\n    s[r - 1] = 1"}, "1600": {"problem_id": 1600, "answer": "n = int(input())\na = sorted(map(int, input().split()), reverse=True)\nprint(max(a[i - 1] - a[i] + 1 for i in range(n) if a[i] <= a[i] + 2))"}, "1601": {"problem_id": 1601, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\npoints = [[] for i in range(n)]\nfor i in range(n):\n    x, y, z = map(int, input().split())\n    points[x].append(y)\n    points[y].append(z)\n    points[z].append(x)\n\nans = []\nfor i in range(1, n//2 + 1):\n    a, b = points[i]\n    ans.append((a, i))\n    ans.append((b, i))\n\nprint(' '.join(map(str, ans)))"}, "1602": {"problem_id": 1602, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nd = {x | y for x, y in zip(a, a[1:])}\nans = [0]*n\nans[0] = a[0]\nfor i in range(1, n):\n    ans[i] = max(ans[i-1], a[i])\nprint(*ans)"}, "1603": {"problem_id": 1603, "answer": "import sys\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\ndef input(): return sys.stdin.readline().strip()\nn = int(input())\na = get_array()\nl = a.index(0)\nr = a.index(n-1)\nprint(l+r)\n"}, "1604": {"problem_id": 1604, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nL = [0] * (n + 1)\nR = [0] * (n + 1)\nMOD = 998244353\n\nfor i in range(1, n + 1):\n    L[i] = i\n    R[i] = i\n\nans = 1\nfor i in range(1, n + 1):\n    ans *= L[i]\n    ans %= MOD\n    ans *= R[i]\n    ans %= MOD\n\nprint(ans)\n"}, "1605": {"problem_id": 1605, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [0]*(n+1)\nfor i in range(1, n+1):\n    a[i] = a[i-1] + 1\n\nprint(2*(n//2) + sum(a[n//2:n//2+i] for i in range(1, n//2+1)))"}, "1606": {"problem_id": 1606, "answer": "import sys\ndef read_int(): return int(sys.stdin.readline())\ndef read_ints(): return list(map(int,sys.stdin.readline().split()))\nn = read_int()\nmat = [[0 for i in range(n)] for i in range(n)]\nfor i in range(n):\n    mat[0][i] = 1\nfor i in range(1,n):\n    for j in range(n):\n        mat[i][j] = mat[i-1][j]\nfor _ in range(int(read_int())):\n    query = read_ints()\n    m = query[3]\n    mat[m][m] ^= 1\nfor i in range(n):\n    for j in range(n):\n        print(mat[i][j],end ='')"}, "1607": {"problem_id": 1607, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 998244353\nn, k = map(int, input().split())\ncomp = [set() for _ in range(n + 1)]\nfor i in range(1, n + 1):\n    comp[i].add(i)\nfor i in range(len(comp)):\n    for j in range(i + 1, min(n, i + k + 1)):\n        comp[j].add(comp[j].intersection_update(comp[j - 1]))\nprint(comp[0].count(True) % MOD)"}, "1608": {"problem_id": 1608, "answer": "n = int(input())\na = list(map(int, input().split()))\np = 10**9+7\nm = a[0]\nfor i in range(1, n):\n    m = (m * a[i]) % p\n    p = (p * a[i]) % p\nprint(m)"}, "1609": {"problem_id": 1609, "answer": "n = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(' '.join(a))"}, "1610": {"problem_id": 1610, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\n\nd = [0] * (n + 1)\nfor i in range(1, n + 1):\n    d[i] = d[i - 1] + (k - d[i - 1])\n\nprint(*[1] * n, d[n:])"}, "1611": {"problem_id": 1611, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nl = list(map(int, input().split()))\nans = 9999999999999999\nfor i in range(1, n):\n    if l[i]!= l[i - 1]:\n        ans = min(ans, i + 1)\nprint(ans)"}, "1612": {"problem_id": 1612, "answer": "n = int(input())\nans = ['NO', 'YES'][n]\nfor i in range(n):\n    m = int(input())\n    a = list(map(int, input().split()))\n    ans.append('NO') if m not in a else ans.append('YES')\nprint('\\n'.join(ans))"}, "1613": {"problem_id": 1613, "answer": ""}, "1614": {"problem_id": 1614, "answer": "def main():\n    n, h = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        if a[i] > h:\n            ans = i\n        elif a[i] - h > h:\n            ans = i\n    print(ans)\nmain()\n"}, "1615": {"problem_id": 1615, "answer": "import sys\ninput = sys.stdin.readline\nINF = 10**18+1\n\nn, k = map(int, input().split())\nL = [0]*(n+1)\nR = [0]*(n+1)\nfor i in range(1, n+1):\n    L[i] = min(L[i-1], i)\n    R[i] = max(R[i-1], i)\n\nans = INF\nfor i in range(2, n+1):\n    ans = min(ans, L[i] + R[i-1])\nprint(ans)"}, "1616": {"problem_id": 1616, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in range(1, n):\n    if a[i] not in s:\n        s.add(a[i])\n        for j in range(i):\n            a[j] *= i\nprint(-1)\n"}, "1617": {"problem_id": 1617, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = [0]*n\nf = [0]*n\nfor i in range(n):\n    f[i] = int(input())\n    ans[i] = f[i]\n\nprint(*ans, sep='\\n')\n"}, "1618": {"problem_id": 1618, "answer": "from sys import stdin,stderr\nn=int(stdin.readline())\na=[int(i) for i in stdin.readline().split()]\nw=[1]*n\nh=[1]*n\nfor i in range(n):\n    w.append(w[i])\n    h.append(h[i])\ns=list(map(int,stdin.readline().split()))\nd=[[a[i],i] for i in range(n)]\nfor i in range(n):\n    for j in range(w[i]+1):\n        d[i][j]=h[j]-h[i]\nprint(*s)"}, "1619": {"problem_id": 1619, "answer": "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nxy=[tuple(map(int,input().split())) for _ in range(n)]\nxy.sort()\nm=int(input())\nfor _ in range(m):\n    x,y,z=map(int,input().split())\n    if xy[0]==xy[-1]:\n        print('YES')\n    else:\n        print('NO')"}, "1620": {"problem_id": 1620, "answer": "n = int(input())\ns = \"\"\nfor i in range(1, n):\n    if i % 2 == 0:\n        s += chr(ord('a') + i)\n    else:\n        s += chr(ord('b') + i)\n        s += chr(ord('c') + i)\nprint(s)"}, "1621": {"problem_id": 1621, "answer": "s = input()\nk = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in a:\n    ans += i*k\nprint(ans)"}, "1622": {"problem_id": 1622, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\njobs = [0] + list(map(int, input().split())) + [0]\n\nfor i in range(m):\n    jobs[i+1] = int(input())\n\nqueries = [0]*n\nfor i in range(n):\n    queries[i] = jobs[i]\n\nanswers = []\nfor query in queries:\n    if query == 1:\n        answers.append('YES')\n    elif query == 2:\n        answers.append('NO')\n    else:\n        answers.append('YES')\n        answers[query-2].append('NO')\n\nprint('\\n'.join(answers))"}, "1623": {"problem_id": 1623, "answer": "import sys\ninput = sys.stdin.readline\n\nn, l, r = map(int, input().split())\nans = [0] * n\nm = max(l, r)\nfor i in range(1, n):\n    ans[i] = ans[i-1] + (m >> i)\n    m = max(m, i & 1)\n\nprint(' '.join(map(str, ans)))"}, "1624": {"problem_id": 1624, "answer": "from collections import defaultdict as dd\nimport sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nd = dd(int)\nans = 0\nfor i in range(n):\n    ans += d[a[i]] * (d[a[i]] - 1) // 2\nprint(ans)"}, "1625": {"problem_id": 1625, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nans = [0] * (n + 1)\nans[0] = a[0]\nfor i in range(1, n + 1):\n    ans[i] = max(ans[i - 1], a[i])\n    for j in range(i - 2, -1, -1):\n        ans[i] = max(ans[i], ans[i - 1] + a[j])\nprint(ans[n])"}, "1626": {"problem_id": 1626, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\np = 10 ** 9 + 7\nans = 0\nfor i in range(1, k):\n    ans += pow(a[i] - 1, p, p) - pow(b[i] - 1, p, p)\nprint(ans % p)"}, "1627": {"problem_id": 1627, "answer": "n = int(input())\na = list(map(int, input().split()))\na.sort()\nl = []\nr = []\nfor i in range(n):\n    l.append(a[i])\n    r.append(a[i] + 1)\nprint(' '.join(str(i) for i in range(n)))\nfor i in range(20):\n    if l[i]!= r[i]:\n        print(l[i], r[i])"}, "1628": {"problem_id": 1628, "answer": "s = input()\nn = len(s)\na = []\nfor i in range(n):\n    if s[i] == \"x\":\n        a.append(s[i:i+2])\n    else:\n        a.append(s[i:i+2])\nb = []\nfor i in range(n):\n    if s[i] == \"x\":\n        b.append(s[i:i+2])\n    else:\n        b.append(s[i:i+2])\nc = []\nfor i in range(n):\n    if s[i] == \"x\":\n        c.append(s[i:i+2])\n    else:\n        c.append(s[i:i+2])\nd = []\nfor i in range(n):\n    if s[i] == \"x\":\n        d.append(s[i:i+2])\n    else:\n        d.append(s[i:i+2])\ne = []\nfor i in range(n):\n    if s[i] == \"x\":\n        e.append(s[i:i+2])\n    else:\n        e.append(s[i:i+2])\nf = []\nfor i in range(n):\n    if s[i] == \"x\":\n        f.append(s[i:i+2])\n    else:\n        f.append(s[i:i+2])\nfor i in range(n):\n    if s[i] == \"x\":\n        for j in range(i,n):\n            if s[j] == \"x\":\n                s = s[:j] + s[j+2:]\n                break\n    else:\n        for j in range(i,n):\n            if s[j] == \"x\":\n                s = s[:j] + s[j+2:]\n                break\nprint(\"\".join(s))"}, "1629": {"problem_id": 1629, "answer": "from sys import stdin\ninput = stdin.readline\n\ndef get_balls(n, box):\n    balls = 0\n    for i in range(n):\n        if i == box:\n            continue\n        balls += get_balls(i + 1, box)\n    return balls\n\ndef get_balls_ind(n, box):\n    balls = get_balls(n, box)\n    return balls\n\nprint(*get_balls(3, 2), sep=' ')\nprint(*get_balls_ind(3, 2), sep=' ')\n"}, "1630": {"problem_id": 1630, "answer": "n = int(input())\nd = dict()\nfor i in range(n):\n    s, s1 = input().split()\n    d[s] = s1\nprint(\"YES\")\nfor i in d:\n    print(i, end=\" \")"}, "1631": {"problem_id": 1631, "answer": "n=int(input())\ns=[]\nfor i in range(n):\n    s.append(input())\ns.sort()\nd={}\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]]=1\n    else:\n        d[s[i]]+=1\nans=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\nfor i in range(n):\n    if d[s[i]]!=0:\n        ans.append(s[i])\nprint(''.join(ans))"}, "1632": {"problem_id": 1632, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nns = lambda: list(map(int, readline().split()))\nna = lambda: list(map(int, readline().split()))[1:]\nnl = lambda: ''.join(l)\nprn = lambda x: 1.0 / (x + 1.0)\nns()\nna()\nnl()\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\nn, a, b = ns()\nprint(gcd(a, b))"}, "1633": {"problem_id": 1633, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\ndp = [[0] * m for _ in range(n)]\nfor i in range(k):\n    a, b = list(map(int, input().split()))\n    dp[a - 1][b - 1] += 1\n    dp[a - 1][b] -= 1\n    dp[a][b] += dp[a - 1][b - 1]\n\nans = 0\nmove = []\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if dp[i - 1][j - 1] == 0:\n            ans += dp[i].count(j)\n            move.append((i, j))\n        elif dp[i - 1][j - 1] > 0:\n            dp[i][j] = dp[i - 1][j - 1] + dp[i][j - 1]\n            ans += dp[i].count(j)\n            move.append((i, j))\nprint(ans)\n"}, "1634": {"problem_id": 1634, "answer": "import sys\nread = sys.stdin.readline\nc1,c2,c3,c4 = list(map(int,read().split()))\nn,m = list(map(int,read().split()))\na = list(map(int,read().split()))\nb = list(map(int,read().split()))\nans = 0\nfor i in range(n):\n    ans += c1*a[i]\nfor i in range(m):\n    ans += c2*b[i]\nprint(ans)"}, "1635": {"problem_id": 1635, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    cnt += a[i] > a[i+1]\n    if cnt == 1:\n        break\nprint(i)"}, "1636": {"problem_id": 1636, "answer": "from sys import stdin\ninput = stdin.readline\n\nn = int(input())\npoints = []\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    points.append((y, x))\npoints.sort()\nsx, sy = points.pop()\nmx, mn = points.pop()\nmx -= 1\nmn -= 1\nfor i in range(1, n + 1):\n    if mx < sy:\n        mx = sy\n    elif mx > sy:\n        sy = mx\n    else:\n        sy *= -1\n        mx *= -1\nprint('YES' if sy == mx else 'NO')\n"}, "1637": {"problem_id": 1637, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\npairs = []\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    pairs.append((x, y))\n\ndef solve(x, y):\n    d = 10**18\n    s = 0\n    for i in range(n):\n        if pairs[i][0] > x:\n            s += y\n        elif pairs[i][0] < y:\n            s -= x\n        else:\n            d *= -1\n    return s\n\nprint(*solve(x, y), sep='\\n')\n"}, "1638": {"problem_id": 1638, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = [0]*n\nans[0] = a[0]\nfor i in range(1, n):\n    ans[i] = max(ans[i-1], a[i])\n    for j in range(i+1, n):\n        ans[j] = max(ans[j-1], a[j])\nprint(' '.join(str(i) for i in ans))"}, "1639": {"problem_id": 1639, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] < a[i+1]:\n        s = max(s, i+1-i)\nprint(s)"}, "1640": {"problem_id": 1640, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        s += a[j] - a[i]\nprint(s)"}, "1641": {"problem_id": 1641, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k, s, t = list(map(int, input().split()))\nc = [0]*10\nv = [0]*10\nans = [10**9 for i in range(t+1)]\ng = list(map(int, input().split()))\nans[0] = k\nfor i in range(n):\n    c[g[i]-1] += v[g[i]-1]\n    v[g[i]-1] *= 2\n    ans[i+1] = min(ans[i], ans[g[i]-1]*2)\nprint(ans[t])\n"}, "1642": {"problem_id": 1642, "answer": "n = int(input())\na = [tuple(map(int, input().split())) for _ in range(n)]\na.sort()\nb = a[n - 1]\nc = a[:n - 1][::-1]\nd = min(b, c)\nprint(d)"}, "1643": {"problem_id": 1643, "answer": "import sys\ninput = sys.stdin.readline\n\ns = input().rstrip()\nn = len(s)\n\nif n == 1:\n    print(s)\nelse:\n    dp = [[0] * (n + 1) for i in range(n + 1)]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if s[i] == s[j]:\n                dp[i][j] = dp[i - 1][j - 1] + 1\n            else:\n                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])\n    print(*dp[n - 1])"}, "1644": {"problem_id": 1644, "answer": "def main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    print(max(a) + max(b))\n\nmain()"}, "1645": {"problem_id": 1645, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\ncnt = 0\nans = 0\nfor i in range(1, n):\n    if a[i] < 0:\n        cnt += 1\n    elif a[i] > 0:\n        ans += cnt\nprint(ans)"}, "1646": {"problem_id": 1646, "answer": "n = int(input())\ns = input()\na = []\nb = []\nfor i in range(n):\n    if s[i] == '0':\n        a.append(i)\n    else:\n        b.append(i)\nans = 0\nfor i in range(len(s)):\n    if s[i] == '1':\n        ans += 1\n        a.append(i)\nprint(ans)"}, "1647": {"problem_id": 1647, "answer": "from collections import deque\nn = int(input())\ns = input()\np = input()\np = list(p)\nc = 0\nfor i in range(97,123):\n    if s[i]!=p[i]:\n        c += 1\nprint(c//2)"}, "1648": {"problem_id": 1648, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\n\nN, K = map(int, input().split())\nfac = [1]*N\nfac[0] = fac[1] = fac[2] = fac[3] = 0\nfor i in range(4, N):\n    fac[i] = fac[i-1] + fac[i-2]\n\ndp = [[0]*(K+1) for _ in range(N+1)]\ndp[0][0] = 1\nfor i in range(1, N+1):\n    for j in range(K+1):\n        dp[i][j] = dp[i-1][j]\n        if j & 1:\n            dp[i][j] += dp[i-1][j-1]\n        elif j:\n            dp[i][j] += dp[i-1][j-1]\n        else:\n            dp[i][j] *= fac[i-1]\n            dp[i][j] %= MOD\n\nprint(*dp[N], sep='\\n')"}, "1649": {"problem_id": 1649, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nread = lambda: int(input())\na = read()\ns = sum(a)\nif s == s[::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")"}, "1650": {"problem_id": 1650, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nL = int(input())\nmod = 10**9 + 7\nn = 2**64\ndef power(x, y):\n    res = 1\n    while y:\n        res *= x%y\n        x /= y\n    return res\nfor i in range(1, n+1):\n    a, b = power(i, 2), power(i, 4)\n    print((a+b)%mod)"}, "1651": {"problem_id": 1651, "answer": "s,p = map(int, input().split())\nif s==p:\n print('Yes')\nelse:\n print('No')"}, "1652": {"problem_id": 1652, "answer": "S = input()\nt = list(S)\na = 0\nfor i in range(len(t)):\n    if t[i] == \"e\":\n        a += 1\n    elif t[i] == \"d\":\n        a -= 1\n    else:\n        print(\"NO\")\n        break"}, "1653": {"problem_id": 1653, "answer": "import sys\ninput = sys.stdin.readline\nS = input().strip()\nT = input().strip().lower()\nN = int(input())\nM = [0] * N\nfor i in range(N):\n    M[i] = M[i] + 1\n    if S[i] == \"A\":\n        M[i] %= 2\n    elif S[i] == \"B\":\n        M[i] %= 3\n    elif S[i] == \"C\":\n        M[i] %= 4\nq = int(input())\nfor _ in range(q):\n    a, b, c, d = list(map(int, input().split()))\n    if abs(M[a - 1] - M[b - 1]) > 1:\n        print(\"0\")\n        continue\n    ans = 0\n    for i in range(min(a, b)):\n        if T[i] == \"A\":\n            if c & 1:\n                ans |= 1 << (M[i] - 1)\n            else:\n                ans |= 1 << (M[i] - 2)\n        elif T[i] == \"B\":\n            if c & 1:\n                ans |= 1 << (M[i] - 3)\n            else:\n                ans |= 1 << (M[i] - 4)\n        elif T[i] == \"C\":\n            if c & 1:\n                ans |= 1 << (M[i] - 5)\n            else:\n                ans |= 1 << (M[i] - 6)\n        else:\n            if c & 1:\n                ans |= 1 << (M[i] - 7)\n            else:\n                ans |= 1 << (M[i] - 8)\n        if ans & 1 << (M[a - 1] - 1)!= 0:\n            print(\"1\", \"0\", \"0\", \"\".join(map(str, \"1\")))\n        else:\n            print(\"0\", \"1\", \"0\", \"\".join(map(str, \"1\")))\n"}, "1654": {"problem_id": 1654, "answer": "s = input()\nt = input()\ns = list(s)\nt = list(t)\ncnt = 0\nfor i in range(len(s)):\n    if s[i] == '?':\n        cnt += 1\n        s[i] = 'z'\n        t[i] = 'a'\nprint(''.join(sorted(t)))"}, "1655": {"problem_id": 1655, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * (n + 1)\nfor i in range(1, n + 1):\n    b[i] = b[i - 1] + a[i - 1]\nprint(sum(b))"}, "1656": {"problem_id": 1656, "answer": "s = input()\na = list(s)\na.sort()\nprint(a.count('w'))"}, "1657": {"problem_id": 1657, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn, p = list(map(int, input().split()))\na = [0] + list(map(int, input().split()))\nb = [0] * 100000\nfor i in range(n):\n    a[i] += 1\n    b[a[i]] += 1\nans = 0\nfor i in range(1, 100000):\n    ans += pow(i, p) * a[i]\n    if b[i] == 0:\n        ans -= 1\nprint(ans)\n"}, "1658": {"problem_id": 1658, "answer": "import sys\ninput=sys.stdin.readline\nn,x=list(map(int,input().split()))\nd=list(map(int,input().split()))\ndp=[[0]*(x+1) for i in range(n+1)]\ndp[0][0]=1\nfor i in range(1,n+1):\n    for j in range(i+1):\n        dp[i][j]+=dp[i-1][j]\n        dp[i][j]%=(10**9+7)\nprint(dp[max(x,0)][0])"}, "1659": {"problem_id": 1659, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, x = list(map(int, readline().split()))\ncnt = [0]*(n+1)\ndel cnt[0]\nfor i in range(n):\n    a = list(map(int, readline().split()))\n    cnt[a[2]-1] += 1\nprint(cnt[0], cnt[1])"}, "1660": {"problem_id": 1660, "answer": "from collections import deque\nn,m=list(map(int,input().split()))\nedges=[]\nfor i in range(m):\n    u,v,w=list(map(int,input().split()))\n    edges.append([u,v,w])\n\nvisited=[0]*n\nans=[0]*n\ndef dfs(u,v,p):\n    visited[u]=(v,p)\n    visited[v]=p\n    ans[v]+=1\n    dfs(u,v,p+1)\ndfs(0,0,0)\nprint(ans[0])\n"}, "1661": {"problem_id": 1661, "answer": "n, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] > b[i]:\n        ans += n\nprint(ans)"}, "1662": {"problem_id": 1662, "answer": "m = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(m):\n    if a[i] < a[i + 1]:\n        s += 1\nprint(s)\n"}, "1663": {"problem_id": 1663, "answer": "n = int(input())\nprint(sum(n // 10 ** i * 10 ** i % (10 ** 9 + 7) for i in range(1, len(str(n)) + 1) if str(n)[i]!= '0'))"}, "1664": {"problem_id": 1664, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\n\nans = []\n\nfor _ in range(n):\n    op, arg = list(map(int, readline().split()))\n    if op == 0:\n        ans.append(\"%s=%s\" % (arg, readline()))\n    elif op == 1:\n        ans.append(\"%s=%s&%s\" % (arg, readline()))\n    elif op == 2:\n        ans.append(\"%s=%s^%s\" % (arg, readline()))\n    elif op == 3:\n        ans.append(\"%s=%s#%s\" % (arg, readline()))\n    else:\n        ans.append(\"%s=%s&%s=%s\" % (arg, readline()))\n\nprint(len(ans))\n"}, "1665": {"problem_id": 1665, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nans = [0]*n\nd = defaultdict(lambda : 10**10)\nfor i in range(n-1):\n    u, v = map(int, input().split())\n    d[u].append(v)\n    d[v].append(u)\n    ans[u] = min(ans[u], d[u][0] + d[v][0])\n    ans[v] = min(ans[v], d[u][0] + d[v][1])\nprint(*ans, sep='\\n')"}, "1666": {"problem_id": 1666, "answer": "import sys\ninput = sys.stdin.readline\n\nx, y, a, b = list(map(int, input().split()))\np = [0] * (y + 1)\nq = [0] * (x + 1)\nfor i in range(1, a + 1):\n    p[i] = p[i - 1] + 1\nfor i in range(1, b + 1):\n    q[i] = q[i - 1] + 1\n\nans = 0\nfor i in range(x + 1):\n    ans = max(ans, p[i] + q[i])\nprint(ans)\nfor i in range(y + 1):\n    print(p[i], q[i])\n"}, "1667": {"problem_id": 1667, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\n\ndef f(k):\n    d = 1\n    for i in range(1, n):\n        if a[i] <= k:\n            d += 1\n        else:\n            d += k\n    return d\n\nans = 0\nfor i in range(1, n + 1):\n    if f(i):\n        ans += 1\nprint(ans)"}, "1668": {"problem_id": 1668, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    P=list(map(int,input().split()))\n    P.sort()\n    ans=\"\".join(map(str,P[:4]))\n    print(ans)"}, "1669": {"problem_id": 1669, "answer": ""}, "1670": {"problem_id": 1670, "answer": "import sys\nread = sys.stdin.readline\n\ndef main():\n    t = int(read())\n    h = list(map(int, read().split()))\n    a = list(map(int, read().split()))\n    h.sort()\n    y = 0\n    for i in range(t):\n        y += h[i]\n        if h[i] == 'r':\n            a[i] = 'r'\n        elif h[i] == 'h':\n            a[i] = 'h'\n        else:\n            a[i] = 'a'\n    print(' '.join(map(str, a)))\n\nmain()\n"}, "1671": {"problem_id": 1671, "answer": "n = int(input())\nm = list(map(int, input().split()))\ns = 0\na = 10**10\nb = 10**10\nfor i in m:\n    s += i\n    a = min(a, i)\n    b = max(b, i)\nprint(s - a)"}, "1672": {"problem_id": 1672, "answer": "n = int(input())\nres = 0\nm = []\nfor i in range(n):\n    m.append(input())\nfor i in m:\n    if i[0] == '+':\n        res += 1\n    elif i[0] == '-':\n        res -= 1\nprint(res)"}, "1673": {"problem_id": 1673, "answer": "n,k = map(int,input().split())\na = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n    s+=a[i]\n    t = i-k\n    while(t>=0):\n        s%=10**9+7\n        t-=1\n    s+=a[i]\nprint(s)"}, "1674": {"problem_id": 1674, "answer": "from collections import deque\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = input()\nd = {key: 0 for key in \"aeiou\"}\nfor i in range(n):\n    d[a[i]] += 1\nans = 0\nq = deque([k])\nwhile q:\n    now = q.popleft()\n    if now < k:\n        ans += sum(a[now:])\n        continue\n    else:\n        ans += a[now]\n        q.append(now + 1)\nprint(ans)\n"}, "1675": {"problem_id": 1675, "answer": "n = int(input())\nt = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    t.append(x)\n    t.append(y)\nans = 0\nfor i in range(n):\n    if t[i]!= t[i+1]:\n        ans += 2*t[i] - t[i+1]\nprint(ans)"}, "1676": {"problem_id": 1676, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+9\nns = lambda: list(map(int, readline().split()))\nni = lambda: int(readline())\nnl = lambda: list(map(int, readline().split()))\nnl2 = lambda: list(map(int, readline().split()))\n\nn, b = ni()\nt, d = ns()\nQuery = [t-1]*b\nQueue = [t]\nfor _ in range(b):\n    t, d = ns()\n    Queue.append(t)\n    Query.append(d-t)\n\nq = []\nfor i in range(n):\n    t, d = ni()\n    if Query[i]<t:\n        print(-1)\n        continue\n    q.append((Query[i], i+1))\n\nres = [-1]*n\ncur = 0\nfor i in range(len(q)):\n    if q[i][0]==Query[i][0]:\n        cur = i+1\n        res[cur] = '-1'\n    elif q[i][0]>Query[i][0]:\n        cur = q[i][1]\n        res[cur] = '-1'\n    else:\n        print(-1)\n"}, "1677": {"problem_id": 1677, "answer": "n = int(input())\nb = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(1, n + 1):\n    s[i] = b[i - 1] - 1 + (-1)**i + 1\n    if s[i] == i:\n        s[i] = i\nprint(len(s))"}, "1678": {"problem_id": 1678, "answer": "import sys\nimport heapq as hq\ninput = sys.stdin.readline\nn, t = map(int, input().split())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    cnt += (a[i] - t) // (i + 1)\nprint(cnt)"}, "1679": {"problem_id": 1679, "answer": "n = int(input())\ns = input()\na = 0\nfor i in range(0, n):\n    a += 1\n    if s[i] == '1':\n        s[i] = '0'\nprint(a)"}, "1680": {"problem_id": 1680, "answer": "import sys\nreadline = sys.stdin.readline\nn, k = map(int, readline().split())\na = list(map(int, readline().split()))\ncnt = 0\nfor i in range(n):\n    if i < n-k+1:\n        cnt += 1\nprint(cnt)"}, "1681": {"problem_id": 1681, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nm = int(input())\n\nans = 0\nfor i in range(1, n+1):\n    if i % 2!= 0:\n        ans += m*i\n    else:\n        ans += m*(i-1)\n\nprint(ans)\n"}, "1682": {"problem_id": 1682, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nres = 0\nfor i in range(n):\n    if i < k:\n        res += a[i]\n    else:\n        res += b[i]\nprint(res)\n"}, "1683": {"problem_id": 1683, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 1000000007\ninp = readline().rstrip()\ninp = int(inp,2)\nn = int(inp,0)\na = list(map(int,input().split()))\ncnt = [0]*26\nfor i in range(n):\n    cnt[a[i]-1]+=1\n    cnt[a[i]]+=1\nans = pow(2,n)\nfor i in range(26):\n    ans-=cnt[i]\n    ans%=MOD\nprint(ans)\n"}, "1684": {"problem_id": 1684, "answer": "n,m=list(map(int,input().split()))\na=[]\nb=[]\nfor i in range(m):\n    a.append(list(map(int,input().split())))\n    b.append(list(map(int,input().split())))\nif n//2 not in a:\n    print(\"No\")\n    return\nfor i in range(m):\n    if i%2==0:\n        a[i].rotate(i//2)\n    else:\n        a[i].rotate(-i//2)\nans=['Yes','No']\nfor i in range(n):\n    if ans[0]=='Yes':\n        ans[i]=chr(ord('a')+i)\n    else:\n        ans[i]=chr(ord('a')-i)\nprint(ans[0])\n"}, "1685": {"problem_id": 1685, "answer": "import sys\nread = sys.stdin.readline\nINF = 10**9+7\n\ndef main():\n    n, q = map(int, read().split())\n    tree = [INF]*n\n    for i in range(n):\n        tree[i] = list(map(int, read().split()))\n    for _ in range(q):\n        u, s = map(int, read().split())\n        if u < 1:\n            continue\n        cnt = 0\n        for i in tree[u]:\n            cnt += tree[i]\n        tree[u] = [cnt]*(2*q)\n        print(cnt)\n\nmain()\n"}, "1686": {"problem_id": 1686, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nn, k = map(int, read().split())\nmas = [0]*32\nfor i in range(n):\n    x = map(int, readline().split())\n    mas[x[3:8]] += 1\nans = -1\nfor i in range(32):\n    m = mas[i]\n    if m == 1:\n        ans = i\nprint(ans)"}, "1687": {"problem_id": 1687, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(1, n):\n    if a[i] % i == 0:\n        ans = i\nprint(ans)\n"}, "1688": {"problem_id": 1688, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nd = [0]*n\nfor i in range(n-1):\n    d[i+1] = max(d[i], a[i] + d[i+1])\nans = [-1]*n\nm = 0\nfor i in range(n):\n    m = max(m, d[i])\n    ans[i] = m\nprint(*ans, sep=' ')\n"}, "1689": {"problem_id": 1689, "answer": "n = int(input())\ns = [0]*n\nfor i in range(n):\n    s[i] = input()\n    l = s.count('O')\n    r = s.count('+')\n    if l>r:\n        print('YES')\n    else:\n        print('NO')\n        \n"}, "1690": {"problem_id": 1690, "answer": "from collections import deque\n\n\nclass BIT():\n    def __init__(self, n):\n        self.n = n\n        self.tree = [0] * (n + 1)\n\n    def sum(self, i):\n        s = 0\n        while i > 0:\n            s += self.tree[i]\n            i -= i & -i\n\n        return s\n\n    def add(self, i, x):\n        while i <= self.n:\n            self.tree[i] += x\n            i += i & -i\n\n"}, "1691": {"problem_id": 1691, "answer": "import math\nn,k=list(map(int,input().split()))\nwhile k:\n    k=k//n\n    print(2*math.floor(math.sqrt(k))+1)\n    \n"}, "1692": {"problem_id": 1692, "answer": "s=input()\nprint(len(set(s)))"}, "1693": {"problem_id": 1693, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = [0] * n\nfor i in range(1, n):\n    ans[i] = max(a[i], ans[i - 1] + m[i])\nprint(' '.join(map(str, ans[1:])))\n"}, "1694": {"problem_id": 1694, "answer": "import sys\ninput = sys.stdin.readline\n\ndef read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split()))\n\n\nn, m, s, f = read_ints()\nt = [0] * n\nfor i in range(m):\n    t = [t[i] for i in read_ints()]\n    if s < t[0] or f < t[-1]:\n        print('L')\n        continue\n    l = 0\n    r = n - 1\n    while l <= r:\n        if t[l] <= t[r]:\n            l += 1\n        else:\n            r -= 1\n    if r - l > 1:\n        print('R')\n    elif r - l == 1:\n        print('L')\n    else:\n        print('X')\n"}, "1695": {"problem_id": 1695, "answer": "n, m = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    s = input()\n    ans += int(s[5])\nprint(max(ans))\n"}, "1696": {"problem_id": 1696, "answer": "import sys\ninput = sys.stdin.readline\nn, m, k = map(int, input().split())\na = [list(map(int, input().split())) for i in range(k)]\nans = 0\nfor i in range(k):\n    ans += abs(a[i][0]-a[i][1])*abs(a[i][2]-i)\nprint(ans)"}, "1697": {"problem_id": 1697, "answer": "import sys\nn, m = list(map(int, input().split()))\nmat = [[0 for _ in range(n + 1)] for _ in range(m + 1)]\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        mat[i][j] = chr(ord('A') + j)\n        mat[i][j] += 1\nans = []\nfor i in range(len(mat)):\n    if mat[i][1] == 1:\n        ans.append('Yes')\n        continue\n    for j in range(1, 4):\n        if mat[i][j] == 3:\n            ans.append('Yes')\n            break\n        elif mat[i][j] == 2:\n            ans.append('No')\n            break\n        elif mat[i][j] == 1:\n            ans.append('No')\n            break\nprint('\\n'.join(map(str, ans)))\n"}, "1698": {"problem_id": 1698, "answer": "import sys\nreadline = sys.stdin.readline\nn, k = map(int, readline().split())\nt = list(map(int, readline().split()))\na = [x for x in t if x > 2*k]\nb = [x for x in t if x < 2*k]\nprint(min(b[0], b[1] + sum(a)))"}, "1699": {"problem_id": 1699, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = lambda x, end='\\n': stdout.write(str(x)+end)\ninp = lambda: stdin.readline().strip()\nins = lambda: list(map(int, input().split()))\n\nn, m = ins()\nif n==1 and m==1:\n    print('1')\n    return\nprint(' '.join(map(str, ins())))\n"}, "1700": {"problem_id": 1700, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\ns = list(map(int,readline().split()))\nr = []\nb = []\nans = [0]*n\nfor i in range(n):\n    if s[i] == \"(\":\n        r.append(\"(\"+\"\".join(map(str,list(range(n))))+\")\")\n    elif s[i] == \")\":\n        b.append(\"(\"+\"\".join(map(str,list(range(n))))+\")\")\n    else:\n        ans[i] = ans[i-1] + 1\nprint(\"\".join(map(str,ans)))"}, "1701": {"problem_id": 1701, "answer": "import bisect\nn,m=list(map(int,input().split()))\nip=[0]*n\nfor i in range(n):\n    ip[i]=list(map(str,input().split()))\nd=[]\nfor i in range(m):\n    cmd=list(map(str,input().split()))\n    d.append(cmd)\nd.reverse()\nm=[]\nfor i in range(m):\n    cmd=list(map(str,input().split()))\n    m.append(cmd)\ns=[]\nfor i in range(n):\n    s.append(ip[i])\ns.reverse()\nm.reverse()\nt=[]\nfor i in range(m):\n    t.append(s[i])\nt.reverse()\ns=d[0]\nd=d[1:]\nfor i in range(1,n):\n    s=s[:i]+' '+s[i+1:]\nprint('\\n'.join(s))\n"}, "1702": {"problem_id": 1702, "answer": ""}, "1703": {"problem_id": 1703, "answer": "n = int(input())\ns = []\nfor i in range(n):\n    s.append(input())\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if s[i] + s[j] == '(':\n            ans += 1\n        else:\n            c = s[i]\n            s[i] = s[j]\n            s[j] = c\nprint(ans)"}, "1704": {"problem_id": 1704, "answer": "import sys\ninput = sys.stdin.readline\n \nn = int(input())\na = list(map(int,input().split()))\n \ncnt = 0\nfor i in range(n):\n    if a[i] == '0':\n        cnt += 1\n    else:\n        cnt -= 1\n \nif cnt == 0:\n    print(-1)\n    return\n \nk = max(a)\nans = str(k)\nans = ans[0] + ''.join(map(str,ans))\nprint(ans)"}, "1705": {"problem_id": 1705, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nd = list(map(int, input().split()))\nans = 2**n-1\nm = d.count(1)\nfor i in range(2, n):\n    if d[i] == 1:\n        ans = min(ans, i)\n    else:\n        ans = min(ans, i-m)\nprint(ans)"}, "1706": {"problem_id": 1706, "answer": "import sys\ninput = sys.stdin.readline\n\nS = input().rstrip()\nn = len(S)\n\nA = [0] * (n + 1)\nfor i in range(1, n):\n    A[i] = A[i - 1] + S[i - 1]\n\nB = [0] * (n + 1)\nfor i in range(1, n):\n    B[i] = B[i - 1] + A[i - 1]\n\nC = [0] * (n + 1)\nfor i in range(n - 1):\n    C[i] = C[i + 1] + B[i + 1]\n\nprint(max(0, int(S[0:i + 1]) - int(A[i + 1:] + B[i + 1:]) + 1 for i in range(n)))"}, "1707": {"problem_id": 1707, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    x, y = a[i]\n    if x!= y:\n        cnt += 2*(x-y)\nprint(cnt)"}, "1708": {"problem_id": 1708, "answer": ""}, "1709": {"problem_id": 1709, "answer": "def main():\n    n, m, k = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    color = [0] * n\n    for i in range(n):\n        color[i] = c[i]\n    b = [[] for i in range(n)]\n    for i in range(n):\n        b[i].append(color[i])\n    b.sort()\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n and b[j].count(b[i]) == 1:\n            j += 1\n        b[i].remove(b[j])\n        b[j].remove(b[i])\n        i = j\n    print(sum(b[i]))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1710": {"problem_id": 1710, "answer": "import sys\ninput = sys.stdin.readline\nn, k = map(int, input().split())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(1, n + 1):\n    s = a[i] + a[i - 1]\n    if s // k == k:\n        cnt += 1\nprint(cnt)"}, "1711": {"problem_id": 1711, "answer": "n,m=map(int,input().split())\nprint(100000000%(n*m))"}, "1712": {"problem_id": 1712, "answer": "import sys\nn,x,y = list(map(int,input().split()))\na = [0]*10**6\nfor i in range(n):\n    a[i] += 1\n    if a[i] == i:\n        print('Both')\n    elif a[i] == i+1:\n        print('Vanya')\n    else:\n        print('Vova')\n"}, "1713": {"problem_id": 1713, "answer": "import sys\ninput = sys.stdin.readline\n\nn, s, t = list(map(int, input().split()))\np = list(map(int, input().split()))\nsorted_p = sorted(p)\nmoves = 0\nfor i in range(n):\n    if s == t:\n        moves += 1\n    elif p[i] > s:\n        moves += 0\n    else:\n        p[i] -= 1\n        moves += 1\nprint(moves)\n"}, "1714": {"problem_id": 1714, "answer": "n,k=list(map(int,input().split()))\ns=0\np=[1]*(n+1)\nfor i in range(2,n+1):\n    s=s+p[i-1]\n    p.append(s-k)\nprint(' '.join(map(str,p)))\n"}, "1715": {"problem_id": 1715, "answer": "from bisect import bisect_left, bisect_right\nfrom collections import deque\ninput = lambda: list(map(int, input().split()))\nINF = float('inf')\nA, B, Q = list(map(int, input().split()))\ns = [INF] * A\nfor i in range(A):\n    s[i] = bisect_left(s, s[i] - x[i])\n    x[i] = s[i] + x[i]\nt = [INF] * B\nfor i in range(B):\n    t[i] = bisect_right(t, t[i] - x[i])\n    x[i] = t[i] + x[i]\nQ = int(input())\nfor _ in range(Q):\n    print((s[0] + t[0]) // x[0])"}, "1716": {"problem_id": 1716, "answer": "from collections import defaultdict, deque\nN, M, Q = list(map(int, input().split()))\nE = [list(map(int, input().split())) for _ in range(M)]\nD = defaultdict(list)\nfor i, lst in enumerate(E):\n    D[lst].append(i)\n\nG = [[] for _ in range(N)]\nfor i, lst in enumerate(E):\n    for j in range(i):\n        G[i].append(D[lst][j])\n\n# \u9ad8\u901f\u5171\u901a\u6570\u5206\u89e3\ndef query(p, q):\n    nonlocal ans\n    d = D[p]\n    qn = len(q)\n    for i in range(qn):\n        if d[i] < q[i]:\n            ans += 1\n            continue\n        d[i] = q[i]\n        for j in range(p, i):\n            if d[j] < q[i] and d[j] not in G[i]:\n                G[i].append(d[j])\n    return ans\n\nans = 0\nfor _ in range(Q):\n    p, q = list(map(int, input().split()))\n    p -= 1\n    q -= 1\n    query(p, q)\n    ans += query(q, p)\nprint(ans)\n"}, "1717": {"problem_id": 1717, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nINF = 10**18\n\ndef solve(n):\n    x = INF\n    y = 2**32\n    while x < n:\n        x = (x * y) % n\n        if x < y:\n            break\n        y = (y * pow(2, 31-int(x/y), 0)) % n\n    return x\n\nprint(solve(30))"}, "1718": {"problem_id": 1718, "answer": "import sys\nsys.setrecursionlimit(10 ** 6)\nINF = float('inf')\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef NI(): return input()\ndef LI2(): return list(map(int, input().split()))\ndef NI2(rows_number): return [LI2() for _ in range(rows_number)]\ndef LI3(): return list(map(int, input().split()))\ndef LI3s(rows_number): return [LI() for _ in range(rows_number)]\ndef NI3(rows_number): return [LI2() for _ in range(rows_number)]\n\nN, K = NI()[:2], NI()[2:]\nA = LI()\ns = [0] * N\nfor i in range(N):\n    s[i] = min(s[i], A[i])\nans = 0\nfor i in range(N):\n    ans += s[i] * (i + 1) // 2\nprint(ans)"}, "1719": {"problem_id": 1719, "answer": "def rec(n, a, b):\n    if n == 0:\n        return 1\n    elif a == b:\n        return 0\n    else:\n        ans = pow(2, n) - 1\n        for i in range(1, n // 2):\n            ans = (ans * (a - i) % (10**9 + 7)) % (10**9 + 7)\n        ans %= (10**9 + 7)\n        return ans\n\nn = int(input())\nprint(rec(n, 'A', 'T'))"}, "1720": {"problem_id": 1720, "answer": "n, m, k = list(map(int, input().split()))\ncells = []\nfor i in range(n):\n    cells.append(input())\ncells.append('#')\ncells.append('.')\ncells.sort()\nx, y = cells.pop()\nc = 0\nd = m - 1\nans = -1\nfor i in range(k):\n    if d > 0:\n        ans = min(ans, cells[i][1] - x, cells[i][2] - y)\n    elif d == 0:\n        ans = cells[i][1] - x\n        c += 1\n    else:\n        ans = min(ans, cells[i][1] - x, cells[i][2] - y)\nprint(ans)\n"}, "1721": {"problem_id": 1721, "answer": "n = int(input())\ns = input()\na = []\nfor i in range(n):\n    a.append(s[i])\nans = 0\nfor i in range(n):\n    if a[i]!= a[i+1]:\n        ans += 1\nprint(ans)"}, "1722": {"problem_id": 1722, "answer": "n = int(input())\na = [0]*26\nfor i in range(n):\n    s = input()\n    a[ord(s[0])-97] += 1\nprint(sum(a))"}, "1723": {"problem_id": 1723, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nedge = [[] for _ in range(n)]\nfor _ in range(n-1):\n    u, v = map(int, input().split())\n    edge[u].append(v)\n    edge[v].append(u)\nvisited = set()\nvisited.add(1)\nans = [1] * n\ndef dfs(node):\n    nonlocal ans\n    visited.add(node)\n    visited.add(node)\n    ans[node] = min(ans[node], 1 + edge[node][0])\n    for nei in edge[node]:\n        if nei not in visited:\n            dfs(nei)\ndfs(1)\nprint(\" \".join([str(x) for x in sorted(ans)])[::-1])"}, "1724": {"problem_id": 1724, "answer": "import sys\ninput = sys.stdin.readline\n\n\ndef inpl(): return list(map(int, input().split()))\ndef lis(): return list(map(int, input().split()))\ndef mint(): return list(map(int, input().split()))\nn = int(input())\na = inpl()\nm = lis()\ns = mint()\nans = 0\nfor i in range(n):\n    ans = max(ans, a[i] + s[i])\nprint(ans)\n"}, "1725": {"problem_id": 1725, "answer": "def f(n, m, d):\n    if d>0:\n        return sum(a>d for a in range(n*m))\n    elif d==0:\n        return 0\n    else:\n        return min(f(n-1, m, d-sum(a>d for a in range(n*m))), f(n-1, m, d))\n\nn, m, d = map(int, input().split())\nmat = [list(map(int, input().split())) for _ in range(n)]\n\nprint(f(n, m, d))"}, "1726": {"problem_id": 1726, "answer": "n, t = map(int, input().split())\na = list(map(int, input().split()))\nd = t // 86400\nfor i in range(d):\n    if a[i] <= n:\n        n += a[i]\n    else:\n        break"}, "1727": {"problem_id": 1727, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\ntrees = []\nfor i in range(n):\n    x, h = map(int, readline().split())\n    trees.append((x, i))\n\nprint(max(trees))"}, "1728": {"problem_id": 1728, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nedges = []\nfor i in range(1, n+1):\n    edges.append([i, i])\ncolors = [0] * n\nvisited = [False] * n\ndef dfs(vert, c):\n    colors[vert] = c\n    visited[vert] = True\n    for nex in edges:\n        if visited[nex] == False:\n            dfs(nex, c)\ndfs(0, 0)\nans = 0\nfor i in range(n):\n    ans += dfs(i, colors[i])\nprint(ans)"}, "1729": {"problem_id": 1729, "answer": "import sys\ninput=sys.stdin.readline\nn,q=list(map(int,input().split()))\ns=input().strip()\nfor _ in range(q):\n    l,r=list(map(int,input().split()))\n    ans=0\n    for i in range(l):\n        try:\n            print(ans,end=\" \")\n            ans+=1\n        except:\n            print(0,end=\" \")\n            ans-=1\n        print(ans,end=\"\\n\")\n"}, "1730": {"problem_id": 1730, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m, k = list(map(int, readline().split()))\nedges = []\ng = collections.defaultdict(list)\nfor i in range(m):\n    a, b = list(map(int, readline().split()))\n    g[a].append(b)\n    g[b].append(a)\nvisited = set()\nans = [0] * n\nvisited.add(0)\nans[0] = 1\ndef dfs(x):\n    for y in g[x]:\n        if y not in visited:\n            dfs(y)\n            visited.add(x)\n            ans[x] = ans[x] + 1\ndfs(0)\nprint(ans[k + 1])\nprint(*ans[1:])"}, "1731": {"problem_id": 1731, "answer": "n,m=map(int,input().split())\nprint(sum([1 for i in range(m) if i<n]))"}, "1732": {"problem_id": 1732, "answer": "n = int(input())\nl = list(map(int, input().split()))\nc = list(map(int, input().split()))\nans = 10**10\nfor i in range(n):\n    ans = min(ans, l[i] + c[i])\nprint(ans)"}, "1733": {"problem_id": 1733, "answer": "import sys\ninput = sys.stdin.readline\n\nn,x,y=list(map(int,input().split()))\nM=[[] for i in range(n+1)]\nfor i in range(n-1):\n    a,b=list(map(int,input().split()))\n    M[a].append(b)\n    M[b].append(a)\n\nans=0\nclass Graph:\n    def __init__(self,vertices):\n        self.n=vertices\n        self.adj=[[] for i in range(self.n)]\n        for i in range(self.n-1):\n            self.adj[i+1].append(i)\n        self.dijkstra(self.adj,vertices)\n        self.visited=[]\n        self.dfs(self.visited)\n        print(len(self.visited))\n        for i in range(self.n):\n            self.visited[i]=[]\n        print(len(self.visited))\n    \n    def dfs(self,visited):\n        for i in range(self.n-1):\n            if visited[i]==[]:\n                visited[i]=[]\n                self.dfs(visited[i])\n                \n                \n                \n            "}, "1734": {"problem_id": 1734, "answer": "n = int(input())\ns = set()\nfor i in range(n):\n    s.add(input())\nans = []\nfor i in range(1, 10):\n    if i in s:\n        ans.append(i)\nprint(' '.join(map(str, ans)))"}, "1735": {"problem_id": 1735, "answer": "s = input()\na = s.count('a')\nb = s.count('b')\nif a>b:\n    print('Yes')\nelse:\n    print('No')"}, "1736": {"problem_id": 1736, "answer": "def main():\n    n, t = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(max(a) + n // 2)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1737": {"problem_id": 1737, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nd = {}\nfor i in range(n):\n    name, version = map(str, readline().split())\n    d[name] = version\nans = []\nfor p in d:\n    if p not in d:\n        ans.append(p)\nprint(\" \".join(ans))"}, "1738": {"problem_id": 1738, "answer": "s = input()\nn = len(s)\nans = 0\nfor i in range(n):\n    ans += abs(ord(s[i]) - 96)\nprint(ans)"}, "1739": {"problem_id": 1739, "answer": "import sys\nreadline = sys.stdin.readline\n\nMOD = 10 ** 9 + 7\nn, x = map(int, readline().split())\na = list(map(int, readline().split()))\ng = a[0]\ns = a[0]\nt = a[0]\n\nif x > 1:\n    for i in range(1, x):\n        g = g * i\nelif x == 1:\n    print(g)\nelse:\n    d = g % MOD\n    if d == 1:\n        print(1)\n    else:\n        d = d * (MOD - 1)\n        print(d)"}, "1740": {"problem_id": 1740, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nkittens = [tuple(int(x) for x in input().split()) for _ in range(n-1)]\n\ndef get_neighbors(x):\n    return tuple(range(x[0], x[0]+1, x[1]))\n\ndef dfs(x, k):\n    neighbors = get_neighbors(x)\n    if neighbors in k:\n        return neighbors\n    else:\n        k[neighbors] = k[neighbors] | k[k[neighbors]]\n        dfs(x+1, k.pop(neighbors))\n\ndfs(0, set())\n"}, "1741": {"problem_id": 1741, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\na=[0]*n\nfor i in range(n):\n    x,y=map(int,input().split())\n    a[i]=min((x-y)**2+y,0)\nprint(min(a))"}, "1742": {"problem_id": 1742, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nP = list(map(int, input().split()))\nans = 0\nfor i in range(m):\n    u, v = P[i]\n    if u!= v:\n        ans = max(ans, i - u)\nprint(ans)\n"}, "1743": {"problem_id": 1743, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\ndef get_hairs(a, b, c):\n    return [a[i] for i in range(len(a)) if i!= 0 and b[i] == c[i]]\n\nm = max(a)\nans = 0\nfor i in range(n):\n    ans += get_hairs(a, b, c)\n    m = max(m, get_hairs(a, b, c))\nprint(ans)"}, "1744": {"problem_id": 1744, "answer": "import sys\nreadline = sys.stdin.readline\n\nn,m = list(map(int,readline().split()))\nt = list(map(int,readline().split()))\n\ns = 0\nfor i in range(n):\n    s += t[i]\n    if s >= m:\n        break\nprint(0)"}, "1745": {"problem_id": 1745, "answer": ""}, "1746": {"problem_id": 1746, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\np = [0] * (n + 1)\nfor i in range(n - 1):\n    p[i + 1] = int(input())\n\nans = \"Yes\"\nvisited = [0] * (n + 1)\nstack = []\nwhile stack:\n    c = stack.pop()\n    for i in range(c, n):\n        if visited[i] == 0:\n            visited[i] = 1\n            stack.append(i)\n            ans = ans + \",\" + str(visited[i])\n        elif visited[i] == 1:\n            break\n"}, "1747": {"problem_id": 1747, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\np = n\nans = []\nfor i in range(n):\n    if a[i]!= p:\n        ans.append(i + 1)\n        p = a[i]\n    else:\n        p = a[i]\nprint(ans[0], ans[1])"}, "1748": {"problem_id": 1748, "answer": "from math import *\nn = int(input())\nv = list(map(int, input().split()))\nt = list(map(int, input().split()))\nt.sort()\nans = 0\nfor i in range(n):\n    ans += t[i] * v[i]\nprint(*ans)"}, "1749": {"problem_id": 1749, "answer": "import sys\ninput = sys.stdin.readline\n\nn, l, r = list(map(int, input().split()))\ns = list(map(int, input().split()))\ns.sort()\nt = list(map(int, input().split()))\nt.sort()\n\nans = [0] * n\nfor i in range(n):\n    if s[i] > t[i]:\n        ans[i] = 1\n\nprint(\"TRUTH\")"}, "1750": {"problem_id": 1750, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    ans.append((x, y + 1))\n\nprint(max(ans))\nprint(*ans)"}, "1751": {"problem_id": 1751, "answer": "import collections\nn = int(input())\nm = 10**9+7\nans = 0\nedges = collections.defaultdict(list)\nfor i in range(1, n+1):\n    edges[i].append(i)\nvisited = set()\nans += len(visited)\nfor i in edges:\n    visited.add(i)\n    for j in range(i):\n        if j not in visited:\n            ans += 1\n            edges[j].pop()\nprint(ans)"}, "1752": {"problem_id": 1752, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(\" \".join(map(str, a)))"}, "1753": {"problem_id": 1753, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\ncolors = [tuple(int(i) for i in input().split()) for _ in range(n)]\npairs = [(i, j) for i, j in enumerate(colors)]\n\nchess = [[] for _ in range(m)]\nfor i in range(m):\n    chess[i].append(i)\n\nque = collections.deque([0])\ncnt = 0\nans = []\nwhile que:\n    now = que.popleft()\n    for i in chess[now]:\n        if cnt >= m:\n            break\n        que.append(i)\n        cnt += 1\n        ans.append(i)\nprint(*ans, sep='\\n')\n"}, "1754": {"problem_id": 1754, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nn,m,k=list(map(int,input().split()))\np=list(map(int,input().split()))\ns=list(map(int,input().split()))\nc=list(map(int,input().split()))\nans=defaultdict(int)\nfor i in range(n):\n    ans[p[i]]=1\nfor i in range(1,n+1):\n    for j in range(i):\n        if ans[j]!=p[i] and j!=i:\n            ans[j]+=p[i]\nprint(ans.get(k,0))\n"}, "1755": {"problem_id": 1755, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9+7\nn, k = map(int, readline().split())\na = list(map(int, readline().split()))\ncnt = [0]*n\nd = {}\nfor i in range(n):\n    d[a[i]] = i\nans = INF\nfor i in range(n):\n    if d[a[i]]!=i:\n        ans = min(ans, i-d[a[i]]+1)\nprint(ans)"}, "1756": {"problem_id": 1756, "answer": "import sys\ninput = sys.stdin.readline\n\nn,x = map(int,input().split())\nd = list(map(int,input().split()))\n\nmonths = [0]*(n+1)\nfor i in range(1,n+1):\n    months[i] = months[i-1] + d[i-1]\n\ndef getMonths():\n    return months\n\ndef getDays():\n    return list(map(int,input().split()))\n\nprint(max(getMonths(),getDays()))"}, "1757": {"problem_id": 1757, "answer": "n = int(input())\nname = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n']\ns = ''\nfor i in range(n):\n    s += name[ord(i)-97]\nprint(s)"}, "1758": {"problem_id": 1758, "answer": "n = int(input())\ns = input()\nt = input()\na = s[::-1]\nb = t[::-1]\nc = []\nfor i in range(n):\n    c.append(0)\nfor i in range(n):\n    c[i] = c[i] + 1\nans = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        ans += 1\nprint(ans)"}, "1759": {"problem_id": 1759, "answer": "import sys\nread = sys.stdin.readline\nm, n = list(map(int, read().split()))\na = [0] * m\nb = [0] * m\nfor i in range(m):\n    x = list(map(int, read().split()))\n    a[i] = x[0]\n    b[i] = x[2]\nprint(' '.join(map(str, a)))"}, "1760": {"problem_id": 1760, "answer": "n = int(input())\ns = input()\nmoves = [0] * (n + 1)\nfor i in range(n):\n    moves[i + 1] = (s.count('U') + s.count('D') - 1) % 2\nprint(' '.join(map(str, moves)))"}, "1761": {"problem_id": 1761, "answer": "n = int(input())\ns = input()\ns = s.replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \").replace(\"<\",\" \").replace(\">\",\" \")."}, "1762": {"problem_id": 1762, "answer": "import sys\nread = sys.stdin.readline\nf = lambda: list(map(int, read().split()))\nn, k = f()\np = []\nfor i in range(n):\n    s, m = f()\n    p.append((s + m) % 60, i)\nq = []\nfor i in range(n):\n    s, m = f()\n    q.append((s + m) // 60, i)\nq.reverse()\ns = 0\nc = 0\nd = 0\nfor i in range(n):\n    if q[i][0] <= s:\n        s += q[i][1]\n        c += 1\n    else:\n        d += 1\n        c <<= 1\nprint(min(c, d))"}, "1763": {"problem_id": 1763, "answer": "import sys\ninput = sys.stdin.readline\n\nn,a,r,m = map(int,input().split())\nh = list(map(int,input().split()))\n\ndp = [0]*n\ndp[0] = h[0]\nfor i in range(1,n):\n    dp[i] = max(dp[i-1],h[i])\n\nans = 0\nfor i in range(n):\n    if h[i]!=dp[i]:\n        ans += a*m + r*(n-i-1)\n        dp[i] = h[i]\nprint(ans)"}, "1764": {"problem_id": 1764, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\ns = 0\nt = 0\nd = deque()\nfor i in range(n):\n    d.append(a[i])\n    s += 1\n    t += 1\nans = [0]*n\nans[0] = n-1\nd.popleft()\nwhile d:\n    now = d.pop()\n    if now == 0:\n        break\n    ans[now] = ans[now-1]\n    for i in range(len(a)):\n        if a[i] == 1:\n            d.append(a[i])\n        else:\n            d.append(0)\nprint(ans[-1])\n"}, "1765": {"problem_id": 1765, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nm = -1\nfor i in range(n):\n    s += a[i]\n    if s & (2**i) == 0:\n        m = i\n    elif s & (2**i) == 1:\n        s -= a[i]\nprint(m)\nprint(' '.join(map(str, a)))"}, "1766": {"problem_id": 1766, "answer": "n = int(input())\ns = [int(i) for i in input().split()]\nans = 0\nm = max(s)\nfor i in range(n):\n    if s[i] > m:\n        ans += s[i]\nprint(ans, m)\n"}, "1767": {"problem_id": 1767, "answer": "import sys\ninput=sys.stdin.readline\n\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\n\nans=0\nfor i in range(n):\n    ans+=a[i]*b[i]\nprint(ans)"}, "1768": {"problem_id": 1768, "answer": "n = int(input())\ns = input().lower()\nc = input().lower()\nm = int(input())\nq = int(input())\nans = []\nfor i in range(0,n):\n    ans.append([0]*m)\n    ans[i][0] = c[i]\n    for j in range(1,n):\n        if s[j] == c[i]:\n            ans[i][j] = ans[i-1][j-1] + 1\n        else:\n            ans[i][j] = max(ans[i-1][j], ans[i][j-1])\nprint(ans[n-1][m-1])"}, "1769": {"problem_id": 1769, "answer": "#!/usr/bin/env python\n\ndef main():\n    A = int(input())\n    B = int(input())\n    \n    print(' '.join(map(str, [str(A), str(B)])))\n\nmain()\n"}, "1770": {"problem_id": 1770, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n,x,y,d=list(map(int,input().split()))\n    if x==y:\n        print(-1)\n    else:\n        d=d-1\n        ans=0\n        for i in range(n-y):\n            ans+=d\n            if i+y>n:\n                break\n        print(ans)\n"}, "1771": {"problem_id": 1771, "answer": "import sys\ninput = sys.stdin.readline\nn, l, wmax = list(map(int, input().split()))\nc = [[] for _ in range(n)]\nfor _ in range(n):\n    x, v = list(map(int, input().split()))\n    c[x].append((v, _))\n    \nv = [-1] + list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    v1, v2 = c[i]\n    if v1[0] == v2[0]:\n        continue\n    else:\n        ans += 1\nprint(ans)\n"}, "1772": {"problem_id": 1772, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nm = n//2\nfor i in range(n):\n    if a[i]%2!=0:\n        cnt+=1\n    else:\n        m+=min(a[i],m)\nprint(m)"}, "1773": {"problem_id": 1773, "answer": "n = int(input())\na = [int(i) for i in input().split()]\na.sort()\np = n\nc = 0\nans = 0\nfor i in range(n):\n    if a[i] == 0:\n        p -= 1\n        c += 1\n    elif a[i] == p:\n        ans += 1\n        p = 0\n    else:\n        ans += c\nprint(ans)"}, "1774": {"problem_id": 1774, "answer": "s = input()\nif s.count('Q')==0:\n    print('Yes')\nelse:\n    print('No')"}, "1775": {"problem_id": 1775, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\nd = [tuple(map(int, input().split())) for _ in range(n)]\ns = set()\nfor i in range(n):\n    s.add(d[i][0])\n    s.add(d[i][1])\nprint(' '.join(map(str, (max(s), min(s)))))\n"}, "1776": {"problem_id": 1776, "answer": "import sys\ninput = sys.stdin.readline\n\ns = input().rstrip()\np, m = map(int, input().split())\nans = 0\n \nn = len(s)\nfor i in range(n):\n    ans = max(ans, s[i] + p * (m - 1))\nprint(ans)"}, "1777": {"problem_id": 1777, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nbracket_sequences = []\nfor i in range(n):\n    bracket_sequences.append(input().rstrip('()'))\n\nans = 0\nfor i in range(n):\n    c1 = 0\n    c2 = 0\n    for j in bracket_sequences:\n        if j[0] == '(':\n            c1 += 1\n        elif j[0] == ')':\n            c2 += 1\n        else:\n            ans += 1\n            c1 = 0\n            c2 = 0\n    if c1 > c2:\n        ans += 1\nprint(ans)"}, "1778": {"problem_id": 1778, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nm = sum(a)\np = sum(b)\n\nres = abs(m - p)\nprint(res)"}, "1779": {"problem_id": 1779, "answer": "s1 = input()\ns2 = input()\ns3 = input()\ns4 = input()\n\ns1 = list(s1)\ns2 = list(s2)\ns3 = list(s3)\ns4 = list(s4)\n\ns1.sort()\ns2.sort()\ns3.sort()\ns4.sort()\n\nfor i in range(26):\n    if s1[i] == s2[i] == s3[i] == s4[i]:\n        print(\"\".join(s1[i]))\n"}, "1780": {"problem_id": 1780, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\na = list(map(int, readline().split()))\n\nt = [0]*(m+1)\nfor i in range(1, m+1):\n    t[i] = a[i]\n\ns = set()\nfor i in range(m):\n    q = list(map(int, readline().split()))\n    if q[0] == 1:\n        s.add(q[1])\n    elif q[0] == 0:\n        s.add(q[1])\n    else:\n        s.add(t[q[1]])\n\nprint(' '.join(map(str, s)))"}, "1781": {"problem_id": 1781, "answer": ""}, "1782": {"problem_id": 1782, "answer": "n, k = map(int, input().split())\nif k == 1:\n    print(-1)\nelif k == 2:\n    print(n)\n    for i in range(2, n + 1):\n        print(i, end=' ')"}, "1783": {"problem_id": 1783, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n-k+1):\n    s += sum(a[i:i+k]) / k\nprint(s)"}, "1784": {"problem_id": 1784, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nk, n = list(map(int, input().split()))\na = list(map(int, input().split()))\npiles = [tuple(a) for _ in range(k)]\ncolors = [None] * k\nfor i in range(n):\n    colors[i] = 0\n    for j in range(k):\n        if colors[i] is None:\n            colors[i] = j + 1\n\nans = []\nfor i in range(n):\n    ans.append(piles[i][0] +'' + colors[i])\n\nprint('YES\\n'.join(ans))\n"}, "1785": {"problem_id": 1785, "answer": "import sys\ninput = sys.stdin.readline\n\n\nn, s = int(input()), input().rstrip()\ns = list(s)\nm = 10**9+7\nans = [1]*(n+1)\nfor i in range(1, n+1):\n    for j in range(i, n+1):\n        ans[i] += (s[i]==s[j])*(m-h(i, j))\n        ans[j] += (s[i]==s[j])*h(i, j)\nprint(ans[n])"}, "1786": {"problem_id": 1786, "answer": "import sys\nreadline = sys.stdin.readline\n\n\nclass Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n    def __lt__(self, other):\n        return self.x < other.x or self.y < other.y\n\n\nw, h, n = list(map(int, readline().split()))\n\ncuts = [Point(w, n)]\n\nfor i in range(1, n+1):\n    cuts[0].x += i\n    cuts[0].y += i\n    cuts[1].x += i\n    cuts[1].y += i\n\n    print(cuts[0].x*h+cuts[0].y*w+round(cuts[0].y*h*2.0)**0.5+round(cuts[0].x*w*2.0)**0.5)\n    print(cuts[1].x*h+cuts[1].y*w+round(cuts[1].y*h*2.0)**0.5+round(cuts[1].x*w*2.0)**0.5)"}, "1787": {"problem_id": 1787, "answer": "s = input()\nn = len(s)\na = [0]*n\nans = 1\nfor i in range(n):\n    if s[i]=='a':\n        a[i] = 1\n    elif s[i]=='b':\n        a[i] = 0\n    else:\n        ans += a[i]\nprint(ans%1000000007)"}, "1788": {"problem_id": 1788, "answer": "from fractions import gcd\na, b = map(int, input().split())\nprint(gcd(a, b, key = lambda x: x%2))"}, "1789": {"problem_id": 1789, "answer": "import sys\ninput = sys.stdin.readline\n\na,b,x,y = map(int,input().split())\n\nd = {0:0,1:x,2:y}\n\nans = float('inf')\nfor i in range(1,100):\n    ans = min(ans,d[i])\n    d[i] = d[i] + abs(i-a)\n\nprint(ans)"}, "1790": {"problem_id": 1790, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nstops = []\nfor i in range(n):\n    stops.append(list(map(int, input().split())))\n\ns = set()\nfor stop in stops:\n    s.add(stop[1:])\n\nprint(' '.join(s))"}, "1791": {"problem_id": 1791, "answer": ""}, "1792": {"problem_id": 1792, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nadj = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v = map(int, input().split())\n    adj[u-1].append(v-1)\n    adj[v-1].append(u-1)\n\nspaceships = []\nbases = []\ncost = [0] * n\ndef bfs(start):\n    q = [start]\n    cost[start] = 0\n    while q:\n        cur = q.pop()\n        for i in adj[cur]:\n            if cost[i] < bfs(cur):\n                bfs(cur)\n                cost[i] = cost[cur] + bfs(cur)\n                q.append(i)\n\ndef main():\n    bfs(0)\n    print(cost[-1])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1793": {"problem_id": 1793, "answer": "import sys\ninput = sys.stdin.readline\n\nn,L,S=list(map(int,input().split()))\nadj=[[] for i in range(n)]\nfor i in range(n-1):\n    adj[i+1].append(i+1)\np=[int(input()) for i in range(n)]\nq=[int(input()) for i in range(n)]\ns=sum(p)\nt=L*(L+1)//2\nif s>t:\n    print(-1)\nelse:\n    d=t\n    for i in range(L):\n        d+=adj[i].pop()-adj[p[i]].pop()\n    print(d)\n"}, "1794": {"problem_id": 1794, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n - 1):\n    s += a[i]\n    \nprint(s)"}, "1795": {"problem_id": 1795, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    if a[i] not in s:\n        s.add(a[i])\n        a[i] = '#'\nprint('YES' if len(s) > 0 else 'NO')"}, "1796": {"problem_id": 1796, "answer": "n = int(input())\ns = []\nfor i in range(n):\n    s.append(input())\nx = 0\nfor i in range(n):\n    if s[i] == \"+\":\n        x += 1\n    elif s[i] == \"-\" or s[i] == \"X\":\n        x -= 1\nprint(x)"}, "1797": {"problem_id": 1797, "answer": "n = int(input())\np = [i for i in range(n)]\ns = sum(p)\na = [False] * n\nb = [False] * n\nfor i in range(n):\n    if a[i]:\n        a[i] = True\n    else:\n        a[i] = False\nans = 0\nfor i in range(n):\n    if a[i]:\n        ans += p[i] - p[i - 1]\n    else:\n        ans += n - p[i]\n        a[i] = True\nprint(ans)"}, "1798": {"problem_id": 1798, "answer": "n = int(input())\na = list(map(int, input().split()))\np = []\nfor i in range(n):\n    p.append(i - a[i])\nans = 0\nfor i in range(n):\n    if p[i] == 0:\n        ans += 1\nprint(ans)\n"}, "1799": {"problem_id": 1799, "answer": "n = int(input())\nans = [0]*n\nfor i in range(n):\n    t,w = map(int,input().split())\n    ans[i] = t+1\nfor i in range(n):\n    if ans[i]>w//n:\n        ans[i] = w//n"}, "1800": {"problem_id": 1800, "answer": "from operator import itemgetter\nn,m=map(int,input().split())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n    s+=a[i]\n    a.sort()\n    b=sorted(a,key=itemgetter(0))\n    b.reverse()\n    print(b)"}, "1801": {"problem_id": 1801, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nm = int(input())\nans = 0\nfor i in range(1, n + 1):\n    if b[i - 1]!= b[i]:\n        ans += 1\n    else:\n        ans += 2\nprint(ans / m)\n"}, "1802": {"problem_id": 1802, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = []\nfor i in range(n):\n    if a[i] <= i:\n        b.append(i)\n    else:\n        b.append(a[i])\nprint(max(b),sum(b))\n"}, "1803": {"problem_id": 1803, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nfor i in range(m):\n    x, y = map(int, input().split())\n    a[x-1] += y\n    a[y-1] -= x\nprint(sum(a))"}, "1804": {"problem_id": 1804, "answer": "import sys\nread = sys.stdin.readline\nn, m = map(int, read().split())\nx, y = map(int, read().split())\ng = list(range(1, n + m))\nh = list(range(1, m + 1))\nans = [0] * n\nans[0] = 1\nfor i in g:\n    ans[i] = max(ans[i - 1], x * m + y)\nfor i in h:\n    if ans[i] < x * m + y:\n        ans[i] = x * m + y\nprint(i + 1)"}, "1805": {"problem_id": 1805, "answer": "q = int(input())\nfor i in range(q):\n    n = int(input())\n    if n%2==0:\n        print(0)\n    else:\n        print(n//2)"}, "1806": {"problem_id": 1806, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+5\nMOD = 10**9+7\nN = int(readline())\nQ = int(readline())\nP = [None]*N\nfor _ in range(Q):\n    l,r = list(map(int, readline().split()))\n    P[l] = r\nans = []\nfor i in range(N):\n    if P[i]!=None:\n        ans.append(i+1)\nprint(*ans, sep='\\n')\n"}, "1807": {"problem_id": 1807, "answer": "a, b = map(int, input().split())\nprint(7 * (b - a + 1) // 2)"}, "1808": {"problem_id": 1808, "answer": "n, k, x = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = sorted(a)\nprint(min(k * x + s[i] for i in range(n) if x < a[i]))\n"}, "1809": {"problem_id": 1809, "answer": "from heapq import heapify, heappush, heappop, heappushpop, heappoppop\nn, m = list(map(int, input().split()))\nbooks = list(map(int, input().split()))\nl = sorted([(i, 0) for i in range(n)])\nheap = []\nfor i in range(m):\n    b, curr = list(map(int, input().split())), 0\n    heappushpop(heap, (l[b][0], b))\n    heapq.heappush(heap, (l[b][1], b))\nprint(sum(books))\n"}, "1810": {"problem_id": 1810, "answer": "n=int(input())\nif n%5==0:\n    print(1)\nelse:\n    print(n//5+1)"}, "1811": {"problem_id": 1811, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\n\ndef read():\n    return input().rstrip()\n\n\ndef write(s):\n    print2.write(s+'\\n')\n\n\nn, k = read()\nroad = read()\nrocks = road[n:]\nroad = list(rocks)\nnxt = road[n:]\n\nans = \"YES\"\nfor i in range(1, k):\n    if road[i] == \".\":\n        ans = \"NO\"\n        break\n    else:\n        nxt = road[i]\n        if nxt not in rocks:\n            ans = \"NO\"\n            break\n"}, "1812": {"problem_id": 1812, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = [int(i) for i in input().split()]\nans = []\nfor a in A:\n    ans.append(2**len(str(a)))\n    for i in range(len(str(a))-1):\n        if i == 0:\n            ans.append(a)\n        elif i == len(str(a)):\n            ans.append(2**i)\nprint('\\n'.join(map(str, ans)))"}, "1813": {"problem_id": 1813, "answer": "import sys\ninput = sys.stdin.readline\n\nn, s, l = map(int, input().split())\na = list(map(int, input().split()))[:n]\n\nans = 0\nfor i in range(n):\n    if a[i] >= l:\n        ans += 1\n    elif a[i] < l - s:\n        ans += 2\n    else:\n        ans += min(ans, l - a[i])\n\nprint(ans)"}, "1814": {"problem_id": 1814, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, c_l, c_e, v = list(map(int, input().split()))\nedges = []\nfor i in range(n):\n    edges.append(list(map(int, input().split())))\n\nq = int(input())\nfor _ in range(q):\n    x1, y1, x2, y2 = list(map(int, input().split()))\n    if c_l == 0:\n        c_l = 0\n    elif c_l == 1:\n        c_l = 1\n    else:\n        c_l = c_l - 1\n    "}, "1815": {"problem_id": 1815, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nu = list(map(int, input().split()))\nu.sort()\nc = 0\nans = 0\nfor i in range(n):\n    if u[i] == u[i - 1]:\n        c += 1\n    else:\n        ans += 1\n        c = 0\n        c += 1\n        u[i] = u[i - 1]\nprint(ans)"}, "1816": {"problem_id": 1816, "answer": "n = int(input())\nfragments = list(map(int, input().split()))\ns = sum(fragments)\nprint(s // n)"}, "1817": {"problem_id": 1817, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n    if a[i] < ans:\n        ans = a[i]\nprint(ans)\n"}, "1818": {"problem_id": 1818, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0] * (n + 1)\nfor i in range(1, n + 1):\n    p[i] = p[i - 1] + a[i - 1]\n    \nans = 0\nfor i in range(n):\n    ans += p[i]\nprint(ans)"}, "1819": {"problem_id": 1819, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, x = list(map(int, input().split()))\n    if x+1 < n:\n        print(0)\n    elif x+2 < n:\n        print(n-x+1)\n    else:\n        print(n-x)"}, "1820": {"problem_id": 1820, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    f=0\n    for i in range(n):\n        if a[i]!=a[i-1]:\n            f=1\n            break\n    if f==0:\n        print(-1)\n    else:\n        print(n-1,end=\" \")\n        print(n-1-i,end=\" \")\n        print(n-1-i-1,end=\" \")\n        print(n-1-i-1-1,end=\" \")"}, "1821": {"problem_id": 1821, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\np = [0] * (n + 1)\nfor i in range(2, n + 1):\n    for j in range(i):\n        p[j] += p[j - 1]\n        p[j] %= 1000000007\nans = p[n]\nfor i in range(1, n):\n    ans = max(ans, p[i])\nprint(ans)"}, "1822": {"problem_id": 1822, "answer": "import sys\nreadline = sys.stdin.readline\nn, x = map(int, readline().split())\na = list(map(int, readline().split()))\ns = readline()\nl = []\nfor i in range(n):\n    if a[i] == 0:\n        l.append(i)\n    else:\n        l.append(max(l[-1], i))\nprint(*l, sep='\\n')\n"}, "1823": {"problem_id": 1823, "answer": "def is_genre(g,n):\n    if g not in N[g]:\n        return False\n    N[g] = {g}\n    for i in range(n):\n        if g not in N[i]:\n            return False\n    return True\n\nn, k = map(int, input().split())\nN = list(map(int, input().split()))\nans = []\nfor i in range(k):\n    if is_genre(i, n):\n        ans.append(i + 1)\nprint(ans[0])"}, "1824": {"problem_id": 1824, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split() - 1))\nc = list(map(int, input().split() - 2))\nprint(min([a[i] for i in range(n)]) + min([b[i] for i in range(n - 1)]), min([c[i] for i in range(n - 2)]) + min([c[i + 1] for i in range(n - 2)]))"}, "1825": {"problem_id": 1825, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = [list(map(int, input().split())) for i in range(n)]\nd = {}\nfor i in range(n):\n    d[s[i][1]] = s[i][2]\n    \nans = []\nfor i in range(n):\n    ans.append(d[s[i][1]].index(s[i]))\n\nprint(''.join(ans))"}, "1826": {"problem_id": 1826, "answer": "n = int(input())\ns = input()\na, b = [], []\nfor i in range(n):\n    if s[i] == 'U':\n        a.append(i)\n    elif s[i] == 'R':\n        b.append(i)\nans = min(len(a), len(b))\nfor i in range(n):\n    ans = min(ans, b[i] - a[i])\nprint(ans)\n"}, "1827": {"problem_id": 1827, "answer": ""}, "1828": {"problem_id": 1828, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom bisect import bisect\nn = int(input())\na = [tuple(map(int, input().split())) for _ in range(n)]\na.sort()\nb = [0] * n\nfor i in range(n):\n    b[i] = a[i][1]\n    x, y = a[i][0], a[i][1]\n    if br(b, x) < br(b, y):\n        b[i] = x\nprint(b[-1])"}, "1829": {"problem_id": 1829, "answer": "n, m = map(int, input().split())\na, b = [input().split() for _ in range(n)]\na.sort()\nb.sort(reverse=True)\np = 0\nq = len(a) - 1\nr = len(b) - 1\nwhile p < q:\n    if a[p] == b[q]:\n        p += 1\n    else:\n        q -= 1\n        if a[p] == b[q]:\n            p += 1\n        else:\n            q -= 1\nprint('YES' if p == q else 'NO')"}, "1830": {"problem_id": 1830, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nR = [tuple(map(int, input().split())) for _ in range(m)]\n\nchessboard = []\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        else:\n            chessboard.append((i, j))\n\nans = 0\nfor r, c in R:\n    if 0 <= r < n and 0 <= c < n:\n        if chessboard[r][c] == 1:\n            ans += 1\n        elif chessboard[r][c] == 0:\n            ans += 1\n\nprint(ans)\n"}, "1831": {"problem_id": 1831, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn, m = map(int, read().split())\nans = [0] * n\nfor i in range(m):\n    s = readline()\n    if s[0] == '1':\n        ans[s[1]] += 1\n    else:\n        ans[s[1]] *= -1\n\nprint('yes' if ans[1] else 'no')"}, "1832": {"problem_id": 1832, "answer": "import sys\ninput = sys.stdin.readline\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = a[i]\n    for i in range(n):\n        j = i + 1\n        while j < n:\n            if ans[j] == 0:\n                ans[i] = a[i]\n                break\n            j += 1\n    print(''.join(map(str, ans)))\n"}, "1833": {"problem_id": 1833, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\nn = int(input())\na = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(1, n+1):\n    if a[i-1]%i == 0:\n        cnt += 1\n\nprint(cnt)\n"}, "1834": {"problem_id": 1834, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    if a[i] < a[i] - 1:\n        s.add(a[i])\n    elif a[i] > a[i] - 1:\n        s.add(a[i] - 1)\n    else:\n        print('Impossible')"}, "1835": {"problem_id": 1835, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint = stdout.write\nfor _ in range(int(input())):\n    n = int(input())\n    s = [list(map(int, input().split())) for _ in range(n)]\n    pal = 0\n    for i in range(n):\n        s[i].pop(0)\n        s[i].append(i)\n    pal += sum(s)\n    print(pal)\n"}, "1836": {"problem_id": 1836, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\nL=[]\nfor i in range(n):\n    L.append(list(map(int,input().split())))\n\ns=0\nr=[]\nfor i in range(n):\n    if L[i][0]!=i+1:\n        s+=1\n        r.append(L[i][1])\n        continue\n    r.append(L[i][1])\n\ns=s*m\nt=sum(r)\nt=t*m\nr.reverse()\nt=t*m\n\nprint(max(s,t))"}, "1837": {"problem_id": 1837, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 0\nfor i in range(n):\n    if a[i] == i:\n        m += 1\nprint(m)"}, "1838": {"problem_id": 1838, "answer": "import sys\nn, m, q = list(map(int, input().split()))\nwords = set(map(str, input().split()))\nrels = []\nfor i in range(n):\n    rels.append(list(sys.stdin.readline().strip()))\n    \ndef solve(t, x, y):\n    if t == 1:\n        if x.intersection(y) == set():\n            rels.remove(x)\n            solve(t, x, y)\n        elif x.is_alike(y):\n            rels.remove(x)\n            solve(t, x, y)\n        else:\n            rels.remove(x)\n            solve(t, y, x)\n    else:\n        if y.intersection(x) == set():\n            rels.remove(y)\n            solve(t, x, y)\n        elif y.is_alike(x):\n            rels.remove(y)\n            solve(t, y, x)\n        else:\n            rels.remove(y)\n            solve(t, x, y)\nsolve(0, words.pop(), words.pop())\nprint('\\n'.join(map(str, rels)))\n"}, "1839": {"problem_id": 1839, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\nl = list(map(int,read().split()))\nl.sort()\nfor i in range(n):\n    print(l[i] if l[i]!=i else i+1)"}, "1840": {"problem_id": 1840, "answer": "s, b = list(map(int, input().split()))\na = list(map(int, input().split()))\nc = [0] * b\nfor i in range(b):\n    c[i] = a[i] + c[i + 1]\nprint(*c)\n"}, "1841": {"problem_id": 1841, "answer": "import sys\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n    s+=sum(a[i:i+m])\nprint(s)\n"}, "1842": {"problem_id": 1842, "answer": "import math\na, b, c = map(int, input().split())\ns = (a + b**2) / 4\nt = (a - b**2) / (2*c)\nprint(math.fabs(s) / math.fabs(t))"}, "1843": {"problem_id": 1843, "answer": "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(2**sum(map(int, input().split())))"}, "1844": {"problem_id": 1844, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nif n == 1:\n    print(-1)\nelse:\n    d = a[0]\n    for i in range(1, n):\n        d = a[i]\n        if d > a[i]:\n            d = a[i]\n            break\n    print(n - max(d, a[0]))\n"}, "1845": {"problem_id": 1845, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\nans = 0\nmachs = [0] * n\nfor i in range(1, n):\n    ans += max(0, i - machs[i]) * a[i]\n    machs[i] = max(machs[i], i)\nprint(ans)"}, "1846": {"problem_id": 1846, "answer": "n = int(input())\nt = list(map(int, input().split()))\nm = min(t)\na = [0]*n\nfor i in range(n):\n    a[i] = t[i]\n    if a[i] > m:\n        m = a[i]\n    elif a[i] < 0:\n        a[i] = m\nprint(n - m)"}, "1847": {"problem_id": 1847, "answer": "import sys\ninput=sys.stdin.readline\np=[int(i) for i in input().split()]\nn=int(input())\nseg=[0]*10**9\nfor i in range(n):\n    x,y,z=input().split()\n    r,a,b=int(x),int(y),int(z)\n    seg.append((r,a,b))\nseg[0]=list(map(int,input().split()))\nk=10**9+10\nans=0\nfor i in range(k):\n    for j in range(10**9+1):\n        if seg[i][j]!=0:\n            x,y,z=i,j,k-1\n            ans+=abs(seg[x][y]-seg[i][j])\n            if ans<seg[i][j]:\n                ans=ans+1\nprint(ans)"}, "1848": {"problem_id": 1848, "answer": "import sys\ninput = sys.stdin.readline\n\n\ndef main():\n    n = int(input())\n    A = list(map(int, input().split()))\n    d = dict()\n    for a in A:\n        d[a] = 1 + min(d.get(a - 1, 0), d.get(a, 0))\n    ans = 0\n    for i in range(n - 2):\n        if d[i] > ans:\n            ans = d[i]\n    print(ans)\n\n\nmain()\n"}, "1849": {"problem_id": 1849, "answer": "n = int(input())\nprint(10**n%998244353)"}, "1850": {"problem_id": 1850, "answer": "n = int(input())\npoints = list(map(int, input().split()))\npoints.sort()\nscores = [0]*n\nfor i in range(n):\n    scores[i] = points[i]\n    if scores[i]>points[i-1]:\n        scores[i] = scores[i-1]\nprint(sum(scores) - sum(points))"}, "1851": {"problem_id": 1851, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n//2 + sum(a[n-1:] + a[:n-1]))"}, "1852": {"problem_id": 1852, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nans = []\ndepth = [0] * (2 * n)\ndepth[0] = 1\ndepth[1] = 1\nvisited = set()\nfor i in range(1, 2 * n):\n    a, b = map(int, readline().split())\n    visited.add((a, b))\n    depth[a] = depth[b] = min(depth[a], depth[b]) + 1\n    ans.append((depth[a], i))\n\nprint(len(ans))\nfor _ in ans:\n    print(_, end=' ')\n"}, "1853": {"problem_id": 1853, "answer": "import sys\nn, m = list(map(int, input().split()))\narr = []\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    arr.append(a)\n    arr.append(b)\nans = []\nfor i in range(n):\n    if arr[i] == arr[i + 1]:\n        ans.append(i + 1)\n        ans.append(arr[i])\nprint(\"YES\" if len(ans) == n else \"NO\")\n"}, "1854": {"problem_id": 1854, "answer": "import sys\ninput = sys.stdin.readline\nn=int(input())\nA=list(map(int,input().split()))\nans=[]\nfor i in range(n):\n    ans.append([])\n    ans[i].append(A[i])\nd=[]\nfor i in range(n):\n    d.append([])\n    d[i].append(i)\nif n==1:\n    print(\"YES\")\n    print(1)\n    continue\nc=0\nm=0\nvis=[False]*n\nvis[0]=True\ndef dfs(i):\n    nonlocal c\n    nonlocal d\n    c+=1\n    degree[i]=len(ans[i])\n    for j in range(i+1,n):\n        if degree[j]==0:\n            dfs(j)\n            degree[j]+=1\ndfs(0)\nc=0\nwhile c<m:\n    u=ans[c]\n    vis[u]=True\n    c+=1\n    for v in d[u]:\n        if vis[v]:\n            continue\n        else:\n            dfs(v)\n            vis[v]=True\n    m-=1\nprint(\"YES\")\nprint(len(ans))\nprint(\"\\n\".join(map(str,ans)))"}, "1855": {"problem_id": 1855, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+3\nMOD = 998244353\n\nn, k = map(int, readline().split())\nsegments = [list(map(int, readline().split())) for _ in range(n)]\n\np = [0]*(n+1)\np[1] = segments[1][1]\nfor i in range(2, n+1):\n    p[i] = max(segments[i-1][1], p[i-1])\n\nprint(p[k-1] + (n-k+1) * max(p[k], p[k-1]))\n"}, "1856": {"problem_id": 1856, "answer": "n = int(input())\nans = []\nfor i in range(n):\n    a = input()\n    ans.append(a.count(\"a\"))\nprint(max(ans))"}, "1857": {"problem_id": 1857, "answer": "n = int(input())\nprint(n**2)"}, "1858": {"problem_id": 1858, "answer": "n = int(input())\nprint(\"No\" if n%2 else \"Yes\")\nans = []\nfor i in range(1, n):\n    a = set()\n    a.add(int(input()))\n    ans.append(a)\nprint(\"\\n\".join(ans))"}, "1859": {"problem_id": 1859, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nif n == 0:\n    print(0)\n    return\n\na = []\n\nfor i in range(2, int(n**0.5)+1):\n    if n % i == 0:\n        a.append(i)\n        n //= i\n\nans = 0\n\nfor i in range(len(a)):\n    if a[i] == 0:\n        ans += 1\n\nprint(ans)"}, "1860": {"problem_id": 1860, "answer": "n = int(input())\nprint(n + 1)"}, "1861": {"problem_id": 1861, "answer": "import sys\nreadline = sys.stdin.readline\nn, k = map(int, readline().split())\nd = {}\nfor i in range(n):\n    s = readline()\n    d[s] = d.get(s, 0) + 1\nans = 0\nfor k, v in d.items():\n    ans += (v*(v-1))//2*(k-2)\nprint(ans)"}, "1862": {"problem_id": 1862, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, n):\n    if s[i] == i:\n        ans += 1\n\nprint(ans)"}, "1863": {"problem_id": 1863, "answer": "import math\nn = int(input())\na = [0]*100001\ng = [0]*100001\nfor i in range(n):\n  a[i] = int(input())\n  g[i] = int(input())\nans = \"A\"*n + \"G\"*n\nfor i in range(n):\n  ans.append(chr(97 + (ord(ans[i]) - 97) % 26 + 96))\nprint(ans)"}, "1864": {"problem_id": 1864, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nif s < n:\n    print(-1)\nelse:\n    m = s - n\n    m1 = min(a)\n    m2 = max(a)\n    if m1 == m2:\n        print(m)\n    else:\n        print(min(m1, m2))"}, "1865": {"problem_id": 1865, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nc = []\nfor i in range(n):\n    b.append(a[i])\n    c.append(a[i])\nans = []\nfor i in range(n):\n    if b[i] > b[i+1]:\n        ans.append(i+1)\n    else:\n        ans.append(i+1)\nprint(len(ans))\nfor i in range(len(ans)):\n    print(ans[i], end=' ')"}, "1866": {"problem_id": 1866, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = []\nfor i in range(1, n+1):\n    ans.append([i, i+1])\nprint(2*n)\nfor i in ans:\n    print(i[0], i[1])"}, "1867": {"problem_id": 1867, "answer": "import sys\nn = int(input())\na = list(map(int, input().split()))\nb = a[0]\nc = 0\nfor i in range(1, n):\n    c += b*i\n    b = max(b, a[i])\nprint(l, r)\nprint(l, r)"}, "1868": {"problem_id": 1868, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 1000000007\n\n\ndef main():\n    n, m, a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    ans = 1\n    for i in range(n):\n        ans *= (a[i] - 1)\n        ans %= MOD\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1869": {"problem_id": 1869, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nd = [[1] * n for _ in range(n)]\nfor i in range(n):\n    d[i][i] = 0\n    for j in range(i, n):\n        d[i][j] += d[i][j - 1]\nprint(min(n - max(d[i] for i in range(n)), 2))"}, "1870": {"problem_id": 1870, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n \nn, c = map(int, read().split())\nt = list(map(int, readline().split()))\na = 0\nfor i in range(n):\n    a += t[i] - t[i-1]\n    \nprint(a)"}, "1871": {"problem_id": 1871, "answer": "from sys import stdin\nn, x = list(map(int, stdin.readline().split()))\nc = list(map(int, stdin.readline().split()))\nd = [x//y for y in c]\nm = sum(d)\nprint(m)"}, "1872": {"problem_id": 1872, "answer": "import sys\ninput = sys.stdin.readline\nn,r=map(int,input().split())\nprint(2*r*r*n)"}, "1873": {"problem_id": 1873, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[a[i]] = i\n    ans = 0\n    for i in range(m):\n        ans += d[gene]\n        if gene not in d:\n            d[gene] = i\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1874": {"problem_id": 1874, "answer": "import math\ndef isP(a, b, c):\n    return (a[0] - b[0])**2 + (a[1] - b[1])**2 <= c**2\n\n\nl_3, l_4, l_5 = list(map(int, input().split()))\nprint(math.hypot(l_3 + l_4 + l_5, l_3 * l_4 * l_5, l_3 * l_4 + l_5 * l_4))\n"}, "1875": {"problem_id": 1875, "answer": "import sys\nimport math\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\nmod=10**9+7\nn=I()\na=[0]*n\nfor i in range(n):\n    x,y=MI()\n    a[i]=max(x,y)\nprint(a[0])"}, "1876": {"problem_id": 1876, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+7\nn, k = map(int, readline().split())\nedges = [[] for _ in range(n)]\nfor _ in range(n - 1):\n    u, v, x = map(int, readline().split())\n    edges[u].append((v, x))\n    edges[v].append((u, x))\n\nprint(sum(edges[i] for i in range(n) if len(edges[i])) % MOD)"}, "1877": {"problem_id": 1877, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\ns = list(map(int,readline().split()))\n\ndef coin(i):\n    return 0 if i == 0 else 1 + coin(i - 1)\n\nmoves = [0]*n\nfor i in range(n):\n    moves[i] = coin(i)\n\nprint(sum(moves))"}, "1878": {"problem_id": 1878, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\nA=[]\nfor i in range(n):\n    x,y,z,w=list(map(int,input().split()))\n    A.append((x,y,z,w))\nprint(sum(A))\n"}, "1879": {"problem_id": 1879, "answer": "t, sx, sy, ex, ey = list(map(int, input().split()))\nl = [0] * 10 ** 5\nfor i in input():\n    if i == 'S':\n        l[0] = 1\n    elif i == 'W':\n        l[1] = 1\n    elif i == 'E':\n        l[2] = 1\n    else:\n        l[3] = 1\n    l[l[i - 1]] = max(l[i], l[i - 1])\nprint(min(t, sx + ex - l[0], sy + ey - l[1]))\n"}, "1880": {"problem_id": 1880, "answer": "import sys\nread = sys.stdin.readline\n\nn = int(read())\nprint(n//5 + \" \" + n%5)"}, "1881": {"problem_id": 1881, "answer": "import sys\ninput = sys.stdin.readline\nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=[]\nc=[]\nfor i in range(n):\n    b.append(a[i])\n    c.append(i)\nb.sort()\nc.sort()\nprint(*((''.join(map(str,b))))+(''.join(map(str,c))),sep='\\n')\n"}, "1882": {"problem_id": 1882, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, t = list(map(int, readline().split()))\nA = [0]*n\nB = [0]*n\nfor i in range(n):\n    a, b = list(map(int, readline().split()))\n    A.append(a+B[i])\n    B.append(b+A[i])\nans = 0\ndp = [0]*n\ndp[0] = A[0]\nfor i in range(1, n):\n    dp[i] = max(dp[i-1], A[i])\nans = max(dp[n-1])\nk = 0\nfor i in range(n):\n    if dp[i] > ans:\n        k = i+1\nprint(k)\nprint(*dp[1:k])"}, "1883": {"problem_id": 1883, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    if a[i] == 0:\n        s.add(i)\n    else:\n        s.add(a[i])\nm = len(s)\nans = [0]*m\nvisited = [False]*m\ndef dfs(i):\n    nonlocal ans\n    visited[i] = True\n    if i not in s:\n        ans[i] = 1\n        dfs(i+1)\ndfs(0)\nprint(ans[0])\nfor i in ans[1:]:\n    print(i, end ='')"}, "1884": {"problem_id": 1884, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9 + 7\nns = lambda: list(map(int, readline().split()))\nn, x1, x2 = ns()\narr = [INF] * (n + 2)\narr[0] = x1\nfor i in range(1, n + 2):\n    arr[i] = min(arr[i].bit_length() - 1, x2)\n    arr[i + 1] = min(arr[i + 1].bit_length() - 1, x1)\nns()\nns()\nk1 = list(map(int, readline().split()))\nk2 = list(map(int, readline().split()))\nfor i in k1:\n    print(' '.join(map(str, i)))\nfor i in k2:\n    print(' '.join(map(str, len(i))))\nfor i in k1:\n    print(' '.join(map(str, i)))"}, "1885": {"problem_id": 1885, "answer": "n = int(input())\nprint(n**0.5)"}, "1886": {"problem_id": 1886, "answer": "s = input()\ns = s.title()\ns = s.ljust(len(s), 'ko')\nprint(s)"}, "1887": {"problem_id": 1887, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nb = list(map(int, readline().split()))\n\ndef max_height(i, j):\n    if i == j:\n        return 0\n    return max(a[i] + b[j], a[i] + max_height(i + 1, j), a[j] + max_height(i, j + 1))\n\nprint(max_height(0, n - 1))\n"}, "1888": {"problem_id": 1888, "answer": "import sys\nread = sys.stdin.readline\n\nn, m = map(int, read().split())\nt = sorted([list(map(int, read().split())) for _ in range(m]))\nans = 0\nfor i in range(1, n + 1):\n    ans += sum(t[i - 1])\nprint(ans)"}, "1889": {"problem_id": 1889, "answer": "import sys\nn,m,q=list(map(int,input().split()))\na=[[0 for i in range(n)] for j in range(m)]\nfor i in range(n):\n    a[i][0]=int(input())\nfor i in range(1,m):\n    a[i][0]=m-1-a[i-1][0]\nfor i in range(1,n):\n    a[0][i]=0\nfor i in range(1,m):\n    a[i][1]=i+1\nfor i in range(1,n):\n    a[i][1]=n-1-a[i][1]\nfor i in range(1,m):\n    a[0][i]=m-1-a[i][0]\nfor i in range(1,n):\n    a[i][0]=0\nfor i in range(1,m):\n    a[m-1][i]=0\nfor i in range(1,n):\n    a[n-1][i]=0\nq=int(sys.stdin.readline())\nwhile(q!=0):\n    q-=1\n    i,j=list(map(int,sys.stdin.readline().split()))\n    a[i][j]=max(a[i][j],a[i-1][j-1]+1)\nprint(' '.join(map(str,a[1:])))\n"}, "1890": {"problem_id": 1890, "answer": "a=input()\nn=int(input())\nm=10**9+7\nc=0\nfor i in range(1,n//2 +1):\n    if(n%i==0):\n        c=(c*i)%m\n    else:\n        break\nprint(c)"}, "1891": {"problem_id": 1891, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k, A, B = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nans = B * n * k\n\nd = {}\nfor i in range(1, n + 1):\n    d[i] = d.get(i, 0) + A\n\nm = min(a)\nt = n // m\n\nans = d[m] * t\n\nprint(ans)\n"}, "1892": {"problem_id": 1892, "answer": "import sys\nn = int(input())\nans = [0]*n\nfor i in range(n):\n    s = input()\n    ans[i] = s.count('f')%(10**9 + 7)\nprint(ans[n-1])"}, "1893": {"problem_id": 1893, "answer": "import sys\nread = sys.stdin.readline\nt = int(read())\na = t**0.01\nb = pow(2,t)\nprint('%.9f' % (a/b),end=' ')\n"}, "1894": {"problem_id": 1894, "answer": "import sys\nread = sys.stdin.readline\nn, m = list(map(int, read().split()))\na = [0]*(n + 1)\nb = [0]*(n + 1)\nfor i in range(1, n + 1):\n    a[i] = b[i - 1]\n    b[i] = a[i]\nans = 0\nfor i in range(n - 1):\n    if a[i] == 0:\n        ans += 1\n    elif a[i] == b[i + 1]:\n        ans += 1\n    else:\n        a[i] = b[i + 1]\nprint(ans)"}, "1895": {"problem_id": 1895, "answer": "import sys\nreadline = sys.stdin.readline\nn,m = map(int,readline().split())\nres = 0\nfor _ in range(n):\n    f,vis = map(str,readline().split())\n    if f.startswith('h'):\n        res += 1\n        continue\n    vis[f] = 1\n    for i in range(len(vis)):\n        if vis[i] == 0:\n            vis[i] = 1\n            res += 1\nprint(res)"}, "1896": {"problem_id": 1896, "answer": "n = int(input())\nprint(0 if n == 0 else n + 1)"}, "1897": {"problem_id": 1897, "answer": "s = input()\nvowel = {'I': 0, 'E': 1, 'A': 2, 'O': 3, 'U': 4, 'AO': 5, 'U': 6, 'IA': 7, 'EO': 8, 'EO': 9, 'EO': 10}\nres = 0\nfor i in range(len(s)):\n    res += (vowel[s[i]] * vowel[s[i]]) / len(s)\nprint(res / 10 ** 6)"}, "1898": {"problem_id": 1898, "answer": "n = int(input())\nprint('I hate it') if n == 1 else print('I hate that I love it') if n == 2 else print('I hate that I love that I hate it')"}, "1899": {"problem_id": 1899, "answer": "from collections import deque\nn, s, m, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\ns = deque(s)\nseg_cnt = [0] * n\nans = [-1] * n\nfor i in range(n):\n    seg_cnt[i] += 1\n    if s[0] == i:\n        s.popleft()\n    elif s[0] == i + 1:\n        s.pop()\n    else:\n        seg_cnt[i] -= 1\n        if seg_cnt[i] == 0:\n            s.append(i)\n            seg_cnt[i] = 1\nm = min(seg_cnt)\nans = [-1] * n\nfor i in range(m):\n    l, r = s.popleft()\n    if l <= r:\n        ans[i] = k\n        continue\n    ans[i] = ans[l] + k if k < m else m\nprint(ans[m])"}, "1900": {"problem_id": 1900, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k, m = list(map(int, input().split()))\nt = list(map(int, input().split()))\nt.sort()\ncnt = 0\nvisited = [False for i in range(n + 1)]\nvisited[0] = True\nfor i in range(n):\n    if visited[i]:\n        continue\n    else:\n        visited[i + 1] = True\n        cnt += k\nprint(cnt)\n"}, "1901": {"problem_id": 1901, "answer": "def solve():\n    n, m = list(map(int, input().split()))\n    p = [0] * 10 ** 5\n    for i in range(n):\n        p[i] += p[i] * c[i]\n    best = 0\n    for i in range(m):\n        x, y = list(map(int, input().split()))\n        if x > y:\n            x, y = y, x\n        best = max(best, p[x] - p[y])\n    print(best)\nsolve()\n"}, "1902": {"problem_id": 1902, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\ntext = read().split()\nn = len(text)\nprint(n-max(map(int, text[0])))"}, "1903": {"problem_id": 1903, "answer": "import sys\ninput = sys.stdin.readline\nn, m, d = map(int, input().split())\ncoups = []\nfor i in range(n):\n    s, w = map(int, input().split())\n    if s > d:\n        coups.append((s, w))\nprint(max(coups))"}, "1904": {"problem_id": 1904, "answer": "n = int(input())\ns = input()\na = list(map(int, input().split()))\np = [0]*n\nfor i in range(n):\n    p[i] += a[i]\nans = 998244353\nfor i in range(n):\n    if p[i]>=2:\n        ans = min(ans, p[i] + i - n)\nprint(ans)"}, "1905": {"problem_id": 1905, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, q = list(map(int, input().split()))\ng = [[] for _ in range(n + m)]\nfor _ in range(q):\n    t = list(map(int, input().split()))\n    g[t[0] - 1].append(t[2])\n    g[t[1] - 1].append(t[2])\n    \n    \nd = {}\nfor i in range(1, n + m):\n    d[i] = d.get(i, 0) + 1\n    \nfor i in range(1, n + m):\n    for j in g[i]:\n        if d.get(j, 0) > d[i]:\n            d[i] = d.get(j, 0) + 1\nprint(' '.join([str(i) for i in d.keys()]))\n"}, "1906": {"problem_id": 1906, "answer": "n=int(input())\nif n%2==0:\n    print(1)\nelse:\n    print(n//2)"}, "1907": {"problem_id": 1907, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nA = [[int(x) for x in input().split()] for _ in range(n)]\nA.sort()\nans = 0\nfor i in range(n):\n    x,y,r = A[i]\n    ans = max(ans, (x-y) * r)\nprint(\"%.6f\" % ans)"}, "1908": {"problem_id": 1908, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nw = list(map(int, input().split()))\n\nd = {}\nfor i in range(n):\n    d[i] = set()\n\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    d[x].add(y)\n    d[y].add(x)\n\nans = \"DEAD\"\ncnt = 0\ns = set()\nfor i in d:\n    if len(d[i]) == 2:\n        cnt += 1\n        ans = \"ALIVE\"\n        break\n    if cnt > 0:\n        ans = \"DEAD\"\n        cnt = 0\n    s.add(i)\n\nsys.stdout.write(ans+\"\\n\")\n"}, "1909": {"problem_id": 1909, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**9+1\nn,k = map(int,readline().split())\na = list(map(int,readline().split()))\ng = [0]*n\nm = INF\nfor i in range(n):\n    g[i+1] = g[i] + a[i]\n    m = min(m,g[i])\nprint(m)"}, "1910": {"problem_id": 1910, "answer": "from sys import stdin, stdout\nfrom collections import defaultdict, deque\nimport math\nimport bisect\ndef input(): return stdin.readline().rstrip()\ndef I(): return int(input())\ndef R(): return list(map(int, input().split()))\ndef S(): return input().split()\nINF = float('inf')\n\nn = I()\nans = 0\nfor i in range(1, n):\n    ans += (n - i) * (n - i - 1) // 2\nprint(ans)\n"}, "1911": {"problem_id": 1911, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] < a[i - 1]:\n        s += a[i] - a[i - 1]\n    elif a[i] > a[i - 1]:\n        s -= a[i] - a[i - 1]\nprint(s)"}, "1912": {"problem_id": 1912, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    r,g,b,w = list(map(int,input().split()))\n    if r%2!=0 and g%2!=0 and b%2!=0 and w%2!=0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"}, "1913": {"problem_id": 1913, "answer": "from sys import stdin, stdout\nfrom math import floor,sqrt,factorial,gcd,log2,ceil,nearZERO,rint,pow,fraction,inf,nan,tolef,tofield,subtract,add,mul,div,randint,isint,iscloseTo,isComplex,isreal,isEqual,isleap,isNotExpr,ispow,isSigned,mod,supl,str,execinfo,getcontext,brute,innodB,outodB\nfrom collections import defaultdict as dd, deque, Counter as C, OrderedDict as Od, LazyList as Li,defaultdict as D,  set as S,  Ini as IniR,loadtext as TL,ietf,osmotic,fcntl,fahtzaf,swab,str2bin,stty,readline,reconfigure_module\nfrom heapq import heapify,heappop,heappush,heapreplace,hashing_ BMI,get_body_info,max,min,nth,divmod,copysign,formatInt,ascii,hex,smap,encode,fdpic,writetok,time,compare_time,isa_self,inv,print_pairs,reconfigure_autotune,sorted_keys,split_lst,list2,ll,mp,m pari,mpow,sqrt_,herm,image,pathcon,renv,sep,setbufsize,flush,map,unmap,resumask,paredit,readarray,ite,itertoe,atoi,ltoa,Created,float,hexfloat,clamp,coerce,aspartat,o2fa,o2i,o3fa,o3i,Odd,backspaces,write_time,read_write_time,tmpfile,TmpMetrics,startswith,index,search,3DNow,rosettac,erennot,%s,4DNow,cos,toss,radians,hypot,%s,mu,nu,pi,rlinstem,rlinvastatin,rlinvastatina,rlinvastatinb,rlinvastatinaa,rlinvastatinbab,rlinvastatinub,rlinvastatinubl,rlinvastatinubr,rlinvastatinubrs,rlinvastatinuc,rlinvastatinucb,rlinvastatinub,rlinvastatinub,rlinvastatinubl,rlinvastatinublse,rlinvastatinubrs,rlinvastatinus,rlinvastatinva,rlinvastatinvaa,rlinvastatinvaab,rlinvastatinub,rlinvastatinubl,rlinvastatinublse,rlinvastatinubrs,rlinvastatinus,rlinvastatinva,rlinvastatinvaab\nfrom functools import reduce\nfrom itertools import combinations as cbt, permutations as pbc\nfrom bisect import bisect_left as bl,bisect_right as br,bisect,insort,insort_ra,insort_spart as sp,insort_ci\nfrom heapq import heappush,heappop,heap_extend,heapismx,merge,heappushpop,heapify,heaprusage,heapreplace,copy_excercises,heaportkey,heapVacuum,heapq,insort_lst,isin,isinng,minlocale,getlocator,tzset,rawmax,ceil,floor,abs,exp,log10,acos,tan,asin,cos,tanh,pi,prod,base,ceil,ceillegacy,ceildays,cumsum,virtualy,absolute,explored,findall,reduce,sorted,think about it,imap,itertwenum,join,outer,grains,zip_longest,partition,[] as p,cmp_to_dense,reset_val,cache_get,cache_set,memoize,memoize_values,fromiter import take_line as trl,next_line as trn,getcontext(),setlocale,tcgetp,tcp,truncate,flush,clip,applied,flatten,[[],help,position_ins"}, "1914": {"problem_id": 1914, "answer": "def __starting_point():\n    t = input()\n    n = int(input())\n    s = input().split()\n    s.sort()\n    print(sum(1 for i in range(n) if s[i] not in t))\n__starting_point()"}, "1915": {"problem_id": 1915, "answer": "n = int(input())\na = [0] * n\nfor i in range(1, n):\n    a[i] = i + a[i - 1]\nprint(sum(a))"}, "1916": {"problem_id": 1916, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9 + 7\ndef minp(): return map(int, readline().split())\ndef mint(): return map(int, readline().split())\ndef mints(): return list(minp())\ndef solve():\n    n, m = mints()\n    a = INF\n    for i in range(n):\n        a |= a & m[i]\n    print(a)\nsolve()"}, "1917": {"problem_id": 1917, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = []\nfor i in range(n):\n    ans.append(a[i] - max(ans[-1]))\n\nprint(*ans, sep='\\n')"}, "1918": {"problem_id": 1918, "answer": "from sys import stdin,stderr\nn = int(stdin.readline())\np = list(map(int,stdin.readline().split()))\na = list(map(int,stdin.readline().split()))\np.sort()\ns = [0]*n\nfor i in range(n):\n\ts[i]+=p[i]\nans = 0\nfor i in range(n):\n\tans = max(ans,s[i])\nprint(ans)"}, "1919": {"problem_id": 1919, "answer": "n = int(input())\nprint(2) if n&1 else print(1)"}, "1920": {"problem_id": 1920, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = 0\nd = [0,0]\nfor i in range(n):\n    a,b = map(int,input().split())\n    d[a-1] += 1\n    d[b-1] += 1\n    if abs(d[a-1] - d[b-1]) == 1:\n        ans += 1\nprint(ans)"}, "1921": {"problem_id": 1921, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\ns=t=list(map(int,input().split()))\nfor i in range(m):\n    x,y,z,u=list(map(int,input().split()))\n    s[x-y]+=u\n    t[y-z]+=u\n\ns.sort()\nt.sort()\nans=0\nfor i in range(n):\n    if s[i]!=t[i]:\n        ans=min(ans,m-i)\nprint(ans)\n"}, "1922": {"problem_id": 1922, "answer": "import sys\ninput = sys.stdin.readline\nN, M = list(map(int, input().split()))\ncnt = 0\nfor i in range(1, N+M):\n    if i&1:\n        cnt += 1\nprint(cnt)\n"}, "1923": {"problem_id": 1923, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nL = list(map(int, input().split()))\ns = 0\nfor i in range(1, N+1):\n    s += L[i]\n    if s > L[i-1]:\n        s -= L[i-1]\n    elif s > L[i-2]:\n        s -= L[i-2]\n    else:\n        s += L[i-1]\nprint(s)"}, "1924": {"problem_id": 1924, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict as dd\nR,C=list(map(int,input().split()))\nMOD=10**9+7\nfor i in range(1,R+1):\n    for j in range(1,C+1):\n        ans=0\n        if i<=i//2:\n            ans+=dd(0)\n        elif i%2==0:\n            ans+=dd(2)\n        else:\n            ans+=dd(1)\n        ans%=MOD\nprint(ans)\n"}, "1925": {"problem_id": 1925, "answer": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for _ in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for _ in range(b)] for _ in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for _ in range(c)] for _ in range(b)] for _ in\n}, "1926": {"problem_id": 1926, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nd = [[] for _ in range(n)]\nfor i in range(n - 1):\n    d[i].append(i + 1)\ns = [0] * n\ns[0] = 1\nfor i in range(1, n):\n    s[i] = s[i - 1] + a[i]\n    for j in d[i]:\n        if s[j] > a[i]:\n            s[j] = a[i]\nprint(' '.join(map(str, s)))"}, "1927": {"problem_id": 1927, "answer": "import sys\nreadline = sys.stdin.readline\ndef li(): return [int(i) for i in readline().split()]\ndef mt(x): return int(x)\ndef f(x): return map(int, readline().split())\nn, m = li()\na = f(a)\nans = [0]*n\nfor i in range(m):\n    ans[a[i]] = i\nprint(*ans)"}, "1928": {"problem_id": 1928, "answer": "import sys\ninput=sys.stdin.readline\nn,m,k=list(map(int,input().split()))\nmat=[[0]*m for i in range(n)]\nfor i in range(k):\n    mat[0][i]=1\n    k-=1\n    c=k\n    while c<n:\n        if mat[c][i]==0:\n            c+=1\n        else:\n            break\n    if c==n:\n        print(n)\n        print(\"\")\n        break\n    mat[0][c]=1\n"}, "1929": {"problem_id": 1929, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nt=int(input())\nc=list(map(int,input().split()))\nd={}\nfor i in range(t):\n    d[i+1]=c[i]\nans=0\nfor i in d:\n    if d[i]<=t:\n        ans+=1\nprint(ans)"}, "1930": {"problem_id": 1930, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\np = list(map(int, readline().split()))\n\nans = 0\nfor i in range(n):\n    inp = p[i]\n    ind = p.count(inp)\n    ans += (ind-1) * (ind-1) * (inp&1)\n    ans %= 998244353\nprint(ans)"}, "1931": {"problem_id": 1931, "answer": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    for i in range(1, n+1):\n        if i >= n:\n            break\n        ans += 1\n    print(ans)"}, "1932": {"problem_id": 1932, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ncollection = []\nfor i in range(n):\n    collection.append(input().split())\n\ntotal = 0\nfor i in collection:\n    total += i.count(\"i\")\nprint(total)"}, "1933": {"problem_id": 1933, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\nA = [[0] * m for _ in range(n)]\nfor i in range(n):\n    a = list(map(int, input().split()))\n    A[i] = a\n\nans = [0] * n\nans[0] = 0\nfor i in range(1, n):\n    for j in range(m):\n        if A[i][j] == 1:\n            ans[i] += min(k, n - i + 1)\n            break\n\nprint(max(ans), min(k, n - ans[0]))\n"}, "1934": {"problem_id": 1934, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\ns = list(map(int, input().split()))\nd = [0]*n\nfor i in range(n):\n    d[i] = deque()\n    d[i]append(s[i])\nq = []\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n    if l > r:\n        l, r = r, l\n    q.append((l, r))\n    \nans = []\nvisited = set()\nwhile q:\n    i, j = q.popleft()\n    if i < len(s) and j >= len(s[i]):\n        ans.append((abs(s[i][j] - s[i][i])))\n        visited.add((i, j))\n        \n    for k in range(i, len(s)):\n        if s[k] == s[i]:\n            continue\n        \n        if k - i + 1 > j:\n            break\n        \n        if d[k] > d[i] + 1e-9:\n            d[k] = d[i] + 1e-9\n            ans.append((abs(s[k][j] - s[k][i])))\n            visited.add((k, j))\n        elif d[k] < d[i] + 1e-9:\n            d[k] = d[i] + 1e-9\n            ans.append((abs(s[k][j] - s[k][i])))\n            visited.add((k, j))\n    "}, "1935": {"problem_id": 1935, "answer": ""}, "1936": {"problem_id": 1936, "answer": "import math\ndef inp():\n    return int(input())\ndef inpl():\n    return list(map(int, input().split()))\nt = inp()\nfor _ in range(t):\n    l, r = inpl()\n    if l % r!= 0:\n        print(-1)\n    else:\n        print(l, r)"}, "1937": {"problem_id": 1937, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append(a[i])\n\nans.sort()\nprint(*ans)"}, "1938": {"problem_id": 1938, "answer": "from math import *\nn,k=list(map(int,input().split()))\na=[]\nfor i in range(k):\n    a.append([int(i) for i in input().split()])\n    \nans=0\nMOD=10**9+7\nfor i in range(1,n):\n    ans+=pow(a[i-1]-1,MOD-2,MOD)\n    ans%=MOD\nprint(ans)\n"}, "1939": {"problem_id": 1939, "answer": "n,k=map(int,input().split())\nif n<k:\n    print(1)\nelse:\n    a=n-k\n    b=k-n\n    c=0\n    for i in range(1,a):\n        c+=i\n    for i in range(1,b):\n        c+=n-i\n    for i in range(1,c):\n        print(i,end=\" \")\n"}, "1940": {"problem_id": 1940, "answer": "def main():\n    n, k = list(map(int, input().split()))\n    pebbles = list(map(int, input().split()))\n    p = [0] * n\n    for i in range(n):\n        p[i] += pebbles[i]\n    ans = 0\n    for i in range(n):\n        if p[i] > k:\n            ans += 1\n        elif p[i] == k:\n            ans += 2\n        else:\n            ans += min(k, p[i])\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1941": {"problem_id": 1941, "answer": "import sys\ninput = sys.stdin.readline\n\nA, B, n = list(map(int, input().split()))\ns = [0] * (B + 1)\nfor i in range(n):\n    l, t, m = list(map(int, input().split()))\n    s[l] += 1\n    s[l + 1] += m * (t - l)\n    s[l + 2:] = s[l + 2:] - m * (t - l)\nprint(min(s[1:2], -1))\n"}, "1942": {"problem_id": 1942, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,l,r=list(map(int,input().split()))\n    d=[[False for i in range(l+1)] for i in range(r+1)]\n    d[0][0]=True\n    ans=[]\n    for i in range(1,n+1):\n        for j in range(i):\n            if d[i-1][j]:\n                d[i][j]=True\n            else:\n                d[i][j]=False\n        ans.append(str(i+1)+' '+str(j+1))\n    print(' '.join(ans))\n"}, "1943": {"problem_id": 1943, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nprint2D = stdout.write\nn = int(input())\nl = [[0]*n for i in range(n)]\nfor i in range(n):\n    l[i][i] = list(map(int,input().split()))\n    \nans = [[0 for i in range(n)] for j in range(2*n)]\nfor i in range(n):\n    for j in range(n):\n        ans[i][j] = ans[i][j] + l[i][j]*l[i][l[i][j]]\nprint(ans[0][0])"}, "1944": {"problem_id": 1944, "answer": "import sys\n\ndef main():\n    n = int(input())\n    a = []\n    b = []\n    for i in range(n):\n        a.append(int(input()))\n        b.append(int(input()))\n    if a[0] < b[0]:\n        print(\"Happy Alex\")\n    else:\n        print(\"Poor Alex\")\nmain()"}, "1945": {"problem_id": 1945, "answer": "from collections import Counter\nq = int(input())\nfor _ in range(q):\n    h1, h2 = input().split()\n    h1, h2 = int(h1), int(h2)\n    if h1 == h2:\n        print(1)\n    else:\n        c = Counter(h1)\n        d = Counter(h2)\n        print(c - d)"}, "1946": {"problem_id": 1946, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nt = list(map(int, input().split()))\nm = int(input())\nt.sort()\nr = [[] for _ in range(m)]\nfor i in range(n):\n    a, x = t[i]\n    r[a].append(x)\n\nprint(sum(r[i] for i in range(m)))\n"}, "1947": {"problem_id": 1947, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, l = map(int, input().split())\na = list(map(int, input().split()))\nh = [0] * n\nfor i in range(m):\n    t = int(input())\n    if t == 0:\n        print(l * 2)\n        continue\n    p = 1\n    d = 0\n    while p < n:\n        d += a[p]\n        p += p & (-p)\n    h[i] = d\n\nfor i in range(n):\n    h[i] //= p\n\nans = []\nfor i in range(n):\n    ans.append(h[i] * p)\n\nprint('\\n'.join(ans))"}, "1948": {"problem_id": 1948, "answer": "import sys\ndef main():\n    n, x = map(int, input().split())\n    adj = [[] for _ in range(n)]\n    for _ in range(n-1):\n        a, b = map(int, input().split())\n        adj[a-1].append(b-1)\n        adj[b-1].append(a-1)\n    dp = [0]*(n+1)\n    vis = [False]*(n+1)\n    q = [x]\n    while q:\n        v = q.pop()\n        for u in adj[v]:\n            if vis[u]!=True:\n                vis[u]=True\n                dp[v] += 1\n                q.append(u)\n    print(dp[x])"}, "1949": {"problem_id": 1949, "answer": "import sys\ninput=sys.stdin.readline\nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n    if a[i]==0:\n        c=c+1\nprint(min(a))-c\n"}, "1950": {"problem_id": 1950, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nc = 0\nfor i in a:\n    b.append(i)\n    c += i\nprint(c)"}, "1951": {"problem_id": 1951, "answer": "n = int(input())\nr = []\nfor i in range(n):\n    r.append(str(input()))\ns = set()\nfor i in range(n):\n    if r[i] == \"+\":\n        s.add(r[i])\n    elif r[i] == \"-\":\n        s.remove(r[i])\nans = \"YES\" * n + \" \".join(s)\nprint(ans)"}, "1952": {"problem_id": 1952, "answer": ""}, "1953": {"problem_id": 1953, "answer": "n = int(input())\nt = list(map(int, input().split()))\na = [0]*n\nfor i in range(n):\n    a[i] = t[i]\n    a[i] += 1\nprint(max(a))"}, "1954": {"problem_id": 1954, "answer": "import math\ndef prime(n):\n    if n < 2:\n        return False\n    elif n == 2:\n        return True\n    else:\n        d = 2\n        while d <= math.sqrt(n):\n            if n % d == 0:\n                return False\n            d += 1\n        return True\nmod = 10**9 + 7\nq = int(input())\nfor _ in range(q):\n    n, f = map(int, input().split())\n    if n == 1:\n        print(1)\n        continue\n    n1 = n - 1\n    f1 = f - 1\n    a = [0] * n1\n    a[0] = 1\n    for i in range(1, n1):\n        a[i] = a[i - 1] * i\n        a[i] %= mod\n    print(a[n1] % mod)"}, "1955": {"problem_id": 1955, "answer": "from sys import stdin\ninput = stdin.readline\nn,m=map(int,input().split())\nd=list(map(int,input().split()))\na=list(map(int,input().split()))\nexam=[0]*m\nfor i in range(n):\n    exam[i]=d[i]\n    \ndef binarySearch(l,r):\n    if l<r:\n        mid=(l+r)//2\n        if exam[mid]==0:\n            return mid\n        else:\n            return binarySearch(mid+1,r)\n    else:\n        return binarySearch(0,l)\nprint(binarySearch(0,n))"}, "1956": {"problem_id": 1956, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor i in range(t):\n    s,e=list(map(int,input().split()))\n    a=s+1\n    if a>e:\n        print(0)\n        continue\n    m=max(s,e)\n    b=m//2\n    if m%2==0:\n        print(1)\n        continue\n    else:\n        print(0)\n"}, "1957": {"problem_id": 1957, "answer": "import sys\ninput = sys.stdin.readline\nn, A, B = list(map(int, input().split()))\ns = list(map(int, input().split()))\np = A/s[1]\nans = 0\nfor i in range(1, n):\n    ans += (s[i] * p) / s[i]\nprint(ans)\n"}, "1958": {"problem_id": 1958, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn,p=list(map(int,input().split()))\nfor i in range(n):\n    h,g=list(input().split()),int(input())\n    h=list(map(int,input().split()))\n    g=sum(h)\n    if g%2==0:\n        print(h[:h.index(g)])\n    else:\n        print(h[:h.index(g)+1])"}, "1959": {"problem_id": 1959, "answer": "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nd=set(a)\nif len(d)==1:\n    print(-1)\n    return\nd=list(d)\nd.sort()\nc=0\nfor i in range(n):\n    if a[i]%2!=0:\n        c+=1\n        break\nprint(c)\nprint(*sorted(d),sep='\\n')\n"}, "1960": {"problem_id": 1960, "answer": "from collections import Counter\nn = int(input())\na = list(map(int, input().split()))\ncnt = Counter(a)\nlis = [0]*(10**5+10)\nfor i in range(1, 10**5+10):\n    if cnt[i]:\n        j = i-1\n        while j >= 0 and cnt[j]:\n            lis[j] = max(lis[j], lis[i])\n            j -= 1\n    elif len(set(a)) == 1:\n        lis[a[0]] = 1\n    else:\n        lis[a[0]] = 1\nprint(''.join(str(i) for i in lis))"}, "1961": {"problem_id": 1961, "answer": "from collections import deque\nn,m = list(map(int,input().split()))\ns = [['.' for i in range(m) ] for i in range(n)]\nfor i in range(n):\n    s[i].insert(0,input())\nq = deque()\nq.append(0)\nwhile q:\n    i = q.popleft()\n    for j in range(i[0],i[1]+1):\n        if s[i][j] == '.':\n            q.append(j)\n        else:\n            q.append(j)\nprint('YES' if len(q) == n else 'NO')\n"}, "1962": {"problem_id": 1962, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k, l = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = [0] * k\nfor a in A:\n    B[a] += 1\n\ncnt = 0\nans = 0\nfor i in range(k):\n    cnt += B[i]\n    if cnt < l:\n        ans += i * (l - cnt)\n        cnt = 0\nprint(ans)\n"}, "1963": {"problem_id": 1963, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 10**6+1\nans = [0]*m\nans[0] = 1\nfor i in range(1, m):\n    for j in range(i):\n        if ans[j] == 0:\n            ans[j] = 1\n            break\nprint(*ans[1:], end=' ')\n"}, "1964": {"problem_id": 1964, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n    b.append(a[i])\nans = 0\nfor i in range(5):\n    if b[i] <= k[i]:\n        ans += 1\nprint(ans)"}, "1965": {"problem_id": 1965, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor _ in range(t):\n    n, x = list(map(int, readline().split()))\n    a = list(map(int, readline().split()))\n    \n    ans = 0\n    for i in range(n):\n        if a[i] > x:\n            ans += 1\n        elif a[i] == x:\n            ans += 1\n    "}, "1966": {"problem_id": 1966, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\nboard = [[0] * n for _ in range(n)]\nfor i in range(n):\n    for j in range(n):\n        board[i][j] = int(input())\n        board[i][j] += 1\n\nmoves = [[0] * n for _ in range(n)]\nfor i in range(n):\n    for j in range(n):\n        moves[i][j] = board[i][j]\n        moves[i][j] += board[i][j]\n\nsizes = [2 * n for _ in range(n)]\ncolors = [0] * 2 * n\n\nfor i in range(n):\n    for j in range(2 * n):\n        if colors[i] == 0:\n            colors[i] = 1\n            sizes[i] = min(sizes[i], 2 * n - 1 - colors[i])\n        elif colors[i] == 1:\n            colors[i] = 2 * n - 1"}, "1967": {"problem_id": 1967, "answer": "def main():\n    w, h = list(map(int, input().split()))\n    image = []\n    for i in range(w):\n        image.append([input().rstrip() for i in range(w)])\n    print(' '.join(map(str, image)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1968": {"problem_id": 1968, "answer": "n,v = list(map(int, input().split()))\na = []\nfor i in range(n):\n    k = int(input())\n    a.append([k, list(map(int, input().split()))])\n\nprint(len(a))\nprint(*a, sep=' ')\n\n#a = []\n#for i in range(n):\n#    k,l = list(map(int, input().split()))\n#    a.append([k, l])\n"}, "1969": {"problem_id": 1969, "answer": "import sys\ninput = sys.stdin.readline\n \nn = int(input())\nans = 0\nfor i in range(n):\n    a = input().strip()\n    ans += a.count('.')\nprint(ans)"}, "1970": {"problem_id": 1970, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    M=input().split()\n    M=list(M)\n    n=len(M)\n    x=0\n    y=0\n    for i in range(n):\n        if M[i]==\".\":\n            x+=1\n        elif M[i]==\"#\":\n            y+=1\n        else:\n            if x>y:\n                print(\"NO\")\n                break\n            x-=1\n            y-=1\n    if x>y:\n        print(\"YES\")"}, "1971": {"problem_id": 1971, "answer": "n = int(input())\np = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[p[i]] = i\nans = [-1] * n\nm = n.bit_length() + 1\nfor i in range(m):\n    ans[d[p[i]]] = -1\nfor i in range(m):\n    if ans[i] == -1:\n        ans[i] = 1\nprint(' '.join(map(str, ans)))"}, "1972": {"problem_id": 1972, "answer": "q = int(input())\nfor _ in range(q):\n    t, x, y = list(map(int, input().split()))\n    if t == 1:\n        a = list(map(int, input().split()))\n        a.insert(0, 0)\n        ans = 0\n        for i in range(x):\n            ans += a[i]\n        print(ans)\n"}, "1973": {"problem_id": 1973, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nu = list(map(int, input().split()))\nu.sort()\nc = 0\nans = 0\nfor i in range(n):\n    if u[i] == u[i+1]:\n        c += 1\n    else:\n        ans += 1\n        c = 1\n        u[i] = u[i+1]\nprint(ans)"}, "1974": {"problem_id": 1974, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nrobbins = [list(map(int, input().split())) for _ in range(n)]\nrobbins.sort(reverse=True)\nlens = [0] * n\nfor i in range(n):\n    lens[i] = robbins[i][1] - robbins[i][0]\n\ndoubles = [list(map(int, input().split())) for _ in range(m)]\ndoubles.sort(reverse=True)\npossible = 0\nfor i in range(m):\n    c, d = list(map(int, input().split()))\n    if c > d:\n        possible += 1\nprint(possible)\n"}, "1975": {"problem_id": 1975, "answer": "n, m = list(map(int, input().split()))\nb = n + 1\ng = m + 1\ns = []\nfor i in range(b):\n    s.append(i + 1)\nfor i in range(m):\n    s.append(i + 1)\nprint(len(s))\nfor i in range(len(s)):\n    if s[i] == 1:\n        print(i + 1, end=' ')\n    else:\n        print(s[i], end=' ')\n"}, "1976": {"problem_id": 1976, "answer": "import sys\ninput = sys.stdin.readline\nn, m, k, q = list(map(int, input().split()))\nbroken = set()\nbroken.add(100000000000000)\np = [[] for i in range(n)]\nfor i in range(k):\n    p[i].append(i)\nans = []\nfor i in range(0, k):\n    ans.append(p[i].count(100000000000000))\n#print(ans)\ndp = [0]*n\ndp[0] = 1\nfor i in range(1, n):\n    dp[i] = dp[i-1] + p[i].count(100000000000000)\n#print(dp)\nans = sorted(ans)\nprint(ans[-1])\n"}, "1977": {"problem_id": 1977, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nM = [[] for _ in range(n)]\nfor i in range(n):\n    M[i].append(input())\n\nans = [0] * n\nvisited = [False] * n\nans[0] = 'a'\nfor i in range(1, n):\n    for j in range(n):\n        if visited[j] == False:\n            if M[i].count(M[j][i]) == 2 * n - 1:\n                ans[i] = M[j][i]\n                visited[j] = True\n                break\nprint(''.join(ans))\n"}, "1978": {"problem_id": 1978, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nmat = []\nfor i in range(n):\n    mat.append(list(map(int, input().split())))\nm = int(input())\np = list(map(int, input().split()))\n\ng = [[] for i in range(n)]\nfor i in range(m):\n    g[p[i]].append(i+1)\n\nans = [1] * m\nd = [[] for i in range(n)]\nfor i in range(m):\n    d[p[i]].append(i+1)\n\ngood = [False] * n\ngood[0] = True\nvisited = [False] * n\nvisited[0] = True\nfor i in range(1, n):\n    if visited[i]:\n        continue\n    else:\n        visited[i] = True\n        for j in g[i]:\n            if visited[j] and good[j]:\n                good[j] = False\n                ans.append(d[j])\nprint('\\n'.join(ans))\n"}, "1979": {"problem_id": 1979, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na.sort()\nb.sort(reverse=True)\n\nprint(sum([1 for i in range(n) if a[i] == b[i]]))"}, "1980": {"problem_id": 1980, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, a = map(int, readline().split())\ntasks = list(map(int, readline().split()))\nprices = [0]*n\nfor i in range(n):\n    d, c = map(int, readline().split())\n    tasks[i] = min(d, c)\n    prices[i] = prices[i-1] + c\n\ncontest = [0]*n\ncnt = 0\nfor i in range(n):\n    if tasks[i] > tasks[contest[-1]]:\n        cnt += 1\n    else:\n        profit = prices[contest[-1] - 1] - prices[i]\n        contest.pop(contest[-1])\n        profit += cnt * c\n        cnt = 0\n        profit += profit\n        cont = [i]\n        prices[i] = prices[i-1] + profit\nprint(profit)"}, "1981": {"problem_id": 1981, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+3\nn, m = map(int, readline().split())\na = list(map(int, readline().split()))\nedges = [list(map(int, readline().split())) for _ in range(n-1)]\nvisited = [False]*n\nQ = [INF]*n\nR = [0]*n\ndef dfs(s, p):\n    nonlocal Q, R\n    visited[s] = True\n    for e in edges[s]:\n        if visited[e[0]] == False:\n            dfs(e[1], s)\n            Q[s] = e[0]\n            R[s] = e[1]\ndfs(0, -1)\nprint(Q[0])"}, "1982": {"problem_id": 1982, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    n,k = map(int,readline().split())\n    if n%2==0 and k==1:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "1983": {"problem_id": 1983, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.append(0)\n    ans=[]\n    for i in range(n):\n        ans.append(l[i])\n        l[i]=l[i]+1\n    print(max(ans))"}, "1984": {"problem_id": 1984, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nn, m, k, w = list(map(int, read().split()))\nlevels = [list(input().split()) for i in range(n)]\n\ns = 0\nd = dict()\nfor i in range(1, k+1):\n    d[i] = 0\n    s += levels[i][0]\n    for j in range(i):\n        if levels[j][0] not in d:\n            d[levels[j][0]] = 1\n            s -= levels[j][0]\n        elif levels[j][0] < d[levels[j][0]]:\n            d[levels[j][0]] += 1\nprint(w + s)\n"}, "1985": {"problem_id": 1985, "answer": "k, n = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = [0] * k\nfor i in range(k):\n    ans[i] = sum(a[:i]) - sum(b[i+1:])\nprint(ans.count(min(ans)))\n"}, "1986": {"problem_id": 1986, "answer": "import sys\ninput=sys.stdin.readline\nn,k=list(map(int,input().split()))\nl=[[0] for i in range(n)]\nfor i in range(n):\n    a,b=list(map(int,input().split()))\n    l[i]=[max(0,b-a),abs(a-b),abs(b-a)]\nprint(max(l[i]))"}, "1987": {"problem_id": 1987, "answer": "import sys\ninput = sys.stdin.readline\n\nn, c1, c2 = map(int, input().split())\ns = input()\na = [0] * 200001\nans = 0\nfor i in range(1, n):\n    if s[i] == '1':\n        a[i] = 1\n        ans += 1\nprint(ans)"}, "1988": {"problem_id": 1988, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    s=input().strip()\n    ans=[]\n    for i in range(n):\n        if s[i]!=s[i-1]:\n            ans.append(s[i])\n            s=s[1:]\n    print(''.join(ans))\n    k=n\n    for i in range(1,len(s)):\n        if s[i]!=s[i-1]:\n            k-=1\n            s=s[1:]\n        else:\n            break\n    print(k)"}, "1989": {"problem_id": 1989, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in a:\n    s.add(i)\nans = 0\nfor i in range(1, n):\n    if s & set(f'{i}'):\n        ans += 1\nprint(ans)\n"}, "1990": {"problem_id": 1990, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ns = input().rstrip()\nfor i in range(n):\n    if s[i] == \"(\":\n        s = s[1:]\n    elif s[i] == \")\":\n        s = s[0] + s[1:]\n    print(2, end=\"\")\n    if s[0] == \"(\":\n        print(1, end=\"\")\n    else:\n        print(0, end=\"\")"}, "1991": {"problem_id": 1991, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    n = int(readline())\n    ar = list(map(int, readline().split()))\n    ans = 0\n    for i in range(n):\n        ans += ar.count(i)\n    print(ans)"}, "1992": {"problem_id": 1992, "answer": "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\napp_cnt = [0] * (n + 1)\napp_cnt[0] = 1\nfor i in range(1, n + 1):\n    app_cnt[i] = app_cnt[i - 1] + 1\n    app_cnt[i - 1] = max(app_cnt[i - 2], app_cnt[i - 1])\nres = 0\nfor i in range(k):\n    curr_app_cnt = app_cnt[i]\n    curr_app_cnt_swap = 0\n    curr_scr = i + 1\n    curr_bscr = b[i]\n    curr_bscr_swap = 0\n    curr_bscr_swap_idx = i\n    while curr_bscr_swap_idx < n:\n        curr_bscr_swap += 1\n        curr_bscr_swap_idx = curr_bscr_swap_idx + 1\n    curr_app_cnt[curr_bscr_swap_idx] = curr_app_cnt[curr_bscr_swap]\n    app_cnt[curr_bscr_swap_idx] = curr_app_cnt[curr_bscr_swap]\n    app_cnt[curr_bscr_swap].pop()\n    app_cnt[curr_bscr_swap].insert(0, i)\n    app_cnt[curr_bscr_swap].extend(curr_app_cnt)\n    app_cnt[curr_bscr_swap].sort()\n    app_cnt[curr_bscr_swap].pop()\n    app_cnt[curr_bscr_swap].extend(curr_app_cnt)\n    app_cnt[curr_bscr_swap].insert(0, i)\n    app_cnt[curr_bscr_swap].extend(curr_app_cnt)\n    app_cnt[curr_bscr_swap].sort()\n    app_cnt[curr_bscr_swap].pop()\n    app_cnt[curr_bscr_swap].extend(curr_app_cnt)\n    app_cnt[curr_bscr_swap].insert(0, i)\n    app_cnt[curr_bscr_swap].extend(curr_app_cnt)\n    app_cnt[curr_bscr_swap].sort()\n    app_cnt[curr_bscr_swap].pop()\n    app_cnt[curr_bscr_swap].extend(curr_app_cnt)\n    app_cnt[curr_bscr_swap].insert(0, i)\n    app_cnt[curr_bscr_swap].extend(curr_app_cnt)\n    app_cnt[curr_bscr_swap].insert(0, i + 1)\n    app_cnt[curr_bscr_swap].extend(curr_app_cnt)\n    app_cnt[curr_bscr_swap].insert(0, i + 1)\n    app_cnt[curr_bscr_swap].extend(curr_app_cnt)\n    app_cnt[curr_bscr_swap].insert(0, i + 1)\n    app_cnt[curr_bscr_swap].ext"}, "1993": {"problem_id": 1993, "answer": "MOD = 1000000007\nn, m = list(map(int, input().split()))\nA = [0] * (n + 1) * (m + 1)\nfor i in range(1, n + 1):\n    A[i] = 1\n    for j in range(1, m + 1):\n        A[i] += A[i - 1] * (j - A[i - 1])\nprint(''.join(map(str, A)))\n"}, "1994": {"problem_id": 1994, "answer": "s=input()\nn=len(s)\nans=[]\nfor i in range(n):\n    ans.append(s[i].count('a'))\nprint(max(ans),end=' ')\nfor i in range(1,n):\n    if s[i]==s[i-1]:\n        ans.append(1)\n        continue\n    for j in range(i):\n        if s[i]==s[j]*2:\n            ans.append(ans[i-1]+ans[j-1])\n            ans[i]+=ans[j-1]\n            ans[j]+=ans[i-1]\n            break\nprint(ans)"}, "1995": {"problem_id": 1995, "answer": "s = input()\nm = int(input())\nans = []\nfor i in range(m):\n    l, r, k = list(map(int, input().split()))\n    ans.append(s[l] * k * (k - 1) // 2 + s[r] * k * (k + 1) // 2)\nprint(''.join(ans))\n"}, "1996": {"problem_id": 1996, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nt = [list(map(int, input().split())) for i in range(n)]\n\ns = \"?\"\nd = \"!\"\ne = \"!\"\n\nans = 0\nfor i in range(n):\n    if t[i][1] == \"s\":\n        s = t[i][0]\n    elif t[i][1] == \"d\":\n        d = t[i][0]\n    elif t[i][1] == \"e\":\n        e = t[i][0]\n    ans += 1\n\nprint(ans)\n"}, "1997": {"problem_id": 1997, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    tree = [[] for _ in range(n)]\n    for i in range(n-1):\n        a, b = list(map(int, readline().split()))\n        tree[a].append(b)\n        tree[b].append(a)\n    m = [0]*(n+1)\n    m[1] = 1\n    dp = [0]*(n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        for j in range(1, min(i, n)):\n            m[j] = max(m[j], dp[j-1] + tree[j][i])\n        dp[i] = m[i]\n    print(dp[n])\n\nmain()\n"}, "1998": {"problem_id": 1998, "answer": "import sys\nread = sys.stdin.readline\nreadline = lambda: int(read())\nn,a,b,k=readline().split()\ns=list(map(int,readline().split()))\ns.sort()\nh=n*min(a,b)\nfor i in range(k):\n    h+=min(a,b)\nprint(h)\nfor i in range(1,n):\n    if s[i]-s[i-1]!=0:\n        print(s[i],end=\" \")\n    else:\n        print(s[i])"}, "1999": {"problem_id": 1999, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\ncnt = 0\nres = []\nfor i in a:\n    if i not in res:\n        res.append(i)\n        cnt += 1\nprint(cnt)\nprint(*res)"}, "2000": {"problem_id": 2000, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[i] + a[j] == 2:\n            cnt += 1\nprint(cnt)"}, "2001": {"problem_id": 2001, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+7\nn, q = map(int, readline().split())\ns = list(map(int, readline().split()))\ns.sort()\nfor i in range(q):\n    l, r = map(int, readline().split())\n    print(s[l-1]*s[r-1]%MOD)"}, "2002": {"problem_id": 2002, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nfact = [1]*int(10**5+7)\nfact[1] = 6\nfor i in range(2,len(fact)):\n    fact[i] = fact[i-1]*i%MOD\nn = int(input())\nx = list(map(int,input().split()))\nd = [[] for i in range(n)]\nfor i in range(n-1):\n    a,b = list(map(int,input().split()))\n    d[a-1].append(b-1)\n    d[b-1].append(a-1)\ns = 0\nfor i in range(n):\n    s += sum(x[i]*fact[d[i][j]%MOD] for j in range(n))\nprint(s%MOD)"}, "2003": {"problem_id": 2003, "answer": "import sys\nreadline = sys.stdin.readline\n\nQ = int(readline())\nfor _ in range(Q):\n    a = list(map(int, readline().split()))\n    a.sort()\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    ans = d['?']\n    ans //= 2\n    print(ans)\n"}, "2004": {"problem_id": 2004, "answer": "n = int(input())\nans = []\nfor i in range(1, n + 1):\n    ans.append(i)\nprint(min(ans))\nprint(*ans)"}, "2005": {"problem_id": 2005, "answer": "import sys\ninput = sys.stdin.readline\n\nn, n1, n2 = map(int, input().split())\na = list(map(int, input().split()))\np = n2*n1\nans = 0\nfor i in range(n1):\n    ans += a[i]\n    m = p//n1\n    p %= n1\n    ans += (m*m)//n2\n    m %= n2\nprint(ans)"}, "2006": {"problem_id": 2006, "answer": "n, m = list(map(int, input().split()))\nmat = []\nfor i in range(n):\n    mat.append(input())\ns = 0\nd = 0\ni = 0\nwhile i < n:\n    s += 1\n    if mat[i][0] == 'S':\n        d += 1\n    elif mat[i][0] == '*':\n        s -= 1\n    else:\n        i += 1\n        if i == n:\n            break\nprint(s)\n"}, "2007": {"problem_id": 2007, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\ns=input().rstrip()\nedges=[]\nfor i in range(n):\n    edges.append([i+1,s[i]])\nans=0\nfor i in range(m):\n    x,y=list(map(int,input().split()))\n    edges[x].append(y)\n    edges[y].append(x)\n    ans+=max(edges[x][0])\n    ans-=max(edges[y][0])\nprint(ans)\n"}, "2008": {"problem_id": 2008, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = []\nb = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n    b.append(list(map(int, input().split())))\n\nans = float('inf')\nm = 0\nfor i in range(n):\n    ans = min(ans, a[i][1]*b[i])\n    m = min(m, b[i][1])\n\nprint(ans+m)"}, "2009": {"problem_id": 2009, "answer": "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\n\nn = int(input())\nland = [list(map(int, input().split())) for i in range(n)]\nwater = [list(map(int, input().split())) for i in range(n)]\nland.sort()\nwater.sort()\nans = 0\nfor i in range(n):\n    ans += land[i][0] - land[i][1]\n    ans += water[i][0] - water[i][1]\nprint(ans)"}, "2010": {"problem_id": 2010, "answer": "def solve():\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = [[0] * (n + 1) for _ in range(m + 1)]\n    for i in range(1, m + 1):\n        b[i][0] = a[i - 1] + a[i - 1] * y[i]\n        b[i][1] = a[i - 1]\n        b[i][2] = 0\n        for j in range(i - 1, -1, -1):\n            b[i][j] = max(b[i][j - 1], b[i - 1][j - 1] + y[i])\n        print(b[i][-1])\n        b[i][-1] += y[i]\n        \nsolve()\n"}, "2011": {"problem_id": 2011, "answer": ""}, "2012": {"problem_id": 2012, "answer": "from collections import defaultdict\nn=int(input())\ns=input()\nd={}\nfor i in range(n):\n    d[s[i]]=1\n    for j in range(i,n):\n        if s[j] not in d:\n            d[s[j]]=1\n            d[s[i]]+=1\nc=defaultdict(int)\nfor i in range(n):\n    c[d[s[i]]]=i+1\nprint(''.join(c.values()))"}, "2013": {"problem_id": 2013, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\nA = [[0] * (m + 1) for _ in range(n + 1)]\nfor _ in range(k):\n    x, y = list(map(int, input().split()))\n    A[x[0] + y[0], x[1] + y[1]] = x, y\n\nans = []\nfor i in range(1, n + 1):\n    ans.append((sum(A[i - 1][j] for j in range(m + 1))))\n\nif 2 * n + 2 * m <= k:\n    print(-1)\n    return\n\nd = [[0] * (k + 1) for _ in range(2 * n + 2 * m)]\nfor i in range(len(ans)):\n    for j in range(k):\n        if ans[i][j] >= 2 * n + 2 * m:\n            d[i][j] = 1\n            break\n\nvisited = [False] * (2 * n + 2 * m)\nq = [i for i in range(2 * n + 2 * m)]\nans = []\nfor i in range(k):\n    if visited[q[i]] == False:\n        visited[q[i]] = True\n        q[i] = min(q[i], q[i + 1])\n        ans.append(d[q[i]][q[i + 1]])\n\nprint(len(ans))\nprint(''.join(map(str, ans)))\n"}, "2014": {"problem_id": 2014, "answer": "def main():\n    n, k = list(map(int, input().split()))\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, n + 1):\n            dp[i][j] = dp[i - 1][j - 1] + 1\n    print(max(dp[n], dp[n - 1]))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2015": {"problem_id": 2015, "answer": "from collections import deque\nt = int(input())\nfor _ in range(t):\n    r, g, b = map(int, input().split())\n    if r*g + b > 987+10:\n        print(\"Yes\")\n    else:\n        print(\"No\")"}, "2016": {"problem_id": 2016, "answer": "import sys\nreadline = sys.stdin.readline\n\nQ, M = map(int, readline().split())\nt, h = [0]*3,[0]*3\nfor _ in range(Q):\n    k, a, b = map(int, readline().split())\n    t[a] += k\n    h[b] += k\n    if t[a] >= t[b]:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "2017": {"problem_id": 2017, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\nn = int(input())\na, b = [], []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n    b.append(list(map(int, input().split())))\ninv = 0\nfor i in range(1, 10 ** 6 + 1):\n    inv += a[i] * b[i]\n    inv %= 2\nprint(inv)\n"}, "2018": {"problem_id": 2018, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, q = list(map(int, input().split()))\n\nans = [0] * (n + 1)\nans[1] = 1\nfor i in range(q):\n    sx, sy, ex, ey = list(map(int, input().split()))\n    if sx == 1 and sy == 1:\n        continue\n    else:\n        cx, cy = ex + 1, ey + 1\n        if cx % n == cy % m:\n            print('YES')\n            ans[n] = 1\n        elif cx % n == cy % m:\n            print('NO')\n            ans[m] = 1\n        else:\n            ans[2 * n] = 1\n"}, "2019": {"problem_id": 2019, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    s=input().strip()\n    if s[0]==\"0\" and s[len(s)-1]==\"1\":\n        print(\"DA\")\n    else:\n        print(\"NET\")"}, "2020": {"problem_id": 2020, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\nalarm = []\nfor i in range(n):\n    x, y = map(int, read().split())\n    alarm.append((x, y))\nalarm.sort()\nans = 10**10\ncnt = 0\ni = 0\nwhile i < n:\n    ans = min(ans, alarm[i][1] + 1)\n    cnt += 1\n    i += 1\nprint(ans)"}, "2021": {"problem_id": 2021, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nm = int(input())\nq = list(map(int, input().split()))\n\ncou = 0\nans = []\nfor i in range(m):\n    ans.append(cou)\n    cou += a[i]\nprint(*ans)"}, "2022": {"problem_id": 2022, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\ne = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v = list(map(int, input().split()))\n    e[u-1].append(v-1)\n    e[v-1].append(u-1)\n\ng = collections.defaultdict(list)\nfor i in range(n):\n    g[i] += e[i]\n\nans = [0] * n\nq = [i for i in range(n)]\nqi = [i for i in range(n)]\ncnt = [0] * n\nwhile q:\n    v = q[-1]\n    for u in e[v]:\n        if cnt[u] == 0:\n            ans[v] = 1\n            q.append(u)\n            cnt[u] += 1\n            if cnt[u] == k//2:\n                ans[v] += 1\nprint('\\n'.join(map(str, ans)))\n"}, "2023": {"problem_id": 2023, "answer": "import sys\nreadline = sys.stdin.readline\n \nn, m = list(map(int, readline().split()))\na = list(map(int, readline().split()))\nb = list(map(int, readline().split()))\n \ndef is_valid(x, y):\n    return 0 <= x < n and 0 <= y < n\n \nfor _ in range(m):\n    q, x, y = list(map(int, readline().split()))\n    if q == 1:\n        a[y] += x\n    elif q == 2:\n        b[y] += x\n    else:\n        print(a[y])\n        \n"}, "2024": {"problem_id": 2024, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 998244353\nn = int(input())\na = list(map(int, input().split()))\nm = pow(10,9) + 1\nfor i in range(n):\n    if a[i] == 1:\n        m = (m*(m+1))//2 % MOD\n    elif a[i] > 1:\n        m = (m*(m+1))//2 % MOD\nprint(m)"}, "2025": {"problem_id": 2025, "answer": "import sys\nread = sys.stdin.readline\n\ndef primefac(n):\n    if n <= 2:\n        return 1\n    elif n <= 3:\n        return 0\n    else:\n        i = 5\n        while i * i <= n:\n            if n % i == 0:\n                return 0\n            i += 6\n        return 1\n\n\nt = int(read())\nfor _ in range(t):\n    n = int(read())\n    print(primefac(n))\n"}, "2026": {"problem_id": 2026, "answer": "n = int(input())\ns = input()\na = [0] * n\na[0] = 1\nfor i in range(1, n):\n    if s[i] == 'L':\n        a[i] = 1\n    elif s[i] == 'R':\n        a[i] = 2\n    else:\n        a[i] = 3\nprint(sum(a))"}, "2027": {"problem_id": 2027, "answer": "n = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\nprint(' '.join(map(str, a)))"}, "2028": {"problem_id": 2028, "answer": "import sys\nreadline = sys.stdin.readline\nmod = 10**9+7\nn = int(readline())\nans = 0\nfor i in range(n):\n    a, b = list(map(int, readline().split()))\n    ans += a*b\n    ans %= mod\nprint(ans)"}, "2029": {"problem_id": 2029, "answer": "import sys\ninput = sys.stdin.readline\n\nn, s = list(map(int, input().split()))\nedges = []\nfor _ in range(n-1):\n    a, b = list(map(int, input().split()))\n    edges.append((a, b))\n\nedges.sort()\nsums = [0] * n\nd = 0\nstack = []\nfor edge in edges:\n    if len(edge) == 1:\n        continue\n    cur = edge[0]\n    stack.append((cur, sums[cur]))\n    sums[cur] += edge[1]\n    d += 1\nprint(min(d, sums[0]))\n"}, "2030": {"problem_id": 2030, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\na = list(map(int, readline().split()))\nb = list(map(int, readline().split()))\nans = [0]*n\nfor i in range(n):\n    ans[i] = max(a[i], b[i])\nprint(' '.join(map(str, ans)))"}, "2031": {"problem_id": 2031, "answer": ""}, "2032": {"problem_id": 2032, "answer": ""}, "2033": {"problem_id": 2033, "answer": ""}, "2034": {"problem_id": 2034, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+3\nns = lambda:list(map(int, readline().split()))\nni = lambda:int(readline())\nnm = lambda:map(int, readline().split())\nnl = lambda:list(map(int, readline().split()))\nprn = lambda x:next(iter(x for x in range(1,x) if x%2==0))\npra = lambda:pri(ni())\nrna = lambda:repr(nm())\nna = lambda:map(int, readline().split())\nnaa = lambda:map(int, readline().split(1))\nnbal = lambda:nb(ns())\nnbal1 = lambda:nb(ns())\ninf = float('inf')\nprint(min(nbal()))"}, "2035": {"problem_id": 2035, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+3\nn, sx, sy = map(int, readline().split())\nL = [list(map(int, readline().split())) for _ in range(n)]\nL.sort()\nc = INF\np1 = INF\np2 = INF\nfor i in range(n):\n    x1, y1 = L[i]\n    if x1-sx < 0:\n        x1 -= sx\n    elif x1-sy < 0:\n        x1 -= sy\n    else:\n        p1 = max(p1, abs(x1-sx))\n        p2 = max(p2, abs(x1-sy))\nprint(p1+p2)"}, "2036": {"problem_id": 2036, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m,sx,sy = list(map(int,input().split()))\n\nans = [[] for i in range(n+2)]\nfor i in range(2,n+2):\n    ans[i].append((sx,sy))\n\nfor i in range(2,n+2):\n    for j in range(i):\n        ans[i].append((max(0,i-2),min(n,i+2-sx)+(sx+1),j))\n\nfor i in range(2,n+2):\n    for j in range(i):\n        print(ans[i][j][0],ans[i][j][1])\n"}, "2037": {"problem_id": 2037, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nd = list(map(int, input().split()))\nd.sort()\np = [0] * (n + 1)\nfor i in range(1, n + 1):\n    p[d[i]] = 1\n    \nr = 0\ncnt = 0\nfor i in range(m):\n    if p[i] == 1:\n        r += 1\n        cnt += 1\n    else:\n        print(0)\n        break"}, "2038": {"problem_id": 2038, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 0\nfor i in range(n):\n    if a[i] < n//2:\n        m += 1\n    else:\n        break\nprint(m)\nfor i in range(m):\n    print(a[i], end=' ')"}, "2039": {"problem_id": 2039, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if a[i] < a[i - 1] and a[i] > a[i + 1]:\n        cnt += 1\nprint(cnt)\n"}, "2040": {"problem_id": 2040, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\na = list(map(int,read().split()))\nif n%2==0:\n    print(''.join(map(str,a[1:])))\nelse:\n    print(''.join(map(str,a[1:]).split()[:n]))"}, "2041": {"problem_id": 2041, "answer": ""}, "2042": {"problem_id": 2042, "answer": "import sys\nimport heapq as hq\ninput = sys.stdin.readline\nn,m,k=list(map(int,input().split()))\na=[[]for i in range(n)]\nfor i in range(n):\n    a[i].append(input().rstrip(\"\\n\"))\na.sort()\nb=[[]for i in range(n)]\nfor i in range(n):\n    b[i].append(i)\nvisited=[0 for i in range(n)]\nvisited[0]=1\nhq.heapify(a)\nhq.heapify(b)\nans=0\nwhile k>0:\n    x,y=hq.heappop(a)\n    y-=1\n    if visited[x]==0:\n        visited[x]=1\n        hq.heappush(a,(x,y+1))\n        ans+=1\n        hq.heappush(b,(x+1,y+1))\n    elif visited[x]==1:\n        break\n    k-=1\nprint(ans)\n"}, "2043": {"problem_id": 2043, "answer": "s=input()\nt=input()\nn=len(s)\nm=len(t)\nif n==m:\n    print(0)\nelse:\n    c=0\n    for i in range(n):\n        if s[i]==t[i]:\n            c+=1\n    print(c)"}, "2044": {"problem_id": 2044, "answer": "n,m=map(int,input().split())\na=list(map(int,input().split()))\nb=n.bit_length()\nfor i in range(b):\n    a[i]=sum(a[i:i+m])+1\nprint(' '.join(map(str,a)))"}, "2045": {"problem_id": 2045, "answer": "n = int(input())\ns = input()\na = []\nfor i in range(n):\n    a.append(s[i].lower())\na.sort()\nb = []\nfor i in range(n):\n    b.append(a[i][1:])\nb.sort()\nprint(''.join(b))"}, "2046": {"problem_id": 2046, "answer": "import math\ndef is_ok(snacks,n):\n    if snacks[0]>snacks[1]:\n        return False\n    elif snacks[0]<snacks[1]:\n        return True\n    else:\n        return is_ok(snacks[1:],n)\nd=int(input())\nsnacks=list(map(int,input().split()))\nsnacks.sort()\nt=0\nfor i in snacks:\n    t+=i\n    if is_ok(snacks,t):\n        print(snacks[t],end=' ')\n    else:\n        print(snacks[t],end=' ')\n    sn=snacks.pop()\n"}, "2047": {"problem_id": 2047, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na.sort()\nb.sort()\nl = [0]*(100001)\nfor i in range(1, n):\n    l[i] = bl(a[i], b[i] + 1)\n    l[i] %= 100001\n\ndef check(x):\n    if l[x]!= 0:\n        return False\n    for i in range(x + 1):\n        if l[i]!= 0:\n            return False\n    return True\n\nprint(('YES' if check(0) else 'NO'))"}, "2048": {"problem_id": 2048, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\nans = min(c[i] for i in range(n))\nprint(ans)\n"}, "2049": {"problem_id": 2049, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nans = []\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n    ans.append((l, r))\n\nfor i in range(n):\n    if A[i] < l or A[i] > r:\n        print(\"No\")\n        return\n\nfor i in range(m):\n    l, r = ans[i]\n    if l == i + 1 and r == i + 2:\n        print(\"Yes\")\n        return\n\nprint(\"No\")\n"}, "2050": {"problem_id": 2050, "answer": "n, k = map(int, input().split())\nif k == 1:\n    print(4)\nelif k == 2:\n    print(6)\nelse:\n    m = 4\n    for i in range(2, k):\n        m = min(m, n - i)\n    print(m)"}, "2051": {"problem_id": 2051, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\nleft = sorted(c)\nright = sorted(c, reverse=True)\n\nres = m + 2\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n    if l > r:\n        res = min(res, i - left[r] - i - 1)\n    else:\n        res = min(res, i - left[l] - i - 1)\n\nprint(res)\n"}, "2052": {"problem_id": 2052, "answer": "w,l = map(int, input().split())\na = list(map(int, input().split()))\nans = 0\nfor i in range(1, w - 1):\n    if a[i] > i:\n        ans += 1\nprint(ans)"}, "2053": {"problem_id": 2053, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nb = list(map(int, input().split()))\nswap = []\nfor i in range(n):\n    swap.append([])\nfor i in range(m):\n    swap.append([])\nfor i in range(n):\n    swap[i].append(i)\nans = 0\ncnt = 0\nfor i in range(n):\n    if a[i] - b[i] > swap[i][-1]:\n        cnt += 1\n        ans = swap[i][-1]\n        for j in range(i, n):\n            if a[j] - b[i] > swap[i][j]:\n                cnt += 1\n                ans = swap[i][j]\n                swap[i].pop(j)\n                break\nprint(ans)\nprint(cnt)"}, "2054": {"problem_id": 2054, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor _ in range(t):\n    a, b = list(map(int, readline().split()))\n    print(max(a-2, b-1))\n"}, "2055": {"problem_id": 2055, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    print(\"YES\" if sum(a)>=b else \"NO\")"}, "2056": {"problem_id": 2056, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\nans = 0\nfor i in range(1, 2 * 10**5 + 1):\n    if a[i] not in d:\n        continue\n    ans = max(ans, sum(a[i:i+2]))\nprint(ans)"}, "2057": {"problem_id": 2057, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nt = list(map(int, readline().split()))\nans = min(t)\nprint(ans)"}, "2058": {"problem_id": 2058, "answer": "a = input()\nb = input()\nc = 0\nfor i in range(len(a)):\n    c += abs(a[i] - b[i])\nprint(c)"}, "2059": {"problem_id": 2059, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] > i+1:\n        ans = i+1\nprint(ans)"}, "2060": {"problem_id": 2060, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nfor i in range(n):\n    x = int(readline())\n    if x == x//3:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "2061": {"problem_id": 2061, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = map(int, input().split())\nL = [0] * 50\nfor i in range(n):\n    c = input()\n    if c[0] == '*':\n        L[i] = 1\n    elif c[0] == '.':\n        L[i] = 0\nprint(k + min(m, n - k))\nfor i in range(n):\n    print(L[i] + k)"}, "2062": {"problem_id": 2062, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = sum(a)\nd = m // a[-1]\np = a[-1]\nans = 0\nfor i in range(n):\n    if d % p == 0:\n        ans += p\n        d //= p\nprint(ans)"}, "2063": {"problem_id": 2063, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, w = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nh = [0] * (m + 1)\nans = 0\nfor i in range(1, m + 1):\n    h[i] = a[i - 1] + h[i - 1]\n    ans = max(ans, h[i])\n\nprint(ans)\n"}, "2064": {"problem_id": 2064, "answer": "n = int(input())\nm = 0\nfor i in range(1,n+1):\n    if i%9==0:\n        m+=1\nprint(m)"}, "2065": {"problem_id": 2065, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\ng = [[] for _ in range(n)]\nancestors = {}\nfor i in range(1, n+1):\n    g[i].append(i)\n\nfor _ in range(m):\n    p, q = map(int, input().split())\n    p -= 1\n    q -= 1\n    if p not in ancestors:\n        ancestors[p] = q\n    else:\n        ancestors[p] = ancestors[q]\n\nprint(n-max(ancestors.keys()))\nfor a, b in zip(list(range(1, n+1), list(range(1, n+1))):\n    a, b = a-1, b-1\n    if a not in ancestors:\n        continue\n    if b not in ancestors:\n        ancestors[b] = a\n    else:\n        ancestors[b] = ancestors[a]\n\nprint(' '.join('{} {}'.format(p, ancestors[p]) for p in range(1, n+1)))"}, "2066": {"problem_id": 2066, "answer": "t = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    ans = []\n    for i in range(n):\n        if s[i] not in 'abcdefghijklmnopqrstuvwxyz':\n            ans.append(s[i])\n    print(''.join(ans))\n"}, "2067": {"problem_id": 2067, "answer": ""}, "2068": {"problem_id": 2068, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nc = [0] * 25\nfor i in range(n):\n    c[ord(input()) - 97] += 1\n\na = [0] * 25\ns = input()\nans = 0\nfor i in s:\n    a[i.lower()].append(i)\n    ans += len(a[i.lower()])\n\nprint(max(ans, 25))"}, "2069": {"problem_id": 2069, "answer": "foe = []\nn, m = [int(i) for i in input().split()]\np = [int(i) for i in input().split()]\nfor i in range(1, n):\n    for j in range(i):\n        p[j] = p[j] - 1\nans = 0\nfor i in range(m):\n    a, b = [int(i) for i in input().split()]\n    a -= 1\n    b -= 1\n    ans += p[a] - p[b]\nprint(ans)\n"}, "2070": {"problem_id": 2070, "answer": "from collections import deque\na = [int(i) for i in input().split()]\ns = input()\nn = len(s)\nc = [0]*26\nfor i in range(n):\n    if s[i] not in a:\n        c[ord(s[i])-97] += 1\nans = 0\nd = deque()\nd.append(0)\nwhile d:\n    ans += c[d[0]]\n    d.popleft()\n    for i in range(1, len(d)):\n        if d[i] == 0:\n            d.append(i)\n            if c[ord(s[i])-97] > 0:\n                c[ord(s[i])-97] -= 1\n            else:\n                break\nprint(ans)"}, "2071": {"problem_id": 2071, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\na = list(map(int,read().split()))\nb = list(map(int,read().split()))\ndef fun(i):\n    nonlocal c\n    c += a[i]*b[i]\n    return c\nans = fun(0)\nprint(ans)"}, "2072": {"problem_id": 2072, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nx = list(map(int, input().split()))\nv = list(map(int, input().split()))\n\nd = [0]*n\nfor i in range(n):\n    d[i] = min(d[i-1], v[i])\n\nans = float('inf')\nfor i in range(n):\n    ans = min(ans, d[i] + v[i]*1j)\nprint(ans)\n"}, "2073": {"problem_id": 2073, "answer": "mod = 10**9 + 7\nfrom sys import stdin\ninput = stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\np = [0] * (n+1)\nfor i in range(1, n+1):\n    p[i] = p[i-1] + a.count(i)\n\nans = 1\nfor i in range(n):\n    ans = (ans * (p[i] - p[i-1])) % mod\n    ans = (ans * pow(2, i, mod-2, mod) % mod) % mod\nprint(ans)\n"}, "2074": {"problem_id": 2074, "answer": "import sys\nn,m=list(map(int,input().split()))\na=[]\nfor i in range(n):\n    a.append(list(map(int,input().split())))\nans=sys.stdin.readline().split()[1]\nd=set()\nfor i in range(n):\n    for j in range(m):\n        if i==ans[j]:\n            d.add(i)\n            d.add(j)\nprint(sum(d))\n"}, "2075": {"problem_id": 2075, "answer": "n, m = map(int, input().split())\ns = input()\np = []\nq = []\nfor i in range(m):\n    if s[i] == '(':\n        p.append(i)\n    elif s[i] == ')':\n        q.append(i)\nans = 1\nfor i in range(len(p)):\n    ans *= len(p) - i\n    ans %= 1000000007\nprint(ans)"}, "2076": {"problem_id": 2076, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    a,b,c=list(map(int,input().split()))\n    d=min(a,b,c)\n    print(d*2)\n"}, "2077": {"problem_id": 2077, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nedges = [[] for i in range(n)]\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    edges[a-1].append(b-1)\n    edges[b-1].append(a-1)\n\nt = list(map(int, input().split()))\nans = [-1] * n\nans[t[0]] = 0\ncur = [0] * n\nvisited = set()\nwhile t:\n    c = cur[t[0]]\n    visited.add(c)\n    for i in edges[c]:\n        if i not in visited:\n            visited.add(i)\n            cur[i] += 1\n            ans[t[0]] = min(ans[t[0]], i)\n            ans[i] = max(cur[i], c)\nprint(*ans)\n"}, "2078": {"problem_id": 2078, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nseg = []\nfor i in range(n):\n    x, y, lx, rx = list(map(int, input().split()))\n    seg.append((x, y, lx, rx))\n\nseg.sort()\n\ns = 10**6\np = 10**6\n\ncnt = 0\nfor i in range(m):\n    s = s * (seg[i][0] - seg[i][2])\n    p = min(p, s)\n    cnt += (p-seg[i][2])*(seg[i][1]-seg[i][0])\n\nprint(cnt)\n"}, "2079": {"problem_id": 2079, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nw = list(map(int,input().split()))\nst = input()\nseats = [0]*n\nfor i in range(n):\n    seats[i] = st.count('1')\n    \nans = [n]*n\nans[0] = 2*n-1\nfor i in range(1,n):\n    ans[i] = ans[i-1] + 2*n-i-1\nprint(*ans)"}, "2080": {"problem_id": 2080, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    q = int(readline())\n    \n    adj = [[] for _ in range(1000001)]\n    for _ in range(q):\n        n = int(readline())\n        adj[n].append(n)\n        \n    dp = [0]*1000001\n    vis = [0]*1000001\n    s = set()\n    for i in range(1,1000001):\n        dp[i] = vis[i] + dp[i-1]\n        vis[i] = 1\n        s.add(i)\n    "}, "2081": {"problem_id": 2081, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i] - min(a[i:])\nprint(s)"}, "2082": {"problem_id": 2082, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nadj = [[] for _ in range(n)]\nfor _ in range(m):\n    x, y = map(int, input().split())\n    adj[x].append(y)\n    adj[y].append(x)\n\nans = 0\nf = [0] * n\nf[0] = 1\nfor i in range(1, n):\n    ans += f[i] * adj[i[0]][i]\n    f[i] = ans / n\n\nprint(ans)"}, "2083": {"problem_id": 2083, "answer": ""}, "2084": {"problem_id": 2084, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\nfor i in a:\n    s += i\nprint(s)"}, "2085": {"problem_id": 2085, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\nfor i in range(n):\n    d[a[i]] = i\n\nans = 0\nm = max(a)\nfor i in range(n):\n    if d[a[i]]!=i:\n        ans = max(ans, m+2**i)\n\nprint(ans)"}, "2086": {"problem_id": 2086, "answer": "n = int(input())\nt = list(map(int, input().split()))\ns, f = list(map(int, input().split()))\na = [t[i] for i in range(n)]\na.sort()\nb = [0]*n\nfor i in range(n-1) :\n    b[a[i]-1] += 1\nif s == 1 or b[s-1] > n//2 :\n    print(f)\nelse :\n    print(s)"}, "2087": {"problem_id": 2087, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 998244353\n\nA = list(map(int, readline().split()))\nB = list(map(int, readline().split()))\nC = list(map(int, readline().split()))\nd = pow(B, MOD-2, MOD)\ne = pow(C, MOD-2, MOD)\nprint(sum(d*e%MOD for i in range(A)))"}, "2088": {"problem_id": 2088, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+5\nns = lambda: list(map(int, readline().split()))\nni = lambda: int(readline())\nnm = lambda: map(int, readline().split())\nnl = lambda: list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\nipnl = lambda: print(nl())\nofl = lambda: print(ipnl())\n\nn = ni()\nc = [0]*n\nans = set()\nfor i in range(1, n+1):\n    ans.add(i)\n    for j in ns():\n        if i+j<n:\n            c[i+j] = 1\n        elif i+j==n:\n            c[i+j] = 0\n        else:\n            c[i+j] = min(c[i+j-1], 1)\nprint(*ans, sep='\\n')\n"}, "2089": {"problem_id": 2089, "answer": "from collections import deque\nn,m,s,t = list(map(int,input().split()))\ng = [set() for i in range(n+1)]\nfor i in range(m):\n    u,v = list(map(int,input().split()))\n    g[u].add(v)\n    g[v].add(u)\nans = 0\nd = deque()\nd.append(s)\nwhile d:\n    c = d.popleft()\n    for i in g[c]:\n        if i not in d:\n            d.append(i)\n            ans += 1\nprint(ans)\n"}, "2090": {"problem_id": 2090, "answer": "n,k = map(int,input().split())\na = sorted([s[i] for i in range(n)])\nb = sorted([s[i] for i in range(n) if s[i]!=s[i-1]])\nans = 0\nfor i in range(k):\n    ans += a[k-1]*b[i]\nprint(ans)"}, "2091": {"problem_id": 2091, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    s=input().rstrip()\n    if s[-1]==\"b\" or s[-1]==\"y\":\n        print(s)\n    else:\n        a=s[0]\n        b=s[-1]\n        if a==b:\n            print(a)\n        elif a!=b:\n            print(a+b)"}, "2092": {"problem_id": 2092, "answer": "m, n, k, t = list(map(int, input().split()))\na = list(map(int, input().split()))\ntrav = dict()\nfor i in range(m):\n    if a[i] in trav:\n        trav[a[i]] += 1\n\npossible = list(range(n + 1))\nmaxi = 0\nfor i in possible:\n    if a[i] not in trav:\n        continue\n    else:\n        x, y = abs(a[i]), abs(a[i] + 1)\n        if x + 1 in trav.keys() \\\n        or y + 1 in trav.keys() \\\n        or x - 1 in trav.keys() \\\n        or y - 1 in trav.keys():\n            maxi = max(maxi, t)\nprint(maxi)\n"}, "2093": {"problem_id": 2093, "answer": "import sys\ndef II(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\nsys.setrecursionlimit(10**9)\nn=II()\na=LI()\ns=[0]*n\nfor i in range(n):\n    s[i]=a[i]+1\nc=0\nfor i in range(n):\n    for j in range(i+1,n):\n        if s[j]==s[i]:\n            c+=1\nprint(c)\n"}, "2094": {"problem_id": 2094, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+7\nn, k = map(int, readline().split())\nA = list(map(int, readline().split()))\nC = [0]*n\nfor i in range(n):\n    C[i] = A[i] + C[i+1]\nans = 0\nfor i in range(k):\n    ans += sum(C[i:i+k])\nprint(ans)"}, "2095": {"problem_id": 2095, "answer": "n = int(input())\nmatrix = []\nfor i in range(n):\n    matrix.append([int(x) for x in input().split()])\n\nfor i in range(n):\n    if matrix[i][i] == -1:\n        continue\n    elif matrix[i][i] == 0:\n        print(i)\n        continue\n    else:\n        cnt = 0\n        for j in range(i+1, n):\n            if matrix[j][i] == 2:\n                cnt += 1\n        print(cnt)"}, "2096": {"problem_id": 2096, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(1, 100):\n    if a.count(a[i]) == 1:\n        ans += 2\n    elif a.count(a[i]) == 2:\n        ans += 1\nprint(ans)\nprint(*a)"}, "2097": {"problem_id": 2097, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    if sum(a)==0:\n        print(0)\n    elif product(a)==0:\n        print(0)\n    else:\n        ans=0\n        for i in range(n):\n            if a[i]==0:\n                ans+=1\n            else:\n                ans+=a[i]*2\n        print(ans)"}, "2098": {"problem_id": 2098, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nadj = [[] for _ in range(n)]\nfor i in range(n-1):\n    a, b = map(int, input().split())\n    adj[a-1].append(b-1)\n    adj[b-1].append(a-1)\n\nans = [0] * n\nvisited = set()\nans[0] = 1\ncur = [0]\nwhile visited:\n    v = visited.pop()\n    for u in adj[v]:\n        if ans[u]!= 0:\n            cur[v] = 1\n            ans[u] = 0\n            vis.add(u)\n            visited.add(v)\n        elif visited:\n            break\n    visited.add(v)\n\nprint('YES\\n' +''.join(map(str, cur)))\n"}, "2099": {"problem_id": 2099, "answer": "import bisect\nn, m, t = list(map(int, input().split()))\ns = []\nfor i in range(n):\n    h, m, s = list(map(int, input().split()))\n    s.append(t % 24 * 60 + h)\n    t %= 24 * 60 + m\nans = 0\nfor i in range(1, len(s)):\n    if bisect.bisect_right(s, s[i]):\n        ans += 1\nprint(ans)\n"}, "2100": {"problem_id": 2100, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nl = list(map(int, input().split()))\nr = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if l[i] == 0:\n        l[i] = 1\n    elif l[i] == 1:\n        l[i] = 0\n    else:\n        ans += abs(l[i] - r[i])\nprint(ans)"}, "2101": {"problem_id": 2101, "answer": "R,G,B = list(map(int,input().split()))\nR = list(map(int,input().split()))\nG = list(map(int,input().split()))\nB = list(map(int,input().split()))\n\ndef mergeSticks(lst,n):\n    if n==len(lst):\n        return lst\n    elif len(lst)==1:\n        return lst[0]\n    else:\n        lst.append(mergeSticks(lst[1:],n+1))\n        return lst[0]\n\ndef mergeSticksRec(lst,n):\n    if n==len(lst):\n        return lst\n    elif len(lst)==1:\n        return lst[0]\n    else:\n        lst.append(mergeSticksRec(lst[1:],n+1))\n        return lst[0]\n\nres = 0\nfor i in range(R):\n    res += mergeSticks(R,R)\nfor i in range(G):\n    res += mergeSticks(G,G)\nfor i in range(B):\n    res += mergeSticks(B,B)\nprint(max(res))\n"}, "2102": {"problem_id": 2102, "answer": "from collections import Counter\ninput()\nc = Counter(input().split())\nn = int(input())\nfrets = [None]*6\nfor i in range(n):\n    frets[i] = c[input()]\nprint(min(max(frets),0))"}, "2103": {"problem_id": 2103, "answer": "n = int(input())\na = list(map(int, input().split()))\nmex = [0] + [0] * (n+1)\nfor i in range(1, n+1):\n    for j in range(i):\n        mex[a[j]] = max(mex[a[j]], mex[a[i]])\n        mex[a[j]] = max(mex[a[j]], mex[a[j-i]])\n        mex[a[j]] = max(mex[a[j]], mex[a[j-i-1]])\nprint(' '.join(map(str, mex)))"}, "2104": {"problem_id": 2104, "answer": "l,r=map(int,input().split())\nif l%2==0:\n    print(\"NO\")\nelse:\n    a=l//2\n    b=l-a\n    c=r-b\n    d=max(a,b,c)\n    print(\"YES\\n\"+\" \".join(reversed(sorted(set(range(d))))))\n"}, "2105": {"problem_id": 2105, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\ns = [input() for i in range(n)]\nt = [input() for i in range(m)]\nqueries = list(map(int, input().split()))\nans = [None]*10\nfor q in queries:\n    y = int(input())\n    ans[y-1] = \"\".join(map(str, ans[y-1]))\nprint(\" \".join(ans))\n"}, "2106": {"problem_id": 2106, "answer": "m, k = list(map(int, input().split()))\nd = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\nfuel = [0] * (k + 1)\nfor i in range(m):\n    fuel[i + 1] = s[i] + d[i] - 1\n\nt = 0\ncnt = n - 1\nh = k\nwhile t < h:\n    t += 1\n    cnt -= 1\n    h -= fuel[cnt]\n    fuel[cnt] = 0\n    for i in range(cnt, n):\n        fuel[i] = min(fuel[i], fuel[i - 1] + k)\nprint(t + n - 1 - cnt)\n"}, "2107": {"problem_id": 2107, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m,k,s = list(map(int,input().split()))\ng = [[] for i in range(n+1)]\nfor i in range(1,n+1):\n    g[i].append(i)\n\nfor i in range(1,k+1):\n    for j in range(1,m+1):\n        a = list(map(int,input().split()))\n        a.append(i)\n        g[i].append((j,a[j-1]))\n\ns = [int(i) for i in input().split()]\nans = []\nfor i in range(1,s[0]-1):\n    for j in range(1,s[i]-1):\n        ans.append($\"{s[i]-i}\".find(\":\".join(g[i]))+1)\nprint(max(ans))\n"}, "2108": {"problem_id": 2108, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v = map(int, input().split())\n    edges[u-1].append(v-1)\n    edges[v-1].append(u-1)\n\ncolors = [\"#\"] * n\nvisited = [False] * n\nans = []\nfor i in range(n):\n    visited[i] = True\n    ans.append(colors[i])\n\nfor i in range(n-1):\n    x, y = edges[i]\n    y.pop()\n    x.pop()\n    col = colors[i]\n    y.append(col)\n    col = colors[n-i-1]\n    x.append(col)\n\n# print(ans)\n\ndef dfs(s, p):\n    nonlocal ans\n    stack = [(s, p)]\n    while stack:\n        curr, color = stack.pop()\n        for nei in edges[curr]:\n            if visited[nei]: continue\n            visited[nei] = True\n            ans.append(color)\n            dfs(nei, curr)\n"}, "2109": {"problem_id": 2109, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\ndeq = deque([])\nfor i in range(n):\n    if a[i] < 0:\n        deq.append(a[i])\n    elif a[i] > 0:\n        deq.append(a[i])\n    else:\n        z = deq.popleft()\n        if z[0] == 0:\n            z.pop()\n        else:\n            z.append(0)\n        "}, "2110": {"problem_id": 2110, "answer": "import sys\ninput = sys.stdin.readline\n\nn, h, m, k = list(map(int, input().split()))\ntrains = [tuple(map(int, input().split())) for _ in range(n)]\n\ns = h // 2\ncnt = 0\nfor i in range(n):\n    if i % 2 == 0:\n        s -= k\n        cnt += k\n    else:\n        s += k\n        cnt += k\n\nprint(2 * s + min(cnt, trains[i]))\nprint(*trains[i:])\n"}, "2111": {"problem_id": 2111, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn,q=map(int,input().split())\nt=[[0]*n for i in range(n)]\nfor i in range(q):\n    a,b=map(int,input().split())\n    t[a][b]+=1\nvis=[0]*n\ncnt=0\nfor i in range(n):\n    vis[t[i][i]]+=1\n    if vis[t[i][i]]==0:\n        cnt+=t[i][i]\nprint(cnt)"}, "2112": {"problem_id": 2112, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, m = map(int, input().split())\n    x, k, y = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    b = sorted(map(int, input().split()))\n\n    if sum(a) == sum(b):\n        print(0)\n        return\n\n    dp = [[0] * (n + 1) for _ in range(m + 1)]\n    for i in range(1, m + 1):\n        dp[1][i] = a[i]\n    for i in range(2, n + 1):\n        dp[i][1] = min(dp[i - 1][1], a[i])\n        for j in range(2, m + 1):\n            dp[i][j] = min(dp[i][j - 1], dp[i - 1][j - 1] + y)\n\n    for i in range(2, n + 1):\n        for j in range(2, m + 1):\n            if dp[i][j] == -1:\n                continue\n            for k in range(k):\n                dp[i][j] = min(dp[i][j], dp[i - 1][k] + x + a[k])"}, "2113": {"problem_id": 2113, "answer": "n = int(input())\nedges = []\nfor i in range(n-1):\n    a, b = map(int, input().split())\n    edges.append((a, b))\n\nedges.sort()\nprint(len(edges))"}, "2114": {"problem_id": 2114, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nans = [[1]*n for _ in range(n)]\nans[0][0] = 0\nfor i in range(1, n):\n    ans[i][0] = min(ans[i-1][0], ans[i-1][1]) + 1\n    ans[i][1] = min(ans[i-1][0], ans[i-1][1]) + 1\n\nprint(*ans[n-1])"}, "2115": {"problem_id": 2115, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nm = len(a)\nfor i in range(m):\n    if a[i] == i + 1:\n        cnt += 1\n    else:\n        break\nprint(cnt)\nprint(' '.join(map(str, a[i:])))"}, "2116": {"problem_id": 2116, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\np = list(map(int, input().split()))\nA = [0] * k\nfor i in range(n):\n    A[p[i]] = i + 1\nt = 0\nfor i in range(n):\n    a = A[i]\n    t += (a - 1) * (k - 1)\n    A[a] = i + 1\nprint(t)\n"}, "2117": {"problem_id": 2117, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nans = [0]*n\nfor i in range(n-1):\n    u,v = map(int,readline().split())\n    ans[u] |= (1 << i)\n    ans[v] |= (1 << n-i-1)\nprint(*ans)"}, "2118": {"problem_id": 2118, "answer": "def merge(a, l, mid):\n    if l == mid - 1:\n        return a\n    elif l + 1 == mid:\n        return merge(a, l + 1, mid)\n    else:\n        mid_l = l + 1\n        mid_r = mid + 1\n        a_l = merge(a, l, mid_l)\n        a_r = merge(a, mid_r, mid_r)\n        return a_l\n\ndef mergesort(a, l, mid):\n    if l == mid - 1:\n        return a\n    elif l + 1 == mid:\n        return mergesort(a, l + 1, mid)\n    else:\n        mid_l = l + 1\n        mid_r = mid + 1\n        a_l = merge(a, l, mid_l)\n        a_r = merge(a, mid_r, mid_r)\n        return a_l\n\nn, k = list(map(int, input().split()))\nd = {}\nd[0] = n\nprint(d[0])\nfor i in range(1, n):\n    d[i] = d[i - 1] + 1\nans = []\nfor i in range(n):\n    ans.append(d[i])\nprint(' '.join(map(str, ans)))\n"}, "2119": {"problem_id": 2119, "answer": "a=int(input())\nl=int(input())\nr=int(input())\nans=0\nfor i in range(1,10**9+1):\n    if a%i==0:\n        ans+=1\n    elif a%i==0 and i!=1:\n        ans+=1\nprint(ans%998244353)"}, "2120": {"problem_id": 2120, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nv = list(map(int, input().split()))\nt = [0]*(n+1)\nfor i in range(1, n+1):\n    t[i] = t[i-1] + v[i]\n\ncnt = [0]*(n+1)\nsump = [0]*(n+1)\nsump[0] = v[0]\nfor i in range(1, n+1):\n    cnt[i] = cnt[i-1] + v[i]\n    sump[i] = sump[i-1] + min(cnt[i], v[i])\nprint(min(t[n:])+sump[n])"}, "2121": {"problem_id": 2121, "answer": "import sys\ninput=sys.stdin.readline\nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nd=[0]*n\nfor i in range(n-1):\n    u,v=list(map(int,input().split()))\n    d[u-1]+=(a[v-1]-a[u-1])\n    d[v-1]+=(a[u-1]-a[v-1])\nans=min(d)\nprint(ans)\n"}, "2122": {"problem_id": 2122, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nn, k = list(map(int, input().split()))\nprint(k // n)"}, "2123": {"problem_id": 2123, "answer": "n = int(input())\na = [int(i) for i in input().split(' ')]\na.sort()\nprint(n + sum(a[n] - a[n - 1]) // 2)"}, "2124": {"problem_id": 2124, "answer": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    usernames = input()\n    msgs = input()\n    usernames = usernames.split()\n    for username in usernames:\n        if username[0] == '!':\n            continue\n        else:\n            print(username, end=' ')\n    for i in range(n):\n        if msgs[i] not in usernames:\n            print(msgs[i], end=' ')\n"}, "2125": {"problem_id": 2125, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    a = input().strip().lower()\n    ans += sum(1 for c in a if c.isalpha())\nprint(ans * \"flag\")"}, "2126": {"problem_id": 2126, "answer": "import sys\ninput = sys.stdin.readline\nn,m,h=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nfor i in range(n):\n    for j in range(m):\n        if a[j]>0:\n            a[j]=max(a[j],b[j])\nprint(*a,sep=\" \")\nfor i in range(n):\n    print(*b,sep=\" \")"}, "2127": {"problem_id": 2127, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nfor _ in range(n):\n    query = input().split()\n    \n    if query[0] == \"+\":\n        a = int(query[1])\n        b = int(query[2])\n        print(\"NO\" if a*b > 0 else \"YES\")\n    elif query[0] == \"?\":\n        if b > a:\n            print(\"NO\")\n        else:\n            print(\"YES\")\n    else:\n        a = int(query[1])\n        b = int(query[2])\n        print(\"NO\" if a*b > 0 else \"YES\")"}, "2128": {"problem_id": 2128, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 998244353\nn = int(readline())\np = list(map(int, readline().split()))\na = [0]*n\nfor i in range(n):\n    a[i] = p[i]/100\n    a[i] *= i\nans = 0\nfor i in range(1, n):\n    ans += a[i]*i\n    ans %= MOD\nprint(ans)"}, "2129": {"problem_id": 2129, "answer": "import sys\ninput=sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n  n,m=map(int,input().split())\n  a=[]\n  b=[]\n  for i in range(m):\n   a.append(list(map(int,input().split())))\n  print(max(a) + max(b))"}, "2130": {"problem_id": 2130, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\nfor i in range(60):\n    d[i] = []\n    d[i].append(i)\n\nans = []\nfor i in range(n):\n    ans.append(a[i] ^ a[i - 1])\n\nprint(\"Yes\\n\".join(map(str, ans)))\n\nprint(\" \".join(map(str, d.keys())))"}, "2131": {"problem_id": 2131, "answer": "from sys import stdin\ninput = stdin.readline\nn = int(input())\nedges = []\nfor i in range(n-1):\n    a, b = list(map(int, input().split()))\n    edges.append((a, b))\n\nadj = [[] for i in range(n)]\nfor i in range(n-1):\n    a, b = edges[i]\n    adj[a].append(b)\n    adj[b].append(a)\n\nvisited = [False] * n\nvisited[0] = True\nans = []\nfor i in range(1, n):\n    if visited[i] == False:\n        visited[i] = True\n        ans.append((i, i))\n\ndef dfs(s, t):\n    nonlocal ans\n    visited[t] = True\n    for e in adj[s]:\n        if visited[e] == False:\n            dfs(e, t)\ndfs(0, n-1)\nprint('\\n'.join(map(str, ans)))\n"}, "2132": {"problem_id": 2132, "answer": "n = int(input())\na = []\nfor i in range(n):\n    t = int(input())\n    if t == 1:\n        a.append(i)\n    elif t == 3:\n        a.append(i)\n        a.append(i + 300)\n    else:\n        a.append(i + 1)\nprint(max(a))"}, "2133": {"problem_id": 2133, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\nc = list(map(int,read().split()))\nd = [[] for i in range(n)]\nfor i in range(n-1):\n    u,v = list(map(int,read().split()))\n    d[u].append(v)\n    d[v].append(u)\nvisited = [False]*n\nans = 0\nfor i in range(n-1):\n    if visited[i] == False:\n        ans += d[i].count(i)\n        visited[i] = True\nprint(ans)"}, "2134": {"problem_id": 2134, "answer": "from collections import defaultdict as dd\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] & 1:\n        ans += b[i]\n    elif b[i] & 1:\n        ans += a[i]\nprint(ans)"}, "2135": {"problem_id": 2135, "answer": "h, w = list(map(int, input().split()))\ns = [''] + input().split()\ns[0] = '#'\nr = []\nc = []\nfor i in range(h):\n    r.append(list(input()))\nfor i in range(int(input())):\n    t = set(r[i])\n    c.append(t)\n    for j in range(len(r[i])):\n        if r[i][j] == '.':\n            s.append('#')\n        elif r[i][j] == '#':\n            s.append('.')\n        else:\n            s.append(r[i][j])\n    r.sort()\n    c.sort()\n    print(len(s) + len(c))\n"}, "2136": {"problem_id": 2136, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n  n = int(input())\n  grid = [0] * n\n  for i in range(n):\n    grid[i] = list(map(int, input().split()))\n  visited = [False] * n\n  visited[1] = True\n  q = [1]\n  while q:\n    s = q.pop()\n    if visited[s]:\n      continue\n    visited[s] = True\n    for x in grid[s]:\n      if visited[x]:\n        continue\n      q.append(x)\n  print(str(q[0]))\n"}, "2137": {"problem_id": 2137, "answer": "import sys\nread = sys.stdin.readline\nn, a, b = list(map(int, read().split()))\nd = [[0] * n for _ in range(3)]\nfor i in range(3):\n    d[i][i] = 1\n    d[i][i + n] = 1\ns = set()\nfor i in range(3):\n    s.add((a * i + b) % d[i][i], i)\nmx = max(s)\nmxi = mx.index(-1)\nmxj = mxi.index(-1)\ns = set()\nfor i in range(n):\n    s.add((a * d[i][i] + b) % d[i][i], i)\nmx = max(s)\nmxj = mxj.index(-1)\nmxi = mxi.index(mxj)\nprint(mxi)\n"}, "2138": {"problem_id": 2138, "answer": "import sys\ninput = sys.stdin.readline\nINF = 1 << 60\neps = 1e-20\nMOD = 10**9+7\n \ndef main():\n    n = int(input())\n    d = list(map(int, input().split()))\n    d.sort()\n    ans = INF\n    for i in range(n):\n        ans = (ans << 1) + d[i]\n        print(ans)\n        \n    "}, "2139": {"problem_id": 2139, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n    for j in range(i, n):\n        if s[i] == s[j] and s[i]!= 'bear' and s[j]!= 'bear':\n            cnt += 1\nprint(cnt)"}, "2140": {"problem_id": 2140, "answer": "s = input()\nm = int(input())\na = [0] * 26\nfor i in range(m):\n    a[ord(s[i]) - 97] += 1\nprint(''.join(map(str, a)))"}, "2141": {"problem_id": 2141, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nchessboard = [[0 for i in range(n)] for i in range(n)]\n\nfor i in range(n):\n    for j in range(n):\n        chessboard[i][j] = 1\n        chessboard[j][i] = 1\n\nknight = [\"w\",\"b\"]\n\nfor i in range(n):\n    for j in range(n):\n        if chessboard[i][j] == 1:\n            knight.append(knight[j])\n        elif chessboard[i][j] == 2:\n            knight.append(knight[j])\n        else:\n            knight.append(knight[j])\n\nprint(\"\\n\".join(knight))\n"}, "2142": {"problem_id": 2142, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,m=list(map(int,input().split()))\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    ans=[]\n    for i in range(n):\n        ans.append([a[i],b[i]])\n    print(*ans,sep='\\n')\n"}, "2143": {"problem_id": 2143, "answer": "import sys\nread = sys.stdin.readline\n\nn = int(read())\na = list(map(int,read().split()))\nans = 0\ncnt = 0\nfor i in range(n):\n    if a[i] + a[i+1] <= a[i]:\n        ans += 2\n    elif a[i] + a[i+1] > a[i]:\n        cnt += 1\nprint(ans)"}, "2144": {"problem_id": 2144, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    a,m=map(int,input().split())\n    print(sum([x for x in range(1,m+1) if a%x==0])+1)"}, "2145": {"problem_id": 2145, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    x,y=map(int,input().split())\n    if x%2==0:\n        print('YES')\n    else:\n        ans=y\n        x=x//2\n        if x<1:\n            ans=y-x\n        else:\n            ans=y+x\n        print('YES')\n        \n"}, "2146": {"problem_id": 2146, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nd = {0: 0}\nvisited = [0]*n\nans = [0]*n\nfor i in range(1, n):\n    visited[i] = 1\n    d[a[i] - 1] += 1\n    ans[i] = min(visited[i] + d[a[i] - 1], ans[i - 1])\nprint(*ans)"}, "2147": {"problem_id": 2147, "answer": ""}, "2148": {"problem_id": 2148, "answer": "n, r = list(map(int, input().split()))\nl = list(map(int, input().split()))\nl.sort()\np = 10 ** 100\nans = [0] * n\nfor i in range(n):\n    x = l[i]\n    ans[i] = (x - p) / r\nprint(' '.join(map(str, ans)))\n"}, "2149": {"problem_id": 2149, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 998244353\n\nn, k = list(map(int, input().split()))\nh = list(map(int, input().split()))\n\nans = [0] * n\nfor i in range(n):\n    ans[h[i]] += 1\n\nans.sort()\nprint(ans[n - 1] * k ** n)\n"}, "2150": {"problem_id": 2150, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = [0]*n\nfor i in range(n):\n    ans[i] = a[i]\n\nfor i in range(n):\n    print(ans[i], end=\" \")\n"}, "2151": {"problem_id": 2151, "answer": "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    s = input()\n    m = len(s)\n    d = {}\n    for i in range(n):\n        d[s[i]] = i\n    ans = []\n    for i in range(m):\n        ans.append(d[s[i]])\n    print('YES' if all(i <= j for i, j in zip(ans, ans[1:])))\n    print('\\n'.join(ans))"}, "2152": {"problem_id": 2152, "answer": "n = int(input())\na = [0]*100\np = list(map(int, input().split()))\nd = []\nfor i in range(n):\n    d.append(p[i]+a[i])\n    a[i] += 1\nprint(min(d))\n"}, "2153": {"problem_id": 2153, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nh = list(map(int, readline().split()))\n\ndef calc(i):\n    if i == n:\n        return 0\n    cnt = 0\n    for j in range(i, n):\n        cnt += h[j] - h[i]\n        if cnt > 0:\n            return cnt\n    return cnt\n\nprint(calc(n - 1) + calc(n))"}, "2154": {"problem_id": 2154, "answer": "n = int(input())\na = [0] * (n + 1)\nb = [0] * (n + 1)\nfor i in range(n):\n    a[i + 1] = int(input())\n    b[i + 1] = int(input())\nprint(max(a[:n] + b[:n]))\n"}, "2155": {"problem_id": 2155, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\na = list(map(int, input().split()))\n\nif t == 1:\n    print(1)\n    print(a[0])\n    print(-1)\nelif t == 2:\n    print(2)\n    print(a[0])\n    print(a[1])\n    print(a[2])\n"}, "2156": {"problem_id": 2156, "answer": ""}, "2157": {"problem_id": 2157, "answer": "from collections import deque\nn, q = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n    s[i] = a[i]\n    q += 1\n    deq = deque([i])\n    while deq:\n        i = deq.popleft()\n        for j in range(i, n):\n            s[j] += a[i]\n            deq.append(j)\nprint(max(s))\n"}, "2158": {"problem_id": 2158, "answer": "from collections import deque\nn=int(input())\nadj=[0]*n\ndef dfs(u,v,c):\n    adj[u].append(\\\n        (v,c+min(u,v),0)\n    for v in adj[u]\n    )\ndfs(0,1,0)\nans=0\nvisited=[False]*n\nqueue=[0]*.append\nwhile queue:\n    now=queue.popleft()\n    ans+=now[2]\n    visited[now[1]]=True\n    for adj in adj[now[1]]:\n        if visited[adj[0]]==False:\n            queue.append(adj[0])\n            dfs(adj[0],now[2],now[3])\n            visited[adj[0]]=True\nprint(ans)"}, "2159": {"problem_id": 2159, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nA = list(map(int, readline().split()))\nans = [0]*n\nans[0] = 1\nfor i in range(1, n):\n    if ans[i] == 0:\n        ans[i] = 1\n        for j in range(i):\n            ans[j] += ans[i]\n        ans[i] += 1\nprint(*ans)"}, "2160": {"problem_id": 2160, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\na = list(map(int, readline().split()))\nans = 0\nfor i in range(k):\n    if a[i] == i:\n        ans += 1\nprint(ans)\n"}, "2161": {"problem_id": 2161, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = []\nfor i in range(n):\n    name, num, *p = input().split()\n    s.append([name, int(num)])\n\nprint('\\n'.join(map(str, s)))"}, "2162": {"problem_id": 2162, "answer": "import sys\nreadline = sys.stdin.readline\nk1, k2, k3 = list(map(int, readline().split()))\na = list(map(int, readline().split()))\nb = list(map(int, readline().split()))\nc = list(map(int, readline().split()))\nans = 0\nfor i in range(3, len(b), 2):\n    for j in range(2, len(c), 2):\n        if b[i] + c[j] == a[i]:\n            ans += min(i - k1, j - k2)\n            break\nprint(ans)\n"}, "2163": {"problem_id": 2163, "answer": "n, m = map(int, input().split())\ns = [0] * 100001\nfor i in range(1, n + 1):\n    s[i] = (i * (i - 1) // 2) % 100001\nmod = 10**9 + 7\nprint(s[n] % mod)"}, "2164": {"problem_id": 2164, "answer": "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    if n <= 5:\n        print(s)\n    else:\n        a = [0] * 26\n        b = [0] * 26\n        for i in range(n):\n            if s[i] == 'a':\n                a[ord(s[i]) - ord('a')] += 1\n            elif s[i] == 'b':\n                b[ord(s[i]) - ord('b')] += 1\n            else:\n                a[ord(s[i]) - ord('a')] += 1\n                b[ord(s[i]) - ord('b')] += 1\n        print(''.join(a + b))"}, "2165": {"problem_id": 2165, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, t = list(map(int, readline().split()))\na, t = list(map(int, readline().split()))\nd = [t[i] for i in range(n)]\ns = list(map(int, readline().split()))\ne = []\nfor i in range(n):\n    e.append(s[i] / a[i])\n    \nans = 0\nfor i in range(n):\n    ans = max(ans, e[i] * t[i])\nprint(ans)"}, "2166": {"problem_id": 2166, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nprint2 = stdout.write\nn = int(input())\na = list(map(int,input().split()))\np = [0]*(n+1)\nfor i in range(1,n+1):\n    p[i] = a[i]\nm = 10**9 + 7\nfor i in range(1,n+1):\n    if p[i]==i:\n        m = (m%m) * i\nprint(m)"}, "2167": {"problem_id": 2167, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\na = list(map(int, readline().split()))\ncnt = 0\nfor i in range(1, n):\n    if a[i] + 1!= a[i]:\n        cnt += (a[i] + 1) - (a[i] - 1)\nprint(cnt)\n"}, "2168": {"problem_id": 2168, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [list(map(int, input().split())) for i in range(n)]\na.sort()\nans = 0\ni = 0\nwhile i < n-1:\n    ans += a[i][1] - a[i+1][1]\n    i += 2\nprint(ans)\n"}, "2169": {"problem_id": 2169, "answer": "import sys\ninput = sys.stdin.readline\nh,w,d=list(map(int,input().split()))\nlis=list(map(int,input().split()))\nlis.insert(0,0)\ndic={}\nfor i in range(h):\n    for j in range(w):\n        if i!=0:\n            dic[i+d][j+d]=lis.pop()\n        elif j!=0:\n            dic[i][j+d]=lis.pop()\n        else:\n            dic[i][j]=lis.pop()\nfor _ in range(int(input())):\n    l,r=list(map(int,input().split()))\n    print((r-l)//d)\n"}, "2170": {"problem_id": 2170, "answer": "import sys\ninput = sys.stdin.readline\nM = 1000000007\nn, m = map(int, input().split())\nmod = 10**9+7\ndp = [[0]*(m+1) for _ in range(n+1)]\ndp[0][0] = 1\nfor i in range(1, n+1):\n    for j in range(i<<1):\n        dp[i][j] = (dp[i-1][j] + dp[i-1][j^(2 << i)]) % mod\n        dp[i][j] *= mod\nprint('\\n'.join(map(str, dp[n][m])))"}, "2171": {"problem_id": 2171, "answer": "a=int(input())\nif a%2==0:\n    print(\"yes\")\nelse:\n    print(\"no\")"}, "2172": {"problem_id": 2172, "answer": "from collections import deque\nn,m=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n    l.append(input())\ns=set()\nfor i in range(m):\n    a,b=list(map(str,input().split()))\n    s.add(a)\n    s.add(b)\nd=deque()\nd.append(0)\nwhile d:\n    c=d.popleft()\n    if c not in s:\n        d.append(c)\n        continue\n    for i in range(len(l[c])):\n        d.append(dekqrt(2*c[i],l[c][i]))\nprint(' '.join(map(str,d[0:len(d)])))\n"}, "2173": {"problem_id": 2173, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nm = 10 ** 9 + 7\nans = [0] * m\nfor i in range(n):\n    s += a[i]\n    ans[i] = s // m\nprint(' '.join(map(str, ans)))"}, "2174": {"problem_id": 2174, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] < i + 1:\n        ans += 1\nprint(ans)"}, "2175": {"problem_id": 2175, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nm=int(input())\nfor i in range(m):\n    s=input()\n    if s.startswith(\"1\"):\n        p,x=s.split()\n        print(p+x)\n    else:\n        k=int(s.split()[1])\n        print(a[k-1]*m)"}, "2176": {"problem_id": 2176, "answer": "import sys\ninput = sys.stdin.readline\nM = 998244353\nn = int(input())\ns = sorted((int(i) for i in input().split()))\nprint((n*(n+1)//2 - sum(sorted(i, key=lambda x: x[1])).count(0)%M))"}, "2177": {"problem_id": 2177, "answer": "t = int(input())\nfor _ in range(t):\n    a, b = map(int, input().split())\n    ans = 0\n    for i in range(1, a + 1):\n        for j in range(1, b + 1):\n            if i * j == a * b:\n                ans += 1\n    print(ans)"}, "2178": {"problem_id": 2178, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(' '.join(map(str, a)))\n"}, "2179": {"problem_id": 2179, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v, w = map(int, input().split())\n    edges[u-1].append((v-1, w))\n    edges[v-1].append((u-1, w))\n\nvisited = [0] * n\nsorted_edges = sorted(edges, key=lambda x: x[1])\n\nans = []\nfor s, e in sorted_edges:\n    if visited[s] == 0:\n        ans.append(e[1])\n        visited[s] = 1\n\nprint(' '.join(map(str, ans)))\n"}, "2180": {"problem_id": 2180, "answer": "n=int(input())\nprint(0)\nfor i in range(1,n+1):\n    a=input()\n    print(''.join(a))"}, "2181": {"problem_id": 2181, "answer": "import sys\nreadline = sys.stdin.readline\n\na, d = list(map(float, readline().split()))\nn = int(readline())\n\ndef f(x):\n    return x + 0.5\n\nans = [f(0) for _ in range(d)]\n\nfor i in range(1, n + 1):\n    ans.append(ans[-1] + (i * d) / n)\n\nprint(' '.join(map(str, ans)))\n"}, "2182": {"problem_id": 2182, "answer": "import sys\ninput = sys.stdin.readline\n \nn = int(input())\nsys.setrecursionlimit(10**9)\nans = [0]*26\nfor i in range(n):\n    x = int(input())\n    ans[x-2] = 'c'*(x-2) + 'y'*(x-3)\n    ans[x-1] = 'r'*(x-1) + 'y'*(x-2)\n    ans[x] = 'l'*(x)"}, "2183": {"problem_id": 2183, "answer": "a = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(a[0] + b[0], end=' ')\nprint(a[1] + b[1], end=' ')"}, "2184": {"problem_id": 2184, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    f = [input().rstrip() for _ in range(n)]\n    f.sort()\n    ans = ''\n    for i in range(n):\n        if f[i] == '|':\n            ans += '(' + str(i+1) + ')&'\n        elif f[i] == '&':\n            ans += 'y'\n        elif f[i] == '!':\n            ans += 'x'\n        elif f[i] == '|' and i > 0:\n            ans += 'y'\n        elif f[i] == '!':\n            ans += 'z'\n        elif f[i] == '(' and i > 0:\n            ans += 'x'\n        elif f[i] == '!' and i > 0:\n            ans += '(' + str(i+1) + ')()'\n        else:\n            ans += '(' + str(i+1) + ')!'\n    print(ans)\n\nmain()"}, "2185": {"problem_id": 2185, "answer": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.reverse()\n    b.reverse()\n    print('YES' if sum(a) == sum(b) else 'NO')"}, "2186": {"problem_id": 2186, "answer": "n, m = list(map(int, input().split()))\na = [0]*26\nfor i in range(n):\n    a[ord(input())-97] += 1\n    \nfor i in range(m):\n    s = input()\n    if len(set(s))!= len(s):\n        print(\"NO\")\n        return\n    \n    if a[ord(s)-97] == 1:\n        print(\"YES\")\n        return\n    \n    elif a[ord(s)-97] > 1:\n        print(\"NO\")\n        return\n"}, "2187": {"problem_id": 2187, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    ans=0\n    for i in range(n):\n        if a[i]>a[i+1]:\n            ans+=1\n    print(ans)"}, "2188": {"problem_id": 2188, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = [0]*n\nfor i in range(n):\n    a, b = map(int, input().split())\n    ans[i] = a-1 + b\n\nprint(len(set(ans)))\nprint(*ans)"}, "2189": {"problem_id": 2189, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nv, u = list(map(int, input().split()))\n\nadj = [[] for _ in range(n)]\nfor vv in v+u:\n    adj[vv].append(vv)\n\nvis = [False] * n\nans = [0] * n\nstack = deque()\nstack.append(0)\ns = set()\nwhile stack:\n    v, uv = stack.popleft()\n    if v not in s:\n        s.add(v)\n        stack.append(vv)\n        for uv2 in adj[vv]:\n            if uv2 not in s:\n                s.add(uv2)\n                stack.append(uv2)\nprint(' '.join(map(str, ans)))\n"}, "2190": {"problem_id": 2190, "answer": "from collections import defaultdict\nn,k=map(int,input().split())\na=list(map(int,input().split()))\nd=defaultdict(int)\nfor i in a:\n    d[i]+=1\nans=0\nfor i in d:\n    if d[i]>2:\n        ans+=d[i]-2\nprint(ans)"}, "2191": {"problem_id": 2191, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\ns = readline()[:-1]\n\na = [0]*n\nb = [0]*n\n\nfor i in range(n):\n    if s[i]=='1':\n        a[i]+=1\n    else:\n        b[i]+=1\n\nans = []\n\nfor i in range(n):\n    if i==n-1:\n        ans.append(0)\n    elif a[i]>b[i]:\n        ans.append(a[i]+b[i])\n    else:\n        ans.append(b[i]+a[i])\n\nprint(*ans)"}, "2192": {"problem_id": 2192, "answer": "import numpy as np\nn = int(input())\nmatrix = np.array([[0] * n for i in range(n)] for j in range(n))\nfor i in range(n):\n    a = list(map(int, input().split()))\n    matrix[i][i] = a[0]\n    for j in range(1, len(a)):\n        matrix[i][j] = min(matrix[i][j - 1], abs(a[j] - a[j - 1]))\nprint(' '.join(map(str, matrix)))"}, "2193": {"problem_id": 2193, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\ng = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v, t = list(map(int, input().split()))\n    g[u-1].append((v-1, t))\n    g[v-1].append((u-1, t))\n\nans = [-1] * n\nd = {}\nfor i in range(1, n+1):\n    if i not in d:\n        d[i] = set()\n    d[i].add(i)\n\nvisited = [False] * n\nvisited[1] = True\nq = deque([1])\nwhile q:\n    now = q.popleft()\n    for nex in g[now]:\n        if visited[nex] or nex not in d[now]:\n            visited[nex] = True\n            q.append(nex)\n\nprint(len(list(d.keys())))\nfor i in range(len(list(d.keys()))):\n    if d[i] == [1, 3, 2] or d[i] == [4, 5, 3]:\n        ans[i] = '0'\n\nw = [0] * n\nfor i in range(n):\n    w[i] = str(w[i] + 1)\n\nl = len(w)\nr = 0\nfor i in range(l):\n    if w[i] == '0':\n        r = i\n"}, "2194": {"problem_id": 2194, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+1\nMOD = 10**9 + 7\ndef II(): return int(readline())\ndef MI(): return map(int, readline().split())\ndef LI(): return list(map(int, readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\n\nn, q = MI()\na = LI()\nfor i in range(n):\n    a[i] = II()\n    a[i] = pow(a[i], 2, MOD)\nq = []\nfor _ in range(q):\n    query = MI()\n    query = query[0]\n    if query[1] == '1':\n        query = '$1$' + query[2:]\n    elif query[1] == '2':\n        query = '$2$' + query[2:]\n    elif query[1] == '3':\n        query = '$3$' + query[2:]\n    elif query[1] == '4':\n        query = '$4$' + query[2:]\n    q.append(query)\nqueries = []\nfor qi in q:\n    queries.append(qi)\n\nprint(*queries, sep='\\n')"}, "2195": {"problem_id": 2195, "answer": "import sys\ninput = sys.stdin.readline\n\n\nt = int(input())\nfor _ in range(t):\n    x, y = list(map(int, input().split()))\n    a, b = list(map(int, input().split()))\n    if x == y:\n        print(0)\n    else:\n        ans = min(a * b, b * a)\n        print(ans)\n"}, "2196": {"problem_id": 2196, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n // 2 + min(a.count(i) for i in range(1, n // 2 + 1)))\n"}, "2197": {"problem_id": 2197, "answer": "import bisect\nn, x = map(int, input().split())\np = list(map(int, input().split()))\np.sort()\na = [0]*(n+1)\nb = [0]*(n+1)\nfor i in range(1, n+1):\n    a[i] = bisect.bisect_right(p, x+i) - 1\n    b[i] = p[a[i]//x]\nprint(a[0]/b[0])"}, "2198": {"problem_id": 2198, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\ns = list(readline())\nqueries = []\nfor i in range(m):\n    queries.append(list(readline().split()))\n\ndef repl(s, n):\n    f = [0]*26\n    for i in range(n):\n        if s[i] == '.':\n            f[i] = 1\n        elif i == n-1:\n            f[i] = 1\n        else:\n            f[i] = f[i] + 1\n    ans = 0\n    for i in range(26):\n        ans += f[i]\n    return ans\n\nd = {}\nfor i in queries:\n    d[i[0]] = d.get(i[0], 0) + 1\n\nans = 0\nfor i in range(m):\n    ans += repl(s, d[i])\n    print(ans)\n"}, "2199": {"problem_id": 2199, "answer": "import sys\nreadline = sys.stdin.readline\n\nQ = int(readline())\ns = [0]*Q\nfor _ in range(Q):\n    a,b = map(int,readline().split())\n    s[a-1] = b*-1\nans = 0\nfor i in range(Q):\n    print(s[i]+ans)"}, "2200": {"problem_id": 2200, "answer": "n, a, b = list(map(int, input().split()))\nx = list(map(int, input().split()))\ntokens = [0] * (n + 1)\nfor i in x:\n    tokens[i] += 1\nans = []\nfor i in range(1, n + 1):\n    ans.append(tokens[i] / a)\nprint(' '.join(map(str, ans)))\n"}, "2201": {"problem_id": 2201, "answer": "import sys\ninput = sys.stdin.readline\n\nd, n, m = list(map(int, input().split()))\ngas = []\nfor i in range(m):\n    x, p = list(map(int, input().split()))\n    gas.append((x, p))\n\nans = 0\nr = 0\nfor i in range(d - 1):\n    r += gas[i][0] * (p[i] - d)\n    ans = min(ans, r)\nprint(ans)\n"}, "2202": {"problem_id": 2202, "answer": "import sys\ninput = sys.stdin.readline\nn, p = map(int, input().split())\nA = list(map(int, input().split()))\nB = [0]*100001\nfor i in range(1, 100001):\n    B[i] = B[i-1] + A[i-1]\nres = sum(B[2:])\nprint(res)"}, "2203": {"problem_id": 2203, "answer": "import sys\nh, q = list(map(int, input().split()))\nsys.setrecursionlimit(10**5)\ninf = 10**20\nmas = [0]*(2*h+1)\nfor i in range(1, 2*h):\n    mas[i] = mas[i-1] + inf\n    if mas[i] <= q:\n        print(i)\n        continue\n    m = 2*i - 1\n    ans = 0\n    for j in range(m, min(m + 2*h, 2*h + 1)):\n        if mas[j] <= mas[i]:\n            ans |= 1 << j\n    print(ans)\n"}, "2204": {"problem_id": 2204, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor _ in range(t):\n    n, m = list(map(int, readline().split()))\n    arr = [0] * 10 ** (n + 1)\n    arr[n] = 1\n    for i in range(m):\n        arr[arr[i]] += 1\n    max_happiness = 0\n    for i in range(1, n + 1):\n        max_happiness += arr[i] * arr[i - 1]\n    print(max_happiness)\n"}, "2205": {"problem_id": 2205, "answer": "n = int(input())\na = list(map(int, input().split()))\nres = 0\nfor i in range(n):\n    res += pow(2, i)\nprint(res)"}, "2206": {"problem_id": 2206, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nn = int(input())\ndp = [[0]*(n+1) for i in range(n+1)]\ndp[0][0] = 1\nfor i in range(1,n+1):\n    for j in range(i+1):\n        dp[i][j] = (dp[i-1][j] + dp[i].get(i,0)) % MOD\nprint(dp[n][n-1])"}, "2207": {"problem_id": 2207, "answer": "from sys import stdin,stdout\nfrom collections import defaultdict as dd"}, "2208": {"problem_id": 2208, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nb = list(map(int, readline().split()))\n\nans = 0\nfor i in range(n):\n    ans += b[i] - a[i]\n\nprint(ans)"}, "2209": {"problem_id": 2209, "answer": "n = int(input())\ns = set()\nfor i in range(n):\n    s.add(input())\na = 0\nb = 0\nfor i in range(n):\n    if s.count('h') > a:\n        a = s.count('h')\n    elif s.count('s') > b:\n        b = s.count('s')\nprint(max(a,b))"}, "2210": {"problem_id": 2210, "answer": "from collections import deque\nt = int(input())\nfor _ in range(t):\n    n, x = map(int, input().split())\n    adj = [[] for i in range(n)]\n    for i in range(n-1):\n        u, v = map(int, input().split())\n        adj[u].append(v)\n        adj[v].append(u)\n    que = deque([x])\n    ans = \"Ashish\"\n    while que:\n        v = que.popleft()\n        for u in adj[v]:\n            if ans == \"Ayush\":\n                ans = \"Ashish\"\n            elif ans.endswith(f\"\\u{x}{u}\") and que.popleft() == v:\n                que.append(v)\n            else:\n                break\n    print(ans)"}, "2211": {"problem_id": 2211, "answer": "s = input()\nn = int(input())\nrules = [list(input().split()) for _ in range(n)]\nscores = [30, 70, 100]\nfor i in range(n):\n    s, l, r = input().split()\n    if s[0]!= s[-1]:\n        scores[i] = scores[i-1] + len(set(s))\n\nans = 0\nfor i in range(30):\n    ans += sum(1 for s in rules if s[l] <= r)\n    ans += sum(1 for s in rules if s[r] >= l)\n\nprint(ans)"}, "2212": {"problem_id": 2212, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ninp = lambda: list(map(int,sys.stdin.readline().rstrip(\"\\r\\n\").split()))\n#______________________________________________________________________________________________________\n# from math import *\n# from bisect import *\n# from heapq import *\nfrom collections import defaultdict as dd, deque\n# from heapq import SortedHeapq as sh\n# from collections import Counter\n# from collections import OrderedDict\n# from collections import CounterUtil\n# from collections import CounterInline\n# from collections import LazyList as ll\n# from collections import namedtuple as P\n# from itertools import permutations as perms\n# from fractions import Fraction\n# from string import ascii_lowercase as lowcase\n# from functools import reduce\n# from operator import itemgetter, mul \n# from collections import Counter\n# from copy import deepcopy\n# from time import perf_counter\n# from collections import OrderedDict\n# from itertools import combinations as cc\n# from itertools import combinations_with_replacement as cwcr\n# from itertools import combinations_with_partition as cwpt\n# from itertools import combinations_withiterate as cfi\n# from itertools import filterfalse as ff\n# from itertools import filterfalse_with_curr as ffct\n# from itertools import prod as prod\n# from bisect import bisect_left as bl\n# from bisect import bisect_right as br\ntry:\n    from array import array\nexcept ImportError:\n    def inp(*args):\n        return input()\n#______________________________________________________________________________________________________\n# map()\n# a = map(int, input().split())\n# print(*a)\n# b, *c = map(int, input().split())\n# d[0] += b\n# d[1] += b\n# a, b = map(itemgetter(0), [d[i] for i in range(2)])\n# c[0] = a[0]\n# c[1] = a[1]\n#______________________________________________________________________________________________________\n# reduce()\n# For a, b, *c\n# If a is an integer, reduce it by multiplying it by b and adding it to a[1]\n# If b is an integer, reduce it by multiplying it by a and adding it to b[1]\n# If c is an integer, reduce it by multiplying it by a and adding it to c[1]\n# If c is float, reduce it to the same as a[1]\n# If * is not given, it should be applied to each component\n# Reductions are applied in-order\n# Reductions are applied by value\n# *a, **b = b, a\n# *a, *b, **c = c, a, b\n# *a, *b, *c = a, b, c\n# Reduce all by value\n# a = reduce(operator.add, list(map(operator.add, list(map(itemgetter(0), input().split())))))\\\n# a = reduce(operator.add, list(map(itemgetter(0), input().split()))))\n# a = reduce(operator.mul, list(map(operator.mul, list(map(itemgetter(0), input().split())))))\\\n# a = reduce(operator.mul, list(map(itemgetter(0), input().split()))))\n# *b, **c = c, b\n# *b, *c = b, c\n# b = reduce(operator.sub, list(map(operator.sub, list(map(itemgetter(0), input().split())))))\\\n# c = reduce(operator.sub, list(map(itemgetter(0), input().split()))))\n# *c, **d = d, c\n# *c, *d = c, d\n# d = reduce(operator.mul, list(map(operator.mul, list(map(itemgetter(0), input().split())))))\\\n# e = reduce(operator.add, list(map(operator.add, list(map(itemgetter(0), input().split())))))\\\n# f = reduce(operator.sub, list(map(operator.sub, list(map(itemgetter(0), input().split())))))\\\n# g = reduce(operator.m"}, "2213": {"problem_id": 2213, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+5\ndef main():\n    n, m, k = map(int, readline().split())\n    dp = [[0]*(m+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if i-j < k: swap = 1\n            dp[i][j] = dp[i-j][0] + dp[i-j][1]*swap\n            dp[i][j] |= dp[i-j][2]\n    print(dp[n][m])\n\n\nmain()\n"}, "2214": {"problem_id": 2214, "answer": "n, m = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(input())\n\nans = 0\nfor i in range(n):\n    j = 0\n    cnt = 0\n    while j < m:\n        if a[i][j] == '1':\n            cnt += 1\n        j += 1\n    ans += cnt\n\nif n % 2!= 0:\n    print(-1)\nelse:\n    print(ans)"}, "2215": {"problem_id": 2215, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\narr = []\n\nfor i in range(m):\n    arr.append(list(map(int, input().split())))\n\ns = 0\n\nfor i in range(n):\n    if arr[i][1] == 1:\n        s += arr[i][0] * arr[i][1]\n    else:\n        s += arr[i][0]\n\nprint(''.join(map(str, sorted(s, reverse=True))))\n"}, "2216": {"problem_id": 2216, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = map(int, input().split())\nt = [[] for _ in range(n + 1)]\nfor _ in range(1, n + 1):\n    t[n].append(k)\n    t[m - 1].append(k)\n\nans = []\nfor i in range(1, n + 1):\n    ans.append(t[i].copy())\n\nfor i in range(1, m + 1):\n    ans.append(t[m - 1].copy())\n\nprint(' '.join(map(str, ans[1:])))"}, "2217": {"problem_id": 2217, "answer": "import sys\ninput = sys.stdin.readline\nM = 10**9 + 7\n \nMOD = 998244353\n \nfact = [0]*100000\nfor i in range(1, 100000):\n    fact[i] = i*fact[i-1]\n    \ndp = [0]*(10**5+1)\ndp[0] = 1\n \ndef prime_factor(n):\n    if n < 2: return n\n    i = 2\n    while i*i <= n:\n        if n % i == 0:\n            yield i\n            n //= i\n        i += 1\n    if n > 1:\n        yield n\n    "}, "2218": {"problem_id": 2218, "answer": "from sys import stdin\ninput=stdin.readline\nn,k=map(int,input().split())\na=list(map(int,input().split()))\ns=sum(a)\nd={}\nfor i in range(1,k+1):\n    d[a[i-1]]=i\n    s+=a[i-1]\n    if s in d:\n        d[s].append(i)\nprint(*[x for x in d.values()],sep='\\n')"}, "2219": {"problem_id": 2219, "answer": "t = int(input())\nfor i in range(t):\n    n, k = map(int, input().split())\n    if n%k == 0:\n        print(n//k)"}, "2220": {"problem_id": 2220, "answer": "import sys\ninput = sys.stdin.readline\nn,m,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nd=dict()\nfor i in range(m):\n    d[a[i]]=i+1\nans=0\nfor i in range(1,max(a)+1):\n    if d[i]!=i+1:\n        ans=max(ans,i+1)\n    else:\n        break\nprint(ans)\n"}, "2221": {"problem_id": 2221, "answer": "import sys\ninput=sys.stdin.readline\nx,y=list(map(int,input().split()))\nd=list(map(int,input().split()))\ns=input()\nif len(s)==1:\n    print(-1)\n    return\nd.sort()\nu=d[len(s)-1]\nfor i in range(len(s)):\n    if s[i]=='U':\n        u-=1\n    elif s[i]=='D':\n        u+=1\n    elif s[i]=='L':\n        u-=1\n    else:\n        u+=1\n    if u==0:\n        break\nprint(i+1)\n"}, "2222": {"problem_id": 2222, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nf=[0]*(n+1)\nfor i in range(1,n+1):\n    if a[i-1]==0:\n        f[i]=i\n    else:\n        f[i]=max(f[i-1],i)\nans=0\nfor i in range(1,n+1):\n    ans+=f[i]\nprint(ans)"}, "2223": {"problem_id": 2223, "answer": "import sys\nimport bisect\ninput = sys.stdin.readline\nread = sys.stdin.read\nn = int(input())\nedges = []\nfor i in range(n-1):\n    a, b = map(int, input().split())\n    edges.append((a, b))\n\nvisited = [0]*(n+1)\nans = 0\nfor edge in edges:\n    d = bisect.bisect_left(visited, edge[1])\n    visited[edge[0]] = d\n    ans += d\n    if visited[edge[0]] == 1:\n        ans -= 1\nprint(ans)"}, "2224": {"problem_id": 2224, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nprint2=lambda x: stdout.write(str(x)+'\\n')"}, "2225": {"problem_id": 2225, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n \nt = []\nfor i in range(n):\n    t.append((a[i], i))\n \nt.sort()\n \nv = 0\ncur = 0\nfor i in range(n):\n    if t[i][1] == 0:\n        cur = cur ^ t[i][0]\n    elif t[i][1] == 1:\n        v = v ^ t[i][0]\n    else:\n        cur = cur ^ t[i][0]\n \nprint(v)\n"}, "2226": {"problem_id": 2226, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nMOD = 10**9+7\nINF = 10**20\nn, m, q = list(map(int, input().split()))\nedges = []\nfor _ in range(m):\n    a, b, c = list(map(int, input().split()))\n    edges.append([a, b, c])\n\nV = [-1] * (n+1)\nE = [[] for _ in range(n+1)]\nfor i in range(1, n+1):\n    E[i].append(i)\n\nans = 0\nvisited = [0] * (n+1)\ndeq = [0]\nwhile len(deq) > 0:\n    now = deq[0]\n    dist = now - visited[now]\n    ans += dist * V[now]\n    visited[now] = now\n    for i in range(len(E)):\n        if dist < E[i][now]:\n            now = E[i][now]\n            ans += dist * V[now]\n            deq.append(now)\nprint(ans)\n"}, "2227": {"problem_id": 2227, "answer": "import sys\ndef main():\n    s=sys.stdin.readline().strip()\n    n=len(s)\n    cnt=0\n    for i in range(n):\n        if s[i]==\"s\":\n            cnt+=1\n        elif s[i]==\"l\":\n            cnt+=s[i]==\"l\"\n        elif s[i]==\"r\":\n            cnt+=s[i]==\"r\"\n        else:\n            cnt+=abs(ord(s[i])-97)\n    print(cnt)\nmain()"}, "2228": {"problem_id": 2228, "answer": "n = int(input())\na = [0] * 10000001\nfor i in range(n):\n    b, c = map(int, input().split())\n    a[b] += c\nprint(max(a), a.count(max(a)))"}, "2229": {"problem_id": 2229, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = [0]*(n+1)\nfor i in range(1, n+1):\n    c[i] = c[i-1] + a[i]\nprint(' '.join(map(str, c)))"}, "2230": {"problem_id": 2230, "answer": "n = int(input())\ns = set()\nfor i in range(n):\n    s.add(int(input()))\nprint(*s)"}, "2231": {"problem_id": 2231, "answer": "import sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    ANS = [0] * N\n    for i in range(4):\n        ANS[i] = A[i]\n    print(*ANS[:4])"}, "2232": {"problem_id": 2232, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nedges = []\nfor i in range(n-1):\n    u, v = list(map(int, input().split()))\n    edges.append((u, v, 1))\n    edges.append((v, u, 2))\n\nedges.sort()\n\ng = collections.defaultdict(list)\n\nfor edge in edges:\n    g[edge[0]].append(edge[1])\n    g[edge[1]].append(edge[0])\n\nvisited = set()\nres = 0\nstack = [0]\nwhile stack:\n    v = stack.pop()\n    visited.add(v)\n    res += 1\n    for nxt in g[v]:\n        if nxt not in visited:\n            stack.append(nxt)\nprint(res, end=\" \")\n"}, "2233": {"problem_id": 2233, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10 ** 9 + 7\ninf = float('inf')\neps = 10 ** -9\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = input().strip()\n    b = input().strip()\n    if a == b:\n        print('Yes')\n    else:\n        print('No')"}, "2234": {"problem_id": 2234, "answer": "import sys\nimport math\ndef input(): return sys.stdin.readline().strip()\ndef iinput(): return int(input())\ndef finput(): return list(map(int, input().split()))\ndef tinput(): return list(map(int, input().split()))\nt = iinput()\nfor _ in range(t):\n    n, k = finput()\n    print(k)"}, "2235": {"problem_id": 2235, "answer": "n = int(input())\nt = [0]*n\nfor i in range(n):\n    t[i] = int(input())\n    \nans = 0\nfor i in range(n):\n    ans += t[i]*pow(20,3)\nprint(ans)"}, "2236": {"problem_id": 2236, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i]\n    if s < 0:\n        s += a[i+1]\n    elif s == 0:\n        s -= a[i]\nprint(s // 2)"}, "2237": {"problem_id": 2237, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = [0] * (2**i for i in range(0, n+1))\nfor i in range(0, n):\n    b[a[i]-1] = 1\nans = 0\nfor i in range(1, n+1):\n    if b[i] == 0:\n        ans = max(ans, i)\n        break\nprint(ans)\nprint(*[2] * n, sep=\"\\n\")"}, "2238": {"problem_id": 2238, "answer": "n = int(input())\nprint(\"*\"*(n//2)+\"D\"*(n//2))"}, "2239": {"problem_id": 2239, "answer": "t = int(input())\nfor i in range(t):\n    x = int(input())\n    print(x + sum(bin(x)[2:].zfill(x+1)))"}, "2240": {"problem_id": 2240, "answer": "s = input()\nt = input()\nreplaces = 0\nfor i in range(len(s)):\n    if s[i] == \"0\":\n        replaces += 1\n    else:\n        s = s[:i] + s[i+1:]\n        t = t[:i] + t[i+1:]\nprint(replaces)"}, "2241": {"problem_id": 2241, "answer": "n = int(input())\nnotes = list(map(int, input().split()))\npnts = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if notes[i] == pnts[i]:\n        s += i*notes[i]\n    elif notes[i] > pnts[i]:\n        s += notes[i]*min(pnts[i],notes[i]+1)\n    else:\n        s += notes[i]*max(notes[i],1)\nprint(s)"}, "2242": {"problem_id": 2242, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nS = input()\nN = len(S)\ndp = [0] * 10**4\nfor i in range(N):\n    dp[i] = sum(int(s) % 100 == i for s in S[:i+1])\nprint(dp[-1])"}, "2243": {"problem_id": 2243, "answer": "import sys\nreadline = sys.stdin.readline\nn, k, q = list(map(int, readline().split()))\nt = list(map(int, readline().split()))\ns = [None] * n\nfor i in range(n):\n    s[t[i]-1] = i\nonline = {}\nqueries = []\nfor line in readline().split():\n    queries.append(list(map(int, line.split())))\n    if queries[0][0] == 1:\n        t[queries[0][1]] = queries[1][0]\n    else:\n        online[queries[0][1]] = queries[1][0]\n        s[t[queries[0][1]]] = queries[1][0]\nprint('YES' if online[t[i]] else 'NO')"}, "2244": {"problem_id": 2244, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nemployees = [tuple(map(int, input().split())) for _ in range(n)]\ndepts = [[] for _ in range(n)]\nfor i, (a, b) in enumerate(employees):\n    depts[i].append(a - 1)\n    depts[i].append(b - 1)\n    if a > b:\n        a, b = b, a\n    d = depts[i]\n    d.sort()\n    d.pop()\n    d.appendleft((i, -1))\n    d.append(i)\n    depts[i].sort()\n\nans = [0] * n\nans[1] = 1\nfor i in range(1, n):\n    if ans[i] == 0:\n        ans[i] = 1\n        for j in range(i):\n            if ans[j] == 0:\n                ans[j] = 1\n                for k in range(j):\n                    if ans[k] == 0:\n                        ans[k] = 1\nprint(*ans, sep=' ')\n"}, "2245": {"problem_id": 2245, "answer": "t = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    if n*(n+1)/2 < k:\n        print(\"Alice\")\n    else:\n        print(\"Bob\")"}, "2246": {"problem_id": 2246, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [list(map(int, input().split())) for i in range(n - 1)]\nans = 0\nfor i in range(n - 1):\n    u, v = a[i]\n    ans += (u[0] - v[0]) * (u[1] - v[1])\nprint(ans)"}, "2247": {"problem_id": 2247, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor _ in range(t):\n    s, a, b, c = map(int, readline().split())\n    print(pow(a, 2) * (s // a) * pow(b, 2) * c + max(0, s - a * b))"}, "2248": {"problem_id": 2248, "answer": "import sys\ninput=sys.stdin.readline\nn,m=list(map(int,input().split()))\nif n==1 and m==1:\n    print(1)\n    return\ns=max(m,n-1)\nfor i in range(1,s+1):\n    print(i)"}, "2249": {"problem_id": 2249, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, n):\n    if A[i] == A[i - 1]:\n        ans += 1\nprint(ans)"}, "2250": {"problem_id": 2250, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    s=input().strip()\n    ans=0\n    for i in range(n):\n        if s[i]=='L':\n            ans+=1\n        else:\n            ans+=2\n    print(ans)"}, "2251": {"problem_id": 2251, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nread = lambda: list(map(int, input().split()))\nn, m = read()\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b, c = read()\n    edges[a-1].append((b-1, c))\n    edges[b-1].append((a-1, c))\ncolors = [-1] * n\ncumsum = [0] * n\nfor i in range(n):\n    cumsum[i] = cumsum[i] + 1\ndef bfs(start):\n    stack = [start]\n    visited = [False] * n\n    qu = deque()\n    qu.append(start)\n    while stack:\n        cur = stack.pop()\n        for nei, c in edges[cur]:\n            if not visited[nei]:\n                visited[nei] = True\n                if colors[nei] == -1:\n                    colors[nei] = c\n                    bfs(nei)\n                elif colors[nei] == c:\n                    stack.append(nei)\nprint(len(set([i for i in range(n) if colors[i]!= -1])))"}, "2252": {"problem_id": 2252, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\np = list(map(int, readline().split()))\npages = sorted(set(p))\n\nl = pages[:]\nr = pages[::-1]\n\nfor i in range(m):\n    l.append(min(l[-1], i + 1))\n    r.append(max(r[-1], i + 1))\n\n# print(l)\n# print(r)\n\nleft = 0\nright = n\n\nwhile True:\n    if pages[left] == pages[right]:\n        break\n    else:\n        left += 1\n        right = left\n        print('Yes')\n        break"}, "2253": {"problem_id": 2253, "answer": "t = int(input())\nfor _ in range(t):\n    s = input()\n    a = s.split('_')\n    a[3] = True\n    b = ''.join(a).split('_')\n    c = ''.join(b).split('_')\n    if a[0] in ['po', 'desu']:\n        print('FILIPINO')\n    elif a[1] in ['mnida','masu']:\n        print('KOREAN')\n    else:\n        print('JAPANESE')"}, "2254": {"problem_id": 2254, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nf = [0] * (n + 1)\nf[0] = a[0]\nfor i in range(1, n):\n    f[i] = f[i - 1] ^ a[i]\nans = 0\nfor i in range(n):\n    if f[i]:\n        ans += 1 << i\nprint(ans)\n"}, "2255": {"problem_id": 2255, "answer": "from collections import deque\nn,m=list(map(int,input().split()))\ng=[[] for i in range(n)]\nfor i in range(m):\n    u,v=list(map(int,input().split()))\n    g[u-1].append(v-1)\n    g[v-1].append(u-1)\nq=deque([i for i in range(n)])\ns=[]\nwhile q:\n    now=q.popleft()\n    for i in g[now]:\n        if s!=[] and i not in s:\n            s.append(i)\n            q.append(i)\n            if len(s)==10:\n                break\nprint(*s,sep=\"\\n\")\n"}, "2256": {"problem_id": 2256, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,x,a,b=list(map(int,input().split()))\n    print(max(a-1,b-1)-min(a+1,b-1))"}, "2257": {"problem_id": 2257, "answer": "import sys\ninput = sys.stdin.readline\n\nn, x1, y1, x2, y2 = map(int, input().split())\nf1 = [tuple(map(int, input().split())) for i in range(n + 2)]\nf2 = [tuple(map(int, input().split())) for i in range(n + 2)]\n\nans = (y1**2 + x1**2)**.5\n\nfor i in range(n):\n    for j in range(i + 1):\n        ans = min(ans, f1[i][0] - f1[j][0], f2[i][1] + f2[j][1])\n\nprint(ans)"}, "2258": {"problem_id": 2258, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\nans = []\ncnt = 0\nfor i in range(n):\n    if d[a[i]] == i:\n        ans.append(cnt)\n        cnt += 1\nd.setdefault(a[i], i)\nans.sort()\nprint(n - ans[0])"}, "2259": {"problem_id": 2259, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\n\ng = [[] for _ in range(n)]\nfor i in range(1, n):\n    g[i].append(i)\n\nvisited = [False] * n\nmaxInd = [0] * n\ncurMax = [0] * n\ndef findMax(x):\n    nonlocal maxInd\n    nonlocal curMax\n    if x == curMax[x]:\n        maxInd[x] = curMax[x]\n        curMax[x] = 0\n    elif visited[x]:\n        return x\n    else:\n        visited[x] = True\n        curMax[x] = maxInd[x]\n        return findMax(curMax[x])\n\nbubbleSortGraph()\nwhile True:\n    edge = g[a[0]].pop(0)\n    g[edge].append(a[1:])\n    visited[edge] = True\n    curMax[edge] = a[0]\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            curMax[i] = a[i]\n            break\n        findMax(i)\n    a[0] += 1\n    bubbles = 1\n    while bubbles == 0:\n        bubbleSortGraph()\n        bubbles += 1\n    print(n - curMax[a[0]])"}, "2260": {"problem_id": 2260, "answer": "n = int(input())\nprint(5**n)\n"}, "2261": {"problem_id": 2261, "answer": "k = int(input())\na = []\nfor i in range(k):\n    a.append(1)\n    a.append(2)\n    a.append(3)\n    a.append(4)\n    a.append(5)\n    a.append(6)\n    a.append(7)\n    a.append(8)\n    a.append(9)\n    a.append(0)\nprint(' '.join(map(str,a)))"}, "2262": {"problem_id": 2262, "answer": "from collections import Counter\nn = int(input())\ns = input()\nc = Counter(s)\nprint(sum([1 for k, v in c.items() if v > 1]))"}, "2263": {"problem_id": 2263, "answer": ""}, "2264": {"problem_id": 2264, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n  n = int(input())\n  ans = [0]*n\n  ans[0] = 0\n  for i in range(1,n):\n    a,b = map(int,input().split())\n    ans[i] = min(ans[i-1],a-b,b-a)\n  print(min(ans))"}, "2265": {"problem_id": 2265, "answer": "import sys\ninput = sys.stdin.readline\n\na = input().rstrip()\nb = input().rstrip()\n\nn = len(a)\nans = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        ans += 1\nprint(ans)"}, "2266": {"problem_id": 2266, "answer": "n, k, d = list(map(int, input().split()))\np = list(map(int, input().split()))\nr = [0] * n\nfor i in range(n):\n    u, v = p[i]\n    if v > d:\n        r[v] = i\n    else:\n        r[v] = r[v] + k if i == n - 1 else max(r[v - 1], r[v])\n        for j in range(k):\n            if r[j] == i:\n                continue\n            elif r[j] > d:\n                r[j] = r[j] + k\n            else:\n                r[j] = r[j] + 1\nprint(len(set(r)))\nprint(*r, sep = '\\n')\n"}, "2267": {"problem_id": 2267, "answer": "n = int(input())\na = []\nfor i in range(n):\n    a.append(input())\n    \na.sort()\nb = a[0] + a[1]\nfor i in range(1, n):\n    b += a[i]"}, "2268": {"problem_id": 2268, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\na=input().strip()\nb=[]\nfor i in range(n):\n    b.append(input().strip())\nans=''\nfor i in range(m):\n    x,y=b[i]\n    x=x.lower()\n    y=y.lower()\n    if x==a:\n        ans=y\n    elif y==a:\n        ans=x\n    else:\n        ans=x+y\nprint(ans)\n"}, "2269": {"problem_id": 2269, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    s=input().rstrip()\n    d={}\n    for i in s:\n        d[i]=d.get(i,0)+1\n    ans=[]\n    for i in d:\n        if d[i]==3:\n            ans.append(i)\n        elif d[i]==1:\n            ans.append(i)\n        elif d[i]==2:\n            ans.append(i)\n    print(min(ans))"}, "2270": {"problem_id": 2270, "answer": "n = int(input())\na = list(map(int, input().split()))\nq = int(input())\nans = ['YES']*q\nfor i in range(q):\n    t = int(input())\n    if t == 1:\n        print('NO')\n        ans.remove(ans[-1])\n    elif t == 2:\n        print('NO')\n        ans.append('YES')\n        continue\n    elif t == 3:\n        print('NO')\n        ans.append('YES')\n        continue\n    elif t == 4:\n        print('NO')\n        ans.append('NO')\n        continue\n    else:\n        print('YES')\n        ans.append('NO')"}, "2271": {"problem_id": 2271, "answer": "import sys\nimport math\nn = int(sys.stdin.readline())\na = [0] * n\nfor i in range(n-1):\n    b = list(map(int, sys.stdin.readline().split()))\n    a[b[0]] = b[1]\n    a[b[1]] = b[0]\nans = sum(a)\nprint(ans)\n"}, "2272": {"problem_id": 2272, "answer": "n = int(input())\nfor i in range(n):\n    q = input().split()\n    if q[0] == '1':\n        a = int(q[1])\n        if a > q[2]:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        a = int(q[1])\n        if a > q[2]:\n            print('NO')\n        else:\n            print('YES')"}, "2273": {"problem_id": 2273, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b = map(int, input().split())\n    edges[a-1].append(b-1)\n    edges[b-1].append(a-1)\n\nvisited = [-1] * n\ns = set()\nans = [-1] * n\ndef dfs(v, s):\n    nonlocal visited\n    visited[v] = 1\n    for u in edges[v]:\n        if visited[u] == -1:\n            dfs(u, s)\n            s.add(u)\ndfs(0, s)\nprint(*ans, sep='\\n')"}, "2274": {"problem_id": 2274, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor _ in range(t):\n    n, m = map(int, readline().split())\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if i!=n and j!=m:\n                ans += 1\n                if i==n and j==m:\n                    ans -= 1\n                elif i==n:\n                    ans -= 1\n                elif j==m:\n                    ans -= 1\n    print(ans)"}, "2275": {"problem_id": 2275, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    n = int(readline())\n    a = [0] * n\n    for i in range(n):\n        a[i] += 1\n        if a[i] == 0:\n            break\n    last = -1\n    for i in range(n):\n        if a[i] == 0:\n            last = i\n            break\n    ans = last\n    for i in range(n):\n        if i == last:\n            ans += 1\n    print(ans)"}, "2276": {"problem_id": 2276, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip()\na = list(map(int, input().split()))\n\np = [0]*26\nfor i in range(n):\n    p[i+1] = a[i]\n\nans = 0\ncur = 0\nfor i in range(26):\n    ans += pow(10, i)\n    cur += pow(10, i)\n\nprint(ans)"}, "2277": {"problem_id": 2277, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nm = int(input())\nperms = [0]*(100005)\nfor i in range(1, n+1):\n    perms[i] += 1\n    if a[i] > a[i - 1]:\n        print(\"even\")\n    elif a[i] < a[i - 1]:\n        print(\"odd\")\n    else:\n        print(\"both\")"}, "2278": {"problem_id": 2278, "answer": "import sys\ninput = sys.stdin.readline\nq = int(input())\nfor _ in range(q):\n    a, b, m = map(int, input().split())\n    if m == 1:\n        print(-1)\n        continue\n    ans = [a, b, min(m, b - a + 1)]\n    for i in ans:\n        print(i, end=' ')\n    print('\\n' +''.join(ans))"}, "2279": {"problem_id": 2279, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\nans = [0]*n\nfor i in range(n):\n    ans[i] = read().rstrip().split()\nprint(*ans)"}, "2280": {"problem_id": 2280, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    A=list(map(int,input().split()))\n    d=dict()\n    for i in range(n):\n        d[A[i]]=i\n    ans=0\n    for i in d:\n        if d[i]>1:\n            ans+=1\n    print(ans)"}, "2281": {"problem_id": 2281, "answer": "n = int(input())\nl = [1]\nfor i in range(1,n):\n    l.append(l[i]*2)\nprint(\" \".join(map(str,l)))"}, "2282": {"problem_id": 2282, "answer": "n = int(input())\ns = input()\nans = 0\nfor i in range(n):\n    if s[i] == \"L\":\n        ans += 1\n    else:\n        ans += 2\nprint(ans)"}, "2283": {"problem_id": 2283, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nA = list(map(int, input().split()))\nedges = []\nfor i in range(n):\n    edges.append(tuple(A[i]))\n\nans = 0\nvisited = [0] * n\nstack = deque([])\nfor i in range(m):\n    u, v, w = edges[i]\n    stack.append((u, v, w))\n    visited[u] = visited[v] = visited[w] = 1\n    while stack:\n        u, v, w = stack.pop()\n        for nei in graph[u]:\n            if visited[nei] == 0:\n                stack.append((nei, v, w))\n    ans = max(ans, w)\nprint(ans)"}, "2284": {"problem_id": 2284, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    c += a[i]\n    b.remove(a[i])\nprint(c)\n"}, "2285": {"problem_id": 2285, "answer": "import re\nn = int(input())\nfor i in range(n):\n    s = input()\n    block = \"\"\n    for i in range(0, len(s)):\n        block = block + re.sub(r'\\D{1,2}', '', s[i])\n        if i == 0:\n            break\n    print(hex(int(block, 16))[2:].upper())"}, "2286": {"problem_id": 2286, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\na = [0]*n\nfor i in range(n-1):\n    a[i] = bin(a[i] + \"01\")[2:]\nprint(*a)"}, "2287": {"problem_id": 2287, "answer": "t = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    i = 0\n    flag = 0\n    for i in range(n):\n        if s[i] == '0':\n            flag += 1\n        elif s[i] == '1':\n            flag -= 1\n            i += 1\n    print(flag)"}, "2288": {"problem_id": 2288, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    a.sort()\n    b.sort()\n    ans=0\n    for i in range(n-1):\n        if(a[i]!=b[i]):\n            ans=1\n            break\n    print(\"Yes\" if ans==0 else \"No\")"}, "2289": {"problem_id": 2289, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, q = map(int, readline().split())\na = list(map(int, readline().split()))\nk = list(map(int, readline().split()))\n\ndef solve(i):\n    if k[i] == 1:\n        return i\n    elif k[i] == 2:\n        return solve(i+1)\n    else:\n        return solve(i+1) + (solve(i) for i in range(n))\n\nprint(solve(0))"}, "2290": {"problem_id": 2290, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\nn, m = map(int, input().split())\nedges = [[] for _ in range(n)]\nfor i in range(m):\n    u, v = map(int, input().split())\n    u -= 1\n    v -= 1\n    edges[u].append(v)\n    edges[v].append(u)\n\nans = 0\nsz = n\nvisited = [False] * n\nstack = deque([0])\nwhile stack:\n    now = stack.pop()\n    for nei in edges[now]:\n        if visited[nei]:\n            continue\n        visited[nei] = True\n        ans += 1\n        stack.append(nei)\nprint(ans)"}, "2291": {"problem_id": 2291, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nd = min(a)\nans = d^a[0]\nfor i in range(1, n):\n    ans = min(ans, a[i]^d)\nprint(ans)"}, "2292": {"problem_id": 2292, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    valid=False\n    for i in range(n):\n        if a[i]!=b[i]:\n            valid=True\n            break\n    if valid:\n        print('Yes')\n    else:\n        print('No')"}, "2293": {"problem_id": 2293, "answer": "from sys import stdin\nm, n = list(map(int, stdin.readline().split()))\na = []\nfor i in range(m):\n    a.append(int(stdin.readline()))\nans = [False] * n\ns = set()\nfor i in range(n):\n    s.add(a[i])\n    ans[i] = True\nfor i in range(1, n):\n    if ans[i]:\n        continue\n    m = 1\n    for j in range(1, n):\n        if m % j == 0:\n            m *= j\n            if m > a[j]:\n                ans[j] = True\n                break\n    if ans[i]:\n        continue\n    m = 1\n    for j in range(1, n):\n        if m % j == 0:\n            m *= j\n            if m > a[j]:\n                ans[j] = True\n                break\nprint(\"possible\") if ans else print(\"impossible\")"}, "2294": {"problem_id": 2294, "answer": "from sys import stdin\ninput = stdin.readline\nn = int(input())\nans = []\nfor i in range(n):\n    a, t, x = map(int, input().split())\n    if a not in ans:\n        ans.append(a)\n    elif t not in ans:\n        ans.append(t)\n    else:\n        ans[t] += x\nprint(*ans, sep='\\n')"}, "2295": {"problem_id": 2295, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i]\nprint(s)\n"}, "2296": {"problem_id": 2296, "answer": "import sys\ninput = sys.stdin.readline\n\nn, q = list(map(int, input().split()))\npoints = []\nfor _ in range(n):\n    x, y = list(map(int, input().split()))\n    points.append((x, y))\n\nq.sort()\n\ndef solve(a, b):\n    xf, yf = points[a]\n    xc, yc = points[b]\n    xc, yc = min(xc, yc), max(xc, yc)\n\n    if xc > yc:\n        xc, yc = yc, xc\n\n    ng = abs(xf - xc)\n    ng = abs(yf - yc)\n    if ng < ng:\n        return float('inf')\n    elif ng > ng:\n        return float('-inf')\n    else:\n        return xc + ng / 2.0"}, "2297": {"problem_id": 2297, "answer": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    l, r = map(int, input().split())\n    print(l * (-1) ** r)"}, "2298": {"problem_id": 2298, "answer": "t = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    d = {}\n    for i in range(1, 10**9):\n        d[i] = d.get(i, 0) + i\n    ans = []\n    for i in range(q):\n        l, r = map(int, input().split())\n        ans.append(d[r] - d[l - a])\n    print(*ans)"}, "2299": {"problem_id": 2299, "answer": "from operator import itemgetter\nn,m=list(map(int,input().split()))\nl,r=list(map(int,input().split()))\ns=[i for i in range(n)]\ns.sort()\nd={}\nfor i in range(n):\n    d[s[i]]=i\n    \nfor i in range(m):\n    a,b=list(map(int,input().split()))\n    if a>b:\n        a,b=b,a\n    s[i]=a\n    \nans=['No','Yes']\nfor i in range(n):\n    if s[i]>ans[i]:\n        ans.append(ans[i])\nprint('\\n'.join(ans))\n"}, "2300": {"problem_id": 2300, "answer": "MOD = 1000000000000000000\ndef calc(a,b):\n    c = a%b\n    d = b%a\n    return (c*f'{d}')%MOD\n\nn,m = list(map(int,input().split()))\na = list(map(int,input().split()))\nt = []\nfor i in range(n):\n    t.append(calc(a[i],a[i]))\n\nm = max(a)\nt.sort()\ndp = [0]*(m+2)\nfor i in range(1,m+1):\n    dp[i] = sum(dp[i-1:]+t[i-1])%MOD\nprint(dp[-1])\n"}, "2301": {"problem_id": 2301, "answer": "n = int(input())\narr = list(map(int, input().split()))\narr.sort()\nans = 0\nfor i in range(n):\n    if arr[i] < arr[i+1]:\n        ans += 1\nprint(ans)\nprint(' '.join(map(str, arr)))"}, "2302": {"problem_id": 2302, "answer": ""}, "2303": {"problem_id": 2303, "answer": "class Solution:\n    def reverseWords(self, s: str) -> str:\n        words = s.split()\n        words =''.join(words)\n        print(words)\n        return''.join(reversed(words))"}, "2304": {"problem_id": 2304, "answer": "from collections import deque\nN, M = list(map(int, input().split()))\nL = []\nR = []\nD = []\nfor i in range(M):\n    L.append(tuple(map(int, input().split())))\n    R.append(tuple(map(int, input().split())))\nINF = 10**10\nans = \"No\"\nfor i in range(N):\n    x = INF\n    for j in range(i+1, N):\n        x = min(x, L[j][0] - L[i][1])\n        if x not in D:\n            D.append(x)\n        ans = \"Yes\"\nprint(ans)\n"}, "2305": {"problem_id": 2305, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    C = [list(map(int, input().split())) for _ in range(n-1)]\n    d = [[] for _ in range(n+1)]\n    for i, (a, b) in enumerate(C, 1):\n        d[a].append(b)\n        d[b].append(a)\n\n    color = [0] * (n+1)\n    color[1] = 1\n    ans = [0] * (n+1)\n    stack = [1]\n    for i in range(2, n+1):\n        while stack and color[stack[-1]]!= color[i]:\n            stack.pop()\n        stack.append(i)\n        while stack:\n            j = stack.pop()\n            ans[j] += 1\n            color[j] = color[stack[-1]] + 1\n            for nei in d[j]:\n                if color[nei] == 0:\n                    stack.append(nei)\n    print(*ans, sep='\\n')\n\nmain()\n"}, "2306": {"problem_id": 2306, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    v = [int(input()) for _ in range(n)]\n    d = [0]*n\n    for i in range(n):\n        d[i] = t[i]*(v[i]//1e6)\n    ans = 0\n    for i in range(n):\n        ans = max(ans, d[i]+t[i])\n    print(ans)\nmain()"}, "2307": {"problem_id": 2307, "answer": ""}, "2308": {"problem_id": 2308, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    x,y=input().split()\n    x=int(x)\n    y=int(y)\n    f=x+y*2**(len(x)-1)\n    rev=y\n    rev.reverse()\n    f=f//f%f\n    if f<=0:\n        print(0)\n    else:\n        rev=rev*2**(len(revo)-1)\n        revo=rev//f\n        if revo<=0:\n            print(0)\n        else:\n            print(len(x),end=\"\")\n            for i in range(len(x)):\n                print(x[i],end=\"\")\n            print()"}, "2309": {"problem_id": 2309, "answer": "n = int(input())\ns = set()\nfor i in range(n):\n    s.add(input())\nans = 0\nfor i in s:\n    if i not in s:\n        ans += 1\nprint(ans)"}, "2310": {"problem_id": 2310, "answer": ""}, "2311": {"problem_id": 2311, "answer": "import sys\ninput = sys.stdin.readline\nn,m,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nans=0\nfor i in range(n):\n    for j in range(m):\n        ans+=a[i]*b[j]\nprint(ans)\n"}, "2312": {"problem_id": 2312, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    n = int(readline())\n    b = list(map(int, readline().split()))\n    print(\"YES\" if sum(b) == sum(set(b)) else \"NO\")\n"}, "2313": {"problem_id": 2313, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nr = list(map(int, readline().split()))\nd = {}\nfor i in range(1, n+1):\n    d[i] = 0\nans = [0]*n\nans[0] = r[0]\nfor i in range(1, n):\n    ans[i] = min(ans[i-1], r[i] + d[i])\nprint(''.join(map(str, ans)))"}, "2314": {"problem_id": 2314, "answer": ""}, "2315": {"problem_id": 2315, "answer": "t = int(input())\nfor _ in range(t):\n    l, r = map(int, input().split())\n    print(l, end=\" \")\n    if l < r:\n        print(l, end=\" \")\n    elif l == r:\n        print(l, end=\" \")\n    else:\n        print(r, end=\" \")"}, "2316": {"problem_id": 2316, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    x,n,m=list(map(int,input().split()))\n    if x==0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "2317": {"problem_id": 2317, "answer": "from sys import stdin\ninput = stdin.readline\n\nn,m,a,b = list(map(int,input().split()))\npaths = list(map(int,input().split()))\nsegments = [tuple(map(int,input().split())) for i in range(m)]\n\ndef check(x,y):\n    if a<=x<=b:\n        return segments[y][x]\n    elif b<=x<=a:\n        return segments[y][x]\n    else:\n        m.remove(x)\n        m.remove(y)\n        segments[y][x] = 1\n        return segments[y][x]\n\nleft,right = 0,m\nfor i in range(n+1):\n    if segments[i][0]!=paths[i]:\n        left = i\n        break\n\nfor i in range(1,m):\n    if segments[i][0]!=paths[i]:\n        right = i\n        break\n\nleft = m\nright = n\nans = float('inf')\nfor i in range(left,right+1):\n    ans = min(ans,paths[i] - paths[i-1])\nprint(left+1,right+1) if ans!=float('inf') else print(ans,segments[left][right])\n"}, "2318": {"problem_id": 2318, "answer": "n = int(input())\ns = list(input())\nt = list(input())\nfor i in range(n):\n    if s.count(t[i]) > 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "2319": {"problem_id": 2319, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input().strip()\n    b = input().strip()\n    if a == b:\n        print(-1)\n    else:\n        cnt = 0\n        for i in range(n):\n            if a[i]!= b[i]:\n                cnt += 1\n        if cnt > 0:\n            print(cnt)\n        else:\n            print(0)"}, "2320": {"problem_id": 2320, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    s=input().strip()\n    t=input().strip()\n    ans=0\n    for i in range(n):\n        if s[i]!=t[i]:\n            ans+=1\n    print(ans)"}, "2321": {"problem_id": 2321, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input().rstrip()\n    ans = 0\n    for i in range(n):\n        if s[i] == '<':\n            ans += 1\n        elif s[i] == '>':\n            if s[i-1] == '<':\n                ans += 1\n    print(ans)"}, "2322": {"problem_id": 2322, "answer": ""}, "2323": {"problem_id": 2323, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nstrings = list(map(int, input().split()))\nquestions = int(input())\nqueries = [list(map(int, input().split())) for _ in range(questions)]\n\n# dp = [[0]*10 for _ in range(10)]\ndp = [[0]*10 for _ in range(10)]\nfor q in queries:\n    l, r = q[0]\n    dp[l].append(r)\n    dp[r].append(l)\n\nfor i in range(10):\n    dp[i] = sorted(dp[i])\n\nprint(*dp, sep=' ')\n"}, "2324": {"problem_id": 2324, "answer": "s = input()\nn = len(s)\nc = 0\nfor i in range(1, n):\n    if s[i] == s[i - 1]:\n        c += 1\n    else:\n        break\nprint(c)"}, "2325": {"problem_id": 2325, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\n\nQ = int(input())\nfor _ in range(Q):\n    x,y = map(int, input().split())\n    f = [0]*(y+1)\n    for i in range(1,y+1):\n        f[i] = f[i-1]%MOD\n    ans = set()\n    for i in range(x+1):\n        if i in ans: continue\n        ans.add(i)\n        for j in range(y):\n            if i%j==0:\n                f[j]+=1\n    print(f[y]%MOD)"}, "2326": {"problem_id": 2326, "answer": "mod = 998244353\nfrom collections import defaultdict\ninput = lambda: list(map(int, input().split()))\nn = int(input())\na = list(map(int, input().split()))\nb = defaultdict(int)\nfor i in range(n):\n    b[a[i]] += 1\nans = 0\nfor i in range(1, n+1):\n    if b[i] == 0:\n        ans += pow(2, i)\n    elif b[i] % 2 == 0:\n        ans += pow(2, i - 1) * (pow(2, i) - 1)\n    else:\n        ans += pow(2, n - i - 1) * (pow(2, i) - 1)\nprint(ans % mod)"}, "2327": {"problem_id": 2327, "answer": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    for i in range(n-1):\n        if bin(i).count('1') == i:\n            ans += 1\n    print(ans)"}, "2328": {"problem_id": 2328, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    a=list(map(int,input().split()))\n    a.sort()\n    d=sorted(a)\n    x=min(d)\n    print(x)"}, "2329": {"problem_id": 2329, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\ntowers = list(map(int, input().split()))\n\nd = [[0] * (n + 1) for _ in range(m)]\nfor t in range(1, m + 1):\n    d[t] = [min(x[1], y[1]) for x, y in zip(towers[:t], towers[t])]\n\nans = [0] * (n + 1)\ncnt = 0\nfor i in range(1, n + 1):\n    cnt += d[i][1]\n    ans[i] = cnt\n\nprint(*ans)"}, "2330": {"problem_id": 2330, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,m=list(map(int,input().split()))\n    l=list(map(int,input().split()))\n    l.insert(0,0)\n    ans=[]\n    for i in range(n):\n        ans.append((l[i]+l[i]//2)*2)\n    print(sum(ans))\n"}, "2331": {"problem_id": 2331, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    a,b=map(int,input().split())\n    if a>b:\n        print(\"Infinite\")\n    else:\n        print(\"Finite\")"}, "2332": {"problem_id": 2332, "answer": "from heapq import heappush, heappop\nn, k, m = [int(i) for i in input().split()]\nlanguages = [input().split() for i in range(n)]\nmessages = [input().split() for i in range(k)]\nsums = [0] * n\nfor i in range(n):\n    sums[i] = list(map(int, input().split()))\n    \nfor _ in range(k):\n    x, l = heappop(languages)\n    x.append(int(l))\n    for i in range(k):\n        l = x[i]\n        s = sums[x[i]]\n        heappush(sums[x[i]], l)\nprint(sum(map(max, s) for s in sums[1:]))"}, "2333": {"problem_id": 2333, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(1, n):\n    ans += (a[i] - 1) * (n - i) // (i - 1)\nprint(ans)"}, "2334": {"problem_id": 2334, "answer": "import sys\nread = sys.stdin.readline\n\nn = int(read())\na = list(map(int, read().split()))\ns = sum(a)\nf = int(read())\n\nres = 0\nfor i in range(1, f+1):\n    res += s - a[i-1]\n    s -= a[i-1]\nprint(res)"}, "2335": {"problem_id": 2335, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\npoints = [tok.split(' ') for tok in input().split()]\n\ndef dfs(p, c):\n    nonlocal ans\n    if c == 'R':\n        ans = min(ans, points[p] - points[0])\n    elif c == 'G':\n        ans = min(ans, points[p] + points[0])\n    elif c == 'B':\n        ans = min(ans, points[p] - points[0])\n    else:\n        ans = min(ans, points[p] + points[0])\n    \n    return ans\n\nans = float('inf')\ndfs(0, 'R')\ndfs(0, 'G')\ndfs(0, 'B')\n\nprint(ans)"}, "2336": {"problem_id": 2336, "answer": "n, k, q = list(map(int, input().split()))\na, b = list(map(int, input().split()))\nprint(sum([k + 1 for k in range(1, n + 1)]) // 2)"}, "2337": {"problem_id": 2337, "answer": "def solve(n, m, a, b):\n    if n == 1:\n        return 0\n    elif m == 1:\n        return 1\n\n    ans = 0\n    for i in range(1, n + 1):\n        ans += solve(i, m, a, b)\n\n    return ans\n\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(solve(n, m, a, b))\n"}, "2338": {"problem_id": 2338, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [tuple(map(int, input().split())) for i in range(n)]\n\nb = [[] for i in range(n + 2)]\nfor i in range(n):\n    b[i + 1].append(a[i][1])\n\nc = [0] * (n + 2)\nc[0] = 0\nans = 0\nfor i in range(1, n + 2):\n    for j in range(i):\n        c[i] += b[j][i]\n        if c[i] > ans:\n            ans = c[i]\n            c[i] = 0\n        b[j + 1].append(a[i][2])\n\nprint(ans)\n"}, "2339": {"problem_id": 2339, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    b = [a[i] for i in range(1, n)]\n    b.sort()\n    print(b[0]"}, "2340": {"problem_id": 2340, "answer": "import sys\nreadline = sys.stdin.readline\n\nQ = int(readline())\nAns = [0]*Q\nfor qu in range(Q):\n    H, N = map(int, readline().split())\n    A = list(map(int, readline().split()))\n    B = [0]*N\n    for i in range(H):\n        B[i] = A[i] + 1\n    print(min(B))"}, "2341": {"problem_id": 2341, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\nd=[[0]*n for i in range(m)]\nfor i in range(n):\n    d[i]=input().rstrip().lower()\nans=0\nfor i in range(1,m):\n    if d[i]==d[i-1]:\n        ans+=1\nprint(ans)\n"}, "2342": {"problem_id": 2342, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n,m=list(map(int,input().split()))\n    grid=[[False]*m for _ in range(n)]\n    for i in range(n):\n        for j in range(m):\n            grid[i][j]=True\n    d=[[False]*n for _ in range(m)]\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j]==False:\n                d[i][j]=True\n    ans=[]\n    for i in range(0,m):\n        if d[i][0]==True:\n            ans.append('Yes')\n        elif d[i][0]==False:\n            ans.append('No')\n        else:\n            ans.append('No')\n    print('\\n'.join(ans))\n"}, "2343": {"problem_id": 2343, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n,k=list(map(int,input().split()))\n    print(\"YES\" if k==1 else \"NO\")\n    l=0\n    r=2**n\n    for i in range(n):\n        if l%4==0:\n            l+=1\n        if r%4==0:\n            r-=1\n        if i%2==0:\n            print(r,end=\" \")\n        elif i%2==1:\n            print(r//2,end=\" \")\n        else:\n            print(r//2+1,end=\" \")\n        "}, "2344": {"problem_id": 2344, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\ncnt = [0]*n\nfor i in range(n):\n    a, b, k = map(int, input().split())\n    cnt[i] = min(a, b, k)\n\nprint(max(cnt))"}, "2345": {"problem_id": 2345, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    s=0\n    d=dict()\n    for i in a:\n        d[i]=1\n    for i in range(1,n):\n        if d.get(i)==1:\n            s+=i\n            d[i]=0\n    print(s)\n    print(*d)"}, "2346": {"problem_id": 2346, "answer": ""}, "2347": {"problem_id": 2347, "answer": "t = int(input())\nfor _ in range(t):\n    p = input()\n    h = input()\n    x = 0\n    y = 0\n    for i in p:\n        x ^= ord(i) & 0x7fffffff\n        y ^= ord(i) >> 15\n    if x == y:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "2348": {"problem_id": 2348, "answer": "import sys\n\ndef read():\n    return int(input())\n\ndef write(s):\n    print(s)\n\ndef __starting_point():\n    read()\n    write('1')\n__starting_point()"}, "2349": {"problem_id": 2349, "answer": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = []\n    for i in range(1, n+1):\n        if i % k == 0:\n            ans.append(i)\n        elif i > k:\n            ans.append(i)\n    print(len(ans))\n    print(' '.join(map(str, ans)))"}, "2350": {"problem_id": 2350, "answer": "import math\nt = int(input())\nfor _ in range(t):\n    x, y, p, q = map(int, input().split())\n    x -= 1\n    y -= 1\n    p //= 20\n    q //= 20\n    ans = 0\n    for i in range(x, y + 1):\n        if i % 2 == 1:\n            ans += math.factorial(p) // (math.factorial(p - 1) * math.factorial(i - x) * math.factorial(y - i - 1))\n        else:\n            ans += math.factorial(p - 1) // (math.factorial(p - 2) * math.factorial(i - x) * math.factorial(y - i - 1))\n    print(ans)"}, "2351": {"problem_id": 2351, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 1000000007\nn, k, l = map(int, input().split())\narr = list(map(int, input().split()))\nans = 0\np = [1]*n\nfor i in range(1, n):\n    p[i] = (p[i-1]*2)%MOD\n    ans += p[i]\n    p[i] = (p[i]*2)%MOD\nprint(ans%MOD)"}, "2352": {"problem_id": 2352, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    a = [0] * 26\n    for i in range(n):\n        a[i] = list(map(str, input()))\n    d = [[] for i in range(26)]\n    for i in range(len(a)):\n        d[a[i][0]].append(a[i][1])\n    print('YES\\n')\n    for i in range(26):\n        print(d[i], end=' ')\n    print()\n"}, "2353": {"problem_id": 2353, "answer": "t = int(input())\nfor _ in range(t):\n    a, b, c, d = map(int, input().split())\n    if a+b<=d:\n        print(-1)\n    elif min(a+b, d)<=c:\n        print(b + c - a)"}, "2354": {"problem_id": 2354, "answer": "import sys\ninput = sys.stdin.readline\n\nn, q = list(map(int, input().split()))\nmatrix = []\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\nfor query in range(q):\n    x, y = list(map(int, input().split()))\n    print(matrix[y][x] * 2 - 1)\n"}, "2355": {"problem_id": 2355, "answer": "t = int(input())\nfor _ in range(t):\n    n, p = map(int, input().split())\n    if n == 1:\n        print(1, end=' ')\n    elif n == 2:\n        print(2, end=' ')\n    else:\n        adj = [[] for i in range(n + 1)]\n        for i in range(2, n + 1):\n            for j in range(1, i):\n                adj[i].append(j)\n                adj[j].append(i)\n        edges = [0] * (n + 1)\n        for i in range(1, n + 1):\n            edges[i] = 2 * i + p\n        for i in range(len(edges) - 1):\n            for j in range(i + 1, len(edges)):\n                edges[j] = min(edges[j], edges[i] + p)\n        print(' '.join([str(x) for x in edges]))"}, "2356": {"problem_id": 2356, "answer": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[a[i]] = i\n    good = []\n    for i in d:\n        if i not in d:\n            good.append(i)\n    print(' '.join(good))"}, "2357": {"problem_id": 2357, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = 1\n        else:\n            d[a[i]] += 1\n    print(len(list(d.keys())))\n"}, "2358": {"problem_id": 2358, "answer": "import sys\nread = sys.stdin.readline\ns = read().rstrip()\nn = len(s)\nans = []\nfor i in range(n):\n    if s[i] == '(':\n        ans.append(i+1)\n    else:\n        ans.append(i+2)\nprint(len(ans))\nfor i in range(len(ans)):\n    print(ans[i], end ='')\n"}, "2359": {"problem_id": 2359, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor _ in range(t):\n    h, c, t = list(map(int, readline().split()))\n    print(min(abs(h - t), abs(c - t)))\n"}, "2360": {"problem_id": 2360, "answer": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    teas = []\n    for i in range(n):\n        l, r = map(int, input().split())\n        teas.append((l, r))\n    teas.sort(key=lambda x: x[1], reverse=True)\n    print(*teas[:2])"}, "2361": {"problem_id": 2361, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor test in range(t):\n    n,m,k=list(map(int,input().split()))\n    if n==1:\n        print(0)\n    elif n==2:\n        print(m*2)\n        print(m)\n    else:\n        a=n//k\n        b=n-a*k\n        c=m-a*(m-a)\n        print(max(a,b,c))\n"}, "2362": {"problem_id": 2362, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nadj = [[] for _ in range(n)]\nfor i in range(n - 1):\n    u, v = map(int, input().split())\n    adj[u].append(v)\n    adj[v].append(u)\n\nans = [1] * n\nvisited = [False] * n\nstack = [1]\nwhile stack:\n    now = stack.pop()\n    for nei in adj[now]:\n        if visited[nei] == False:\n            visited[now] = True\n            stack.append(nei)\n\ndist = [0] * n\nfor i in range(n - 1):\n    dist[i] = dist[i] + a[i]\n\nmax_dist = 0\nfor i in range(n):\n    if dist[i] > max_dist:\n        max_dist = dist[i]\n\nprint(max_dist)"}, "2363": {"problem_id": 2363, "answer": "import sys\nn=int(input())\na=[i for i in range(1,10**5+1)]\nfor i in range(n):\n    b=int(input())\n    a.append(b)\ns=0\nfor i in a:\n    s+=i*i\nprint(s)"}, "2364": {"problem_id": 2364, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 998244353\n\nn = int(input())\nA = list(map(int, input().split()))\nA.sort()\np = 2**n-1\nfor i in range(n-1):\n    p = (p*A[i]).bit_length()\n    print(p%MOD)"}, "2365": {"problem_id": 2365, "answer": "class Solution:\n    def parseBoolExpr(self, expression: str) -> bool:\n        l = expression.split('&')\n        l = [x.strip() for x in l]\n        l = l[::-1]\n        return '&' in l"}, "2366": {"problem_id": 2366, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\ns = set()\nfor a in A:\n    s.add(a)\nprint(sum(2 for a in s if a not in s))"}, "2367": {"problem_id": 2367, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\ndef main():\n    H, W, A, B = list(map(int, input().split()))\n    if A>H:\n        A, B = H, W\n    s = sum(H*W)\n    print((s%MOD) * (W-H+1) // 2)\n\nmain()\n"}, "2368": {"problem_id": 2368, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = [0] * N\nD = [0] * N\n\nfor i in range(M):\n    c, d = map(int, input().split())\n    C[c] -= 1\n    D[d] -= 1\n    if C[c] > 0 and D[d] > 0:\n        print(\"Yes\")\n        break\n    elif C[c] < 0 and D[d] > 0:\n        print(\"No\")\n        break\nelse:\n    print(\"No\")"}, "2369": {"problem_id": 2369, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\n\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\nmod = 10**9+7\n\n# \u5148\ufffd\u00e4n\u6b21\u51fa\u73b0\u4e0b\u6807\u4f4d\u7f6e\uff0c\u7136\u540e\u518d\u56de\u5934\u626b\u63cf\u6240\u6709\u5143\u7d20\u7684\u5173\u7cfb\ndef dfs(ind, cur):\n    nonlocal mod\n    nonlocal ans\n    ans = 0\n    for i in range(N):\n        if ind+A[i] < N:\n            ind, cur = i, dfs(ind+A[i], cur+1)\n            ans += f(cur)\n    return ans % mod\n\ndfs(0, 0)\nprint(ans)"}, "2370": {"problem_id": 2370, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = [0]*n\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    ans = []\n    for i in range(n):\n        if a[i][0] == 0:\n            ans.append(i)\n        else:\n            j = 0\n            while j < len(a[i]):\n                if a[i][j] == 0:\n                    ans.append(i)\n                    break\n                j += 1\n            ans.append(i)\n    print('\\n'.join(map(str, ans)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2371": {"problem_id": 2371, "answer": "import sys\ninput = sys.stdin.readline\nN, Z, W = list(map(int, input().split()))\nA = list(map(int, input().split()))\nans = abs(A[0] - A[1])\nfor i in range(2, N):\n    ans = min(ans, abs(A[i] - A[i - 1]))\nprint(ans)\n"}, "2372": {"problem_id": 2372, "answer": "import sys\ninput = sys.stdin.readline\n\nh,w,s=list(map(int,input().split()))\nc,d,m=list(map(int,input().split()))\nans=[]\nfor i in range(h):\n    for j in range(w):\n        if s==\"#\":\n            ans.append((i,j))\n        elif s==\"..\":\n            ans.append((i,j))\n        else:\n            a=abs(i-c)\n            b=abs(j-d)\n            if a!=0 and b!=0:\n                ans.append((i,j))\nprint((min(ans)))\n"}, "2373": {"problem_id": 2373, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nP = list(map(int, input().split()))\ns = set()\nfor i in range(N):\n    s.add(P[i])\nans = 0\nfor i in range(N):\n    if s & (1<<i):\n        ans += 1\nprint(ans)"}, "2374": {"problem_id": 2374, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nA = [int(a) for a in input().split()]\n\nB = [0]*M\nfor i in range(N):\n    if A[i]==1:\n        B[i] = 1\n    elif A[i]==0:\n        B[i] = 0\n\nL = [0]*M\nR = [0]*M\n\nfor i in range(M):\n    if B[i]==1:\n        L[i] = 1\n    elif B[i]==0:\n        L[i] = 0\n\nans = set()\nfor i in range(1, M+1):\n    if L[i]==1:\n        ans.add(L[i-1]+str(i))\n        ans.add(R[i-1]+str(i))\nprint(\" \".join(ans))"}, "2375": {"problem_id": 2375, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    X, Y = map(int, input().split())\n    if X == Y:\n        print(\"Brown\")\n    elif X > Y:\n        print(\"Alice\")\n    else:\n        print(\"Brown\")"}, "2376": {"problem_id": 2376, "answer": "import sys\ninput = sys.stdin.readline\nn,w,*v = map(int,input().split())\nb = sorted([v for i in range(n) if i not in (0,n)])\nb.pop()\nans = 0\nfor i in b:\n    ans = max(ans,i[1] + w)\nprint(ans)"}, "2377": {"problem_id": 2377, "answer": "import sys\ninput = sys.stdin.readline\n\nn, h = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nb = list(map(int, input().split()))\nb.sort()\nh -= sum(a[i] for i in range(n))\nh -= sum(b[i] for i in range(n))\nprint(n - h)"}, "2378": {"problem_id": 2378, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nINF = 10**18\nMOD = 10**9+7\n\nN = int(input())\nadj = [[] for _ in range(N)]\nfor _ in range(N-1):\n    a, b = map(int, input().split())\n    adj[a-1].append(b-1)\n    adj[b-1].append(a-1)\n\ndp = [0]*N\ndp[0] = 1\nfor i in range(1, N):\n    for j in adj[i]:\n        if j == i: continue\n        dp[j] += dp[i]\n        dp[j] %= MOD\n\nprint(dp[N-1])"}, "2379": {"problem_id": 2379, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nN, K, C = list(map(int, input().split()))\nS = input()\nworking = []\nfor i in range(N):\n    if S[i] == \"o\":\n        working.append(i)\n    else:\n        if K < i - C:\n            working.append(i)\n        elif K == i - C:\n            print(i)\n            break\n"}, "2380": {"problem_id": 2380, "answer": "from bisect import bisect_left as bl\nn,m=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\ns=0\nfor i in range(m):\n    s=max(s,sum(a[i:i+bl(b)]))\nprint(s)"}, "2381": {"problem_id": 2381, "answer": "import sys\nreadline = sys.stdin.readline\nN, K = map(int, readline().split())\nA = list(map(int, readline().split()))\nmod = 10**9+7\nans = 1\nfor i in range(K):\n  ans = (ans * A[i]) % mod\nprint(ans)"}, "2382": {"problem_id": 2382, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    s = list(map(int, readline().split()))\n    s.append(0)\n    ans = False\n    for i in range(1, 2**n):\n        if s[i] == s[i-1]:\n            ans = True\n            for j in range(2, 2**n):\n                if s[j] == s[j-1]:\n                    ans = True\n                    break\n            if ans:\n                print(\"Yes\")\n                break\n        else:\n            print(\"No\")\n"}, "2383": {"problem_id": 2383, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**5)\nINF = float('inf')\nMOD = 10**9+7\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    dp = [[INF]*N for _ in range(N)]\n    dp[0] = [0]*N\n    for a,b in zip(A,A[1:]):\n        dp[a][b] = 1\n    for i in range(N-1):\n        if dp[i+1][i]==1:\n            dp[i+1][i] = dp[i][i+1] + 1\n        else:\n            dp[i+1][i] = dp[i][i+1]\n    print(min(dp[0])+N-1)\n\nmain()\n"}, "2384": {"problem_id": 2384, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    m = 0\n    for i in range(N):\n        m += A[i]\n    print(m)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2385": {"problem_id": 2385, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nedges = [[] for _ in range(N)]\nfor _ in range(N-1):\n    a, b = map(int, input().split())\n    edges[a].append(b)\n    edges[b].append(a)\n\nMAX = 10**9 + 7\nr = [MAX] * N\nr[0] = 0\n\ndef dfs(v, p):\n    for e in edges[v]:\n        if p < r[e]:\n            p = r[e]\n            dfs(e, v)\n\ndfs(0, -1)\n\nprint(r[N-1])"}, "2386": {"problem_id": 2386, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nINF = float('inf')\nMOD = 10**9 + 7\nsys.setrecursionlimit(10**6)\n\nN = int(input())\nA = list(map(int, input().split()))\ns = 0\nfor a in A:\n  s += a\nans = abs(s - 2)\nif ans < 2:\n  ans = 2\nprint(ans)"}, "2387": {"problem_id": 2387, "answer": "from collections import deque\nn = int(input())\ns = list(map(str,input().split()))\nd = deque()\nfor i in range(n):\n    d.append(s[i])\n    if d[0]==\"(\" and len(d)==n:\n        d.popleft()\n    elif d[0]==\")\" and len(d)==n:\n        d.popleft()\nprint(\"Yes\" if len(d)==n else \"No\")"}, "2388": {"problem_id": 2388, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    MOD = 998244353\n    N = int(input())\n    X = [int(i) for i in input().split()]\n    D = [int(i) for i in input().split()]\n    set_pos = [0]*N\n    set_pos[0] = 1\n    for i in range(1, N):\n        set_pos[i] = set_pos[i-1] + 1\n        if X[i] - X[i-1] > D[i-1]:\n            set_pos[i] = (set_pos[i] + 1) % MOD\n        elif X[i] - X[i-1] == D[i-1]:\n            set_pos[i] = (set_pos[i] + 1) % MOD\n        else:\n            set_pos[i] = set_pos[i-1]\n    #print(set_pos)\n    ans = 0\n    for i in range(N):\n        ans += set_pos[i] * (set_pos[i]-1) * D[i]\n    print(ans)\nmain()"}, "2389": {"problem_id": 2389, "answer": "import bisect\nn, a, b, c = map(int, input().split())\nab = [list(input()) for _ in range(n)]\ncircles = [0]*3\nfor i in range(n):\n    if ab[i][0] == 'A':\n        circles[0] += 1\n    elif ab[i][0] == 'B':\n        circles[1] -= 1\n    elif ab[i][0] == 'C':\n        circles[2] -= 1\nans = []\nfor i in range(n):\n    a = bisect.bisect_left(ab[i], a)\n    b = bisect.bisect_left(ab[i], b)\n    c = bisect.bisect_left(ab[i], c)\n    ans.append('{}'.format(a))\n    ans.append('{}'.format(b))\n    ans.append('{}'.format(c))\nprint('Yes' if ans else 'No')"}, "2390": {"problem_id": 2390, "answer": "import sys\nsys.setrecursionlimit(10**7)\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\nn, c = MI()\na = [0]*n\nb = [0]*n\nfor i in range(n):\n  a[i] = LI()\nfor i in range(n):\n  b[i] = a[i] + b[i-1]\nprint(max(b)-c)"}, "2391": {"problem_id": 2391, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nMOD = 10**9+7\neps = 10**-9\ndd = [(-1,0)]\nfor i in range(1,N+1):\n    dd.append((i,1))\n    \ndef f(a,b):\n    if a>b:\n        a,b = b,a\n    ans = 0\n    while a%2 == 0:\n        ans += pow(2,b.bit_length())\n        a //= 2\n    return ans\n\nN = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = f(a,b)\nd = f(c,b)\ne = f(d,a)\nprint(*(k,x for k,x in zip(sorted(e),sorted(d))))"}, "2392": {"problem_id": 2392, "answer": "n = int(input())\r\nans = 1\r\nm = 10**9 + 7\r\nfor i in range(1, n+1):\r\n    if i % 2 == 0:\r\n        ans += 1\r\n    else:\r\n        ans %= m\r\n"}, "2393": {"problem_id": 2393, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    s=input().rstrip()\n    n=len(s)\n    ans=0\n    l=[]\n    for i in range(n):\n        if s[i]==\"two\":\n            l.append(i)\n    ans=min(ans,n-l.index(0))\n    print(ans)\n"}, "2394": {"problem_id": 2394, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9 + 7\ninput = lambda: readline().rstrip()\nn, k = map(int, input().split())\nedges = [[] for _ in range(n)]\nfor _ in range(n - 1):\n    a, b = map(int, input().split())\n    edges[a - 1].append(b - 1)\n    edges[b - 1].append(a - 1)\nlimak = [0] * n\nvisited = [0] * n\ndef dfs(s, t, jump):\n    nonlocal limak\n    visited[s] = 1\n    visited[t] = 1\n    limak[s] += 1\n    limak[t] += 1\n    dfs(s, t, jump)\n    visited[s] = 0\n    visited[t] = 0\n    for adj in edges[s]:\n        if visited[adj] == 0:\n            dfs(adj, t, jump)\n    for adj in edges[t]:\n        if visited[adj] == 0:\n            dfs(adj, s, jump)\n    visited[s] = visited[t] = 1\n    for i in range(n):\n        if visited[i] == 0:\n            dfs(i, s, jump)\n        if visited[i] == 1:\n            dfs(i, t, jump)\ndfs(0, 0, k)\nprint(limak[0])"}, "2395": {"problem_id": 2395, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    d = {}\n    for i in range(n):\n        if s[i]==\"0\":\n            d[s[i]] = i\n        else:\n            d[s[i]] = min(d[s[i]], i)\n    d.pop()\n    print(s)"}, "2396": {"problem_id": 2396, "answer": "import sys\nread = sys.stdin.readline\nm = int(read())\na = list(read().split(' '))\na.sort()\nb = int(read().rstrip('0'))\nc = int(read().rstrip('0'))\nans = [0]*m\nfor i in range(m):\n    ans[i] = a[i] + b[i]*c\nprint(' '.join(map(str, ans)))"}, "2397": {"problem_id": 2397, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    \n    dp = [0]*(n+1)\n    for i in range(1, n+1):\n        dp[i] = a[i]*max(dp[i-1], 0)\n        \n    ans = 0\n    for i in range(k-1, 0, -1):\n        ans = max(ans, dp[i] + a[i]*dp[i])\n    print(ans)\n        "}, "2398": {"problem_id": 2398, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    a, b, c, d, x, y, x_1, y_1, x_2, y_2 = list(map(int, input().split()))\n    a += x\n    b += y\n    c += x_1\n    d += y_1\n    x_1 %= 2\n    y_1 %= 2\n    x_2 %= 2\n    y_2 %= 2\n    if x_1 + y_1 + x_2 + y_2 == 1:\n        print('Yes')\n    else:\n        print('No')"}, "2399": {"problem_id": 2399, "answer": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nfor _ in range(Q):\n    a, b = list(map(int, input().split()))\n    s = input().rstrip()\n    d = {}\n    for i in range(len(s)):\n        d[s[i]] = i\n    d['.'] = -1\n    ans = False\n    for i in range(b):\n        if d['.'] == -1:\n            ans = True\n            break\n        if s[d['.']]!= s[i]:\n            ans = False\n            break\n        elif d['.'] == -1:\n            d['.'] = i\n        else:\n            d['.'] = i\n    if ans:\n        print('YES')\n    else:\n        print('NO')\n"}, "2400": {"problem_id": 2400, "answer": "import sys\nimport heapq as hq\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    p=[int(x) for x in input().split()]\n    q=[int(x) for x in input().split()]\n    print(sum(hq.heappop(p) for p in p))"}, "2401": {"problem_id": 2401, "answer": "t = int(input())\nfor i in range(t):\n    n, r = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    if r == 1:\n        print(a[0])\n    elif r == n:\n        print(a[n - 1])"}, "2402": {"problem_id": 2402, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,x,y=list(map(int,input().split()))\n    print(n-x+y)"}, "2403": {"problem_id": 2403, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef f(x):\n    nonlocal ans\n    if x == -1:\n        ans = 0\n    elif x == 1:\n        ans = a[x] + b[x]\n    else:\n        ans = max(ans, a[x] + b[x - 1])\n    print(ans)\n    for i in range(2, n + 1):\n        if b[i]!= -1:\n            f(i)\nf(n)"}, "2404": {"problem_id": 2404, "answer": "a = int(input())\nprint(a//3)"}, "2405": {"problem_id": 2405, "answer": "n, k, a, b, q = list(map(int, input().split()))\nt = n.bit_length()\nr = n - k + 1\ns = 2**t - 1\ndp = [[0] * (r+1) for i in range(s+1)]\nfor i in range(q):\n    qq = list(map(int, input().split()))\n    if qq[1:].count('1') == 1:\n        dp[r+1][s] = i+1\n    elif qq[1:].count('1') > 1:\n        dp[r+1][s] = max(dp[r+1][s], i+1)\n    else:\n        dp[r+1][s] = i"}, "2406": {"problem_id": 2406, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nprint(*a[1:],sep='\\n')"}, "2407": {"problem_id": 2407, "answer": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nfor _ in range(Q):\n    N, R = list(map(int, input().split()))\n    X = [int(x) for x in input().split()]\n    X.sort()\n    ans = 0\n    for i in range(N):\n        if X[i] <= 0:\n            ans += 1\n        elif X[i] >= 0:\n            if R > 0:\n                ans += R\n            else:\n                ans += 1\n            R = 0\n            X.pop(i)\n    print(ans)\n"}, "2408": {"problem_id": 2408, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\npoles = []\nfor i in range(n):\n    poles.append(list(map(int, input().split())))\n\nans = 0\nfor i in poles:\n    if i[0]!= i[1] and i[1] not in list(range(2, i[1] + 1)):\n        ans += 1\n\nprint(ans)\n"}, "2409": {"problem_id": 2409, "answer": ""}, "2410": {"problem_id": 2410, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    b=sorted(a,reverse=True)\n    if sum(b)>=n:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "2411": {"problem_id": 2411, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\npoles = []\nfor i in range(n):\n    poles.append(list(map(int,input().split())))\n\ncnt = 0\nfor i in poles:\n    if i[0]!= i[1] and i[0]!= i[2]:\n        cnt += 1\nprint(cnt)\n"}, "2412": {"problem_id": 2412, "answer": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    cnt = 0\n    for i in range(11):\n        if s[i] == '9':\n            cnt += 1\n        if cnt > 2:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")"}, "2413": {"problem_id": 2413, "answer": ""}, "2414": {"problem_id": 2414, "answer": "t = int(input())\nfor _ in range(t):\n    a, b = list(map(int, input().split()))\n    print(a + b)\n"}, "2415": {"problem_id": 2415, "answer": "s = input()\n\nfor i in range(len(s)):\n    if s[i]>='A' and s[i]<='Z':\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "2416": {"problem_id": 2416, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ns = set()\nfor i in range(n):\n    s.add(a[i] ^ a[i - 1])\n\nans = 0\nfor i in range(n):\n    if s & (a[i] ^ a[i - 1]):\n        ans += 1\n\nprint(ans)\n"}, "2417": {"problem_id": 2417, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        ans += 1\nprint(ans)"}, "2418": {"problem_id": 2418, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nq = int(input())\nchanges = [list(map(int, input().split())) for _ in range(q)]\n\ncnt = [0]*(n+1)\nfor i in range(1, n+1):\n    cnt[i] += 1\n\nans = 0\nfor change in changes:\n    l, r, x = change\n    ans += max(a[l] - x, 0)\n    ans += max(a[r+1] - x, 0)\n    ans += max(b[l] - x, 0)\n    ans += max(b[r+1] - x, 0)\nprint(ans)"}, "2419": {"problem_id": 2419, "answer": "t = int(input())\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    elif a > b:\n        print(a // 2)\n    else:\n        print(a // 2 + 1)"}, "2420": {"problem_id": 2420, "answer": "from sys import stdin\ninput = stdin.readline\nn, r = list(map(int, input().split()))\npoints = sorted([tuple(map(int, input().split())) for _ in range(n)])\ncnt = [0] * n\nfor i in range(n):\n    cnt[points[i][0]] += 1\nprint(max(cnt))\n"}, "2421": {"problem_id": 2421, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tx, y = list(map(int, input().split()))\n\tc1, c2, c3, c4, c5, c6 = list(map(int, input().split()))\n\tans = 0\n\tfor i in range(6):\n\t\tif i&1==0:\n\t\t\tans += c1*c2\n\t\telif i&2==0:\n\t\t\tans += c2*c3\n\t\telif i&4==0:\n\t\t\tans += c3*c4\n\t\telif i&5==0:\n\t\t\tans += c4*c5\n\t\telif i&6==0:\n\t\t\tans += c5*c6\n\tprint(ans)\n"}, "2422": {"problem_id": 2422, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    n = int(readline())\n    if n % 3!= 0:\n        print(-1)\n        continue\n    print(2 * n // 3, 2 * n // 5, 2 * n // 7)\n"}, "2423": {"problem_id": 2423, "answer": "#!/usr/bin/env python3\n\ndef solve():\n    n = int(input())\n    res = 0\n    for i in range(n-1):\n        a, b = map(int, input().split())\n        if a > b:\n            a, b = b, a\n        res += len(set(map(int, input().split())))\n    return res\n\nprint(solve())\n"}, "2424": {"problem_id": 2424, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn=int(input())\na=[0]*(10**6+10)\nfor i in range(n):\n    x,y=map(int,input().split())\n    a[x-1]+=y\n    a[y-1]+=x\ns=0\nfor i in a:\n    s+=pow(i,2)\nprint(s%998244353)"}, "2425": {"problem_id": 2425, "answer": "import sys\nreadline = sys.stdin.readline\n\nMOD = 10**9+7\ninf = 10**18+3\ndd = [1]*26\ndd[0] = 0\ndd[1] = 0\nfor i in range(2,dd[0]+1):\n    dd[i] = i*i\n\ndef gcd(a,b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\nq = int(readline())\na = list(map(int, readline().split()))\ngcd = a[0]\nfor i in range(1,len(a)):\n    gcd = gcd * a[i] % MOD\n\nprint(dd[gcd])\n"}, "2426": {"problem_id": 2426, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    even = 0\n    odd = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if even == 0:\n        print(-1)\n    elif odd == 0:\n        print(-1)\n    else:\n        print(even + 1)\n        print(*list(range(n)))"}, "2427": {"problem_id": 2427, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    if a[i] == i:\n        cnt += 1\n\nprint(cnt)"}, "2428": {"problem_id": 2428, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    s = input().rstrip()\n    t = input().rstrip()\n    \n    if len(s) == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "2429": {"problem_id": 2429, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor _ in range(t):\n    n = int(readline())\n    print(abs(n - (n//2)))"}, "2430": {"problem_id": 2430, "answer": "n = int(input())\nheight = []\nfor i in range(n):\n    height.append(int(input()))\nprint(min(height[-1], sum(height[:-1])))"}, "2431": {"problem_id": 2431, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n, x, y, z = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    alive = [False] * (n + 1)\n    alive[0] = True\n    poss = [0] * (n + 1)\n    poss[0] = 1\n    for i in range(1, n + 1):\n        if alive[i]:\n            alive[i] = False\n            poss[i] = poss[i - 1] + 1\n        elif poss[i - 1] > 0:\n            alive[i] = True\n            poss[i] = poss[i - 1]\n    ans = 0\n    for i in range(n):\n        if alive[i]:\n            ans += poss[i]\n    print(ans)\n"}, "2432": {"problem_id": 2432, "answer": "a = int(input())\nprint(a * a)"}, "2433": {"problem_id": 2433, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    b, p, f = list(map(int, readline().split()))\n    h, c = list(map(int, readline().split()))\n    print(max(b * p + c, h // 2) * f)"}, "2434": {"problem_id": 2434, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,m=list(map(int,input().split()))\n    if n==m:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "2435": {"problem_id": 2435, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,x,m=list(map(int,input().split()))\n    d={}\n    for i in range(m):\n        l,r=list(map(int,input().split()))\n        d[l].append(r)\n    ans=0\n    for i in d:\n        if len(d[i])==1:\n            ans+=1\n            continue\n        d[i]=[0]*(n+1-len(d[i]))\n        for j in range(1,n+1):\n            if d[i][j]==0:\n                d[i][j]=-1\n            elif d[i][j]==1:\n                d[i][j]+=1\n        ans+=sum(d[i])\n    print(ans)\n"}, "2436": {"problem_id": 2436, "answer": ""}, "2437": {"problem_id": 2437, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nd = max(a)\nc = 1\nans = 0\nfor i in range(1, n):\n    if a[i] == d:\n        ans += c\n        c = 1\n    elif a[i] % d!= 0:\n        ans += c\n        c += 1\nprint(ans)"}, "2438": {"problem_id": 2438, "answer": "n = int(input())\ns = input()\na = 0\nb = 0\nfor i in range(n):\n    if s[i] == s[i + 1]:\n        a += 1\n    else:\n        b += 1\nprint(a + b)"}, "2439": {"problem_id": 2439, "answer": ""}, "2440": {"problem_id": 2440, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nedges = []\nfor i in range(n-1):\n    u, v = list(map(int, input().split()))\n    edges.append((u, v, i))\n\nq = int(input())\nedges.sort()\nwhile q:\n    query = list(map(int, input().split()))\n    query[0] -= 1\n    if query[0] == 1:\n        break\n    x, y, a, b, k = query[1:]\n    if a!= x:\n        print(\"NO\")\n        break\n    elif b!= y:\n        print(\"NO\")\n        break\n    if k == 5:\n        print(\"YES\")\n        break\n"}, "2441": {"problem_id": 2441, "answer": "import sys\ninput = sys.stdin.readline\n\nn, M = int(input()), int(input())\na, b = [0] * n, [0] * n\nvisited = [0] * n\nfor i in range(n):\n    a[i], b[i] = list(map(int, input().split()))\n    visited[i] = 1\n\nans = 0\np = 1000000007\nstack = [0] * n\nvisited[0] = 1\nwhile stack:\n    now = stack.pop()\n    for i in range(now):\n        if visited[i] == 0:\n            p -= a[i]\n            visited[i] = 1\n            stack.append(i)\n        elif visited[i] == visited[now]:\n            ans += (p - b[i]) * (p - b[now]) % p\n            stack.append(i)\nprint(ans, end ='')\n"}, "2442": {"problem_id": 2442, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    m=[]\n    for i in range(n):\n        m.append(a[i])\n    m.sort()\n    print(sum(m[m.index(max(m))]+m[m.index(min(m))]))"}, "2443": {"problem_id": 2443, "answer": "import sys\ninput=sys.stdin.readline\nn,m=list(map(int,input().split()))\nd=[1]*200001\nfor i in range(2,200001):\n    d[i]*=i\n    d[i-1]%=m\nans=[]\nfor i in range(n):\n    ans.append(d[i]*i)\nprint(len(ans))\nprint(\" \".join(map(str,ans)))"}, "2444": {"problem_id": 2444, "answer": "import sys\nreadline = sys.stdin.readline\nn, p = list(map(int, readline().split()))\nt = list(map(int, readline().split()))\nans = [0]*n\nfor i in range(n):\n    if t[i]<i-1:\n        ans[i] = ans[i-1] + p\nprint(*ans)\n"}, "2445": {"problem_id": 2445, "answer": "import sys\nimport math\ndef ii():\n\treturn int(input())\ndef si():\n\treturn input()\ndef mi():\n\treturn list(map(int,input().split()))\ndef li():\n\treturn list(mi())\ndef lcm(a,b):\n\treturn abs(a*b)//gcd(a,b)\ndef gcd(a):\n\tif a==0:\n\t\treturn 1\n\treturn math.gcd(a,b)\ndef revn(n):\n\treturn (n//2)[::-1]\ndef ceil(a,b):\n\tif a<b:\n\t\treturn b\n\treturn a+ceil(b-a,2)\ndef INT():\n\treturn int(input())\ndef MAP():\n\treturn map(int,input().split())\ndef TRIN()():\n\treturn str(INT())\ndef LSIN()():\n\treturn list(map(int,input().split()))\ndef LTIN()():\n\treturn list(reversed(LSIN()))\ndef LCM1(a,b):\n\treturn (a*b)//gcd(a,b)\ndef LCM2(a,b):\n\treturn (a*b)%gcd(a,b)\ndef LTIME(a,b):\n\treturn (a+b)//gcd(a,b)\ndef LTIME1(a,b):\n\treturn LTIME(a,a%gcd(a,b))\ndef LTIME2(a,b):\n\treturn LTIME(a,a%gcd(a,b*b%gcd(a,b)))\ndef IMAIN():\n\treturn sys.stdin.readline()"}, "2446": {"problem_id": 2446, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nqueries = [0] * (n + 1)\nfor i in range(1, n + 1):\n    queries[i] = a[i - 1]\n    for j in range(i - 2, -1, -1):\n        queries[i] = max(queries[i], a[j] + queries[j + 1])\n\nprint('\\n'.join(map(str, queries)))\n"}, "2447": {"problem_id": 2447, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    s=input().rstrip()\n    d={}\n    for i in s:\n        if i.isdigit():\n            d[i]+=1\n        else:\n            d[i]=1\n    good=0\n    for i in d:\n        if d[i]%2==0:\n            good+=abs(i-97)\n            continue\n        else:\n            break\n    print(good)"}, "2448": {"problem_id": 2448, "answer": "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a, b, c = list(map(int, input().split()))\n    s = input()\n    if s.count('R') == 0:\n        print('NO')\n    elif s.count('P') == 0:\n        print('NO')\n    elif s.count('S') == 0:\n        print('NO')\n    else:\n        p = 0\n        r = 0\n        for i in range(n):\n            if s[i] == 'R':\n                p += 1\n            elif s[i] == 'P':\n                r += 1\n            elif s[i] == 'S':\n                p -= 1\n        if p > r:\n            print('NO')\n        else:\n            print('YES')\n            s = ''.join(map(str, r)) + s[n-1:]\n            print(s)\n"}, "2449": {"problem_id": 2449, "answer": "m, n = map(int, input().split())\nt = [0] * m\nfor i in range(n):\n    t[i] += 1\ns = [0] * m\nfor i in t:\n    s[i] += 1\n    s[2 * i] += s[i]\n    s[i + 1] += s[i]\n    s[2 * i + 1] += s[i]\nprint(s[-1] * (10 ** 9 + 7) % 1e6)"}, "2450": {"problem_id": 2450, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n, m, x, y = list(map(int, input().split()))\n    black = \"*\"\n    white = \".\"\n    for i in range(n):\n        if input().lower() == black:\n            print(x * y)\n        else:\n            print(min(x * y, black))\n"}, "2451": {"problem_id": 2451, "answer": "n = int(input())\nfor i in range(n):\n    t, f, g, h = map(int, input().split())\n    if t > h:\n        t, f = h, g\n    elif t < f:\n        t, g = f, g\n    else:\n        t, g = g, f\n    \n    q = [t, f, g, h]\n    while q:\n        t, f, g, h = q.pop()\n        if abs(t - f) + abs(g - h) <= 1:\n            print(abs(t - f) + abs(g - h))\n            break"}, "2452": {"problem_id": 2452, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    ans=[]\n    for i in range(n):\n        ans.append(bin(i).count('1'))\n    print(' '.join(map(str,ans)))"}, "2453": {"problem_id": 2453, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nans = []\nfor i in range(n):\n    a, b = list(map(int, readline().split()))\n    if a > b:\n        a, b = b, a\n    ans.append(set([a, b]))\nprint(*ans, sep='\\n')\n"}, "2454": {"problem_id": 2454, "answer": "import random\nn = int(input())\nmod = 10**9+7\nfor i in range(n):\n    a,b = list(map(int,input().split()))\n    if a>b:\n        a,b = b,a\n    c = random.randint(1,n)\n    if c==1:\n        c = n\n    if c>1:\n        c = n-1\n    if c not in cities:\n        cities.append(c)\n        cities.sort()\n        print(c*(c-1)%mod)\n    else:\n        cities.remove(c)\n        print(c*(c-1)%mod)"}, "2455": {"problem_id": 2455, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    s = input().rstrip()\n    n = len(s)\n    d = {}\n    for i in range(n):\n        d[s[i]] = i\n    d.update({12:0})\n    ans = []\n    for i in range(n):\n        ans.append(d[s[i]]*2)\n    print(' '.join(map(str,ans)))"}, "2456": {"problem_id": 2456, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,r=list(map(int,input().split()))\n    print((pow(7,n,10000000000))*pow(r-1,n,10000000000))\n"}, "2457": {"problem_id": 2457, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    b=[int(i) for i in input().split()]\n    d=sorted(a)\n    e=sorted(b)\n    print('Yes' if sum(a)-d<sorted(b)-sorted(a) else 'No')\n"}, "2458": {"problem_id": 2458, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nt,k=list(map(int,input().split()))\nfor _ in range(t):\n\ta,b=list(map(int,input().split()))\n\tprint((pow(2,k-1,1000000007)%1000000007)^(a-1)+(pow(2,k-2,1000000007)%1000000007)^(b-1))"}, "2459": {"problem_id": 2459, "answer": "n, q, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = []\nfor i in range(m):\n    t, l, r, k = list(map(int, input().split()))\n    if t == 1:\n        ans.append(b[k])\n    elif t == 2:\n        ans.append(b[k] + 1)\n\nprint(' '.join(map(str, ans)))\n"}, "2460": {"problem_id": 2460, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nriders = list(map(int, input().split()))\ndist = [0] * (n + m)\nfor i in range(n):\n    dist[i + 1] = dist[i] + 1\n\nans = []\ncnt = 0\nfor i in range(m):\n    if dist[i] == 0:\n        cnt += 1\n    else:\n        ans.append(cnt)\n        dist[i] = 0\n\nprint(*ans, sep='\\n')\n"}, "2461": {"problem_id": 2461, "answer": "import sys\nread = sys.stdin.readline\nreadline()\nn = int(read())\na = list(map(int, readline().split()))\ns = [0] * n\nfor i in range(n - 1):\n    s[i] = a[i] + s[i + 1]\n    \nf = [0] * n\ng = [0] * n\nfor i in range(n):\n    f[i] = g[i] + f[i + 1]\n    g[i] = f[i] + g[i + 1]\nprint(' '.join(map(str, g)))"}, "2462": {"problem_id": 2462, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**9+7\nt = int(readline())\nfor _ in range(t):\n    n = int(readline())\n    ans = [2]*n\n    for i in range(3, int(n**0.5)+1, 2):\n        if pow(i,2) % i == 0:\n            ans[i] = 1\n            break\n    print('YES')\n    for i in ans:\n        print(i, end=' ')\n"}, "2463": {"problem_id": 2463, "answer": "n = int(input())\narr = list(map(int, input().split()))\narr.sort()\nans = 0\nfor i in range(n):\n    if arr[i] < 2:\n        ans += 1\nprint(ans)\n"}, "2464": {"problem_id": 2464, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nedge = [[] for _ in range(n)]\nfor i in range(n-1):\n    a, b, c = map(int, input().split())\n    edge[a-1].append(b-1)\n    edge[b-1].append(a-1)\n    edge[c-1].append(a-1)\nans = 0\nfor i in range(n-2):\n    ans += edge[i].count(1)\nprint(ans)"}, "2465": {"problem_id": 2465, "answer": "import math\ndef inp():\n    return int(input())\ndef inl():\n    return list(map(int, input().split()))\nt = int(input())\nwhile t:\n    t -= 1\n    a = inp()\n    b = inp()\n    c = inp()\n    if a+b+c <= 998244353:\n        print(a+b+c)\n    else:\n        print(-1)"}, "2466": {"problem_id": 2466, "answer": "class Solution:\n     def permute(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: List[List[int]]\n         \"\"\"\n         res = []\n         for i in range(len(nums)):\n             res.append([nums[i], nums[:i]])\n         return res"}, "2467": {"problem_id": 2467, "answer": "class Solution:\n     def combinationSum3(self, k, n):\n         \"\"\"\n         :type k: int\n         :type n: int\n         :rtype: List[List[int]]\n         \"\"\"\n         if n < 1:\n             return [[]]\n         dp = [0] * (k+1)\n         for i in range(1, 10):\n             dp[i] = dp[i-1] + i\n         \n         for i in range(1, 10):\n             for j in range(k):\n                 if i+j <= n:\n                     dp[i][j] += dp[i].count(j)\n         "}, "2468": {"problem_id": 2468, "answer": "class Solution:\n    def longestValidParentheses(self, s: str) -> int:\n        d = defaultdict(int)\n        for i in range(len(s)):\n            if s[i] == '(':\n                d[')'].append(i)\n            elif s[i] == ')':\n                d[')'].pop()\n            else:\n                d[s[i]] += 1\n        return max(d.values())"}, "2469": {"problem_id": 2469, "answer": "class Solution:\n     def majorityElement(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: List[int]\n         \"\"\"\n         d = {}\n         for i in nums:\n             if i in d:\n                 d[i] += 1\n             else:\n                 d[i] = 1\n         res = []\n         for i in d:\n             if d[i] > len(nums)//3:\n                 res.append(i)\n         return res"}, "2470": {"problem_id": 2470, "answer": "class Solution:\n    def makeArrayIncreasing(self, arr1: List[int], arr2: List[int]) -> int:\n        n = len(arr1)\n        m = len(arr2)\n        dp = [0] * (n+1)\n        for i in range(1, n+1):\n            if arr1[i] > arr2[0]:\n                dp[i] = arr1[i] - arr2[0]\n            else:\n                dp[i] = arr2[0] - arr1[i]\n        ans = float('inf')\n        for i in range(1, n+1):\n            if dp[i] < 0:\n                ans = i\n                break\n        return ans if ans < float('inf') else -1"}, "2471": {"problem_id": 2471, "answer": "from collections import defaultdict as dd, deque\nimport bisect\nimport heapq\nimport itertools\nimport sys\nimport math\nimport random\nfrom collections import Counter as cc\nfrom functools import reduce\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nINF = float(\"inf\")\nmod = 10**9+7\ndef li(): return [int(x) for x in input().split()]\ndef st(): return input().rstrip('\\n')\ndef val(): return int(input(),2)\ndef li2(): return [list(map(int, input().split())) for _ in range(26)]\ndef li3(): return [list(map(int, input().split())) for _ in range(26)]\ndef lis(): return list(li())\ndef mt(f): return func()\ndef imt(f): return [x*y for x,y in f(l) if y]\ndef S(n, m): return n*m%(n+m)\ndef L(n, m): return pow(n,m-2,n)\ndef I(n, m): return 2*pow(n,m-2,n)\ndef F(n, m): return L(n-1, m)*L(n-1, m-1) - n*L(n-1, m-1)\ndef G(n, m): return L(n-1, m)*L(n-1, m-1) + n*L(n-1, m-1)\ndef H(n, w): return L(n-1, w)*L(n-1, w-1)\ndef A(n, w): return H(n-1, w)\ndef B(n, w): return 2*H(n-1, w)*H(n-1, w-1)\ndef C(n, w): return 2*H(n-1, w)*G(n-1, w)\ndef D(n, w): return 2*H(n-1, w)*S(n-1, w)\ndef E(n, w): return 2*H(n-1, w)*L(n-1, w)\ndef F(n, m): return C(n-1, m)*F(n-1, m-1)\ndef G(n, m): return C(n-1, m)*G(n-1, m-1)\ndef H(n, w): return 2*C(n-1, w)*D(n-1, w)\ndef I(n, m): return 2*C(n-1, m)*E(n-1, m)\ndef J(n, m): return 2*C(n-1, m)*F(n-1, m-1)\ndef K(n, m): return reduce(lambda a,b: a*b%n, range(n))\ndef L(n, m): return pow(2,n-m)\ndef M(n, m): return pow(2,n-m)\ndef N(n, m): return 2*M(n-1, m)\ndef P(n, m): return 2*M(n-1, m)*M(n-1, m-1)\ndef Q(n, m): return 2*M(n-1, m)*S(n-1, m)\ndef R(n, m): return 2*M(n-1, m)*L(n-1, m)\ndef S(n, m): return 2*N(n-1, m)\ndef T(n, m): return 2*N(n-1, m)*L(n-1, m)\ndef U(n, m): return 2*N(n-1, m)*S(n-1, m)\ndef V(n, m): return 2*N(n-1, m)*G(n-1, m)\ndef X(n, m): return 2*N(n-1, m)*C(n-1, m)\ndef Y(n, m): return 2*N(n-1, m)*D(n-1, m)\ndef Z(n, m): return 2*N(n-1, m)*E(n-1, m)\ndef AA(n, m): return X(n-1, m)*Y(n-1, m)\ndef AB(n, m"}, "2472": {"problem_id": 2472, "answer": "import bisect\nimport heapq\nimport itertools\nimport sys\n\n# sys.stdin = open('input.txt', 'r')\nINF = 10**18\ndef I(): return int(sys.stdin.readline())\ndef MI(): return list(map(int, sys.stdin.readline().split()))\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef LI2(): return list(map(int, sys.stdin.readline().split()))\ndef LLI2(rows_number): return [LI2() for _ in range(rows_number)]\n\nN = I()\nA = LI()\nB = LI()\nans = [0]*N\nnow = 0\nfor i in range(N):\n    now = B+A%2\n    ans[i] = now\n    if now <= now+10:\n        print(\"Yes\")\n        break\n"}, "2473": {"problem_id": 2473, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nINF = float('inf')\nMOD = 10**9+7\ndef inpl(): return list(map(int, input().split()))\ndef inpl_s(): return list(map(int, input().split()))\nn, k = inpl()\nx = inpl_s()\ny = inpl()\nans = abs(x[0]-y[0])*abs(x[1]-y[1])\nfor i in range(1, n):\n    a = (x[i]-x[i-1])*(y[i]-y[i-1])\n    b = (y[i]-y[i-1])*(x[i]-x[i-1])\n    ans = min(ans, a+b)\nprint(ans)"}, "2474": {"problem_id": 2474, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('INF')\nMOD = 10**9 + 7\n\nN = int(readline())\nC = [0] + list(map(int, readline().split()))\ns = 0\nfor i in range(N):\n  s += C[i] * C[i]\nans = s\nt = 0\nfor i in range(N):\n  t += pow(C[i], MOD-2, MOD)\n  ans = min(ans, t)\nprint(ans%MOD)"}, "2475": {"problem_id": 2475, "answer": "import sys\nsys.setrecursionlimit(10 ** 6)\ninput = sys.stdin.readline\nINF = float('inf')\nMOD = 10 ** 9 + 7\n\nN = int(input())\nS = [0] + list(map(int, input().split()))\nfor i in range(N - 1):\n  S.append(S[i] + S[i + 1])\n\nans = 0\nm = INF\nfor i in range(N):\n  ans += (S[i] - m) * S[i]\n  m = min(m, S[i])\nprint(ans)"}, "2476": {"problem_id": 2476, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\n\nans = []\nfor i in range(N):\n    ans.append(sum(A[i:i+K]))\nprint(*ans, sep=\"\\n\")"}, "2477": {"problem_id": 2477, "answer": "import sys\ninput = sys.stdin.readline\n\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nINF = 10**9+7\nans = INF\nfor i in range(N):\n    ans = min(ans, A[i]-(K-1)*t)\n    if ans < A[i]-(K-1)*t:\n        ans = A[i]-(K-1)*t\nprint(ans)"}, "2478": {"problem_id": 2478, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nN = int(input())\nS = input()\nans = []\nfor i in range(N):\n    a, b = map(int, S.split())\n    if a == 1 and b == 1:\n        ans.append(b)\n    elif a == 1:\n        ans.append(b)\n    elif b == 1:\n        ans.append(a)\n    else:\n        ans.append(a + b)\nprint(\" \".join(map(str, ans)))"}, "2479": {"problem_id": 2479, "answer": "import sys\ninput = sys.stdin.readline\nn,q=list(map(int,input().split()))\nc=[[0]*n for i in range(n)]\nfor i in range(n-2):\n  c[0][i+1]=1\n  c[1][i+1]=1\nans=0\nfor i in range(q):\n  a,b=list(map(int,input().split()))\n  a-=1\n  b-=1\n  c[a][b]=2\n  c[b][a]=2\n  ans+=c[a][b]\nprint(ans)"}, "2480": {"problem_id": 2480, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**9)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nN, K = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nans = 0\ncur = [0] * (N+1)\ncur[0] = 1\nfor i in range(1, N+1):\n    cur[i] = cur[i-1] + A[i-1]\n    ans += cur[i] - K//i\n    while K%i == 0:\n        ans += cur[i]//i\n        K //= i\nprint(ans)\n"}, "2481": {"problem_id": 2481, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef solve():\n    H, W = map(int, readline().split())\n    C = [list(map(int, readline().split())) for _ in range(W)]\n    C.append([0] * W)\n    for i in range(W):\n        h = C[i][0]\n        for j in range(H):\n            h = min(h, C[i][j])\n            C[i][j] -= h\n    ans = 0\n    for i in range(W):\n        ans += min(C[i][0], C[i][H - 1], C[i][W - 1])\n    print(ans)\n\nsolve()"}, "2482": {"problem_id": 2482, "answer": "from collections import deque\nn, k, l = map(int, input().split())\npq = [list(map(int, input().split())) for _ in range(n)]\nr = [list(map(int, input().split())) for _ in range(n)]\ns = [0] * n\nfor i in range(n):\n    s[i] = pq[i][0]\n    deq = deque([pq[i][1]])\n    while deq:\n        p, q = deq.popleft()\n        for k in range(len(pq)):\n            if p == q[0] and s[k] == 0:\n                s[k] = 1\n                deq.append((p, k))\nprint(*s, sep='\\n')"}, "2483": {"problem_id": 2483, "answer": "import bisect\nn,c = map(int,input().split())\ns = list(map(int,input().split()))\nt = list(map(int,input().split()))\ns.sort()\nt.sort()\nans = 0\nfor i in range(n):\n    if s[i]!=t[i]:\n        ans += 1\nprint(ans)"}, "2484": {"problem_id": 2484, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nA = list(map(int, readline().split()))\n\ndef xor(a, b):\n    return a ^ b\n\nans = 0\nfor i in range(N):\n    a, b = A[i], A[i] + A[i + 1]\n    if xor(a, b) == a + b:\n        ans += 1\n\nprint(ans)\n"}, "2485": {"problem_id": 2485, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    H, W, *M = map(int, readline().split())\n    A = [list(map(int, readline().split())) for _ in range(M)]\n    ans = 0\n    for m in range(M):\n        h, w = m+1, m+1\n        for a, b in zip(A[m], A[m+1]):\n            ans += max(a-h, b-w)\n    print(ans)\n\nmain()\n"}, "2486": {"problem_id": 2486, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nN, K = list(map(int, readline().split()))\nA = list(map(int, readline().split()))\n\nB = [[] for _ in range(N)]\nfor i in range(N):\n    B[i].append(A[i])\n\nans = 0\nfor i in range(N):\n    if sum(B[i]) > K:\n        ans += 1\nprint(ans)"}, "2487": {"problem_id": 2487, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nadj = [[] for _ in range(N)]\nfor _ in range(N-1):\n    u, v = map(int, input().split())\n    adj[u].append(v)\n    adj[v].append(u)\nans = 0\nL = []\nR = []\nfor i in range(N):\n    L.append(i+1)\n    R.append(i+1)\nans += sum(1 for _ in range(N) if L[R[i]] < R[i])\nprint(ans)"}, "2488": {"problem_id": 2488, "answer": "from collections import deque\nn,d,a = map(int,input().split())\nx = [int(i) for i in input().split()]\nh = [0]*n\nfor i in range(n):\n    xi = x[i]\n    if xi-d:\n        h[i] = h[i-1] + a\n    elif xi+d:\n        h[i] = h[i+1] + a\nans = 0\nq = deque([x])\nwhile q:\n    v = q.popleft()\n    ans += v\n    for i in range(n):\n        if h[i] < v:\n            q.append(i)\nprint(ans)"}, "2489": {"problem_id": 2489, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nN = int(input())\nA = list(map(int, input().split()))\nans = 0\nfor i in range(N):\n    if A[i]*A[i]!= A[i]:\n        ans += 1\nprint(ans)"}, "2490": {"problem_id": 2490, "answer": "N = int(input())\nprint(10 ** N)"}, "2491": {"problem_id": 2491, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N, M = map(int, input().split())\n    adj = [[] for _ in range(N)]\n    for _ in range(M):\n        a, b, c = map(int, input().split())\n        adj[a-1].append((b-1, c))\n        adj[b-1].append((a-1, c))\n\n    INF = 10**18\n    dp = [INF]*(N+1)\n    dp[1] = 0\n    MAPPING = [[0]*(N+1) for _ in range(M+1)]\n\n    for i in range(2, M+1):\n        for j in range(N):\n            if i-1 < 0:\n                dp[i] = dp[i-1] + min(dp[j] + c[j], dp[i-1])\n\n            elif j-1 < 0:\n                dp[i] = dp[i-1] + c[j]\n\n            else:\n                dp[i] = max(dp[i], dp[j] + c[j])\n\n    print(dp[M])\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2492": {"problem_id": 2492, "answer": "import sys\nread = sys.stdin.readline\n\nN, K = map(int, read().split())\nAns = list(map(int, read().split()))\n\n# \u5b58\u5728\u6587\u5b57\u5217\u8868\u793a\uff0c\u9700\u8981\u51e0\u4e4e\u6240\u6709\u7684\u5143\u7d20\u52a0\u5165\u4e8c\u8fdb\u5236\u53d8\u91cf\n# \u56e0\u4e3a\u4ed6\u4eec\u90fd\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528\u8fd9\u4e2a\u53d8\u91cf\u53bb\u6c42\u89e3\ndef prod(a):\n    prod = 1\n    for i in range(1, len(a)):\n        prod *= a[i]\n    return prod\n\n# \u53bb\u6389\u6240\u6709\u7684\u5b57\u5178\u91cc\u9762\u6570\u5b57\u5bf9\u5e94\u7684\u548c\uff0c\u53bb\u6c42\u89e3\ndef merge(a, b):\n    a[:] = b[:]\n\n# \u52a0\u5165\u4e8c\u8fdb\u5236\u53d8\u91cf\u5e76\u8fdb\u884c\u51cf\u53bb\u5e76\u6216\u8005\u51cf\u53bb\u7ed3\u679c\ndef add(a, b):\n    a.append(b)\n\n# \u5c06\u6570\u7ec4\u5185\u7684\u548c\u90fd\u5206\u5f00\u59cb\u6269\u5c55\u4e3a\u5de6\u8fb9\u6807\u51c6\u5316\ndef transpose(a):\n    return sorted(a, key=lambda x: (-x[1], x[0]))\n\n# \u5bf9\u4e8e\u4e00\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u4e24\u4e2a\u6570\u5b57\u90fd\u76f8\u7b49\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5b57\u5c31\u5fc5\u987b\u653e\u5165\u53f3\u8fb9\ndef same(a, b):\n    return prod(a) == prod(b)\n\n# \u5982\u679c\u4e0d\u540c\u6b65\u9aa4\u6ca1\u6709\u901a\u77e5\u4f1a\u5f71\u54cd\u6027\u80fd\uff0c\u56e0\u6b64\u91c7\u7528\u6b65\u9aa4\u540e\u7684\u5373\u65f6\u5e8f\u5217\u987a\u5e8f\u6392\u5217\ndef rec(n, k):\n    if k == 0:\n        return []\n    elif k == 1:\n        return [3]\n    else:\n        ans = []\n        for i in range(n):\n            ans.append(same(Ans[i], Ans[k-1]))\n        return merge(ans, transpose(ans[:k]))\n\n# \u5224\u65ad\u662f\u5426\u4e3a\u96f6\ndef is_zero(n):\n    return prod(n) == 1\n\n# \u5224\u65ad\u662f\u5426\u4e3a\u6700\u5c0f\u503c\ndef is_small(n):\n    return prod(n) == n\n\n# \u589e\u52a0\u4e00\u4e2a\u51cf\u6cd5\u8fde\u7eed\u7684\u5f55\u5165\u6808\ndef cumsum(a, s=0):\n    c = 0\n    for i in range(len(a)):\n        c += a[i] * s\n        s *= -1\n    return c\n\n# \u589e\u52a0\u4e00\u4e2a\u51cf\u6cd5\u8fde\u7eed\u7684\u51cf\u6cd5\u88c5\u914d\u7f6e\ndef conv(a, s=0):\n    c = 0\n    for i in range(len(a)):\n        c += a[i] * s\n        s *= -1\n    return c\n\n# \u589e\u52a0\u4e00\u4e2a\u51cf\u6cd5\u8fde\u7eed\u7684\u5f55\u5165\u6808\ndef tran(a, s=0):\n    c = 0\n    for i in range(len("}, "2493": {"problem_id": 2493, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport sys\ninput = sys.stdin.readline\nM = 10**9+7\nINF = 10**20\n\nn,*a = map(int,input().split())\nmod = M\nfor i in range(n):\n  a[i+1] = list(map(int,input().split()))\nprint(sum(a))"}, "2494": {"problem_id": 2494, "answer": "import math\ndef SieveOfEratosthenes(n):\n    sieve=[0]*(n)\n    for i in range(3,n+1,2):\n        if sieve[i]==0:\n            continue\n        for j in range(i,n,i):\n            sieve[j]=1\n            \nfor k in range(int(input())):\n    print(int(math.log2(k)))"}, "2495": {"problem_id": 2495, "answer": "import bisect\nn = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if a[i] < 0:\n        cnt += 1\n        a[i] = -a[i]\n\nans = 0\nfor i in range(n):\n    if a[i] > 0:\n        ans += cnt\nprint(ans)"}, "2496": {"problem_id": 2496, "answer": "import bisect as b\nimport itertools as it\nimport sys\nimport math\nimport collections\nimport copy\nimport operator\n\n\nsys.setrecursionlimit(10 ** 9)\ninput = sys.stdin.readline\nINF = float('inf')\n\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    d = {}\n    for i in range(N):\n        d[A[i]] = 1\n        for j in range(i + 1, N):\n            if A[i]!= A[j]:\n                d[A[i]] = d[A[j]] * 2\n                d[A[j]] = 2\n    print(d.get('setwise'))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2497": {"problem_id": 2497, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nX = [int(x) for x in input().split()]\nY = [int(y) for y in input().split()]\nd = [0, 0, 0, 1]\nfor i in range(N):\n    if d[i] == 'R':\n        d[i] = X[i]\n    elif d[i] == 'L':\n        d[i] = -X[i]\n    elif d[i] == 'U':\n        d[i] = X[i] + 20\n    else:\n        d[i] = X[i] - 20\nans = (X[0] - X[1]) * (Y[0] - Y[1])\nprint(ans)"}, "2498": {"problem_id": 2498, "answer": "import math\nn,m = map(int,input().split())\na = list(map(int,input().split()))\nans = 0\nfor i in range(1,m+1):\n    ans += (a[i]*2)//math.gcd(a[i],2)\nprint(ans)"}, "2499": {"problem_id": 2499, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    red = [0] * (2 * N + 2)\n    blue = [0] * (2 * N + 2)\n\n    for i in range(N):\n        red[i + 1] = A[i] + red[i]\n\n    for i in range(N - 1):\n        blue[i + 1] = A[i] + blue[i]\n\n    print(max(red) + max(blue))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2500": {"problem_id": 2500, "answer": "from bisect import bisect_left as bl\nmod = 10**9 + 7\nn = int(input())\nans = 0\nfor i in range(n):\n    a, b = [int(x) for x in input().split()]\n    if bl(a) < bl(b):\n        ans += 1\n    elif bl(a) == bl(b):\n        ans += 2\nprint(ans)"}, "2501": {"problem_id": 2501, "answer": "import bisect\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nINF = 10**18\nn = int(readline())\nA = list(map(int, readline().split()))\n\ndef dfs(i):\n    nonlocal res\n    res = 0\n    for j in range(n):\n        if A[j] >= A[i] + j:\n            res += 1\n        elif A[j] >= A[i] - j:\n            res += dfs(j)\n    return res\n\ndfs(0)\nprint(3)"}, "2502": {"problem_id": 2502, "answer": "import sys\ninput = sys.stdin.readline\n\nS = [ord(x) - ord('a') for x in input().strip()]\nT = [ord(x) - ord('a') for x in input().strip()]\n\nMAX = 0\nMIN = -1\nfor i in range(len(S)):\n    if S[i] == T[i]:\n        MAX = max(MAX, i + 1)\n    elif S[i] > T[i]:\n        MIN = i\nprint(MAX)"}, "2503": {"problem_id": 2503, "answer": "from collections import deque\nN, K = list(map(int, input().split()))\nXY = [tuple(map(int, input().split())) for _ in range(N)]\nXY.sort()\nD = [[] for _ in range(K + 1)]\nfor i, (x, y, c) in enumerate(XY):\n    D[i + 1].append((x, y, c))\n    D[i + 1][0] = x\n    D[i + 1][1] = y\nprint(max(D[K]))\n"}, "2504": {"problem_id": 2504, "answer": "from collections import deque\nN, M, L = list(map(int, input().split()))\nA, B, C = [int(x) for x in input().split()]\nE = [[] for _ in range(N)]\nfor i in range(N):\n    E[i].append(i)\n\nans = [0]*(N+1)\nans[A] = 1\ns, t = E[A].pop()\nfor i in range(1, N):\n    s, t = s-M+1, t-1\n    ans[s-A] += 1\n    ans[t-B] += 1\n\nque = deque([(0, 0)])\nwhile que:\n    c, d = que[0]\n    if c > d:\n        c, d = d, c\n    for a, b in E[c]:\n        if ans[a] == 0:\n            que.append((a, d))\n        elif ans[a] > b:\n            que.append((a, b))\n\nprint(*ans, sep='\\n')\n"}, "2505": {"problem_id": 2505, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nN = int(input())\nX = defaultdict(list)\nY = defaultdict(list)\nfor i in range(N):\n    X[i].append(int(input()))\n    Y[i].append(int(input()))\nans = 0\nfor i in range(N):\n    ans += X[i].count(i) * Y[i].count(i)\nprint(ans%1000000007)"}, "2506": {"problem_id": 2506, "answer": "import sys\ninput = sys.stdin.readline\nINF = 10**18\nMOD = 10**9 + 7\nna = lambda x: int(x) if x.is_integer() else int(x)//10 % MOD\n\nN, M = map(int, input().split())\nA = list(map(na, input().split()))\n\nans = 0\nfor i in range(M):\n    a = [0] + A[:M]\n    for j in range(N):\n        a[j] += A[j]\n    ans += min(a.count(N), M - na(a))\nprint(ans)"}, "2507": {"problem_id": 2507, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nINF = float('inf')\n\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\nF = list(map(int, input().split()))\n\nans = INF\nfor i in range(N-1):\n    ans = min(ans, A[i+1] - A[i])\n    for j in range(i+1, N):\n        F[j] -= A[i]\n        ans = min(ans, F[j] + A[i])\nprint(ans)"}, "2508": {"problem_id": 2508, "answer": "import sys\ninput = sys.stdin.readline\n\nH, W, K = list(map(int, input().split()))\nl = [0]*(H+1)\nfor i in range(1, H+1):\n    l[i] = l[i-1] + 1\n    \nc = [0]*W\nfor i in range(1, W+1):\n    c[i] = c[i-1] + 1\n    \nans = 0\nfor i in range(H):\n    for j in range(W):\n        if l[i] == H-1 and c[j] == K-1:\n            ans += 1\n        elif l[i] == H-1:\n            if j == W-1:\n                ans += 1\n            else:\n                ans += 1\n                continue\n        elif c[j] == K-1:\n            if i == H-1:\n                ans += 1\n            else:\n                ans += 1\n                continue\n        elif l[i] == H-1:\n            if j == W-1:\n                ans += 1\n            else:\n                ans += 1\n                continue\n        elif c[j] == K-1:\n            if i == H-1:\n                ans += 1\n            else:\n                ans += 1\n                continue\n        print(ans)\n"}, "2509": {"problem_id": 2509, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nN, K = list(map(int, input().split()))\nans = 0\nfor n in range(N):\n    if n % K > 0:\n        ans += 1\nprint(ans)\n"}, "2510": {"problem_id": 2510, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, M = map(int, readline().split())\nA = list(map(int, readline().split()))\n\nans = 0\nfor i in range(N):\n    a, b = sorted([a, b])\n    if A[a] == A[b]:\n        ans += 1\n\nprint(ans)"}, "2511": {"problem_id": 2511, "answer": "import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nadj = [[] for _ in range(N)]\nfor _ in range(N-1):\n    a, b = map(int, input().split())\n    adj[a].append(b)\n    adj[b].append(a)\n\nMOD = 10**9+7\ndp = [0]*(N+1)\ndp[0] = 1\nvisited = [0]*(N+1)\nvisited[0] = 1\ndef dfs(s):\n    for i in adj[s]:\n        if visited[i] == 0:\n            dfs(i)\n        visited[i] = 1\ndfs(0)\nans = 0\nfor i in range(1, N+1):\n    ans += dfs(i)\n    ans %= MOD\nprint(ans)"}, "2512": {"problem_id": 2512, "answer": "from collections import deque\nr,c,k=list(map(int,input().split()))\nans=[]\ndef process(r,c,k):\n    if k==0:\n        ans.append(r*c)\n        return\n    for i in range(1,r+1):\n        ans.append(ans[-1]+r*k)\n    for i in range(1,c+1):\n        ans.append(ans[-1]+c*k)\n    for i in range(k-1):\n        ind=r+i\n        ind1=r+i-1\n        ind2=r+i+1\n        process(ind,c,k-1)\n        process(ind1,c,k-1)\n        process(ind2,c,k-1)\nq=deque()\nq.append((1,1,k))\nwhile q:\n    r,c,k=q.popleft()\n    ans.append(r*c)\n    for i in range(k):\n        ind=r+i\n        ind1=r+i-1\n        ind2=r+i+1\n        process(ind,c,k-1)\n        process(ind1,c,k-1)\n        process(ind2,c,k-1)\nprint(max(ans))"}, "2513": {"problem_id": 2513, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\ns = input().rstrip()\nW = [0]*N\nfor i in range(N):\n    if s[i] == 'o':\n        W[i] = 1\n    elif s[i] == 'x':\n        W[i] = 2\nans = []\nfor i in range(N):\n    if W[i] == 1:\n        ans.append('S')\n    else:\n        ans.append('W')\nprint(''.join(ans))"}, "2514": {"problem_id": 2514, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nA = [int(i) for i in input().split()]\nQ = int(input())\nB = [int(i) for i in input().split()]\nC = [int(i) for i in input().split()]\ns = sum(A)\nd = S = 0\nfor i in range(N):\n    if B[i]!= C[i]:\n        S += A[i]\n        d += B[i]*C[i]\n    else:\n        S += A[i]\n        d += C[i]\nprint(''.join(map(str, s+d)))"}, "2515": {"problem_id": 2515, "answer": "from collections import defaultdict\nimport bisect\ndef li(): return [int(i) for i in input().split()]\ndef tr(): return input()\ndef ld(): return list(map(int, input().split()))\ndef str(): return input()\ndef li2(): return [int(i) for i in input()]\ndef tr2(): return tr()\ndef ld2(): return list(map(int, input().split()))\ndef str2(): return str()\ndef li3(): return [int(i) for i in input()]\ndef tr3(): return tr2()\ndef ld3(): return list(map(int, input()))\ndef str3(): return str2()\ndef li4(): return [int(i) for i in input()]\ndef tr4(): return tr3()\ndef ld4(): return list(map(int, input()))\ndef str4(): return str3()\ndef li5(): return [int(i) for i in input()]\ndef tr5(): return tr4()\ndef ld5(): return list(map(int, input()))\ndef str5(): return str4()\ndef li6(): return [int(i) for i in input()]\ndef tr6(): return tr5()\ndef ld6(): return list(map(int, input()))\ndef str6(): return str5()\ndef li7(): return [int(i) for i in input()]\ndef tr7(): return tr6()\ndef ld7(): return list(map(int, input()))\ndef str7(): return str5()\ndef li8(): return [int(i) for i in input()]\ndef tr8(): return tr7()\ndef ld8(): return list(map(int, input()))\ndef str8(): return str7()\ndef li9(): return [int(i) for i in input()]\ndef tr9(): return tr8()\ndef ld9(): return list(map(int, input()))\ndef str9(): return str7()\ndef li10(): return [int(i) for i in input()]\ndef tr10(): return tr9()\ndef ld10(): return list(map(int, input()))\ndef str10(): return str7()\ndef li11(): return [int(i) for i in input()]\ndef tr11(): return tr10()\ndef ld11(): return list(map(int, input()))\ndef str11(): return str7()\ndef li12(): return [int(i) for i in input()]\ndef tr12(): return tr11()\ndef ld12(): return list(map(int, input()))\ndef str12(): return str7()\ndef li13(): return [int(i) for i in input()]\ndef tr13(): return tr12()\ndef ld13(): return list(map(int, input()))\ndef str13(): return str7()\ndef li14(): return [int(i) for i in input()]\ndef tr14(): return tr13()\ndef ld14(): return list(map(int, input()))\ndef str14(): return str7()\ndef li15(): return [int(i) for i in input()]\ndef tr15(): return tr14()\ndef ld15(): return list(map(int, input()))\ndef str15(): return str7()\ndef li16(): return [int(i) for i in input()]\ndef tr16(): return tr15()\ndef ld16(): return list(map(int, input()))\ndef str16(): return str7()\ndef li17(): return [int(i) for i in input()]\ndef tr17(): return tr16()\ndef ld18(): return list(map(int, input()))\ndef str18(): return str7()\ndef li19(): return [int(i) for i in input()]\ndef tr19(): return tr18()\ndef ld20(): return list(map(int, input()))\ndef str20(): return str7()\ndef li21(): return [int(i) for i in input()]\ndef tr21(): return tr19()\ndef ld22(): return list(map(int, input()))\ndef str22(): return str7()\ndef li23(): return [int(i) for i in input()]\ndef tr23(): return tr21()\ndef ld24(): return list(map(int, input()))\ndef str24(): return"}, "2516": {"problem_id": 2516, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N, P = list(map(int, readline().split()))\n    S = list(map(int, readline().split()))\n\n    divisible = 0\n    for i in range(N + 1):\n        if S[i] % P == 0:\n            divisible += 1\n\n    print(divisible)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2517": {"problem_id": 2517, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m,r = map(int,input().split())\natc = [list(map(int,input().split())) for _ in range(n)]\n\natc.sort()\ndists = [0]*n\nfor i in range(n):\n    dists[i+1] = atc[i][1]\n    \nfor i in range(m):\n    a,b,c = atc[i]\n    dist = abs(a-b) + abs(b-c) + abs(c-a)\n    dists[i+1] = min(dists[i],dist)\n\nprint(dists[r])"}, "2518": {"problem_id": 2518, "answer": "import sys\ninput = sys.stdin.readline\n\nN, A, B = map(int, input().split())\nh = [0] + list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    h[i] = min(h[i-1], h[i]) + A\n    ans += sum(h[i-1:i]) - (A-h[i])\nprint(ans)"}, "2519": {"problem_id": 2519, "answer": "import sys\ninput = sys.stdin.readline\n\nN, K = map(int, input().split())\np = list(map(int, input().split()))\n\ndef dice_sum(n, k):\n    return sum(p[n] for n in range(k))\n\nans = 0\nfor i in range(N):\n    ans += dice_sum(i, K-1)\n\nprint(ans)"}, "2520": {"problem_id": 2520, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque"}, "2521": {"problem_id": 2521, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nread = lambda: list(map(int, input().split()))\n\nN = int(input())\nA = read()\nans = [0]*3*N\nb = sum(A[i] for i in range(3*N))\nans[0] = b\nfor i in range(1, 3*N):\n    ans[i] = max(ans[i-1], b+A[i])\nprint(ans[-1])"}, "2522": {"problem_id": 2522, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    if a[i]!= b[i]:\n        ans.append(i+1)\nif len(ans) == n:\n    print('Yes')\n    for i in range(n):\n        print(ans[i], end=\" \")\n    print()\nelse:\n    print('No')"}, "2523": {"problem_id": 2523, "answer": "def solve(s):\n  n = len(s)\n  ans = 0\n  for i in range(n):\n    if s[i] == 1:\n      ans += 1\n    else:\n      ans += 0\n  return ans\n\nS = input()\nN = len(S)\nL = [0] * (N + 1)\nL[1] = solve(S).bit_length()\n\nprint(max(L))"}, "2524": {"problem_id": 2524, "answer": "import sys\ndef input(): return sys.stdin.readline().rstrip()\nMOD = 10**9 + 7\ninf = float('inf')\neps = 1e-8\n\nN = int(input())\nA = list(map(int, input().split()))\np = pow(2, 60)\nfor i in range(N-1):\n    a = pow(2, i)\n    b = pow(2, N-i-1)\n    c = a^b\n    d = c%MOD\n    e = c//MOD\n    print((pow(2, i) - a) * (pow(2, N-i-1) - b) * (ceil(d) - e) % MOD)"}, "2525": {"problem_id": 2525, "answer": "import sys\ninput = sys.stdin.readline\n\nS = input().rstrip()\nQ = int(input())\nd = {}\nfor i in range(Q):\n    t = input().rstrip()\n    if t not in d:\n        d[t] = []\n    d[t].append(i)\n\nprint(\"\".join(d[t]))"}, "2526": {"problem_id": 2526, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**9)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\nread = lambda: int(input())\n\nX, Y, A, B, C = list(map(int, input().split()))\np = [tuple(map(int, input().split())) for _ in range(A)]\nq = [tuple(map(int, input().split())) for _ in range(B)]\nr = [tuple(map(int, input().split())) for _ in range(C)]\n\ndef dfs(s, a):\n    nonlocal ans\n    ans = max(ans, sum(p[i]*q[i] for i in range(A) if s!=i))\n    for i in range(A):\n        dfs(s, i)\ndfs(0, 0)\n"}, "2527": {"problem_id": 2527, "answer": "s=input()\nl=len(s)\nif l==len(s):\n print(\"happy\")\nelse:\n print(\"sad\")"}, "2528": {"problem_id": 2528, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(l[0]*l[1])"}, "2529": {"problem_id": 2529, "answer": "# cook your dish here\ntry:\n    s=input().split()\n    n=int(s[0])\n    m=int(s[1])\n    if n%5!=0:\n        print(\"Insufficient Funds\")\n    else:\n        print(m-0.50)\nexcept:\n    print(0)"}, "2530": {"problem_id": 2530, "answer": "from collections import Counter\nfrom math import ceil\n\ndef __starting_point():\n N, M = map(int, input().split())\n chef_names = []\n for _ in range(N):\n  chef_names.append(input())\n chef_names.sort()\n subjects = []\n for _ in range(N):\n  subjects.append(input())\n subjects.sort()\n chef_names_l = []\n for i in range(len(chef_names)):\n  if chef_names[i] not in chef_names_l:\n   chef_names_l.append(chef_names[i])\n  \n cm = dict(list(zip(list(range(len(chef_names))), list(range(len(chef_names_l))))))\n cm[0] = 1\n cm[1] = ceil(len(subjects) / 2)\n print(cm[chef_names_l.index(subjects[0])])\n print(cm[chef_names_l.index(subjects[-1]))"}, "2531": {"problem_id": 2531, "answer": "import bisect\nn=int(input())\na=[int(x) for x in input().split()]\nans=0\nfor i in range(n):\n    x=a[i]\n    a.append(x)\n    ans+=x\nprint(ans)"}, "2532": {"problem_id": 2532, "answer": "from sys import stdin,stdout\nMOD = 10**6+7\nfac,inv = [1],[]\nfor i in range(4):\n    fac.append((i*fac[i])%MOD)\n    inv.append((i*inv[i])%MOD)\nfac.append(0)\ninv.append(0)\na = list(map(int,stdin.readline().split()))\na = [int(i) for i in a]\np,q,d = [0],[0],[0]\nfor i in range(1,10):\n    p.append((a[i]*fac[i-1])%MOD)\n    q.append((a[i]*inv[i-1])%MOD)\n    d.append(d[i-1]*fac[i-1]%MOD)\nprint(*p,sep='')\nprint(*q,sep='')\n"}, "2533": {"problem_id": 2533, "answer": "n,e=map(int,input().split())\r\ns=list(map(int,input().split()))\r\ns.sort()\r\nfor i in range(e):\r\n    a,b=map(int,input().split())\r\n    if a>b:\r\n        a,b=b,a\r\n    t=s[a-1]\r\n    s.remove(t)\r\n    s.append(t)\r\nif \"YES\" not in s:\r\n    print(\"NO\")\r\nelse:\r\n    print(\"YES\")\r\n    for i in range(len(s)):\r\n        print(s[i],end=\" \")"}, "2534": {"problem_id": 2534, "answer": "R,C=list(map(int,input().split()))\nl=[]\nr=[]\nfor i in range(R):\n l.append(list(map(int,input().split())))\n \ng={}\ns=10**9+1\nfor i in range(R):\n s=min(s,l[i][1])\n g[s]=i\nprint(g[s])\n"}, "2535": {"problem_id": 2535, "answer": "import sys\ninput = sys.stdin.readline\n\ndef ways(n, m):\n if n == 1:\n  return 1\n elif m == 1:\n  return sum([ways(n, m - 1) for n in range(1, m + 1)])\n else:\n  return sum([ways(n - 1, m - 1) for n in range(1, m + 1)])\n\nx, n = map(int, input().split())\nprint(ways(n, x))"}, "2536": {"problem_id": 2536, "answer": "import sys\r\ndef solve(n, m, l):\r\n    n, m = map(int, sys.stdin.readline().split())\r\n    A = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\r\n    B = [list(map(int, sys.stdin.readline().split())) for _ in range(m)]\r\n    dp = [[-1] * m for _ in range(n + 2)]\r\n    for i in range(n):\r\n        dp[i][0] = A[i][0]\r\n    for i in range(m):\r\n        for j in range(i + 1, n):\r\n            if A[i][j] not in dp[j]:\r\n                dp[i][A[i][j]] = A[i][j]\r\n    print(max(dp[l - 1][i]))\r\n\r\ndef __starting_point():\r\n    n, m, l = list(map(int, sys.stdin.readline().split()))\r\n    solve(n, m, l)\r\n__starting_point()"}, "2537": {"problem_id": 2537, "answer": "q = int(input())\nfor i in range(q):\n    s = input()\n    t = input()\n    p = input()\n    if s == t:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "2538": {"problem_id": 2538, "answer": "t = int(input())\nfor _ in range(t):\n    n, m, k = map(int, input().split())\n    if n > m:\n        m = n\n    s = m\n    i = 0\n    while s <= m:\n        if s + k > m:\n            break\n        s += k\n        i += 1\n    c = 0\n    for i in range(i, i + k):\n        if i > s:\n            break\n        c += n // i\n    print(c)"}, "2539": {"problem_id": 2539, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nt = int(readline())\nwhile t:\n    t -= 1\n    x, p, k = map(int, readline().split())\n    print(x, p, k + x)"}, "2540": {"problem_id": 2540, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ncol = list(map(int, input().split()))\ncnt = [0]*n\nfor i in range(n-1):\n    x, y = list(map(int, input().split()))\n    cnt[x] += 1\n    cnt[y] += 1\nvisited = [False]*n\nvisited[1] = True\nsums = [0]*n\nstack = deque()\nstack.append((1,1))\nwhile stack:\n    cur, color = stack.popleft()\n    if visited[cur]:\n        continue\n    visited[cur] = True\n    for nex in col[cur]:\n        if visited[nex]:\n            continue\n        stack.append((nex, color))\n        sums[cur] += color\n        cnt[nex] -= 1\nprint(*sums[1:], sep='\\n')"}, "2541": {"problem_id": 2541, "answer": "#!/usr/bin/env python3\nimport sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ninp = lambda: list(map(int,sys.stdin.readline().rstrip(\"\\r\\n\").split()))\nQ = int(input())\nans = []\nfor _ in range(Q):\n    L, R = inp()\n    ans.append(L-1)\n    ans.append(R-1)\nprint(*ans)"}, "2542": {"problem_id": 2542, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor _ in range(t):\n    s = list(map(int, readline().split()))\n    n = len(s)\n    ans = 0\n    for i in range(n):\n        if s[i] == 0:\n            ans += 1\n        else:\n            break\n    print(ans)"}, "2543": {"problem_id": 2543, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, q = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nt = [0]*(m+1)\nfor i in range(1, n+1):\n    t[a[i] - b[i]] = t[a[i]] + (-1)**i\n\nfor _ in range(q):\n    l, r, x = list(map(int, input().split()))\n    t.append(min(t[l-1], t[r-1]))\n\nprint(min(t[n-1]))\n"}, "2544": {"problem_id": 2544, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    g=[[] for i in range(n)]\n    for i in range(n-1):\n        x,y=map(int,input().split())\n        g[x].append(y)\n        g[y].append(x)\n    ans=[]\n    for i in range(n):\n        ans.append([i,g[i][0]])\n    print(*ans,sep='\\n')"}, "2545": {"problem_id": 2545, "answer": "t = int(input())\nfor i in range(t):\n    a, b = list(map(int, input().split()))\n    if a == 0 and b == 0:\n        print(\"YES\")\n    elif a == 0:\n        print(\"NO\")\n    elif b == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "2546": {"problem_id": 2546, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, s = map(int, input().split())\n    m = sorted([(l, r) for l, r in zip(map(int, input().split()), range(1, n + 1))])\n    print(m.pop(0))"}, "2547": {"problem_id": 2547, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, m, k = map(int, input().split())\n    books = [tuple(map(int, input().split())) for _ in range(n)]\n    l = len(books)\n    dp = [[0] * l for _ in range(m)]\n    for i in range(1, n):\n        if books[i][0] == 0:\n            dp[i][0] = i\n        elif books[i][0] == 1:\n            dp[i][0] = min(dp[i-1][0], i)\n        else:\n            dp[i][0] = books[i][0]\n    for i in range(1, m):\n        if dp[i][0] == l:\n            print(dp[i][1])\n            return\n        for j in range(i, m):\n            if dp[i][j] == l:\n                print(dp[i][j])\n                return\n            dp[i][j] = dp[i-1][j]\n            if dp[i][j] < dp[i].get(0) - k:\n                dp[i][j] = dp[i][j] + k\n            else:\n                dp[i][j] = dp[i][j]"}, "2548": {"problem_id": 2548, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    s=input().strip()\n    ans=0\n    for i in range(n):\n        ans+=s[i]\n    print(ans)"}, "2549": {"problem_id": 2549, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\nd = list(map(int, readline().split()))\na = [0] + list(zip(*d)) + [0]\nb = [0] + list(zip(*d)) + [0]\n\ns = {}\nfor i in range(n):\n    s[i] = []\n    s[i].append(i)\n\ndef f(a, b):\n    nonlocal d\n    nonlocal s\n    r = 0\n    for i in range(n):\n        if a[i] == b[i]:\n            continue\n        r += f(a[i], b[i])\n        a[i] = 0\n        b[i] = 0\n    return r % (10**9+7)\n\nans = [0] * m\nfor i in range(m):\n    a, b = list(map(int, readline().split()))\n    ans[a-1] += f(a, b-1) * (m-1)\n    ans[b-1] += f(a, b-1) * (m-1)\n\nprint(''.join(map(str, ans)))"}, "2550": {"problem_id": 2550, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n,m=list(map(int,input().split()))\n    a=list(map(int,input().split()))\n    if n==m:\n        print(m)\n    elif n>m:\n        print(max(m,a[n-1]))\n    else:\n        m1=sum(a[:n-1])\n        m2=sum(a[n-1:])\n        m3=sum(a[n-1:n]).std()\n        m4=sum(a[:n-1])-m1\n        m5=sum(a[n-1:])-m2\n        m6=sum(a[n-1:n]).std()\n        print(max(m1,m2,m3,m4,m5,m6))\n"}, "2551": {"problem_id": 2551, "answer": "import sys\nimport math\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        s = input().rstrip()\n        tt = input().rstrip()\n        n = len(s)\n        d = {}\n        for i in range(n):\n            d[s[i]] = i\n        ans = 0\n        for i in range(n):\n            if tt[i] not in d:\n                ans += 1\n                d[tt[i]] = i\n        print(ans)"}, "2552": {"problem_id": 2552, "answer": ""}, "2553": {"problem_id": 2553, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n,x = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    print(\"Yes\" if sum(l)%2 else \"No\")\n"}, "2554": {"problem_id": 2554, "answer": "import sys\nreadline = sys.stdin.readline\n\nT = int(readline())\nfor _ in range(T):\n    N = int(readline())\n    A = list(map(int, readline().split()))\n    B = [0] * N\n    B[0] = A[0]\n    for i in range(1, N):\n        if A[i] % 2 == 1:\n            B[i] = max(B[i], A[i])\n        else:\n            B[i] = A[i]\n    print(sum(B[N - 1: 2 * N]))\n"}, "2555": {"problem_id": 2555, "answer": ""}, "2556": {"problem_id": 2556, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(list(map(int, input().split())))\nprint(min(l[0][sum] for sum in l[1:]))"}, "2557": {"problem_id": 2557, "answer": "import sys\ninput=sys.stdin.readline\nn,m=list(map(int,input().split()))\ninf=10**9+7\ndp=[inf]*(n+1)\nfor i in range(m):\n    a,b=list(map(int,input().split()))\n    dp[a-1]=min(dp[a-1],dp[b-1]+1)\n    dp[b-1]=min(dp[b-1],dp[a-1]+1)\nprint(min(dp[n-1],dp[n]))\n"}, "2558": {"problem_id": 2558, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    a,b,c,d=list(map(int,input().split()))\n    a=a//2\n    b=b//2\n    c=c//2\n    d=d//2\n    if a+b+c+d<=0:\n        print(-1)\n    else:\n        print(int(max(0,a+b+c+d)))\n"}, "2559": {"problem_id": 2559, "answer": ""}, "2560": {"problem_id": 2560, "answer": "import sys\ndef inp(): return sys.stdin.readline().strip()\ndef st(): return sys.stdin.readline().strip()\ndef lis(): return list(map(int,inp().split()))\ndef ri(): return list(map(int,inp().split()))\nt = inp()\nfor _ in range(t):\n    n,l,r = lis()\n    if n <= l and n >= r:\n        print('Yes')\n        continue\n    print('No')"}, "2561": {"problem_id": 2561, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n  a = list(map(int, input().split()))\n  a.append(0)\n  ans = 0\n  for i in range(30):\n    if a[i] == 0:\n      ans += 1\n    else:\n      ans += 2 ** i\n  print(ans)\n"}, "2562": {"problem_id": 2562, "answer": "n = int(input())\na = list(map(int, input().split()))\ng = a[0]\nfor i in range(1, n):\n    g = max(g, a[i] * g)\n    a[i] = g\nprint(sum(a) % 1000000007)\n"}, "2563": {"problem_id": 2563, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    a=str(input())\n    ans=''\n    for i in range(len(a)):\n        ans+=a[i]\n        ans=ans[0]*10+ans[1:]\n    print(int(ans))"}, "2564": {"problem_id": 2564, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    a, b, n = map(int, input().split())\n    if a > n:\n        print(1)\n    else:\n        print(min(b, a) + max(b, a) + 2)"}, "2565": {"problem_id": 2565, "answer": "t = int(input())\nfor _ in range(t):\n    x1, y1, z1 = map(int, input().split())\n    x2, y2, z2 = map(int, input().split())\n    ans = 0\n    for i in range(1, x1 + 1):\n        ans += x1 * (i + 1)\n    for i in range(1, y1 + 1):\n        ans += y1 * (i + 1)\n    for i in range(1, z1 + 1):\n        ans += z1 * (i + 1)\n    print(ans)"}, "2566": {"problem_id": 2566, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    k = int(readline())\n    a = list(map(int, readline().split()))\n    m = 0\n    for i in range(7):\n        if a[i] == 0:\n            m += 1\n    print(min(m, k - m))"}, "2567": {"problem_id": 2567, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    s=input()\n    d={}\n    for i in range(n):\n        d[s[i]]=1\n    ans=[]\n    for i in range(n):\n        ans.append(d[s[i]])\n    print(\"\".join(ans))"}, "2568": {"problem_id": 2568, "answer": "t = int(input())\nfor _ in range(t):\n    s = input()\n    x = 0\n    y = 0\n    for i in s:\n        if i == '+':\n            x += 1\n        else:\n            y += 1\n    print(x-y)"}, "2569": {"problem_id": 2569, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\nt = int(input())\nfor tests in range(t):\n    n = int(input())\n    print(pow(2,n-1,MOD)*(2*(n-1))%MOD)"}, "2570": {"problem_id": 2570, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n,x=map(int,input().split())\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    ans=0\n    for i in range(n):\n        if a[i]>x:\n            ans=1\n            break\n    print(\"Yes\" if ans==0 else \"No\")"}, "2571": {"problem_id": 2571, "answer": "import sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = a[i]\n        if ans[i] > 100:\n            ans[i] = ans[i] % 100\n    print(*ans)\n"}, "2572": {"problem_id": 2572, "answer": "import sys\nimport math\nfrom collections import defaultdict, deque\nfrom itertools import combinations\nfrom bisect import bisect_left, bisect_right\nfrom copy import deepcopy\nfrom heapq import heappush, heappop, heapify\nfrom operator import itemgetter, attrgetter\nfrom functools import reduce\ninput = sys.stdin.readline\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LI2(): return list(map(int, input().split()))\ndef S(): return input()\ndef LS(): return [int(x) for x in input().split()]\ndef IR(n): return [i for i in range(n)]\ndef LIR(n): return [i for i in range(n)]\ndef SR(n): return input().split()\ndef LSR(n): return [i for i in range(n)]\ndef DEC(x): return 1 if x == 0 else (DEC(x-1) + 1)\ndef INC(x): return DEC(x+1)\ndef revc(x): return x[1:] if x[0] else x"}, "2573": {"problem_id": 2573, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k, m = list(map(int, input().split()))\nchanges = [0] * n\nfor _ in range(m):\n    changes[int(input())] += 1\n\np = [[] for i in range(n)]\nfor i in range(n):\n    p[i].append(i)\n\nans = [0] * n\ncnt = [0] * n\nans[0] = 1\nfor i in range(1, n):\n    cnt[i] = cnt[i-1] + 1\n    for j in range(len(p[i])):\n        if p[i].get(p[i][j], []) == p[i][j]:\n            cnt[i] = cnt[i-1]\n            ans[i] = cnt[i]\nprint(min(ans[k]))\n"}, "2574": {"problem_id": 2574, "answer": "import sys\nimport math\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    d={}\n    for i in range(n):\n        d[a[i]]=i\n    ans=0\n    for i in d:\n        ans=max(ans,d[i])\n    print(ans)"}, "2575": {"problem_id": 2575, "answer": "import sys\ninput=sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    a=int(input())\n    if a%360==0:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "2576": {"problem_id": 2576, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    a,b,c,d=list(map(int,input().split()))\n    if a==b:\n        print(d)\n    elif a>b:\n        print(100-a+d)\n    else:\n        print(100-a)\n"}, "2577": {"problem_id": 2577, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n,m=map(int,input().split())\n    a=list(map(int,input().split()))\n    ans=[]\n    for i in range(n):\n        ans.append(a[i])\n    print(*ans)"}, "2578": {"problem_id": 2578, "answer": "import sys\nimport math\nimport bisect\nfrom collections import defaultdict as dd, deque\nfrom collections import Counter as C\nfrom itertools import permutations\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef LI_(): return list(map(int, input().split()))\nn, m = I()\ngroups = []\nfor i in range(m):\n    groups.append(LI())\ngroups.sort()\nans = 0\nfor i in range(n):\n    if groups[i][1] == 1:\n        ans += 1\nprint(*ans)\n"}, "2579": {"problem_id": 2579, "answer": "l = list(map(int, input().split()))\nl.sort()\ns = 'YES'\nfor i in range(1, 11):\n    if l[i] * i <= k:\n        s = s + 'YES'\n        break\nprint(s)\n"}, "2580": {"problem_id": 2580, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9 + 7\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    edges = [tuple(map(int, input().split())) for i in range(n-1)]\n    m = int(input())\n    p = [i for i in range(m)]\n    k = int(input())\n    L = [0]*n\n    for i in range(n-1):\n        L.append(L[i]+1)\n    L.append(k)\n    ans = 0\n    for i in range(n):\n        ans = (ans + max(0, L[i] - k)) % MOD\n    print(ans)"}, "2581": {"problem_id": 2581, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\nans=[]\nfor i in range(n):\n    a=list(map(int,input().split()))\n    ans.append(sum(a[1:]))\nprint('\\n'.join(map(str,ans)))\nprint(' '.join(map(str,ans)))"}, "2582": {"problem_id": 2582, "answer": "n = int(input())\np = list(map(int, input().split()))\nans = 0\nfor i in range(1, n):\n    if p[i] == i:\n        ans += 1\nprint(ans)\n"}, "2583": {"problem_id": 2583, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    if n%2==0:\n        print(\"Ashishgup\")\n    else:\n        print(\"FastestFinger\")"}, "2584": {"problem_id": 2584, "answer": "import sys\nimport math\ninput = sys.stdin.readline\nt=int(input())\nfor tests in range(t):\n    n,p,k=list(map(int,input().split()))\n    a=list(map(int,input().split()))\n    p=sum(a)\n    if p<=n:\n        print(0)\n    else:\n        m=0\n        for i in range(k-1):\n            m+=a[i]\n        print(m)"}, "2585": {"problem_id": 2585, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    print(2*pow(n,2))"}, "2586": {"problem_id": 2586, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,m=list(map(int,input().split()))\n    color=[[0 for i in range(m)] for j in range(n)]\n    color[0][0]=1\n    color[0][1]=1\n    color[0][2]=1\n    color[1][0]=1\n    color[1][1]=1\n    color[1][2]=1\n    color[2][0]=1\n    color[2][1]=1\n    color[2][2]=1\n    for i in range(3,n+2):\n        for j in range(3,m+2):\n            if color[i][j]==0:\n                color[i][j]=color[i][j-1]+1\n            else:\n                color[i][j]=max(color[i-1][j],color[i-1][j-1]+1)\n    print('\\n'.join(map(str,color)))"}, "2587": {"problem_id": 2587, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor _ in range(t):\n    n = int(readline())\n    ans = 100000000000000000000\n    ans = pow(10,n-1,ans)\n    print(ans)"}, "2588": {"problem_id": 2588, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n,a,b=map(int,input().split())\n    s=input()\n    cost=0\n    for i in range(len(s)):\n        if s[i]=='0':\n            cost+=2*a\n        elif s[i]=='1':\n            cost+=2*b\n    print(min(cost))"}, "2589": {"problem_id": 2589, "answer": "import sys\nimport math\nimport bisect\nfrom collections import defaultdict, deque\ninput = sys.stdin.readline\n \ndef ii():\n    return int(input())\ndef mi():\n    return list(map(int, input().split()))\ndef li():\n    return list(mi())\nt = ii()\nfor _ in range(t):\n    n, x = mi()\n    a = li()\n    ans = 0\n    for i in range(len(a)):\n        if a[i] % x == 0:\n            ans += 1\n        else:\n            if ans % 2 == 0:\n                ans -= 1\n            else:\n                print(-1)\n    print(len(set(a) & {0}))"}, "2590": {"problem_id": 2590, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,x=list(map(int,input().split()))\n    a=sorted(list(map(int,input().split())))\n    c=0\n    for i in a:\n        if i>=x:\n            c+=1\n        else:\n            c+=i//x\n    print(c)\n"}, "2591": {"problem_id": 2591, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    d=[]\n    for i in range(n-1):\n        d.append(a[i]-a[i+1])\n    print(*d)"}, "2592": {"problem_id": 2592, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor _ in range(t):\n    a, b, c = list(map(int, readline().split()))\n    print(max(a, b, c) + (max(a - b, c) + max(a - c, b - b)))\n"}, "2593": {"problem_id": 2593, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor _ in range(t):\n    n = int(readline())\n    A = list(map(int, readline().split()))\n    d = {}\n    for i in range(n):\n        d[A[i]] = i\n    ans = 0\n    for i in range(n):\n        if d[i] < i:\n            ans += 1\n        elif d[i] == i:\n            ans += 1\n    print(ans)\n"}, "2594": {"problem_id": 2594, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor _ in range(t):\n    n, m = list(map(int, readline().split()))\n    print(min(n, m))\n"}, "2595": {"problem_id": 2595, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    a, b = map(int, input().split())\n    print(max(0, b - a + 3))"}, "2596": {"problem_id": 2596, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k, m, t = list(map(int, readline().split()))\n\nd = {i: [] for i in range(1, n + 1)}\nfor _ in range(t):\n    i, j = list(map(int, readline().split()))\n    d[i].append(j)\n    d[j].append(i)\n\nseg = []\nans = 0\nfor i in range(min(m, n - k)):\n    seg.append(i + 1)\n    ans += 1\n    if i > k:\n        seg.append(i - k + 1)\n\nprint(len(seg), k)\nfor i in seg:\n    print(i, end ='')\n    print(ans)"}, "2597": {"problem_id": 2597, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9 + 7\neps = 1e-9\ng = [1] * MOD\nfor i in range(2, MOD):\n    g.append((eps + i) % MOD)\n    \ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max(a) ** 2)\n    \nfor _ in range(int(input())):\n    solve()"}, "2598": {"problem_id": 2598, "answer": "from collections import deque\nn,m=list(map(int,input().split()))\nedges=[]\nfor i in range(1,n+1):\n    edges.append([i,list(map(int,input().split()))])\ncolors=[\"B\", \"R\"]\nwhile m:\n    m -= 1\n    s,u,v=list(map(int,input().split()))\n    if colors[u]==\"B\":\n        colors[v]=\"R\"\n    else:\n        colors[v]=\"B\"\n    edges.append([s,v])\nvisited=[0]*(n+1)\nque=deque([0])\nans=0\nwhile que:\n    now=que.popleft()\n    for to,adj in enumerate(edges):\n        if visited[to]==0:\n            visited[to]=1\n            que.append(to)\n            for j in range(adj[0],adj[1]):\n                if colors[j]==\"B\":\n                    edges[to]+=[j]\n                else:\n                    edges[to]+=[j,adj[0]]\nprint(len(visited))\nfor i in visited:\n    ans+=1+n-1-i\nprint(ans)\n"}, "2599": {"problem_id": 2599, "answer": "import sys\nimport math\ninput = sys.stdin.readline\nreadint = lambda: int(input())\nreadinty = lambda: int(y)\n\n\nt = readint()\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    print(n + sum(map(int, str(k + x) for x in range(1, 10) if x!= 0)))\n"}, "2600": {"problem_id": 2600, "answer": "import sys\ninput = sys.stdin.readline\n\n\nt=int(input())\nfor _ in range(t):\n    n,m=map(int,input().split())\n    matrix=[[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        matrix[i][i]=1\n    for i in range(m):\n        c=0\n        for j in range(n):\n            if matrix[i][j]==1:\n                c+=1\n        if c==m:\n            print(n-c)\n            break\n"}, "2601": {"problem_id": 2601, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    f = 0\n    for i in range(n):\n        if a[i] < a[i-1]:\n            f = 1\n            break\n    if f:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "2602": {"problem_id": 2602, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    a,b,n,m=list(map(int,input().split()))\n    if n+m!=0:\n        print(\"No\")\n    elif min(a,b)%2==0:\n        print(\"Yes\")\n    else:\n        print(\"No\")"}, "2603": {"problem_id": 2603, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    d=dict()\n    for i in a:\n        d[i]=1\n    "}, "2604": {"problem_id": 2604, "answer": "from fractions import gcd\nr,d=list(map(int,input().split()))\nn=int(input())\na=[]\nfor i in range(n):\n    x,y,r=list(map(int,input().split()))\n    a.append([x,y,r])\nans=0\nfor i in range(n):\n    c=gcd(a[i][0],a[i][1])\n    if c<0:\n        ans+=c\n    else:\n        ans+=n\nprint(ans)\n"}, "2605": {"problem_id": 2605, "answer": "import sys\nread = sys.stdin.readline\nn, k = list(map(int, read().split()))\nc = list(map(int, read().split()))\nd = list(map(int, read().split()))\nr = [0] * n\nfor i in range(1, n):\n    r[i] = sum(c[j] * d[i - j] for j in range(k))\nprint(r[0])"}, "2606": {"problem_id": 2606, "answer": "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.reverse()\n    b = [0] * n\n    for i in range(1, n):\n        b[i] = b[i - 1] + abs(a[i] - i)\n    print(min(b))"}, "2607": {"problem_id": 2607, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    s=input().rstrip()\n    l=len(s)\n    if l%2!=0:\n        print(''.join(map(chr,s)))\n    else:\n        print(''.join(map(chr,s[:l])))"}, "2608": {"problem_id": 2608, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(min(a), max(b))"}, "2609": {"problem_id": 2609, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    xs = [list(map(int, input().split())) for i in range(n)]\n    ys = [list(map(int, input().split())) for i in range(n-1)]\n    mx = 0\n    for i in range(n):\n        if xs[i][0] == ys[i][0]:\n            mx = max(mx, len(xs))\n        elif xs[i][0] < ys[i][0]:\n            xs[i].pop(0)\n        else:\n            ys[i].pop(0)\n    print(mx)"}, "2610": {"problem_id": 2610, "answer": "import sys\nimport math\nfrom collections import defaultdict,Counter\ninput=sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,p,k=list(map(int,input().split()))\n    a=list(map(int,input().split()))\n    p=max(p,a[0])\n    ans=0\n    for i in range(1,n):\n        ans+=p-a[i]\n        if(k>=p):\n            k-=a[i]\n    print(ans)"}, "2611": {"problem_id": 2611, "answer": ""}, "2612": {"problem_id": 2612, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    print(n-max(a))"}, "2613": {"problem_id": 2613, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,k,z=list(map(int,input().split()))\n    a=list(map(int,input().split()))\n    a.sort()\n    score=0\n    cur=1\n    for i in range(n):\n        score+=a[i]\n        cur+=1\n        if cur>k:\n            cur=1\n        elif cur==k:\n            break\n    print(score)\n"}, "2614": {"problem_id": 2614, "answer": "from collections import deque\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[a[i]] = i\n    ans = 0\n    for i in range(n):\n        if d.get(a[i])!= i:\n            ans += 1\n        else:\n            ans += abs(d.get(a[i]) - i)\n    print(ans)"}, "2615": {"problem_id": 2615, "answer": "import sys\nreadline = sys.stdin.readline\n\nT = int(readline())\nans = []\nfor _ in range(T):\n    n = int(readline())\n    ans.append(n)\n\nprint('\\n'.join(map(str, ans)))"}, "2616": {"problem_id": 2616, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    ans=[]\n    for i in range(n):\n        ans.append(a[i])\n    \n    d=dict()\n    d[0]=0\n    c=0\n    for i in range(1,n):\n        if d.get(i)==0:\n            d[i]=1\n            c+=1\n        else:\n            d[i]+=1\n            c+=d[i]\n            \n    if c>ans[0]:\n        print(\"First\")\n    elif c==ans[0]:\n        print(\"Second\")\n    else:\n        print(\"Second\")"}, "2617": {"problem_id": 2617, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    n = int(readline())\n    print(n//2)\n    print(*(range(2,max(n+1,n))),sep='\\n')"}, "2618": {"problem_id": 2618, "answer": ""}, "2619": {"problem_id": 2619, "answer": "import sys\ninput = sys.stdin.readline\nn, q, c = map(int, input().split())\na = [tuple(map(int, input().split())) for i in range(n)]\na.sort()\nb = [tuple(map(int, input().split())) for i in range(q)]\nb.sort()\ncnt = 0\nl = []\nr = []\nfor i in range(n):\n    l.append([a[i][0], a[i][1], c])\n    r.append([a[i][0], a[i][1] + 1, c])\n    cnt += 1\nl.sort()\nr.sort()\nans = 0\nfor i in range(q):\n    t, x1, y1, x2, y2 = map(int, input().split())\n    if t == 0:\n        print(max(x1, x2) + 1)\n    elif t == 1:\n        print(max(x1, x2) + c)\n    else:\n        print(max(x1, x2) + c - a[i][2])"}, "2620": {"problem_id": 2620, "answer": "import sys\ninput = sys.stdin.readline\nn, q = list(map(int, input().split()))\nR = [i for i in range(1, n + 1)]\nR.append(1)\nS = [0] * (n + 1)\nfor i in range(n):\n    S[i + 1] = i + 1\n    for j in range(i + 2, n + 1):\n        S[j] = min(S[j], S[i] + j)\nans = [0] * (n + 1)\nfor _ in range(q):\n    i, l, r = list(map(int, input().split()))\n    ans[l] = r\n    print(ans[l])\n"}, "2621": {"problem_id": 2621, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,m,k=list(map(int,input().split()))\n    a=[int(i) for i in input().split()]\n    if m==0:\n        print(\"YES\")\n    elif abs(a[0]-a[n-1])<k:\n        print(\"NO\")\n    else:\n        d=0\n        for i in range(n-1):\n            if a[i+1]-a[i]>d:\n                d=a[i+1]-a[i]\n                a.pop(i)\n        print(\"YES\")\n"}, "2622": {"problem_id": 2622, "answer": "n, m = map(int, input().split())\na = input().lower()\nb = input().lower()\nans = []\nfor i in range(n):\n    ans.append(a[i].find(b[i])+1)\nprint(max(ans), end=' ')"}, "2623": {"problem_id": 2623, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,k=list(map(int,input().split()))\n    s=input()\n    d={}\n    for i in s:\n        d[i]=1\n    ans=[]\n    for i in range(n):\n        ans.append(d[s[i]])\n    print(max(ans))\n"}, "2624": {"problem_id": 2624, "answer": "import sys\nreadline = sys.stdin.readline\nn,q = list(map(int,readline().split()))\na = list(map(int,readline().split()))\nb = [-10**5]*n\nfor i in range(q):\n    s,x = list(map(int,readline().split()))\n    if s == \"<\":\n        b[i] = x\n    else:\n        b[i] = -x\nans = []\nfor i in range(n):\n    if b[i] == 0:\n        ans.append(i)\nprint(*ans)\n"}, "2625": {"problem_id": 2625, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\nA = [int(x) for x in read().split()]\nans = []\nfor i in range(n):\n    ans.append(str(A[i]))\nprint(''.join(ans))"}, "2626": {"problem_id": 2626, "answer": "import sys\nimport math\nimport bisect\nfrom sys import stdin,stdout\nfrom math import gcd,floor,sqrt,log2,ceil,factorial,cos,sin,tau,pi\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge,heappush,heappop,nsmallest,squeleton\nfrom itertools import combinations as comb,permutations as perm\nfrom functools import reduce\nfrom fractions import Fraction\ndef input(): return stdin.readline().strip()\ndef I(): return int(input())\ndef L(): return list(map(int, input().split()))\ndef S(): return stdin.readline().strip()\ndef print_s(s): stdout.write(s+'\\n')\nmod = pow(10,23)+7\ninf = float('inf')\ndef solve():\n    for _ in range(I()):\n        n = I()\n        print(n)\n        if n<4:\n            print(0)\n        else:\n            print(sum(reduce(list.__add__,range(1,int(n**0.5)+1))))\nsolve()"}, "2627": {"problem_id": 2627, "answer": "class Solution:\n     def maximalRectangle(self, matrix):\n         \"\"\"\n         :type matrix: List[List[str]]\n         :rtype: int\n         \"\"\"\n         m, n = len(matrix), len(matrix[0])\n         dp = [0] * (n + 1)\n         for i in range(m):\n             dp[i + 1] = max(dp[i] + matrix[i][j] for j in range(n) if matrix[i][j] == '1')\n         return max(dp) * len(matrix)"}, "2628": {"problem_id": 2628, "answer": "class Solution:\n     def grayCode(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: List[int]\n         \"\"\"\n         ans = [0]\n         n = bin(n)[2:].rjust(n, \"0\")\n         for i in range(n):\n             if i == len(bin(n)[2:])-1:\n                 ans.append(n)\n         return ans"}, "2629": {"problem_id": 2629, "answer": "class Solution:\n     def generateMatrix(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: List[List[int]]\n         \"\"\"\n         dp = [[0 for _ in range(3)] for _ in range(n)]\n         for i in range(3):\n             dp[0][i] = 1\n         for i in range(1, n):\n             for j in range(3):\n                 dp[i][j] = dp[i-1][j] + dp[i][j-1]\n         return dp"}, "2630": {"problem_id": 2630, "answer": "class Solution:\n     def uniquePathsWithObstacles(self, grid):\n         \"\"\"\n         :type obstacleGrid: List[List[int]]\n         :rtype: int\n         \"\"\"\n         dp = [[0 for _ in range(len(grid[0]))] for _ in range(len(grid))]\n         dp[0] = [1] * len(grid[0])\n         for i in range(1, len(grid)):\n             for j in range(len(grid[0])):\n                 if grid[i][j] == 1:\n                     dp[i][j] = dp[i-1][j] + 1\n         return self.dfs(grid, dp, 0)\n     \n     def dfs(self, grid, dp, idx):\n         if idx == len(grid):\n             return 0\n         else:\n             m = len(grid)\n             n = len(grid[0])\n             res = 0\n             for i in range(idx, m):\n                 res += self.dfs(grid, dp, i)\n             return res\n"}, "2631": {"problem_id": 2631, "answer": "class Solution:\n     def canFinish(self, numCourses, prerequisites):\n         \"\"\"\n         :type numCourses: int\n         :type prerequisites: List[List[int]]\n         :rtype: bool\n         \"\"\"\n         self.graph = collections.defaultdict(set)\n         for i in range(numCourses):\n             self.graph[i].add(i)\n             \n         # print(self.graph)\n         visited = set()\n         q = deque([0])\n         res = []\n         while q:\n             curr = q.popleft()\n             visited.add(curr)\n             for nxt in self.graph[curr]:\n                 if nxt not in visited:\n                     q.append(nxt)\n                     res.append(nxt)\n                     \n         return len(res) == numCourses"}, "2632": {"problem_id": 2632, "answer": "class Solution:\n     def minPathSum(self, grid):\n         \"\"\"\n         :type grid: List[List[int]]\n         :rtype: int\n         \"\"\"\n         n = len(grid)\n         m = len(grid[0])\n         dp = [0] * m\n         for i in range(n):\n             dp[i] = grid[i][0]\n         for j in range(m):\n             dp[0] = min(dp[0], grid[0][j])\n         "}, "2633": {"problem_id": 2633, "answer": "class Solution:\n    def calculateMinimumHP(self, dungeon: List[List[int]]) -> int:\n        dp = [0] * len(dungeon)\n        hp = [0] * len(dungeon)\n        hp[0] = -math.inf\n        for i in range(1, len(dungeon)):\n            if dungeon[i-1][0] > 0:\n                hp[i] = dp[i-1]\n                dp[i] = dp[i-1] + dungeon[i-1][1]\n            else:\n                dp[i] = dp[i-1]\n                hp[i] = dp[i]\n        "}, "2634": {"problem_id": 2634, "answer": "class Solution:\n     def subsets(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: List[List[int]]\n         \"\"\"\n         d = {}\n         for num in nums:\n             d[num] = d.get(num, 0) + 1\n         return [i for i in list(d.values()) if i]"}, "2635": {"problem_id": 2635, "answer": "class Solution:\n     def spiralOrder(self, matrix):\n         \"\"\"\n         :type matrix: List[List[int]]\n         :rtype: List[int]\n         \"\"\"\n         if not matrix:\n             return matrix\n         m, n = len(matrix), len(matrix[0])\n         d = matrix[0][0]\n         for i in range(1, m):\n             d = matrix[i][0] + d\n         for j in range(1, n):\n             d = matrix[0][j] + d\n         res = []\n         for i in range(m):\n             res.append([d] * n)\n         for i in range(m):\n             res[i][0] = matrix[i][0]\n         for i in range(m):\n             for j in range(n):\n                 res[i][j] = matrix[i][j]\n         return res"}, "2636": {"problem_id": 2636, "answer": "class Solution:\n     def getSkyline(self, buildings):\n         \"\"\"\n         :type buildings: List[List[int]]\n         :rtype: List[List[int]]\n         \"\"\"\n         hmap = {}\n         for i in range(len(buildings)):\n             hmap[i] = buildings[i][0]\n         \n         ans = []\n         for i in range(len(buildings)):\n             ans.append([buildings[i][0], buildings[i][1]])\n         "}, "2637": {"problem_id": 2637, "answer": "class Solution:\n     def permuteUnique(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: List[List[int]]\n         \"\"\"\n         res = []\n         for i in range(1, len(nums)):\n             res.append([nums[i-1], nums[:i]])\n         return res"}, "2638": {"problem_id": 2638, "answer": "class Solution:\n     def minimumTotal(self, triangle):\n         \"\"\"\n         :type triangle: List[List[int]]\n         :rtype: int\n         \"\"\"\n         n = len(triangle)\n         if n == 1: return 0\n         dp = [[0] * n for _ in range(n)]\n         for i in range(1, n):\n             for j in range(i):\n                 if triangle[i].count(triangle[j]) > 1:\n                     dp[i][j] = triangle[i][j] + triangle[i][j+1]\n                 else:\n                     dp[i][j] = triangle[i][j] + dp[i-1][j]\n         return min(dp[-1])"}, "2639": {"problem_id": 2639, "answer": "class Solution:\n     def subsetsWithDup(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: List[List[int]]\n         \"\"\"\n         d = {}\n         for i in nums:\n             if i not in d:\n                 d[i] = []\n             d[i].append(i)\n         return [sorted(d, reverse=True)]"}, "2640": {"problem_id": 2640, "answer": "import sys\nreadline = sys.stdin.readline\nH, W = list(map(int, readline().split()))\ns = readline().strip()\nd = {}\nfor i in range(H):\n    d[s[i]] = 0\nans = 0\nfor i in range(W):\n    if s[i] == \"#\":\n        continue\n    c = s[i]\n    if c == \".\":\n        continue\n    d[c] += 1\n    ans += d[c]\nprint(ans)"}, "2641": {"problem_id": 2641, "answer": "import sys\ninput = sys.stdin.readline\n\nn, q = map(int, input().split())\nc = list(map(int, input().split()))\nl = sorted(range(n), reverse=True)\nr = sorted(range(n), reverse=True)\n\nans = [0]*n\nfor i in range(n-1, -1, -1):\n    ans[l[i]] = ans[l[i]] + c[i]\n    ans[r[i]] = ans[r[i]] + min(c[i], n-c[i])\n\nprint(*ans, sep='\\n')"}, "2642": {"problem_id": 2642, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict, deque\nMOD = 10 ** 9 + 7\n\nN = int(input())\nA = [int(x) for x in input().split()]\n\ns = defaultdict(list)\nfor a, b in A:\n  s[a].append(b)\n  s[b].append(a)\n\ncount = 1\ndic = deque([])\nv = 0\nfor i in range(1, N + 1):\n  v += len(s[i])\n  dic.appendleft((i, v))\n\ncount *= (v) % MOD\nprint(count % MOD)"}, "2643": {"problem_id": 2643, "answer": "import sys\nreadline = sys.stdin.readline\n\nk, q = list(map(int, readline().split()))\nd = list(map(int, readline().split()))\nn, m = list(map(int, readline().split()))\nMOD = 10**9+7\n\ndef rabin_solomon_decomp(a):\n    res = 1\n    a.sort()\n    for i in range(1, len(a)):\n        res *= a[i]\n        res %= MOD\n    return res\n\ndef solve(a, b):\n    if a[0] == b[0]:\n        return 1\n    elif a[0] > b[0]:\n        return rabin_solomon_decomp(a) + solve(b, a[1:])\n    else:\n        return rabin_solomon_decomp(b) + solve(a, b[1:])\n\nans = []\nfor _ in range(q):\n    a, b = list(map(int, readline().split()))\n    ans.append(solve(a, b))\nprint(*ans, sep='\\n')\n"}, "2644": {"problem_id": 2644, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    P = list(map(int, input().split()))\n    stack = [0]\n    visited = set()\n    ans = []\n    for i in range(1, N + 1):\n        visited.add(i)\n        stack.append(i)\n        while stack:\n            p = stack.pop()\n            for q in P[p:]:\n                if q not in visited:\n                    visited.add(q)\n                    ans.append(q)\n                    stack.append(q)\n                elif q == p:\n                    break\n        print(ans)"}, "2645": {"problem_id": 2645, "answer": "s = input()\nn = len(s)\ns = s.split('g')\ns = [i for i in s]\ns = sorted(s, reverse=True)\np = s[n]\nr = s[0]\n\nif n%2:\n    print(0)\nelse:\n    m = 0\n    for i in range(1, n):\n        if s[i]==p:\n            m+=1\n        else:\n            if m>r-s[i]:\n                r = m\n            elif m<r-s[i]:\n                print(m)\n                r = m\n"}, "2646": {"problem_id": 2646, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nAB = [list(map(int, input().split())) for _ in range(N)]\ns = 0\nfor a, b in AB:\n    s += min(a, b)\n    s -= min(a, b)\n    s %= 2\n\nif s == 0:\n    print(\"No\")\n    return\n\nans = []\nfor i in range(N):\n    ans.append(str(i+1) if AB[i][1] == 2 else str(i+1) + \" \\n\" + str(AB[i][0]))\n\nprint(\"Yes\")\nfor i in ANS:\n    print(i, end=\"\")"}, "2647": {"problem_id": 2647, "answer": "import numpy as np\nh,w = map(int, input().split())\nN = h*w\ns = np.zeros((N,N),dtype=str)\nfor i in range(N):\n    s[i,i] = chr(ord(\"s\")+i)\n    \ns = np.array(s)\nmx = max(s)\nans = mx\nfor i in range(1,mx+1):\n    if s[i,mx] == '#':\n        continue\n    else:\n        ans = max(ans, int(s[i,mx]))\nprint(ans)"}, "2648": {"problem_id": 2648, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nN = int(input())\nA = list(map(int, input().split()))\ns = set()\nfor i in range(N):\n    s.add(A[i])\n    s.add(min(A[i], A[i+1]))\nans = 0\nfor i in range(N):\n    if s & A[i]:\n        ans += 3\n    s.remove(A[i])\nprint(ans)"}, "2649": {"problem_id": 2649, "answer": "from operator import itemgetter\nn=int(input())\nl=[list(map(int,input().split())) for i in range(n)]\nl.sort()\ndef main():\n    x,y=l[0]\n    for i in range(1,n):\n        x,y=l[i]\n        mx=abs(x-y)\n        if mx>2*max(x,y):\n            mx=2*max(x,y)\n            print(mx)\n        elif mx==2*max(x,y):\n            print(mx)\n        else:\n            continue\n    print(mx)\nmain()"}, "2650": {"problem_id": 2650, "answer": "import sys\ninput = sys.stdin.readline\nN,Q = map(int,input().split())\nadj = [[] for _ in range(N)]\nfor _ in range(Q):\n    a,b = map(int,input().split())\n    adj[a-1].append(b-1)\n    adj[b-1].append(a-1)\n\nedges = [[] for _ in range(N)]\nfor i in range(N):\n    edges[i].append(i)\n\nans = []\nfor i in range(len(adj)):\n    adj[i].sort(key = lambda x: -x[1])\n    for j in range(1,N):\n        b = adj[j-1][0]\n        c = adj[j-1][1]\n        ans.append(c*b + int(edges[j][0]))\n\nprint(*ans, sep='\\n')"}, "2651": {"problem_id": 2651, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\nn, m = map(int, input().split())\nx = [int(i) for i in input().split()]\ny = [int(i) for i in input().split()]\n\nans = 0\n\nadj = [[] for _ in range(n+1)]\nadj[0].append(0)\nadj[1].append(0)\nadj[2].append(0)\nfor i in range(1, n+1):\n    adj[i].append(i)\n    adj[i].append(adj[i-1].index(i))\n\ndp = [0]*(m+1)\ndp[0] = x[0]\ndp[1] = x[1]\ndp[2] = x[2]\ndpr = [0]*(m+1)\ndpr[0] = dp[0]\ndpr[1] = dp[1]\ndpr[2] = dp[2]\n\nfor i in range(m):\n    for j in range(n):\n        if i!=j:\n            dpr[j+1] += dpr[j]*y[i]\n            dpr[j+1] %= MOD\nprint(dp[m])"}, "2652": {"problem_id": 2652, "answer": "import heapq\nn=int(input())\nans=0\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    ans+=min(abs(x-y),0)\nprint(ans)"}, "2653": {"problem_id": 2653, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, Q = list(map(int, readline().split()))\nadj = [[] for _ in range(N)]\nfor _ in range(N-1):\n    a, b = list(map(int, readline().split()))\n    adj[a].append(b)\n    adj[b].append(a)\np = [0] * N\nfor _ in range(Q):\n    p_i, x_i = list(map(int, readline().split()))\n    p[p_i] += x_i\n    \nans = []\nfor i in range(N):\n    ans.append(p[i])\nprint(*ans, sep=' ')"}, "2654": {"problem_id": 2654, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N = int(readline())\n    A = list(map(int, readline().split()))\n    A.sort()\n    B = sorted(A)\n    cnt = 0\n    ans = 0\n    for i in range(N):\n        if B[i]<A[i]:\n            continue\n        elif B[i]==A[i]:\n            cnt+=1\n        else:\n            ans+=cnt*(cnt-1)//2\n            cnt=0\n    print(ans)"}, "2655": {"problem_id": 2655, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nMOD = 10**9+7\n\ndef read_int():\n    return int(input())\ndef read_ints():\n    return list(map(int, input().split()))\ndef read_str():\n    return input().strip()\n\n\nn = read_int()\na = read_ints()\nans = 0\nfor i in range(n-1):\n    ans += a[i] * (i+1)\nprint(ans)"}, "2656": {"problem_id": 2656, "answer": "from collections import defaultdict\nmod = 10**9 + 7\nINF = 10**20\n\ndef read():\n    return int(input())\n\n\ndef write(s, mod):\n    if s.count('a') == 0:\n        return 0\n    return (s[:s.index('a')] + s.pop(0) * pow(2, mod-1, mod)) % mod\n\n\ndef solve(k, s):\n    return (read() - k) * read() % mod\n\n\nk, s = read()\nprint(solve(k, s))"}, "2657": {"problem_id": 2657, "answer": "import sys\ninput = sys.stdin.readline\n\ndef f(x):\n    return x.count(1)\n\nn,*a = map(int,input().split())\nd = {}\nfor i in range(n):\n    d[a[i]] = f(a[i])\n\nans = []\nfor i in range(n):\n    ans.append(d[a[i]])\n\nprint(' '.join(map(str,ans)))"}, "2658": {"problem_id": 2658, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, K = map(int, readline().split())\nAns = list(map(int, readline().split()))\n\ndef dist(a, b):\n    return abs(b-a)\n\nA = dist(1, Ans[0])\nprint(A+K)"}, "2659": {"problem_id": 2659, "answer": "import sys\ninput = sys.stdin.readline\n\ndef calc(n):\n    a = 1\n    b = n\n    while b > 0:\n        a, b = b, a + b\n    return a\n\ndef solve():\n    k = int(input())\n    l = []\n    for i in range(1, k + 1):\n        l.append(calc(i))\n    print(*l[::-1], sep='\\n')\n\nsolve()"}, "2660": {"problem_id": 2660, "answer": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nfor _ in range(Q):\n    a, b = list(map(int, input().split()))\n    print(a, end=\" \")\n    print(min(a, b))"}, "2661": {"problem_id": 2661, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nS = list(map(int, input().split()))\nT = list(map(int, input().split()))\nU = list(map(int, input().split()))\nV = list(map(int, input().split()))\n\nans = []\nfor i in range(N):\n    ans.append(0)\n\nfor i in range(N):\n    for j in range(N):\n        if S[i] == 0:\n            ans[i][j] = U[j]\n        elif S[i] == 1:\n            ans[i][j] = V[j]\n        else:\n            ans[i][j] = (ans[i][j] << 1) | 1\n\nif ans[0][0] == 0:\n    print(-1)\nelse:\n    print(*ans[0], sep=\"\\n\")"}, "2662": {"problem_id": 2662, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nINF = 10**18\neps = 1.0e-20\n\nN = int(input())\nA = list(map(int, input().split()))\n\nans = INF\nfor a in A:\n    if a - ans < ans: ans = a - ans\n    elif a - ans == ans:\n        ans = a - ans\nprint(ans)"}, "2663": {"problem_id": 2663, "answer": "import sys\nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n  s+=a[i]\nl=[]\nwhile s!=0:\n  l.append(s)\n  s-=1\nprint(*l)\n"}, "2664": {"problem_id": 2664, "answer": ""}, "2665": {"problem_id": 2665, "answer": "import sys\nimport math\n \ndef main():\n n = int(sys.stdin.readline())\n points = []\n for i in range(n):\n  x, y = map(int, sys.stdin.readline().split())\n  points.append((x,y))\n points.sort()\n minv = 10000000000000000\n while points:\n  d = 10000000000000000\n  for i in range(len(points)):\n   d = min(d, points[i][0] - points[i][1])\n  minv = min(d, minv)\n  points.pop(i)\n print(minv)\nmain()"}, "2666": {"problem_id": 2666, "answer": "# cook your dish here\nfrom sys import stdin,stdout\ninput=stdin.readline\nn,k=map(int,input().split())\nl=[]\nfor i in range(n):\n    a=int(input())\n    l.append(a)\nl.sort()\ni=0\nwhile i<k:\n    j=i+1\n    while j<n:\n        if l[j]<l[i]:\n            i=j\n        elif l[j]>l[i]:\n            j+=1\n        else:\n            break\n    print(l[i])"}, "2667": {"problem_id": 2667, "answer": "n=int(input())\nl=list(map(int,input().split()))\nans=sum(l)\nif(ans%2==0):\n print(\"YES\")\n else:\n print(\"NO\")"}, "2668": {"problem_id": 2668, "answer": "from sys import stdin,stdout\nfrom math import *\nfrom collections import defaultdict as dd,OrderedDict as odict\nodict[int] = lambda x: 1 if x>0 else -1\ninp = stdin.readline().rstrip()\njacketCost,sockCost,money=inp.split(',')\nmoney-=int(jacketCost)\nsockCost-=int(sockCost)\nif money>=2:\n print('Lucky Chef')\n else:\n print('Unlucky Chef')"}, "2669": {"problem_id": 2669, "answer": "# cook your dish here\nn=int(input())\nt=list(map(int,input().split()))\nl=[]\nfor i in range(0,n):\n    l.append(t[i])\nl.sort()\nans=[]\nfor i in range(0,n):\n    ans.append(l[i][1])\nprint(ans.index(max(ans)))"}, "2670": {"problem_id": 2670, "answer": "# cook your dish here\nt=int(input())\nfor _ in range(t):\n    s1,s2=input().split()\n    a=int(s1)\n    b=int(s2)\n    x=a+b\n    if x.bit_length()==1:\n        print(0)\n    else:\n        l=len(x)\n        if l%2==0:\n            print(l//2)\n        else:\n            print(l//2+1)\n"}, "2671": {"problem_id": 2671, "answer": "from collections import deque\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nx=list(map(int,input().split()))\nans=[]\nd=deque()\nfor i in range(m):\n ans.append(a[i])\n d.append(x[i])\nwhile d:\n y=d.popleft()\n ans.append(y)\n for i in range(y):\n  d.append(x[i])\nprint(*ans)\n"}, "2672": {"problem_id": 2672, "answer": "def pow_mod(a,b,m):\r\n\tif(b==0):\r\n\t\treturn 1\r\n\telif(b==1):\r\n\t\treturn a\r\n\telif(b==2):\r\n\t\treturn a*a\r\n\telse:\r\n\t\tr=1\r\n\t\ts=1\r\n\t\tfor i in range(3,int(b**.5)+1):\r\n\t\t\tr=(r*a)%m\r\n\t\t\ts=(s*a)%m\r\n\t\treturn r*s\r\n\r\nx=int(input())\r\nprint(pow_mod(3,2,1000000007))"}, "2673": {"problem_id": 2673, "answer": "s = input()\nn = len(s)\nans = 9999999999\nfor i in range(n):\n ans = min(ans, 9999999999 - s[i])\nprint(ans)"}, "2674": {"problem_id": 2674, "answer": "# cook your dish here\ntry:\n    p=int(input())\n    if p<12:\n        print(\"Inclusive\")\n    else:\n        print(\"Exclusive\")\nexcept EOFError:\n    pass"}, "2675": {"problem_id": 2675, "answer": "n,m=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=0\nfor i in range(n):\n    if a[i]!=i:\n        c+=1\nfor i in range(m):\n    if b[i]!=i:\n        c+=1\nprint(c)"}, "2676": {"problem_id": 2676, "answer": "# cook your dish here\nn = int(input())\ns = input()\nm = int(input())\nc = 0\nfor i in range(n):\n    if s[i]==\"a\":\n        c+=1\n    elif s[i]==\"b\":\n        c+=2\n    else:\n        c+=1\nprint(c)"}, "2677": {"problem_id": 2677, "answer": "import string\ns = string.ascii_lowercase\na = s[:4]\nb = s[5:]\nc = []\nfor i in range(len(a)):\n    if a[i] not in b:\n        c.append(a[i])\n    else:\n        c.append(b.index(a[i]))\nprint([\"-1\" if any(c) else \"GOOD\" for c in c])"}, "2678": {"problem_id": 2678, "answer": "# cook your dish here\ndef solve(a,b):\n    l=len(a)\n    r=len(b)\n    if l<r:\n        return 0\n    elif l==r:\n        return 1\n    else:\n        a.sort()\n        b.sort()\n        return 1+solve(a[l-1],b[r-1])\nn=int(input())\na=list(map(int,input().split()))\nprint(solve(a,b))"}, "2679": {"problem_id": 2679, "answer": "# cook your dish here\nfrom collections import Counter\nn=int(input())\na=list(map(int,input().split()))\nc=Counter(a)\nans=0\nif n==0:\n    print(0)\n    return\nelif n==1:\n    print(c['-1'])\n    return\nelse:\n    for i in range(1,n):\n        ans=max(ans,c[''.join(map(str,a[i-1]))]+c[''.join(map(str,a[i]))])\n    print(ans)"}, "2680": {"problem_id": 2680, "answer": "import sys\r\nimport math\r\ndef inp(): return sys.stdin.readline().strip()\r\ndef inpl(): return list(map(int,sys.stdin.readline().strip().split()))\r\ndef insr(): return list(map(int,sys.stdin.readline().strip().split()))\r\ndef invr(): return list(map(float,sys.stdin.readline().strip().split()))\r\nmod=10**9+7\r\nINF=float('INF')\r\neps=1e-8\r\nsx=inp()\r\nsy=inp()\r\nif(len(sy)==0):\r\n\tprint(0)\r\n\treturn\r\nfor i in range(1,len(sy)):\r\n\tif(sy[i]-sx>eps):\r\n\t\tprint(i)\r\n\t\treturn\r\nprint(abs(sy[-1]-sx))"}, "2681": {"problem_id": 2681, "answer": "# cook your dish here\na = int(input())\nb = int(input())\nc = input()\noper = c.split(\" \")\noper1 = oper[0]\noper2 = oper[1]\nprint(oper1 * oper2)"}, "2682": {"problem_id": 2682, "answer": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\n\nfor _ in range(Q):\n    N, K = map(int, input().split())\n    print(N + K - 2)"}, "2683": {"problem_id": 2683, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n,k=list(map(int,input().split()))\n a=[0]*n\n b=[0]*n\n for i in range(n):\n  a[i]=input()\n  b[i]=0\n if k==1:\n  print('YES')\n else:\n  print('NO')"}, "2684": {"problem_id": 2684, "answer": "n=int(input())\ns=input()\nl=[]\nfor i in range(n):\n    l.append(s[i])\n    \nif(len(l)==0):\n    print(n)\n    print(l[0])\n    \nelse:\n    i=0\n    j=n-1\n    while(i<j):\n        if(l[i]==l[j]):\n            i+=1\n        elif(l[i]!=l[j]):\n            j-=1\n        else:\n            print(i+1)\n            print(j)\n            break"}, "2685": {"problem_id": 2685, "answer": "s=input()\r\na,b=[int(i) for i in s.split()]\r\nprint(min(a*b,a))"}, "2686": {"problem_id": 2686, "answer": ""}, "2687": {"problem_id": 2687, "answer": "import sys\ndef II():\n return int(input())\ndef MI():\n return map(int, input().split())\ndef LI():\n return list(map(int, input().split()))\ndef LI2():\n return list(map(int, input().split()))\ndef LLI(rows_number):\n return [LI() for _ in range(rows_number)]\ndef SR(rows_number):\n return [list(map(int, input().split())) for _ in range(rows_number)]\ndef SRLI(rows_number):\n return SR(rows_number)\nK = II()\nt = II()\nm = 10**9+7\nn = II()\nfor i in range(1, K+1):\n k = II()\n if k%2!=0:\n  print(0)\n else:\n  count = 0\n  for i in range(2*K-i):\n   # i is the winner\n   knights = SRLI(i)\n   knights = knights[:2*K-i]\n   knights = knights[2*K-i:]\n   knights = knights.count(i)\n   count += knights\n  print(count%m)"}, "2688": {"problem_id": 2688, "answer": "import sys\r\ninput = sys.stdin.readline\r\n \r\nn=int(input())\r\na=list(map(int,input().split()))\r\nc=[]\r\nfor i in range(1,n+1):\r\n    c.append(a[i-1])\r\n    \r\n#print(c)\r\nans=[]\r\nfor i in range(n):\r\n    if c[i]==1:\r\n        ans.append(i+1)\r\n        \r\nprint(len(ans))\r\nfor i in range(len(ans)):\r\n    print(ans[i])"}, "2689": {"problem_id": 2689, "answer": "import re\ns=input()\nif s.startswith(re.findall(\"[+-]?\\+?\\d*\\+?\\d*$\",s)):\n    print(\"Return\")\nelse:\n    print(\"Continue\")"}, "2690": {"problem_id": 2690, "answer": "s=input()\r\nn=len(s)\r\na=abs(s[0]-s[n-1])\r\nfor i in range(1,n):\r\n    if s[i]==s[i-1]:\r\n        a+=1\r\n    else:\r\n        a=max(a,abs(s[i]-s[i-1]))\r\nprint(a)"}, "2691": {"problem_id": 2691, "answer": "# cook your dish here\ntry:\n    n,p=input().split()\n    n=int(n)\n    p=int(p)\n    s=input()\n    cost=0\n    for i in s:\n        if i=='d':\n            cost+=1\n        elif i=='u':\n            cost-=1\n    print(cost)\nexcept:\n    pass"}, "2692": {"problem_id": 2692, "answer": "# cook your dish here\nt=int(input())\nfor _ in range(t):\n    n,b=map(int,input().split())\n    print(n//b)"}, "2693": {"problem_id": 2693, "answer": "s,p,k=list(map(int,input().split()))\r\nif k==1:\r\n    print(\"NO\")\r\nelif k==2:\r\n    print(\"NO\")\r\nelse:\r\n    sol=[]\r\n    i=0\r\n    while i<k:\r\n        sol.append(s)\r\n        s=s%(pow(2,k-1))\r\n        i+=1\r\n    print(\"%s\"%sol[0])\r\n"}, "2694": {"problem_id": 2694, "answer": ""}, "2695": {"problem_id": 2695, "answer": "s = input()\nn = int(input())\narr = input()\ncnt = 0\nfor i in range(n):\n    if s[i]!=arr[i]:\n        cnt+=1\nprint(cnt)"}, "2696": {"problem_id": 2696, "answer": "from sys import stdin,stdout\r\ninput=stdin.readline\r\nprint=stdout.write\r\ninn=lambda:int(input())\r\nout=lambda:stdout.write(inn())"}, "2697": {"problem_id": 2697, "answer": "n=int(input())\nprint(n*(n+1)*(2*n+1)//6)"}, "2698": {"problem_id": 2698, "answer": "# cook your dish here\nM = [[0]*101 for _ in range(301)]\nfor i in range(1,301):\n    M[i][0] = i\n    M[i][1] = 1\n\nfor _ in range(int(input())):\n    a,b = map(int,input().split())\n    ans = 0\n    for i in range(2,M[a][1]+1):\n        ans += M[a][i]\n        a = M[a][i]\n    print(ans)"}, "2699": {"problem_id": 2699, "answer": "# cook your dish here\ntry:\n from sys import stdin, stdout\n input=stdin.readline\n for _ in range(int(input())):\n  n=int(input())\n  print('1 4 10'*n,'2 5 11'*n,'4 10 22'*n,'3 6 12'*n,'4 10 22'*n,'23 4 10'*n,'46 4 10'*n,'47 4 10'*n,'94 4 10'*n)\nexcept:pass"}, "2700": {"problem_id": 2700, "answer": "# cook your dish here\nimport math\nt=int(input())\nfor _ in range(t):\n    a,b,c,d=list(map(int,input().split()))\n    x=a\n    y=b\n    z=c\n    w=d\n    if x%2==0:\n        x//=2\n    elif x%2==1:\n        x//=2\n    else:\n        x//=2\n    print(math.ceil(w/x))\n"}, "2701": {"problem_id": 2701, "answer": "n,k = map(int,input().split())\na = list(map(int,input().split()))\nd = {}\nfor i in a:\n    d[i] = 0\nc = 0\nfor i in range(n):\n    if a[i] not in d:\n        c += 1\n        d[a[i]] += 1\nif c == k:\n    print(0)\nelse:\n    print(abs(k-c))"}, "2702": {"problem_id": 2702, "answer": "# cook your dish here\ntry:\n    n=int(input())\n    statement=[0]*n\n    for i in range(n):\n        statement[i]=tuple(map(str,input().split()))\n    print(n-max(statement.values()))\nexcept:\n    pass"}, "2703": {"problem_id": 2703, "answer": "from sys import stdin,stdout\r\ninput = stdin.readline\r\nn,q=map(int,input().split())\r\na=sorted(map(int,input().split()))\r\nans=[]\r\nfor i in range(n):\r\n    ans.append(a[i])\r\n    if i==n-1:\r\n        break\r\nx=int(input())\r\nfor i in range(q):\r\n    x-=int(input())\r\n    ans[i]=max(ans[i],x)\r\nprint(ans[n-1])"}, "2704": {"problem_id": 2704, "answer": "import sys\ndef __starting_point():\n n, q = list(map(int,sys.stdin.readline().split()))\n a = list(map(int,sys.stdin.readline().split()))\n t = 1<<63\n for i in range(q):\n  t1 = int(sys.stdin.readline())\n  if t1&1:\n   print(\"No\")\n   return\n  elif t1>>1:\n   print(\"Yes\")\n   t>>=1\n  else:\n   print(\"No\")\n__starting_point()"}, "2705": {"problem_id": 2705, "answer": "from sys import stdin,stdout\r\ninput=stdin.readline\r\nn,m,k=list(map(int,input().split()))\r\narr=list(map(int,input().split()))\r\narr.sort()\r\nprint(arr.count(1))"}, "2706": {"problem_id": 2706, "answer": "n = int(input())\nk = int(input())\nif k == 0:\n    print(min(n))\nelse:\n    mini = n\n    for i in range(n):\n        mini = min(mini,n-i)\n    print(mini)"}, "2707": {"problem_id": 2707, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nm = 10**9+7\nans = 0\nfor i in a:\n if i<k:\n  ans+=m\n else:\n  ans+=(m-1)\nans%=(m+1)\nprint(ans)\n"}, "2708": {"problem_id": 2708, "answer": "import math\nn, k = list(map(int, input().split()))\nwhile k:\n    num = n//(10**(len(n)-1) if n[-1]!= 0 else 0)\n    n = math.floor(num)\n    n *= 10\n    k-=1\nprint(n)\n"}, "2709": {"problem_id": 2709, "answer": "# cook your dish here\ntry:\n    n, t = list(map(int, input().split()))\n    a = list(map(int, input().split()))\nexcept:\n    print('Out')\n    return\n\nb = []\nc = []\nfor i in range(0, n):\n    if a[i] == a[i+1]:\n        b.append(a[i])\n    else:\n        c.append(a[i])\n\nd = 100000000007\ne = 'a'\n\nfor i in range(0, n):\n    if a[i] == d:\n        e = 'b'\n    elif a[i] == e:\n        e = 'c'\n    elif a[i] == d+1 and a[i+1] == d:\n        e = 'd'\n    elif a[i] == d+1 and a[i+1] == e:\n        e = 'e'\n    elif a[i] == d+2 and a[i+1] == d:\n        e = '1'\n    elif a[i] == d+2 and a[i+1] == e:\n        e = '2'\n    elif a[i] == d+3 and a[i+1] == d:\n        e = '3'\n    elif a[i] == d+3 and a[i+1] == e:\n        e = '4'\n    elif a[i] == d+4 and a[i+1] == d:\n        e = '5'\n    elif a[i] == d+4 and a[i+1] == e:\n        e = '6'\n    elif a[i] == d+5 and a[i+1] == d:\n        e = '7'\n    print(e)\n"}, "2710": {"problem_id": 2710, "answer": "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\np=' '.join(input().split())\n\ndef main():\n    if len(set(a))!=n or sum(a)%m!=0:\n        print('NO')\n        return\n    \n    ans=[]\n    for i in range(n):\n        ans.append([0]*m)\n        for j in range(n):\n            if i==j:continue\n            ans[i][j]=a[i]\n            ans[i][j]+=b[j]\n            \n    for i in range(n):\n        for j in range(m):\n            ans[i][j]=p[b[i]][p[b[i]].index(i)]\n            \n    print('YES')\n    for i in ans:\n        print(' '.join(map(str,i)))\nmain()\n"}, "2711": {"problem_id": 2711, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\ns = [None] * n\nfor i in range(n):\n    s[i] = list(map(str, readline().split()))[0]\n    \ndictionary = {}\nfor i in range(1, n + 1):\n    dictionary[s[i]] = dictionary.get(s[i], []) + [s[i]]\nalphabet = ''.join(dictionary.values())\n\nif dictionary.get(alphabet, []):\n    print('IMPOSSIBLE')\nelse:\n    print(alphabet)"}, "2712": {"problem_id": 2712, "answer": "import math\nt = int(input())\nfor _ in range(t):\n    a, b, c = map(int, input().split())\n    if a!= b:\n        print(math.sqrt(a * b) + c - 2)\n    else:\n        print(math.sqrt(a * b) + c"}, "2713": {"problem_id": 2713, "answer": "import sys\r\ninput=sys.stdin.readline\r\n\r\ns=int(input())\r\na=[]\r\nfor i in range(s):\r\n    n=int(input())\r\n    a.append(n)\r\n    \r\n    if n%3==1:\r\n        if n==1:\r\n            a.append(1)\r\n        elif n==2:\r\n            a.append(2)\r\n        else:\r\n            a.append(3)\r\n    else:\r\n        if n==1:\r\n            a.append(1)\r\n        elif n==2:\r\n            a.append(2)\r\n        else:\r\n            a.append(3)\r\n    "}, "2714": {"problem_id": 2714, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 998244353\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    g = [[] for i in range(n)]\n    for i in range(m):\n        u, v = map(int, input().split())\n        g[u-1].append(v-1)\n        g[v-1].append(u-1)\n    ans = 1\n    for i in range(n):\n        ans *= 3 - 3*i\n        ans %= MOD\n    print(ans)"}, "2715": {"problem_id": 2715, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")"}, "2716": {"problem_id": 2716, "answer": "import sys\ninput = sys.stdin.readline\n\ndef readint():\n    return int(input())\n\n\ndef readints():\n    return list(map(int, input().split()))\n\n\nt = readint()\nn = sum(t)//2\narr = list(readints())\narr.sort()\nans = arr[7]\nmnd = arr[8]\nif n & 1:\n    print(-1)\nelse:\n    print(ans)\n"}, "2717": {"problem_id": 2717, "answer": "from collections import deque\nn=int(input())\ns=input()\na=\"ABC\"\nb=\"BABABA\"\nc=\"ACACAC\"\nfor i in range(n):\n    if s[i]==a:\n        s[i]=b\n    elif s[i]==b:\n        s[i]=c\n    elif s[i]==c:\n        s[i]=a\nprint(n-max(s.count(a),s.count(b,c)))"}, "2718": {"problem_id": 2718, "answer": "import sys\ninput = sys.stdin.readline\nM = 10**9+7\nN = 10**9+10\nns = lambda:list(map(int,input().split()))\nnl = lambda:list(map(int,input().split()))\neps = 10**18+73\ndef main():\n    N, M = ns()\n    stack1, stack2 = nl()\n    if N*M > stack1[0] + stack2[0]:\n        print(\"win\")\n    else:\n        print(\"lose\")\n        \nmain()\n"}, "2719": {"problem_id": 2719, "answer": ""}, "2720": {"problem_id": 2720, "answer": "import numpy as np\nR,C=list(map(int,input().split()))\nM=[]\nfor _ in range(R):\n    M.append(input())\nM.sort()\nans=0\nfor i in range(len(M)):\n    if M[i][0]=='/' and M[i][-1]=='\\'':\n        ans+=1\n    elif M[i][0]=='\\\\':\n        if M[i][-1]=='\\\\':\n            ans+=2\n        else:\n            ans+=1\n        M[i]=np.array([0]*C)\n        M[i][0]=M[i][0]%2\n    elif M[i][0]=='\\\\':\n        if M[i][-1]=='/':\n            ans+=1\n        else:\n            ans+=2\n        M[i]=np.array([0]*C)\n        M[i][0]=M[i][0]%2\nprint(ans)"}, "2721": {"problem_id": 2721, "answer": "from math import *\nl = []\ndef lin():\n    return [int(i) for i in input().split()]\ndef lin2():\n    return [int(i) for i in input().split()]\ndef lin3():\n    return [int(i) for i in input().split()]\ndef lin4():\n    return [int(i) for i in input().split()]\ndef lin5():\n    return [int(i) for i in input().split()]\ndef lin6():\n    return [int(i) for i in input().split()]\ndef lin7():\n    return [int(i) for i in input().split()]\ndef lin8():\n    return [int(i) for i in input().split()]\ndef lin9():\n    return [int(i) for i in input().split()]\ndef lin10():\n    return [int(i) for i in input().split()]\ndef lin11():\n    return [int(i) for i in input().split()]\ndef lin12():\n    return [int(i) for i in input().split()]\ndef lin13():\n    return [int(i) for i in input().split()]\ndef lin14():\n    return [int(i) for i in input().split()]\ndef lin15():\n    return [int(i) for i in input().split()]\ndef lin16():\n    return [int(i) for i in input().split()]\ndef lin17():\n    return [int(i) for i in input().split()]\ndef lin18():\n    return [int(i) for i in input().split()]\ndef lin19():\n    return [int(i) for i in input().split()]\ndef lin20():\n    return [int(i) for i in input().split()]\ndef lin21():\n    return [int(i) for i in input().split()]\ndef lin22():\n    return [int(i) for i in input().split()]\ndef lin23():\n    return [int(i) for i in input().split()]\ndef lin24():\n    return [int(i) for i in input().split()]\ndef lin25():\n    return [int(i) for i in input().split()]\ndef lin26():\n    return [int(i) for i in input().split()]\ndef lin27():\n    return [int(i) for i in input().split()]\ndef lin28():\n    return [int(i) for i in input().split()]\ndef lin29():\n    return [int(i) for i in input().split()]\ndef lin30():\n    return [int(i) for i in input().split()]\ndef lin31():\n    return [int(i) for i in input().split()]\ndef lin32():\n    return [int(i) for i in input().split()]\ndef lin33():\n    return [int(i) for i in input().split()]\ndef lin34():\n    return [int(i) for i in input().split()]\ndef lin35():\n    return [int(i) for i in input().split()]\ndef lin36():\n    return [int(i) for i in input().split()]\ndef lin37():\n    return [int(i) for i in input().split()]\ndef lin38():\n    return [int(i) for i in input().split()]\ndef lin39():\n    return [int(i) for i in input().split()]\ndef lin40():\n    return [int(i) for i in input().split()]\ndef lin41():\n    return [int(i) for i in input().split()]\ndef lin42():\n    return [int(i) for i in input().split()]\ndef lin43():\n    return [int(i) for i in input().split()]\ndef lin44():\n    return [int(i) for i in input().split()]\ndef lin45():"}, "2722": {"problem_id": 2722, "answer": "import copy\nt = copy.deepcopy(input().split(' '))\nt = list(map(int, t[1:]))\ndiamond = [0]*8\nfor i in range(1, len(t), 2):\n    diamond[i] += 1\nx = []\ny = []\nfor i in range(8):\n    x.append(t[i][0])\n    y.append(t[i][1])\n\ndef f(t):\n    if t[0] == 'F':\n        t = t[1:]\n    elif t[0] == 'R':\n        t[1] += 1\n        f(t[1:])\n    elif t[0] == 'L':\n        t[1] -= 1\n        f(t[1:])\n    elif t[0] == 'X':\n        t[1] *= -1\n        f(t[1:])\n    elif t[0] == 'D':\n        t[1] += 1\n        f(t[1:])\n\ndef g(t):\n    if t[0] == 'F':\n        t = t[1:]\n    elif t[0] == 'R':\n        t[1] += 1\n        g(t[1:])\n    elif t[0] == 'L':\n        t[1] -= 1\n        g(t[1:])\n    elif t[0] == 'X':\n        t[1] *= -1\n        g(t[1:])\n    elif t[0] == 'D':\n        t[1] += 1\n        g(t[1:])\n\nexec(f(t))\nexec(g(t))\nprint(*t, sep='\\n')\n"}, "2723": {"problem_id": 2723, "answer": "import sys, math\n\ndef calc(s):\n    n = len(s)\n    res = 0\n    for i in range(n):\n        res += s[i]\n    return res\n\ndef main():\n    r, c = map(int, input().split())\n    ascii = input()\n    print(calc(ascii))\n\nT = int(input())\nfor _ in range(T):\n    main()"}, "2724": {"problem_id": 2724, "answer": "n = int(input())\nt = int(input())\na = []\nb = []\nfor i in range(n):\n    a.append(list(map(int,input().split())))\n    b.append(list(map(int,input().split())))\nans = []\nfor i in range(t):\n    x,y = list(map(int,input().split()))\n    ans.append((x,y))\n    \nprint(min(ans))\n"}, "2725": {"problem_id": 2725, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nl = [int(x) for x in input().split()]\nans = [0]*(2**n)\nfor i in range(n):\n    ans[l[i]] += 1\n    \nprint(*ans, sep='\\n')\n"}, "2726": {"problem_id": 2726, "answer": "from math import ceil\nn, c = map(int, input().split())\na = list(map(int, input().split()))\nd = [0]*n\nfor i in range(n):\n    d[i]+=a[i]\ns = sum(d)\nprint(s/c)"}, "2727": {"problem_id": 2727, "answer": "n,MOD = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\ng = sorted(a)\np = 10**9 + 7\nans = 0\nfor i in range(n):\n    if g[i] > g[i - 1]:\n        ans += (p - g[i]) * (p - g[i - 1])\n    elif g[i] < g[i - 1]:\n        ans += (p - g[i]) * (g[i - 1] - g[i])\nprint(ans % MOD)"}, "2728": {"problem_id": 2728, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\narr = list(map(int, readline().split()))\narr.sort()\nbus = []\nfor i in range(n):\n    bus.append(arr[i])\nans = 0\nfor i in range(1, n):\n    if bus[i] - bus[i - 1] <= 0:\n        bus.pop(i)\n        ans += 1\n    else:\n        bus.append(bus[i])\n        ans += 1\nprint(i + 1, bus[i])"}, "2729": {"problem_id": 2729, "answer": "import sys\nreadline = sys.stdin.readline\ndecimals = 2\ninp = readline().strip()\nprint(\"\".join(map(str,inp[1:])))"}, "2730": {"problem_id": 2730, "answer": "import math\nn = int(input())\nk = int(input())\nl = [0]*n\nfor i in range(n):\n    l[i] = int(input())\n    \nl.sort()\nm = math.ceil(k/n)\np = 1\nfor i in range(1,m):\n    p *= i\n    p = p*.5\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n"}, "2731": {"problem_id": 2731, "answer": "s = input()\nfor i in range(len(s)):\n    if s[i]==',' or s[i]=='}':\n        s = s[1:i] + s[i+1:]\n        continue\n    elif s[i]==\"{\":\n        s = s[1:i] + \",\" + s[i+1:]\n    else:\n        s = s[1:i] + \",\" + s[i+1:]\nprint(s)"}, "2732": {"problem_id": 2732, "answer": "import math\r\ndef slalwai(r):\r\n    return '{:.12f}'.format(r ** 0.5)\r\ndef chocolat(s,a,b):\r\n    return chocolat(s//math.tan(a*math.pi/math.sqrt(s)),a,b)\r\nW=int(input())\r\nA=input().split()\r\nA=[int(x) for x in A]\r\nR=len(A)\r\nans=0\r\nfor i in range(R):\r\n    ans+=slalwai(A[i])\r\nprint(ans)"}, "2733": {"problem_id": 2733, "answer": ""}, "2734": {"problem_id": 2734, "answer": "import math\ndef power(x, y):\n if y == 0:\n  return 1\n else:\n  return y * power(x % 2, 2)\nn, k = map(int, input().split())\nm = 2**int(math.ceil(math.log2(n)) + 1)\nfor i in range(k):\n p = power(2, i + 1)\n print(m * p)"}, "2735": {"problem_id": 2735, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nS=list(input())\nT=list(input())\nfor i in range(1,len(S)):\n    S[i]=chr(97+i)\nfor i in range(8,-1,-1):\n    T[i]=chr(97+i)\n\nans=0\nfor i in range(len(S)):\n    if S[i]==T[i]:\n        ans+=1\nprint(ans)"}, "2736": {"problem_id": 2736, "answer": "import numpy as np\r\na=[]\r\nb=[]\r\ndef calc(a,b):\r\n    return max(a[i] for i in range(1,len(a)))\r\n\r\nfor _ in range(int(input())):\r\n    x,y=map(int,input().split())\r\n    a.append([x,y])\r\n    b.append([0,0])\r\n\r\nprint(calc(a,b))"}, "2737": {"problem_id": 2737, "answer": "from collections import deque\nn,m,s=list(map(int,input().split()))\np=s+[0]*n\nq=deque([0])\nfor i in range(n):\n    p.append(list(map(int,input().split())))\nwhile len(q)!=0:\n    u,v,w=q.popleft()\n    for x in p[v]:\n        q.append((x,w))\nprint(min(m-heapq(w,max(m-1,len(p[u]))))+m)\n"}, "2738": {"problem_id": 2738, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict as dd\nn=int(input())\nd=dd(int)\nfor i in range(n):\n    x,y,r=list(map(int,input().split()))\n    d[x].append((y,r))\n    d[y].append((x,r))\nans=[]\nfor i in d:\n    ans.append((d[i][0]))\nprint(*ans,sep=\"\\n\")\n"}, "2739": {"problem_id": 2739, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+7\n\ndef modInverse(a, b):\n    return pow(a, b)\n\ndef modSqrt(a):\n    return pow(a, 1/2)\n\nn = int(readline())\na = list(map(int, readline().split()))\ncnt = 0\nfor i in range(n-1):\n    cnt += a[i]*2**i\n    a.pop()\nprint(cnt%MOD)"}, "2740": {"problem_id": 2740, "answer": "import sys\nsys.setrecursionlimit(10**8)\nMOD = 10**9+7\ninn = lambda: list(map(int, input().split()))\ninh = lambda: list(map(int, input().split()))\nmod = 10**9+7\ndef solve():\n n,w,h = inn()\n ans = 0\n if n%2:\n  print(w*h)\n elif n==w:\n  ans = 1\n  for i in range(w):\n   ans += h\n  ans %= MOD\n else:\n  for i in range(w):\n   ans += n-i\n  ans %= MOD\n print(ans)\n solve()\n \n"}, "2741": {"problem_id": 2741, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ninp = lambda: list(map(int,sys.stdin.readline().rstrip(\"\\r\\n\").split()))\nabso = lambda x: bin(x)[2:]\nceil = lambda x: int(x,16) + 1\nfloor = lambda x: int(x,16) - 1\ngcd = lambda x: inf = x if x == 0 else x / gcd(x,inf)\nlcm = lambda x: (x*x) % 1\nmant = lambda x: inf = x if x == 0 else x / mant(x,mant(x)) % 1\nprint = lambda x: print(x,end ='')\nprintl = lambda x: print(x,end ='')\nspf = lambda x: print(x,end ='')\nstdin = lambda:sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(10**7)\nINF = float('inf')\neps = 1.0e-20\nmod = 10**9 + 7\n\n\"\"\"\nBASE-8: O(2**63)\nBASE-16: O(2**63)\nBASE-32: O(2**63)\nBASE-64: O(2**65)\nBASE-100: O(2**63)\nBASE-19937: O(2**63)\n\"\"\"\n\nMOD = 10**9 + 7\n\nn = int(input())\nans = ''.join(map(str,inp()))\n\nfor i in range(n):\n    ans = chr(ans.count('0') + ord(ans[-2]) - ord('0') + ord(ans[-1])) + ans\n    ans = ans.replace('0','')\n    ans = ans.replace('1','')\n    ans = ans.replace('2','')\n    ans = ans.replace('3','')\n    ans = ans.replace('4','')\n    ans = ans.replace('5','')\n    ans = ans.replace('6','')\n    ans = ans.replace('7','')\n    ans = ans.replace('8','')\n    ans = ans.replace('9','')\n    ans = ans.replace('A','')\n    ans = ans.replace('B','')\n    ans = ans.replace('C','')\n    ans = ans.replace('D','')\n    ans = ans.replace('E','')\n    ans = ans.replace('F','')\nprint(ans)"}, "2742": {"problem_id": 2742, "answer": "import math\nn = int(input())\nans = 0\npow10 = math.pow(10,n)\nfor i in range(1,10):\n    ans += pow10\n    if i*pow10 <= n:\n        ans += i*pow10\nprint(ans)"}, "2743": {"problem_id": 2743, "answer": "import sys\nreadline = sys.stdin.readline\n\nh, w = list(map(int, readline().split()))\n\ndef calc(i, j):\n    x = i + 1\n    y = j + 1\n    d = abs(x - y)\n    if d > w:\n        return 'right'\n    elif d < h:\n        return 'left'\n    else:\n        return 'balanced'\n\ndef main():\n    print(calc(0, 100))\n\nmain()\n"}, "2744": {"problem_id": 2744, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nn, m = map(int, readline().split())\nd = [[] for i in range(n)]\nfor i in range(m):\n    t = list(map(int, readline().split()))\n    d[t[1] - 1].append(t[2])\n    d[t[1] - 1].sort()\ncosts = [INF for i in range(n)]\nvisited = [0 for i in range(n)]\ncnt = 0\nfor i in range(n):\n    if visited[i] == 0:\n        costs[i] = min(d[i].count(i), costs[i])\n        visited[i] = 1\n        cnt += costs[i]\n        print(cnt)\n    else:\n        d[i].pop()\n        visited[i] = 0\n        cnt += costs[i]\n        print(cnt)"}, "2745": {"problem_id": 2745, "answer": "class Solution:\n     def findSubstring(self, s, words):\n         \"\"\"\n         :type s: str\n         :type words: List[str]\n         :rtype: List[int]\n         \"\"\"\n         words.sort()\n         ans = set()\n         for i in range(len(s)):\n             if s[i:i+len(words[0])] not in ans:\n                 ans.add(s[i:i+len(words[0])])\n         return ans"}, "2746": {"problem_id": 2746, "answer": "class Solution:\n     def compareVersion(self, version1, version2):\n         \"\"\"\n         :type version1: str\n         :type version2: str\n         :rtype: int\n         \"\"\"\n         if '.' in version1:\n             return -1\n         elif '.' in version2:\n             return 1\n         else:\n             return 0"}, "2747": {"problem_id": 2747, "answer": "class Solution:\n    def searchRange(self, nums: List[int], target: int) -> List[int]:\n        start = 0\n        end = len(nums) - 1\n        while start < end:\n            mid = start + (end - start) // 2\n            if nums[mid] == target:\n                return [mid, start]\n            elif nums[mid] > target:\n                start = mid + 1\n            else:\n                end = mid - 1\n        return [-1, -1]"}, "2748": {"problem_id": 2748, "answer": "class Solution:\n     def letterCombinations(self, digits):\n         \"\"\"\n         :type digits: str\n         :rtype: List[str]\n         \"\"\"\n         d={}\n         for i in digits:\n             d[i]=d.get(i,0)+1\n         res=[]\n         for i in d:\n             res.append(i*10+'0')\n         return res"}, "2749": {"problem_id": 2749, "answer": "import sys\ninput = sys.stdin.readline\n\nH, W = map(int, input().split())\nN = int(input())\nA = list(map(int, input().split()))\n\nans = [0] * W\nans[0] = 1\nfor i in range(W - 1):\n    j = i + 1\n    while j < W:\n        ans[j] += A[j]\n        j += i\n\nprint(' '.join(map(str, ans)))"}, "2750": {"problem_id": 2750, "answer": "import sys\ninput=sys.stdin.readline\ndef main():\n n,b=map(int,input().split())\n arr=list(map(int,input().split()))\n d=dict()\n for i in range(n):\n  d[arr[i]]=i+1\n l=[]\n for i in range(1,n+1):\n  l.append(d[i])\n l.sort()\n print(len(l))\n return 0\nmain()"}, "2751": {"problem_id": 2751, "answer": "import sys\r\nimport bisect\r\nfrom collections import defaultdict, deque\r\n# import numpy as np\r\n# from math import gcd,sqrt,floor,factorial,ceil,floor_divide,inf,nan\r\nsys.setrecursionlimit(10**6)\r\ndef I(): return int(sys.stdin.readline())\r\ndef MI(): return map(int,sys.stdin.readline().split())\r\ndef LI(): return list(map(int,sys.stdin.readline().split()))\r\ndef LI2(): return list(map(int,sys.stdin.readline().split(1)))\r\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\r\ndef LS(): return sys.stdin.readline()\r\ndef IR(rows_number):\r\n    return [int(x) for x in sys.stdin.readline().split()]\r\ndef LIR(rows_number):\r\n    return [LI() for _ in range(rows_number)]\r\ndef SR(rows_number):\r\n    return [sqrt(int(x)) for x in sys.stdin.readline().split()]\r\ndef LSR(rows_number):\r\n    return [sqrt(int(x)) for x in sys.stdin.readline().split()]\r\n\r\nn = I()\r\nkatic = LI()\r\narr = [0]*100001\r\narr[0] = 1\r\nfor i in range(1,n):\r\n    arr[i] = arr[i-1]*i\r\nans = max(arr)\r\nprint(ans)\r\nwhile True:\r\n    if n>1:\r\n        n = n-2\r\n        arr[n] = arr[n-1]*n\r\n    else:\r\n        break\r\n    ans = max(ans,arr[n])\r\n    print(ans)"}, "2752": {"problem_id": 2752, "answer": "import sys\r\ninput = sys.stdin.readline\r\n\r\nn, k = map(int, input().split())\r\nweather = [input().split() for _ in range(n)]\r\nsunny = \"S\"\r\nrainy = \"R\"\r\nsum_w = 0\r\nfor i in range(n):\r\n    a, b = map(int, input().split())\r\n    a -= 1\r\n    b -= 1\r\n    sum_w += (k - a) * (k - b)\r\n    if a > b:\r\n        a, b = b, a\r\n    if a < b:\r\n        a, b = b, a\r\n    weather[i] = str(weather[i])\r\nprint(sum_w + k * (k - len(weather[n - 1])))"}, "2753": {"problem_id": 2753, "answer": "import datetime\nd = {str(i):int(ii) for i,ii in enumerate(input().split())}\ndef __starting_point():\n a,b,c = map(int,input().split())\n print(datetime.timedelta(hours=a//10, minutes=b//10) + datetime.timedelta(hours=c//10, minutes=b//10))\n\n__starting_point()"}, "2754": {"problem_id": 2754, "answer": "import operator\ndef is_pow(x):\n if x==0:\n  return False\n elif x==1:\n  return True\n else:\n  return pow(x,0.5)>1\nlst=list(map(int,input().split()))\nx=lst[0]\ny=lst[1]\npow=is_pow(x)\nif pow==True:\n print(\"impossible\")\n else:\n print(str(floor(10*y)))\n"}, "2755": {"problem_id": 2755, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom bisect import bisect_left as bl1\nfrom bisect import bisect_right as br1\nimport math\nfrom functools import reduce\nimport sys\ninput = sys.stdin.readline\n \nn,m = map(int,input().split())\nA = [list(map(int,input().split())) for i in range(n)]\nA.sort()\nB = [0]*(n+1)\nfor i in range(1,n+1):\n    B[i] = B[i-1] + A[i-1][1]\n    \ndef solve():\n    ans = reduce(lambda a,b:a+b,B[1:])\n    if ans == n:\n        print(n)\n        return\n    for i in range(2,n+1):\n        if B[i] < ans:\n            continue\n        ans = B[i]\n        l = bl1(i)\n        r = br1(i)\n        if l < ans:\n            print(i)\n            return\n        if r < ans:\n            print(i)\n            return\n        B[i] = ans\n    print(n-ans)\nsolve()"}, "2756": {"problem_id": 2756, "answer": "import sys\ndef inp():\n\treturn sys.stdin.readline().rstrip()\ndef out(s):\n\tprint(s)\nn, m, e = inp()\nd = [['.']*n for _ in range(m)]\nd[0][0] = 'E'\nd[0][n-1] = 'E'\nr = []\nfor i in range(1, n+1):\n\tr.append(d[i-1][m-1] + d[i-1][n-i])\ns = ''.join(r)\nans = 0\ni = 0\nwhile i < m:\n\tt = i\n\tx = d[t][m-1]\n\ty = d[t][n-t-1]\n\tif x <= e and y <= e:\n\t\tans += 1\n\t\ti += 1\n\telif x > e and y < e:\n\t\tans += 1\n\t\ti += 1\n\telse:\n\t\tif y == 'E':\n\t\t\tans += 1\n\t\t\tbreak\n\t\telif y == 'P':\n\t\t\tans += 1\n\t\t\tbreak\n\t\telse:\n\t\t\tans += 1\n\t\t\tbreak\nout(s)\n"}, "2757": {"problem_id": 2757, "answer": "import sys\ninput = sys.stdin.readline\nn=int(input())\narr=[0]*(2**n)\nfor i in range(n):\n    arr[int(input())]=1\ndp=[0]*(2**n)\ndp[0]=arr[0]\ndp[1]=arr[1]\nM=[]\ndef dfs(v):\n    nonlocal M\n    if dp[v]!=1:\n        M.append(v)\n        dp[v]=1\n    else:\n        for i in adj[v]:\n            dfs(i)\ndfs(0)\nprint(len(M))"}, "2758": {"problem_id": 2758, "answer": ""}, "2759": {"problem_id": 2759, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ntanks = [list(map(int, input().split())) for _ in range(n)]\nmoves = [0] * (n + 1)\nans = 0\nfor i in range(1, n + 1):\n    moves[i] = 1\n    ans += 1\n    for j in range(i):\n        if i - j >= 2:\n            ans += moves[i - j - 2]\n        elif i - j == 1:\n            ans += moves[i - j - 1]\n        else:\n            ans += moves[i - j]\nprint(ans)\n"}, "2760": {"problem_id": 2760, "answer": "import sys\ninput = sys.stdin.readline\n\ndef isPossibleSwap(n):\n    if n%2==0:\n        return False\n    elif n%2==1:\n        return True\n    else:\n        return False\n\nN = int(input())\nA = list(map(int,input().split()))\nB = []\nfor i in range(N):\n    if A[i]!=i+1:\n        B.append(i+1)\n        A[i] = i+1\n    else:\n        B.append(A[i])\n\nans = 0\nfor i in range(N-1):\n    if B[i]!=N-i-1:\n        ans+=1\n\nprint(ans)"}, "2761": {"problem_id": 2761, "answer": "import sys\nimport math\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI2(): return list(map(int,sys.stdin.readline().rstrip()))\ndef LI3(): return list(map(int,sys.stdin.readline().rstrip()))\nmod=10**9+7\nn=I()\na=[]\nfor i in range(n):\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a.append(LI())\n a."}, "2762": {"problem_id": 2762, "answer": "import bisect as b\nn,g,k = map(int,input().split())\na = list(map(int,input().split()))\nb.subdiags(a,n,0)\nans = 10**18\nfor i in range(1,n):\n  ans = min(ans, b.lcm(a[i] - a[i-1], i))\nprint(ans)"}, "2763": {"problem_id": 2763, "answer": "n=int(input())\nl=[]\nfor i in range(n):\n    a=input()\n    l.append(a)\n    if a[0]==\".\" or a[0]==\".\" or a[0]==\".\":\n        a=\"\".join(l[i:i+2])\n    else:\n        a=a.replace(\".\", \"\")\n        a=a.translate(str.maketrans(\".X.\", \".\"))\n        l[i:i+2]=a\nprint(\"\".join(l[:n]))"}, "2764": {"problem_id": 2764, "answer": "import sys\nread = sys.stdin.readline\ns = list(read())\nfor i in range(1,7):\n    s[i] = s[i-1]\n    \nt = int(s[8])\na = [0]*t\na[0] = 1\nx = []\nfor i in range(t):\n    x.append(s[i])\n    \ndiamond = '.'\nfor i in range(t):\n    if a[i] == 1:\n        diamond = '.'\n    elif a[i] == 2:\n        diamond = 'I'\n    elif a[i] == 4:\n        diamond = 'C'\n    elif a[i] == 5:\n        diamond = '.'\n    elif a[i] == 6:\n        diamond = '.'\n    elif a[i] == 7:\n        diamond = '.'\nprint(diamond)"}, "2765": {"problem_id": 2765, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    c = list(map(int, readline().split()))\n    if len(set(c))==1:\n        print(\"non-canonical\")\n        return\n    elif len(c)==2:\n        print(\"canonical\")\n        return\n    else:\n        d = set()\n        for i in range(1, n):\n            if c[i]<=c[i-1]:\n                d.add(i)\n        print(len(d))\n        if max(d)==0:\n            print(n//2)\n        else:\n            print(n//2 + min(d))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2766": {"problem_id": 2766, "answer": "import numpy as np\n\ndef dice_model(n, k, p):\n\treturn 0.999*p**n for i in range(1, n+1)\n\ndef main():\n\tn, k = list(map(int, input().split()))\n\tp = np.Inf\n\tlives = list(map(int, input().split()))\n\tprob = dice_model(n, k, p)\n\treturn prob\n\ndef __starting_point():\n\tmain()\n\n__starting_point()"}, "2767": {"problem_id": 2767, "answer": "from collections import Counter\nn=int(input())\nd=Counter(map(str,input().split()))\nfor i in range(n):\n a=list(d.keys())\n a.sort()\n print(26*sorted(a,reverse=True))"}, "2768": {"problem_id": 2768, "answer": "import sys\ninput = sys.stdin.readline\nN, M = list(map(int, input().split()))\nadj = [[0] * N for _ in range(M)]\nfor i in range(1, N):\n    adj[i][i] = 1\n    adj[i][i+M-1] = 1\nans = 0\nr = N\nc = M\nflag = False\nwhile r > 0:\n    r -= 1\n    c *= 2\n    if c > N:\n        c -= N\n        continue\n    flag = True\n    for i in range(c):\n        if adj[i][r] == 0:\n            flag = False\n            break\n        elif adj[i][r] == 1:\n            ans += 1\n            adj[i][r] = 1\n            r -= 1\n        else:\n            ans += 1\n            adj[i][r] = 1\nprint(ans)\n"}, "2769": {"problem_id": 2769, "answer": "import sys\ninput = sys.stdin.readline\nn,p,q=list(map(int,input().split()))\ns=0\ndef solve(n):\n nonlocal s\n if n==0:\n  return 0\n d=n//2\n res=[]\n for i in range(1,d+1):\n  res.append(i)\n  solve(i)\n  s+=i\n return s\nfor i in range(p):\n x=solve(int(input()))\n print(x)\n"}, "2770": {"problem_id": 2770, "answer": "import math\ndef main():\n    n,a=[int(i) for i in input().split()]\n    q=int(input())\n    for i in range(0,q):\n        t,m=[int(i) for i in input().split()]\n        print(a[t-1]%m,end=\" \")\n        a[t-1]%m=(a[t-1]%m)+(a[t-1]%m)%m\n    print()\nmain()"}, "2771": {"problem_id": 2771, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip()\na = [0]*n\nfor i in range(n-1):\n a[i] = s[i]\nprint(*a)"}, "2772": {"problem_id": 2772, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n a, d = map(int, input().split())\n h, t = list(map(int, input().split()))\n \n t = 100 - t\n for i in range(1, 100):\n  h += i\n  t *= a + d\n  \n print(h * 100.0 + t / a)\n \nmain()"}, "2773": {"problem_id": 2773, "answer": "import sys\r\ndef inp(): return sys.stdin.readline().strip()\r\ndef out(s): sys.stdout.write(s + '\\n')\r\ndef sel(i,j):\r\n    nonlocal a,b,d\r\n    a[i] = j\r\n    b[j] = i\r\n    d[i] = d[j] + 1\r\nINF = 10**18\r\nMOD = 10**9 + 7\r\ng = [[] for _ in range(500000)]\r\nfor i in range(len(a)):\r\n    g[a[i]].append(i)\r\nfor _ in range(int(inp())):\r\n    a,b,d = map(int,inp().split())\r\n    g[a].append(b)\r\n    g[b].append(a)\r\nvisited = [0]*(len(g))\r\nans = [0]*(2*len(g))\r\nans[1] = 1\r\ndef dfs(i):\r\n    nonlocal a,b,d,visited\r\n    visited[i] = 1\r\n    for j in g[i]:\r\n        if visited[j] == 0:\r\n            dfs(j)\r\n            ans[2*i] = min(ans[2*i],visited[j])\r\ndfs(1)\r\nprint(ans)"}, "2774": {"problem_id": 2774, "answer": "import sys\ninput=sys.stdin.readline\nfrom collections import deque\nn,s=map(int,input().split())\ntrail=[]\nfor i in range(1,n+1):\n a,b,d=map(int,input().split())\n if a!=1 and b!=1:\n  trail.append((a,b,d))\n elif a==1 and b!=1:\n  trail.append((a,b,d-1))\n else:\n  if trail[a][1]!=s and trail[b][1]!=s:\n   print(s)\n   return\n l=int(input())\n q=deque()\n q.append(1)\n ans=0\n while q:\n  i=q.popleft()\n  if i==n-1:\n   ans+=1\n   continue\n  for j in range(i,n):\n   if trail[j][0]==i:\n    q.append(j)\n    continue\n   ans+=1\n print(ans)"}, "2775": {"problem_id": 2775, "answer": "import math\ndef isok(x):\n return x[0] == 0 and x[1] == 1\nn=int(input())\nx=list(map(int,input().split()))\ns=0\na=len(x)\nfor i in range(n):\n a1=x[i]\n a2=x[i+1]\n b=math.sqrt(a1**2+b**2)\n c=a1**2+b**2\n if isok(b):\n  s+=1\n else:\n  s+=(2*a2-b)\nprint(s)"}, "2776": {"problem_id": 2776, "answer": "import sys\r\ninput = sys.stdin.readline\r\n\r\nn,m = map(int,input().split())\r\nd = {}\r\nfor i in range(1,n+1):\r\n    d[i] = d.get(i,0)+1\r\nans = 0\r\nfor i in range(m):\r\n    a,b = map(int,input().split())\r\n    if a not in d or b not in d:\r\n        ans += d[a]*d[b]\r\nprint(ans)"}, "2777": {"problem_id": 2777, "answer": "m,n = list(map(int,input().split()))\np = list(map(int,input().split()))\na = [0]*2**m\nfor i in range(n):\n    a[p[i]] += 1\n    \ns = 0\nfor i in range(2**m):\n    if a[i]:\n        s += pow(2,i)\n        \nprint(s%(10**9 + 7))\n"}, "2778": {"problem_id": 2778, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\ninn=lambda:int(input())\nout=lambda:print(\"%d\"%(inn()))\nmod=10**9+7\n"}, "2779": {"problem_id": 2779, "answer": "import sys\nreadline = sys.stdin.readline\nn, m, c = list(map(int, readline().split()))\ng = []\nfor i in range(n+1):\n g.append(list(input()))\nans = 0\nfor i in range(m):\n cnt = 0\n d = {}\n for j in range(len(g[i])):\n  d[g[i][j]] = i\n ans += sum(d.values())\n if m>n:\n  print(-1)\n elif m==n:\n  print(ans)\n else:\n  for i in range(m):\n   if g[i][0]=='B':\n    cnt += m*(m-1)//2\n   elif g[i][0]=='.':\n    cnt += m*(m-2)//2\n   elif g[i][0]=='a':\n    cnt += m*(m-3)//2\n   else:\n    cnt += m*(m-4)//2\n  ans += cnt\n print(ans)\n"}, "2780": {"problem_id": 2780, "answer": "import bisect as b\nn,m=map(int,input().split())\na=n+1\nb.insort_segment(list(range(1,m+1)),0)\nfor i in range(n):\n    print(0.0000005)"}, "2781": {"problem_id": 2781, "answer": "from sys import stdin,stdout\nfrom math import ceil,gcd,log,sqrt,factorial,fmod,pi,sgr,inf,nan,rad,convert*\nfrom collections import defaultdict as dd, deque"}, "2782": {"problem_id": 2782, "answer": "from collections import defaultdict as dd\nn,r,c=list(map(int,input().split()))\na=[]\nb=[]\ns=dd(int)\nfor i in range(n):\n    a.append(list(map(int,input().split())))\nfor i in range(r):\n    b.append(list(map(int,input().split())))\nfor i in range(c):\n    s.add(i)\nc=s[0]\na.sort()\nb.sort(reverse=True)\nans=0\nfor i in range(1,r):\n    if b[i]>a[i]:\n        ans+=1\nprint(ans)\n    \n"}, "2783": {"problem_id": 2783, "answer": "import sys\nread = sys.stdin.readline\n\nn = int(read())\nsys.setrecursionlimit(10**9)\n\ns = [0]*(n+1)\nfor i in range(n):\n    x, y = list(map(int, read().split()))\n    s[x] += 1\n    s[y] += 1\n\nd = [0]*(n+1)\nfor i in range(n):\n    x, y = list(map(int, read().split()))\n    d[x] = d[y] = max(d[x], d[y])\n\nclass Solution:\n    def minSweat(self, s, d):\n        \"\"\"\n        :type s: List[int]\n        :type d: List[List[int]]\n        :rtype: int\n        \"\"\"\n        if n >= 2500:\n            return 0\n        ans = []\n        for k in range(1, n+1):\n            for i in range(n):\n                if k+i <= n:\n                    ans.append('{} {}'.format(k, s[k]))\n                else:\n                    break\n        return self.minSweat(ans, d)\n    "}, "2784": {"problem_id": 2784, "answer": "import sys\nimport math\ndef main():\n n = int(sys.stdin.readline())\n ans = []\n for i in range(n):\n  s = sys.stdin.readline().rstrip()\n  ans.append(s)\n  \n if len(ans) < n:\n  print(\"no route found\")\n else:\n  print(\" \".join(map(str,ans)))\nmain()"}, "2785": {"problem_id": 2785, "answer": "import sys\ninput = sys.stdin.readline\n\ndef read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split()))\n\n\nn, M = read_ints()\ninvestments = []\nfor i in range(n):\n    d, c = read_ints()\n    investments.append((d, c))\n\ndp = []\ncnt = 0\nfor i in range(n):\n    d, c = investments[i]\n    if d > c:\n        d, c = c, d\n    dp.append(d)\n    cnt += 1\n\nprint(cnt)\n"}, "2786": {"problem_id": 2786, "answer": "import sys\nn=int(input())\ns=input()\nd={}\nfor i in s:\n    if i.isdigit():\n        d[i]+=1\n    else:\n        d[i]=1\nans=0\nfor i in d.values():\n    ans+=d[i]*(10**len(s))\nprint(ans)"}, "2787": {"problem_id": 2787, "answer": "from math import *\ndef gcd(a,b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\ndef li():\n    return int(input())\ndef st():\n    return input()\ndef li2():\n    return list(map(int,input().split()))\ndef li3():\n    return list(map(int,input().split()))\ndef li4():\n    return list(input())\ndef li5():\n    return list(map(int,input().split()))\ndef li6():\n    return list(reversed(input().split()))\ndef li7():\n    return list(zip(*li()))\ndef li8():\n    return list(reversed(list(map(int,input().split()))))\ndef li9():\n    return list(reversed(list(map(int,input().split()))))\ndef li10():\n    return list(reversed(list(map(int,input().split()))))\ndef li11():\n    return list(reversed(list(map(int,input().split(\" \")))));\ndef li12():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li13():\n    return list(reversed(list(map(int,input().split(\" \")))));\ndef li14():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li15():\n    return list(reversed(list(map(int,input().split(\" \")))));\ndef li16():\n    return list(reversed(list(map(int,input().split(\" \")))));\ndef li17():\n    return list(reversed(list(map(int,input().split(\" \")),[0])))\ndef li18():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li19():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li20():\n    return list(reversed(list(map(int,input().split(\" \")))));\ndef li21():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li22():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li23():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li24():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li25():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li26():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li27():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li28():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li29():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li30():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li31():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li32():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li33():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li34():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li35():\n    return list(reversed(list(map(int,input().split(\" \")))))\ndef li36():\n    return list(reversed(list(map(int,input().split(\" \")))))"}, "2788": {"problem_id": 2788, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k,x,a,b=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\nm=min(l)\nd=k+1\nif m<b:\n print(\"impossible\")\nelse:\n l.sort()\n c=0\n for i in range(1,n):\n  if l[i]!=m:\n   c+=1\n   m=l[i]\n   d-=1\n   if d>a:\n    break\n print(c)\n"}, "2789": {"problem_id": 2789, "answer": "import math\ndef solve():\n    n=int(input())\n    dp=[0]*n\n    dp[0]=1\n    for i in range(1,n):\n        dp[i]=dp[i-1]+1\n        if dp[i]<2:\n            dp[i]=math.ceil(dp[i]/2)\n    print(dp[n-1])\nsolve()"}, "2790": {"problem_id": 2790, "answer": "import sys\nreadline = sys.stdin.readline\n\nn,s,t = list(map(int,readline().split()))\nl = list(map(int,readline().split()))\n\ndef f(k):\n    nonlocal l\n    if k==0:\n        return 0\n    elif k==s-1:\n        return s-1\n    else:\n        return min(f(k-1),f(k-s-1))+t\n\nl.sort()\np = l[0]\nq = l[-1]\nr = 0\nfor i in range(n-1):\n    p = min(f(l[i]),f(l[i+1]))\n    q = max(f(l[i]),f(l[i+1]))\n    r += q*(s-p)\n    \nprint(f(r))\n"}, "2791": {"problem_id": 2791, "answer": "import sys\ninput = sys.stdin.readline\nn,d=list(map(int,input().split()))\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n    for j in range(i+1,n):\n        if a[i]/d==a[j]/d:\n            c+=1\nprint(c)\n"}, "2792": {"problem_id": 2792, "answer": "import sys\ndef II():\n return int(sys.stdin.readline())\ndef LI():\n return list(map(int,sys.stdin.readline().split()))\ndef MI():\n return map(int,sys.stdin.readline().split())\ndef LI2():\n return list(map(int,sys.stdin.readline().split()))\ndef MI2():\n return list(map(int,sys.stdin.readline().split()))\nmod=10**9+7\nsys.setrecursionlimit(10**5)\ninf=10**20\neps=1.0e-30\ndd=[-1]*100000\nfor _ in range(II()):\n n=LI()\n dd[n-1]=1\n for i in range(n-2,-1,-1):\n  d=dd[i]\n  dd[i]=max(d,dd[i]+(n-i)*eps)\n print(dd[-1])\n"}, "2793": {"problem_id": 2793, "answer": "import sys\ninput = sys.stdin.readline\nn,m,s,t=list(map(int,input().split()))\nedges=[]\nfor i in range(n):\n    u,v,w=list(map(int,input().split()))\n    edges.append((u,v,w))\nedges.sort()\nans=[0]*n\ndef edgePoss(u,v,w):\n    nonlocal ans\n    if u==v:\n        ans[u]+=1\n        return 0\n    elif edges[u][0]>=w:\n        ans[v]+=1\n        edgePoss(u,v,w-edges[u][1])\n        edgePoss(v,u,w-edges[v][1])\n    else:\n        ans[v]+=1\n        edgePoss(v,u,w)\nprint(ans[s]/2)\n"}, "2794": {"problem_id": 2794, "answer": "h,c=list(map(int,input().split()))\nwork=[]\nans=[]\nfor i in range(h):\n    a,d=list(map(int,input().split()))\n    work.append((a,d))\nwork.sort()\nans.append(sum(work[-1][0]))\nfor i in range(c):\n    a,d=list(map(int,input().split()))\n    work.append((a,d))\nwork.sort()\nans.append(sum(work[-1][1]))\nprint(min(ans))\n"}, "2795": {"problem_id": 2795, "answer": "import sys\ninput = sys.stdin.readline\nn, e, p = list(map(int, input().split()))\nl = [tuple(map(int, input().split())) for i in range(n)]\nl.sort()\nc = 0\nfor i in range(n):\n  x, y = l[i]\n  d = abs(x-y)\n  if d < e:\n    e = d\n    c += e\n  elif d == e:\n    c += e\nprint(\"{:.9f}\".format(c))\n"}, "2796": {"problem_id": 2796, "answer": "n = int(input())\na = [0]*n\nb = [0]*n\nfor i in range(n-1):\n    a[i], b[i] = list(map(int, input().split()))\n    a[i], b[i] = list(map(int, input().split()))\n    if a[i] == b[i]:\n        print(0)\n    else:\n        c = b[i]%2\n        if c == 0:\n            print(a[i]*(n-a[i]))\n        else:\n            print(a[i]*(n-a[i] - 1))\n"}, "2797": {"problem_id": 2797, "answer": "a,b=map(int,input().split())\ns=0\nfor i in range(1,a+1):\n s+=b**i%a\nprint(s%a)"}, "2798": {"problem_id": 2798, "answer": "import math\r\nimport copy\r\nread = lambda : list(map(int,input().split()))\r\ndef solve(c):\r\n    a,b,c=copy.deepcopy(c),copy.deepcopy(c),copy.copy(c)\r\n    if a>b:\r\n        a,b=b,a\r\n    x,y,z=a,b,a\r\n    ans=math.ceil((z-y-x)**.5)\r\n    if ans>c[3][0]:\r\n        ans=c[3][0]\r\n    print(a+\" \"+b+\" \"+str(ans))\r\n    return\r\nsolve(['Rubens','Albert'])"}, "2799": {"problem_id": 2799, "answer": "from math import *\nr,g,b,y,s=map(int,input().split())\nd=0.0\nfor i in range(s):\n  d+=pow(r+g+b+y,0.5,1.0)\nprint(d/4)"}, "2800": {"problem_id": 2800, "answer": "piles = [0] + list(map(int, input().split()))\r\ncnt = len(piles)\r\nl, r = 0, 10\r\nwhile l < r:\r\n    m = (l + r) // 2\r\n    if piles[m] < cnt:\r\n        l = m + 1\r\n    else:\r\n        r = m\r\nprint(\"Bob will win.\")"}, "2801": {"problem_id": 2801, "answer": "import sys\nreadline = sys.stdin.readline\n\nn,m = list(map(int,readline().split()))\nst = list(map(int,readline().split()))\nns = []\nnt = []\n\nfor i in range(m):\n    a = list(map(int,readline().split()))\n    ns.append(a)\n    nt.append(a)\nns = sorted(ns)\nnt = sorted(nt, reverse=True)\nns = list(set(ns))\nnt = list(set(nt))\nns = [0] + ns\nnt = [0] + nt\n\nns = [x*f for x in ns]\nnt = [x*f for x in nt]\nns = nt = [0] + ns\n\nns = [x*f for x in ns]\nnt = [x*f for x in nt]\nans = 0\nfor i in range(n):\n    ans += (ns[i] + nt[i])*int(m/float(i+1))\nprint(ans)"}, "2802": {"problem_id": 2802, "answer": "import math\ndef solve(t):\n if t<6.38:\n  return 0\n elif t<7.20:\n  return t*3\n elif t<8.11:\n  return t*3+7.53\n else:\n  return t*3+6.99\nprint(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(solve(str,int(round(__file__),1)))))))\n"}, "2803": {"problem_id": 2803, "answer": "s = input()\nn = int(input())\nnames = set()\nfor i in range(n):\n    names.add(input())\n    if s[0] == s[-1]:\n        names.remove(s[0])\n        break\nnames.discard(s[0])\nfor i in names:\n    if i.startswith(s[0]):\n        print(i)\n        break\nelse:\n    print(\"?\")"}, "2804": {"problem_id": 2804, "answer": "# cook your dish here\na,b=map(int,input().split())\ns=set()\ns.add(a)\ns.add(b)\nfor i in range(1,len(s)):\n if i not in s:\n  s.add(i)\nprint(\"\".join(s))"}, "2805": {"problem_id": 2805, "answer": "n = int(input())\nprint(n * (n + 1) // 2)"}, "2806": {"problem_id": 2806, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nc,t=list(map(int,read().split()))\nchamber=[]\nfor i in range(c):\n    chamber.append(list(map(int,read().split())))\n\ntot=0\nfor i in range(c):\n    if chamber[i][0]==1:\n        tot+=1\n    else:\n        for j in range(i+1,c):\n            if chamber[j][0]==1:\n                tot+=1\n            else:\n                for k in range(j+1,c):\n                    if chamber[k][0]==1:\n                        tot+=1\nprint(tot)\nprint(*chamber[1:])\n"}, "2807": {"problem_id": 2807, "answer": "import math\n\ndef main():\n s = input().split()\n a = int(s[0])\n b = int(s[1])\n if a > b:\n  a, b = b, a\n print(math.floor(math.sqrt(a) * math.sqrt(b)))\n\nmain()"}, "2808": {"problem_id": 2808, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nn,m,k=list(map(int,input().split()))\nl=list(map(int,input().split()))\nfor i in range(m):\n    l1=list(map(int,input().split()))\n    l.remove(l1[1])\n    print(k)\n    s=sum(l[l1[0] : l1[1]])\n    if s>k:\n        k=s\n        print(k)\n"}, "2809": {"problem_id": 2809, "answer": "import sys\ninput=sys.stdin.readline\nR=[int(i) for i in input().rstrip('\\n').split()]\ns=input().rstrip('\\n')\nMOD=10**9+7\nfor i in range(3,len(R)+1,2):\n  x=R[i-2]%2\n  y=R[i-1]%2\n  if x==0:\n    print(1)\n  elif y==0:\n    print(0)\n  else:\n    m=0\n    for j in range(i,len(R)):\n      m=m*2+R[j]%2\n    print(m%MOD)"}, "2810": {"problem_id": 2810, "answer": "import sys\ninput = sys.stdin.readline\nm=int(input())\nn=int(input())\nans=0\nfor i in range(m):\n    a,b=list(map(int,input().split()))\n    ans+=a-b\nprint(ans)"}, "2811": {"problem_id": 2811, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nt=int(input())\nfor _ in range(t):\n    n,m=[int(x) for x in input().split()]\n    red=[0]*n\n    for i in range(n):\n        if i!=1:\n            red[i]=int(input())\n        else:\n            red[i]=1\n    ans=[]\n    for i in range(n):\n        if red[i]==0:\n            ans.append(red[i])\n        elif red[i]==1:\n            ans.append(red[i]*(m-red[i]))\n        else:\n            ans.append(red[i]*red[i]*(m-red[i]))\n    print(ans.count(red[m]%MOD)%MOD)\n"}, "2812": {"problem_id": 2812, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nk = 1\nwhile k <= 1000000:\n    k += 1\n    a = abs(int(k) - int(input()))\n    print(\"a\", end=\"\")\n    for i in range(26):\n        print(chr(97 + i), end=\"\")\n    print(\"\\r\")"}, "2813": {"problem_id": 2813, "answer": "import collections as cc\nimport itertools as it\nimport re as r\ns = int(input())\na = cc.Counter(chr(97+ord('a')).upper())\npoem = input()\nwhile s:\n s -= 1\n i = 0\n c = []\n for j in it.islice(poem, i):\n  c.append(j)\n  i += 5\n  i += r'{}'.format(a.get(c[i], ''))\n  i += r'{}'.format(a.get(c[i-1], ''))\n  i += r'{}'.format(a.get(c[i-2], ''))\n  i += r'{}'.format(a.get(c[i-3], ''))\n  i += r'{}'.format(a.get(c[i-4], ''))\n  i += r'{}'.format(a.get(c[i-5], ''))\n  i += r'{}'.format(a.get(c[i-6], ''))\n  i += r'{}'.format(a.get(c[i-7], ''))\n  i += r'{}'.format(a.get(c[i-8], ''))\n  i += r'{}'.format(a.get(c[i-9], ''))\n  i += r'{}'.format(a.get(c[i-10], ''))\n  i += r'{}'.format(a.get(c[i-11], ''))\n  i += r'{}'.format(a.get(c[i-12], ''))\n  i += r'{}'.format(a.get(c[i-13], ''))\n  i += r'{}'.format(a.get(c[i-14], ''))\n  i += r'{}'.format(a.get(c[i-15], ''))\n  i += r'{}'.format(a.get(c[i-16], ''))\n  i += r'{}'.format(a.get(c[i-17], ''))\n  i += r'{}'.format(a.get(c[i-18], ''))\n  i += r'{}'.format(a.get(c[i-19], ''))\n  i += r'{}'.format(a.get(c[i-20], ''))\n if all(map(len, c)):\n  print(\"haiku\")\n else:\n  print(\"come back next year\")\n"}, "2814": {"problem_id": 2814, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nm = list(map(int, readline().split()))\na.sort()\nm.sort()\nans = [0]*n\nfor i in range(n):\n    if a[i] == m[i]:\n        ans[i] = 1\nprint(' '.join(map(str, ans)))"}, "2815": {"problem_id": 2815, "answer": "import sys\ninput = sys.stdin.readline\n\ndef isPowerOfTwo(n):\n    return n > 0 and all(n & (n - 1) == 0 for n in range(32))\n\ndef solve(n, e):\n    if isPowerOfTwo(e):\n        return int(str(2**e)[:n])\n    elif e < 0:\n        return 0\n    return 1 + solve(n - 1, e)"}, "2816": {"problem_id": 2816, "answer": "from sys import stdin,stdout\nfrom collections import deque,defaultdict\ninput=stdin.readline\nn,m=map(int,input().split())\nl=[0]*n\nfor i in range(n):\n    l[i]=input()\nq=defaultdict(list)\nfor i in range(n):\n    q[l[i]].append(i)\nq[1]=[]\nq[1].append(1)\nq[n-1]=[]\nq[n-1].append(n-1)\ndic=defaultdict(int)\nvisited=[0]*n\nq.append(1)\nwhile q:\n    v=q.pop(0)\n    for u in q[v]:\n        if visited[u]==0:\n            visited[u]=1\n            dic[u]=max(dic[u],abs(u-v))\n            for l in l[u]:\n                if l!=v:\n                    q.append(l)\nprint(dic[1])"}, "2817": {"problem_id": 2817, "answer": "import sys\ninput = sys.stdin.readline\nE, Es, Esf = list(map(int, input().split()))\nres = 25\nfor i in range(E):\n    if i&1:\n        res = min(res, Es[i] + Esf[i&1])\n    else:\n        res = min(res, Es[i])\nprint(res)\n"}, "2818": {"problem_id": 2818, "answer": "n = int(input())\narr = list(map(int, input().split()))\narr.sort()\ni = 0\nj = len(arr)-1\ncnt = 0\nwhile i<j:\n    if arr[i]<arr[j]:\n        i+=1\n    else:\n        j-=1\n        cnt+=1\nprint(cnt)"}, "2819": {"problem_id": 2819, "answer": "n=int(input())\na=[int(x) for x in input().split()]\nb=[int(x) for x in input().split()]\nans=[]\nfor i in range(n):\n    ans.append([a[i],b[i]])\nfor i in range(n):\n    x,y=ans.pop()\n    if x==y:\n        ans[i]=[0,n]\n    else:\n        ans[i]=[x+1,y]\nif n==1:\n    print(\"Alice wins\")\nelse:\n    print(\"tie\")\n    ans=sorted(ans,key=lambda x:x[0])\n    print(ans[0][1],ans[0][2])"}, "2820": {"problem_id": 2820, "answer": "import sys\r\nimport math\r\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\r\ndef get_list(): return list(map(int, sys.stdin.readline().strip().split()))\r\ndef get_string(): return sys.stdin.readline().strip()\r\ndef input(): return get_string()\r\ndef ceil(a,b): return (a+b-2)//(b-a)\r\ndef INT(): return int(get_string())\r\ndef LIST(): return list(map(int, get_string()))\r\ndef string(): return get_string()\r\ndef I(): return int(string())\r\ndef F(): return list(map(int, F().split()))\r\ndef S(): return list(Sorted((F()),key=string()))\r\ndef INF(): return int(string())\r\ndef main():\r\n    b = INT()\r\n    v = get_ints()\r\n    t = INT()\r\n    ml = INT()\r\n    ml1 = INT()\r\n    M = INT()\r\n    for i in range(b):\r\n        M.append(INT())\r\n    for i in range(t):\r\n        M.append(INT())\r\n    for i in range(M):\r\n        T.append(M.pop())\r\n    #print(M,T)\r\n    ans = 100\r\n    for i in range(b):\r\n        if v[i] == 0:\r\n            ans -= 1\r\n        else:\r\n            if sum(v[:i+1]) < sum(v[i+1:])/2:\r\n                ans += 1\r\n    print(ans)\r\n                \r\n            "}, "2821": {"problem_id": 2821, "answer": "from sys import stdin,stdout\nfrom math import gcd,log2,ceil,sqrt,factorial,fmod,pi\nfrom collections import defaultdict as dd,deque\nfrom heapq import merge,heappop,heappush,nsmallest\nfrom bisect import bisect_left as bl,bisect_right as br,bisect for_\nfrom itertools import combinations as comb,combined,islice,accumulate as accumulate,insort\nfrom functools import reduce\nfrom fractions import Fraction as fr\nfrom operator import *\nfrom collections import deque,OrderedDict,defaultdict as dd,Counter as C\nfrom heapq import *\nfrom time import perf_counter\nperf_counter(1)\ndef ii(): return int(input())\ndef si(): return input()\ndef di(): return list(map(int,input().split()))\ndef nrof(n): return [i for i in range(n)]\ndef pe(n): return [i for i in range(n)]\ndef lt(x,y): return x>y\ndef gt(x,y): return x<y\ndef head(heap): return heap[0]\ndef tail(heap): return [heap.pop() for _ in range(n)]\ndef inv(a): return pow(a,0)\ndef modf(n,m): return Fraction(n%m,m)\ndef modin(n,m): return pow(n,m-1)\ndef powmod(a,b): return 1 if b==0 else modf(a,modin(b,modin(a,2*b)))\ndef ceil(a,b): return int(log2(a)+log2(b))\ndef ercnt(a,b): return a//pow(b,MODINV_ELCD,MODINV)\ndef erc(): return defaultdict(int)\ndef erl(): return defaultdict(list)\ndef erl1(a): return defaultdict(list) if a>1 else list(accumulate(accumulate(a[:2])));lsep=erl()\ndef erl2(a): return defaultdict(list) if a>1 else list(accumulate(lsep()[:2]))\ndef erlc(a): return lsep()[:a]\ndef erlcm(a,b): return a%b\ndef isprime(x): return all(x%i!=0 for i in range(2,int(sqrt(x))+1))\ndef nbs(n): return deque([] for i in range(n))\ndef conv(x): return x+1\ndef rint(a,b): return ord(b)-ord(a)\ndef rtd(n): return [rdiv(i,j) for (j,i) in enumerate(zip(n,rtd(n-j-1)))]\ndef rtdiv(n,m): return [rdiv(i,j) for (j,i) in enumerate(zip(n,rtd(m-j-1)))]\ndef rtdgcd(a,b): return gcd(b,a)\ndef rtdivas(n,m): return [rdiv(i,j) for (j,i) in enumerate(zip(n,rtd(m-j-1))) if i%j==0]\ndef rtdif(a,b): return [i for i in range(a,b+1) if not(i%2) and not(i%a) and not(i%b)]\ndef rtdist(a,b): return [i for i in range(a,b+1) if not(i%2) and not(i%a) and not(i%b)]\ndef rtdxor(a,b): return [i for i in range(a,b+1) if not(i%2) and not(i%a) and not(i%b)]\ndef rtdisjunk(a): return any(i for i in range(a+1,b+1) if not(i%2) and not(i%a) and not(i%b))\ndef rtdoumax(a,b): return [i for i in range(a,b+1) if not(i%2) and not(i%a) and not(i%b)]\ndef"}, "2822": {"problem_id": 2822, "answer": "import sys\nimport math\ndef II():\n return int(sys.stdin.readline())\n\ndef MI():\n return map(int,sys.stdin.readline().split())\n\ndef LI():\n return list(map(int,sys.stdin.readline().split()))\n\ndef SI():\n return sys.stdin.readline().strip()\n\ndef main():\n x1,y1,x2,y2 = MI()\n xb,yb = x2-x1,y2-y1\n \n tree_l = []\n for i in range(1,x1+1):\n  tree_l.append((i,i))\n \n for i in range(1,x2+1):\n  tree_l.append((i,i))\n \n for i in range(y1+1):\n  tree_l.append((i,i))\n \n for i in range(y2+1):\n  tree_l.append((i,i))\n \n print(\"Yes\" if tree_l[x1][y1]!=tree_l[x2][y2] else \"No\")\n \n for i in tree_l:\n  if tree_l[i[0]][yb]!=i[1]:\n   print(i[0],i[1])\n "}, "2823": {"problem_id": 2823, "answer": "n = input().split()\nn = int(n)\ns = input().split()\ns = list(s)\ns.sort()\nd = {}\nfor i in range(n):\n d[s[i]] = d.get(s[i],0)+1\nprint(min(d.get(c,0) for c in s))"}, "2824": {"problem_id": 2824, "answer": "import sys\ninput = sys.stdin.readline\nm=int(input())\nag=[]\nfor i in range(m):\n\tag.append(int(input()))\nag.sort()\na=ag[0]\nb=ag[m-1]\nif a==b:\n\tprint(a)\nelif a>b:\n\ta,b=b,a\nans=2**32-1\nfor i in range(m):\n\tif ag[i]<a:\n\t\tans=min(ans,ag[i])\nprint(ans)"}, "2825": {"problem_id": 2825, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n    b.append(a[i]+a[i-1])\nc=0\nfor i in range(1,n):\n    if b[i]>a[i]:\n        c+=b[i]-a[i]\nprint(c)"}, "2826": {"problem_id": 2826, "answer": "import sys\ninput = sys.stdin.readline\nq,n,d=list(map(int,input().split()))\nalph={}\nfor i in range(n):\n    alph[i+1]=input().rstrip()\n    \nfor i in range(2,q+1):\n    if q%i==0:\n        alpha[i]+=1\n    else:\n        alpha[i]+=q//i\nq2=int(input())\nd2=int(input())\ncnt=0\nfor i in range(q2):\n    cnt+=alph.get(alph[i],0)\nprint(cnt)\n"}, "2827": {"problem_id": 2827, "answer": "import collections as clc \nimport sys\ninput=sys.stdin.readline\ndef I(): return int(input())\ndef MI(): return list(map(int,input().split()))\ndef LI(): return list(map(int,input().split()))\nn,m=LI()\nh=[[-1]*m for i in range(n)]\nfor i in range(m):\n    a,b=LI()\n    h[a].append(b)\n    h[b].append(a)\ninfect=collections.defaultdict(lambda:-1)\ninfect[1]=0\nvisited=[0]*n\nres=0\nfor i in range(n):\n    if visited[i]==0:\n        visited[i]=1\n        res+=1\n        for j in h[i]:\n            if visited[j]==0:\n                visited[j]=1\n                res+=1\n                clc.collecta(infect,j)\n                clc.collecta(visited,i)\n"}, "2828": {"problem_id": 2828, "answer": "import sys\nn=int(input())\nwhile n:\n a=list(map(int,sys.stdin.readline().split()))\n a.sort()\n print(a[0]+\"a\"*26)\n n-=1\n"}, "2829": {"problem_id": 2829, "answer": "s = input()\nn = len(s)\na = [0]*26\nfor i in range(n):\n    a[ord(s[i])-97] += 1\n    a[ord(s[i])-122] += 1\nc = 0\nfor i in range(26):\n    c += a[i]\nprint(c)"}, "2830": {"problem_id": 2830, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n n, m = list(map(int, input().split()))\n s = set()\n for i in range(n):\n  s.add(input())\n mx}, "2831": {"problem_id": 2831, "answer": "import math\ndef solve(s, v):\n if s[0]!=-1:\n  return math.floor(s[0]/v)\n else:\n  return 0\nfor _ in range(int(input())):\n n=int(input())\n s=[int(i) for i in input().split()]\n v=[int(i) for i in input().split()]\n ans=solve(s, v)\n print(ans)"}, "2832": {"problem_id": 2832, "answer": "import sys\nimport math\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\ndef main():\n d, k = map(int, read().split())\n ans = []\n for i in range(d):\n  r, p = map(int, readline().split())\n  ans.append((r, p))\n print(sum(abs(p - ans[i][1])**2 for i in range(k)))\n__author__ = 'Ankit'\n\n# Made with IOLab Mi23b Printed with Beamsplitter\n\n# Made with IOLab Mi23b Printed with Beamsplitter\n"}, "2833": {"problem_id": 2833, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nR, C = list(map(int, input().split()))\nR = R[-1]\nC = C[-1]\nrot = [0]*R\nfor i in range(R):\n rot.append(rot[i]+45)\nangle = R%360\nR %= 360\nfor i in range(360):\n if i%2 == 0:\n  print(\" \"*angle)\n else:\n  print(\" \"*angle+\" \"*(angle+45), end=\"\")\n"}, "2834": {"problem_id": 2834, "answer": "n = int(input())\nlucky = []\nfor i in range(n):\n    if str(i) not in lucky:\n        lucky.append(str(i))\nprint(lucky[n-1])"}, "2835": {"problem_id": 2835, "answer": "def isSubstring(s, t):\n    n = len(s)\n    m = len(t)\n    if n == 0:\n        return True\n    if m == 0:\n        return True\n    if n > m:\n        return False\n    i = 0\n    j = 0\n    count = 0\n    while i < n:\n        if t[i] == s[j]:\n            count += 1\n        j += 1\n        i += 1\n    return count >= 1\n\ndef solve(s, t):\n    return sum(isSubstring(s, t) for i in range(len(s)))\n\ndef __starting_point():\n    s = input()\n    t = input()\n    print(solve(s, t))\n__starting_point()"}, "2836": {"problem_id": 2836, "answer": "import sys\ndef II():\n return int(sys.stdin.readline())\n\ndef SI():\n return sys.stdin.readline().rstrip()\n\nn = II()\na,b = SI()\nl = list(map(int, SI().split()))\nl.sort()\nfor i in range(n):\n    if l[i] == i:\n        print(i+1)\n        break\n"}, "2837": {"problem_id": 2837, "answer": "import math\ndef main():\n    n=int(input())\n    a=list(map(float,input().split()))\n    b=[]\n    for i in range(n):\n        b.append(a[i])\n    b.sort()\n    k=len(b)\n    ans=0.0\n    for i in range(1,k):\n        ans=(math.sqrt(abs(b[i]-b[i-1]))+math.sqrt(abs(b[i]-b[i-2])))\n        if(ans<10e-5):\n            ans=float(ans)\n        elif(ans<1e-10):\n            ans=int(ans)\n        else:\n            ans*=-1\n    print(int(ans))\nmain()"}, "2838": {"problem_id": 2838, "answer": "s = input()\nl = len(s)\nans = []\nfor i in range(l):\n    if s[i] == '(':\n        ans.append(s[i])\n    elif s[i] == ')':\n        ans.append(s[i])\nprint(' '.join(map(str,ans)))"}, "2839": {"problem_id": 2839, "answer": "import sys\ninput=sys.stdin.readline\nV,E,S,T=map(int,input().split())\nans=0\ng=[[] for _ in range(V)]\nfor _ in range(E):\n u,v,w=map(int,input().split())\n g[u-1].append((v-1,w))\n g[v-1].append((u-1,w))\n ans+=sum(1 for i in range(V) if g[i])\nprint(ans)"}, "2840": {"problem_id": 2840, "answer": "import numpy as np\r\nn = int(input())\r\narr = list(map(str, input().split()))\r\narr = np.array(arr)\r\nmoves = 0\r\nfor i in range(n):\r\n    if arr[i] == \"h\":\r\n        moves += 1\r\n    elif arr[i] == \"d\":\r\n        moves += 2\r\n    elif arr[i] == \"c\":\r\n        moves += 3\r\n    else:\r\n        moves += 1\r\nprint(moves)"}, "2841": {"problem_id": 2841, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nS = input().rstrip().split()\nA = [0]*N\nfor i in range(N):\n    A[i] = S[i]\nans = sum(A)//2\nprint(ans)"}, "2842": {"problem_id": 2842, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k=list(map(int,input().split()))\na=[[0]*n for i in range(n)]\na[0][0]=1\ns=set()\nfor i in range(1,n):\n    s.add(a[i-1][0])\n    for j in range(i):\n        a[i][j]=a[i-1][j]\n        a[i][j+1]=a[i-1][j]\nif n%2!=0:\n    print(0)\nelse:\n    for i in range(n):\n        for j in range(n):\n            if a[i][j]==s.pop():\n                print(k*min(a[i-1][k],a[i][j]))\n"}, "2843": {"problem_id": 2843, "answer": "import sys\nn=int(input())\nfor _ in range(n):\n    w=input().split()\n    a=[]\n    b=[]\n    c=[]\n    d=[]\n    e=[]\n    f=[]\n    g=[]\n    h=[]\n    i=[]\n    j=[]\n    k=[]\n    l=[]\n    m=[]\n    n=int(input())\n    for i in range(n):\n        a.append(w[i])\n        b.append(w[i])\n        c.append(w[i])\n        d.append(w[i])\n        e.append(w[i])\n        f.append(w[i])\n        g.append(w[i])\n        h.append(w[i])\n        i.append(w[i])\n        j.append(w[i])\n        k.append(w[i])\n        l.append(w[i])\n        m.append(w[i])\n        n.append(w[i])\n        if len(set(a))==len(set(b)):\n            print(len(a))\n        elif len(set(b))==len(set(c)):\n            print(len(b))\n        elif len(set(c))==len(set(d)):\n            print(len(c))\n        elif len(set(d))==len(set(e)):\n            print(len(d))\n        elif len(set(e))==len(set(f)):\n            print(len(e))\n        elif len(set(f))==len(set(g)):\n            print(len(f))\n        elif len(set(g))==len(set(h)):\n            print(len(g))\n        else:\n            print(0)\n        "}, "2844": {"problem_id": 2844, "answer": "r,c=list(map(int,input().split()))\narr=[]\nfor i in range(r):\n    arr.append(input())\n    arr.append(input())\n    arr.append(input())\n    arr.append(input())\ns=0\nfor i in range(c):\n    if arr[i].isalpha():\n        s+=1\n        if s==2:\n            print(\"KAKTUS\")\n        elif s==3:\n            print(\"KAKTUS\")\n        elif s==4:\n            print(\"KAKTUS\")\n        else:\n            print(\"KAKTUS\")\n            \n"}, "2845": {"problem_id": 2845, "answer": "from operator import itemgetter\nr, k = map(int, input().split())\nl = list(map(int, input().split()))\nans = k*(k-1)//2\nfor i in range(k):\n    ans -= l[i] - l[i-k]\nprint(ans)"}, "2846": {"problem_id": 2846, "answer": "import sys\nimport math\ndef II(): return int(sys.stdin.readline())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef LI2(): return list(map(int,sys.stdin.readline().split()))\ndef MI(): return map(int,sys.stdin.readline().split())\ndef S(n): return [int(i) for i in sys.stdin.readline().split()]\ndef lcm(a,b): return abs(a*b)//gcd(a,b)\ndef gcd(a,b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\nn = II()\ns = [0]*100000\nfor i in range(n):\n    c = lcm(s[i],s[i+1])\n    s[i+1] = c\nprint(s[-1])"}, "2847": {"problem_id": 2847, "answer": "from collections import defaultdict as dd\nm,s=list(map(int,input().split()))\nl=[]\nfor i in range(m):\n    l.append(list(map(int,input().split())))\npref=[0]*s\nsorted_pref=dd(int)\nfor i in range(s):\n    sorted_pref[l[i][1]-1]=i+1\n    \ndef dfs(i):\n    nonlocal l,pref,sorted_pref\n    if i>len(l):\n        return 0\n    if pref[i]==0:\n        return 1\n    else:\n        if sorted_pref[i]!=i:\n            return dfs(sorted_pref[i])\n        else:\n            return dfs(i)\n    "}, "2848": {"problem_id": 2848, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+7\nINF = float('INF')\n\n\ndef main():\n    n,r,k = map(int, readline().split())\n    l = [0]*(r+1)\n    for i in range(1,r+1):\n        l[i] = (l[i-1] + (k-1) * i) % MOD\n    print(l[r])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2849": {"problem_id": 2849, "answer": "import math\nn = int(input())\nans = 0\np = 10**9+7\nt = [0]*6\nfor i in range(n):\n    t[i] = int(math.log(i,2))+1\n    ans += t[i]*(t[i]-1)//2\nprint(ans%p)"}, "2850": {"problem_id": 2850, "answer": "n, k = list(map(int, input().split()))\nw = list(map(int, input().split()))\n\ndef calC(l):\n ans = 0\n for i in range(len(l)):\n  ans += w[i]\n return ans\n\nans = calC(list(range(1, n + 1)))\nans.sort()\n\nm = k // n\nans += calC(lrange(n, 0, -1))\nans.sort()\nprint(ans)\n"}, "2851": {"problem_id": 2851, "answer": "import sys\r\nimport math\r\ndef input(): return sys.stdin.readline().strip()\r\ndef iinput(): return int(input())\r\ndef finput(): return list(map(int, input().split()))\r\ndef linput(): return list(map(int, input().split()))\r\ndef rinput(): return list(reversed(list(map(int, input().split()))))\r\ndef sinput(): return input().split()\r\ndef lst(): return list(map(int, input().split()))\r\ndef rst(): return list(reversed(list(map(int, input().split()))))\r\ndef print_s(s): print(s, end=\"\")\r\ndef print_l(l): print(str(l), end=\"\")\r\ndef print_r(r): print(str(r), end=\"\")\r\ndef ceil(a, b):\r\n    if b == 0:\r\n        return a\r\n    else:\r\n        return ceil(b % 2, 2 * b // 2)\r\nn = iinput()\r\na = [int(x) for x in finput()]\r\nb = [int(x) for x in finput()]\r\nprint_s(a)\r\nprint_l(b)\r\nif 9 not in str(b)[0]:\r\n    print(\"\".join(map(str, b)))\r\nelse:\r\n    print(\"\".join(map(str, b), end=\"\"))"}, "2852": {"problem_id": 2852, "answer": "import math\nn = int(input())\nprob = list(map(int, input().split()))\ns = 0\nfor i in prob:\n s += i*(i+1)/2\nprint(math.log(s, 1e-6))"}, "2853": {"problem_id": 2853, "answer": "import sys\nreadline = sys.stdin.readline\nns = lambda: readline().rstrip('\\n')\nnl = lambda: list(map(int, readline().split()))\nerase = lambda x: [x for x in range(len(ns()))]\nread = lambda: int(readline())[1:][::-1]\np = lambda x: next(x for x in read())\ns = lambda x: sum(map(int, readline().split()))\nd = lambda x: dijkstra(x, W)\ng = lambda x: graph(x, W)\ne = lambda x: enumerate(x)\ncircles = lambda: list(g())\nisland = lambda: any(x in W for x in W)\nconnect = lambda x, y: any(x in y for x in W for y in W)\ndisjoint = lambda x, y: W[x] & W[y]\nW = {}\ndef dijkstra(x, W):\n    if len(x) == 1:\n        return W\n    W[x] = W[x] + 1\n    disjoint(x[1], x[0])\n    for i in range(1, len(x)):\n        U = W[x[i]]\n        V = W[y]\n        if disjoint(x[i], y[0]) and disjoint(x[i], y[1]):\n            W[x[i]] = V\n        elif disjoint(x[i], y[1]):\n            W[y[1]] = U\n    return W\ndef graph(x, W):\n    G = dict()\n    for y in W:\n        if x in G:\n            G[x].add(y)\n        else:\n            G[x] = {y}\n    return G\ndef __starting_point():\n    n, m = read()\n    W = {}\n    for i in range(m):\n        a, b = nl()\n        if a not in W:\n            W[a] = 1\n        elif b not in W:\n            W[b] = 1\n    print(*W, sep=' ')\n__starting_point()"}, "2854": {"problem_id": 2854, "answer": "from collections import defaultdict as dd\nn,m=list(map(int,input().split()))\na=dd(list)\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    a[x].append(y)\n    a[y].append(x)\nans=[]\nfor i in range(m):\n    a.remove(a[i])\n    ans.append((a[i][0]-a[i][1])/(a[i][0]-a[i][1]))\nprint(*ans,sep='\\n')\n"}, "2855": {"problem_id": 2855, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\nr = []\nfor _ in range(m):\n    a, b = map(int, readline().split())\n    r.append((a, b, abs(a-b)))\n\nans = 0\nfor i in range(n):\n    ans += abs(r[i][1] - r[i][0])*60\nprint(ans)"}, "2856": {"problem_id": 2856, "answer": "import sys\nimport math\ndef II():\n return int(sys.stdin.readline())\n\ndef MI():\n return map(int,sys.stdin.readline().split())\n\ndef SI():\n return sys.stdin.readline().rstrip()\n\ndef main():\n n=II()\n s=SI()\n print(len(s))\n for i in range(1,n):\n  a=s[i]\n  b=s[i-1]\n  if a==b:\n   print(1)\n  elif a!=b:\n   print(2)\n  else:\n   print(3)\nmain()\n"}, "2857": {"problem_id": 2857, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\na.sort()\ns = 0\nfor i in range(n):\n    s += a[i].count(1)\nprint(s)\n"}, "2858": {"problem_id": 2858, "answer": "import sys\nimport math\ndef input():\n    return sys.stdin.readline().strip()\nn = int(input())\na = [0]*n\nfor i in range(n):\n    a[i] += 1\nans = 0\nfor i in range(n):\n    if a[i] == 1:\n        ans += 1\n    else:\n        ans += 2*(a[i]-1)\nprint(ans)"}, "2859": {"problem_id": 2859, "answer": "import math\ndef __starting_point():\n xv, yv, r = map(int, input().split())\n xv -= xv % 4\n yv -= yv % 4\n xv %= 2\n yv %= 2\n r *= math.sqrt(xv**2 + yv**2)\n sim = (xv, yv, r)\n sim.sort()\n count = 0\n while sim:\n  center = sim[0]\n  tangent = sim[1]\n  tangent.rotate(math.pi/2)\n  p = center[0]\n  q = center[1]\n  p -= tangent[0]\n  q -= tangent[1]\n  center[0] += tangent[0]\n  center[1] += tangent[1]\n  center[0] %= 2\n  center[1] %= 2\n  tangent[0] *= -1\n  tangent[1] *= -1\n  tangent[0] *= -1\n  tangent[1] %= 2\n  tangent[0] %= 2\n  tangent[1] %= 2\n  if abs(center[0] - center[1]) > 4 * r:\n   count += 1\n  elif abs(center[0] - center[1]) == 4 * r:\n   count += 1\n  elif abs(center[0] - center[1]) > 2 * r:\n   count += 1\n  elif center[0] == center[1]:\n   count += 1\n print(count)"}, "2860": {"problem_id": 2860, "answer": "n = int(input())\na = []\nfor i in range(n-1):\n    a.append(input().split())\n    a[i].endswith('.')\n    a[i].startswith('P')\n    a[i].translate(str.maketrans('.',''))\n    a[i] = a[i][len(a[i])-1:-1]\nprint(len(a))"}, "2861": {"problem_id": 2861, "answer": "r = int(input())\nfor i in range(26):\n    s = input()\n    rec = \"\"\n    for i in range(26):\n        if ord(s[i])-97 == i:\n            rec+=chr(i+97)\n        elif ord(s[i])-97!= i:\n            rec+=chr(i+97)\n    print(min(rec.count(\"ABCDE\")-1, rec.count(\"DEF\"))+1)\n"}, "2862": {"problem_id": 2862, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nR = list(map(int, input().split()))\nR.sort()\nS = [0]*(N+1)\nfor i in range(1, N+1):\n    S[i] += R[i-1]\n\nD = {}\nfor i in range(M):\n    u, v, w = map(int, input().split())\n    D[u] = D.get(u, 0) + w\n    D[v] = D.get(v, 0) + w\n\nans = 0\nfor i in range(N):\n    ans += D[i]\nprint(ans)"}, "2863": {"problem_id": 2863, "answer": "import sys\nimport math\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI2(): return list(map(int,sys.stdin.readline().rstrip()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\ndef LS2(): return list(sys.stdin.readline().rstrip())\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [MI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef ISpeed(s): return ''.join(str(i) for i in range(s))\ndef LISpeed(s): return''.join(map(ISpeed,range(s+1)))\ndef ILCI(n): return [int(i) for i in sys.stdin.readline().rstrip().split()][:n]\ndef IIP(n): return [int(i) for i in sys.stdin.readline().rstrip().split()][:n]\ndef ILI(n): return [int(i) for i in sys.stdin.readline().rstrip().split()][:n]\ndef SI(n): return sys.stdin.readline().rstrip()\ndef LSI(n): return [int(i) for i in sys.stdin.readline().rstrip().split()][:n]\ndef Sieve(n):\n    i = 2\n    while i <= n:\n        if (n % i) == 0:\n            i += 1\n            while n % i == 0:\n                n /= i\n        i += 1\n    return i\ndef Solve(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        ans = 0\n        for i in range(2,n+1):\n            ans += IIP(n-i)\n        return ans\ndef __starting_point():\n    k = I()\n    d = LI()\n    print(k)\n    for i in range(k):\n        d[i] = I()\n    for i in range(k):\n        LIR(i)\n        LISpeed(i)\n        Sieve(i)\n    print(max(d))\n__starting_point()"}, "2864": {"problem_id": 2864, "answer": "import sys\ndef main():\n n=int(input())\n l=list(map(int,input().strip().split()))\n if n<3:\n  print('?')\n else:\n  for i in range(n):\n   person,weapon,room=l[i]\n   if person=='*':\n    print('E??')\n   elif person=='B':\n    print('G')\n   elif person=='I':\n    print('H')\n   else:\n    print('A')\n  "}, "2865": {"problem_id": 2865, "answer": "import sys\nreadline = sys.stdin.readline\n\nT = int(readline())\nN = int(readline())\nN = len(N)\nS = list(map(int, readline().split()))\n\n# A = [0]*(N+1)\n# B = [0]*(N+1)\n\nans = [0]*(N+1)\n\nfor i in range(1, N+1):\n    A[i] = S[i]\n    B[i] = S[i-1]\n    ans[i] = max(4.4, A[i] - B[i])\n\nprint('bumper tap at time %s' % (min(ans, T)) if ans else'safe and sound')"}, "2866": {"problem_id": 2866, "answer": "import collections\ns=input()\nd=collections.Counter(s)\nn=10**9+7\nfor i in d.keys():\n if d[i]>n:\n  n=d[i]\n \nprint(n)"}, "2867": {"problem_id": 2867, "answer": "from math import ceil\ndef f(n,k):\n    if k==0:\n        return 1\n    ans=0\n    for i in range(ceil(n**.5):n+1):\n        ans+=(k*f(n-i,k))\n    return ans\nprint(f(10,2))\n"}, "2868": {"problem_id": 2868, "answer": "import sys\ninput = sys.stdin.readline\n\nX = int(input())\ns = input().split()\na = []\nfor i in range(1, len(s)):\n    a.append(s[i])\n\nb = []\nfor i in range(1, len(s)):\n    b.append(s[i])\n\nc = 0\nfor i in range(X):\n    if a[i] == b[i]:\n        c += 1\n\nprint(\"\".join(a))"}, "2869": {"problem_id": 2869, "answer": "import re\nn = int(input())\nans = ''.join(sorted(reversed(list(input()))))\nprint(ans)"}, "2870": {"problem_id": 2870, "answer": "import math\np,q=list(map(int,input().split()))\nh,w=list(map(int,input().split()))\nif h==1 and math.ceil(q/2)==w:\n    print(0)\nelif h==2 and math.ceil(q/2)==h:\n    print(h-1)\nelse:\n    a=p\n    b=q\n    c=0\n    d=0\n    e=0\n    f=0\n    g=0\n    h=0\n    i=0\n    j=0\n    k=0\n    l=0\n    m=0\n    n=0\n    o=0\n    p=0\n    q=0\n    while a!=1 and b!=1:\n        if a==1:\n            c+=1\n            a-=2\n        elif b==1:\n            d+=1\n            b-=2\n        else:\n            e+=1\n            g+=1\n            h+=1\n            i+=1\n            j+=1\n            k+=1\n            l+=1\n            m+=1\n            n+=1\n            o+=1\n            p+=1\n            q+=1\n            p%=2\n            q%=2\n            c-=1\n            d-=1\n            e-=1\n            f-=1\n            g-=1\n            h-=1\n            i-=1\n            j-=1\n            k-=1\n            l-=1\n            m-=1\n            n-=1\n            o-=1\n            p-=1\n            q-=1\n            p%=2\n            q%=2\n            c-=1\n            d-=1\n            e-=1\n            f-=1\n            g-=1\n            h-=1\n            i-=1\n            j-=1\n            k-=1\n            l-=1\n            m-=1\n            n-=1\n            o-=1\n      "}, "2871": {"problem_id": 2871, "answer": "import sys\r\nimport math\r\ndef input(): return sys.stdin.readline().strip()\r\ndef iinput(): return int(input())\r\ndef finput(): return list(map(int, input().split()))\r\ndef tinput(): return list(map(int, input().split()))\r\ndef rinput(): return list(map(int, r) for r in tinput())\r\ndef lsinput(): return list(map(int, ls) for ls in rinput())\r\ndef lminput(): return list(map(int, lm) for lm in rinput())\r\ndef siinput(): return input().rstrip('\\n')\r\ndef sminput(): return int(input())\r\ndef lssinput(): return list(s[:sinput()].rstrip('\\n') for s in tinput())\r\ndef siStdin(): return input().rstrip('\\n')\r\ndef lssStdin(): return list(s[:sinput()].rstrip('\\n') for s in tinput())\r\ndef segfunc(x): return 1 if x == 0 else 0\r\ndef segfunc2(x, y): return x//y\r\ndef sep(lst): return \", \" + sep(lst)\r\ndef sep2(lst): return \", \" + sep2(lst, 1)\r\ndef sep3(lst): return \", \" + sep3(lst, 2)\r\ndef sep4(lst): return \", \" + sep4(lst, 3)\r\ndef sep5(lst): return \", \" + sep5(lst, 4)\r\ndef sep6(lst): return \", \" + sep6(lst, 5)\r\ndef sep7(lst): return \", \" + sep7(lst, 6)\r\ndef sep8(lst): return \", \" + sep8(lst, 7)\r\ndef sep9(lst): return \", \" + sep9(lst, 8)\r\ndef sep10(lst): return \", \" + sep10(lst, 9)\r\ndef sep11(lst): return \", \" + sep11(lst, 10)\r\ndef sep12(lst): return \", \" + sep12(lst, 11)\r\ndef sep13(lst): return \", \" + sep13(lst, 12)\r\ndef sep14(lst): return \", \" + sep14(lst, 13)\r\ndef sep15(lst): return \", \" + sep15(lst, 14)\r\ndef sep16(lst): return \", \" + sep16(lst, 15)\r\ndef sep17(lst): return \", \" + sep17(lst, 16)\r\nn, k = finput()\r\na = [0]*n\r\na[0] = 1\r\nfor i in range(1, n):\r\n    a[i] = iinput()\r\nb = sorted(a, reverse=True)\r\nc = []\r\nd = []\r\ne = []\r\nf = []\r\ng = []\r\nh = []\r\ni = 0\r\nj = 0\r\nk = 0\r\nwhile i < n:\r\n    c.append(a[i])\r\n    d.append(b[i])\r\n    i += 1\r\nwhile e:\r\n    e.pop()\r\n    i -= 1\r\nwhile g:\r\n    g.pop()\r\n    j += 1\r\nwhile h:\r\n    h.pop()\r\n    k += 1\r\nsep(c)\r\nsep2(d, 1)\r\nsep3(e, 2)\r\nsep4(g, 3)\r\nsep5(h, 4)\r\nsep6(i, 5)\r\nsep7(j, 6)\r\nsep8(k, 7)\r\nsep9(l, 8)\r\nsep10(segfunc(i), 9)\r\nsep11(segfunc2(j, 10), 11)\r\nsep12(segfunc3(l, 12), 13)\r\nsep13(segfunc4(segfunc(i), 13), 14)\r\nsep14(segfunc5(segfunc(j), 15), 16)\r\nsep15(segfunc6"}, "2872": {"problem_id": 2872, "answer": "import re\nd = int(input())\ns = input()\na = re.findall(r'\\d{2}(DEC|APR|DEC)',s)\nb = re.findall(r'\\d{2}(JAN|FEB|APR|DEC)',s)\nc = re.findall(r'\\d{2}(JAN|FEB|APR|DEC)',s)\nif d==29:\n print(':(',end='')\n else:\n print(')',end='')\nfor i in a:\n print(i,end='')\nfor i in b:\n print(i,end='')\nfor i in c:\n print(i,end='')\n"}, "2873": {"problem_id": 2873, "answer": "s = input()\ncount = 0\nfor i in range(len(s)):\n    if s[i] == '_':\n        count += 1\nprint(count)"}, "2874": {"problem_id": 2874, "answer": "from collections import deque\r\nn,m = map(int,input().split())\r\np = list(map(int,input().split()))\r\nt = list(map(int,input().split()))\r\nans = 0\r\ndeq = deque([i for i in range(n)])\r\nwhile deq:\r\n    i = deq.popleft()\r\n    ans += 1\r\n    for j in p[i:]:\r\n        if j == i:\r\n            continue\r\n        else:\r\n            deq.append(j)\r\nprint(ans)"}, "2875": {"problem_id": 2875, "answer": "import collections\nn=int(input())\na=list(map(int,input().split()))\na.sort()\nif a[n-1]>a[n-2]:\n    print('impossible')\nelse:\n    print('impossible',end=\" \")\n    for i in range(n-2):\n        print(a[i],end=\" \")\n    print()"}, "2876": {"problem_id": 2876, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nl = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    l.append((x, y))\n\nl.sort()\n\ndef isclose(x, y):\n    return abs(x - y) <= 1e-4"}, "2877": {"problem_id": 2877, "answer": "def game(s):\n a=s.split()\n b=[]\n for i in range(1,26):\n  b.append(s[::-1].replace(chr(65),'abcdefghijklmnopqrstuvwxyz'))\n return ''.join(b)\n\ndef __starting_point():\n game(input())\n\n__starting_point()"}, "2878": {"problem_id": 2878, "answer": "import numpy as np\nn = int(input())\narr = []\nfor i in range(n):\n arr.append(input().strip().lower())\narr.append('.')\narr.append(''.join(arr[::-1]))\n\ndef get_triplets(grid, n):\n triplets = 0\n for i in range(n):\n  for j in range(i+1, n):\n   if arr[i][j] == '.':\n    triplets += 1\n   elif arr[i][j] == grid[i][j]:\n    triplets += 1\n   else:\n    break\n return triplets\n\nprint(get_triplets(arr, n))"}, "2879": {"problem_id": 2879, "answer": "h,w=list(map(int,input().split()))\nA=[]\nfor i in range(h):\n    A.append(input().replace(\".\",\"\"))\nB=[]\nfor i in range(h):\n    B.append([0]*w)\nfor i in range(h):\n    for j in range(w):\n        B[i][j]=1\nM=[]\nfor i in range(h):\n    M.append([0]*w)\nfor i in range(h):\n    for j in range(w):\n        M[i][j]=1\ndef check(A,B):\n    nonlocal M\n    nonlocal B\n    for i in range(len(A)):\n        if A[i]==B[i]:\n            continue\n        elif A[i]!=B[i]:\n            return False\n        else:\n            check(A[i+1:],B[i+1:])\n    return True\nprint(\"\\n\".join(map(str,M)))\n"}, "2880": {"problem_id": 2880, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\nR,C = map(int,input().split())\n\nans = R*C\n\nfor i in range(R):\n ans = ans - R*sum(list(map(int,input().split())))\nprint(ans)"}, "2881": {"problem_id": 2881, "answer": "# cook your dish here\na,b=input().split()\na=int(a)\nb=int(b)\nif a==b:\n print('yes')\nelse:\n print('no')"}, "2882": {"problem_id": 2882, "answer": "class Solution:\n     def generateParenthesis(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: List[str]\n         \"\"\"\n         ret = []\n         for i in range(1, n+1):\n             ret.append('(')\n             ret.append(')')\n         return ret"}, "2883": {"problem_id": 2883, "answer": "class Solution:\n     def merge(self, intervals):\n         \"\"\"\n         :type intervals: List[List[int]]\n         :rtype: List[List[int]]\n         \"\"\"\n         intervals.sort(key=lambda x: x[1])\n         overlaps = []\n         for i in range(len(intervals)):\n             if i > 0 and intervals[i][0] + 1 > intervals[i - 1][0]:\n                 overlaps.append(intervals[i][1])\n         "}, "2884": {"problem_id": 2884, "answer": "class Solution:\n     def combinationSum2(self, candidates, target):\n         \"\"\"\n         :type candidates: List[int]\n         :type target: int\n         :rtype: List[List[int]]\n         \"\"\"\n         from collections import Counter\n         c = Counter(candidates)\n         res = []\n         for i in c:\n             if i == target:\n                 res.append(c)\n             elif c[i] > target:\n                 continue\n             else:\n                 res.append([i] + c[i])\n         return res"}, "2885": {"problem_id": 2885, "answer": "class Solution:\n     def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:\n         \"\"\"\n         :type intervals: List[List[int]]\n         :type newInterval: List[int]\n         :rtype: List[List[int]]\n         \"\"\"\n         l = []\n         for i in range(len(intervals)):\n             l.append([i[0], i[1]])\n         "}, "2886": {"problem_id": 2886, "answer": "import sys\ninput = sys.stdin.readline\n\ns = input().rstrip()\nn = len(s)\n\n# \u5b58\u5728\u3059\u3079\u3066\u306e\u6587\u5b57\u6570\nbalance = [0]*10**5\nfor i in range(n):\n    if s[i]!= s[-i-1]:\n        balance[i+1] += 1\n\nprint(\"\".join(map(str, balance)))\n"}, "2887": {"problem_id": 2887, "answer": "n = int(input())\nl = list(map(int,input().split()))\nt = list(map(int,input().split()))\nl.sort()\nfor i in range(n):\n print(l[i]*t[i]//(60*60))"}, "2888": {"problem_id": 2888, "answer": "#!/usr/bin/env python3\n\ndef solve(n,s,a):\n nonlocal a\n a.append(s*a[-1])\n for i in range(1,n):\n  a[i]+=a[i-1]*s\n return a[-1]\n\ndef main():\n n,s=list(map(int,input().split()))\n a=list(map(int,input().split()))\n print(solve(n,s,a))\n\ndef __starting_point():\n main()\n\n__starting_point()"}, "2889": {"problem_id": 2889, "answer": "from bisect import bisect_left\nl = int(input())\na = [list(map(int,input().split())) for i in range(l)]\nd = {}\nfor i in a:\n    d[i[0]] = i[1]\n    d[i[0] + i[2]] = i[2]\nmw = sorted(d.items(), key=lambda x: x[1])[::-1]\nprint(*mw,sep='\\n')\n"}, "2890": {"problem_id": 2890, "answer": "n,m,k1,k2 = map(int, input().split())\nt = [list(map(int, input().split())) for i in range(n)]\nt.sort()\ncnt = 0\nfor u, v, x, c in t:\n    if u == v:\n        continue\n    if c == 0:\n        cnt += 1\n    elif c == 1:\n        cnt -= 1\n    else:\n        if cnt > k1:\n            k1 = cnt\n        if cnt > k2:\n            k2 = cnt\nprint(k1 if k1 <= k2 else -1)"}, "2891": {"problem_id": 2891, "answer": "from math import *\nfrom collections import *\nfrom bisect import *\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(1,n):\n b.append((a[i]-1)**2+(a[i]-2)**2)\nprint(b[b.index(max(b))])"}, "2892": {"problem_id": 2892, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\nn=int(input())\narr=[int(i) for i in input().split()]\narr.append(501)\nans=0\nfor i in range(1,501):\n    ans+=arr[i]//arr[i-1]\nprint(ans)"}, "2893": {"problem_id": 2893, "answer": "n=int(input())\na=[]\nfor i in range(n):\n    a.append(int(input()))\nc=0\nfor i in range(n):\n    if a[i]>i:\n        c+=1\nprint(c)"}, "2894": {"problem_id": 2894, "answer": "import math\ndef read_int():\n return int(input())\n\n\ndef read_ints():\n return list(map(int, input().split(' ')))\n\n\ndef __starting_point():\n L, K, T1, T2, H = read_ints()\n l = H*K*T1*T2\n h = math.ceil(l/K)\n l %= K\n print('%.6f' % l)\n print('%.6f' % H)\n\n__starting_point()"}, "2895": {"problem_id": 2895, "answer": "from math import *\n\ndef solve():\n    n = int(input())\n    xs, ys, xf, yf = map(int, input().split())\n    speed = list(map(int, input().split()))\n    d = [abs(x) for x in speed]\n    d.sort()\n    l = list(map(int, input().split()))\n    l.sort()\n    h = len(l)\n    ans = 99999999999\n    for i in range(h):\n        ans = min(ans, l[i] - xs)\n        ans = min(ans, abs(xs - ys) - abs(ys - xf))\n        ans = min(ans, d[i] - speed[i])\n        ans = min(ans, h - i - 1 + 1 + d[i])\n        ans = min(ans, l[i] - ys)\n        ans = min(ans, abs(xs - ys) - abs(ys - xf))\n        ans = min(ans, d[i] - speed[i])\n        ans = min(ans, h - i - 1 + 1 + d[i])\n        ans = min(ans, l[i] - xs)\n        ans = min(ans, abs(xs - ys) - abs(ys - xf))\n        ans = min(ans, d[i] - speed[i])\n        ans = min(ans, h - i - 1 + 1 + d[i])\n        ans = min(ans, l[i] - ys)\n        ans = min(ans, abs(xs - ys) - abs(ys - xf))\n        ans = min(ans, d[i] - speed[i])\n        ans = min(ans, h - i - 1 + 1 + d[i])\n        ans = min(ans, l[i] - ice)\n        ans = min(ans, abs(xs - ys) - abs(ys - xf))\n        ans = min(ans, d[i] - speed[i])\n        ans = min(ans, h - i - 1 + 1 + d[i])\n        ans = min(ans, l[i] - ice)\n        ans = min(ans, abs(xs - ys) - abs(ys - xf))\n        ans = min(ans, d[i] - speed[i])\n        ans = min(ans, h - i - 1 + 1 + d[i])\n        ans = min(ans, l[i] - sand)\n        ans = min(ans, abs(xs - ys) - abs(ys - xf))\n        ans = min(ans, d[i] - speed[i])\n        ans = min(ans, h - i - 1 + 1 + d[i])\n        ans = min(ans, l[i] - ice)\n        ans = min(ans, abs(xs - ys) - abs(ys - xf))\n        ans = min(ans, d[i] - speed[i])\n        ans = min(ans, h - i - 1 + 1 + d[i])\n        ans = min(ans, l[i] - ice)\n        ans = min(ans, abs(xs - ys) - abs(ys - xf))\n        ans = min(ans, d[i] - speed[i])\n        ans = min(ans, h"}, "2896": {"problem_id": 2896, "answer": "import sys\r\nreadline = sys.stdin.readline\r\nreadline()\r\nn = int(readline())\r\na = list(map(int,readline().split()))\r\nb = []\r\nfor i in range(n):\r\n    b.append(a[i])\r\n    \r\nans = min(b)\r\nprint(ans)"}, "2897": {"problem_id": 2897, "answer": "import sys\nreadline = sys.stdin.readline\n\nR,C=list(map(int,readline().split()))\n\ndef f(x):\n return bin(x)[2:].zfill(C)\n\nfor _ in range(R):\n r,c=list(map(int,readline().split()))\n if r==0:\n  print(\"neither\")\n elif c==0:\n  print(\"decimal\")\n else:\n  q=f(r-1,c-1)\n  if q==\"0\":\n   print(\"neither\")\n  else:\n   print(\"decimal\")\n"}, "2898": {"problem_id": 2898, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na, b = [int(i) for i in input().split()]\nd = a//b\ne = a%b\nf = a//100*b\ng = a%100*b\nh = a//10**9\ni = 0\nj = 0\nans = 0\nwhile i<n:\n if i%2==0:\n  ans += d\n  d*=2\n elif i%2!=0:\n  ans += e\n  e*=2\n else:\n  ans += f\n  f*=2\nprint(ans)"}, "2899": {"problem_id": 2899, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\na = [0]*n\nfor i in range(n-1):\n    b,c = list(map(int,read().split()))\n    a[i] = b+c\nprint(*a)"}, "2900": {"problem_id": 2900, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nSTART = 'AABA'\ndef main():\n    s = START[1::2]\n    n = len(s)\n    d = [[0]*2 for _ in range(n)]\n    for i in range(n):\n        d[i][0] = 1\n        d[i][1] = d[i][0]+1\n    for i in range(2,n):\n        for j in range(i):\n            if s[j] == START[i]:\n                d[i][j] = d[i-1][j]\n            else:\n                d[i][j] = d[i-1][j]+1\n    print(sum(d[n-1]))\n\n\nmain()\n"}, "2901": {"problem_id": 2901, "answer": "import collections\nc=int(input())\ndef merge(a,b):\n    a.add(b)\n    b.add(a)\nfor i in range(c):\n    a=list(map(str,input().split()))\n    b=list(map(str,input().split()))\n    merge(a,b)\nif len(set(a.keys()))==1:\n    print(\"yes\")\nelse:\n    print(\"no\")"}, "2902": {"problem_id": 2902, "answer": "c,n,m=map(int,input().split())\na=[]\nfor i in range(m):\n    a.append(int(input()))\nb=0\nfor i in range(n):\n    if a[i]>c:\n        b+=1\n    else:\n        c-=a[i]\nprint(b)"}, "2903": {"problem_id": 2903, "answer": "import sys\ninput = sys.stdin.readline\n\nn, q = list(map(int, input().split()))\nf = [0]*n\nfor _ in range(q):\n    i = int(input())\n    if i == '+':\n        f[i] = int(input())\n    else:\n        print(f[i])\n"}, "2904": {"problem_id": 2904, "answer": "import sys\nreadline = sys.stdin.readline\nR,C=list(map(int,readline().split()))\ns=[[int(x) for x in input().split()] for _ in range(R)]\ns.sort()\nN=len(s)\ndef solve(i,j):\n    if i>j:\n        return 0\n    if s[i][j]==\"-\":\n        return N\n    ans=solve(i+1,j)\n    ans+=(N-s[i][j])*(N-s[i][j])\n    return ans\nprint(\"\\n\".join(map(str,s)))"}, "2905": {"problem_id": 2905, "answer": "import collections\nh,b=map(int,input().split())\nl=list(map(int,input().split()))\nfor i in range(h):\n l[i]=l[i]*b\nb=b*(l.count(8,1))\nprint(b)"}, "2906": {"problem_id": 2906, "answer": "n,m=map(int,input().split())\nif n==1:\n if m==1:\n  print(1)\n elif m==2:\n  print(2)\n else:\n  print(n-1)\n \nelse:\n if m==1:\n  print(m)\n elif m==2:\n  print(2)\n else:\n  a,b=map(int,input().split())\n  if a>1:\n   print(a)\n  else:\n   print(b)\n"}, "2907": {"problem_id": 2907, "answer": "import math\ndef encode(s, offset):\n if math.ceil(math.log2(len(s))/math.log(offset))>offset:\n  return \"Boris\"\n else:\n  return \"Colleague\"\nfor _ in range(int(input())):\n s=input()\n offset=int(input())\n n=int(input())\n if(len(s)>50):\n  if(ord(s[0])<=97 and ord(s[-1])<=122):\n   print(\"Boris\")\n  else:\n   print(\"Colleague\")\n else:\n  offset+=2\n  encode(s,offset)"}, "2908": {"problem_id": 2908, "answer": "n,s=map(int,input().split())\nl=list(map(int,input().split()))\na=s//n\nb=s%n\nif a==0:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "2909": {"problem_id": 2909, "answer": "import math\nn = int(input())\na = input().split()\nb = input().split()\na = list(a)\nb = list(b)\na.rotate(0)\nb.rotate(0)\ns = 0\nfor i in range(1,len(a)):\n    if a[i] > b[i]:\n        s = i\n        break\nif s == math.ceil(math.sqrt(n)):\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}, "2910": {"problem_id": 2910, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nA = list(map(int, readline().split()))\nB = list(map(int, readline().split()))\n\ndef isok(x):\n  return x.bit_length()%2==0\n\np = [0]*(n+1)\nfor i in range(1, n+1):\n  p[i] = p[i-1] + A[i-1]\n\nans = []\nfor i in range(n):\n  ans.append(p[i]*3)\n\nprint(*ans, sep='\\n')\n"}, "2911": {"problem_id": 2911, "answer": "import math as m\nn, t = map(int, input().split())\ns = 0\nfor _ in range(n):\n    x = int(input())\n    s += x\n    if x < m.ceil(t / x):\n        s %= (m.ceil(t / x)) * (m.ceil(t / x) - 1)\nprint(s)"}, "2912": {"problem_id": 2912, "answer": "from collections import Counter\nn = int(input())\na = []\nfor i in range(n):\n    a.append(input())\n    a.append(input())\ncnt = Counter(a)\ns = \"\".join(sorted(cnt.keys()))\nprint(s[-1])"}, "2913": {"problem_id": 2913, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, c, r, s = list(map(int, readline().split()))\na = [0]*n\nfor i in range(n):\n    a[i] = list(input())[:-1]\n\ndef checkmirror(x, y):\n    return abs(x-y)<=r\n\nlaser = []\nsensor = []\n\nfor i in range(n):\n    if i not in (c, r) or i!=n-1:\n        continue\n    x, y = i, n-1\n    while abs(x-y)>=r:\n        x, y = y, x\n    mirror = checkmirror(x, y)\n    if mirror:\n        laser.append(x)\n    else:\n        laser.append(y)\n\nprint(\"YES\" if len(laser)>0 else \"NO\")\n"}, "2914": {"problem_id": 2914, "answer": "n,s,k=map(int,input().split())\na=n//s\nb=n%s\nprint(0.01*(1.0+a*pow(b,2)))"}, "2915": {"problem_id": 2915, "answer": "import numpy as np\r\nn,k=map(int,input().split())\r\nl=[]\r\nfor i in range(n):\r\n\tl.append(list(map(int,input().split())))\r\nl.sort()\r\nm=np.ceil(k/l[0][1])\r\na=np.ceil(k/l[1][0])\r\nb=np.ceil(k/l[2][0])\r\nc=np.ceil(k/l[3][0])\r\nd=np.ceil(k/l[4][0])\r\ne=0\r\nfor i in range(m):\r\n\ta=min(a,l[i][0])\r\n\tb=min(b,l[i][1])\r\n\tc=min(c,l[i][2])\r\n\td=min(d,l[i][3])\r\n\te=max(e,l[i][4])\r\nprint(abs(e-max(a-b-c-d,0)))"}, "2916": {"problem_id": 2916, "answer": "import bisect as b\nn=int(input())\na=[]\nfor i in range(n):\n    t,k=map(int,input().split())\n    a.append((t,k))\na.sort()\nb.heapify(a)\nc=0\nfor i in range(n):\n    l=list(map(int,input().split()))\n    l.sort()\n    if l[0]>c:\n        c=l[0]\n        print(i+1)\n    else:\n        b.insort(a,(l[1],l[2]))"}, "2917": {"problem_id": 2917, "answer": "import math\ndef c(n):\n if n==0:\n  return 1\n elif n==1:\n  return 2\n else:\n  a=math.pow(2,n)-1\n  return (a*a)%1000000007\ntry:\n n=int(input())\n s=c(n)\n print(s)\nexcept:\n pass"}, "2918": {"problem_id": 2918, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nmx = [[0]*n for i in range(n)]\nfor i in range(n):\n    mx[i][i] = '1'\nans = []\nfor i in range(n):\n    c = mx[i][n-1]\n    if c == '1':\n        ans.append(i)\n    elif c == '0':\n        ans.append(n-1-i)\nprint(' '.join(map(str, ans)))\n"}, "2919": {"problem_id": 2919, "answer": ""}, "2920": {"problem_id": 2920, "answer": "import math\ndef II():\n return int(input())\ndef MI():\n return map(int,input().split())\ndef LI():\n return list(map(int,input().split()))\nMOD = pow(10,9)+7\nn,arr=II(),[]\nfor i in range(n):\n if arr[i]==\"#\":\n  arr.append(i+1)\n else:\n  arr.append(i+1)\nl=len(arr)\nfor i in range(l):\n print(arr[i]%MOD)"}, "2921": {"problem_id": 2921, "answer": "import numpy as np\nm=int(input())\nu=int(input())\nd=list(map(int,input().split()))\ndrink='{}/{} {}/{}'.format(1 if m==0 else m*0.02,u,d[0],d[1])\nml=np.array(drink.split(' '))\nml=ml[::-1]\nml=ml[1:]\nml=ml[0]*.01\nml=ml[1]*.01\nml=ml[2]*.01\nml=ml[3]*.01\nml=ml[4]*.01\nml=ml[5]*.01\nml=ml[6]*.01\nml=ml[7]*.01\nml=ml[8]*.01\nml=ml[9]*.01\nml=ml[10]*.01\nml=ml[11]*.01\nml=ml[12]*.01\nml=ml[13]*.01\nml=ml[14]*.01\nml=ml[15]*.01\nml=ml[16]*.01\nml=ml[17]*.01\nml=ml[18]*.01\nml=ml[19]*.01\nml=ml[20]*.01\nml=ml[21]*.01\nml=ml[22]*.01\nml=ml[23]*.01\nml=ml[24]*.01\nml=ml[25]*.01\nml=ml[26]*.01\nml=ml[27]*.01\nml=ml[28]*.01\nml=ml[29]*.01\nml=ml[30]*.01\nml=ml[31]*.01\nml=ml[32]*.01\nml=ml[33]*.01\nml=ml[34]*.01\nml=ml[35]*.01\nml=ml[36]*.01\nml=ml[37]*.01\nml=ml[38]*.01\nml=ml[39]*.01\nml=ml[40]*.01\nml=ml[41]*.01\nml=ml[42]*.01\nml=ml[43]*.01\nml=ml[44]*.01\nml=ml[45]*.01\nml=ml[46]*.01\nml=ml[47]*.01\nml=ml[48]*.01\nml=ml[49]*.01\nml=ml[50]*.01\nml=ml[51]*.01\nml=ml[52]*.01\nml=ml[53]*.01\nml=ml[54]*.01\nml=ml[55]*.01\nml=ml[56]*.01\nml=ml[57]*.01\nml=ml[58]*.01\nml=ml[59]*.01\nml=ml[60]*.01\nml=ml[61]*.01\nml=ml[62]*.01\nml=ml[63]*.01\nml=ml[64]*.01\nml=ml[65]*.01\nml=ml[66]*.01\nml=ml[67]*.01\nml=ml[68]*.01\nml=ml[69]*.01\nml=ml[70]*.01\nml=ml[71]*.01\nml=ml[72]*.01\nml=ml[73]*.01\nml=ml[74]*.01\nml=ml[75]*.01\nml=ml[76]*.01\nml=ml[77]*.01\nml=ml[78]*.01\nml=ml[79]*.01\nml=ml[80]*.01\nml=ml[81]*.01\nml=ml[82]*.01\nml=ml[83]*.01\nml=ml[84]*.01\nml=ml[85]*.01\nml=ml[86]*.01\nml=ml[87]*.01\nml=ml[88]*.01\nml=ml[89]*.01\nml=ml[90]*.01\nml=ml[91]*.01\nml=ml[92]*.01\nml=ml[93]*.01\nml=ml[94]*.01\nml=ml[95]*.01\nml=ml[96]*.01\nml=ml[97]*.01\nml=ml[98]*.01\nml=ml[99]*.01\nml=ml[100]*.01\nml=ml[101]*.01\nml=ml["}, "2922": {"problem_id": 2922, "answer": "def chocoproduct(a):\n    c=0\n    for i in a:\n        c+=i\n    return c\n\ntry:\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    print(chocoproduct(a))\n    if chocoproduct(a)==a:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nexcept:\n    pass"}, "2923": {"problem_id": 2923, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nprint = stdout.write\nl=[0]*100000\nfor i in range(int(input())):\n    x=int(input())\n    l[x-1]=1\n    l[x]+=1\n    r=l[x]\n    for i in range(1,len(l)):\n        if l[i]>r:\n            r-=l[i]\n            l[i]=0\n    print(r)"}, "2924": {"problem_id": 2924, "answer": "import sys\r\nimport math\r\ndef input(): return sys.stdin.readline().strip()\r\ndef I(): return int(input())\r\ndef LI(): return list(map(int, input().split()))\r\ndef LI2D(n, m): return [[I() for i in range(m)] for j in range(n)]\r\ndef Stooges(): return list(map(int, input().split()))\r\ndef __starting_point():\r\n    N, M, P = Stooges()\r\n    C = Stooges()\r\n    D = Stooges()\r\n    g = [0]*N\r\n    for i in range(N):\r\n        g[i] = C[i]\r\n    for i in range(M):\r\n        h = D[i]\r\n        for j in range(N):\r\n            g[j] = min(g[j], g[i]+h)\r\n    print(\"Ride on!\")\r\n    if g[0]<P:\r\n        print(\"Time to change gears!\")\r\n    else:\r\n        print(\"Ride on!\")\r\n__starting_point()"}, "2925": {"problem_id": 2925, "answer": "from collections import Counter\nn,m=list(map(int,input().split()))\nc=Counter(sorted(set(input())))\nans=[]\nfor i in range(n):\n    ans.append(c[int(input())])\nprint((\" \".join(ans)))\n"}, "2926": {"problem_id": 2926, "answer": "from collections import defaultdict as dd\nn=int(input())\nc=dd(dict)\nfor i in range(n):\n w=int(input())\n d=defaultdict(list)\n for j in range(len(w)):\n  d[w[j]].append(j)\n c[1]=\"%s%s\"%(1,w[1])\n c[2]=\"%s%s\"%(2,w[2])\n c[3]=\"%s%s\"%(3,w[3])\n c[4]=\"%s%s\"%(4,w[4])\n c[5]=\"%s%s\"%(5,w[5])\n c[6]=\"%s%s\"%(6,w[6])\n c[7]=\"%s%s\"%(7,w[7])\n c[8]=\"%s%s\"%(8,w[8])\n c[9]=\"%s%s\"%(9,w[9])\n c[10]=\"%s%s\"%(10,w[10])\nfor i in c:\n print(i[1])\n"}, "2927": {"problem_id": 2927, "answer": "n=int(input())\na=[0,0,0,0]\nfor i in range(n):\n a.append(int(input()))\n print('Nothing' if a[0]<0 else ','.join(str(x) for x in a[1:]))"}, "2928": {"problem_id": 2928, "answer": "import math\ndef tax_givens(s,p):\n return (s*p) - p*sum(s.real\n    for i in range(1,11)\n    if i*p<s)\n    if s<0:\n     return 0\n    else:\n     return math.ceil((s/100)**(1.0-p))\n\ndef main():\n tax_givens(int(input()),0.8)\nmain()"}, "2929": {"problem_id": 2929, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ns = sum(a)\nt = s//60\nr = s%60\nu = s%120\nv = s%60*60\n\nprint(min(u,v))"}, "2930": {"problem_id": 2930, "answer": "from collections import defaultdict as dd\nn=int(input())\nd=dd(int)\nfor i in range(n):\n    k=int(input())\n    d[k]+=1\na=dd(int)\nb=dd(int)\nfor i in range(n):\n    if a[i]>b[i]:\n        a[i]=b[i]\n    else:\n        b[i]=a[i]\nl=max(a)\nc=max(b)\nprint(l+c)"}, "2931": {"problem_id": 2931, "answer": "n=int(input())\na=[]\nfor i in range(n):\n    a.append(int(input()))\na.sort()\nans=[]\nfor i in range(n):\n    ans.append(a[i]+a[i+1]+a[2*i+1])\nprint(1,n-1)"}, "2932": {"problem_id": 2932, "answer": "s = input().strip()\nk = len(s)\n\n# swap s[i] with s[j]\nfor i in range(k):\n s = s.replace(s[i], s[j])\n\nif s == sorted(s) and k <= len(s) - 1:\n print(\"Yes\")\n else:\n print(\"No\")"}, "2933": {"problem_id": 2933, "answer": "import math\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\nl.sort()\na = 1000\nb = 10001\nc = 10010\nd = 10011\ne = 10012\nf = 10013\ng = 10014\nh = 10015\ni = 10001\nj = 9800\nk = 9801\nl1 = l[i]\nl2 = l[j]\nl3 = l[k]\nl4 = l[g]\nl5 = l[h]\nl6 = l[i]\nl7 = l[j]\nl8 = l[k]\nl9 = l[g]\nl10 = l[h]\nl11 = l[i]\nl12 = l[j]\nl13 = l[k]\nl14 = l[g]\nl15 = l[h]\nans = 998*1000 + 1001*1001 + 1002*1002 + 1003*1003 + 1004*1004 + 1005*1005 + 1006*1006 + 1007*1007 + 1008*1008 + 1009*1009 + 1010*1010 + 1011*1011 + 1012*1012 + 1013*1013 + 1014*1014 + 1015*1015 + 1016*1016 + 1017*1017 + 1018*1018 + 1019*1019 + 1020*102*1020 + 1021*1021 + 1022*1022 + 1023*1023 + 1024*1024 + 1025*1025 + 1026*1026 + 1027*1027 + 1028*1028 + 1029*1029 + 1030*1030 + 1031*1031 + 1032*1032 + 1033*1033 + 1034*1034 + 1035*1035 + 1036*1036 + 1037*1037 + 1038*1038 + 1039*1039 + 1040*1040 + 1041*1041 + 1042*1042 + 1043*1043 + 1044*1044 + 1045*1045 + 1046*1046 + 1047*1047 + 1048*1048 + 1049*1049 + 1050*1050 + 1051*1051 + 1052*1052 + 1053*1053 + 1054*1054 + 1055*1055 + 1056*1056 + 1057*1057 + 1058*1058 + 1059*1059 + 1060*1060 + 1061*1061 + 1062*1062 + 1063*1063 + 1064*1064 + 1065*1065 + 1066*1066 + 1067*1067 + 1068*1068 + 1069*1069 + 1070*1070 + 1071*1071 + 1072*1072 + 1073*1073 + 1074*1074 + 1075*1075 + 1076*1076 + 1077*1077 + 1078*1078 + 1079*1079 + 1080*1080 + 1081*1081 + 1082*1082 + 1083*1083 + 1084*1084 + 1085*1085 + 1086*1086 + 1087*1087 + 1088*1088 + 1089*1089 + 1090*1090 + 1091*1091 + 1092*1092 + 1093*1093 + 1094*1094 + 1095*1095 + 1096*1096 + 1097*1097 + 1098*1098 + 1099*1099 + 1100*1100 + 1101*1101 + 1110*1110 + 1111*1111 + 1112*1112 + 1113*1113 + 1114*1114 + 1115*1115 + 1116*1116 + 1117*1117 + 1118*1118 + 1119*1119 + 11200*11200 + 11201*11201 + 11210*11210 + 11211*11211 + 11212*11212 + 11213*11213 + 11214*11214 + 11215*11215 + 11216*11216 + 11217*11217 + 11218*11218 + 11219*11219 + 112310*11230 + 11231*11231 + 11232*11232 + 11233*11233 + 11234*11234 + 11235*11235 + 11236*11236 + 11237*11237 + 11238*11238 + 11239*11239 + 11240*11240 +"}, "2934": {"problem_id": 2934, "answer": "import math\ndef solve():\n n, m = map(int, input().split())\n if n % 2!= 0:\n  print(0)\n elif m % 2!= 0:\n  print(0)\n else:\n  ans = (n+m) * (n+2*m) // 4\n  print(math.floor(ans - solve()))\n  \nsolve()"}, "2935": {"problem_id": 2935, "answer": "from collections import defaultdict\r\ndef get_cost(s,d):\r\n    return 0 if s==d else min(d[s]*c for c in map(int,input().split()))\r\ndef main():\r\n    n,m,f,s,t,d=[int(i) for i in input().split()]\r\n    g=defaultdict(list)\r\n    for i in range(n):\r\n        g[i].append(i)\r\n    for _ in range(f):\r\n        u,v,c=map(int,input().split())\r\n        g[u].append(v)\r\n        g[v].append(u)\r\n    ans=0\r\n    for i in range(1,n+1):\r\n        ans+=get_cost(i,g)\r\n    print(ans)\r\nmain()"}, "2936": {"problem_id": 2936, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k=list(map(int,input().split()))\nA=list(map(int,input().split()))\nB=[i for i in range(n)]\nC=[[] for i in range(n)]\nans=[]\nfor i in range(k):\n    ans.append(sum(B[i:]+B[:i]))\nprint(max(ans))\n"}, "2937": {"problem_id": 2937, "answer": "n, k, c = map(int, input().split())\nnames = []\nfor i in range(n):\n    names.append(input())\nnames.sort()\npairs = []\nfor i in range(k):\n    names[i].sort(key = lambda x: x[0])\n    pairs.append((i, 1))\n    \ndef solve(i, j):\n    if i == j:\n        return 0\n    elif i > j:\n        return max(solve(i, k-1), solve(i+1, j) + 1)\n    else:\n        return min(solve(i, k-1), solve(i+1, j) + 2)\n    "}, "2938": {"problem_id": 2938, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nwhile t:\n t -= 1\n n = list(map(int, readline().split()))\n if n[0] < n[1]:\n  print(\"No\")\n else:\n  if n[0] == n[1]:\n   print(\"Yes\")\n  else:\n   print(\"No\")"}, "2939": {"problem_id": 2939, "answer": "import numpy as np\nn = int(input())\nzone = np.array([[\"1\" for i in range(3)] for j in range(n)]).reshape(n,1)\nzone = zone.T\nans = float('inf')\nfor i in range(1,n):\n    for j in range(3):\n        if zone[i][j] == \"1\":\n            ans = min(ans,i-zone[i-1][j-1]+zone[i-1][j-1]*2)\n        elif zone[i][j] == \"2\":\n            ans = min(ans,i-zone[i-1][j-1]+zone[i-1][j-1]*3)\n        else:\n            ans = min(ans,i-zone[i-1][j-1]+zone[i-1][j-1]*1.5)\nprint(ans)"}, "2940": {"problem_id": 2940, "answer": ""}, "2941": {"problem_id": 2941, "answer": "import sys\ndef inp():\n return sys.stdin.readline().strip()\ndef out(s):\n sys.stdout.write(f'{s}\\\n')\nn = int(inp())\nfor _ in range(n):\n q,t,m,s = map(int,inp())\n if q==1:\n  print(m+s)\n elif q==2:\n  if t>=len(m):\n   print(m+s)\n  else:\n   res = m+s\n   res.sort()\n   res = res[0:t]\n   res = res[t+1:]\n   res = res + res[t:t+s]\n   print(res)\n else:\n  print(q)"}, "2942": {"problem_id": 2942, "answer": "import math\nd = int(input())\nmug = []\nfor i in range(0,d):\n    mug.append(math.sqrt(i**2-d**2))\nprint(' '.join(map(str, mug)))\n"}, "2943": {"problem_id": 2943, "answer": "import sys\nimport math\nn = int(input())\ns = input()\ns = list(s)\ns.insert(0, 'B')\ns.insert(n-1, 'R')\nprint(int(math.floor(math.sqrt(len(s))/2)), int(math.ceil(math.sqrt(len(s))/2)))\n"}, "2944": {"problem_id": 2944, "answer": "import bisect\ninput = lambda: list(map(int, input().strip().split()))\ninp = lambda: list(map(int, input().strip().split()))\nl = lambda: list(input().strip())\nd = lambda: int(input().strip())\ng = lambda: input().strip().split()\ns = lambda: input().strip(\" \")\nm = lambda: int(input().strip())\nw = lambda: list(input().strip().split())\nr = lambda: input().strip().split()\nc = lambda: list(input().strip().split())\ndef main():\n n, m, d = l()\n s = \"Alice\"\n u, v = w()\n t = 0\n while n:\n  t += 1\n  u, v = inp()\n  if t not in s.keys():\n   s.insert(0, t)\n  elif s[t]!= s[u]:\n   s[t] = s[u]\n  else:\n   s[t] += 1\n   for i in range(m):\n    u, v = w()\n    if u == v:\n     break\n   print(s[t])\n\n\ndef __starting_point():\n main()\n__starting_point()"}, "2945": {"problem_id": 2945, "answer": "import bisect\ninput=lambda:sys.stdin.readline().rstrip()\nt=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nmonkeys=[]\nfor i in range(a[0]):\n    monkeys.append([a[1]+b[i],i])\nfor i in range(a[1]):\n    monkeys.append([a[0]+b[i],1])\nmonkeys.sort()\nm=0\nfor i in range(len(monkeys)):\n    if bisect.bisect_right(monkeys[i],monkeys[m]):\n        m+=abs(monkeys[i][1]-monkeys[i][0])\nprint(m)"}, "2946": {"problem_id": 2946, "answer": "n,k=map(int,input().split())\na=list(map(int,input().split()))\nfor i in range(n):\n    a.sort()\n    b=a[i]\n    c=k*abs(b-a[i])\n    if c>0:\n        print(c)\n    else:\n        print(0)"}, "2947": {"problem_id": 2947, "answer": "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nd={}\nfor i in range(n):\n    x=int(input())\n    d[x]=[i]\nans=[]\nfor i in range(n):\n    ans.append([])\n    ans[i].append(d[i])\nfor i in range(n):\n    p=i\n    q=i\n    while p!=q:\n        ans[p].append(d[q][0])\n        q=p\n        p=d[p][1]\nprint(*ans[0],sep='\\n')"}, "2948": {"problem_id": 2948, "answer": "import numpy as np\r\nn = int(input())\r\nmp = np.array([[\"A\",\"B\"],[\"A\",\"B\"]])\r\nfor i in range(n):\r\n    mp[i][0] = str(i+1)\r\nfor i in range(1,n):\r\n    mp[i][0] = str(mp[i][0])\r\nfor i in range(1,n//2+1):\r\n    mp[i][1] = str(i+1)\r\nfor i in range(n//2,n):\r\n    mp[i][1] = str(mp[i][1])\r\nprint(\"\".join(mp[1]))"}, "2949": {"problem_id": 2949, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\nl=[0]*(10**5+1)\nfor i in range(n):\n    x,y,a=map(int,input().split())\n    l[x-a]+=1\n    l[y-a]+=1\n    l[x-a]+l[y-a]-l[x-a-1]\nans=max(l)\nprint(ans)"}, "2950": {"problem_id": 2950, "answer": "import math\nn=int(input())\nl=list(map(int,input().split()))\nl.sort()\nr=0\nfor i in range(1,100000+1):\n if l[i]<l[i-1]:\n  r+=1\n else:\n  r+=math.ceil(l[i]-l[i-1])\nprint(r)"}, "2951": {"problem_id": 2951, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\narr = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    arr.append([a, b, i])\n\narr.sort(key=lambda x:x[1])\nans = 0\nfor i in range(n):\n    ans += arr[i][2]\nprint(ans)"}, "2952": {"problem_id": 2952, "answer": "from collections import defaultdict as dd\nm,a,b,c=list(map(int,input().split()))\nif(m==a+b+c):\n  print('possible')\nelse:\n  print('impossible')"}, "2953": {"problem_id": 2953, "answer": "import math\ndef HUG(x):\n return pow(x,31)-1\ndef __starting_point():\n n=int(input())\n print(HUG(int(input())))\n__starting_point()"}, "2954": {"problem_id": 2954, "answer": "from collections import defaultdict as dd\nn,m,k=map(int,input().split())\nl=list(map(int,input().split()))\nl.sort()\nd={}\nfor i in range(m):\n u,v,d=map(int,input().split())\n l[u-1].append(v-1)\n l[v-1].append(u-1)\n d[u-1]=(d[u-1]+1)\n d[v-1]=(d[v-1]+1)\n if l[s-1]==l[t-1]:\n  print(min(d[s-1],d[t-1]))\n else:\n  temp=dd(int)\n  for i in l[s-1]:\n   temp.add(i)\n  for i in l[t-1]:\n   temp.add(i)\n  d[s-1]=min(d[s-1],temp[0])\n  d[t-1]=min(d[t-1],temp[0])\n  print(d[s-1],d[t-1])"}, "2955": {"problem_id": 2955, "answer": "import sys\ninput = sys.stdin.readline\n\ndef isPowerOf2(x):\n\treturn x > 0 and (x & (x - 1)) == 0\n\ndef main():\n\tn, c, b = map(int, input().split())\n\tbit = [0] * n\n\tbit[0] = 1\n\tfor i in range(1, n):\n\t\tbit[i] = bit[i - 1] + bit[i - 2]\n\t\tbit[n - i - 1] = bit[n - i - 2] + bit[n - i - 3]\n\t\tbit[n - i - 2] = bit[n - i - 1] + bit[n - i - 1]\n\t\tbit[n - i - 3] = bit[n - i - 2] + bit[n - i - 2]\n\n\tl = len(bit)\n\tres = 0\n\tfor i in range(n - c + 1):\n\t\tres += bit[i]\n\t\tl -= i\n\tprint(res)\n\nmain()"}, "2956": {"problem_id": 2956, "answer": "s = \"LRL\"\nn = 7\ncnt = 0\nfor i in range(n):\n    if s[i] == \"L\":\n        cnt += 1\n    elif s[i] == \"R\":\n        cnt += 2\n    elif s[i] == \"S\":\n        cnt += 3\n    elif s[i] == \"A\":\n        cnt += 4\n    else:\n        cnt += 5\nprint(cnt)"}, "2957": {"problem_id": 2957, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ninp = lambda: list(map(int, input().split()))\n\nn, k = inp()\ng = [[] for _ in range(n)]\nfor i in range(n):\n    g[i].append(i)\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if j%i == 0:\n            g[i].append(j)\n        else:\n            break\n\ndef dfs(v, p):\n    nonlocal ans\n    ans = max(ans, p)\n    for u in g[v]:\n        if u not in p:\n            dfs(u, p | g[v])\n\nans = 0\ndfs(0, 0)\nprint(ans)"}, "2958": {"problem_id": 2958, "answer": "import sys\ninput = sys.stdin.readline\nn,t,k=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl=sorted(l)\nfor i in range(t):\n    a,b=list(map(int,input().split()))\n    c=0\n    for j in range(len(l)):\n        if l[j]==i:\n            c+=a\n            break\n    if c>=k:\n        print(0)\n    else:\n        print(c-k)\n"}, "2959": {"problem_id": 2959, "answer": "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef MI():\n\treturn map(int, sys.stdin.readline().split())\n\ndef SI():\n\treturn sys.stdin.readline().strip()\n\ndef main():\n\tn, m = MI()\n\tans = []\n\tfor i in range(1, n+1):\n\t\tans.append(['.']*m)\n\tprint(' '.join(map(str, ans)))\n\t\t\n\t\t\nmain()\n"}, "2960": {"problem_id": 2960, "answer": "n=int(input())\nm=n**0.5\na=[]\nfor i in range(1,m+1):\n    if i%2==0:\n        a.append(i)\nprint(sum(a))"}, "2961": {"problem_id": 2961, "answer": "n=int(input())\nc=[]\nfor i in range(n):\n    a=list(map(int,input().split()))\n    c.append(a)\nc.sort()\nd=list(map(int,input().split()))\ne=0\nfor i in range(1,n):\n    if c[i]==[1,2,3,4]:\n        e=1\n        break\nif e==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "2962": {"problem_id": 2962, "answer": "from collections import defaultdict as dd, deque as dq\nimport sys\ninput=sys.stdin.readline\nreadint=lambda:int(input())\nreadfloat=lambda:float(input())\nreadstr=lambda:input().strip()\nread = lambda: input()\nt=dd(int)\nn,k=t()\na=t()\nfor i in range(n):\n    x,y=a[i]\n    d=x-y\n    if d<0:\n        d=0\n    a[i]=dq()\na.append(tuple(readstr()))\na.sort(reverse=True)\nc=0\nm=k//n\nfor i in range(n):\n    c+=a[i][0]\n    m-=1\nprint(c)"}, "2963": {"problem_id": 2963, "answer": "import math\ndef power(a,b):\n \n if(b==0):\n  return 1\n elif(b==1):\n  return a\n else:\n  x=math.pow(a,b)\n  return x\nn=int(input())\nprint(power(n,2))"}, "2964": {"problem_id": 2964, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nC=int(input())\narr=[]\nfor i in range(C):\n    arr.append([int(x) for x in input().split()])\narr.sort()\nprint(abs(arr[0][0]-arr[1][0])+abs(arr[0][1]-arr[1][1]))"}, "2965": {"problem_id": 2965, "answer": "import sys\ninput = sys.stdin.readline\n\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=[]\nfor i in range(a[0]):\n    c.append(i)\n\nprint(\"\\n\".join(map(str,c)))"}, "2966": {"problem_id": 2966, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nM,N=map(int,input().split())\nans=0\nfor i in range(1,M+1):\n for j in range(1,N+1):\n  if i<j:\n   ans+=M*N\n  else:\n   ans+=M*j\nprint(ans)"}, "2967": {"problem_id": 2967, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn,m=map(int,input().split())\na,b=list(map(int,input().split()))\nif a>=m:\n    print(0)\nelse:\n    c=0\n    for i in range(n):\n        a,b=b,a-b\n        c+=min(b,m)\n    print(c)"}, "2968": {"problem_id": 2968, "answer": "import heapq as hq\nb,n,e,s1,s2,c1,c2,v=input().split()\nb,n,e,s1,s2,c1,c2,v=int(b),int(n),int(e),list(map(int,input().split())),int(input()),[]\ns1=list(map(int,input().split()))\ns2=list(map(int,input().split()))\ns1.sort()\ns2.sort()\nhq.heapify(c1)\nhq.heappush(c2,0)\nv=max(c1)\nfor i in range(1,1001):\n if hq.heappop(c2):\n  v=max(v,c1[i])\nhq.heapqAdd(hq.heapqAdd(hq,1),v)\nprint(v)"}, "2969": {"problem_id": 2969, "answer": "import copy\nn=int(input())\nwhile n!=0:\n a=list(input().split())\n su=sum(a)\n if su>13:\n  su=13\n elif su==13:\n  print(\"S\")\n else:\n  d=copy.deepcopy(a)\n  for i in range(0,len(d)):\n   if d[i]==a[i]:\n    continue\n   else:\n    d[i]=a[i]\n  print(\"Possible\")\n  n-=1"}, "2970": {"problem_id": 2970, "answer": "n,m,k=map(int,input().split())\na=list(map(int,input().split()))\nif k>n:\n print(0)\nelse:\n b=max(a)\n for i in range(1,m):\n  b+=a[i]\n  a.remove(a[i])\n  a.append(b)\n print(sum(a))"}, "2971": {"problem_id": 2971, "answer": "from collections import Counter\nn=int(input())\ns=[]\nfor i in range(n):\n s.append(input())\n c=Counter(s)\n max=0\n for i in range(1,len(c.keys())+1):\n  if c[i]>max:\n   max=c[i]\n print(max)"}, "2972": {"problem_id": 2972, "answer": "from operator import itemgetter\r\na,b,k=list(map(int,input().split()))\r\nc=0\r\nfor i in range(1,a+1):\r\n    for j in range(1,b+1):\r\n        if i&1==0 and j&1==0:\r\n            c+=1\r\nprint(c)\r\n"}, "2973": {"problem_id": 2973, "answer": "from bisect import bisect_left as bisect\nn,t=map(int,input().split())\na=[]\nfor i in range(n):\n    a.append([int(x) for x in input().split()])\na.sort()\nb=t/3600\nfor i in range(n-1):\n    b=b*t//3600\nprint(b)"}, "2974": {"problem_id": 2974, "answer": "from collections import defaultdict as dd\r\ndef get_adj(adj):\r\n    adj.sort()\r\n    l = len(adj)\r\n    dp = [0]*l\r\n    for i in range(l):\r\n        dp[i] = adj[i]\r\n        for j in range(i):\r\n            dp[j] = max(dp[j],dp[i]+(adj[j]==adj[i]))\r\n    return dp\r\n\r\nn = int(input())\r\np = list(map(int,input().split()))\r\nd = list(map(int,input().split()))\r\ndp = get_adj(dd)\r\nans = []\r\nfor i in range(n):\r\n    ans.append(dp[i])\r\nprint(ans[0],ans[1])"}, "2975": {"problem_id": 2975, "answer": "import math\ndef rec(n,m,l,r):\n    if n==1:\n        return math.ceil((m-l)**0.5)\n    elif n==2:\n        return math.ceil((m-l)**0.5)\n    elif n==3:\n        return math.ceil((m-l)**0.5)\n    else:\n        ans=0\n        for i in range(10,100):\n            ans+=rec(n-1,m,l,i)\n        for i in range(100,0,-1):\n            ans+=rec(n-1,m,l,i)\n        return ans\nn,m=list(map(int,input().split()))\nl=rec(n,m,0,max(l))\nr=rec(n,m,l,max(r))\nprint(max(l+r))\n"}, "2976": {"problem_id": 2976, "answer": "import re\nt = raw_input()\nn = int(t)\na = raw_input()\nb = raw_input()\nc = 0\nfor i in range(n):\n    match = re.findall(r'([0-9]{6}):([0-9]{6})\\b',a)\n    if match[0] not in ['da','da']:\n        c = 1\n    elif match[1]!= match[2]:\n        c = 1\n    else:\n        c = 0\n    "}, "2977": {"problem_id": 2977, "answer": "flag=0\nflag2=0\nflag3=0\nflag4=0\nflag5=0\nflag=1\nflag2=1\nflag3=1\nflag4=1\nflag5=1\nflag=2\nflag2=2\nflag3=2\nflag4=2\nflag5=2\nquiz=0\nquiz2=0\nquiz3=0\nquiz4=0\nquiz5=0\nquiz6=0\nquiz7=0\nquiz8=0\nquiz9=0\nquiz10=0\nquiz11=0\nquiz12=0\nquiz13=0\nquiz14=0\nquiz15=0\nquiz16=0\nquiz17=0\nquiz18=0\nquiz19=0\nquiz20=0\nquiz21=0\nquiz22=0\nquiz23=0\nquiz24=0\nquiz25=0\nquiz26=0\nquiz27=0\nquiz28=0\nquiz29=0\nquiz30=0\nquiz31=0\nquiz32=0\nquiz33=0\nquiz34=0\nquiz35=0\nquiz36=0\nquiz37=0\nquiz38=0\nquiz39=0\nquiz40=0\nquiz41=0\nquiz42=0\nquiz43=0\nquiz44=0\nquiz45=0\nquiz46=0\nquiz47=0\nquiz48=0\nquiz49=0\nquiz50=0\nquiz51=0\nquiz52=0\nquiz53=0\nquiz54=0\nquiz55=0\nquiz56=0\nquiz57=0\nquiz58=0\nquiz59=0\nquiz60=0\nquiz61=0\nquiz62=0\nquiz63=0\nquiz64=0\nquiz65=0\nquiz66=0\nquiz67=0\nquiz68=0\nquiz69=0\nquiz70=0\nquiz71=0\nquiz72=0\nquiz73=0\nquiz74=0\nquiz75=0\nquiz76=0\nquiz77=0\nquiz78=0\nquiz79=0\nquiz80=0\nquiz81=0\nquiz82=0\nquiz83=0\nquiz84=0\nquiz85=0\nquiz86=0\nquiz87=0\nquiz88=0\nquiz89=0\nquiz90=0\nquiz91=0\nquiz92=0\nquiz93=0\nquiz94=0\nquiz95=0\nquiz96=0\nquiz97=0\nquiz98=0\nquiz99=0\n\nSample Output:\nThe flag of the empire Angola?\n4\nRed stripe, black stripe, yellow\nRed stripe, black stripe, yellow\nRed stripe, black stripe, white\nRed stripe, green stripe, yellow\n\n-----Live evaluation-------\nFor each test case, a list of the answers and the incongruity of each alternative will be given as an extra. Please take this as an advantage, the more tests you pass, the better your score on the live tests will be, and the more points you can redeem for a chance to win some prizes.\n\n\nUse Standard Input format\n\n"}, "2978": {"problem_id": 2978, "answer": "import sys\ninput = sys.stdin.readline\n\nS = int(input())\nP = []\nfor _ in range(S):\n x1, y1, x2, y2 = map(int, input().split())\n P.append((x1, y1))\n P.append((x2, y2))\n\nT = int(input())\nfor _ in range(T):\n x3, y3, x4, y4 = map(int, input().split())\n P.append((x3, y3))\n P.append((x4, y4))\n\nresult = ['same', 'different']\nfor p in P:\n if p[2]!= p[1] and p[3]!= p[1]:\n  result.append('different')\n else:\n  result.append('same')\n"}, "2979": {"problem_id": 2979, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m,s,t=list(map(int,input().split()))\nindex=s\nl=[0]*n\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    l[x-1].append(y-1)\n    l[y-1].append(x-1)\nindex=0\nl=[0]*n\nfor i in range(m):\n    x,y=list(map(int,input().split()))\n    l[x-1].append(y-1)\n    l[y-1].append(x-1)\n    index+=1\nif index:\n    print(l[index])\nelse:\n    print(0)"}, "2980": {"problem_id": 2980, "answer": "import sys\ndef II():\n return int(sys.stdin.readline())\ndef MI():\n return list(map(int,sys.stdin.readline().split()))\ndef LI():\n return list(map(int,sys.stdin.readline().split()))\n\nclass SegmentTree:\n  def __init__(self,n):\n    self.n=n\n    self.data=[0]*(n+1)\n    self.max=10**10\n    self.seg=[]\n    for i in range(1,n+1):\n      self.seg.append(i)\n      self.data[i]+=i\n    print(\"W\") if self.seg else print(\"L\")\nII()\nsys.setrecursionlimit(10**6)\ninput=sys.stdin.readline\nL=lambda:map(int,input().split())\nS=lambda:list(map(int,input().split()))\n\nM=lambda:map(int,input().split())\n\ndef solve(l,s):\n if len(l[s])==0:\n  return 0\n else:\n  best=l[s][0]\n  for i in range(1,len(l[s])):\n   if l[s][i]!=best:\n    best=l[s][i]\n    L[s][i]=best\n   elif l[s][i]==best:\n    return 1\n   else:\n    L[s][i]=best\n  return 0\n\nN=int(input())\nL=L()\nfor _ in range(N):\n l=LI()\n s=S()\n solve(l,s)"}, "2981": {"problem_id": 2981, "answer": "from math import sqrt\nn = int(input())\nans = []\nfor i in range(3, 20):\n    x, y = map(int, input().split())\n    ans.append((sqrt(x[0]**2 + y[1]**2), int(y[0]**2 + y[1]**2)))\nprint(2.0 * min(ans))"}, "2982": {"problem_id": 2982, "answer": "n = int(input())\nhype = list(map(int, input().split()))\nhype.sort()\ns = 0\nfor i in range(n):\n    s = (s * 2) % 1000000007\n    \nprint(s)"}, "2983": {"problem_id": 2983, "answer": "from math import *\nn = int(input())\na = list(map(int,input().split()))\nprint(1.4142135623728*(1+0.5/2)**pow(n-1,pow(2,pow(n,3))))"}, "2984": {"problem_id": 2984, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nl=[]\nn,m,p=map(int,input().split())\nfor i in range(n):\n    l.append(int(input()))\nl.sort()\nd=0\nfor i in range(m):\n    if l[i]>l[i-1]:\n        d+=1\n    else:\n        pass\nprint(d)\nprint(m*(l[m]-l[0]))"}, "2985": {"problem_id": 2985, "answer": "import numpy as np\nn,m=list(map(int,input().split()))\na=np.array([[0]*n for i in range(m)])\nb=np.array([[0]*n for i in range(m)])\nc=0\nfor i in range(n):\n a[i][0]=a[i][0]+abs(a[i][1]-b[i][0])\n a[i][1]=a[i][1]+abs(a[i][0]-b[i][1])\nfor i in range(1,m):\n b[i][0]=b[i][0]+abs(a[i][1]-b[i][0])\n b[i][1]=b[i][1]+abs(a[i][0]-b[i][1])\nfor i in range(m):\n c=max(c,a[i][0]//2)\nprint(c)\n"}, "2986": {"problem_id": 2986, "answer": "t = int(input())\nfor _ in range(t):\n s = input()\n n = len(s)\n if n==1:\n  print(s)\n elif n==2:\n  print(s[0:1])\n elif n==3:\n  print(s[0:2])\n else:\n  print(\" \".join(s[n-1:n+2]))"}, "2987": {"problem_id": 2987, "answer": "import numpy as np\nn,w=list(map(int,input().split()))\na=np.array(list(map(int,input().split())))\nd=[]\nfor i in range(w):\n    d.append(np.array(list(map(int,input().split()))))\nd.sort(reverse=True)\ns=sum(a)\nm=20001\nans=float('inf')\nfor i in range(m):\n    ans=max(ans,s[i]*d[i][1])\nprint(ans)\nprint(d[m-1][1])\n"}, "2988": {"problem_id": 2988, "answer": "from collections import defaultdict as dd\nn,m=list(map(int,input().split()))\na=dd(list)\nfor i in range(m):\n  a[int(input())]+=1\nd={}\nfor i in range(1,n+1):\n  d[i]=a[i]\nans=0\nfor i in d:\n  if d[i]!=7:\n    ans+=d[i]\nprint(ans)\n"}, "2989": {"problem_id": 2989, "answer": "import sys\ninput = sys.stdin.readline\n\nn,p,k=list(map(int,input().split()))\nstations=[tuple(map(int,input().split())) for i in range(n)]\ncap=[[0]*n for i in range(2)]\nfor i in range(n):\n    cap[0][i]=stations[i][0]\n    cap[1][i]=stations[i][1]\n\npars=[[] for i in range(2)]\nfor i in range(k):\n    a,b,c=list(map(int,input().split()))\n    pars[a-1].append(b-1)\n    pars[b-1].append(a-1)\n    cap[a-1][b-1]+=c\n    cap[b-1][a-1]+=c\n    pars[a-1].append(b-1)\n    pars[b-1].append(a-1)\n\nd=[0]*(k+1)\nfor i in range(1,k+1):\n    d[i]=max(d[i-1],cap[i-1][i])\nprint(*d)\n"}, "2990": {"problem_id": 2990, "answer": "n,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\np=int(input())\nfor i in range(1,n+1):\n    b=int(input())\n    if b%k==0:\n        print(a[i-k],'\\n')\n    else:\n        print(a[i-b],'\\n')"}, "2991": {"problem_id": 2991, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n n, m = map(int, readline().split())\n l = []\n for i in range(m):\n  l.append(int(readline()))\n l.sort()\n ans = \"\".join(sorted(l))\n print(ans)\nmain()"}, "2992": {"problem_id": 2992, "answer": "n,m=map(int,input().split())\nl=[]\nfor i in range(m):\n    l.append(list(map(int,input().split())))\nl.sort()\ns=0\nfor i in range(m):\n    s+=l[i][1]\n    if s>10**9:\n        s=s-10**9\n    elif s<0:\n        s=s+10**9\nprint('\\n'.join(['IMPOSSIBLE' for i in range(m)]))"}, "2993": {"problem_id": 2993, "answer": "import math\ndef encode(m):\n    x=0\n    y=0\n    for i in range(len(m)):\n        x+=math.ceil(0.5*m[i])\n        y+=math.ceil(0.5*(1-m[i]))\n    return \"\".join([chr(int(x)) for x in y])\nn=int(input())\nd=int(input())\nm=input()\nenc=encode(m)\nprint(enc)"}, "2994": {"problem_id": 2994, "answer": "import numpy as np\nr,c=list(map(int,input().split()))\na=[]\nfor i in range(r):\n    a.append(input())\ns=np.zeros((50000,50000))\nfor i in range(50000):\n    if a[i][0]==\"a\":\n        s[i][0]=1\n    elif a[i][0]==\"a\" and a[i][1]==\"a\":\n        s[i][1]=1\n    elif a[i][0]==\"a\" and a[i][1]==\"a\" and a[i][2]!=\"#\":\n        s[i][2]=1\n    elif a[i][0]==\"#\" and a[i][1]==\"#\":\n        s[i][1]=1\n    elif a[i][0]==\"#\" and a[i][1]==\"#\":\n        s[i][2]=1\n    else:\n        s[i][0]=1\n        s[i][1]=1\n        s[i][2]=1\n        s[i][3]=1\n        s[i][4]=1\n        s[i][5]=1\n        s[i][6]=1\n        s[i][7]=1\n        s[i][8]=1\n        s[i][9]=1\n        s[i][0]=1\n        s[i][1]=1\n        s[i][2]=1\n        s[i][3]=1\n        s[i][4]=1\n        s[i][5]=1\n        s[i][6]=1\n        s[i][7]=1\n        s[i][8]=1\n        s[i][9]=1\n        s[i][0]=1\n        s[i][1]=1\n        s[i][2]=1\n        s[i][3]=1\n        s[i][4]=1\n        s[i][5]=1\n        s[i][6]=1\n        s[i][7]=1\n        s[i][8]=1\n        s[i][9]=1\n        s[i][0]=1\n        s[i][1]=1\n        s[i][2]=1\n        s[i][3]=1\n        s[i][4]=1\n        s[i][5]=1\n        s[i][6]=1\n        s[i][7]=1\n        s[i][8]=1\n        s[i][9]=1\n        s[i][0]=1\n        s[i][1]=1\n        s[i][2]=1\n        s[i][3]=1\n        s[i][4]=1\n        s[i][5]=1\n        s[i][6]=1\n        s[i][7]=1\n        s[i][8]=1\n       "}, "2995": {"problem_id": 2995, "answer": "from collections import Counter\nn = int(input())\na = []\nb = []\nfor i in range(n):\n a.append(input().split())\n c = Counter(a[0])\n if c['a'] == c['b']:\n  print('drain_cleaner')\n elif c['a'] > c['b']:\n  a.append([c['a'], c['b']])\n else:\n  b.append([c['a'], c['b']])\nfor i in range(n):\n print(a[i][1], b[i][1])"}, "2996": {"problem_id": 2996, "answer": "import sys\r\nreadline = sys.stdin.readline\r\nn,k=list(map(int,readline().split()))\r\nans=[]\r\nfor i in range(n):\r\n    ans.append(int(input()))\r\nans.sort()\r\nprint(min(ans[1]-ans[0],ans[k-1]-ans[k-1]))"}, "2997": {"problem_id": 2997, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\nn,m=list(map(int,input().split()))\nedges=[tuple(map(int,input().split())) for i in range(m)]\nadj=[[] for i in range(n)]\nfor i in range(m):\n adj.append([tuple(map(int,input().split())) for i in range(m)])\nvis=[0]*n\nvis[1]=1\nans=0\nfor i in range(n):\n if vis[i]==0:\n  ans+=1\n vis[i]=1\n for i in range(n):\n  for j in adj[i]:\n   if adj[i].get(j)!=None:\n    vis[j]=1\n print(ans)\n"}, "2998": {"problem_id": 2998, "answer": "import sys\ninput = sys.stdin.readline\n\nS = int(input())\n\nfor _ in range(S):\n s = input()\n print(s.translate(str.maketrans('uml','')))"}, "2999": {"problem_id": 2999, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, s = map(int, readline().split())\nl = [list(input()) for i in range(n)]\nl.sort(key=lambda x: x[1], reverse=True)\np = 0\ncnt = 0\nfor i in range(n):\n    if l[i][1] == s:\n        p += 1\n        cnt += 1\n    elif l[i][1] < s:\n        print(i)\n        cnt += 1\n        p += 1\n"}}