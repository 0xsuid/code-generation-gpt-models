{"0": {"problem_id": 4000, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nedges = [[] for _ in range(n)]\nfor _ in range(n - 1):\n    a, b, c = list(map(int, input().split()))\n    edges[a].append(b)\n    edges[b].append(c)\n    edges[c].append(a)\n\nvisited = [0] * n\nres = 0\nstack = deque([0])\nwhile stack:\n    v = stack.pop()\n    for u in visited[v]:\n        if visited[u] == 0:\n            stack.append(u)\n        else:\n            res += 1\n            stack.append(u)\nprint(res)\nprint(*stack)\n"}, "1": {"problem_id": 4001, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nb = []\nfor i in range(n):\n    if a[i] not in b:\n        b.append(a[i])\n    else:\n        b.append(a[i]*10)\nprint(' '.join(map(str, b)))"}, "2": {"problem_id": 4002, "answer": "n, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\nans = 0\nfor i in range(n):\n    for j in range(m):\n        ans = max(ans, a[i][j] % k)\nprint(ans)"}, "3": {"problem_id": 4003, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = [0] * n\nans = []\nfor i in range(n):\n    cnt[a[i]] += 1\n    if cnt[a[i]] == 1:\n        ans.append('R')\n    elif cnt[a[i]] == 2:\n        ans.append('L')\n    else:\n        ans.append('R')\nprint('\\n'.join(ans))\n"}, "4": {"problem_id": 4004, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    if a[i] < 0:\n        ans.append(i)\n    elif a[i] == 0:\n        ans.append(i)\n    else:\n        ans.append(i)\nprint(max(ans))"}, "5": {"problem_id": 4005, "answer": "import sys\ninput=sys.stdin.readline\nx1,y1,x2,y2=list(map(int,input().split()))\nx3,y3,x4,y4=list(map(int,input().split()))\nx5,y5,x6,y6=list(map(int,input().split()))\nif x1+x3<x2 and y1+y3<y2 and x1+x3>x2 and y1+y3>y2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"}, "6": {"problem_id": 4006, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nans = 0\nfor i in range(10**5+1):\n    ans += pow(i,26)\nprint(ans)"}, "7": {"problem_id": 4007, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n):\n    if A[i] == 0:\n        ans[i] = 1\n    else:\n        ans[i] = ans[i-1] + 1\n\np = [0]*n\nfor i in range(n):\n    if ans[i] == 0:\n        p[i] = i+1\n    else:\n        p[i] = p[i-1] + 1\n\nd = {}\nfor i in range(n):\n    d[A[i]] = i+1\n\nfor i in range(n):\n    if d.get(i)!= None:\n        d[i] = d.get(i)"}, "8": {"problem_id": 4008, "answer": "n,k=map(int,input().split())\na=list(map(int,input().split()))\ns=set()\nfor i in range(n):\n    s.add(a[i])\nans=[]\nfor i in range(k):\n    ans.append(s)\nif n==1:\n    print(\"YES\")\n    print(*ans[0])\n    continue\nfor i in range(1,n):\n    for j in range(k):\n        if i!=j:\n            c=a[i]\n            a[i]=a[j]\n            a[j]=c\n            ans.remove(a[j])\n            ans.remove(c)\n            print(\"\\n\".join(map(str,ans)))\n            break\nelse:\n    print(\"NO\")"}, "9": {"problem_id": 4009, "answer": "n,x,y = list(map(int,input().split()))\nnum = list(map(int,input().split()))\nres = 10**y\nfor i in range(n-1):\n    if num[i]!=0:\n        res = min(res,i+1+y)\nprint(res)"}, "10": {"problem_id": 4010, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    isP=False\n    for i in range(n):\n        if a[i]!=a[i+1]:\n            isP=True\n            break\n    if isP:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "11": {"problem_id": 4011, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9+7\nns = lambda: list(map(int, readline().split()))\nnl = lambda: list(map(int, readline().split()))\nI = lambda: int(readline())\nns()\nnl()\nns()\ndef g(a, b):\n    s = 0\n    for i in range(10):\n        if a & (1 << i)!= 0:\n            s += 1\n        a >>= i\n    return s\nns()\nn = I()\nprint(max(g(n, n), g(n, n+I())))\n"}, "12": {"problem_id": 4012, "answer": "import sys\nimport math\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    a, b, c = list(map(int, input().split()))\n    d = (b % a) * (-1 if c % a else 1)\n    print(int(d))\n    print(' '.join(map(str,range(a, b + 1, -1))))\n"}, "13": {"problem_id": 4013, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in a:\n    s += min(i, s)\nprint(s)"}, "14": {"problem_id": 4014, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nexams = [list(map(int, input().split())) for _ in range(n)]\nt = 1\nfor i in range(m):\n    s, d, c = list(map(int, input().split()))\n    if s < d:\n        s, d = s + 1, d + 1\n    if c == 1:\n        print(t, end=\" \")\n        t += 1\n    elif c == 2:\n        print(t, end=\" \")\n        t += 1\n    else:\n        print(t, end=\" \")\n        t += 1\n"}, "15": {"problem_id": 4015, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\nif n==m:\n    print(0)\nelif n%2==0:\n    a=n//2\n    b=m-a\n    c=n-b\n    print(a+b)\nelse:\n    a=n//3\n    b=m-a\n    c=n-b\n    print(a+b)\n"}, "16": {"problem_id": 4016, "answer": "n, k = list(map(int, input().split()))\ns = input()\na = []\nfor i in range(n):\n    a.append(s[i])\n    if i+1 < n:\n        a.append(s[i+1])\n\nans = \"\".join(a)\nprint(ans)\n"}, "17": {"problem_id": 4017, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ncnt = 0\nsums = [0] * n\nfor i in range(n):\n    s = a[i]\n    sums[i] += s\n    if sums[i] == s:\n        cnt += 1\n\nprint(cnt)\nprint(*sums, sep='\\n')\n"}, "18": {"problem_id": 4018, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\ns = readline().rstrip()\n\ndp = [[0] * 26 for _ in range(n)]\ndp[0][ord(s[0]) - 97] = 1\nfor i in range(1, n):\n    dp[i][ord(s[i]) - 97] = 1\n    for j in range(26):\n        if j + 1 < n:\n            dp[i][j] += dp[i - 1][j + 1]\n        elif j - 1 > -1:\n            dp[i][j] += dp[i - 1][j - 1]\n        else:\n            dp[i][j] += dp[i - 1][j]\nprint(min(dp[k - 1][26:]))"}, "19": {"problem_id": 4019, "answer": "import sys\ninput = sys.stdin.readline\nn, m, d = list(map(int, input().split()))\nE = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b = list(map(int, input().split()))\n    E[a-1].append(b-1)\n    E[b-1].append(a-1)\nprint(\"YES\\n\")\nadj = [[] for _ in range(n)]\nfor i in range(n):\n    adj[i] = []\n    for j in range(i):\n        if d>0:\n            adj[i].append(j+1)\n        else:\n            adj[i].append(j)\nvisited = [False for _ in range(n)]\nvisited[0] = True\nans = []\nfor i in range(1, n):\n    if visited[i]==False:\n        ans.append(i)\n        visited[i] = True\n    else:\n        degree = [0]*n\n        degree[i] = 1\n        for j in adj[i]:\n            degree[j] += degree[i]\n        degree[i] = len(adj[i])\n        q = [i]\n        while q:\n            cur = q.pop()\n            print(\"YES\\n\"+\"\".join([str(x) for x in adj[cur]]))\n            for nei in adj[cur]:\n                if degree[nei]==d:\n                    degree[nei] = 0\n                    q.append(nei)\n"}, "20": {"problem_id": 4020, "answer": "from math import ceil\nh,m=map(int,input().split())\nn=ceil(m/60)\nans=[]\nfor i in range(n):\n    ans.append(h%12)\n    h+=1\nfor i in range(n):\n    ans.append(h%12)\n    h+=1\nfor i in range(n):\n    print(ans[i],end=\" \")\nprint()"}, "21": {"problem_id": 4021, "answer": "a = int(input())\nprint(a + 1)"}, "22": {"problem_id": 4022, "answer": "import sys\ninput = sys.stdin.readline\n2\n3\n4\n5\nn=int(input())\na=list(map(int,input().split()))\nfor i in range(n):\n    l,r=map(int,input().split())\n    if l>r:\n        a[i]=[]\n    elif l==r:\n        a[i].append(i)\nprint(len(set(a)))"}, "23": {"problem_id": 4023, "answer": "n = int(input())\na = list(map(int, input().split()))\na.sort()\nif a[n-1] == a[n-2] and a[n-1] == a[n-3] and a[n-2] == a[n-4] and a[n-3] == a[n-5] :\n    print('YES')\nelse:\n    print('NO')"}, "24": {"problem_id": 4024, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\ns = readline().rstrip()\n\na = []\nb = []\nfor i in range(n):\n    a.append(s[i])\n    b.append(s[i])\n\nc = 0\nfor i in range(k):\n    if len(a) == 0 or len(b) == 0:\n        break\n    c += abs(a.count(a[i]) - b.count(b[i]))\n\nif c < 0:\n    print(-1)\n    return\n\nans = 0\nfor i in range(k):\n    if i == 0:\n        ans += n - a.count(a[i])\n    else:\n        ans += n - b.count(b[i])\n\nprint(ans)"}, "25": {"problem_id": 4025, "answer": "a, b, c = list(map(int, input().split()))\nmonday = a + b + c\nsunday = abs(a) + abs(b) + abs(c)\ntuesdays = monday // 7 + (monday % 7) // 1\nwednesdays = monday % 7 + (monday % 7) // 1 + (monday % 7) // 1\nthursdays = monday % 7 + (monday % 7) // 1 + (monday % 7) // 1 + (monday % 7) // 1\nfriddays = monday % 7 + (monday % 7) // 1 + (monday % 7) // 1 + (monday % 7) // 1 + (monday % 7) // 1\nsabbotdays = monday % 7 + (monday % 7) // 1 + (monday % 7) // 1 + (monday % 7) // 1 + (monday % 7) // 1 + (monday % 7) // 1\n\nans = 0\nfor i in range(sabbotdays):\n    ans += i * (i + 1) // 2\nprint(ans)\n"}, "26": {"problem_id": 4026, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor tests in range(t):\n    n,m=list(map(int,input().split()))\n    a=[[0]*2 for i in range(n)]\n    a[0][0]=1\n    a[1][0]=1\n    a[0][1]=1\n    a[1][1]=1\n    for i in range(2*n):\n        a[i][0],a[i][1]=a[i-1][0],a[i][1]\n        a[i][0],a[i][1]=a[i][0],a[i][1]\n        a[i][0],a[i][1]=a[i][0]+a[i][1],a[i][1]\n        a[i][0],a[i][1]=a[i][0]-a[i][1],a[i][1]\n        a[i][0],a[i][1]=a[i][0]+a[i][1]+2*a[i][0],a[i][1]\n    print(\"YES\" if all([a[i][j]==a[j][i] for i in range(n)]))\n    else:\n        print(\"NO\")\n"}, "27": {"problem_id": 4027, "answer": "n = int(input())\na = []\nb = []\nfor i in range(n):\n    a.append(i+1)\nfor i in range(n):\n    b.append(i+1)\nans = 0\nfor i in range(n):\n    ans += abs(a[i] - b[i])\nprint(ans)"}, "28": {"problem_id": 4028, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip()\n\nans = 0\nfor i in range(2*n):\n    if s[i] == \"(\":\n        ans += 1\n    elif s[i] == \")\":\n        ans -= 1\n\nprint(ans%1000000007)"}, "29": {"problem_id": 4029, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\n\nans = n.bit_length() + 1\n\nans //= 2\n\nprint(ans)"}, "30": {"problem_id": 4030, "answer": "n = int(input())\ns = input()\na = []\nfor i in range(n):\n    a.append(s[i])\nans = []\nb = [0] * n\nc = [0] * n\nfor i in range(n):\n    b[i] = ord(a[i]) - ord('a')\n    c[i] = ord(a[i]) - ord('a')\nfor i in range(n):\n    ans.append(c[i] + b[i])\nprint(ans.index(min(ans)))\nfor i in range(n):\n    if ans[i] == 1:\n        ans[i] = n\n        print(1, end=' ')\n    else:\n        print(ans[i], end=' ')"}, "31": {"problem_id": 4031, "answer": "n = int(input())\ns = list(input())\ns.sort()\nfor i in range(n):\n    print(''.join(s))"}, "32": {"problem_id": 4032, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = sorted(map(int, input().split()), reverse=True)\nd = a[-1]\nans = 0\nfor i in range(n):\n    if i == n-1:\n        ans += d\n        break\n    d -= a[i]\n    ans += d\nprint(ans)\n"}, "33": {"problem_id": 4033, "answer": "import sys\nreadline = sys.stdin.readline\n\na, b = list(map(int, readline().split()))\nm = min(a, b)\nans = 0\nfor i in range(m):\n    if i % 2 == 0:\n        ans += 1\nprint(ans)\n"}, "34": {"problem_id": 4034, "answer": "n = int(input())\ns = input()\nc = 0\nfor i in range(n):\n    if s[i]==s[i+1]:\n        c+=1\n    elif s[i]!=s[i+1] and c!=0:\n        print(\"NO\")\n        return\nans = \"\".join(chr(ord('a')+i) for i in list(map(int,input().split())))\nif ans not in sorted(ans):\n    print(\"NO\")\n    return\ns.swapcase()\nif c==n-1:\n    print(\"YES\")\n    print(ans)"}, "35": {"problem_id": 4035, "answer": "import sys\ninput = sys.stdin.readline\n\nA, B = map(int, input().split())\n\nprices = []\ntax = 0\nfor i in range(A):\n    tax += B * 0.08\n    prices.append(f\"{i + 1} {tax:.2f}\")\n\nif prices[0] == \"0\":\n    print(-1)\nelse:\n    print(min(prices))"}, "36": {"problem_id": 4036, "answer": "n, k = map(int, input().split())\nif n%k!= 0:\n    print('NO')\nelse:\n    a = [0]*(k+1)\n    for i in range(1, k+1):\n        a[i] = a[i-1] + i\n    print(*a)"}, "37": {"problem_id": 4037, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, r = list(map(int, readline().split()))\nprojects = [tuple(map(int, readline().split())) for _ in range(n)]\n\ns = [0] * (r + 1)\nfor p in projects:\n    s[p[0]] += p[1]\n    s[p[1]] += p[0]\n\nans = 0\nfor i in range(1, r + 1):\n    if s[i] >= 0:\n        ans = max(ans, i - s[i])\n\nprint(ans)\n"}, "38": {"problem_id": 4038, "answer": ""}, "39": {"problem_id": 4039, "answer": "n,r=map(int,input().split())\na=[0]*r\na[0]=a[1]=0\nfor i in range(n):\n    x,y=map(int,input().split())\n    a[x]+=(y-b[x])\n    a[y]-=(x-b[y])\nprint('YES' if a[30000]>=0 else 'NO')"}, "40": {"problem_id": 4040, "answer": ""}, "41": {"problem_id": 4041, "answer": "s = input()\nt = input()\nn = len(s)\nc = 0\nans = 0\nfor i in range(n):\n    if s[i]!=t[i]:\n        c+=1\n        ans = max(ans,c)\n        break\nprint(ans)"}, "42": {"problem_id": 4042, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\n\")\ndef print(x):\n    sys.stdout.write(str(x)+\"\\n\")\nn = int(input())\na = list(map(float, input().split()))\nprint(\" \".join(map(str, a)))"}, "43": {"problem_id": 4043, "answer": "import sys\ninput = sys.stdin.readline\nn,d,k=list(map(int,input().split()))\nedges=[set() for i in range(n)]\nfor i in range(n-1):\n    u,v,w=list(map(int,input().split()))\n    edges.add((u-1,v-1,w))\n    edges.add((u,v-1,w))\n    edges.add((v-1,u-1,w))\nprint(\"YES\")\nfor i in range(n-1):\n    print(edges[i].count(1),end=\"\\n\")\n"}, "44": {"problem_id": 4044, "answer": "a,b,x=list(map(int,input().split()))\ns=[]\nfor i in range(1,x+1):\n    if s.count(0)==a:\n        s.append(0)\n    elif s.count(1)==b:\n        s.append(1)\n    else:\n        s.append(2)\nprint(''.join(s))\n"}, "45": {"problem_id": 4045, "answer": "n = int(input())\ns = input()\nt = input()\na = s.count('a')\nb = s.count('b')\nc = s.count('c')\nprint('YES' if a + b + c!= 2*n else 'NO')\n"}, "46": {"problem_id": 4046, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nq = list(map(int, input().split()))\n\nif n%2!=0:\n    print(-1)\n    return\n\nm = max(q)\nans = [0]*n\nfor i in range(1,m):\n    ans[i] = q[i]\n\nans.sort()\n\nif ans[m-1] == m:\n    print(-1)\n    return\n\nj = m\ni = 0\nwhile i<n-1:\n    if ans[i] == j:\n        j += 1\n        i += 1\n    else:\n        ans[i] = j\n        i += 1\n\nprint(*ans[::-1], sep=\" \")"}, "47": {"problem_id": 4047, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nA = list(map(int, readline().split()))\nB = [0] * 100001\nfor i in range(n):\n    B[A[i] - 1] += 1\nans = 0\nfor i in range(10001):\n    if B[i] > 0:\n        ans += B[i] * 2\nprint(ans)"}, "48": {"problem_id": 4048, "answer": "import sys\ninput = sys.stdin.readline\n\ndef calc(n):\n    s = 0\n    for i in range(1, n + 1):\n        for j in range(i, n + 1):\n            s += i * j\n    return s\n\nN = int(input())\nans = calc(N)\nprint(ans)"}, "49": {"problem_id": 4049, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\n\nans = 0\nminA = min(A)\nmaxA = max(A)\nfor i in range(n):\n    if A[i] == B[i]:\n        ans += 1\n    elif A[i] == B[i] and i == n-1:\n        ans += 1\n    elif A[i] == B[i] and i == n-1:\n        ans += 1\nprint(ans,maxA)"}, "50": {"problem_id": 4050, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\narr = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append((arr[i], i))\n\nans.sort()\nk = n\ncur = 0\ncnt = 0\nfor i in range(n):\n    if ans[i][0] == ans[i][1] and ans[i][0] + ans[i][1] == n:\n        cur = i\n        cnt += 1\n    elif ans[i][0] + ans[i][1] == n:\n        cur = i\n        cnt += 1\n    else:\n        break\nprint(cur)\nfor i in range(len(ans)):\n    print(ans[i][1], end ='')\n    "}, "51": {"problem_id": 4051, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    for i in a:\n        cnt += i\n        if cnt > 2:\n            print(\"NO\")\n            return\n        if cnt == 2:\n            print(\"YES\")\n            return\n    print(\"YES\")\n\nmain()"}, "52": {"problem_id": 4052, "answer": "n = int(input())\ns = input()\nt = input()\ncnt = 0\nfor i in range(n):\n    if s[i]!= t[i]:\n        cnt += 1\n        s[i] = t[i]\nprint(cnt)\nfor i in range(cnt):\n    print(t[i], end ='')"}, "53": {"problem_id": 4053, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = set()\nfor i in range(2*n-2):\n    s.add(input())\n    \nans = 'P'*2*n-2\nfor i in range(2*n-2):\n    if i&1:\n        ans += 'S'\n    else:\n        ans += 'P'\nprint(ans)"}, "54": {"problem_id": 4054, "answer": "a = list(map(int, input().split()))\na.sort()\nprint(a.pop())"}, "55": {"problem_id": 4055, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\ncnt = 0\nans = 0\nfor i in range(n):\n    if a[i] == 1:\n        cnt += 1\n    elif a[i] == 0:\n        cnt -= 1\n    ans += abs(cnt)\nprint(ans)"}, "56": {"problem_id": 4056, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = 1\n    for j in range(i+1, n):\n        if a[j] % i == 0:\n            d[a[j]] += 1\nans = 0\nfor i in range(1, n):\n    if d[i] == 1:\n        ans += n // i\n        continue\n    for j in range(i*i, n, i):\n        if a[j] % i == 0:\n            ans += 1\nprint(ans)\n"}, "57": {"problem_id": 4057, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i]!= a[i-1]:\n        ans += 1\nprint(ans)"}, "58": {"problem_id": 4058, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nna = lambda: list(map(int, readline().split()))\nn, r = na()\na = INF\nt = [0] * n\nfor i in range(n):\n    t[i] = a[i]\ncnt = 0\nm = min(t)\nfor i in range(1, n):\n    if t[i] <= m:\n        m = t[i]\n        cnt += 1\nprint(cnt)"}, "59": {"problem_id": 4059, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nans = 0\nd = {i: [] for i in range(2, N+1)}\nfor i in range(1, N):\n    d[i].append(i)\n    ans += 1\n    for j in range(len(d[i])):\n        d[i].pop()\n        d[i].append(N-i)\nprint(ans)"}, "60": {"problem_id": 4060, "answer": "n = int(input())\ns = input()\nans = 0\nfor i in range(n):\n    if s[i] == '(':\n        ans += 1\n    elif s[i] == ')':\n        ans -= 1\nprint(ans)"}, "61": {"problem_id": 4061, "answer": "s = input()\nt = input()\nn = len(s)\nans = 0\nc = 0\nfor i in range(n):\n    if s[i]!=t[i]:\n        ans = max(ans, i-c)\n        c = i\nprint(ans)"}, "62": {"problem_id": 4062, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    a, b, c, d = map(int, input().split())\n    l = [a, b, c, d]\n    ans = 0\n    for i in range(3):\n        ans = max(ans, l[i]*l[i+1])\n    print(ans)\n\nmain()"}, "63": {"problem_id": 4063, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nINF = 10**18\n\nN = int(input())\nd = list(map(int, input().split()))\ndiff = sorted(d)\nfor i in range(N):\n    d[i] = diff[i]//2\n\nK = min(diff, key=lambda x: x&1)\nans = 0\nfor i in range(1, N+1):\n    ans += d[i]*K\n    K = K>>1\nprint(ans)"}, "64": {"problem_id": 4064, "answer": "n, h, l, r = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i] - 1\n    if s > h:\n        s -= h - a[i]\n    elif s < h:\n        s += h - a[i]"}, "65": {"problem_id": 4065, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\nD = {}\nfor i in range(n):\n    if A[i] not in D:\n        D[A[i]] = []\n    D[A[i]].append(i)\n\nans = 0\nfor i in range(1, n+1):\n    if len(D[i]) > 1:\n        if max(D[i]) > 2*max(D[i]):\n            ans += 1\nprint(ans)"}, "66": {"problem_id": 4066, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort\nMAX = 100005\nn = int(input())\na = list(map(int, input().split()))\nd = [0] + list(accumulate(a, acc_lcm))\nfor i in range(1, MAX):\n    d[i] = d[i] + a[i]\nans = []\nfor i in range(n):\n    if bl(d, i) < br(d, i):\n        ans.append(i + 1)\nprint(' '.join(map(str, ans)))\n"}, "67": {"problem_id": 4067, "answer": "n = int(input())\ns = input()\na, b, c = 0, 0, 0\nfor i in range(n):\n    if s[i] == '0':\n        a += 1\n    elif s[i] == '1':\n        b += 1\n    else:\n        c += 1\nm = min(a, b, c)\nprint(''.join(map(str, range(m))))"}, "68": {"problem_id": 4068, "answer": "from itertools import accumulate\ndef f(n, m):\n  MOD = 10**9 + 7\n  ret = [0]*n\n  ret[0] = 1\n  for i in range(1, n):\n    ret[i] = ret[i-1]*f(i-1, m)%MOD\n    ret[i] %= MOD\n  return ret\n\ndef main():\n  N, M = list(map(int, input().split()))\n  A = list(map(int, input().split()))\n  A.append(M-1)\n  B = []\n  for i in range(M-1):\n    B.append(0)\n  C = [0]*N\n  C[A[0]] = 1\n  for i in range(1, N):\n    C[i] = C[i-1]*f(i-1, A[i])%MOD\n    C[i] %= MOD\n  print((C[N]%MOD))\n\ndef __starting_point():\n  main()\n\n__starting_point()"}, "69": {"problem_id": 4069, "answer": "from operator import itemgetter\ndef li(): return [int(i) for i in input().split()]\ndef st(): return input()\ndef val(): return int(input())\ndef li2(): return list(map(int, input().split()))\ndef st2(): return input()\ndef val2(): return int(input())\n\nX, K, D = li()\nL = [0]*26\nfor i in range(K+1):\n    L[i+D] = L[i] + abs(i)\n\nans = float('inf')\ncnt = 0\nfor i in L:\n    if i<ans:\n        ans = i\n    elif cnt<K:\n        cnt = K\n    else:\n        ans = min(ans, i)\n        cnt += 1\n\nprint(ans)"}, "70": {"problem_id": 4070, "answer": "n = int(input())\nprint(2*n)"}, "71": {"problem_id": 4071, "answer": "n = int(input())\nprint(n + 27)"}, "72": {"problem_id": 4072, "answer": "a = int(input())\nif a == 9:\n    print(1)\nelse:\n    print(0)"}, "73": {"problem_id": 4073, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(2 ** n - sum(a))"}, "74": {"problem_id": 4074, "answer": "import sys\nimport math\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    print(min(n + k - 1, 8) // 2 + k)"}, "75": {"problem_id": 4075, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+7\nINF = float('inf')\ndef power(x, y):\n    return pow(x, y, MOD)\nn, m = list(map(int, readline().split()))\nk, s = list(map(int, readline().split()))\np = [1] + list(map(int, readline().split()))\nfor i in range(m):\n    for j in range(n):\n        if j == 0:\n            continue\n        p.append(p[j] % 2)\nans = 0\nfor i in range(n):\n    ans += power(k, s)\nprint(ans)"}, "76": {"problem_id": 4076, "answer": "import bisect\nA, B, H, M = list(map(int, input().split()))\nans = H*12.0/A + M*60.0/B\nd = ans**0.5\nd = abs(d)**0.5\nprint(f\"{d:.9f}\")\n"}, "77": {"problem_id": 4077, "answer": "n,m = map(int,input().split())\ns = sorted(list(map(int,input().split())))\nans = 0\nfor i in range(n):\n    if s[i] == m:\n        ans += n//2\n    elif s[i] > m:\n        ans += n//2 - 1\nprint(ans)"}, "78": {"problem_id": 4078, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nseg = [0] + list(map(int, input().split()))\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n    seg[r - l] += 1\nd = 0\nq = 0\nc = []\nfor i in range(n):\n    if seg[i] == 0:\n        continue\n    if d < 0:\n        d = i + 1\n    if d > n - i - 1:\n        d = n - i - 1\n    if a[i] < 0:\n        a[i] = -10**6\n        c.append(i + 1)\n    elif a[i] > d:\n        a[i] = d\n        c.append(i + 1)\n    else:\n        a[i] = a[i] - 1\n        c.append(i + 1)\n    if a[i] > d:\n        a[i] = d\n        c.append(i + 1)\nprint(len(c))\nprint(*c)\n"}, "79": {"problem_id": 4079, "answer": "n = int(input())\ns = []\nfor i in range(n):\n    s.append(input())\nans = \"Yes\"\nfor i in range(n):\n    if set(s[i]) <= set('abc')+set('dba'):\n        ans = \"Yes\"\nfor i in range(n):\n    print(ans)"}, "80": {"problem_id": 4080, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nseg = [list(map(int, input().split())) for _ in range(m)]\nans = [0] * n\ncnt = 0\nfor j in range(m):\n    l, r = list(map(int, input().split()))\n    ans[l-1] = max(a[l-1], a[r-1]) - min(a[l-1], a[r-1])\n    ans[r-1] = max(a[r-1], a[l-1]) - min(a[r-1], a[l-1])\nd = 0\nfor i in range(n):\n    if ans[i] == 0:\n        d += 1\n    else:\n        ans[i] = max(ans[i-1], d) - min(ans[i-1], d)\nprint(d)\nprint(*ans)\n"}, "81": {"problem_id": 4081, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n    b.append(a[i])\nans = []\ni = 0\nwhile i < n:\n    if b[i] == b[i+1]:\n        ans.append(i)\n        i += 1\n    else:\n        ans.append(i)\n        i += 1\nprint('\\n'.join(ans))\nprint('L' if ans[-1] == i else 'R')"}, "82": {"problem_id": 4082, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n    if a[i] < a[i+1]:\n        ans = max(ans, i+1-i)\nprint(ans)"}, "83": {"problem_id": 4083, "answer": "import sys\ninput = sys.stdin.readline\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nd = sum(a)\nb = d // k\nc = 0\nfor i in range(n):\n    if a[i] == 0:\n        c += 1\n    elif a[i] < b:\n        c += d - a[i]\n    else:\n        c += d - b\nprint(c)"}, "84": {"problem_id": 4084, "answer": "import sys\ninput = sys.stdin.readline\n\nN, A, B = map(int, input().split())\n\nans = 0\nfor _ in range(N):\n    ans += (A + B) // 2 + (A + B) % 2\n    A = A + B % 2\nprint(ans)"}, "85": {"problem_id": 4085, "answer": "import bisect as b\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    divisors = list(map(int, input().split()))\n    b.insort(divisors, 1)\n    print(min(b.bisect_left(divisors, n) for _ in range(n)))\n"}, "86": {"problem_id": 4086, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nA = list(map(int,input().split()))\nans = []\nans.append(A[0])\nfor i in range(1,n):\n    if A[i] not in ans:\n        ans.append(A[i])\nprint(len(ans))\nprint(*ans)"}, "87": {"problem_id": 4087, "answer": "a=int(input())\nif a%4==0:\n    print(a)\nelse:\n    b=str(a)\n    if len(b)==len(b.lstrip('0'))-1:\n        print(int(b[:len(b)],6))\n    else:\n        print(int(b[:len(b)],6))"}, "88": {"problem_id": 4088, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    s=input().strip()\n    m=len(s)\n    b=list(map(int,input().split()))\n    d={}\n    for i in range(m):\n        d[s[i]]=i\n    ans=[]\n    for i in range(m):\n        ans.append(d[s[i]])\n    print(*ans)"}, "89": {"problem_id": 4089, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\n\nd = {i:[] for i in range(1, 1000000000000001)}\n\nfor i in range(N):\n    a = list(map(str, input().split()))\n    d[a[0]].append(i)\n\nprint(''.join(map(str, sorted(d[a[0]]))))"}, "90": {"problem_id": 4090, "answer": "n = int(input())\nw = list(input())\na = 0\nb = 0\nfor i in range(n):\n    if w[i] =='':\n        a += 1\n    else:\n        b += 1\nprint(max(a, b))"}, "91": {"problem_id": 4091, "answer": "import sys\ninput = sys.stdin.readline\n\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nd = [[] for i in range(n + 1)]\nfor i in range(n):\n    d[i].append(i + 1)\nans = []\nfor i in range(k):\n    ans.append(sum(a[i:i + 1]))\nprint(max(ans))\n"}, "92": {"problem_id": 4092, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\n\nres = 0\ncur = 0\ncnt = 0\nfor i in range(n):\n    if a[i] < 0:\n        cur += 1\n        cnt += 1\n    elif a[i] > 0:\n        if cur > 0:\n            cur -= 1\n            cnt += 1\n        else:\n            res += cur\n            cur = 0\n            cnt = 0\n            cnt += 1\nprint(res)"}, "93": {"problem_id": 4093, "answer": "t = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    print(pow(n-1, 2) + abs(m-m%2), end ='')"}, "94": {"problem_id": 4094, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    K = int(input())\n    a = [0]*K\n    a[0] = 7\n    for i in range(1, K+1):\n        a[i] = a[i-1] + i\n        \n    print(a.index(K))\n    \nmain()"}, "95": {"problem_id": 4095, "answer": "n, m = map(int, input().split())\ns = list(map(int, input().split()))\nif n % 2 == 0:\n    s.sort()\n    d = n//2\n    median = s[d-1]\nelse:\n    d = n//2\n    median = s[d-1]\n    for i in range(1, d+1):\n        if median == s[i]:\n            break\n        median += s[i]\nprint(median)"}, "96": {"problem_id": 4096, "answer": ""}, "97": {"problem_id": 4097, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\na = list(map(int, readline().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\nans = 0\nm = 0\nfor i in range(1, 100000):\n    if a[i] - 1 not in d:\n        ans += 1\n        m = max(m, i - d[a[i]-1])\n    elif a[i] - 1 in d:\n        ans += 1\n        m = max(m, i - d[a[i]-1])\nprint(ans)"}, "98": {"problem_id": 4098, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i]!=i+1:\n        s += a[i]\n    elif a[i]==i+1:\n        s += a[i]\nprint(s)"}, "99": {"problem_id": 4099, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, k, m = map(int, input().split())\nA = list(map(int, input().split()))\nAns = [0] * n\nfor i in range(n-1):\n    Ans[i+1] += A[i]\nAns = sorted(Ans)\nprint(sum(Ans) / n)"}, "100": {"problem_id": 4100, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nINF = 10**18+7\n \ndef main():\n    n,k,q = map(int,input().split())\n    a = [0]*n\n    for i in range(n):\n        a[i] = list(map(int,input().split()))\n    ans = []\n    for i in range(n):\n        if a[i][0] == 0:\n            ans.append(\"No\")\n        elif a[i][0] > k:\n            ans.append(\"Yes\")\n        else:\n            ans.append(\"No\")\n    print(\"\\n\".join(ans))\n            \nmain()"}, "101": {"problem_id": 4101, "answer": "import sys\nreadline = sys.stdin.readline\nn, m = map(int, readline().split())\na = [list(map(int, readline().split())) for _ in range(n)]\nd = [[] for _ in range(n)]\nfor i in range(n):\n    d[i].append(0)\nfor i in range(1, n):\n    for j in range(m):\n        d[i].append(a[i][j] ^ a[i - 1][j])\ns = sorted(d, reverse=True)\nprint('YES\\n' + ''.join(map(str, s)))"}, "102": {"problem_id": 4102, "answer": "s = input()\nprint(\"Yes\" if int(s) > 10 else \"No\")"}, "103": {"problem_id": 4103, "answer": "import sys\ninput = sys.stdin.readline\n\nn, b, a = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\nsun = [0] * (n + 1)\nsun[1] = 1\n\nfor i in range(2, n + 1):\n    sun[i] = sun[i - 1] + 1\n\nans = 0\nbattery = max(sun)\naccumulator = max(sun)\n\nfor i in range(n):\n    if sun[i] > 0:\n        battery -= 1\n    elif sun[i] == 0:\n        battery += 1\n    else:\n        accumulator += 1\n    "}, "104": {"problem_id": 4104, "answer": "a=input().split('+')\na=a[1:]\na=a[::-1]\nprint(eval(a[0]))"}, "105": {"problem_id": 4105, "answer": "import sys\ninput = sys.stdin.readline\nn, k = list(map(int, input().split()))\ndancing = [[] for _ in range(n)]\nfor i in range(n):\n    dancing[i].append(i)\ncolors = [\"black\", \"white\", \"red\", \"green\", \"blue\", \"magenta\", \"cyan\", \"yellow\", \"palegoldenrod\", \"beige\", \"olive\", \"greenviolet\", \"navy\", \"beige\", \"Cadmila\", \"gold\", \"khaki\", \"Carmen\", \"diapparc\", \"Noire\", \"Courier\", \"Gemini\", \"Aquamarine\", \"Apache\", \"TauSienna\", \"Peru\", \"Sierra\", \"Clare\", \"Honeydew\", \"Maya\", \"Azure\", \"Setagr\", \"Purple\", \"Violetred\", \"Khaki\", \"Crimson\", \"Lavender\", \"Mango\", \"Coral\", \"Salmon\", \"Burlywood\", \"Fleck\", \"Gray\", \"OliveDrab\", \"Cornsilk\", \"Karan\", \"Bisque\", \"Chamois\", \"Tamarac\", \"Palegreen\", \"Teal\", \"Chiffon\", \"Tiger\", \" oxide\", \"Ivory\", \"LemonChiffon\", \"LightGoldenRod\", \"PaleGreen\", \"PaleGreen2\", \"PaleGreen\", \"wheat\", \"cobalt\", \"prunet\", \"coffee\", \"yellow\", \"brown\", \"butter\", \"grass\", \"firebrick\", \"musc\", \"lemon\", \"peach\", \"jujube\", \"pomegranate\", \"lemongrass\", \"grassyveldraum\", \"slate\", \"pink\", \"seagreen\", \"violet\", \"ghattan\", \"goldenrod\", \"julia\", \"verde\", \"palegreen\", \"plum\", \"scarlet\", \"raspberry\", \"papaya\", \"pumpkin\", \"thistle\", \"powderblue\", \"hot pink\", \"indianred\", \"orange\", \"puerco\", \"cherry\", \"tomato\", \"ebony\", \"oliveoil\", \" Anfield\", \" Manchester\", \"Liverpool\", \"Arsenal\", \"Sunderland\", \"Werder Bremen\", \"AFC\", \"Leeds\", \"Nottingham\", \"Arsenal\", \"Liverpool\", \"Bournemouth\", \"Coventry\", \"Arsenal\", \"Liverpool\", \"Watford\", \"Leicester\", \"Arsenal\", \"Liverpool\", \"Everton\", \"Arsenal\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\", \"Liverpool\","}, "106": {"problem_id": 4106, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k, x = map(int, input().split())\nA = list(map(int, input().split()))\n\nans = 0\nmx = max(A)\nfor i in range(1, n):\n    if mx < sum(A) / x:\n        ans = -1\n        break\n    mx = sum(A) / x\n\nprint(ans)"}, "107": {"problem_id": 4107, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\ns = input().strip()\n\nm = min(n, k)\nans = 0\nfor i in range(m):\n    if s[i] == '0':\n        ans += k\nprint(ans)\n"}, "108": {"problem_id": 4108, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\ns=list(input().rstrip())\nt=list(input().rstrip())\ns.sort()\nt.sort()\ndef changer(s,t):\n    c=deque()\n    for i in range(len(s)):\n        if s[i]!=t[i]:\n            c.append(s[i])\n            c.popleft()\n            c.pop()\n            s.remove(t[i])\n            t.remove(s[i])\n    return c\nans=changer(s,t)\nprint(ans.count(\"a\"))"}, "109": {"problem_id": 4109, "answer": "from sys import stdin, stdout\nfrom math import gcd, ceil, sqrt, log, factorial, fmod, prod, inf, e\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef inp(): return stdin.readline().strip()\ndef out(var, end=\"\\n\"): stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): stdout.write(' '.join(map(str, var)) + end)\ndef lmp(): return list(mp())\ndef mp(): return map(int, inp().split())\ndef smp(): return map(str, inp().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\ndef remadd(x, y): return 1 if x%y else 0\ndef ceil(a,b): return (a+b-1)//b\ndef INT(): return int(inp())\ndef LSTR(): return lstr()\ndef MAP(): return map(int, inp().split())\ndef StoQ(): return list(stq(1))\ndef StoP(): return list(stp(1))\ndef StdIn(): return stdin.readline().strip()\ndef StdOut(): return stdout.write(str(INT()))\ndef StdIna(): return stdin.readline().strip()\ndef StdOuta(): return stdout.write(str(INT()))\ndef lists(s=None):\n    if s is None:\n        s = []\n    s.append(tuple(map(int, stdin.readline().split())))\n    return s\ndef sep(l): return sep(l.split())\ndef snew(t): return list(t)\ndef sstable(s=10**9, k=0):\n    buf = [0]*s\n    n = len(buf)\n    for i in range(s):\n        buf[i] = buf[i] + k\n    return buf\ndef msgp(s=10**9):\n    buf = [0]*s\n    n = len(buf)\n    for i in range(s):\n        buf[i] = buf[i] + prod(i)\n    return buf\ndef makedict(s=0, use_key=0, key=lambda x: x[0]): return dict(zip(s, key(sep(s))))\ndef monotonic(s=0):\n    for i in range(s+1):\n        yield i\n\ndef solve():\n    M = mp()\n    for m in M:\n        if m[1]>A[m[0]][m[1]]:\n            A[m[0]][m[1]] = m[1]\n            print(m[1])\n            print(A)\n            print(lmp())\n            print(l1d(M[0], m[1]))\n            print(l2d(M[0], M[1], m[1]))\n            print(ceil(prod(M[0]), prod(M[1])))\n            print(sorted(map(inf,-e,key=l1d), reverse=True))\n            print(sep(M[0]))\n            print(sep(M[1]))\n   "}, "110": {"problem_id": 4110, "answer": "import sys\ndef input(): return sys.stdin.readline().rstrip()\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\nINF = float('inf')\nMOD = 10**9 + 7\nD = I()\nP = [None] * D\nfor i in range(D):\n    P[i+1] = I()\n    P[i] = P[i+1]\nans = 1000000000000000000\ncnt = 0\nfor i in range(D):\n    ans = max(ans, P[i] + cnt)\n    cnt += D\n    if ans > G:\n        ans = 1000000000000000000\n        cnt += 1\nprint(ans)"}, "111": {"problem_id": 4111, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n    if a[i] % 2 == 0:\n        ans += a[i]\n    elif a[i] % 2!= 0:\n        ans += a[i] - a[i+1]\nprint(ans)"}, "112": {"problem_id": 4112, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k, x = map(int, readline().split())\nl = list(map(int, readline().split()))\n\ns = sum(l)\n\nkx = k + x\n\nif kx < n:\n    print(-1)\n    return\n\np = [0] * (kx + 1)\np[0] = l[0]\nfor i in range(1, n):\n    p[i] = p[i - 1] + l[i]\n\nmx = max(s)\nmx_i = mx - l[mx - 1]\n\nans = mx_i\n\nfor i in range(kx):\n    ans = max(ans, p[i] - mx_i)\n\nprint(ans)"}, "113": {"problem_id": 4113, "answer": "import sys\ndef I(): return int(sys.stdin.readline())\ndef MI(): return list(map(int,sys.stdin.readline().split()))\ndef LI(): return list(map(int,sys.stdin.readline().split()))\nmod = 10**9 + 7\nsys.setrecursionlimit(10**5)\nINF = float('inf')\n\nN = I()\nans = 0\nif N<11:\n    print(\"No\")\nelse:\n    for i in range(N):\n        k = N//2\n        if k*k==N:\n            ans += k*i\n        elif k*(k+1)==N:\n            ans += N-k*i\n        else:\n            print(\"No\")\n"}, "114": {"problem_id": 4114, "answer": "import heapq\nn = int(input())\nheapq.heapify(list(map(int, input().split())))\nprint('2 *'+''.join(map(str, list(map(int, input().split())))))\n"}, "115": {"problem_id": 4115, "answer": "s = input()\nn = len(s)\na = [0] * 26\nfor i in range(1,n):\n    a[ord(s[i]) - 97] += 1\nprint(min(a))"}, "116": {"problem_id": 4116, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\n\n# \u89e3\u8aac\u52a0\u3048\u308b\u4f8b\nsolve = [0] * 10\nfor i in range(1, 10):\n    solve[i] = solve[i - 1] * i % 10\n\nprod = 1\nfor i in range(1, 10):\n    prod *= solve[i]\n\nif prod >= 10:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "117": {"problem_id": 4117, "answer": "import sys\ninput = sys.stdin.readline\nINF = 10**18\n\nN = int(input())\nL = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, N):\n    a, b, c = L[i], L[i], L[i]\n    if a!= c:\n        ans += (a + b + c) // 3\n    elif b!= c:\n        ans += (a + c + b) // 3\n    else:\n        ans += (a + b) // 3\nprint(ans)\n"}, "118": {"problem_id": 4118, "answer": "from operator import mul\na,b=map(int,input().split())\nif a*b==0:\n    print(-1)\nelse:\n    print(a*b)"}, "119": {"problem_id": 4119, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nX = list(map(int, input().split()))\nd = [[] for _ in range(N+1)]\nfor i in range(1, N+1):\n    d[i].append(i)\nans = 0\nfor i in range(M):\n    if X[i] == X[i-1]:\n        ans += 1\n        continue\n    for j in d[i]:\n        if X[j+1] == X[i] or X[j-1] == X[i]:\n            ans += 1\nprint(ans)"}, "120": {"problem_id": 4120, "answer": "import sys\ninput = sys.stdin.readline\nn, m, k = map(int, input().split())\nroad = [list(map(int, input().split())) for _ in range(n)]\nroad.sort(key = lambda x: x[1])\nd = [[] for _ in range(n)]\ncnt = [0] * n\nvisited = set()\nans = ['0'] * n\nfor i in range(1, n):\n    visited.add(i)\n    d[i].append(road[i][1])\n    cnt[i] += 1\n#print(d)\n#print(cnt)\nkruskal = k - n + 1\nwhile kruskal:\n    ways = []\n    for i in range(kruskal):\n        ways.append(road[i][0] % 2)\n    ans.append(''.join(ways))\n    kruskal -= 1\nprint('\\n'.join(ans))\n"}, "121": {"problem_id": 4121, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nans = [0] * n\nfor i in range(n):\n    ans[i] = max(a[i], ans[i])\n\nif ans[1] == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "122": {"problem_id": 4122, "answer": "h,n = map(int,input().split())\ns = list(map(int,input().split()))\ns.sort()\nhp = [0]*n\nfor i in range(n):\n    hp[s[i]-1]+=s[i]\n    if hp[s[i]-1]<0:\n        print(-1)\n        return\n    else:\n        hp[s[i]-1]=s[i]\n        if hp[s[i]-1]<0:\n            print(-1)\n            return\nprint(hp[min(hp[-1],0)]%100000000000000)"}, "123": {"problem_id": 4123, "answer": "from collections import Counter\nn = int(input())\ns = input()\nc = Counter(s)\npref = [0]*n\nfor i in range(n):\n    pref[i] = c[s[i]]\nprint(''.join(map(str, pref)))"}, "124": {"problem_id": 4124, "answer": "s = input()\nt = input()\n\nans = 0\n\nfor i in range(1, len(s)):\n    if s[i] == t[i]:\n        ans += 1\n\nprint(ans)"}, "125": {"problem_id": 4125, "answer": "import sys\ninput = sys.stdin.readline\n\nN, X = map(int, input().split())\nd = [0]*N\nfor i in range(N):\n    d[i] = d[i] + X[i] - x[i]\nans = 0\nfor i in range(N):\n    ans = max(ans, d[i] + i*(i+1)//2)\nprint(ans)"}, "126": {"problem_id": 4126, "answer": "s = input()\nn = len(s)\nif n % 2 == 0:\n  print(\"No\")\nelse:\n  a = s[:n//2]\n  b = s[n//2:n//2+n%2]\n  if a == b:\n    print(\"Yes\")\n  else:\n    print(\"No\")"}, "127": {"problem_id": 4127, "answer": "A,B=map(int,input().split())\nprint(A*B//A)"}, "128": {"problem_id": 4128, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    print((n//2)+1)\n"}, "129": {"problem_id": 4129, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, s = list(map(int, input().split()))\n\nans = 0\ncities = [0]*n\nfor i in range(n):\n    cities[i] += 1\n    ans += max(0, m-cities[i] - s)\n    \nprint(ans)\n"}, "130": {"problem_id": 4130, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in a:\n    ans = max(ans, i)\nprint(ans)"}, "131": {"problem_id": 4131, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\np_list = list(map(int, input().split()))\nfor i in range(m):\n    p_list[i] = int(input())\n    p_list.sort()\npref_list = [0] * n\nfor i in range(n):\n    pref_list[p_list[i]-1] += 1\nprint(*pref_list)\n"}, "132": {"problem_id": 4132, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(0)\n    alive = [False] * (n + 1)\n    alive[0] = True\n    ans = a[-1]\n    for i in range(1, n):\n        if alive[i]:\n            ans = min(ans, a[i])\n        alive[i] = False\n    print(ans)\n\nmain()\n"}, "133": {"problem_id": 4133, "answer": "import re\ns = input()\na = re.sub(r'(?<=\\w)([a-z])', ''.join(s.split())), 'false')\nprint(a)"}, "134": {"problem_id": 4134, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\nxy = [list(map(int, input().split())) for _ in range(n)]\nxy.sort()\ndoubling = k ^ 0\nans = 0\nfor i in range(n):\n    xy[i][0] = xy[i][0] ^ doubling\n    ans += sum(xy[i][j] for j in range(m) if xy[i][j] == k)\nprint(ans)\n"}, "135": {"problem_id": 4135, "answer": "n = int(input())\ns = input()\na = s.split(' ')\na.reverse()\nfor i in range(1, len(a)):\n    a[i] = a[i][::-1]\nprint(''.join(a))"}, "136": {"problem_id": 4136, "answer": "a, b = list(map(int, input().split()))\nprint(a + b)\n"}, "137": {"problem_id": 4137, "answer": "import sys\n\ndef main():\n    s = input()\n    n = len(s)\n    sign = '+' if s[0] > 0 else '-' if s[0] < 0 else ''\n    s = s[:-1]\n    ans = ''\n    for i in range(n):\n        if s[i] == '-':\n            ans += sign\n        elif s[i] == '+':\n            ans += sign\n        else:\n            ans += s[i]\n            \n    print(ans)\n    "}, "138": {"problem_id": 4138, "answer": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    k = int(input())\n    print(k-1)"}, "139": {"problem_id": 4139, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    s = set()\n    i = 0\n    while i < N:\n        s.add(str(i))\n        i += 1\n    for i in range(1, N):\n        if i not in s:\n            s.add(str(i))\n            i += 1\n    print(len(s))\n\nmain()"}, "140": {"problem_id": 4140, "answer": "import sys\nreadline = sys.stdin.readline\n\nS = list(map(int, readline().split()))\nn = len(S)\nans = 0\nfor i in range(1, n):\n    if S[i] == S[i - 1]:\n        ans += 1\nprint(ans)"}, "141": {"problem_id": 4141, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\n\nS = sum(A)\nP = [0] * (N + 1)\nfor i in range(1, N + 1):\n    P[i] = P[i - 1] + A[i - 1] % 5\n    if P[i] == 4:\n        print(\"Denied\")\n        return\n\nP = [0] * (N + 1)\nfor i in range(N)[::-1]:\n    P[i] = P[i + 1] + A[i + 1] % 5\n    if P[i] == 4:\n        print(\"Denied\")\n        return\n\nP = [0] * (N + 1)\nfor i in range(N)[::-1]:\n    P[i] = P[i + 1] + A[i + 1] % 10\n    if P[i] == 5:\n        print(\"Denied\")\n        return\n\nP = [0] * (N + 1)\nfor i in range(N)[::-1]:\n    P[i] = P[i + 1] + A[i + 1] % 100\n    if P[i] == 5:\n        print(\"Denied\")\n        return\n\nP = [0] * (N + 1)\nfor i in range(N)[::-1]:\n    P[i] = P[i + 1] + A[i + 1] % 10000\n    if P[i] == 1000000000:\n        print(\"Denied\")\n        return\n\nP = [0] * (N + 1)\nfor i in range(N)[::-1]:\n    P[i] = P[i + 1] + A[i + 1] % 1000000\n    if P[i] == 1000000000000:\n        print(\"Denied\")\n        return\n\nP = [0] * (N + 1)\nfor i in range(N)[::-1]:\n    P[i] = P[i + 1] + A[i + 1] % 100000000\n    if P[i] == 1000000000000000:\n        print(\"Denied\")\n        return\n\nP = [0] * (N + 1)\nfor i in range(N)[::-1]:\n    P[i] = P[i + 1] + A[i + 1] % 8191\n    if P[i] == 4294967295:\n        print(\"Denied\")\n        return\n\nP = [0] * (N + 1)\nfor i in range(N)[::-1]:\n    P[i] = P[i + 1] + A[i + 1] % 4294967296\n    if P[i] == 0:\n        print(\"Denied\")\n        return\n\nP = [0] * (N + 1)\nfor i in range(N)[::-1]:\n    P[i] = P[i + 1] + A[i + 1] % 65536\n    if P[i] == 655360000000000:\n        print(\"Denied\")\n        return\n\nP = [0] * (N + 1)\nfor i in range(N)[::-1]:\n    P[i] = P[i + 1] + A[i + 1] % 8191\n    if P[i] == 4294967296:\n        print(\"Denied\")\n        return\n\nP = [0] * (N + 1)\nfor i in range(N)[::-1]:\n    P[i] = P[i + 1] + A[i + 1] %"}, "142": {"problem_id": 4142, "answer": "s = input()\ns = list(s)\nfor i in range(len(s)//2):\n    if s[i] == \"L\":\n        if i%2 == 0:\n            if s[i] == \"U\":\n                if i%2 == 1:\n                    if s[i] == \"D\":\n                        if i%2 == 0:\n                            if s[i] == \"R\":\n                                if i%2 == 1:\n                                    if s[i] == \"U\":\n                                        if i%2 == 0:\n                                            if s[i] == \"D\":\n                                                if i%2 == 1:\n                                                   if s[i] == \"R\":\n                                                      if i%2 == 1:\n                                                        elif s[i] == \"U\":\n                                                           if i%2 == 0:\n                                                              if s[i] == \"D\":\n                                                                 elif s[i] == \"R\":\n                                                                    if i%2 == 1:\n                                                                       else:\n                                            "}, "143": {"problem_id": 4143, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\nD = list(map(int, input().split()))\nE = D.copy()\n\nans = 0\nfor i in range(N):\n    if i == 0:\n        ans += abs(A[i] - 6)\n    elif i == 1:\n        ans += abs(A[i] - 4)\n    elif i == 2:\n        ans += abs(A[i] - 2)\n    elif i == 3:\n        ans += abs(A[i] - 1)\n    elif i == 4:\n        ans += abs(A[i] - 5)\n    else:\n        ans += abs(A[i] - 6)\nprint(ans)"}, "144": {"problem_id": 4144, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**9)\nINF = 10**9+7\n\nN = int(input())\nMOD = 10**9+7\nfac = [0]*(N+1)\nfac[1] = 1\nfor i in range(2, N+1):\n    if N%i==0:\n        fac[i] = (fac[i-1]*i)%MOD\n    elif N%(i-1)==0:\n        fac[i] = (fac[i-1]*(N//i))%MOD\nprint(fac[N]%MOD)"}, "145": {"problem_id": 4145, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(10**5)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\nread = lambda: int(input())\n\ndef primes(n):\n  i = 2\n  while i*i <= n:\n    if n % i == 0:\n      return set([i]) | primes(n//i)\n    i += 1\n  return set([n])\n\nx = read()\nprint(primes(x))"}, "146": {"problem_id": 4146, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    v = list(map(int, input().split()))\n    dp = [[0] * 2 for _ in range(n)]\n    for i in range(n):\n        dp[i][0] = v[i]\n        dp[i][1] = 1\n    for i in range(1, n):\n        for j in range(2, n):\n            if v[i] == v[j]:\n                dp[i][j] = dp[i - 1][j - 2]\n            else:\n                dp[i][j] = min(dp[i - 1][j - 2], dp[i].get(j - 2, 0) + 1)\n    print(dp[n - 1][0])\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "147": {"problem_id": 4147, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, a, b, c = map(int, input().split())\nm = a + b + c\nans = 10**10\nfor i in range(n):\n    l = m - a*i - b*(n-1-i)\n    ans = min(ans, l)\nprint(ans)"}, "148": {"problem_id": 4148, "answer": "def main():\n    N = int(input())\n    S = input().upper()\n    a = ord('A')\n    b = ord('Z')\n    print(chr(a + b - 1))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "149": {"problem_id": 4149, "answer": "import sys\nimport bisect\nfrom collections import deque, defaultdict, Counter\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nINF = 1<<30\nMOD = 10**9+7\neps = 10**-8\ninf = INF\ndef inp(): return int(sr())\ndef lr(): return list(lr())\ndef st(): return input().rstrip()\n\n\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n###############################################################################\n"}, "150": {"problem_id": 4150, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = map(int, readline().split())\na = list(map(int, readline().split()))\nm = n.bit_length() + 1\ndp = [[0] * (k + 1) for _ in range(m)]\nfor i in range(1, m):\n    for j in range(k):\n        dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1] + a[i - 1])\nans = ''.join(map(str, enumerate(dp[1:])))\nprint(ans)"}, "151": {"problem_id": 4151, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nn = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i] < a[i+1]:\n        c += 1\n    elif a[i] == a[i+1]:\n        c += 1\nprint(c%MOD)"}, "152": {"problem_id": 4152, "answer": "from sys import stdin\ninput = stdin.readline\nl = list(map(int, input().split()))\nn = len(l)\nans = 0\nfor i in range(n):\n    if l[i] & 1:\n        ans += 1\nprint(ans)\n"}, "153": {"problem_id": 4153, "answer": "import sys\ninput = sys.stdin.readline\n\nS = input().rstrip()\nN = len(S)\n\nred = [0]*N\nfor i in range(N):\n    red[i] = S[i] == '1'\n\nblue = [0]*N\nfor i in range(N):\n    blue[i] = S[i] == '0'\n\nprint(max(red)+max(blue))"}, "154": {"problem_id": 4154, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, M = list(map(int, readline().split()))\nL = [0]*N\nR = [0]*N\nfor i in range(N):\n    L[i] = int(readline()[:-1])\n    R[i] = int(readline()[-1])\n\nans = 0\nfor i in range(M):\n    if L[i] <= R[i]:\n        ans += 1\nprint(ans)"}, "155": {"problem_id": 4155, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**6)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef LI2(): return list(map(int, input().split()))\ndef LI3(): return list(map(int, input().split()))\ndef LII(rows_number): return [LI2() for _ in range(rows_number)]\ndef LIII(rows_number): return [LI3() for _ in range(rows_number)]\n\n\nn = I()\nh = [0]*n\nfor i in range(n):\n    h[i] += 1\nprint(min(h))"}, "156": {"problem_id": 4156, "answer": "import sys\ninput = sys.stdin.readline\nn,w=list(map(int,input().split()))\na=list(map(int,input().split()))\nif n==1:\n    print(0)\nelif n==2:\n    print(w)\nelse:\n    d=[]\n    for i in range(n):\n        d.append(a[i]-a[i-1])\n    print(sum(d))\n"}, "157": {"problem_id": 4157, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = [0] * n\nans[0] = a[0]\nfor i in range(1, n):\n    ans[i] = a[i] % 3\n    ans[i] += 2 * ans[i - 1]\n\nprint(*ans)\n"}, "158": {"problem_id": 4158, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nx = list(map(int, input().split()))\nm = x[0]\nfor i in range(1, n):\n    m = max(m, x[i])\nprint(m)\nfor i in range(len(x)):\n    print(x[i], end=\" \")"}, "159": {"problem_id": 4159, "answer": "import sys\ninput = sys.stdin.readline\nA,B,K = map(int,input().split())\nans = 0\nfor _ in range(K):\n    ans += A//2\n    A -= A%2\nprint(ans)"}, "160": {"problem_id": 4160, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n\n    x = int(input())\n    print(0) if x < 100 else print(max(0, x - 100), 2)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "161": {"problem_id": 4161, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18\nMOD = 10**9 + 7\ndef I(): return int(readline())\ndef F(): return float(readline())\ndef LS(): return list(map(int, readline().split()))\ndef LI(): return list(map(int, readline().split()))\ndef LI_(): return list(map(int, readline().split()))\ndef S(): return input().rstrip('\\n')\ndef Sto(): return input()\ndef LSto(): return list(map(int, input().split()))\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\n\n# Function to compute LCM\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n# LCM of a number is the smallest multiple that divides a.\n# LCM(a) = a / gcd(a, b)\n# LCM(b) = LCM(a) - LCM(a/b)\n\n# Main program starts here.\nK = I()\nans = 0\nfor i in range(K):\n    a = gcd(i + 1, i + 2)\n    b = gcd(i + 1, i + 3)\n    c = gcd(i + 1, i + 4)\n    d = gcd(i + 1, i + 5)\n    ans += a * b * c // gcd(a, b)\n    ans -= a * (b * c - 1) // gcd(a, b * c)\n    ans += a * (b * c - 2) // gcd(a, b * c)\n    ans -= a * (b * c - 3) // gcd(a, b * c)\n    ans += a * (b * c - 4) // gcd(a, b * c)\n    ans -= a * (b * c - 5) // gcd(a, b * c)\n    ans += a * (b * c - 6) // gcd(a, b * c)\n    ans -= a * (b * c - 7) // gcd(a, b * c)\n    ans += a * (b * c - 8) // gcd(a, b * c)\n    ans -= a * (b * c - 9) // gcd(a, b * c)\n    ans += a * (b * c - 10) // gcd(a, b * c)\n    ans -= a * (b * c - 100) // gcd(a, b * c)\n    ans += a * (b * c - 101) // gcd(a, b * c)\n    ans -= a * (b * c - 102) // gcd(a, b * c)\n    ans += a * (b * c - 103) // gcd(a, b * c)\n    ans -= a * (b * c - 104) // gcd(a, b * c)\n    ans += a * (b * c - 105) // gcd(a, b * c)\n    ans -= a * (b * c - 106) // gcd(a, b * c)\n    ans += a * (b * c - 107) // gcd(a, b * c)\n    ans -= a * (b * c - 108) // gcd(a, b * c)\n    ans += a * (b * c - 109) // gcd(a, b * c)\n    ans -= a * (b * c - 110) // gcd(a, b * c)\n    ans += a * (b * c - 111) // gcd(a, b * c)\n    ans -= a * (b * c - 112) // gcd(a, b * c)\n    ans += a * (b * c - 113) // gcd(a, b * c)\n    ans -= a * (b * c - 114) // gcd(a, b * c)\n    ans += a * (b"}, "162": {"problem_id": 4162, "answer": "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\nn=I()\na=LI()\nl=[]\nfor i in range(n):\n  l.append(a[i%2])\nprint(max(l))"}, "163": {"problem_id": 4163, "answer": "from collections import defaultdict, deque\nimport sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nMOD = 10**9+7\ninf = 10**20\neps = 1.0 / 10**10\ndd = defaultdict(list)\nfor i in range(int(input())):\n  d1,d2 = map(int,input().split())\n  dd[d1-1].append(d2-1)\n  dd[d2-1].append(d1-1)\ndd['0'] = [6,6]\nans = 'Yes' if sum(dd['0']) >= 3*eps else 'No'\nprint(ans)"}, "164": {"problem_id": 4164, "answer": "import sys\ndef input(): return sys.stdin.readline().rstrip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef S(): return input()[:-1]\ndef LS(): return list(input())\ndef LI2(): return list(map(int, input().split()))\ndef LII(rows_number): return [LI2() for _ in range(rows_number)]\ndef SR(rows_number): return [input() for _ in range(rows_number)]\ndef Si(rows_number): return input()[:-1]\nr=I()\nprint(r/1)"}, "165": {"problem_id": 4165, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nL = list(map(int, input().split()))\n\nif sum(L) < N * (N-1) / 2:\n  print(\"Yes\")\nelse:\n  print(\"No\")"}, "166": {"problem_id": 4166, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('INF')\nMOD = 10**9 + 7\ninput = lambda: readline().rstrip()\nn, m = map(int, readline().split())\nA = [list(map(int, readline().split())) for i in range(n)]\ns = list(map(int, readline().split()))\nfor i in range(m):\n  a = s[i] - '0'\n  if a < 0:\n    a = -1\n  a *= 10\n  a %= 10\n  print(a)"}, "167": {"problem_id": 4167, "answer": "import sys\ndef input(): return sys.stdin.readline().rstrip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef LLI(N): return [LI() for _ in range(N)]\nmod=10**9+7\nINF=float('INF')\n\nN,K=LI()\nans=0\nfor i in range(N+1):\n    for j in range(i+1,N+1):\n        if K%i==0 and K%j==0:\n            ans+=1\nprint(ans)"}, "168": {"problem_id": 4168, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18\nMOD = 10**9 + 7\ninput = lambda: list(map(int, readline().split()))\nn = int(input())\nprint(''.join(str(e) for e in range(2, n + 1)))"}, "169": {"problem_id": 4169, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\nB = [0] * N\nfor i in range(N):\n    B[i] = sum(A[:i])\n\nans = 0\nfor i in range(1, M):\n    ans += B[i] * A[i]\nprint(ans)"}, "170": {"problem_id": 4170, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nN = int(input())\nH = list(map(int, input().split()))\nans = 0\nfor i in range(N):\n    if H[i] > H[i+1]:\n        ans = ans + 1\nprint(ans)"}, "171": {"problem_id": 4171, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = map(int, readline().split())\na = list(map(int, readline().split()))\nd = sum(a)\ncnt = 0\nm = min(a)\nfor i in range(n):\n    if a[i] == m:\n        cnt += 1\n    else:\n        cnt += d // a[i]\n        d = d % a[i]\nprint(cnt)"}, "172": {"problem_id": 4172, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = map(int, readline().split())\na = list(map(int, readline().split()))\nd = dict()\nfor i in range(n):\n    d[a[i]] = i\n\ncnt = 0\nres = 0\nfor i in range(k):\n    if d[a[i]] == i:\n        cnt += 1\n        a[i] = a[i] + 1\n        res += cnt\nprint(res)"}, "173": {"problem_id": 4173, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = list(map(int, input().split()))\n        n += 2\n        if n == 1:\n            print(a)\n            continue\n        t = min(a, b)\n        print(t * n)\n\nmain()\n"}, "174": {"problem_id": 4174, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N, X = map(int, readline().split())\n    D = list(map(int, readline().split()))\n    ans = 0\n    for i in range(N):\n        if D[i] >= X:\n            continue\n        ans += 1\n        for j in range(i << 1, N + 1):\n            if D[j] >= X:\n                break\n            D[j] = X\n    print(ans)\n\nmain()\n"}, "175": {"problem_id": 4175, "answer": "from operator import itemgetter\n\nN = int(input())\nW = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    if W[i] == W[i - 1]:\n        ans += 1\n\nprint(ans)"}, "176": {"problem_id": 4176, "answer": "A,B=map(int,input().split())\nprint(sum([x for x in range(1,A+1) if x%A==0]))"}, "177": {"problem_id": 4177, "answer": "s = input()\nn = len(s)\nfor i in range(n):\n    if s[i] == \" \":\n        continue\n    else:\n        s[i] = \"x\"\nprint(s)"}, "178": {"problem_id": 4178, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\n\nN = int(input())\nH = list(map(int, input().split()))\nans = 0\nfor i in range(N):\n    if H[i] < H[i+1]:\n        ans = 0\n    elif H[i] > H[i+1]:\n        ans = 1\nprint(ans)"}, "179": {"problem_id": 4179, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, M, C = list(map(int, readline().split()))\nA = list(map(int, readline().split()))\nB = list(map(int, readline().split()))\nC = list(map(int, readline().split()))\n\nans = 0\nfor i in range(N):\n    ans += A[i]*B[i]*C>0\n\nprint(ans)"}, "180": {"problem_id": 4180, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(10**9)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nN = int(input())\nchange = 0\nfor i in range(1000):\n    change += N*i\nprint(change)"}, "181": {"problem_id": 4181, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ndef solve(m):\n    dp = [[0] * (N+1) for _ in range(m+1)]\n    for a, b in zip(A, B):\n        dp[a][b] = 9\n        for i in range(m, -1, -1):\n            if i & 1:\n                dp[a][b] -= B[i]\n            elif i < m:\n                dp[a][b] -= A[i]\n            else:\n                break\n    return dp[m][N]\n\nprint(solve(N))"}, "182": {"problem_id": 4182, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, m, x, y = map(int, input().split())\n    d = [0] * 1001\n    for i in range(n):\n        d[i+1] = d[i] + x\n    ans = \"No War\"\n    for i in range(m):\n        d[i] = d[i] + y\n        if d[i] < 1001:\n            ans = \"Warrer\"\n        elif d[i] > 1001:\n            ans = \"Agree\"\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "183": {"problem_id": 4183, "answer": "import bisect\nimport numpy as np\n\nN = int(input())\nT = list(map(int, input().split()))\nT.insert(0, 0)\n\nans = 0\nfor t in reversed(T):\n    ans += t*(t-1)//2 + int((t-1)%2)*t//2\nprint(ans)"}, "184": {"problem_id": 4184, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nW = list(map(int, input().split()))\n\nT = 1 << (N - 1).bit_length() - 1\nans = abs(sum(W) - W.count(1))\nfor t in range(1, T + 1):\n    ans = min(ans, abs(sum(W) - W.count(t)) if t & 1 == 0 else ans)\n"}, "185": {"problem_id": 4185, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\na = [tuple(readline()) for _ in range(n)]\nd = [[0] * m for _ in range(n)]\nfor i in range(n):\n    d[i] = list(map(int, readline().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(m):\n        if i == j:\n            continue\n        ans += d[i][j]\n        d[i][j] = i + 1\nprint(ans)\n"}, "186": {"problem_id": 4186, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9 + 7\n\nn = int(readline())\narr = list(map(int, readline().split()))\nm = n // 2\nt = 0\nfor i in range(m):\n    t += arr[i]\n    arr[i] += 1\nprint(t)"}, "187": {"problem_id": 4187, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] == 1:\n        ans += n\n    else:\n        ans += n - a[i]\nprint(ans)"}, "188": {"problem_id": 4188, "answer": "import sys\n\ndef main():\n    input()\n    print(sum(1 for i in range(16)))\n\nmain()"}, "189": {"problem_id": 4189, "answer": "n = int(input())\ncheeses = []\nfor i in range(n):\n    a, b = input().split()\n    a = int(a)\n    b = int(b)\n    cheeses.append([a, b])\nprint(3)"}, "190": {"problem_id": 4190, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = [0] * n\nans[0] = a[0]\nfor i in range(1, n):\n    if a[i] == 0:\n        ans[i] = a[i]\n    elif b[i] == 0:\n        ans[i] = b[i]\n\nc = [0] * n\nfor i in range(n):\n    c[ans[i]] = min(ans[i], c[ans[i]])\n\nprint(' '.join(map(str, c[::-1])))\n"}, "191": {"problem_id": 4191, "answer": "import sys\n\ndef main():\n    input()\n    \n    for i in range(1, 10):\n        print(i)\n    return 0"}, "192": {"problem_id": 4192, "answer": "import sys\ninput = sys.stdin.readline\nd, t, s = map(int, input().split())\nt = t//60\ns = s//60\nl = list(map(int, input().split()))\nl.insert(0, 0)\nans = 0\nfor i in range(1, t+1):\n    if l[i] + s >= t:\n        ans = 1\n        break\nif ans == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "193": {"problem_id": 4193, "answer": "import sys\ninput = sys.stdin.readline\n\nA = [0] + list(map(int, input().split()))\nn = int(input())\nB = [0] * 1001\nfor i in range(n):\n    A[i] = int(input())\n    B[A[i] - 1] += 1\nans = []\nfor i in range(1001):\n    if B[i] == 0:\n        ans.append('No')\n    elif B[i] == 3:\n        ans.append('Yes')\n    else:\n        ans.append('No')\nprint('\\n'.join(ans))"}, "194": {"problem_id": 4194, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nans = 0\nfor i in range(M):\n    ans += abs(A[i] - i)\nprint(ans)"}, "195": {"problem_id": 4195, "answer": "from operator import itemgetter\n\nd, n = list(map(int, input().split()))\nans = 1\nfor i in range(2, 100):\n    if d & (1 << i):\n        ans *= i\nprint(ans // 100)\n"}, "196": {"problem_id": 4196, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nN = int(input())\nA = list(map(int, input().split()))\n\nans = 1_000_000\nfor a in A:\n    ans = max(ans, a % ans)\n\nprint(ans)"}, "197": {"problem_id": 4197, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\nA = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append(A[i])\nprint(*ans)"}, "198": {"problem_id": 4198, "answer": "import sys\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9 + 7\n\ndef main():\n    A, B, X = list(map(int, readline().split()))\n    C = 10**18\n    d = []\n    for i in range(1, 11):\n        d.append(i*C + B*d(i))\n    print(max(d))\n\nmain()\n"}, "199": {"problem_id": 4199, "answer": "import sys\ninput = sys.stdin.readline\n\nN, K = list(map(int, input().split()))\nd = [list(map(int, input().split())) for _ in range(N)]\nans = 0\nfor h, t in d:\n    h -= t\n    if h < 0:\n        ans += t\nprint(ans)\n"}, "200": {"problem_id": 4200, "answer": "import sys\ninput = sys.stdin.readline\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\ns = 0\nfor i in range(N):\n    s += A[i]\n    if s >= 4*M:\n        print(\"Yes\")\n        break\n"}, "201": {"problem_id": 4201, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    h, w, k = map(int, input().split())\n    C = [list(input()) for _ in range(k)]\n    C.sort(key=lambda x: x.lower())\n    ans = 0\n    for i in range(k):\n        ans += sum(C[i][0] == '.')\n        ans += sum(C[i][1] == '.')\n    print(ans)\n    \nmain()"}, "202": {"problem_id": 4202, "answer": "l, r = map(int, input().split())\nprint(l * r % 2019)"}, "203": {"problem_id": 4203, "answer": "s = input()\na = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\nd = {'A':0, 'B':1, 'C':2, 'D':3, 'E':4, 'F':5, 'G':6, 'H':7, 'I':8, 'J':9, 'K':10, 'L':11, 'M':12, 'N':13, 'O':14, 'P':15, 'Q':16, 'R':17, 'S':18, 'T':19, 'U':20, 'V':21, 'W':22, 'X':23, 'Y':24, 'Z':25}\nx = 0\nfor i in range(26):\n    x += d[s[i]]\n    if x == 1:\n        print('AC')\n    else:\n        print('WA')"}, "204": {"problem_id": 4204, "answer": "import sys\ninput = sys.stdin.readline\ns=list(map(int,input().split()))\nk=list(map(int,input().split()))\nfor i in range(k[-1]):\n    s[i]=str(s[i])[-1]\nsys.setrecursionlimit(10**9)\nINF=1<<30\nMOD=10**9+7\ndef dfs(s,index):\n    nonlocal INF\n    INF=INF*pow(10,MOD-index)\n    dfs2(s[index:],index)\ndfs(s,0)\nprint(s[k-1])"}, "205": {"problem_id": 4205, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort\nn = int(input())\np = list(map(int, input().split()))\na = []\nfor i in range(n):\n    a.append(p[i])\na.sort()\nb = []\nfor i in range(n-1):\n    b.append(a[i+1])\ninsort(b, 2)\nprint(br(bl(b)))"}, "206": {"problem_id": 4206, "answer": "import sys\ninput = sys.stdin.readline\n\ns = int(input())\nl = [str(i) for i in range(1, 10)]\nans = 0\nfor i in range(len(l)):\n    if l[i] == '0':\n        ans += 1\nprint(ans)"}, "207": {"problem_id": 4207, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = 0\nm = max(a)\nfor i in range(n):\n    if a[i] > m:\n        ans += 1\n    elif a[i] == m:\n        ans += 1\nprint(ans)"}, "208": {"problem_id": 4208, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nl = input().strip()\nr = input().strip()\n\nans = [0]*(n+1)\nfor i in range(n):\n    ans[l[i]] += 1\n    ans[r[i]] += 1\n\nprint(max(ans))\n"}, "209": {"problem_id": 4209, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append((sum(A[i]), i))\nans.sort()\nk = n\ncur = 0\ncnt = 0\nm = len(ans)\nwhile k:\n    k -= 1\n    cnt += 1\n    cur += ans[-1][1]\n    for i in range(cur, 0, -1):\n        if ans[i][0] == cur:\n            break\n        if ans[i][0] > cur:\n            cur = ans[i][1]\n            cnt += 1\n    if cur == 0:\n        cur = m - 1\n        cnt += 1\n        ans.pop()\nprint(k)\nfor i in range(len(ans)):\n    print(ans[i][1], end ='')"}, "210": {"problem_id": 4210, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ncnt = 0\nm = k\nfor i in range(n):\n    a[i] %= m\n    cnt += (a[i] - k) // m\nprint(cnt)\n"}, "211": {"problem_id": 4211, "answer": "from operator import itemgetter\nn=int(input())\nb=[int(i) for i in input().split()]\nb.sort()\nprint(sum(b[i-1] for i in range(n)))"}, "212": {"problem_id": 4212, "answer": "from collections import deque\nn,m,q=list(map(int,input().split()))\na=deque(int(input()))\nb=deque(int(input()))\nc=deque(int(input()))\nd=deque(int(input()))\nans=0\nfor i in range(n):\n    a.append(a[i])\n    b.append(b[i])\n    c.append(c[i])\n    d.append(d[i])\nans+=(a[b[0]-a[1]]-a[a[1]])\nfor i in range(1,q):\n    ans+=(a[b[i]-a[i]]-a[a[i]])\nprint(ans)"}, "213": {"problem_id": 4213, "answer": "import sys\ndef I(): return int(sys.stdin.readline())\ndef MI(): return list(map(int,sys.stdin.readline().split()))\ndef LI(): return list(map(int,sys.stdin.readline().split()))\nns = I()\nns.append(ns.pop())\nn = ns[-1]\nfor i in range(n):\n  a,b = ns[i],ns[i+1]\n  if abs(a-b)>1e-10:\n    print(a-b)\n    break"}, "214": {"problem_id": 4214, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    xy = [list(map(int, input().split())) for _ in range(n)]\n    d = dict()\n    for i in range(n-1):\n        d[xy[i][1]].append(xy[i+1][0])\n    ans = 0\n    for i in d:\n        ans += sum(d[i])/n\n    print(ans)\n\nmain()\n"}, "215": {"problem_id": 4215, "answer": "A = int(input())\nB = int(input())\nans = 0\ncir = [0]*A\nfor i in range(A):\n    cir[i] = int(input())\n    ans += cir[i]\nprint(ans)"}, "216": {"problem_id": 4216, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nans = 0\nfor i in range(1,n+1):\n    ans += 10**i*n\n    if ans < n:\n        ans = n\n    elif ans == n:\n        ans = 0\n        continue\n    a = int(input())\n    b = int(input())\n    if a*b == n:\n        ans += 1\n    else:\n        ans += F(a,b)\nprint(ans)"}, "217": {"problem_id": 4217, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = list(map(int, input().split()))\nK = list(map(int, input().split()))\nAns = [0]*N\nfor i in range(N):\n    a = K[i]\n    Ans[i] = a + Ans[i-1]\nprint(sum(Ans))\n"}, "218": {"problem_id": 4218, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nINF = float('inf')\nmod = 10**9 + 7\n\nN = int(input())\nans = 0\nfor i in range(1, N+1):\n    if i % 2!= 0:\n        ans += (1/2)\n    else:\n        ans += pow(2, i)\nprint(ans)"}, "219": {"problem_id": 4219, "answer": "import sys\ninput = sys.stdin.readline\n\ndef li(): return list(map(int, input().split()))\ndef li_(): return list(map(int, input().split()))\ndef st(): return input().rstrip('\\n')\ndef lis(): return list(map(int, input().split()))\ndef sl(): return input().rstrip('\\n')\n\nn = int(input())\nA = li()\nx = [0]*n\nfor i in range(n):\n    x[i] = li_()\n\ncnt = 0\nfor i in range(n):\n    if x[i] == 1:\n        cnt += 1\nprint(cnt)"}, "220": {"problem_id": 4220, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    K = int(input())\n    S = input().rstrip('\\n')\n    n = len(S)\n    if n <= K:\n        print(S[:K])\n    else:\n        res = ''\n        i = 7\n        while i < n:\n            res += S[i]\n            i += 1\n        print(res)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "221": {"problem_id": 4221, "answer": "s = input()\nn = len(s)\nfor i in range(n):\n    if s[i+1] not in \"s\":\n        s = s[:i]+s[i+2:]\nprint(s)"}, "222": {"problem_id": 4222, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\nd = list(map(int, input().split()))\na = [0] * n\nfor i in range(n):\n    a[i] = d[i] - 1\nans = 1\nfor i in range(1, n):\n    if a[i] == 0:\n        ans += 1\nprint(ans)"}, "223": {"problem_id": 4223, "answer": "import sys\ninput = sys.stdin.readline\n\ndef slimes():\n    S = input().rstrip()\n    N = len(S)\n    ans = 1\n    for i in range(N):\n        ans *= (26 ** i)\n        ans += ord(S[i]) - ord('a')\n    return ans\n\nprint(slices())"}, "224": {"problem_id": 4224, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nn = int(input())\na = deque(int(i) for i in input().split())\na.append(0)\nb = a[:]\nb.sort(reverse=True)\ncnt = 0\nfor i in range(n):\n    if b[i]%2==0:\n        cnt += b[i]//2\n    elif b[i]%3==0:\n        cnt += b[i]//3\nprint(cnt)"}, "225": {"problem_id": 4225, "answer": "from collections import deque\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\nC = deque()\nC.append(A[0])\nC.append(A[1])\nC.append(A[2])\nans = 0\nfor i in range(3,A+B+C+1):\n    ans += i\n    C.popleft()\nprint(ans)"}, "226": {"problem_id": 4226, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(10**9)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\nread = lambda x: int(x) if x else -1\n\nX, Y = list(map(int, input().split()))\nprint([\"No\",\"Yes\"][(X-1)==0 and (Y-1)==0] if X==Y else [\"No\",\"Yes\"])\n"}, "227": {"problem_id": 4227, "answer": "import sys\ninput = sys.stdin.readline\nN, M = list(map(int, input().split()))\nedges = [[] for _ in range(N)]\nfor _ in range(M):\n    a, b = list(map(int, input().split()))\n    edges[a-1].append(b-1)\n    edges[b-1].append(a-1)\nvisited = [0]*N\nans = 0\nfor i in range(N):\n    visited[i] = 1\n    stack = []\n    for j in range(N):\n        if visited[j] == 0:\n            stack.append(j)\n        else:\n            visited[j] = 1\n    cnt = 0\n    while stack:\n        v = stack.pop()\n        for u in edges[v]:\n            if visited[u] == 0:\n                stack.append(u)\n                cnt += 1\n    ans += cnt\nprint(ans)"}, "228": {"problem_id": 4228, "answer": "import sys\ninput = sys.stdin.readline\nN, L = map(int, input().split())\napples = [int(x) - 1 for x in input().split()]\nans = 0\nfor i in range(N-1):\n    apples[i+1] += apples[i]\n    ans = max(ans, apples[i+1]-apples[i])\nprint(ans)"}, "229": {"problem_id": 4229, "answer": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef LI2(): return list(map(int, input().split()))\ndef LI3(): return list(map(int, input().split()))\ndef LI4(): return list(map(int, input().split()))\nn = I()\na = [0]*n\nfor i in range(1,n):\n  a[i] = a[i-1]+i\nprint(sum(a))"}, "230": {"problem_id": 4230, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")"}, "231": {"problem_id": 4231, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    H, W = map(int, input().split())\n    ans = 0\n    for h in range(H):\n        for w in range(W):\n            if ans + (H - h) + (W - w) == 0:\n                ans += 1\n    print(ans)\n\nmain()"}, "232": {"problem_id": 4232, "answer": "from sys import stdin\ninput = stdin.readline\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    if a[i] <= i:\n        ans.append(i)\nprint(max(ans))\n"}, "233": {"problem_id": 4233, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\nA=[[] for i in range(4)]\nfor i in range(n):\n    a=input().rstrip('\\n')\n    A[a[0]].append(a[1:])\n    A[a[1]].append(a[0])\nB=[0]*4\nfor i in range(4):\n    B[i+1]=B[i]\nans=[]\nfor i in range(4):\n    if B[i]=='*' and len(B[i])>1:\n        ans.append(i+2)\n        continue\n    for j in range(4):\n        if B[j]=='*' and len(B[j])>1:\n            ans.append(j+2)\n            continue\n        elif B[j]=='*' and B[j]!=B[i]:\n            print(-1)\n            return\n        else:\n            B[j]=B[i]\n            ans.append(i+2)\nprint(len(ans),end=' ')\nfor i in range(len(ans)):\n    print(ans[i],end=' ')"}, "234": {"problem_id": 4234, "answer": "n = int(input())\ns = input()\nm = n//2\nans = 0\nfor i in range(m):\n    if s[i]!= s[i+m]:\n        ans += 1\nprint(ans)\nprint(s)"}, "235": {"problem_id": 4235, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nE = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v = map(int, input().split())\n    E[u-1].append(v-1)\n    E[v-1].append(u-1)\n\nans = [0] * n\nans[0] = 1\nfor i in range(n):\n    if ans[i] == 0:\n        ans[i] = 1\n    else:\n        ans[i] ^= 1\n\nprint(\"YES\\n\" + \"\".join(map(str, ans)))"}, "236": {"problem_id": 4236, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\nans=[]\nfor i in range(n):\n    l,r=list(map(int,input().split()))\n    ans.append((l,r))\nif n==1:\n    print(0)\n    return\nk=0\nfor i in range(1,m+1):\n    if ans[i][0]<ans[i-1][1]:\n        k+=1\n    elif ans[i][0]>ans[i-1][1]:\n        continue\n    else:\n        print(i)\n        return\n"}, "237": {"problem_id": 4237, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\n\nA, B, C, D = map(int, input().split())\nans = 0\nfor i in range(A):\n    ans += (C//i) * (D//i)\n    C %= i\n    D %= i\nprint(ans)"}, "238": {"problem_id": 4238, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport sys\ninput = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9+7\nspf = lambda x: int(x)%10\n\ndef main():\n    N = int(input())\n    if N<9:\n        print('No')\n    else:\n        d = 9\n        i = 0\n        while d%N==0:\n            d//=10\n            i+=1\n        if d==N:\n            print('Yes')\n        else:\n            print('No')\nmain()"}, "239": {"problem_id": 4239, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nans = 0\ni = 1\nwhile i \\<= N:\n  ans += i * i\n  i *= 2\nprint(ans)"}, "240": {"problem_id": 4240, "answer": "import sys\nreadline = sys.stdin.readline\n\nS = list(map(ord,readline().split()))\nT = list(map(ord,readline().split()))\n\ns = sum(S)\nt = sum(T)\n\nif s == t:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "241": {"problem_id": 4241, "answer": "import sys\ninput = sys.stdin.readline\n\nS = list(map(ord, input().split()))\nT = list(map(ord, input().split()))\n\ncnt = 0\nfor i in range(len(S)):\n    if S[i] == T[i]:\n        cnt += 1\nprint(cnt)"}, "242": {"problem_id": 4242, "answer": "A,B,K=map(int, input().split())\ns=set()\nfor i in range(1,A+1):\n    s.add(i)\nfor i in range(B+1):\n    s.add(i)\nprint(s[K-1])"}, "243": {"problem_id": 4243, "answer": "from collections import defaultdict as dd\ndef solve():\n    x=int(input())\n    y=1000*500//x\n    z=1000*5//y\n    print(z)\nsolve()"}, "244": {"problem_id": 4244, "answer": "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\nN = I()\nX = MI()\nd = [[0]*N for _ in range(N+1)]\nfor i in range(N):\n  d[i][i] = 1\nfor i in range(1,N+1):\n  for j in range(i):\n    d[i][j] = min(d[i][j-1],d[i-1][j],d[i-1][j-1]) + X[j-1]\nans = sum(d[N][i] for i in range(N))\nprint(ans)"}, "245": {"problem_id": 4245, "answer": "from collections import deque\nA, B = list(map(int, input().split()))\nans = 1\nfor i in range(A):\n    q = deque([i])\n    while q:\n        s = q.popleft()\n        ans += 1\n        for j in range(s, 1, -1):\n            q.append(j)\nprint(ans)\n"}, "246": {"problem_id": 4246, "answer": "s = input()\nt = input()\nc = 0\nfor i in s:\n    if i == 'R':\n        c += 1\n    else:\n        c += abs(c)\nprint(c)"}, "247": {"problem_id": 4247, "answer": "import sys\ninput = sys.stdin.readline\n\ndef is_sorted(lst):\n    return sorted(lst) == lst\n\nn, p = map(int, input().split())\nans = 0\ns = set()\nfor i in range(n):\n    if p[i] < p[i - 1] and is_sorted(s):\n        ans += 1\n    s.add(p[i])\nprint(ans)"}, "248": {"problem_id": 4248, "answer": "import math\ndef solve():\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        x.append(tuple(map(int, input().split())))\n        y.append(tuple(map(int, input().split())))\n    x.sort()\n    y.sort()\n    ans = 0.0\n    for i in range(n):\n        x[i] = abs(x[i][0] - x[i][1]) / float(10**(len(x[i])-1))\n        y[i] = abs(y[i][0] - y[i][1]) / float(10**(len(y[i])-1))\n        ans += math.fabs(x[i][0] - y[i][0]) + math.fabs(x[i][1] - y[i][1])\n    print(ans)\n"}, "249": {"problem_id": 4249, "answer": ""}, "250": {"problem_id": 4250, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nd = [[] for _ in range(n)]\nfor i in range(n):\n    d[i].append(a[i])\n\ncnt = [0] * n\nans = [0] * n\nans[0] = 1\nfor i in range(1, n):\n    cnt[i] += 1\n    for j in range(max(0, i - k + 1), i):\n        if cnt[j] > cnt[i]:\n            cnt[j] -= cnt[i]\n            ans[i] = j\n            ans[i - k] = j\nprint(*ans[:k], sep='\\n')\n"}, "251": {"problem_id": 4251, "answer": "import sys\nreadline = sys.stdin.readline\nn, m = map(int, readline().split())\na = [list(map(int, readline().split())) for _ in range(n)]\nd = dict()\nfor i in range(n):\n    d[i] = []\n    a[i].sort()\n    d[i].append(a[i].index(i + 1) - i)\nprint(max(d.values()))"}, "252": {"problem_id": 4252, "answer": "n = int(input())\ns = input()\ns = s.replace(\"xxx\",\"\")\nprint(n - len(s))"}, "253": {"problem_id": 4253, "answer": "from math import *\ndef read():\n    return int(input())\ndef write(a):\n    print(a)\nr=read()\ns=3.1415926535897932384626433832795028841971693993751058209749445921093261417519184447303937284056223372025170015382103485410056448198957461149121607521793297387095598341312662528056742126293888112548709551621096135936217497086517157890925171908101913731091390079076974351113378525784799715032065272266577180972499845189036894567987651434375823691831033687095557011649775171578949887496413382804264707926563294810701627952384785749642173924998451890368945679876514343758236918310336870955570116497751715789498874964133828042647079265632948107016279523847857496421739249984518903689456798765143437582369183103368709555701164977517157894988749641338280426470792656329481070162795238478574964217392499845189036894567987651434375823691831033687095557011649775171578949887496413382804264707926563294810701627952384785749642173924998451890368945679876514343758236918310336870955570116497751715789498874964133828042647079265632948107016279523847857496421739249984518903689456798765143437582369183103368709555701164977517157894988749641338280426470792656329481070162795238478574964217392499845189036894567987651434375823691831033687095557011649775171578949887496413382804264707926563294810701627952384785749642173924998451890368945679876514343758236918310336870955570116497751715789498874964133828042647079265632948107016279523847857496421739249984518903689456798765143437582369183103368709555701164977517157894988749641338280426470792656329481070162795238478574964217392499845189036894567987651434375823691831033687105577019058897164971514382808419936896558716663518133818968717157890925171908101913731091390079076974351113378525784799715032065272266577180972499845189036894567987651434375823691831033687105577019058897164971514382808419936896558716663518133818968717157890925171908101913731091390079076974351113378525784799715032065272266577180972499845189036894567987651434375823691831033687105577019058897164971514382808419936896558716663518133818968717157890925171908101913731091390079076974351113378525784799715032065272266577180972499845189036894567987651434375823691831033687105577019058897164971514382808419936896558716663518133818968717157890925171908101913731091390079076974351113"}, "254": {"problem_id": 4254, "answer": "s,w=list(map(int,input().split()))\nif s>w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")"}, "255": {"problem_id": 4255, "answer": "from operator import itemgetter\n\ndef calc_triangle(a, b, c):\n    return (a + b + c) * 2\n\n\ndef solve():\n    a, b, c = map(int, input().split())\n    print(calc_triangle(a, b, c))\n\n\ndef __starting_point():\n    solve()\n__starting_point()"}, "256": {"problem_id": 4256, "answer": "A, B, C = list(map(int, input().split()))\nprint(int(sum(1 for i in range(A) if i % 2 == 0) >= C))\n"}, "257": {"problem_id": 4257, "answer": "A,B=map(int,input().split())\nprint(A*B)"}, "258": {"problem_id": 4258, "answer": "A,B,T=list(map(int,input().split()))\ns=0\nfor i in range(A):\n    s+=i*2*B\n    s+=(i+1)*2*B\nprint(s)\n"}, "259": {"problem_id": 4259, "answer": "import sys\ninput = sys.stdin.readline\n\nK = int(input())\nA = list(map(int, input().split()))\nK //= 7\nB = A[0]\ncarry = 0\nfor i in range(1, K+1):\n    if carry % A[i] == 0:\n        carry += A[i]\n        print('OK')\n        break\n    else:\n        carry += K\n        print('NG')"}, "260": {"problem_id": 4260, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    T, X = map(int, input().split())\n    ans = 0\n    d = X//t\n    for i in range(t):\n        ans += abs(i*d)\n    print(ans)\n\nmain()\n"}, "261": {"problem_id": 4261, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nA, B, C = list(map(int, input().split()))\nans = 0\nB -= A//2\nans += max(0, C-A%2)\nprint(ans)\n"}, "262": {"problem_id": 4262, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nP = list(map(int, readline().split()))\nQ = list(map(int, readline().split()))\n\nd = {}\nfor i in range(N):\n    d[P[i]] = d.get(P[i], 0) + 1\n    d[Q[i]] = d.get(Q[i], 0) + 1\n\nans = abs(d[3] - d[5])\nprint(ans)"}, "263": {"problem_id": 4263, "answer": "S = input()\nans = 0\nfor i in range(1, len(S)):\n    if S[i] == 'A':\n        ans = max(ans, i)\n    elif S[i] == 'C':\n        ans = max(ans, i)\n    elif S[i] == 'G':\n        ans = max(ans, i)\n    elif S[i] == 'T':\n        ans = max(ans, i)\nprint(ans)"}, "264": {"problem_id": 4264, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nn = int(input())\ndigits = \"0123456789\"\nodd = 0\nfor i in range(10**(n-1)):\n    if digits[i] % 2!= 0:\n        odd += 1\nprint(odd)"}, "265": {"problem_id": 4265, "answer": "from collections import deque\ns = input()\nt = input()\nc = 0\nd = deque()\nd.append(c)\nfor i in range(len(s)):\n    s[i] = chr(ord('a') + (ord(t[i]) - ord('a') + 1) % 26)\n    c += 1\nprint(c)"}, "266": {"problem_id": 4266, "answer": "import sys\nreadline = sys.stdin.readline\n\nK,X = map(int,readline().split())\n\nans = []\nfor i in range(K-1):\n    if X==i:\n        ans.append(i)\nprint(\" \".join(map(str,ans)))"}, "267": {"problem_id": 4267, "answer": "import sys\ninput = sys.stdin.readline\n\nx = int(input())\n\nif x > 30:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "268": {"problem_id": 4268, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, D = list(map(int, readline().split()))\nX = list(map(int, readline().split()))\nl = []\nfor i in range(N):\n  l.append((X[i] - X[i-1], i))\n\nans = 0\nfor i in range(N):\n  for j in range(i+1, N):\n    a, b = l[i].pop()\n    c, d = l[j].pop()\n    if a % 2 == c and b % 2 == d:\n      ans += 1\nprint(ans)"}, "269": {"problem_id": 4269, "answer": "s = input()\nd = {}\nfor i in range(len(s)):\n    d[int(s[i] - 1)] = d.get(int(s[i] - 1), 0) + 1\nprint(\"Good\") if 4 in d else print(\"Bad\")"}, "270": {"problem_id": 4270, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\n\nN = int(input())\nV = list(map(int, input().split()))\n\nINF = float('inf')\nans = INF\nfor i in range(N-1):\n    x, y = V[i], V[i+1]\n    ans = max(ans, x+y//2)\n\nprint(ans)"}, "271": {"problem_id": 4271, "answer": "from collections import deque\nN = int(input())\nA = list(map(int, input().split()))\nB = [i for i in range(N)]\nC = [i for i in range(N)]\nans = 0\nd = deque()\nfor i in range(N):\n    d.append(A[i])\n    ans += B[i]\n    A[i] = 0\nfor i in range(N-1):\n    d.append(A[i])\n    ans += C[i]\n    A[i] = 0\nprint(ans)"}, "272": {"problem_id": 4272, "answer": "import numpy as np\nn = int(input())\ns = input()\narr = np.array(s)\nprint((len(arr)*.4095) + np.sum(arr == arr[i+1:] for i in range(n-1)))"}, "273": {"problem_id": 4273, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list(input().rstrip())\ns.sort()\nd = {}\nfor i in range(n):\n    d[s[i]] = i\n\nprint(len(d))"}, "274": {"problem_id": 4274, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nread = lambda: list(map(int, input().split()))\n\nN, M = read()\nans = []\nfor _ in range(N):\n    x = read()\n    if x[0] == 0:\n        ans.append(1)\n    else:\n        ans.append(0)\nprint(\"Yes\" if ans[0] else \"No\")"}, "275": {"problem_id": 4275, "answer": "s = input()\nprint(\"Yes\" if len(s) == 3 else \"No\")"}, "276": {"problem_id": 4276, "answer": "import sys\ninput = sys.stdin.readline\nN, T = list(map(int, input().split()))\nC = [0] * N\nans = []\nfor i in range(N):\n    c, t = list(map(int, input().split()))\n    C[i] = c\n    ans.append((c, t))\nif N == 1:\n    print(T)\nelse:\n    dp = [0] * T\n    dp[0] = C[0]\n    for i in range(1, N):\n        dp[t + C[i]] = min(dp[t + C[i]], C[i] + dp[t])\n    print((dp[T]))\n"}, "277": {"problem_id": 4277, "answer": "import sys\nread = sys.stdin.readline\n\nN, A, B = list(map(int, read().split()))\n\nans = 0\n\nif N == 1:\n    ans = A*B\nelif N == 2:\n    ans = min(A*B, B*A)\nelse:\n    n = N-1\n    a = B/n\n    b = A/n\n    d = a*b\n    ans = min(d, ans)\n\nprint(ans)"}, "278": {"problem_id": 4278, "answer": "from collections import defaultdict,deque\nimport bisect\nn=int(input())\ns=list(map(str,input().split()))\nd=defaultdict(list)\nfor i in range(n):\n    d[s[i]]=[i]\n    \nfor i in range(10):\n    d[chr(i)]=[i]\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n        if s[j]==s[i]:\n            ans+=1\n            continue\n        else:\n            d[s[j]].append(i)\n            d[s[i]].append(j)\ndeq=deque([0])\nwhile deq:\n    t=deq.popleft()\n    for i in d[t]:\n        deq.append(i)\nprint(ans)"}, "279": {"problem_id": 4279, "answer": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    k = int(input())\n    print(k-1)"}, "280": {"problem_id": 4280, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**9+7\nns = lambda: list(map(int, readline().split()))\nn, k = ns()\nroad = [[] for _ in range(n)]\nfor i in range(n-1):\n    a, b = ns()\n    road[a].append(b)\n    road[b].append(a)\nroad.sort(key=lambda x:len(x))\ncnt = [1]*n\nr = n-1\nvisited = [False]*n\nans = [0]*n\nfor i in range(1, n-1):\n    if visited[i] == False:\n        cnt[i] = road[i].count(road[i])\n        visited[i] = True\n        ans[i] = cnt[i]\n        r-=1\n        visited[i] = False\n    elif visited[i] == True:\n        cnt[i] = road[i].count(road[i])\n        visited[i] = False\n        ans[i] = min(ans[i-1], road[i].count(road[i]))\n        r+=1\nprint(' '.join(map(str, ans)))\n"}, "281": {"problem_id": 4281, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nx = list(map(int, readline().split()))\nmoves = [0] * n\nfor i in range(1, n):\n    moves[i] = moves[i-1] + 1\nans = 0\nfor i in range(n):\n    if moves[i] == 0:\n        ans = max(ans, i+1)\nprint(ans)"}, "282": {"problem_id": 4282, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    A.sort()\n    B = [0] * n\n    cnt = 0\n    for i in range(n):\n        if cnt == 0:\n            B[i] = A[i]\n        elif A[i] > B[i]:\n            B[i] = A[i]\n        else:\n            B[i] = B[i] + A[i]\n        cnt += 1\n    print(*B)\n\n\nmain()\n"}, "283": {"problem_id": 4283, "answer": "n = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(sum([abs(a[i]) for i in range(n) if a[i]!= a[i+1]]))"}, "284": {"problem_id": 4284, "answer": "q = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    if a > b:\n        print(-1)\n    elif a == b:\n        print(0)\n    else:\n        print(max(0, b - a + 1))"}, "285": {"problem_id": 4285, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nn = int(input())\ns = input().strip()\ndp = [[0]*3 for i in range(n+1)]\ndp[0][0] = 1\nfor i in range(1,n+1):\n    dp[i][0] = 1\n    for j in range(3):\n        dp[i][j] = dp[i-1][j]\n        if i-j<0:\n            dp[i][j] = sum(dp[i-j+1])%MOD\n        elif i-j>=n:\n            dp[i][j] = sum(dp[i-j])%MOD\nans = 0\nfor i in range(3):\n    ans+=(dp[n][i]*(dp[n-1][i-1]*dp[n-1][i-2]))%MOD\nprint(ans)"}, "286": {"problem_id": 4286, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nA = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor i in range(m):\n    a, b, c = list(map(int, input().split()))\n    edges[a-1].append(b-1)\n    edges[b-1].append(a-1)\n\nvisited = [0] * n\ns = [0] * n\nans = 0\nfor i in range(n):\n    if visited[i] == 0:\n        s[i] = 1\n        ans += edges[i][0] + edges[i][1]\n        visited[i] = 1\nprint(ans)\n"}, "287": {"problem_id": 4287, "answer": ""}, "288": {"problem_id": 4288, "answer": "from operator import eq\na, b, c = map(eq, list(map(int, input().split())))\nprint(['Yes' if a == b else 'No'], end=' ')\n"}, "289": {"problem_id": 4289, "answer": "import numpy as np\nn = int(input())\nt = float(input())\na = np.array([t-x*0.006 for x in range(n)])\nh = np.array([0 for _ in range(n)])\nh *= a.tolist()\nprint(1)"}, "290": {"problem_id": 4290, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, M = list(map(int, readline().split()))\nans = 0\nfor i in range(N):\n    if i&1:\n        ans += 1\n    elif i&2:\n        ans += 2\nprint(ans)\n"}, "291": {"problem_id": 4291, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, Q = list(map(int, readline().split()))\nS = list(map(int, readline().split()))\nl = [0]*N\nr = [0]*N\nfor i in range(N):\n    l[i] += 1\n    r[i] += 1\n\nans = 0\nfor i in range(Q):\n    a, b = list(map(int, readline().split()))\n    c = 0\n    for j in range(1, b+1):\n        if l[j] > a:\n            a, b = b, a\n        c += l[j]\n    ans += c\nprint((\"\\n\".join(map(str, [list(range(ans, a+1)) for a in range(N)]))))\n"}, "292": {"problem_id": 4292, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, K = list(map(int, readline().split()))\np = list(map(int, readline().split()))\n\nprices = [0]*K\nfor i in range(N):\n    prices[i] = p[i]*i\n\nans = 0\nfor i in range(K):\n    ans += prices[K-1]-prices[i]\nprint(ans)"}, "293": {"problem_id": 4293, "answer": "import sys\nreadline = sys.stdin.readline\n\nP,Q,R = list(map(int,readline().split()))\n\nans = 0\nfor i in range(1,P+1):\n    ans += P//Q + P//R\n    P %= Q\n    Q %= R\n"}, "294": {"problem_id": 4294, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nread = lambda: list(map(int,sys.stdin.readline().rstrip(\"\\r\\n\").split()))\nx,a = list(map(int,input().split()))\nif x<a:\n  print(0)\nelse:\n  print(10)"}, "295": {"problem_id": 4295, "answer": "import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nans = 10**18\nAoki(N, K, 0)\n"}, "296": {"problem_id": 4296, "answer": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    a, b, c = list(map(int, input().split()))\n    if a + b + c > 22:\n        print(\"win\")\n    else:\n        print(\"bust\")\n\ndef __starting_point():\n    main()\n\n\n__starting_point()"}, "297": {"problem_id": 4297, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\nN = int(input())\nans = 0\nfor i in range(1, N+1):\n    if i % 2 == 0:\n        ans = i\nprint(ans)\n"}, "298": {"problem_id": 4298, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nN, D = list(map(int, input().split()))\nA = []\nfor i in range(N):\n  A.append(i+D)\nans = 1\nfor i in range(N):\n  ans = min(ans, i+D)\nprint(ans)\n"}, "299": {"problem_id": 4299, "answer": "n = int(input())\nprint(\"pon\" if n%9!=0 else \"hon\")"}, "300": {"problem_id": 4300, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\ndef II():\n    return int(input())\ndef MI():\n    return map(int, input().split())\ndef LI():\n    return list(map(int, input().split()))\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\ndef SI():\n    return input().rstrip('\\n')\nn = II()\nd = [0] + list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    d[i] += d[i-1]\nans += sum(d[i]*d[n-i-1] for i in range(n))\nprint(ans)"}, "301": {"problem_id": 4301, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nINF = float('inf')\nans = [INF] * N\nans[0] = 0\nfor i in range(1, N):\n    if ans[i] > ANS[i - 1]:\n        ans[i] = ANS[i - 1]\nprint('\\n'.join(map(str, ans)))"}, "302": {"problem_id": 4302, "answer": "A,B=map(int,input().split())\nprint(A*B)"}, "303": {"problem_id": 4303, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, K = list(map(int, readline().split()))\nx = list(map(int, readline().split()))\n\nleft = [-10] * K\nright = [10] * K\n\nleft[0] = x[0]\nright[N] = x[N]\n\nfor i in range(1, N):\n    left[i] = min(left[i], x[i])\n    right[N - i] = min(right[N - i], x[N])\n\ncandles = 0\nans = 0\nfor i in range(K):\n    t = left[i] + right[K - i - 1]\n    if candles < K:\n        candles = K\n    elif candles == K:\n        ans += t\n    else:\n        ans += t + (1 if i == K - 1 else 0)\n    candles += 1\nprint(ans)\n"}, "304": {"problem_id": 4304, "answer": "import sys\ninput = sys.stdin.readline\n\na, b = map(int, input().split())\n\nif a == b:\n    print(2)\nelse:\n    print(a//2 + b//2)"}, "305": {"problem_id": 4305, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nH,A = map(int,input().split())\nans = 0\ndef bs(n):\n    nonlocal ans\n    ans += n\n    return ans\nbs(H)\nprint(ans)"}, "306": {"problem_id": 4306, "answer": "A, B, C, D = list(map(int, input().split()))\n\ns = 0\nwhile A < B:\n    s += A\n    A += B\n\nprint(s)"}, "307": {"problem_id": 4307, "answer": "from sys import*\ninput = stdin.readline\nn = int(input())\nl = []\nfor i in range(1,n+1):\n    l.append(i)\nl.sort()\nans = 0\nfor i in l:\n    if i % 2 == 0:\n        ans += 1\nprint(ans)"}, "308": {"problem_id": 4308, "answer": "import sys\ninput = sys.stdin.readline\nn,k = map(int,input().split())\nprint(min([abs(cracker.count(i) - cracker.count(i-1)) for i in range(n)])-min([abs(cracker.count(i) - cracker.count(i-1)) for i in range(k)]))"}, "309": {"problem_id": 4309, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(2)\n    else:\n        for i in range(2, n):\n            base = 10 ** i\n            if base == base_dic[i]:\n                print(i)\n            else:\n                print(i + 1)"}, "310": {"problem_id": 4310, "answer": "import sys\ninput = sys.stdin.readline\nA = list(map(int, input().split()))\nans = 0\nfor a in A:\n    ans += abs(a - A[0])\nprint(ans)"}, "311": {"problem_id": 4311, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\ns = int(input())\na = [s]\nfor i in range(1,101):\n    a.append((3*i+1)%2)\nans = 10001\nwhile a:\n    ans = min(ans, len(a))\n    for i in range(len(a)):\n        if a[i] == ans:\n            break\n    else:\n        ans = 10001\n        break\nprint(ans)"}, "312": {"problem_id": 4312, "answer": "A,B,C,D = map(int, input().split())\ns = sum(A,B,C,D)\nif s % 2 == 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")"}, "313": {"problem_id": 4313, "answer": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\nn = I()\nv = list(map(int, input().split()))\nc = list(map(int, input().split()))\nc.sort()\nprint(max([0, v[-1]+c[-1]]))"}, "314": {"problem_id": 4314, "answer": "import sys\ninput = sys.stdin.readline\n\nclass UnionFind():\n    def __init__(self, n):\n        self.n = n\n        self.parents = [-1] * n\n        self.rank = [1] * n\n    def find(self, x):\n        if self.parents[x] < 0:\n            return x\n        else:\n            self.parents[x] = self.find(self.parents[x])\n            return self.parents[x]\n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n        if x == y:\n            return\n        if self.rank[x] > self.rank[y]:\n            x, y = y, x\n        self.parents[y] = x\n        self.rank[x] += self.rank[y]\n    def same(self, x, y):\n        return self.find(x) == self.find(y)\n    def size(self, x):\n        return -self.parents[self.find(x)]\n\nh, w = map(int, input().split())\nmatrix = [list(map(int, input().split())) for _ in range(h)]\nN = len(matrix)\nuf = UnionFind(N)\nfor i in range(N):\n    for j in range(N):\n        if matrix[i][j] == 1:\n            uf.union(i, j)\n        elif matrix[i][j] == 2:\n            uf.union(i, j)\n        else:\n            print(uf.same(i, j))"}, "315": {"problem_id": 4315, "answer": "import sys\nreadline = sys.stdin.readline\nr = int(readline())\nprint(2*pi*r/360)"}, "316": {"problem_id": 4316, "answer": "s = input()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d.keys():\n        d[s[i]] += 1\n    else:\n        d[s[i]] = 1\nif len(d) == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "317": {"problem_id": 4317, "answer": "from fractions import Fraction\na,b=map(int,input().split())\nprint(max(Fraction(a,b),Fraction(b,a),Fraction(a,b-a)))"}, "318": {"problem_id": 4318, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nH = list(map(int, input().split()))\n\nans = 0\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        ans += 1\nprint(ans)"}, "319": {"problem_id": 4319, "answer": "n = int(input())\na = list(map(int, input().split()))\nt = 0\nfor i in range(n):\n    t += a[i]\n    a.remove(a[i])\nprint(t)\nfor i in range(1, n):\n    print(t, end=' ')\n    t += a[i]\n"}, "320": {"problem_id": 4320, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    ans=n//2\n    if n%2==1:\n        print(ans)\n    else:\n        print(ans+1)"}, "321": {"problem_id": 4321, "answer": "n,k = map(int,input().split())\ni = 0\nwhile k>0:\n    n = n - n%10\n    i+=1\n    k-=1\nprint(i*n)"}, "322": {"problem_id": 4322, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = []\ncnt = 0\nfor i in range(n):\n    ans.append(a[i] - a[i - 1])\n    cnt += max(ans[i - 1] - ans[i - 2], 0)\n\nprint(cnt)\nprint(*ans)"}, "323": {"problem_id": 4323, "answer": "import bisect\nn,m=map(int,input().split())\nt=[]\nfor i in range(n):\n    a,b=map(int,input().split())\n    t.append((a,b))\nans=10**10\nl=[]\nfor i in range(n):\n    t.sort()\n    ans=min(ans,t[-1][1] - t[0][1])\n    l.append(t[-1][0])\nif(len(l)<=m):\n    print(ans)\nelse:\n    print(-1)"}, "324": {"problem_id": 4324, "answer": "t = int(input())\nfor _ in range(t):\n    n, a, b = map(int, input().split())\n    print(''.join(sorted(set(a), key=lambda x: (len(x[0]), x[1], x[2]))))"}, "325": {"problem_id": 4325, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, x, t = map(int, input().split())\nt = t + (n - 1) * x\nprint(min(t, n))"}, "326": {"problem_id": 4326, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nread = lambda: int(input())\nn = read()\nans = n // 3 + (n % 3 == 0)\nprint(ans)"}, "327": {"problem_id": 4327, "answer": "A, P = map(int, input().split())\ns = 0\nfor i in range(A+1):\n    s += P*(A-i)\nprint(s)"}, "328": {"problem_id": 4328, "answer": "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\nsys.setrecursionlimit(10**6)\nINF = float('inf')\nMOD = 10**9+7\n\nA,B = MI()\nprint(*[A] + B, sep=\"\\n\")\n"}, "329": {"problem_id": 4329, "answer": "s = input()\nt = input()\nprint(['Yes', 'No'][s.index(t) > s.index(t[::-1])])"}, "330": {"problem_id": 4330, "answer": "from operator import itemgetter\na, b = map(int, input().split())\nprint(next(k for k in range(1, a + 1) if a - k == b - k))"}, "331": {"problem_id": 4331, "answer": "#!/usr/bin/env python3\n\ndef __starting_point():\n    n = int(input())\n    print(['No', 'Yes'][n%10!= 7])\n__starting_point()"}, "332": {"problem_id": 4332, "answer": "def I(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LI2(): return list(map(int, input().split()))\ndef SIN(): return input()\ndef LN(): return list(map(int, input().split()))\ndef LCM(n, m): return [l * 10 for l in range(m)]\ndef Seg():\n    s = input()\n    return [int(s[i]) for i in range(len(s))]\nimport sys\nsys.setrecursionlimit(10**6)\nINF = float('inf')\nMOD = 10**9+7\ninput = lambda: sys.stdin.readline().rstrip()\nM = [0]*10\nM[0] = 1\nfor _ in range(I()):\n    M[int(input())%10] += 1\nprint('Yes' if M[SIN()]==1 else 'No')"}, "333": {"problem_id": 4333, "answer": "import sys\ninput = sys.stdin.readline\nINF = float('INF')\nMOD = 10**9 + 7\nsys.setrecursionlimit(10**5)\ninf = 1<<32\ndef makedict(s): return dict(s)\ndef mintxyr(ind,n): return [int(i) for i in reversed(sorted(n))]\ndef minty(ind,n): return [i for i in reversed(sorted(n))]\ndef mintpi(ind,n): return [i for i in reversed(sorted(n))]\ndef mintpf(ind,n): return [i for i in reversed(sorted(n))]\ndef mints(ind,n): return [i for i in reversed(sorted(n))]\ndef mintri(ind,n): return [i for i in reversed(sorted(n))]\ndef mintra(ind,n): return [i for i in reversed(sorted(n))]\ndef mintrif(ind,n): return [i for i in reversed(sorted(n))]\ndef mintrih(ind,n): return [i for i in reversed(sorted(n))]\ndef mintrih(ind,n): return [i for i in reversed(sorted(n))]\ndef mintz(ind,n): return [i for i in reversed(sorted(n))]\ndef minta(ind,n): return [i for i in reversed(sorted(n))]\ndef minti(ind,n): return [i for i in reversed(sorted(n))]\ndef mintl(ind,n): return [i for i in reversed(sorted(n))]\ndef mintr(ind,n): return [i for i in reversed(sorted(n))]\ndef mintl(ind,n): return [i for i in reversed(sorted(n))]\nx1,y1 = map(int,input().split())\nx2,y2 = map(int,input().split())\nprint(mints(x1-1,y1-1),mints(x2-1,y2-1),mints(x1-x2+1,y1-y2+1),mints(x2-x1+1,y2-y1+1),mints(x1-x2,y1-y2),mints(x2-x1,y2-y1))"}, "334": {"problem_id": 4334, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\nread = lambda: int(input())\n\nS = list(S)\nT = list(T)\nU = list(U)\nA, B = read()\ns, t, u = [], [], []\nfor i in range(A):\n    if S[i]==U[i]:\n        s.append(i)\n    else:\n        t.append(i)\nprint(len(s))"}, "335": {"problem_id": 4335, "answer": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\n\n#@lru_cache(None)\ndef solve():\n    N = INT()\n    S = input()\n    if len(S) < N:\n        print('No')\n        return\n    elif S[-1] == 'c':\n        print('No')\n        return\n    else:\n        d = []\n        for i in range(N):\n            d.append(S[i])\n            solve()\n        print('Yes')\n\ndef __starting_point():\n    solve()\n__starting_point()"}, "336": {"problem_id": 4336, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    W, H = list(map(int, input().split()))\n    x, y = list(map(int, input().split()))\n    if x < W:\n        x = W\n    elif x > 4 * W:\n        x = 4 * W\n    ans = max(0, y * (W - x) - H)\n    print(ans)\n    if abs(ans - y * (W - x)) < 10 ** -9:\n        print(\"0\")\n    else:\n        print(\"{0:.9f}\".format(ans))\n"}, "337": {"problem_id": 4337, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nSA = [list(map(int, input().split())) for _ in range(N)]\nSA.sort()\nans = 'Three' if 3 in SA else 'Four'\nprint(ans)"}, "338": {"problem_id": 4338, "answer": "import sys\ninput = sys.stdin.readline\nn, x, y = list(map(int, input().split()))\na = list(map(int, input().split()))\ndur = [0] * n\nfor i in range(n):\n    dur[i] = a[i] - x\nans = 0\nfor i in range(n):\n    if dur[i] > 0:\n        ans += 1\n    elif dur[i] == 0:\n        ans += 1\nprint(ans)\n"}, "339": {"problem_id": 4339, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    if a[i] + a[i + 1] > b[i] + b[i + 1]:\n        cnt += 1\n\nprint(cnt)"}, "340": {"problem_id": 4340, "answer": "from sys import stdin\ninput = stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\ncnt = 0\nd = {}\nfor i in range(n):\n    d[a[i]] = i\n    cnt += 1\n\nm = 10000\nfor i in range(m):\n    a.append(a[i])\n    cnt += 1\n\nb = [0] * 10 ** 5\nb[0] = a[0]\nb[1] = a[1]\nb[2] = a[2]\nb[3] = a[3]\nb[4] = a[4]\nb[5] = a[5]\nfor i in range(6):\n    b[i] = min(b[i], a[i])\nprint(*b)"}, "341": {"problem_id": 4341, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v = map(int, input().split())\n    edges[u-1].append(v-1)\n    edges[v-1].append(u-1)\n\ncomponents = [set() for _ in range(n)]\nvisited = [False for _ in range(n)]\nans = 0\nfor c in range(1, n):\n    if visited[c]:\n        continue\n    visited[c] = True\n    for e in edges[c]:\n        if not visited[e]:\n            visited[e] = True\n            ans += 1\n            for ne in components[e]:\n                components[ne].remove(c)\n                components[c].remove(ne)\nprint(ans)"}, "342": {"problem_id": 4342, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nadj = [[] for _ in range(n)]\nfor i in range(n - 1):\n    u, v = list(map(int, input().split()))\n    adj[u].append(v)\n    adj[v].append(u)\n\ncolor = [0] * n\nis_nice = [False] * n\nvisited = [False] * n\nans = 0\nfor i in range(n):\n    if visited[i]:\n        continue\n    visited[i] = True\n    color[i] = 1\n    is_nice[i] = True\n\nedges = []\nfor i in range(n):\n    u, v = list(map(int, input().split()))\n    edges.append((u, v, color[u] == 2, is_nice[u]))\n\nvisited = [False] * n\nans += len(edges)\n\ndef dfs(u, v, p, is_nice):\n    nonlocal ans\n    visited[u] = True\n    visited[v] = True\n    color[u] = 2\n    color[v] = 2\n    for e in edges:\n        if e[0] == u:\n            dfs(e[1], v, p, is_nice)\n        elif e[0] == v:\n            dfs(e[1], u, p, is_nice)\n"}, "343": {"problem_id": 4343, "answer": "import sys\ninput = sys.stdin.readline\n\nk = int(input())\ns = input().rstrip()\nt = input().rstrip()\n\nd = {}\nfor i in range(k):\n    d[t[i]] = d.get(t[i],0)+1\n\nans = []\nfor i in range(k):\n    if s[i] == t[i]:\n        ans.append(chr(97+i))\n\nprint(''.join(ans))"}, "344": {"problem_id": 4344, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ns = set(a)\nd = [[] for i in range(n)]\nfor i in range(n):\n    d[i].append(i)\n\nans = []\ni = 0\nwhile i < k:\n    j = min(k - i, n - 1)\n    ans.append(a[j])\n    for h in d[j]:\n        if a[h] not in s:\n            s.add(a[h])\n            d[h].remove(a[h])\n            i = j\n            break\n    i += 1\n\nprint(' '.join(map(str, ans)))\n"}, "345": {"problem_id": 4345, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = []\nfor i in range(n):\n    ans.append(a[i])\n\nans.reverse()\n\ns = ''.join(map(str, a))\nd = ''.join(map(str, a[::-1]))\n\nif s == d:\n    print('NO')\n    return\n\ncnt = 0\nres = []\nfor i in range(n):\n    if ans[i] == '1':\n        cnt += 1\n    elif ans[i] == '0':\n        cnt -= 1\n    else:\n        if cnt == 0:\n            res.append(str(ans[i]))\n            cnt = 0\n        else:\n            res.append(str(ans[i]))\n            cnt = 1\n\nprint('YES')\nfor i in res:\n    print(i, end=' ')\n"}, "346": {"problem_id": 4346, "answer": "t = int(input())\nfor _ in range(t):\n    l, v, l_, r_, ans = list(map(int, input().split()))\n    l_ %= v\n    r_ %= v\n    for i in range(l_):\n        ans += 1\n    for i in range(l_, r_ + 1):\n        if i in [l, l + v] and i - l > v:\n            ans += 1\n    print(ans)\n"}, "347": {"problem_id": 4347, "answer": "import math\nn=int(input())\nif n%2==0:\n    print(1)\nelse:\n    c=0\n    x=n//2\n    for i in range(1,x+1):\n        c+=math.factorial(x)//(math.factorial(x-i)*math.factorial(i))\n    print(c)"}, "348": {"problem_id": 4348, "answer": "n, k = list(map(int, input().split()))\ns = input()\na = s.count('a')\nb = s.count('b')\nc = s.count('c')\nd = s.count('d')\ne = s.count('e')\nf = s.count('f')\ng = s.count('g')\nh = s.count('h')\ni = s.count('i')\nj = s.count('j')\nk = s.count('k')\nif a + b + c + d + e + f + g + h + i + j + k == n:\n    print(\"\")\nelse:\n    print(s[:k] + \"\".join(map(str, s[k + 1:])))\n"}, "349": {"problem_id": 4349, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef solve():\n    n, m = map(int, readline().split())\n    k = list(map(int, readline().split()))\n    l = [[] for _ in range(n)]\n    for i in range(m):\n        d, t = map(int, readline().split())\n        l[d-1].append(t)\n        l[t-1].append(d-1)\n    ans = 0\n    for i in range(n):\n        if l[i] not in l[i+1]:\n            ans += 1\n            break\n    return ans\n\ndef main():\n    solve()\n\nmain()"}, "350": {"problem_id": 4350, "answer": "n, m = list(map(int, input().split()))\na = []\nb = []\nfor i in range(n):\n    a.append(input())\n    b.append(input())\nans = []\nfor i in range(3, min(m, n)):\n    x, y, s = list(map(int, a[i]))\n    ans.append((x, y, s))\n    if s > n * m:\n        print(-1)\n        break\nfor i in range(3, min(m, n)):\n    x, y, s = list(map(int, b[i]))\n    ans.append((x, y, s))\n    if s > n * m:\n        print(-1)\n        break\nprint(*ans)\n"}, "351": {"problem_id": 4351, "answer": "n = int(input())\nprint(['No','Yes'][n%10!= 0])"}, "352": {"problem_id": 4352, "answer": "A,B=list(map(int,input().split()))\nc=0\nfor i in range(1,A+1):\n    if A%i==0:\n        c+=1\n    else:\n        break\nif c==A:\n    print(\"Bob\")\nelse:\n    print(\"Alice\")\n"}, "353": {"problem_id": 4353, "answer": "s = input()\nfor i in range(1, 20):\n    if i not in '0123456789':\n        s = s.replace(i,' ')\nprint(s)"}, "354": {"problem_id": 4354, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nN,M = map(int,input().split())\na = [int(i) for i in input().split()]\nc = [int(i) for i in input().split()]\nd = [int(i) for i in input().split()]\nE = []\nfor i in range(N):\n    E.append((a[i],c[i]))\nE.sort()\nS = deque()\nS.append((0,0))\nwhile S:\n    i,j = S.popleft()\n    if i>j:\n        S.append((i,j))\n        continue\n    c1 = abs(i-S[0][0])+abs(j-S[0][1])\n    d1 = abs(i-S[0][0])+abs(j-S[1][1])\n    if c1<d1:\n        S.append((i,j))\n        continue\n    c2 = abs(i-S[1][0])+abs(j-S[1][1])\n    d2 = abs(i-S[1][0])+abs(j-S[2][1])\n    if c2<d2:\n        S.append((i,j))\nprint(*S,sep=\"\\n\")"}, "355": {"problem_id": 4355, "answer": "import sys\ninput = sys.stdin.readline\n\na = int(input())\nprint(a + a**2 + a**3)"}, "356": {"problem_id": 4356, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, m = map(int, input().split())\n    a = [input() for _ in range(n)]\n    b = [input() for _ in range(m)]\n    d = {}\n    for i in range(n):\n        d[a[i][0]] = a[i][1]\n    for i in range(m):\n        d[b[i][0]] = b[i][1]\n    ans = 0\n    for i in range(n):\n        if d.get(a[i][0], None) is None:\n            ans = 1\n            break\n        for j in range(m):\n            if d.get(b[j][0], None) is None:\n                ans = 1\n                break\n        if ans == 0:\n            print(\"Yes\")\n            return\n    print(\"No\")\n"}, "357": {"problem_id": 4357, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nwrite = lambda x: sys.stdout.write(x+'\\n')\n\n\nA, B, C = list(map(int, input().split()))\np = [A, B, C, 9]\nq = [p[i] for i in range(10)]\nr = [p[i] for i in range(10)]\ns = [p[i] for i in range(10)]\nt = [p[i] for i in range(10)]\nans = 0\nfor i in range(10):\n    ans += max(q[i]*A, r[i]*B, s[i]*C)\nprint(ans)"}, "358": {"problem_id": 4358, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nINF = float('inf')\nMOD = 10**9+7\nN = int(input())\nP = list(map(int, input().split()))\nprices = [0]*N\nfor i in range(N-1):\n    prices[i] += P[i]\n    if prices[i] > prices[i+1]*0.5:\n        prices[i] = prices[i+1]*0.5\nprint(prices[-1])"}, "359": {"problem_id": 4359, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\ndef __starting_point():\n    a = int(input())\n    b = int(input())\n    c = int(input())\n    d = int(input())\n    e = int(input())\n    \n    if a%10!=0:\n        print(0)\n    elif b%10!=0:\n        print(b)\n    elif c%10!=0:\n        print(c)\n    elif d%10!=0:\n        print(d)\n    else:\n        print(e)\n__starting_point()"}, "360": {"problem_id": 4360, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nMOD = 10**9+7\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    x = 1\n    for a in A:\n        x *= a\n    x /= (a+1)\n    print(x*INF)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "361": {"problem_id": 4361, "answer": "import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nG = [tuple(map(int, input().split())) for _ in range(N)]\nans = 10**10\nfor a, b in G:\n    ans = min(ans, abs(a - b))\nprint(ans)"}, "362": {"problem_id": 4362, "answer": "alpha = input()\nif alpha.isupper():\n    print(\"A\")\nelse:\n    print(\"a\")"}, "363": {"problem_id": 4363, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    k, s = map(int, input().split())\n    dp = [[0] * (k + 1) for _ in range(2)]\n    for i in range(1, k + 1):\n        dp[i][0] = 1\n    for i in range(1, k + 1):\n        for j in range(1, min(i + 1, s + 1) + 1):\n            dp[i][j] = dp[i][j - 1] + dp[i - 1][j - 1]\n    print(dp[s][k])\n\nsolve()"}, "364": {"problem_id": 4364, "answer": "s = input()\ns = s.split('0')\ns[0] = int(s[0])\ns = s[1:]\ny, m = s[0], s[1]\nprint(''.join(map(str, y + m)))"}, "365": {"problem_id": 4365, "answer": "import sys\ninput = sys.stdin.readline\nK = int(input())\ncnt = 0\nfor i in range(1, K+1):\n    if i % 2 == 0:\n        cnt += 1\nprint(cnt)"}, "366": {"problem_id": 4366, "answer": "A,B=map(int,input().split())\nprint(f'{A} {B:.2f}')"}, "367": {"problem_id": 4367, "answer": "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\nn,r=LI()\nprint(n-r*100)"}, "368": {"problem_id": 4368, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nn,k=map(int,input().split())\nprint(n//k)"}, "369": {"problem_id": 4369, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\n\nl = 1\nr = N\n\nwhile l <= r:\n    print(l * 2)\n    l *= 2\n    r -= 1\n"}, "370": {"problem_id": 4370, "answer": "import sys\ninput = sys.stdin.readline\n\nA, B = list(map(int, input().split()))\n\nif A > B:\n    print('(', end=' ')\n    print(A, end=' ')\n    print(B, end=' ')\nelse:\n    print(')')\n"}, "371": {"problem_id": 4371, "answer": "import sys\ninput = sys.stdin.readline\n\nS = input().rstrip()\nd = {i:int(i) for i in S[:-1]]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "}, "372": {"problem_id": 4372, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\n\nb = {}\nfor i in range(n):\n    if a[i] not in b.keys():\n        b[a[i]] = i\n    else:\n        b[a[i]] += 1\n\nc = 0\nres = 0\nfor i in range(n):\n    if d[a[i]] == i:\n        c += 1\n    elif d[a[i]] == i + 1:\n        c += 2\n    else:\n        c += 3\n\nprint(c, end ='')\nprint(res)"}, "373": {"problem_id": 4373, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\nn=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n    s+=a[i]\n    if s<=k:\n        break\nprint(s//k)"}, "374": {"problem_id": 4374, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nedges = []\nfor _ in range(m):\n    a, b = list(map(int, input().split()))\n    edges.append((a, b))\n\nd = n - m + 1\nadj = [[] for _ in range(n)]\nfor i in range(1, n):\n    adj[i].append(i)\n\nvisited = [False] * n\nvisited[0] = True\nans = 0\nwhile visited[0] == False:\n    visited[0] = True\n    for i in adj[0]:\n        x, y = i\n        ans += 1\n        for nex in adj[x]:\n            if visited[nex] == False:\n                visited[nex] = True\n                ans -= 1\n                if ans == 0:\n                    break\nprint(d)\nfor i in range(len(edges)):\n    a, b = edges[i]\n    print(min(a, b), end=\" \")\n"}, "375": {"problem_id": 4375, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\nedges = list(map(int, input().split()))\nadj = [[] for _ in range(n)]\nfor u, v in edges:\n  adj[u].append(v)\n  adj[v].append(u)\n\nvisited = [0] * n\nans = 0\ncurr = 0\nstack = []\nwhile stack:\n  u = stack.pop()\n  for v in adj[u]:\n    if visited[v] == 0:\n      visited[v] = 1\n      curr += edges[v]\n      ans = max(ans, curr)\n      stack.append(v)\nprint(ans)"}, "376": {"problem_id": 4376, "answer": "import sys\nreadline = sys.stdin.readline\nn,m = map(int,readline().split())\na = list(map(int,readline().split()))\nb = list(map(int,readline().split()))\nd1 = dict()\nd2 = dict()\nfor i in range(n):\n    if b[i] not in d1:\n        d1[b[i]] = i\n    else:\n        d1[b[i]] = d1[i] + 1\nfor i in range(m):\n    print(d1[a[i]],d2[a[i]])"}, "377": {"problem_id": 4377, "answer": "import sys\ninput = sys.stdin.readline\n\ndef isp(s):\n    return s[0] == '0'\n\ndef main():\n    x = input().split()\n    x = [int(x) for x in x]\n    x.sort()\n    print(2, 1, 3, 4)\n    for i in range(3):\n        if isp(x[i]) and isp(x[i+1]) and isp(x[i+2]):\n            print(x[i], x[i+1], x[i+2], x[i+3])\n        elif isp(x[i]) and isp(x[i+1]) and isp(x[i+2]):\n            print(x[i], x[i+1], x[i+2], x[i+3])\n        elif isp(x[i]) and isp(x[i+1]) and isp(x[i+2]):\n            print(x[i], x[i+1], x[i+2], x[i+3])\n        elif isp(x[i]) and isp(x[i+1]) and isp(x[i+2]):\n            print(x[i], x[i+1], x[i+2], x[i+3])\n\nmain()"}, "378": {"problem_id": 4378, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip()\n\na = [0] * n\nb = [0] * n\nc = [0] * n\n\nfor i in range(n):\n    a[i] = s[i]\n    b[i] = s[i]\n    c[i] = s[i]\n\nans = 0\nmin_diverse = 0\n\nfor i in range(n):\n    if a[i]!= b[i] or a[i]!= c[i]:\n        ans += 1\n        min_diverse += 1\n\nprint(ans)\nprint(min_diverse)"}, "379": {"problem_id": 4379, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nprint = [0] * (n + 1)\nres = [0] * (n + 1)\nfor i in range(1, n + 1):\n    print[i] = a[i - 1]\n    res[i] = 1\n    for j in range(i - 1, i - 1 - k, -1):\n        print[j] = a[j - 1]\n        res[j] = 1\n    print[i] = a[i - 1]\nprint(res)\n"}, "380": {"problem_id": 4380, "answer": "from operator import __truediv__ as div\nfrom itertools import combinations\n\nA,B=map(int,input().split())\ns=set()\nfor i in range(1,3):\n    if div(A*B,i)==0:\n        s.add(i)\nprint(('Yes' if sum(s)%2==0 else 'No'))"}, "381": {"problem_id": 4381, "answer": "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI2(): return list(map(int,sys.stdin.readline().rstrip()))\ndef LI3(): return list(map(int,sys.stdin.readline());6<int(sys.stdin.readline().rstrip()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\ndef LS2(): return list(sys.stdin.readline().rstrip().split())\ndef LS3(): return list(sys.stdin.readline().rstrip().split())\ndef main():\n    X,Y=MI()\n    if X==Y:\n        print(X)\n    else:\n        print(X//2+Y//2)"}, "382": {"problem_id": 4382, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nn = int(input())\nprint(n**(n-1)//2 + 1)"}, "383": {"problem_id": 4383, "answer": "# -*- coding: utf-8 -*-\n\nimport sys\nreadline = sys.stdin.readline\n\nX = int(readline())\n\nif X % 4 == 0:\n    print('YES')\nelse:\n    print('NO')"}, "384": {"problem_id": 4384, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    ans = chr(97 + (n - 1) % 97)\n    while n:\n        ans += chr(97 + (n - 1) % 97)\n        n -= 3\n    print(ans)\n\nmain()\n"}, "385": {"problem_id": 4385, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    a = int(input())\n    b = int(input())\n    c = int(input())\n    d = int(input())\n    e = int(input())\n    k = int(input())\n    if a < b < c < d < e and k <= 15:\n        print(\"Yay!\")\n    else:\n        print(\"\\n\".join([\"Yay!\"]*(k-15)))\n\nmain()"}, "386": {"problem_id": 4386, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\ndef solve(a):\n    s = input()\n    if a < 3200:\n        print('pink')\n    elif a > 3200:\n        print('red')\n    else:\n        print('blue')\n\nsolve(3200)\n"}, "387": {"problem_id": 4387, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\ndef main():\n    R = int(input())\n    if R < 1200:\n        print(AGC)\n    elif R < 2800:\n        print(ABC)\n    else:\n        print(ARC)\n    return\n\n\nmain()\n"}, "388": {"problem_id": 4388, "answer": "n = int(input())\ns = 0\nfor i in range(n):\n    if i%2==0:\n        s+=9\n    else:\n        s+=1\nprint(s)"}, "389": {"problem_id": 4389, "answer": "t = int(input())\nfor _ in range(t):\n    b = input()\n    a = [i for i in b]\n    d = {}\n    for i in range(1, len(a)):\n        d[a[i]] = d.get(a[i], 0) + 1\n    print(a[1:])"}, "390": {"problem_id": 4390, "answer": "t = int(input())\nfor _ in range(t):\n    a, b = map(int, input().split())\n    print(a // b)"}, "391": {"problem_id": 4391, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\ndays = list(map(int, input().split()))\nsegments = []\nfor i in range(k):\n    segments.append(days[i] / i)\n\nres = 0\nres_l = 0\ncurr = 0\nfor i in range(len(segments) - 1):\n    curr = segments[i]\n    res = max(res, curr)\n    res_l = max(res_l, segments[i] - curr)\n\nprint(res)\n"}, "392": {"problem_id": 4392, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,m=map(int,input().split())\n    a=list(map(int,input().split()))\n    p=map(int,input().split())\n    ans=0\n    d={}\n    for i in p:\n        d[i]=1\n    for i in range(n):\n        if a[i]<a[i+1]:\n            ans=0\n            break\n    for i in range(m):\n        if p[i]<p[i+1]:\n            ans=0\n            break\n    if ans:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "393": {"problem_id": 4393, "answer": "n = int(input())\ns = input()\na = [0] * 26\nfor i in range(n):\n    a[ord(s[i]) - ord('a')] += 1\n    \nprint(''.join(a))"}, "394": {"problem_id": 4394, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v, w = list(map(int, input().split()))\n    edges[u-1].append((v-1, w))\n    edges[v-1].append((u-1, w))\n\ns = set()\ns.add((1, 0))\ncnt = 0\nwhile cnt < n:\n    u, v, w = list(s), list(s), list(s)\n    u.append(v-1)\n    v.append(u-1)\n    cnt += 1\n    s.discard((u, v))\n    s.discard((v, u))\n    edges[u-1].pop()\n    edges[v-1].pop()\n    s.add((u, v))\n    s.add((v, u))\n\nprint(m)\n"}, "395": {"problem_id": 4395, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\ns = list(map(int, readline().split()))\n\nans = 0\nm = set([s[0]])\nfor i in range(1, n):\n    m.add(s[i])\n    ans += 1\n\nprint(ans)\nprint(''.join(m))"}, "396": {"problem_id": 4396, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    xs = list(map(int, input().split()))\n    uxs = list(map(float, input().split()))\n    xs.sort()\n    uxs.sort()\n    total = 0.0\n    for i in range(n):\n        total += xs[i]*uys[i]\n    print(total)\n\nmain()"}, "397": {"problem_id": 4397, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")"}, "398": {"problem_id": 4398, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nN = int(input())\nS = list(input())\nT = list(input())\n\n# \u9ad8\u901f\u5165\u53f3\u7aef\u53ef\u89c1\u7684\u533a\u9593\ninp = [chr(i) for i in range(26)]\n\n# \u533a\u9593\u5185\u6c92\u6709\u5b57\u5143\uff0c\u5219\u5165\u53f3\u7aef\u51fa\u73fe\nout = []\nfor i in range(26):\n    if inp[i]!= chr(i):\n        out.append(i)\n\n# \u5f53\u524d\u533a\u9593\u5185\u6c92\u6709\u5b57\u5143\uff0c\u5219\u5728\u5f53\u524d\u533a\u9593\u5185\u90fd\u5df2\u7d93\u51fa\u73fe\nstack = [out[0]]\nfor i in range(1, len(out)):\n    while stack and out[i]!= stack[-1]:\n        stack.pop()\n    stack.append(out[i])\nprint(\"\".join(stack))"}, "399": {"problem_id": 4399, "answer": "import sys\ninput = sys.stdin.readline\n\nS = input().rstrip()\n\nc = 0\nfor i in range(len(S)):\n    if S[i] == 'A':\n        c += 1\n    else:\n        c -= 1\n\nif c == 0:\n    print('No')\nelse:\n    print('Yes')"}, "400": {"problem_id": 4400, "answer": "s = input()\nn = len(s)\nd = [0] * 10\nfor i in range(n):\n    if s[i] == \"R\":\n        d[i] = d[i - 1] + 1\n    else:\n        d[i] = d[i - 1] + 2\nprint(max(d))"}, "401": {"problem_id": 4401, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nread = lambda: int(input())\nx = lambda: list(map(int, input().split()))\ny = lambda: list(map(int, input().split()))\nz = lambda: list(map(int, input().split()))\n \nclass SegTree:\n    def __init__(self, n):\n        self.seg = [0] * (n + 1)\n        self.sz = n + 1\n \n    def build(self, v):\n        i = self.seg[v]\n        while i < self.sz:\n            self.seg[i] = v\n            i += 1\n \n    def query(self, v):\n        i = self.seg[v]\n        s = 0\n        while i > s:\n            s = i\n            i -= 1\n        return self.seg[s]\n \n    def update(self, v, x):\n        i = self.seg[v]\n        while i < self.sz:\n            self.seg[i] = self.seg[i+1]\n            i += 1\n \n    def sum(self, v):\n        res = 0\n        i = self.seg[v]\n        s = 0\n        while i > s:\n            res += self.seg[i]\n            i -= 1\n        return res\n \n    def query_sum(self, v):\n        return self.query(v) - self.query(0)\n \n    def query(self, v):\n        res = self.sum(v)\n        s = 0\n        i = self.seg[v]\n        while i > s:\n            s += self.seg[i]\n            i -= 1\n        return res + self.query(s)\n \n    def sumv(self, v):\n        res = 0\n        i = self.seg[v]\n        s = 0\n        while i > s:\n            res += self.seg[i]\n            i -= 1\n        return res + self.sumv(s)\n \n    def queryv(self, v):\n        res = self.query(v)\n        s = 0\n        i = self.seg[v]\n        while i > s:\n            s += self.seg[i]\n            i -= 1\n        return res + self.queryv(s)\n \n    def add(self, v, x):\n        i = self.seg[v]\n        while i > 1:\n            i -= self.seg[i]\n            self.seg[i] = v\n \n    def queryadd(self, v,"}, "402": {"problem_id": 4402, "answer": "A = int(input())\nB = int(input())\nans = 100*A/2\nfor i in range(A):\n    if i%2==0:\n        ans += (B//2)*(i//2)\nprint(ans)"}, "403": {"problem_id": 4403, "answer": "import sys\ninput = sys.stdin.readline\n\nS = input().rstrip()\n\ndef eat(S):\n    cnt = 0\n    for i in S:\n        if i == \"+\":\n            cnt += 1\n        elif i == \"-\":\n            cnt -= 1\n    return cnt\n\nprint(eat(S))"}, "404": {"problem_id": 4404, "answer": "s = input()\ns = s.rjust(7,\"/\")\nd = s[:len(s)-7]\nprint(d)"}, "405": {"problem_id": 4405, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nans = 0\nfor i in range(n-1):\n    ans += (2*a[i+1] - a[i])**2\nprint(ans)"}, "406": {"problem_id": 4406, "answer": "import sys\nreadline = sys.stdin.readline\nn, k = list(map(int, readline().split()))\nd = {}\nfor i in range(n):\n    d[int(input())] = i\nans = []\nfor i in range(1, n + 1):\n    ans.append(d[i])\nprint(len(ans))\nprint(*ans)\n"}, "407": {"problem_id": 4407, "answer": "import sys\ninput = sys.stdin.readline\n\nn, q = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nd = max(a) - min(a)\n\nfor i in range(n):\n    a[i] = 2 ** d\n\nq = int(input())\nans = [0] * q\nfor _ in range(q):\n    b = int(input())\n    ans[b] = a.count(b)\n\nprint(*ans, sep='\\n')\n"}, "408": {"problem_id": 4408, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nt = list(map(int, input().split()))\nf = list(map(int, input().split()))\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(k):\n    if h[i]!=i:\n        ans += t[i]\nprint(ans)\n"}, "409": {"problem_id": 4409, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\ncnt = [0] * n\nd = {}\nfor i in range(n):\n    d[a[i]] = i\n    cnt[i] += 1\ns = 0\nfor i in range(n):\n    s += abs(d[a[i]] - i)\nprint(s)\nfor i in range(3, n + 1):\n    if d[i] == i:\n        print(i)\n        continue\n    t = n - i\n    d[i] = min(d[i], t)\n    cnt[d[i]] += t\n    s += abs(d[i] - i)\n"}, "410": {"problem_id": 4410, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n,k=list(map(int,input().split()))\n    s=input()\n    a=len(s)\n    if a>n//k:\n        print(0)\n    else:\n        b=0\n        for i in range(1,n//k+1):\n            if s[i]==\"1\":\n                b+=1\n        print(b)\n"}, "411": {"problem_id": 4411, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+5\nMOD = 10**9+7\n\n\ndef solve(s, k):\n    dp = [INF]*len(s)\n    for i in range(len(s)):\n        if s[i] == s[i+1]:\n            continue\n        dp[i] = min(dp[i-1], dp[i]+(k-s[i]))\n        s[i] = s[i+1]\n    return dp[len(s)-1]\n\n\nn, k = map(int, readline().split())\nsegments = [list(map(int, readline().split())) for _ in range(n)]\nans = solve(segments, k)\nprint(ans)\nprint(*ans, sep='\\n')"}, "412": {"problem_id": 4412, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[0] + a[1] + a[2])"}, "413": {"problem_id": 4413, "answer": "import sys\nreadline = sys.stdin.readline\n\nQ = int(readline())\nAns = [i for i in range(Q)]\nA = list(map(int, readline().split()))\nM = max(A)\nB = sorted(set(A), key=lambda x: A[x], reverse=True)\nC = []\nfor i in range(M):\n    C.append(B[i])\n\n#print(C)\n\nfor i in range(Q):\n    team_count = 0\n    for j in range(len(C)):\n        if i == j:\n            continue\n        dif = C[j] - C[i]\n        if dif > 1:\n            team_count += 1\n    Ans[i] = team_count\n\nprint(Ans[0])"}, "414": {"problem_id": 4414, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    a, b, n, S = map(int, input().split())\n    ans = bin(n)[2:]\n    ans = 'YES' if len(ans) == len(bin(n)[2:]) else 'NO'\n    print(ans)"}, "415": {"problem_id": 4415, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nd = 0\nans = [0]*n\nfor i in range(n):\n    if a[i] < a[i+1]:\n        s += 1\n    elif a[i] > a[i+1]:\n        s -= 1\n    ans[i] = s\n    if s == 0:\n        s = 0\n        ans.append(0)\nprint('YES')\nfor i in range(n):\n    print(ans[i], end=' ')\n"}, "416": {"problem_id": 4416, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\ns = [0] * n\na = [0] * n\nb = [0] * n\nfor i in range(n):\n    t, a, b = list(map(int, input().split()))\n    s[i] = t\n    a[i] = 1\n    b[i] = 1\n\nans = 0\ncnt = 0\nfor i in range(n):\n    if s[i] > k:\n        cnt += 1\n    elif s[i] == k:\n        ans += k\n        cnt += 1\n\nif cnt > 0:\n    print(-1)\n    return\n\nd = n - cnt\ndp = [[0] * d for _ in range(n)]\ndp[0][0] = 1\nfor i in range(1, d):\n    for j in range(cnt + 1):\n        if dp[i][j] == 0:\n            dp[i][j] = 1\n            for k in range(k - k // 2, -1, -1):\n                dp[i][j] += dp[i - 1][k]\n            dp[i][j] %= 2\n\nprint(ans)\n"}, "417": {"problem_id": 4417, "answer": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nfor _ in range(Q):\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n    ANS = [0] * N\n    for a in A:\n        ANS[a] += 1\n    B = max(ANS)\n    print(B)"}, "418": {"problem_id": 4418, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\n    \nres = 0\nm = 1000000007\nans = 0\nfor i in range(n):\n    if d[a[i]] == i:\n        ans += 1\n        m = min(m, i + res)\n        res = 0\nprint(ans)"}, "419": {"problem_id": 4419, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    a,b=map(int,input().split())\n    print(min(a,b))"}, "420": {"problem_id": 4420, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    x,y,n=map(int,input().split())\n    if n>x:\n        x,y=y,x\n    print(x*y%x)"}, "421": {"problem_id": 4421, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\nm = k // n\nb = n\nc = 0\nfor i in range(n):\n    if a[i] == 0:\n        b -= 1\n    elif a[i] == b:\n        b -= 1\n    else:\n        c += m\nprint(c)\n"}, "422": {"problem_id": 4422, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, K = list(map(int, readline().split()))\nS = list(raw_input())\n\nans = \"\"\nfor i in range(N):\n    ans += str(S.count(\"C\") * \"A\" + S.count(\"B\") * \"B\" + S.count(\"A\"))[i:i+K]\n"}, "423": {"problem_id": 4423, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\nN = int(input())\nS = list(input().rstrip())\n\nans = []\nfor i in range(N):\n    ans.append(int(S[i]) * 100)\n\nprint(*ans, sep=\"\\n\")"}, "424": {"problem_id": 4424, "answer": "k = int(input())\nx = int(input())\ny = k*x\nif k*y > x:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "425": {"problem_id": 4425, "answer": "import sys\ninput = sys.stdin.readline\nINF = float('inf')\nMOD = 10 ** 9 + 7\n\nN, K = map(int, input().split())\nprob = INF\ns = 0\nfor i in range(N):\n  s += i + 1\n  if s == K:\n    break\n  prob *= pow(2, K - i)\nprint(prob)"}, "426": {"problem_id": 4426, "answer": "s = input()\ndays = 0\nwhile s.startswith(\"SAT\"):\n    days += 1\n    s = s[7:]\n"}, "427": {"problem_id": 4427, "answer": "import sys\ninput = sys.stdin.readline\nR, D, x = list(map(int, input().split()))\nans = []\nfor i in range(2000, -1, -1):\n    ans.append(x[i]*g)\n    x[i] = R*min(x[i-1], r*x[i-1] - D)\nprint('\\n'.join(map(str, ans)))\n"}, "428": {"problem_id": 4428, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nd = [0] + list(accumulate(a))\n \ncnt = 0\nans = 0\nfor i in range(1, n):\n    if d[i] == 0:\n        cnt += 1\n        continue\n    ans = max(ans, cnt)\n    d[i] -= 1\n    cnt += 1\nprint(ans)"}, "429": {"problem_id": 4429, "answer": "t = int(input())\nfor _ in range(t):\n    x, y, z = list(map(int, input().split()))\n    if z.bit_length() < y.bit_length() and abs(x - z) < abs(y - z):\n        print(\"YES\")\n        print(x, y, z)\n    elif x == z:\n        print(\"YES\")\n        print(x, y, z)\n    else:\n        print(\"NO\")\n"}, "430": {"problem_id": 4430, "answer": "import sys\ninput = sys.stdin.readline\nn, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nd = [[0] * k for _ in range(n)]\nfor i in range(n):\n    for j in range(k):\n        if a[i] <= j:\n            d[i][j] = d[i][j] + 1\nans = 0\nfor i in range(n):\n    ans += d[i][a[i]]\nprint(ans)\n"}, "431": {"problem_id": 4431, "answer": "n,k = map(int,input().split())\ns = input()\nc = list(map(int,input().split()))\nc.sort()\nans = 0\nfor i in range(26):\n    if(c[i]!=i):\n        ans += 1\nprint(ans)"}, "432": {"problem_id": 4432, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    ans=0\n    d=dict()\n    for i in range(n):\n        if a[i]!=0:\n            d[a[i]]=1\n        else:\n            d[a[i]]=0\n    maxi=-10**9\n    for i in d:\n        if d[i]==0:\n            ans+=(i-maxi)\n            maxi=i\n    print(ans)"}, "433": {"problem_id": 4433, "answer": "import sys\ninput = sys.stdin.readline\n \nn, m = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b = list(map(int, input().split()))\n    edges[a-1].append(b-1)\n    edges[b-1].append(a-1)\nprint(*edges, sep='\\n')\n"}, "434": {"problem_id": 4434, "answer": "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    for i in range(1, n+1):\n        ans += math.floor(i**2)\n    print(ans)"}, "435": {"problem_id": 4435, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = [0] * (n + 1)\nfor i in range(1, n):\n    if a[i] & 1 == 0:\n        d[i] = d[i - a[i]].count(1) + d[i].count(-1) + 1\n    elif a[i] & 1 == 1:\n        d[i] = d[i + a[i]].count(1) + d[i].count(-1) + 1\n\nans = [0] * (n + 1)\nans[0] = 1\nfor i in range(1, n + 1):\n    ans[i] = min(ans[i - 1], ans[i - 1] + d[i - 1] + 1)\nprint(' '.join(map(str, ans)))"}, "436": {"problem_id": 4436, "answer": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = 2**32\n    b = pow(a,n,a)\n    c = n//a\n    if b == n:\n        print(\"YES\")\n    elif c == n:\n        print(\"YES\")\n        print(a*b*c)\n    else:\n        print(\"NO\")"}, "437": {"problem_id": 4437, "answer": "n = int(input())\ns = input()\na = 0\nb = 0\nfor i in range(n):\n    if s[i] == 'a':\n        a += 1\n    elif s[i] == 'b':\n        b += 1\nprint(max(a,b))"}, "438": {"problem_id": 4438, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nkeypts = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    keypts.append([x, y])\n\nkeypts.sort()\n\ndef distance(p1, p2):\n    return abs(p1[0]-p2[0]) + abs(p1[1]-p2[1])\n\nres = distance(keypts[0][0], keypts[0][1])\nfor i in range(1, n):\n    res = min(res, distance(keypts[i-1][0], keypts[i-1][1]))\n\nprint(res)"}, "439": {"problem_id": 4439, "answer": "from collections import deque\nread = lambda: map(int, input().split())\na = read()\nb = read()\nans = deque()\nfor i in range(3):\n    if a[i]!=b[i]:\n        ans.append(i)\nprint(ans[0])"}, "440": {"problem_id": 4440, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nprint = lambda x: sys.stdout.write(str(x)+\"\\n\")\n\nL = int(input())\n\ndef solve():\n    m = 1e10\n    a, b, c = L//2, L//2 + 1, L//2 + 2\n    print(f\"{a:.6f} {b:.6f} {c:.6f}\")\n    return\n\nsolve()\n"}, "441": {"problem_id": 4441, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    if n==1:\n        print(\"Hello World\")\n        return\n    elif n==2:\n        a, b = map(int, input().split())\n        print(a+b)"}, "442": {"problem_id": 4442, "answer": "import sys\ninput = sys.stdin.readline\nwrite = sys.stdout.write\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\nif A[0] == B[0]:\n    print(A[1])\nelse:\n    cnt = 0\n    for i in range(1, 10):\n        if A[i] < B[i]:\n            cnt += 1\n    if cnt == 2:\n        print(A[1])\n    else:\n        print(A[1] + \" \" + B[cnt-1])"}, "443": {"problem_id": 4443, "answer": "c = list(input())\nc = list(c)\ns = 'a'\nfor i in range(len(c)):\n    if c[i] == s:\n        print(c[i+1])"}, "444": {"problem_id": 4444, "answer": "s = input()\nt = input()\ns = ''.join(s)\nt = ''.join(t)\nprint(s + t)"}, "445": {"problem_id": 4445, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nans = 0\nmoves = 0\nfor i in range(n):\n    if a[i] % 2 == 0:\n        moves += 1\n    elif a[i] % 2!= 0:\n        ans += a[i]\n        moves += 1\nprint(ans - moves * n)"}, "446": {"problem_id": 4446, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, a, b, k = map(int, readline().split())\nh = list(map(int, readline().split()))\np = [0]*n\ns = 0\nfor i in range(n):\n    s += a*h[i]\n    p[i] = max(p[i-1], s)\n\nm = sum(p)\nprint(m)"}, "447": {"problem_id": 4447, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[a[i]] = i\nans = 0\nfor i in range(1, n + 1):\n    if a[i] % m == 0:\n        ans += d[a[i] // m]\n        ans += i - d[a[i] // m]\nprint(ans)\n"}, "448": {"problem_id": 4448, "answer": "import sys\nread = sys.stdin.readline\nn,m = list(map(int,read().split()))\nk = list(map(int,read().split()))\na = [0]*1001\nfor i in range(n):\n    a[k[i]] += 1\n    \ns = set()\nm.sort()\nfor i in range(m):\n    s.add((k[i],i))\n    \nd = 0\nt = 10001\nwhile t:\n    t -= 1\n    for i in range(len(s)):\n        if s[i] in a:\n            d += 1\n            break\n    t += 1\n    for i in range(len(s)):\n        if s[i] in a:\n            t += 1\n            break\nprint(d)"}, "449": {"problem_id": 4449, "answer": "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if 4*n == arr.count(4*n):\n        print('YES')\n    else:\n        print('NO')"}, "450": {"problem_id": 4450, "answer": "import sys\ninput = sys.stdin.readline\nINF = 10**18+8\nMOD = 10**9+7\nsys.setrecursionlimit(10**5)\n\nn, m, k = map(int, input().split())\ne = [[] for _ in range(n)]\nfor _ in range(m):\n    x, y, w = map(int, input().split())\n    e[x].append((y, w))\n    e[y].append((x, w))\n    \ndist = [-1] * n\ndist[0] = 0\nsmin = INF\nfor i in range(1, n):\n    d = INF\n    for j in e[i]:\n        d = min(d, dist[j])\n    smin = min(smin, d)\nprint(smin)"}, "451": {"problem_id": 4451, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\ndiversity = [0]*(n+1)\nfor i in range(1, n+1):\n    diversity[i] = diversity[i-1] + max(0, A[i] - min(A[i-1], A[i]))\nprint(diversity[n], n)\nprint(*sorted(set(A)))"}, "452": {"problem_id": 4452, "answer": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = 0\n    for i in range(1, 10):\n        if n % i == 0:\n            s += i\n            break\n    print(s)"}, "453": {"problem_id": 4453, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18\nMOD = 10**9+7\nI = lambda:list(map(int,readline().split()))\ns = lambda:list(map(int,readline().split()))\nQ = int(readline())\nfor _ in range(Q):\n    n = I()\n    p = I()\n    s(p)\n    print('%d %s %d %d' %(n,'and '[0-9]', 'for' *(n//2-1),len(p),n))"}, "454": {"problem_id": 4454, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef read_int():\n    return int(readline())\n\ndef read_int_n():\n    return list(map(int, readline().split()))\n\nt = read_int()\nn = read_int()\na = read_int_n()\n\ncnt = 0\nsumm = 0\nfor i in range(n):\n    s = a[i]\n    cnt += s > a[i]\n    summ += s\n\nprint(min(cnt, summ))\n"}, "455": {"problem_id": 4455, "answer": "import heapq as hq\nn, k = list(map(int, input().split()))\nr = list(map(int, input().split()))\nres = [0]*n\nfor i in range(n):\n    res[hq.heappushpop(res, i)] += 1\nprint(*res)\n"}, "456": {"problem_id": 4456, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na.sort()\nb.sort()\n\nfor i in range(n):\n    if a[i] > b[i]:\n        print(\"NO\")\n        return\n    elif a[i] == b[i]:\n        print(\"YES\")\n        return\n\nprint(\"YES\")\nfor i in range(n):\n    print(a[i], end=\" \")\n"}, "457": {"problem_id": 4457, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = [[0] * n for _ in range(n)]\nfor i in range(n):\n    d[a[i]].append(i + 1)\nans = []\nfor i in range(n):\n    ans.append(d[a[i]][0])\nprint(max(ans))\nprint(' '.join(map(str, ans)))"}, "458": {"problem_id": 4458, "answer": "import sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**6)\nINF = float('inf')\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef LIR(n): return [I() for _ in range(n)]\ndef LLI(n): return [LIR(n) for _ in range(n)]\ndef LI2(n): return [i for i in range(n+1)]\ndef LIR2(n): return [i for i in range(n+1)]\ndef LLIR2(n): return [l for l in LLIR(n)]\nN = I()\nP = LI()\nans = 0\nfor p in P:\n    i = N\n    while i < p:\n        i += 1\n        if p < i:\n            break\n    ans += i\nprint(ans)"}, "459": {"problem_id": 4459, "answer": "from collections import deque\nN = int(input())\nA = list(map(int, input().split()))\ns = set(A)\nd = deque()\nfor i in range(len(A)):\n    d.append(A[i])\n    while d[-1] in s:\n        d.pop()\nprint(len(d))"}, "460": {"problem_id": 4460, "answer": "import sys\ninput = sys.stdin.readline\n\nx_1, x_2, x_3, x_4, x_5 = map(int, input().split())\ns = sum(x_1, x_2, x_3, x_4, x_5)\nprint(s)"}, "461": {"problem_id": 4461, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nH, W = map(int, input().split())\ns = 0\nif W > H:\n    W = H\nelse:\n    W = H + W\nprint(s - W * (W - 1) // 2)"}, "462": {"problem_id": 4462, "answer": "import sys\ninput=sys.stdin.readline\nN=int(input())\nA=list(map(int,input().split()))\nif N%4==0:\n    ans=1\nelse:\n    ans=0\nfor i in range(N):\n    if A[i]==1:\n        ans=0\n        continue\n    elif A[i]%4==0:\n        ans=1\n        continue\n    else:\n        ans=0\n        continue\nprint(\"Yes\" if ans==0 else \"No\")"}, "463": {"problem_id": 4463, "answer": "import sys\ninput = sys.stdin.readline\n\nS = list(input().rstrip())\nT = list(input().rstrip())\n\ns = [S[i] for i in range(len(S))]\nt = [T[i] for i in range(len(T))]\n\ns_cnt = 0\nt_cnt = 0\n\nfor i in range(len(S)):\n    if s[i] < t[i]:\n        s_cnt += 1\n    elif s[i] > t[i]:\n        t_cnt += 1\n\nif s_cnt == len(S) or t_cnt == len(T):\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "464": {"problem_id": 4464, "answer": "import sys\ninput = sys.stdin.readline\nA,B,C=list(map(int,input().split()))\ndef is_prime(x):\n    if x<2:\n        return False\n    if x%2==0:\n        return True\n    else:\n        return False\nprimes=[]\nfor i in range(2,A+1):\n    if is_prime(i):\n        primes.append(i)\nif len(primes)==0:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "465": {"problem_id": 4465, "answer": "A, B = map(int, input().split())\nprint(A - B*2)"}, "466": {"problem_id": 4466, "answer": "import sys\ninput = sys.stdin.readline\n\nX, Y, Z = map(int, input().split())\nres = X + Y + Z\nprint(res - min(res, Z))"}, "467": {"problem_id": 4467, "answer": "import sys\ninput = sys.stdin.readline\n\ndef dijkstra(s,d):\n    INF = 2*(N+1)\n    dp = [INF] * (2*N+2)\n    dp[0] = 0\n    for i in range(1,2*N+2):\n        if dp[i] < d[i]:\n            break\n        dp[i] = d[i]\n    ans = i\n    for j in range(min(N,d[i]),0,-1):\n        if dp[j] < d[i]:\n            break\n        dp[j] = d[i]\n        ans = max(ans,j)\n    return ans\n\nN = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = [0]*N\nd = [0]*N\nfor i in range(N):\n    a[i] -= 1\n    b[i] -= 1\n\nans = dijkstra(0,N)\nprint(ans)"}, "468": {"problem_id": 4468, "answer": "import sys\ninput = sys.stdin.readline\nN, T = map(int, input().split())\ncnt = 0\nfor i in range(N-1):\n    t = list(map(int, input().split()))\n    cnt += t[i+1] - t[i]\nprint(cnt)"}, "469": {"problem_id": 4469, "answer": "q = int(input())\nfor _ in range(q):\n    l, r,? = map(int, input().split())\n    if l == r:\n        print(0)\n    elif l > r:\n        print(2)\n    else:\n        print(1)"}, "470": {"problem_id": 4470, "answer": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nfor _ in range(Q):\n    N = int(input())\n    if N%2==0:\n        print(1)\n    elif N%3==0:\n        print(2)\n    else:\n        print(3)\n"}, "471": {"problem_id": 4471, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = True\n    for i in range(n):\n        if a[i] > 0:\n            flag = False\n            break\n    if flag:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "472": {"problem_id": 4472, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = input().strip()\nb = input().strip()\n\nans = 0\nfor i in range(26):\n    if a[i]!= b[i]:\n        ans += 1\nprint(ans)"}, "473": {"problem_id": 4473, "answer": "import sys\nreadline = sys.stdin.readline\n\nt = int(readline())\nfor query in range(t):\n    a, b, k = list(map(int, readline().split()))\n    ans = a * pow(b, k - 1, 10)\n    print(ans)"}, "474": {"problem_id": 4474, "answer": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    if n<3:\n        print(3)\n    elif n==3:\n        print(3)\n    else:\n        print(n//3)"}, "475": {"problem_id": 4475, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    a,b,x,y,n=list(map(int,input().split()))\n    if a<x and b<y:\n        print(a*b)\n    elif a<x and y<b:\n        print(a*y)\n    elif b<y and x<a:\n        print(b*x)\n    else:\n        print(min(a,x) * min(b,y))"}, "476": {"problem_id": 4476, "answer": "import sys\nimport math\nimport bisect\nfrom collections import defaultdict\ninput = sys.stdin.readline\nM = mod = 10**9 + 7\ndef inp(): return input().rstrip()\ndef out(var, end=\"\\n\"): sys.stdout.write(' '.join(map(str, var)) + end)\ndef outa(*var, end=\"\\n\"): out(map(int, var), end)\ndef lmp(): return list(map(int, input().split()))\ndef mt(var): return map(int, input().split())\ndef va(var): return [i for i in var]\ndef va1(var): return sorted(var)\ndef va2(var): return list(set(var))\ndef va3(var): return var[:-1]\ndef va4(var): return var[::-1]\nt = inp()\nfor _ in range(t):\n    a, b = lmp()\n    print(min(a, b))"}, "477": {"problem_id": 4477, "answer": "import sys\nimport math\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    x=int(input())\n    print(sum([int(i) for i in list(input()) if i.isdigit()]))"}, "478": {"problem_id": 4478, "answer": "import sys\nreadline = sys.stdin.readline\nk = int(readline())\na = list(map(int, readline().split()))\nn = len(a)\nans = [0]*n\nfor i in range(n):\n    ans[i] = a[i]\n    for j in range(i+1, n):\n        ans[j] = max(ans[j], a[i] + a[j])\nprint(\"YES\")\nfor i in range(k):\n    print(ans[i], end=\" \")\nprint()"}, "479": {"problem_id": 4479, "answer": "class Solution:\n    def largestSumAfterKNegations(self, A: List[int], K: int) -> int:\n        dp = [0]*len(A)\n        for i in range(len(A)):\n            dp[i] = max(dp[i-1]+A[i],dp[i-1])\n            for j in range(i+1,len(A)):\n                dp[j] = max(dp[j-1]+A[i]-A[j],dp[j-1])\n        return dp[-1]"}, "480": {"problem_id": 4480, "answer": "class Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        n = len(A)\n        if n <= 2:\n            return True\n        \n        dp = [0] * (n + 1)\n        dp[0] = A[0] + A[1]\n        \n        for i in range(1, n):\n            dp[i] = max(A[i], dp[i - 1])\n        "}, "481": {"problem_id": 4481, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nS = [input().rstrip() for _ in range(N)]\nprint(*dict(zip(S,S[1:]))[:N], sep='\\n')"}, "482": {"problem_id": 4482, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nN = int(input())\nA = list(map(int, input().split()))\ns = sum(A)\nans = 100000000000000000000\nfor i in range(1, N+1):\n    ans = min(ans, s+i*(i-1)**2)\nprint(ans)"}, "483": {"problem_id": 4483, "answer": "import sys\ninput = sys.stdin.readline\n\nX = int(input())\nA = int(input())\nB = int(input())\n\nans = 0\nfor i in range(X):\n    ans += A*pow(B,2)\nprint(ans)"}, "484": {"problem_id": 4484, "answer": "import sys\ninput = sys.stdin.readline\nM = 1000000007\nN = int(input())\nA = [0]*(N+1)\nB = [0]*(N+1)\nC = [0]*(N+1)\nD = [0]*(N+1)\nE = [0]*(N+1)\ndef bit_count(x):\n    return (1<<x)-1\nfor i in range(N):\n    A[i+1] = bit_count(i+1)\nfor i in range(N-1):\n    B[i+1] = bit_count(i+1)\nfor i in range(N-2):\n    C[i+1] = bit_count(i+1)\nfor i in range(N-2):\n    D[i+1] = bit_count(i+1)\nfor i in range(N-3):\n    E[i+1] = bit_count(i+1)\nans = 0\nfor i in range(N):\n    ans += A[i]*B[i]*C[i]*D[i]*E[i]\nprint(ans%M)"}, "485": {"problem_id": 4485, "answer": "import sys\ninput = sys.stdin.readline\nN, M = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(M)]\nA.sort()\nB = [list(map(int, input().split())) for _ in range(M)]\nB.sort()\ncnt1 = 0\ncnt2 = 0\nfor a, b in A:\n    if a > b:\n        cnt1 += 1\n    elif a == b:\n        cnt2 += 1\nprint(\"POSSIBLE\" if cnt1 == N else \"IMPOSSIBLE\")"}, "486": {"problem_id": 4486, "answer": "s = input()\nd = {}\nfor i in range(len(s)):\n    if s[i] not in d:\n        d[s[i]] = i\n    else:\n        d[s[i]] = d.get(s[i], i) + 1\nprint(s.replace(\" \", \"\").title())"}, "487": {"problem_id": 4487, "answer": "A, B, C = list(map(int, input().split()))\nans = \"\".join(A + B + C)\nprint(ans.end() if A[-1] == B[-1] == C[-1] else \"NO\")"}, "488": {"problem_id": 4488, "answer": "A = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ns = 0\nfor i in range(A[1]):\n    s += A[0]\nif s > B:\n    print(s)\nelse:\n    print(s-B)"}, "489": {"problem_id": 4489, "answer": "from collections import Counter\nn, = map(int, input().split())\nS = [0] + list(map(int, input().split()))\nfor i in range(n):\n    S[i] += 1\nc = Counter(S)\nans = 0\nfor i in range(1, 11):\n    if c[i] >= 2:\n        ans += i * (i - 1) // 2\n    elif c[i] == 1:\n        ans += c[i] * (c[i] - 1) // 2\nprint(ans)"}, "490": {"problem_id": 4490, "answer": "b = input()\nprint(b)"}, "491": {"problem_id": 4491, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nINF = float('inf')\nMOD = 10**9+7\n\nN = int(input())\nA = list(map(int, input().split()))\nans = INF\nfor i in range(N):\n    ans = max(ans, sum(A[i]))\nprint(ans)"}, "492": {"problem_id": 4492, "answer": "import sys\ninput = sys.stdin.readline\nN,X,A = map(int,input().split())\ns = [0]*N\ns[0] = A[0]\nfor i in range(1,N):\n    s[i] = A[i] + s[i-1]\n    if s[i] == X:\n        s[i] = A[i]\nprint(s[-1])"}, "493": {"problem_id": 4493, "answer": "import numpy as np\nC = np.ones(3,3)\nfor i in range(3):\n    C[i] = i+1\nans = 'Yes' if abs(sum(C)) % 3 == 0 else 'No'\nprint(ans)"}, "494": {"problem_id": 4494, "answer": "s = input()\ns = s.split(' ')\ns[1] = s[1].upper()\nprint(s[0])"}, "495": {"problem_id": 4495, "answer": "import sys\ninput = sys.stdin.readline\na,b,x = map(int,input().split())\ncnt = 0\nfor i in range(1,b):\n    if x%i == 0:\n        cnt += 1\nprint(cnt)"}, "496": {"problem_id": 4496, "answer": "import sys\ndef I(): return int(sys.stdin.readline())\ndef MI(): return list(map(int,sys.stdin.readline().split()))\ndef LI(): return list(map(int,sys.stdin.readline().split()))\nmod = 10**9+7\ninf = float('inf')\nsys.setrecursionlimit(10**6)\nINF = inf\neps = 1.0e-9\n\nD = I()\nans = 'Christmas'\nfor d in range(25):\n    if D % 25 == 0:\n        ans = ans + 'christmas'\n    elif D % 24 == 0:\n        ans = ans +'sunday'\n    elif D % 23 == 0:\n        ans = ans +'saturday'\n    else:\n        ans = ans +'sunday'\n    "}, "497": {"problem_id": 4497, "answer": "import sys\ninput = sys.stdin.readline\n\ndef ii(): return int(input())\ndef ii(): return list(map(int, input().split()))\ndef ii(): return list(map(int, input().split()))\ndef ii(): return list(map) (input().rstrip())\ndef ii(): return list(map)()\n\n#--------------------------------------#\nn = ii()[0]\nans = 2**n.bit_length()\nfor i in range(1, ans):\n    if ii()[i] == 2:\n        ans = i\n    else:\n        break"}, "498": {"problem_id": 4498, "answer": "import sys\ninput = sys.stdin.readline\n\ndef ii(): return int(input())\ndef si(): return input()\ndef mi(): return list(map(int, input().split()))\ndef li(): return list(mi())\ndef lcm(a, b): return abs(a * b) // max(a, b)\ndef rmul(n, m): return (n + m - 1) // m if n else 0\ndef rint(n): return n >= 0\ndef rceil(n): return n if n > 0 else -1\ndef rfloor(n): return -1 if n < 0 else int(n)\ndef rgam(a, b, c): return (gam(a, b, c) if c > 0 else 0)\ndef rgamm(a, b, c): return (gam(a, b, c) if b > 0 else 0)\ndef rintm(m): return m < 0\ndef rceilm(m): return m if m > 0 else -1\ndef rfloorm(m): return -1 if m < 0 else int(m)\ndef rgamm(a, b, c): return (gam(a, b, c) if c > 0 else 0)\ndef rsum(n, m): return sum(l[i] for i in range(n))\ndef srand(seed): return srand49(seed)\ndef srand49(seed): return srand48(seed)\n\n# a, b, c are A's coordinates\n# d is A's distance\n# l is A's list of random integers\n# randint(0, 100) generates a random integer between 0 and 100\n# srand(0) generates a random seed between 0 and int(1e9)\n\n# -----------------------------------------------------------\n\na, b, c, d = mi()\n\nprint((\"Yes\" if li()[0]**2 <= d**2 else \"No\"))"}, "499": {"problem_id": 4499, "answer": "s = input()\na = ''.join(sorted(s))\nprint(a[0])"}, "500": {"problem_id": 4500, "answer": "A,B,C=list(map(int,input().split()))\nd=dict(enumerate(sorted(A+B+C,key=lambda x:x[1])))\nprint('Yes' if len(d)>1 else 'No')"}, "501": {"problem_id": 4501, "answer": "from collections import defaultdict, deque\nimport bisect\nINF = float(\"inf\")\nN, A = list(map(int, input().split()))\nX = list(map(int, input().split()))\ns = 0\nfor x in X:\n  s += x\nans = sum(ans)\nd = defaultdict(deque)\nq = deque([])\nfor i in range(N):\n  d[X[i]] += 1\n  q.append(i)\nwhile s > A:\n  s -= A\n  ans += bisect.bisect_left(q, N)\nprint(ans)"}, "502": {"problem_id": 4502, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\n\nb = []\nfor i in range(n):\n    b.append(a[i:i+2])\n\nprint(*b, sep=\"\\n\")"}, "503": {"problem_id": 4503, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nH,N=list(map(int,input().split()))\nA=list(map(int,input().split()))\ns=0\nfor i in range(N):\n    s+=A[i]*min(H-A[i],H)\nif s<=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "504": {"problem_id": 4504, "answer": "import sys\ninput = sys.stdin.readline\n\nS = input().rstrip()\nn = len(S)\nans = 0\nfor i in range(n):\n    if i == n-1:\n        break\n    elif S[i] == S[i+1]:\n        ans += 1\nprint(ans)"}, "505": {"problem_id": 4505, "answer": "S = input()\nn = len(S)\na = [0] * n\nb = [0] * n\nc = [0] * n\nfor i in range(1, n):\n    a[i] = S[i]\n    b[i] = i\nfor i in range(n):\n    c[i] = a[b[i]]\nprint(('Yes' if sum(c) == n * n else 'No'))"}, "506": {"problem_id": 4506, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 998244353\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ncnt = [0] * (n + 1)\nans = 0\nfor i in range(1, n + 1):\n    cnt[i] = cnt[i - 1] + a[i]\n    ans += cnt[i] * b[i]\n\nprint(ans % MOD)"}, "507": {"problem_id": 4507, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\np = []\ns = [0] * n\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    p.append((x, y[0] + y[1] + 1))\n\nans = 0\nfor i in range(k):\n    if p[i][1] <= k:\n        ans += p[i][0]\n        s[p[i][0]] -= 1\n    elif s[p[i][0]] == 0:\n        ans += p[i][1]\nprint(ans)\n"}, "508": {"problem_id": 4508, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+3\n\nn = int(readline())\nedges = [[] for _ in range(INF)]\nfor i in range(n-1):\n    u, v = readline().split()\n    u, v = int(u), int(v)\n    edges[u].append(v)\n    edges[v].append(u)\n\ndists = [0]*(n+1)\ndist = [-1] * (n+1)\ndist[1] = 0\nvisited = [False] * (n+1)\nans = 0\nwhile dist[1] < n+1:\n    dists[dist[1]][1] = 1\n    visited[dist[1]] = True\n    for i in edges[dist[1]]:\n        if visited[i]:\n            continue\n        visited[i] = True\n        dist[i] = 1\n        ans += 1\n        for j in edges[i]:\n            if dist[j] == 1:\n                dist[j] = dist[i] + 1\n                ans += 1\n                for k in edges[j]:\n                    if dist[k] == dist[j] + 1:\n                        dist[k] = dist[j]\n    dist[1] = dist[1] + 1\nprint(ans)"}, "509": {"problem_id": 4509, "answer": "t = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    print(pow(n, k) % n)"}, "510": {"problem_id": 4510, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18+7\nn,k = map(int,readline().split())\nd = [list(map(int,readline().split())) for _ in range(n)]\nd.sort()\ncnt = 0\nans = []\nfor i in range(n):\n    if d[i][1]==k:\n        ans.append(i+1)\n        continue\n    cnt+=1\n    ind = d[i][0]\n    for j in range(ind,len(d)):\n        if d[j][1]==k:\n            ans.append(i+1)\n            break\nprint(ans[0])\nfor i in ans[1:]:\n    print(*i)"}, "511": {"problem_id": 4511, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# \u51fa\u529b\u6570\u7ec4\ncosts = [0]*(n+1)\nfor i in range(1, n+1):\n    costs[i] += i\n\nmax_cost = 0\nres = 0\ndoubles = 0\nfor i in range(n):\n    c, d = list(map(int, input().split()))\n    c -= 10\n    d *= 2\n    max_cost = max(max_cost, c)\n    res += max_cost\n    doubles += d\n\nprint(res)\n"}, "512": {"problem_id": 4512, "answer": "import sys\ninput = sys.stdin.readline\n\nS = input().rstrip()\nQ = int(input())\nAns = []\nfor _ in range(Q):\n    s = input().rstrip()\n    pos, c = [], ord(s[pos]) - ord('a')\n    for i in range(len(s)):\n        if s[i] not in c:\n            pos.append(i)\n        else:\n            c.add(s[i])\n    Ans.append(pos)\n\nfor i in range(len(Ans)):\n    print(chr(97 + (26 * i)) in s)"}, "513": {"problem_id": 4513, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    sol = [0] * n\n    for i in range(n):\n        sol[i] = input().rstrip().lower()\n    "}, "514": {"problem_id": 4514, "answer": ""}, "515": {"problem_id": 4515, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    a,b,c,n=list(map(int,input().split()))\n    a=a+n\n    b=b+c\n    c=c+n\n    if a==b==c:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "516": {"problem_id": 4516, "answer": ""}, "517": {"problem_id": 4517, "answer": ""}, "518": {"problem_id": 4518, "answer": "import sys\nimport math\ninput = sys.stdin.readline\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    A=list(map(int,input().split()))\n    d={}\n    for i in range(n):\n        if A[i] not in d:\n            d[A[i]]=1\n        else:\n            d[A[i]]+=1\n    if n==1:\n        print(\"YES\")\n        print([\"1\",0])\n        print([\"3\"])\n        print([\"5\"])\n        print([\"2\",1])\n        print([\"4\"])\n        continue\n    ans=[\"YES\" if d[A[0]]>1 else \"NO\"]\n    for i in range(1,n-1):\n        if d[A[i]]>1:\n            ans.append(\"NO\")\n            continue\n        if d[A[i-1]]>1:\n            ans.append(\"NO\")\n            continue\n        if d[A[i-1]]==1:\n            ans.append(\"NO\")\n        elif d[A[i-1]]==0:\n            ans.append(\"YES\")\n        else:\n            ans.append(\"NO\")\n    print(*ans,sep=\"\\n\")\n"}, "519": {"problem_id": 4519, "answer": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nAns = [None]*Q\nfor _ in range(Q):\n    N, K = map(int, input().split())\n    S = input()\n    Ans[N-1] = sorted(S)\n\nfor i in range(N):\n    if Ans[i] == None:\n        Ans[i] = '0'\n\nprint(''.join(map(str, Ans)))"}, "520": {"problem_id": 4520, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = map(int, readline().split())\nxs = [list(map(int, readline().split())) for _ in range(n)]\nxs.sort(key=lambda x: x[1])\nd = {}\nfor x in xs:\n    d[x[1]] = d.get(x[1], 0) + 1\n    if d[x[1]] == 0:\n        d[x[1]] = d[x[1]] - 1\nres = [0] * n\ncnt = 0\nfor i in range(n):\n    if d[i] == 0:\n        cnt += 1\n        continue\n    p = i\n    while p < n:\n        p = d[p]\n        res[i] = p - p % k\n        cnt += d[p]\nprint(sum(res))\nprint(*res)"}, "521": {"problem_id": 4521, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    xs = list(map(int, input().split()))\n    v = list(map(int, input().split()))\n    d = [0] * n\n    for i in range(n):\n        d[i] = v[i]\n    ans = 0\n    for i in range(n):\n        x1, x2, x3, x4 = xs[i]\n        ans += d[i] + (x1 - x2) * (x3 - x4)\n    print(ans)\n\nmain()\n"}, "522": {"problem_id": 4522, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\nedges=[]\nfor i in range(n-1):\n    edges.append(list(map(int,input().split())))\nedges.append([i+1,i+2,i+3] for i in range(4))\n\nt=deque()\nt.append(1)\nq=1\nwhile t:\n    t.popleft()\n    for i in edges:\n        if i[2]==edges[t][0]:\n            t.append(i[1])\n            q+=1\n            break\n"}, "523": {"problem_id": 4523, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    m=max(a)\n    ans=0\n    for i in range(n):\n        if m<a[i]:\n            ans=1\n            break\n    print(\"YES\" if ans==0 else \"NO\")"}, "524": {"problem_id": 4524, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 998244353\nn, m = list(map(int, readline().split()))\na = int(readline())\nb = int(readline())\ndp = [[0] * (m + 1) for _ in range(n + 1)]\ndp[0][0] = 1\nfor i in range(1, n + 1):\n    for j in range(m + 1):\n        dp[i][j] = (dp[i - 1][j] + a * dp[i - 1][j - 1]) % MOD\nans = 0\nfor i in range(n + 1):\n    ans += pow(a, i, MOD) * b % MOD\nprint(ans)\n"}, "525": {"problem_id": 4525, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    if n%2==0:\n        evens=[]\n        odds=[]\n        for i in range(n//2):\n            evens.append(i)\n            odds.append(i+n//2)\n        print(\"YES\")\n        for i in evens:\n            print(\"NO\" if i%2==0 else \"YES\")\n    else:\n        odds=[]\n        evens=[]\n        for i in range(n//2):\n            odds.append(i)\n        print(\"NO\")\n        for i in odds:\n            print(\"YES\")\n        print()"}, "526": {"problem_id": 4526, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    d=dict()\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]]=1\n        else:\n            d[a[i]]+=1\n    print(sum(d.values()))"}, "527": {"problem_id": 4527, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    a=[]\n    for i in range(n):\n        a.append([int(i) for i in input().split()])\n    a.sort(reverse=True)\n    b=sorted(a,key=lambda x:x[1])\n    print(len(b))"}, "528": {"problem_id": 4528, "answer": "t = int(input())\nfor _ in range(t):\n    h, m = map(int, input().split())\n    ans = h * 3600 + m\n    print(ans - 3600)"}, "529": {"problem_id": 4529, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    s=input().strip()\n    if s[-1]==\"U\" or s[-1]==\"D\":\n        n-=1\n    elif s[-1]==\"R\" or s[-1]==\"L\":\n        n-=2\n    else:\n        print(-1,n)\n        continue\n    x=0\n    y=0\n    for i in range(n):\n        if s[i]==\"L\":\n            x+=1\n        elif s[i]==\"R\":\n            y+=1\n        elif s[i]==\"U\":\n            x-=1\n        elif s[i]==\"D\":\n            y-=1\n    if x==y:\n        print(x,x+y)\n    else:\n        print(-1,x,y)"}, "530": {"problem_id": 4530, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    m=[]\n    for i in range(n):\n        if a[i] not in m:\n            m.append(a[i])\n    x=2\n    c=0\n    for i in range(n):\n        if m[a[i]]!=i:\n            x+=1\n            c+=1\n    print(x)"}, "531": {"problem_id": 4531, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nedges = [tuple(map(int, input().split())) for _ in range(n - 1)]\ns = 0\nvisited = [False] * n\ndeq = deque()\nfor i in range(n - 1):\n    visited[i] = True\n    s += edges[i][0]\n    while edges[i][0]!= i:\n        u, v = edges[i].pop()\n        s -= edges[v][0]\n        visited[v] = True\n        deq.append((u, i))\nprint(s)"}, "532": {"problem_id": 4532, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if a[i] % k == 0:\n            ans += 1\n        elif a[i] % k > 0:\n            ans += 1\n    print(ans)"}, "533": {"problem_id": 4533, "answer": "class Solution:\n     def findContentChildren(self, g, s):\n         \"\"\"\n         :type g: List[int]\n         :type s: List[int]\n         :rtype: int\n         \"\"\"\n         dp = [0] * (len(s) + 1)\n         for i in range(1, len(s) + 1):\n             dp[i] = 1e9 + sum(dp[g] for g in s)\n         return max(dp)"}, "534": {"problem_id": 4534, "answer": "class Solution:\n     def getRow(self, rowIndex):\n         \"\"\"\n         :type rowIndex: int\n         :rtype: List[int]\n         \"\"\"\n         nums = [0] * 33\n         for i in range(1, 33):\n             nums[i] += nums[i-1]\n         return nums[rowIndex]"}, "535": {"problem_id": 4535, "answer": "class Solution:\n    def hammingWeight(self, n: int) -> int:\n        '''\n        Explanation:\n        1111 = 1 bit (H)\n        11 = 1 bit (L)\n        00 = 1 bit (M)\n        01 = 1 bit (V)\n        '''\n        n = bin(n)[2:]\n        w = n.count('1')\n        if n.count('0') == 0:\n            return 1\n        else:\n            return 2**w"}, "536": {"problem_id": 4536, "answer": "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         n = len(digits)\n         res = [0]*n\n         for i in range(n):\n             res[i] = digits[i] + 1\n         return res"}, "537": {"problem_id": 4537, "answer": "A,B=map(int, input().split())\nprint(max(A+B, A-B, A * B))"}, "538": {"problem_id": 4538, "answer": "import heapq\nn,d=list(map(int,input().split()))\nx=[]\ny=[]\nfor i in range(n):\n    x.append(tuple(map(int,input().split())))\n    y.append(tuple(map(int,input().split())))\nh=[]\ndelta=2*10**5\nfor i in range(n):\n    if d-y[i][0]<delta:\n        heapq.heappush(h,-y[i][1])\n    else:\n        delta=d-y[i][0]\n        heappush(h,-x[i][1])\nc=0\nwhile h:\n    p=heapq.heappop(h)\n    c+=1\nprint(c)"}, "539": {"problem_id": 4539, "answer": "import sys\ninput = sys.stdin.readline\n\ndef digit_sum(n):\n    return sum(int(i) for i in str(n))\n\ndef huang_helper(n):\n    if n < 10:\n        return n\n    elif n < 100:\n        return huang_helper(n // 10)\n    else:\n        return huang_helper(n // 100) + n % 10\n\ndef huang_helper_recursive(n):\n    if n < 10:\n        return huang_helper_recursive(n // 10)\n    elif n < 100:\n        return huang_helper_recursive(n // 100)\n    else:\n        return huang_helper_recursive(n // 1000) + n % 1000\n\nN = int(input())\nH = []\nfor i in range(2, N+1):\n    H.append(str(i))\n\nprint((\"Yes\" if huang_helper(N) % 10 == huang_helper_recursive(N) % 10 else \"No\"))"}, "540": {"problem_id": 4540, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = n\n    ans = []\n    for i in range(n):\n        ans.append(abs(a[i]-a[i-1]))\n    print(*ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "541": {"problem_id": 4541, "answer": "import string\nc = input()\n#print(c)\nvowel = ['a','e','i','o','u']\n#print(vowel)\nif c in vowel:\n    print('vowel')\nelse:\n    print('consonant')"}, "542": {"problem_id": 4542, "answer": "def solve(s):\n    cnt = 0\n    for i in s:\n        if i == 'B':\n            cnt += 1\n        else:\n            cnt += 2\n    return cnt"}, "543": {"problem_id": 4543, "answer": "import sys\ninput = sys.stdin.readline\na,b=list(map(int,input().split()))\nc=1\nwhile(a*a+b*b==a*b):\n    c=2\n    a,b=b,a\nprint(\"Yes\") if c==2 else print(\"No\")"}, "544": {"problem_id": 4544, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nMOD = 10**9+7\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef LI2(): return list(map(int, input().split()))\ndef LI3(): return list(map(int, input().split()))\ndef LI4(): return list(map(int, input().split()))\ndef LI5(): return list(map(int, input().split()))\ndef LI6(): return list(map(int, input().split()))\ndef LI7(): return list(map(int, input().split()))\ndef LI8(\\_): return [LI() for _ in range(len(list(map(int, input().split()))))]\ndef LI9(\\_): return [LI() for _ in range(len(list(map(int, input().split())))))\ndef LI10(n): return [LI() for _ in range(n)]\ndef NI(n): return [I() for _ in range(n)]\ndef NI2(n): return [I() for _ in range(n)]\ndef NI3(n): return [I() for _ in range(n)]\ndef NI4(n): return [I() for _ in range(n)]\ndef NI5(n): return [I() for _ in range(n)]\ndef NI6(n): return [I() for _ in range(n)]\ndef NI7(n): return [I() for _ in range(n)]\ndef NI8(n): return [I() for _ in range(n)]\ndef NI9(n): return [I() for _ in range(n)]\ndef NI10(n): return [I() for _ in range(n)]\nN = I()\nA = LI()\nans = 0\nfor i in range(N):\n    if A[i] == N:\n        ans += 1\nprint(ans)"}, "545": {"problem_id": 4545, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nN = int(input())\nA = int(input())\nans = 0\nfor i in range(1, N*N+1):\n    if A > i*i:\n        ans += N**2\nprint(ans)"}, "546": {"problem_id": 4546, "answer": "from sys import*\ninput=stdin.readline\na,b,c=map(int,input().split())\nprint((\"YES\" if a-b==c-b else \"NO\"))"}, "547": {"problem_id": 4547, "answer": "import sys\ndef I(): return int(sys.stdin.readline())\ndef MI(): return list(map(int,sys.stdin.readline().split()))\ndef LI(): return list(map(int,sys.stdin.readline().split()))\nmod = 10**9+7\n\nN = I()\nif N%10 == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "548": {"problem_id": 4548, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nINF = float('inf')\nMOD = 10**9+7\n\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LI2(): return list(map(int, input().split()))\ndef LI3(): return list(map(int, input().split()))\ndef S(): return input()\ndef L(): return list(map(int, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SR(rows_number): return [S() for _ in range(rows_number)]\ndef LS(rows_number): return [L() for _ in range(rows_number)]\ndef ANS(rows_number): return [mins() for _ in range(rows_number)]\n\nn, m, x = MI()\nans = []\nfor i in range(m):\n    a = LI()\n    ans.append(min(a[0], x))\nprint(ans[-1])"}, "549": {"problem_id": 4549, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    H, W = map(int, input().split())\n    S = [list(map(int, input().split())) for _ in range(W)]\n    dp = [[0] * (H + 1) for _ in range(W + 1)]\n    for i in range(W + 1):\n        dp[i].append(0)\n    for i in range(H + 1):\n        dp[0][i] = 1\n    for i in range(1, W + 1):\n        for j in range(H + 1):\n            if S[i][j] == '#':\n                dp[i][j] = 1\n            elif S[i][j] == '.':\n                dp[i][j] = 0\n            else:\n                dp[i][j] = dp[i - 1][j] + 1\n    ans = 0\n    for i in range(len(dp)):\n        if dp[i][H] + dp[i][W] < 2:\n            ans = 0\n            break\n        for j in range(H, W + 1):\n            if dp[i][j] and dp[i][w] + dp[i][h] < 2:\n                ans = 0\n                break\n            if dp[i][j] and dp[i][w] + dp[i][h] == 2:\n                dp[i][j] = dp[i][w] + dp[i][h] - 2\n                ans = 1\n                break\n        if ans:\n            print('Yes')\n        else:\n            print('No')\nmain()"}, "550": {"problem_id": 4550, "answer": "import sys\ninput = sys.stdin.readline\nA,B,C = map(int,input().split())\nif A%3 == B%3:\n  print(\"No\")\nelse:\n  print(\"Yes\")"}, "551": {"problem_id": 4551, "answer": "A,B,C,D = list(map(int, input().split()))\ns = sum(A*B)\nt = sum(C*D)\nbalance = s-t\nprint(balanced)\n"}, "552": {"problem_id": 4552, "answer": "import heapq\nn=int(input())\nf=[0]*10\nfor i in range(n):\n  f[i]=list(map(int,input().split()))\nm=10**7\ns=[0]*10\ns[0]=1\nfor i in range(1,10):\n  m=min(m,f[i][1])\n  heapq.heappush(s,f[i][0])\n  s[0]-=m\nans=0\nfor i in range(n):\n  ans=max(ans,m*s[i])\nprint(ans)"}, "553": {"problem_id": 4553, "answer": "import sys\ninput = sys.stdin.readline\n\nS = list(map(int, input().split()))\n\nans = '0' * (5 - len(S))\nd = dict()\nfor i in range(len(S)):\n    d[S[i]] = d.get(S[i], 0) + 1\n    if d[S[i]] > 1:\n        ans += '-' + str(d[S[i]])\n\nif ans[-1] == '-':\n    print('No')\nelse:\n    print('Yes')"}, "554": {"problem_id": 4554, "answer": "import sys\ninput = sys.stdin.readline\n\nW,a,b=list(map(int,input().split()))\n\ndef f(x):\n    return x>0 and x<W\n\nprint(min(f(x) for x in zip(a,b+W) if f(x)))\n"}, "555": {"problem_id": 4555, "answer": "import sys\ninput = sys.stdin.readline\nA,K = map(int,input().split())\nans = []\nfor i in range(A,B+1):\n  if K < min(i-K,i+K):\n   ans.append(i)\nprint(' '.join(map(str,ans)))"}, "556": {"problem_id": 4556, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nS = list(input())[:-1]\nS.insert(0, 'X')\nN = len(S)\n\ndef main():\n    print(S[N-1])\n    return\n\nmain()\n"}, "557": {"problem_id": 4557, "answer": "import sys\ninput = sys.stdin.readline\nA,B,X=list(map(int,input().split()))\nif A+B==X:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "558": {"problem_id": 4558, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nINF = 10**18\n\nX, T = list(map(int, input().split()))\nans = 0\n\nwhile X > 0:\n    ans += X - (X % INF)\n    X = X // INF\n"}, "559": {"problem_id": 4559, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nN = int(input())\nA = list(map(int, input().split()))\nans = 0\nfor a in A:\n    ans = max(ans, a * a)\nif ans > 10**18:\n    print(-1)\nelse:\n    print(ans)"}, "560": {"problem_id": 4560, "answer": "from collections import deque\nN = int(input())\nA = int(input())\nans = \"No\"\nfor i in range(1,1000):\n    if deque()[0] < N:\n        ans = \"Yes\"\n        break\n    elif deque()[0] == N:\n        ans = \"No\"\n        break"}, "561": {"problem_id": 4561, "answer": "import bisect\ns = input()\nx,a,b = s.split()\nd = int(bisect.bisect_right(s, x) - 1)\nif d == 1:\n    print(\"safe\")\nelse:\n    print(\"dangerous\")"}, "562": {"problem_id": 4562, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nans}, "563": {"problem_id": 4563, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nT = [int(i) for i in input().split()]\nAns = [0] * (N+1)\nfor i in range(2, N+1):\n    T.append(sum(T[i-2::-1]))\n    Ans[i] = T[i] + T[i-1]\nprint(min(Ans))"}, "564": {"problem_id": 4564, "answer": "s = input()\nd = {}\nfor i in s:\n    d[i] = d.get(i,0) + 1\nif len(s) == 0:\n    print(\"no\")\nelse:\n    print(\"yes\")"}, "565": {"problem_id": 4565, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nS = input().rstrip()\n\nans = 0\nfor i in range(N):\n    if S[i] == 'E':\n        ans += 1\n    elif S[i] == 'W':\n        ans += -1\nprint(ans)"}, "566": {"problem_id": 4566, "answer": "from collections import deque\nN, M = list(map(int, input().split()))\nedges = [[] for _ in range(N)]\nfor _ in range(M):\n    a, b = list(map(int, input().split()))\n    a -= 1\n    b -= 1\n    edges[a].append(b)\n    edges[b].append(a)\nvisited = [False] * N\nvisited[0] = True\nQ = deque()\nQ.append(0)\nans = [0] * N\nwhile Q:\n    now = Q.popleft()\n    for nex in edges[now]:\n        if visited[nex]:\n            continue\n        visited[nex] = True\n        ans[now] += 1\n        Q.append(nex)\nprint(*ans, sep='\\n')\n"}, "567": {"problem_id": 4567, "answer": "import sys\ndef I(): return int(sys.stdin.readline())\ndef MI(): return list(map(int,sys.stdin.readline().split()))\ndef LI(): return list(map(int,sys.stdin.readline().split()))\nn = I()\ns = [0]*n\nfor i in range(n):\n  s[i] = MI()\na = sum(s[i] for i in range(n))\nprint(a)"}, "568": {"problem_id": 4568, "answer": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\nsys.setrecursionlimit(10**9)\nINF = float('inf')\nmod = 10**9+7\n\nN = I()\nS = I()\nans = 0\nfor i in range(N-1):\n    ans += sum(1 for c in S if c!= i)\nprint(ans)"}, "569": {"problem_id": 4569, "answer": "s = input()\nn = 0\nfor i in range(1, len(s)):\n    if s[i] =='s':\n        n += 1\nprint(n)"}, "570": {"problem_id": 4570, "answer": "n, a, b = map(int, input().split())\nc = a*b\nif n==1:\n    print(c)\nelse:\n    print(min(c, b*n))"}, "571": {"problem_id": 4571, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nans = 0\nfor _ in range(M):\n    ans += (N * (N - 1) // 2) * pow(2, M - 1)\nprint(ans)"}, "572": {"problem_id": 4572, "answer": "from collections import defaultdict, deque\ns = list(input())\nd = defaultdict(deque)\nfor i in s:\n    d[i] = 1\nans = None\nfor i in d:\n    if d[i] == 1:\n        ans = i\n        break\n\nprint(ans)"}, "573": {"problem_id": 4573, "answer": "from bisect import bisect_left as bl\nn = int(input())\nx = list(map(int, input().split()))\nm = 10**9+7\nd = {}\nfor i in range(n):\n    d[x[i]] = d.get(x[i], []) + [i]\nans = []\nfor i in d:\n    ans.append(bl(d[i]))\nprint(*ans, sep=\"\\n\")"}, "574": {"problem_id": 4574, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    d = {i:0 for i in A}\n    for _ in range(N-2):\n        d[A[_]] += 1\n        d[_] += 1\n    ans = 0\n    for i in range(len(A)):\n        ans = max(ans, abs(A[i]-A[i-2])*d[i])\n    print(ans)\n    return\n\nmain()"}, "575": {"problem_id": 4575, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nN, D, *A = list(map(int, input().split()))\nX = list(map(int, input().split()))\nAns = 0\nfor i in range(N):\n    a = X[i] + 1\n    A[i] = a\n    Ans += Ans[a]\nprint(Ans)\n"}, "576": {"problem_id": 4576, "answer": "from collections import defaultdict as dd\nA = input()\nB = input()\nC = input()\nX = int(input())\nans = dd(int, defaultdict(int))\nfor i in range(X):\n    ans[A[i]-B[i]-C[i]] += 1\nprint(ans[2])"}, "577": {"problem_id": 4577, "answer": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef I(): return sys.stdin.readline().rstrip()\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LI2(): return list(map(int, sys.stdin.readline().split(1)))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(map(int, sys.stdin.readline().split()))\ndef IS(): return [int(x) for x in sys.stdin.readline().rstrip().split()]\ndef LSS(rows_number): return [LS() for _ in range(rows_number)]\ndef SS(): return sys.stdin.readline().rstrip().split()\ndef NI(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef NII(rows_number): return [II() for _ in range(rows_number)]\ndef NI2(rows_number): return [II() for _ in range(rows_number)]\ndef NI3(rows_number): return [II() for _ in range(rows_number)]\nmod = 10**9 + 7\n\nA, B, C = MI()\nif A < B and B < C:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "578": {"problem_id": 4578, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nfrom itertools import accumulate,combinations,permutations,accumulate,bounded\nfrom operator import itemgetter, attrgetter\ntry:\n    from decimal import *\nexcept:\n    import decimal\nimport sys\ninput = sys.stdin.readline\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\ndef li4():return [int(i) for i in input().rstrip('\\n')]"}, "579": {"problem_id": 4579, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nS = list(input().rstrip())\n\nans = 0\nfor i in range(N):\n    s = S[i]\n    ans += 1 + ord(s) - ord('a')\nprint(ans)"}, "580": {"problem_id": 4580, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\n\nans = [0] * N\nans[0] = 1\nfor i in range(1, N):\n    ans[i] = ans[i - 1] + 1 if A[i - 1] == 400 else ans[i - 1] + 2\n\nprint(min(ans))\n"}, "581": {"problem_id": 4581, "answer": "def main():\n    s = input()\n    n = len(s)\n    if n == 1:\n        print(700)\n    elif n == 2:\n        print(1100)\n    else:\n        d = {'o': 0, 'x': 1}\n        for i in range(2, n):\n            d[s[i-2] + s[i-1]] += 100\n        print(d['o'] * 700 + d['x'] * 100)\n\nmain()"}, "582": {"problem_id": 4582, "answer": "from operator import itemgetter\na, b = list(map(int, input().split()))\nh = itemgetter(a,b)\nprint(h)"}, "583": {"problem_id": 4583, "answer": "import numpy as np\nn = np.int32(input())\na = np.array([1,2,2,3,3,4,4,4])\nb = np.array([1,-1,1,-1,1,-1,1,-1])\nc = np.array([1,1,-1,-1,1,1,1,-1])\nd = np.array([1,1,1,-1,-1,1,-1,-1])\ne = np.array([1,1,1,1,-1,-1,-1,-1])\nf = np.array([1,1,1,1,1,-1,-1,-1])\ng = np.array([1,1,1,1,1,1,-1,-1])\nh = np.array([1,1,1,1,1,1,1,-1])\ni = np.array([1,1,1,1,1,1,1,1])\nj = np.array([1,1,1,1,1,1,1,1])\nk = np.array([1,1,1,1,1,1,1,1,1])\nl = np.array([1,1,1,1,1,1,1,1,1,1])\nm = np.array([1,1,1,1,1,1,1,1,1,1,1])\nnumeros = np.argsort(n)\ndenominos = n[numeros]\n\n#CALCULATION OF PEPTLE POINTS\ndef calc_pepper(numeros,denominos):\n    num = 0\n    den = 0\n    for i in range(numeros):\n        num += a[i]\n        den += b[i]\n        den //= 10\n    return num*(den+1)//2\n\n#CONSIDERING VERTICAL LINES\ndef calc_pepper_v(numeros,denominos):\n    num = 0\n    den = 0\n    for i in range(numeros):\n        num += a[i]\n        den += b[i]\n        if den > 9:\n            den -= 9\n        elif den < 0:\n            den += 9\n    return num*(den+1)//2\n\n#PROCESSING APPROACH\ncalc_pepper(n,d)\nprint(calc_pepper_v(n,d))"}, "584": {"problem_id": 4584, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nMOD = 10**9+7\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    dp = [INF]*N\n    for i in range(N):\n        dp[A[i]-1] = 1\n    for i in range(N):\n        for j in range(A[i]-1):\n            dp[i] += dp[j]\n    print(dp[N-1])\n\nmain()"}, "585": {"problem_id": 4585, "answer": "def main():\n    x = int(input())\n    print(x)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "586": {"problem_id": 4586, "answer": "from collections import Counter\nn = int(input())\ncnt = Counter(str(n))\nprint(['No', 'Yes'][cnt.isalpha()])"}, "587": {"problem_id": 4587, "answer": "import sys\ninput = sys.stdin.readline\n\nclass altSeq:\n    def __init__(self, n):\n        self.n = n\n        self.seq = [i for i in range(n)]\n        self.cnt = [0 for _ in range(n)]\n        self.sz = [0 for _ in range(n)]\n        self.rev = [0 for _ in range(n)]\n        self.rev.append(0)\n        self.sz[0] = 1\n        self.rev[0] = 1\n        for i in range(1, n):\n            self.rev[i] = self.rev[i-1] * 3\n            self.sz[i] = self.sz[i-1] + self.revers[i-1]\n            self.cnt[i] = self.cnt[i-1] + 1\n            self.seq[i] = i\n        print(self.cnt[-1])\n\n    def add(self, i, x):\n        self.seq[i] = i\n        self.cnt[i] = self.cnt[i] + x\n        self.rev[i] = self.rev[i] + x\n        self.sz[i] = self.sz[i] + x\n        self.revers[i] = self.revers[i] + x\n\n    def reverse(self, i):\n        while i > 0:\n            self.seq[i] = self.rev[self.seq[i]]\n            i -= i & (-i)\n        return self.seq[i]\n\n    def __len__(self):\n        return self.n"}, "588": {"problem_id": 4588, "answer": "import sys\ninput = sys.stdin.readline\n\nX, Y = map(int, input().split())\n\nif X == Y:\n    print(\"=\")\nelse:\n    print(\">\", end=\"<\")"}, "589": {"problem_id": 4589, "answer": "import sys\nreadline = sys.stdin.readline\n\nINF = float('inf')\nMOD = 10**9 + 7\n\ndef solve():\n    H, W = list(map(int, readline().split()))\n    S = [''] + readline().split()\n    for i in range(H):\n        S[i] = int(S[i])\n    dp = [[0]*W for _ in range(H)]\n    for i in range(H):\n        for j in range(W):\n            if S[j] == '.':\n                dp[i][j] = 1\n            elif S[j] == '#':\n                dp[i][j] = INF\n            else:\n                x, y = i-1, j-1\n                if 0<=x<W and 0<=y<W:\n                    dp[i][j] = min(dp[i][j], dp[x][y] + 1)\n    print(''.join(map(str, dp[1:])))\n\nsolve()\n"}, "590": {"problem_id": 4590, "answer": "import sys\ninput = sys.stdin.readline\nn,m,k = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    if a[i]>k:\n        ans+=m-a[i]\n    elif a[i]==k:\n        ans+=b[i]-a[i]\nprint(ans)"}, "591": {"problem_id": 4591, "answer": "A,B,C,X,Y = list(map(int,input().split()))\nprint((min(A,B,C) + X*2)//2)\n"}, "592": {"problem_id": 4592, "answer": "import sys\ninput = sys.stdin.readline\nM = 10**9+7\nfac = [1]*(10**5)\nfor i in range(1,10**5):\n    fac[i] = fac[i-1]*i % M\ninv = [1]*(10**5)\nfor i in range(2,10**5):\n    inv[i] = inv[i-1]*i % M\nN = int(input())\nres = 0\nfor i in fac:\n    res += N%i == 0\nprint(res)"}, "593": {"problem_id": 4593, "answer": "import heapq\ninput = list(map(int, input().split()))\nx = int(input())\nans = []\nheapq.heapify(ans)\nwhile x > 0:\n    ans.append(heapq.heappop(ans)[1])\n    x = x - heapq.heappop(ans)[1]\nprint(ans[0])"}, "594": {"problem_id": 4594, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nd = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    d.append(min(d[i], i))\n    ans += 1\n\nprint(ans)"}, "595": {"problem_id": 4595, "answer": "import sys\ninput = sys.stdin.readline\n\nS = input().rstrip()\nn = len(S)\n\nans = 0\nfor i in range(n//2):\n    if S[i] == S[i+1]:\n        ans += 1\nprint(ans)"}, "596": {"problem_id": 4596, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\nans = 0\nfor x in A:\n    ans += x%2\nprint(max(ans, 2*ans))"}, "597": {"problem_id": 4597, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9 + 7\nN = int(input())\nprint((pow(N, N-1, MOD)%MOD) * N)"}, "598": {"problem_id": 4598, "answer": "from operator import itemgetter\nn=int(input())\nprint(sum(itemgetter(n).__get__(int) for n in range(1,n+1)))"}, "599": {"problem_id": 4599, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nA = list(map(int, readline().split()))\nans = 0\nfor i in range(N):\n    ans += A[i]\nprint(ans - sum(A))"}, "600": {"problem_id": 4600, "answer": "from collections import deque\nn,m,*p = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n    a[i]+=1\ns = sum(map(int,input().split()))\nw = list(map(int,input().split()))\nc = 0\nfor i in range(m):\n    p[i]+=s\n    if p[i]%2==0:\n        c+=1\nprint(c)\nd = deque()\nd.append(0)\nw.sort()\nwhile d:\n    v = d.popleft()\n    for i in range(len(w)):\n        if w[i]==w[i-1]:\n            d.append(w[i])\n        elif w[i]==WA:\n            d.append(WA)\n        elif w[i]==AC:\n            d.append(i)\n"}, "601": {"problem_id": 4601, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nN, K = map(int, input().split())\nH = list(map(int, input().split()))\nans = 0\nfor h in H:\n    if h < H[0]: ans += 1\n    elif h == H[0]: ans += 2\nprint(ans)"}, "602": {"problem_id": 4602, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    k = int(input())\n    xs = list(map(int, input().split()))\n    d = [0] * n\n    for i in range(n):\n        d[xs[i]] = i\n    ans = n\n    for i in range(n):\n        x = d[i]\n        ans = min(ans, x - xs[i])\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "603": {"problem_id": 4603, "answer": "import sys\ninput = sys.stdin.readline\n\nA = int(input())\nB = int(input())\nC = int(input())\nD = int(input())\n\nans = 0\nfor i in range(A):\n    if i == 0:\n        ans += D\n    elif i == A-1:\n        ans += C\n    else:\n        ans += D + C\nprint(ans)"}, "604": {"problem_id": 4604, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\nN = int(input())\nA = list(map(int, input().split()))\np = [0]*(N+1)\nfor i in range(N):\n    p[A[i]-1] = i+1\nans = 0\nfor i in range(N):\n    ans += p[i]*(N-i-1)\nprint(ans%MOD)"}, "605": {"problem_id": 4605, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nmod = 10**9+7\n\nN, A, B = map(int, input().split())\nans = INF\nS = set()\nfor i in range(1, N+1):\n    S.add(str(i))\n    t = 0\n    for j in range(10):\n        t += int(str(j) + S[i])\n    if t >= A:\n        ans = t\n        break\nprint(ans)"}, "606": {"problem_id": 4606, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nN = int(input())\nabbreviation = \"\"\nfor i in range(1, N + 1):\n    abbreviation = abbreviation + str(i)\nprint(abbreviation)"}, "607": {"problem_id": 4607, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef main():\n    a, b = map(int, input().split())\n    print(b - a + 1 for i in range(31))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "608": {"problem_id": 4608, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**5)\n\ndef dfs(i):\n    nonlocal l, res\n    if i == l:\n        return False\n    elif res[i] == 1:\n        return True\n    else:\n        res[i] = 2\n        for j in range(i):\n            if dfs(j):\n                return True\n        return False\n\nn = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    if a[i] == 1:\n        l.append(i)\nif dfs(a[-1]):\n    print((0))\nelse:\n    print((n+1))\n"}, "609": {"problem_id": 4609, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans += a[i]\n        if a[i] == 0:\n            sys.stdout.write(str(ans) + '\\n')\n        else:\n            sys.stdout.write(str(ans) + '\\n')"}, "610": {"problem_id": 4610, "answer": "import sys\ninput = sys.stdin.readline\n\nN, K = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    if A[i]!= i:\n        continue\n    ans += K\n\nprint(ans)\n"}, "611": {"problem_id": 4611, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    at_deer = [t[0], t[1]]\n    for i in range(2, n):\n        at_deer.append((t[i], t[i] + 1))\n    "}, "612": {"problem_id": 4612, "answer": "a,b=list(map(int,input().split()))\nprint((a+b)/2.0)\n"}, "613": {"problem_id": 4613, "answer": "import sys\ninput=sys.stdin.readline\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nMOD = 10**9+7\n\ndef main():\n    N, M = list(map(int, input().split()))\n    adj=[[] for _ in range(N)]\n    for _ in range(M):\n        a, b = list(map(int, input().split()))\n        adj[a-1].append(b-1)\n        adj[b-1].append(a-1)\n    print(sum(1 for e in adj if len(e)==2))\n    return\nmain()"}, "614": {"problem_id": 4614, "answer": "from operator import itemgetter\na, b, c = map(int, input().split())\nd = a - b - c\nif d > 0:\n    print(d)"}, "615": {"problem_id": 4615, "answer": "import sys\ninput = sys.stdin.readline\nA,B,C,D,E,F=list(map(int,input().split()))\nsys.setrecursionlimit(10**5)\ninf=float('inf')\nans=[inf for i in range(A+1)]\nans[0]=0\nfor i in range(1,A+1):\n    a=A+i\n    b=b-A\n    c=c-A\n    d=d-A\n    e=e-A\n    f=f-A\n    if a+b>f:\n        ans[0]=(f//(a+b))*(a+b)\n    elif a>f:\n        ans[0]=(f//a)*.9\n    elif b>f:\n        ans[0]=(f//b)*.99\n    else:\n        ans[0]=(f//f)*.99\nprint(ans[0],ans[1])"}, "616": {"problem_id": 4616, "answer": "s = input()\nab = s.lower()\nprint(ab.index(s))"}, "617": {"problem_id": 4617, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nR, G, B = [0]*4, [0]*4, [0]*4\nfor i in range(1, 4): R[i] = i\nfor i in range(3): G[i] = chr(ord('A') + (i*2))\nfor i in range(3): B[i] = chr(ord('A') + (i*2))\n\ndef dfs(x, y, c):\n    nonlocal R, G, B\n    if R[x] + G[y]!= c: return False\n    if R[x] + G[y] == R[x] or G[y] + B[y]!= c: return False\n    R[x] = R[x] + G[y]\n    G[y] = G[y] + B[y]\n    B[y] = B[y] + R[x]\n    return True\n\nans = [False] * 4\ndfs(0, 0, 'C')\nprint(ans[0])"}, "618": {"problem_id": 4618, "answer": "import sys\ninput = sys.stdin.readline\ns = list(map(int, input().split()))\nN = len(s)\nd = {}\nfor i in range(N):\n    d[s[i]] = i\nans = []\nfor i in range(1, N):\n    if s[i] not in d:\n        continue\n    a = d[s[i]]\n    ans.append(a)\nprint(*ans, sep=\"\\n\")\n"}, "619": {"problem_id": 4619, "answer": "from collections import deque\ninput = lambda: list(map(int, input().split()))\nINF = float('inf')\nw, h, n = list(map(int, input().split()))\nans = INF\npoints = [tuple(input().split()) for _ in range(n)]\npq = deque()\nfor i in range(n):\n    pq.append((points[i][1], points[i][0]))\n    ans = max(ans, w * (points[i][0] - points[0][0]) + h * (points[i][0] - points[i][0]))\n    for j in range(2, n):\n        if points[j][0] == 3:\n            pq.append((points[j][1], points[j][0]))\n        elif points[j][0] == 4:\n            pq.append((points[j][1], points[j][0]))\n        else:\n            pq.append((points[j][1], points[j][0]))\nprint(ans)"}, "620": {"problem_id": 4620, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    c = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    d = [0]*(n+1)\n    for i in range(1, n):\n        d[i] = f[i]\n    \n    ans = [0]*(n+1)\n    ans[0] = 12\n    for i in range(1, n):\n        t = d[i]\n        t%=f[i]\n        ans[i] = ans[i-1] + t\n        ans[i] %= f[i]\n        \n    print(*ans, sep='\\n')\n\nmain()"}, "621": {"problem_id": 4621, "answer": "import sys\nreadline = sys.stdin.readline\n\nH, W = list(map(int, readline().split()))\nC = list(map(int, readline().split()))\n\nans = []\nfor i in range(H):\n    ans.append('.'*W+'*'*W)\n    ans.append(C[i])\n\nprint(' '.join(ans))"}, "622": {"problem_id": 4622, "answer": "import sys\ninput = sys.stdin.readline\n\ndef print(x):\n    print(x, end='')\n\nn = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in a:\n    d[i] = 1\nif len(d) == 0:\n    print('YES')\nelse:\n    print('NO')"}, "623": {"problem_id": 4623, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    w=list(map(int,input().split()))\n    s=0\n    c=0\n    for i in range(n):\n        if i==0:\n            c+=1\n        else:\n            if c==2:\n                s+=w[i]\n                c=0\n            elif abs(w[i]-s)==w[i]:\n                s+=w[i]\n                c+=1\n    print(s)"}, "624": {"problem_id": 4624, "answer": "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    n, x = map(int, readline().split())\n    floor = n//x\n    print(floor*x)"}, "625": {"problem_id": 4625, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n,m=list(map(int,input().split()))\n    s=input()\n    p=list(map(int,input().split()))\n    ans=0\n    for i in range(n):\n        if s[i]==p[i]:\n            ans+=1\n    print(ans,end=\" \")\n"}, "626": {"problem_id": 4626, "answer": "from sys import stdin,stderr\ninput=stdin.readline\nfor _ in range(int(input())):\n    a,b,c=list(map(int,input().split()))\n    x=abs(a-b)+abs(a-c)+abs(b-c)\n    print(x)\n"}, "627": {"problem_id": 4627, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    A=list(map(int,input().split()))\n    ANS=False\n    for i in range(n):\n        if A[i]%2!=0:\n            ANS=True\n            break\n    print(\"YES\" if ANS else \"NO\")\n"}, "628": {"problem_id": 4628, "answer": "import sys\nread = sys.stdin.readline\nINF = float(\"inf\")\nMOD = 10**9 + 7\ninput = lambda: read().rstrip()\nn, m, k = list(map(int, input().split()))\ng = [[] for _ in range(n)]\nfor _ in range(m):\n    x, y, w = list(map(int, input().split()))\n    g[x].append(y)\n    g[y].append(x)\n\ncosts = [INF] * n\ncnt = [0] * n\nsaved = set()\nfor x in range(1, n):\n    saved.add(x)\n    for y in g[x]:\n        costs[y] = w\n        cnt[y] += 1\n\nprint(sum(cnt[a] * cnt[b] for a, b in zip(saved, cnt) if a!= b))\n"}, "629": {"problem_id": 4629, "answer": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    if n<3:\n        print(3)\n    elif n==3:\n        print(3)\n    else:\n        print(n//3)"}, "630": {"problem_id": 4630, "answer": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nfor _ in range(Q):\n    N = int(input())\n    P = list(map(int, input().split()))\n\n    ans = 0\n    for i in range(N):\n        if P[i] == i+1:\n            ans += 1\n    print(*ans)"}, "631": {"problem_id": 4631, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\na.sort()\nb=[]\nfor i in range(n):\n    b.append(a[i])\nprint(sum(min(b) for b in b))\nprint(' '.join(map(str,b)))\n"}, "632": {"problem_id": 4632, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n  n = int(input())\n  pos = [list(map(int, input().split())) for i in range(n)]\n  pos.sort()\n  print(\"YES\")\n  \n  \n"}, "633": {"problem_id": 4633, "answer": "import bisect\nt = int(input())\nfor _ in range(t):\n    n, s = map(int, input().split())\n    if n < s:\n        print(0)\n    else:\n        ans = n\n        m = int(str(s) + '0')\n        while m < n:\n            m += 1\n            ans += m\n        print(ans)"}, "634": {"problem_id": 4634, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    ans=0\n    for i in range(n):\n        if a[i]==0:\n            ans+=1\n    print(ans)"}, "635": {"problem_id": 4635, "answer": "t = int(input())\nfor i in range(t):\n    n, k = map(int, input().split())\n    s = 'abcdefghijklmnopqrstuvwxyz'\n    d = dict()\n    for i in range(26):\n        d[i] = 0\n    for i in range(n):\n        d[s[i]] += 1\n    print(max(d.values()))"}, "636": {"problem_id": 4636, "answer": ""}, "637": {"problem_id": 4637, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,k=list(map(int,input().split()))\n    a=[int(i) for i in input().split()]\n    b=[int(i) for i in input().split()]\n    dp=[[0 for i in range(n)] for j in range(k+1)]\n    for i in range(n):\n        dp[0][i]=a[i]\n    for i in range(1,k+1):\n        for j in range(n):\n            if j+1<n:\n                dp[i][j+1]=max(dp[i-1][j],dp[i].get(j+1,0)+a[j+1])\n            else:\n                dp[i][j+1]=max(dp[i-1][j],dp[i].get(j+1,0))\n    print(dp[k][n-1])\n"}, "638": {"problem_id": 4638, "answer": "import sys\ninput = sys.stdin.readline\n\ndef read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split()))\n\n\nn, c = read_ints()\nfloors = read_ints()\nelevator_time = read_ints()\n\nmoves = 0\nfor i in range(n-1):\n    moves += c + floors[i] - elevator_time\nprint(*moves)"}, "639": {"problem_id": 4639, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    print(''.join(sorted(set(a) for a in input())))"}, "640": {"problem_id": 4640, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    x=list(map(int,input().split()))\n    y=list(map(int,input().split()))\n    ans=0\n    for i in range(n):\n        if x[i]>x[i+1] and y[i]>y[i+1]:\n            ans+=1\n    print(ans)"}, "641": {"problem_id": 4641, "answer": ""}, "642": {"problem_id": 4642, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,x,y=map(int,input().split())\n    l=[]\n    for i in range(n):\n        l.append(x+i)\n        l.append(y+i)\n    print(*l,sep=' ')\n"}, "643": {"problem_id": 4643, "answer": "import sys\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*sorted(a), sep='\\n')\n__starting_point()"}, "644": {"problem_id": 4644, "answer": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            ans += 1\n    if ans % 2 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "645": {"problem_id": 4645, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    ans=[]\n    m=n//2\n    ans.append(m)\n    print(*ans)"}, "646": {"problem_id": 4646, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    ans=0\n    for i in range(n-1):\n        if a[i]%2!=0:\n            ans+=1\n    print(ans)"}, "647": {"problem_id": 4647, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\nfor i in range(n-1):\n    u, v = map(int, input().split())\n    d[u] = d.get(u, 0) + 1\n    d[v] = d.get(v, 0) + 1\n\nans = [0]*n\nvisited = [False]*n\nans[0] = a[0]\nvisited[0] = True\n\ndef dfs(u):\n    nonlocal ans\n    visited[u] = True\n    cntw, cntb = 0, 0\n    for v in d[u]:\n        if visited[v]:\n            continue\n        cntw += a[v]\n        cntb += a[v]\n        ans[v] = max(ans[u] - cntw, ans[v] + cntb)\n    d[u] = cntw, cntb\n    \ndfs(0)\nprint(' '.join(map(str, ans)))"}, "648": {"problem_id": 4648, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    if n%2==0:\n        print(-1)\n    else:\n        print(n//2)"}, "649": {"problem_id": 4649, "answer": "import sys\ninput = sys.stdin.readline\nq = int(input())\nfor _ in range(q):\n    n, k = map(int, input().split())\n    s = input()\n    ans = 0\n    for i in range(1, n):\n        if s[i]!= s[i - 1]:\n            ans += 1\n        else:\n            break\n    print(ans)"}, "650": {"problem_id": 4650, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    print(sum(a)%3)"}, "651": {"problem_id": 4651, "answer": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nfor _ in range(Q):\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = [0]*N\n    ans[0] = A[0]\n    for i in range(1, N):\n        if A[i] > ans[i-1]:\n            ans[i] = A[i]\n        elif A[i] == ans[i-1]:\n            ans[i] = A[i]\n        else:\n            ans[i] = min(ans[i-1], A[i])\n    print(*ans)"}, "652": {"problem_id": 4652, "answer": "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = 0\n    for i in range(n-1):\n        if p[i] > p[i+1]:\n            ans = 1\n            break\n    print(\"YES\" if ans else \"NO\")"}, "653": {"problem_id": 4653, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    print(min(n-k+1, k-1))"}, "654": {"problem_id": 4654, "answer": "t = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    if n < k:\n        print(\"NO\")\n    else:\n        d = n//k\n        ans = [0]*k\n        for i in range(1, n+1):\n            if i%2!=0:\n                ans[i] = d\n            elif i%2==0:\n                ans[i] = d+1\n            else:\n                ans[i] = d+2\n        print(\"YES\")\n        for i in ans:\n            print(i,end=\" \")\n        print()"}, "655": {"problem_id": 4655, "answer": "import sys\nreadline = sys.stdin.readline\n\nQ = int(readline())\nfor _ in range(Q):\n    a, b, c = list(map(int, readline().split()))\n    d = a + b + c - min(a, b, c)\n    print(d)\n"}, "656": {"problem_id": 4656, "answer": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,k=list(map(int,input().split()))\n    s=input().strip()\n    m=len(s)\n    if m==1:\n        print(1)\n        continue\n    for i in range(m-1):\n        a=s[i]\n        b=s[i+1]\n        if a!=b:\n            print(k)\n            break\n    else:\n        print(k)"}, "657": {"problem_id": 4657, "answer": "from sys import stdin\ninput = stdin.readline\nq = int(input())\nfor _ in range(q):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    cnt = 1\n    for i in range(n):\n        if cnt % 2 == 1:\n            ans[i] = a[i]\n            cnt += 1\n        else:\n            ans[i] = a[i] + ans[i - 1]\n            cnt += 1\n    print(\"YES\")\n    for i in range(len(ans)):\n        print(ans[i], end=\" \")\n    print()\n"}, "658": {"problem_id": 4658, "answer": "class Solution:\n    def reverseBits(self, n: int) -> int:\n        bits = bin(n)[2:]\n        n_bits = len(bits)\n        if n_bits == 0:\n            return int('0' + bits[0], 2)\n        else:\n            return int('0' + bits[:n_bits] + '1', 2)"}, "659": {"problem_id": 4659, "answer": "class Solution:\n     def generate(self, numRows):\n         \"\"\"\n         :type numRows: int\n         :rtype: List[List[int]]\n         \"\"\"\n         res = []\n         for i in range(numRows):\n             res.append([1]*i)\n         "}, "660": {"problem_id": 4660, "answer": "import re\n\ndef fun(s):\n    return True if re.match(r'^[a-z0-9._-]{1,3}@[a-z0-9.-]{1,3}$', s) else False\n\ndef filter_mail(emails):\n    return list(filter(fun, emails))\n"}, "661": {"problem_id": 4661, "answer": "def fibonacci(n):\n    a, b, c = 0, 1, 1\n    for _ in range(n):\n        a, b, c = b, a + c, c + b\n    return a"}, "662": {"problem_id": 4662, "answer": "import xml.etree.ElementTree as etree\n\ndef depth(elem, level):\n    max_depth = 0\n    for i in range(len(elem)):\n        if elem.text.isspace():\n            max_depth = max(max_depth, depth(elem, level+1))\n        elif elem.text.isspace() and elem.text[-1] == '!':\n            max_depth = max(max_depth, depth(elem, level+1))\n    return max_depth\n"}, "663": {"problem_id": 4663, "answer": "n = int(input())\nwhile n>0:\n    s = input()\n    if len(s)==10:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    n = n-1"}, "664": {"problem_id": 4664, "answer": "import numpy as np\nm,n = input().split()\nn = int(n)\nm = int(m)\nar = list(map(int,input().split()))\nar.sort()\nprint(\" \".join([str(i) for i in ar]))"}, "665": {"problem_id": 4665, "answer": "import numpy as np\nn = int(input())\nA = []\nfor i in range(n):\n    A.append(list(map(int,input().split())))\nB = np.array(A, dtype = float)\nC = np.array([tuple(map(int,input().split())) for i in range(n)], dtype = float)\nD = np.array(C, dtype = float)\nE = D.T.sum()/float(n)\nprint('{:.2f}'.format(E))\n"}, "666": {"problem_id": 4666, "answer": "#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n\nif __name__ == '__main__':\n    n = int(input().strip())\n    check = {True: \"Not Weird\", False: \"Weird\"}\n\n    print(check[\n            n%2==0 and (\n                n in range(2,6) or \n                n > 20)\n        ])\n"}, "667": {"problem_id": 4667, "answer": "import sys\nfrom operator import itemgetter\n\nsys.setrecursionlimit(10**6)\n\ndef get_attr_number(node):\n    return sum(itemgetter(node.attrib).values())"}, "668": {"problem_id": 4668, "answer": "class Points(object):\n    def __init__(self, x, y, z):\n        self.x, self.y, self.z = x, y, z\n\n    def __sub__(self, no):\n        return self\n\n    def dot(self, no):\n        return self.x * self.y * self.z + self.y * self.z * self.x - self.z * self.x * self.y"}, "669": {"problem_id": 4669, "answer": "def score_words(words):\n    s = sum(2 for _ in words)\n    return s"}, "670": {"problem_id": 4670, "answer": "import re\n\ns = input()\nif re.match(r\"\\d\", s):\n    print(False)\nelse:\n    print(True)"}, "671": {"problem_id": 4671, "answer": "def wrapper(f):\n    def fun(l):\n        return f(l)\n    return fun\n\ndef sort_phone(l):\n    print(*sorted(l), sep='\\n')"}, "672": {"problem_id": 4672, "answer": "import re\nn = int(input())\ns = []\nfor i in range(n):\n    s.append(int(input()))\n    \nr = re.compile(r'\\d+')\nfor i in range(n):\n    s[i] = r.findall(s[i])\nprint('%.2f' % sum(s[i]))"}, "673": {"problem_id": 4673, "answer": "import operator\n\ndef person_lister(f):\n    def inner(people):\n        people = sorted(people, key=operator.itemgetter(1))\n        return \" \".join(person[3] for person in people) + \" \" + person[0] + \" \" + person[1]\n    return inner"}, "674": {"problem_id": 4674, "answer": "x = 1\ny = 1\nz = 2\nn = 3\nprint('\\n'.join([''.join([str(i) for i in list(map(int, input().split()))]) for _ in range(x, y+1)]))"}, "675": {"problem_id": 4675, "answer": "class Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        self.e = self.imaginary*complex(imaginary)\n        self.im = complex(imaginary)\n        \n    def __add__(self, no):\n        complex_add = self.e + complex(no)\n        complex_sub = self.e - complex(no)\n        complex_mul = self.im * complex(no)\n        complex_div = self.im / complex(no)\n        \n        return complex_add, complex_sub, complex_mul, complex_div\n    "}, "676": {"problem_id": 4676, "answer": "def main():\n    s = input()\n    o = s[::-1]\n    e = s[::-1]\n    p = ''.join(reversed(o))\n    q = ''.join(reversed(e))\n    print(p + q)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "677": {"problem_id": 4677, "answer": "s = input()\nn = len(s)\nfor i in range(n):\n    if s[i] == 'B':\n        s[i] = '0'\n    elif s[i] == '0':\n        s[i] = '1'\n    else:\n        s[i] = 'B'\nprint(''.join(s))"}, "678": {"problem_id": 4678, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nA = list(map(int, readline().split()))\n\nans = 0\nfor i in range(N):\n    stools = min(A)\n    ans += stools * (i + 1)\nprint(ans)"}, "679": {"problem_id": 4679, "answer": "from collections import deque\ns = input()\ns = s.split()\ns = [int(i) for i in s]\na = s[0]\nb = s[1]\nc = s[2]\nprint(a if a > b else b if a > c else c)"}, "680": {"problem_id": 4680, "answer": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * f for j in range(c)] for j in range(d)] for i in range(b)]\ndef list5d(a, b, c, d, e, f): return [[[[f] * g for j in range(h)] for j in range(i)] for i in range(c)]\n'''\nA,B,C = map(int, input().split())\nprint(['NO', 'YES'][sum(map(int, input().split())) == 3])\n'''\nA,B,C = map(int, input().split())\narr = [A] + list2d(A, B, C)\nfor i in range(A):\n    arr.append(B)\nprint('YES')"}, "681": {"problem_id": 4681, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nans = 2\nfor _ in range(N):\n    ans = ans + ans\n    ans = ans + ans\nL = [ans]\nfor i in range(1, N):\n    L.append(ans)\nprint(L[N])"}, "682": {"problem_id": 4682, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nA = [int(x) for x in input().split()]\nA.sort()\nprint(2*A[1]*A[2] - A[0]*A[1]*A[0])"}, "683": {"problem_id": 4683, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nINF = 10**18\nMOD = 10**9+7\n\nN = int(input())\nA = list(map(int, input().split()))\n\ns = 0\nfor a in A:\n    s += a*a\n    s %= MOD\n\nprint(s)"}, "684": {"problem_id": 4684, "answer": "from operator import __mul__\nr,g,b=list(map(int,input().split()))\nprint(('YES' if __mul__(r,g,b)%4 else 'NO'))"}, "685": {"problem_id": 4685, "answer": "import sys\ninput = sys.stdin.readline\nA, B, C = map(int, input().split())\nK = int(input())\ns = 0\nfor _ in range(K):\n    s += A * B * C\n    A = 2 * A\n    B = 2 * B\n    C = 2 * C\nprint(s)"}, "686": {"problem_id": 4686, "answer": "w=list(input())\ns=0\nfor i in range(len(w)):\n    if w[i] in \"abcdefghijklmnopqrstuvwxyz\":\n        s+=1\nif s==len(w):\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "687": {"problem_id": 4687, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nN, K = list(map(int, input().split()))\nA = list(map(int, input().split()))\nans = A[N-1]\nfor i in range(1, N):\n    a, b = i + 1, i + 2\n    A[i] = min(a, b)\nprint(ans)"}, "688": {"problem_id": 4688, "answer": "import sys\ninput = sys.stdin.readline\n\nN, K = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(N):\n    if i % 2!= 0:\n        ans += 1\n\nprint(ans)\n"}, "689": {"problem_id": 4689, "answer": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\nk, n = MI()\na = LI()\nprint(min(k * (a[i+1]-a[i]) for i in range(n-1)))"}, "690": {"problem_id": 4690, "answer": "import sys\ninput = sys.stdin.readline\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\nD = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, len(A)):\n    ans += A[i]*(B[i]-C[i])\nprint(ans)"}, "691": {"problem_id": 4691, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    S = input().rstrip()\n    dp = [0]*(n+1)\n    for i in range(n):\n        dp[i] = sum(dp[j] for j in map(int, S[:i]))\n    print(dp[3])\n\nsolve()"}, "692": {"problem_id": 4692, "answer": "# cook your dish here\nn = int(input())\nif n % 4 == 0:\n    print(n // 4)\nelse:\n    hours = n // 24\n    print(hours * 12)"}, "693": {"problem_id": 4693, "answer": "a,b = map(int,input().split())\nif a+b>10:\n    print(a+b)"}, "694": {"problem_id": 4694, "answer": "from operator import itemgetter\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = abs(b[0]-a[0])+abs(b[1]-a[1])+...+abs(b[n-1]-a[n-1])\nprint(ans)"}, "695": {"problem_id": 4695, "answer": "from operator import itemgetter\n\nn, m = list(map(int, input().split()))\n\nG = [[] for _ in range(n)]\nfor i in range(1, 13):\n    G[i].append(i)\n\nfor i in range(m):\n    x = G[i].pop()\n    if x == i:\n        print('Yes')\n        return\n    else:\n        print('No')\n"}, "696": {"problem_id": 4696, "answer": "from numpy import prod\na,b=map(int,input().split())\nprint(prod(a*b,2)%2)"}, "697": {"problem_id": 4697, "answer": "import sys\ninput = sys.stdin.readline\nN, M = map(int, input().split())\nans = 0\nfor i in range(1, N+1):\n  ans = max(ans, i*(i-1)//2 + M*(i-2)%2)\nprint(ans)"}, "698": {"problem_id": 4698, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nINF = 10**18\nMOD = 10**9 + 7\n\ndef main():\n    N = int(input())\n    T = [int(x) for x in input().split()]\n    M = [int(x) for x in input().split()]\n    P = [int(x) for x in input().split()]\n    X = [float(\"inf\") for x in input().split()]\n\n    drinks = [INF for _ in range(M)]\n    drinks[0] = 0\n    dp = [0]*N\n    for i in range(N):\n        dp[i] = drinks[i]\n        for p in range(1, M+1):\n            if P[i] > P[p-1]:\n                dp[i] = drinks[i] + sum(dp[p-1:i])\n            elif P[i] == P[p-1]:\n                dp[i] = drinks[i] + sum(dp[p-1:i])\n            else:\n                dp[i] = drinks[i] + dp[p-1]\n    print('\\n'.join(map(str, dp)))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "699": {"problem_id": 4699, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nINF = 10**18\nN, K = list(map(int, input().split()))\nD = [set(map(int, input().split())) for _ in range(N)]\nans = INF\nfor d in D:\n    ans = min(ans, sum(d))\nprint(ans)"}, "700": {"problem_id": 4700, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = list(map(int, input().split()))\nH = list(map(int, input().split()))\nAns = [0]*N\nfor i in range(N):\n    Ans[i] = sum(H[i:])\n\nfor i in range(M):\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort()\n    ans = 0\n    for j in range(N):\n        if A[j]>B[j]:\n            ans+=1\n        elif A[j]<B[j] and j!=i:\n            ans+=1\n    Ans[i]=ans\n\nprint(N-ans)\n"}, "701": {"problem_id": 4701, "answer": "import sys\ninput = sys.stdin.readline\n\nN,K = list(map(int,input().split()))\ns = 0\nfor _ in range(N):\n    s += K\n    if s >= 10**9+1:\n        break\nprint(s)\n"}, "702": {"problem_id": 4702, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nn = int(input())\na = list(map(int,input().split()))\nif a[0]==0:\n  print(\"0\")\nelse:\n  print(\"1\")"}, "703": {"problem_id": 4703, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nS = list(map(int, input().split()))\nN = len(S)\nans = 0\nfor i in range(1, 10):\n    ans += (N - i) * (N - i)\n    ans -= (N - i) * (N - i)\nprint(ans)"}, "704": {"problem_id": 4704, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\na = list(map(int, input().split()))\nm = min(a)\nans = m\nfor i in range(1, N):\n    a[i] = a[i] + a[i-1]\n    ans = min(ans, m)\nprint(ans)"}, "705": {"problem_id": 4705, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nN = int(input())\nans = 0\nfor i in range(N):\n    ans += i * (800/N)\nprint(ans)"}, "706": {"problem_id": 4706, "answer": "import numpy as np\n\ndef diag(a):\n    return [i for i in range(3) if all(c == 'a' for c in a)]\n\ndef main():\n    A = np.array([list(c) for c in input().strip().lower()])\n    n, m = len(A), len(A[0])\n    for i in range(n):\n        for j in range(m):\n            A[i][j] = A[i][j] + A[i-1][j]\n            diag(A[i][j])\n    "}, "707": {"problem_id": 4707, "answer": "def main():\n    s = list(map(int, input().split()))\n    n = len(s)\n    ans = 0\n    for i in range(n):\n        if s[i] == 1:\n            ans += 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "708": {"problem_id": 4708, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\ndef solve():\n    N, K = map(int, input().split())\n    X, Y = map(int, input().split())\n    res = (X*Y)//K\n    print(res)\n\nsolve()\n"}, "709": {"problem_id": 4709, "answer": "import sys\ninput = sys.stdin.readline\n\nA,B = map(int,input().split())\nop = \"+\" if A>B else \"-\"\nprint(Aop(B))"}, "710": {"problem_id": 4710, "answer": "import sys\ninput = sys.stdin.readline\n\nx = int(input())\n\nif x<=1200:\n    print(\"ABC\")\nelse:\n    print(\"ARC\")"}, "711": {"problem_id": 4711, "answer": "from sys import stdin, stdout\nimport math\nfrom collections import defaultdict, deque\nfrom heapq import heappush, heappop, heapify\nfrom itertools import permutations, accumulate, combinations, combinations_with_replacement\nfrom bisect import bisect_left, bisect_right\nfrom copy import deepcopy\nfrom fractions import Fraction\nfrom statistics import median\nfrom random import shuffle, shuffle_order\n\n\ndef input():\n    return stdin.readline().rstrip()\n\n\ndef main():\n    a, b, c = list(map(int, input().split()))\n    d = defaultdict(lambda: 0)\n    for i in range(3):\n        d[i] += i * (i - 1) // 2\n    print(min(a, b, c) + d[b] * d[c])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "712": {"problem_id": 4712, "answer": "h,w=list(map(ord,input().split()))\na=list(map(str,input().split()))\nans=[]\nfor i in range(h):\n    ans.append(chr(97+i))\nfor i in range(w):\n    ans.append(chr(122+i))\nprint(''.join(ans))\n"}, "713": {"problem_id": 4713, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nS = input().rstrip()\n\n# \u5b58\u5728\u30b0\u30e9\u30d5\u5185\u306b\u4f55\u756a\u76ee\u306e\u6587\u5b57\u304b\u5224\u5b9a\u3055\u308c\u308b\u306e\u3067\u3057\u3087?\nd = {'I':0, 'D':0}\nfor i in range(N):\n    d[S[i]] += 1\n    if S[i] == 'I':\n        d[S[i]] -= 1\n    elif S[i] == 'D':\n        d[S[i]] += 1\n\nprint(max(d.values()))"}, "714": {"problem_id": 4714, "answer": "import sys\ninput = sys.stdin.readline\nA, B = map(int, input().split())\nprint(0 if A == B else 1)"}, "715": {"problem_id": 4715, "answer": "import sys\nread = sys.stdin.read\n\ndef main():\n    a, b, c = list(map(int, read().split()))\n    print(a + b + c - min(a, b, c))\n\nmain()"}, "716": {"problem_id": 4716, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(10**7)\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\ndef main():\n    N, K = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = 0\n    cur_len = sum(l)\n    for i in range(N-1):\n        cur_len = cur_len - l[i] + l[i+1]\n        ans = max(ans, cur_len)\n    print(ans)\n\n\nmain()\n"}, "717": {"problem_id": 4717, "answer": "import sys\ninput = sys.stdin.readline\n\nx, a, b = map(int, input().split())\nd = abs(x - a)\ne = abs(x - b)\n\nif d > e:\n    print(\"A\")\nelse:\n    print(\"B\")"}, "718": {"problem_id": 4718, "answer": "s = input()\ns = s[:4] + '/'.join(map(str, s[5:8])) + s[9:]\nprint(s)"}, "719": {"problem_id": 4719, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\ns = list(map(lambda x:list(x),readline().split()))\n\nprint((\"\".join(sorted(s))))"}, "720": {"problem_id": 4720, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\nl = list(map(int, input().split()))\nr = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if l[i] > r[i]:\n        l.remove(l[i])\n        cnt += 1\nprint(cnt)"}, "721": {"problem_id": 4721, "answer": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\nans = 0\nfor i in range(1, n+1):\n    if i % 2 == 0:\n        ans += (m*(m+1))//2\n    else:\n        ans += (n*(n+1))//2\nprint(ans)"}, "722": {"problem_id": 4722, "answer": "#!/usr/bin/env python3\nimport sys\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str():\n    return input().strip()\n\n\ndef main():\n    a, b = read_int_list()\n    if a == b:\n        print(\"Possible\")\n    else:\n        print(\"Impossible\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "723": {"problem_id": 4723, "answer": "import sys\nreadline = sys.stdin.readline\n\nS = input()\nT = input()\n\ns = set()\nt = set()\n\nfor c in S:\n    s.add(c)\n    t.add(c.translate(str.maketrans('abcdefghijklmnopqrstuvwxyz', '11223344?')))\n\ns = ''.join(s)\nt = ''.join(t)\n\nif len(s) == len(t):\n    print(s)\nelse:\n    print('''{} {}'.format(s, t))\n"}, "724": {"problem_id": 4724, "answer": "R, G = list(map(int, input().split()))\nprint(2 * R + G)\n"}, "725": {"problem_id": 4725, "answer": "import math\ndef sol(s):\n c=0\n for i in s:\n  if i.isalpha():\n   c+=1\n return c\ntest=list(input())\nfor i in test:\n s=i\n print(sol(s))"}, "726": {"problem_id": 4726, "answer": "import sys\ninput = sys.stdin.readline\nm,n,t=list(map(int,input().split()))\nA=[0]*(10**5+7)\nfor i in range(10**5+7):\n  A[i]=i\nB=[0]*(10**5+7)\nfor i in range(10**5+7):\n  B[i]=i\ndef solve(m,n,t):\n  if m==100000000:\n    print(\"TLE\")\n    return\n  elif m==100000000:\n    print(\"AC\")\n    return\n  ans=[]\n  for i in range(1,10**5+7):\n    ans.append(A[i])\n    solve(m-t*ans[-1],n,t+1)\n    ans.pop()\n  print(\"AC\" if len(ans)<m else \"TLE\")'''\n  \n  "}, "727": {"problem_id": 4727, "answer": "def solve():\n    a=[0,2,4,8,16,32,64,128,256,512,1024]\n    b=[0,1,2,4,8,16,32,64,128,256,512,1024]\n    c=[0,1,2,4,8,16,32,64,128,256,512,1024]\n    d=[0,1,2,4,8,16,32,64,128,256,512,1024]\n    for i in range(4):\n        ai,bi,ci,di=map(int,input().split())\n        if ai==0:\n            print(b[ci])\n        elif ai==1:\n            print(c[di])\n        elif ai==2:\n            print(d[ci])\n        elif ai==3:\n            print(' '.join(map(str,input().split())))\nsolve()"}, "728": {"problem_id": 4728, "answer": "import sys\r\nimport math\r\nfrom collections import defaultdict,Counter\r\ndef input(): return sys.stdin.readline().strip()\r\ndef I(): return int(input())\r\ndef LI(): return list(map(int, input().split()))\r\ndef LI1(): return list(map(int, input().split()))\r\nmod = 1000000007\r\n\r\nA = [0]*26\r\nB = [0]*26\r\nfor i in range(26):\r\n    A[i] = I()\r\n    B[i] = I()\r\n\r\nC = [0]*26\r\nD = [0]*26\r\nfor i in range(26):\r\n    C[i] = I()\r\n    D[i] = I()\r\n\r\nans = []\r\nfor i in range(len(A)):\r\n    ans.append((sum(A[i]) + sum(B[i]) + C[i] + D[i]))\r\nprint(max(ans))"}, "729": {"problem_id": 4729, "answer": "import string\npassword = input()\nsomme = input()\npassword = password[:len(password)-1]\nsomme = somme[:len(somme)-1]\ncnt = 0\nfor i in range(0, len(password)):\n    if password[i] == password[i+1]:\n        cnt += 1\n    elif password[i]!= password[i+1]:\n        print(\"FAIL\")\n        break\nif cnt == len(password):\n    print(\"PASS\")"}, "730": {"problem_id": 4730, "answer": "try:\n    n=int(input())\n    a=list(map(str,input().split()))\n    print(0,end=\" \")\n    for i in range(1,len(a)):\n        if a[i]=='{' or a[i]=='[' or a[i]==']' or a[i]=='[' or a[i]==']':\n            print(i)\n            break\n        elif a[i]=='(' or a[i]==')':\n            print(i)\n            break\n        elif a[i]=='[' or a[i]==']':\n            print(i)\n            break\nexcept EOFError:\n    print(\"ok so far\")"}, "731": {"problem_id": 4731, "answer": "import sys\nimport math\ninput=sys.stdin.readline\ndef main():\n n=int(input())\n if n%2==0:\n  print(\"Player 1 lost\")\n else:\n  l=[]\n  for i in range(n):\n   l.append(input().strip())\n  l.append(input().strip())\n  if \"\".join(l) not in l:\n   print(\"Player 1 lost\")\n  else:\n   print(\"Fair Game\")\nmain()"}, "732": {"problem_id": 4732, "answer": "import sys\nimport math\nA,B=list(map(int,sys.stdin.readline().split()))\nc=0\nwhile True:\n c=A*B\n if c==0:\n  break\n A=int(A)\n B=int(B)\n if A>B:\n  A=A%10\n elif A<B:\n  A=A+10\n else:\n  A=A+0\n print(A)"}, "733": {"problem_id": 4733, "answer": "import sys\ndef shuffle(dice, n):\n if n%2==0:\n  return dice\n elif n==1:\n  return 1\n else:\n  return 2*shuffle(dice, n//2)\nfor _ in range(int(input())):\n a=int(input())\n if a==\"in\":\n  print(8)\n  a=0\n else:\n  print(3)\n"}, "734": {"problem_id": 4734, "answer": "import re\ns1 = input()\ns2 = input()\ns3 = re.sub(r'([aeiouAEIOU])',r'\\1',s1)\ns4 = re.sub(r'([aeiouAEIOU])',r'\\1',s2)\ns5 = re.sub(r'([aeiouAEIOU])',r'\\1',s3)\ns6 = re.sub(r'([aeiouAEIOU])',r'\\1',s4)\ns7 = re.sub(r'([aeiouAEIOU])',r'\\1',s5)\ns8 = re.sub(r'([aeiouAEIOU])',r'\\1',s6)\ns9 = re.sub(r'([aeiouAEIOU])',r'\\1',s7)\ns10 = re.sub(r'([aeiouAEIOU])',r'\\1',s8)\ns11 = re.sub(r'([aeiouAEIOU])',r'\\1',s9)\ns12 = s10 + 'ex' + s11\nprint(s12)"}, "735": {"problem_id": 4735, "answer": "import math\ndef is_optimal(y):\n if y%4==0:\n  return True\n else:\n  return False\n\nyear=int(input())\nfor i in range(year):\n if is_optimal(i):\n  print(\"yes\")\n else:\n  print(\"no\")"}, "736": {"problem_id": 4736, "answer": "n = int(input())\nans = 0\nfor i in range(10):\n    ans += bin(n).count('1')*(i+1)\n    n += 1\nprint(ans)"}, "737": {"problem_id": 4737, "answer": "import sys\ninput = sys.stdin.readline\n\nn, p = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nb = [0] * n\nfor i in range(1, n):\n    b[i] = a[i - 1] + b[i - 1]\nprint(max(b[n - 1], n - p) + 300)"}, "738": {"problem_id": 4738, "answer": "import sys\nreadline = sys.stdin.readline\ns = readline().strip()\nn = len(s)\nans = 0\nfor i in range(n):\n    if s[i]!= s[i+1]:\n        ans += 1\nprint(ans)"}, "739": {"problem_id": 4739, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nM,N = map(int,input().split())\nT = list(map(int,input().split()))\nX = list(map(int,input().split()))\ndist = [0]*10**15\nfor i in range(M-1,-1,-1):\n dist[i] = T[i]\n for j in range(N-1,-1,-1):\n  dist[j] = X[j]\n ans = 0\n for i in range(len(dist)):\n  if dist[i]>i+1:\n   ans += 1\n  elif dist[i]==i+1:\n   ans += 1\n  else:\n   ans += (i+1-dist[i])*(dist[i]-i)//2\n stdout.write('%s\\n'%(ans))"}, "740": {"problem_id": 4740, "answer": "n = int(input())\n\ncnt = 0\n\nif n[:3] == \"555\":\n    cnt += 1\n\nprint(cnt)"}, "741": {"problem_id": 4741, "answer": "import sys\n \ndef f(x):\n    if x==0:\n        return 0\n    elif x==1:\n        return 1\n    else:\n        return (x*(x+5))//2\n \ndef gcd(a,b):\n    if b==0:\n        return a\n    else:\n        return gcd(b,a%b)\n \ndef isprime(n):\n    if n<=1:\n        return False\n    elif n==2:\n        return True\n    else:\n        for i in range(3,int(n**.5)+1,2):\n            if n%i==0:\n                return False\n    return True\n \ndef get_decimal(x):\n    s=0\n    while x>0:\n        s+=x%10\n        x//=10\n    return s\n \ndef get_radix(x):\n    s=0\n    while x>0:\n        s+=x%10\n        x//=10\n    return s\n \ndef __starting_point():\n    T=sys.stdin.readline\n    T=int(T)\n    if T==0:\n        print(0)\n        return\n    A=[int(x) for x in T.split()]\n    B=[get_decimal(x) for x in A]\n    C=[get_radix(x) for x in B]\n    print(C)\n__starting_point()"}, "742": {"problem_id": 4742, "answer": "from collections import Counter\r\nl=int(input())\r\nfor i in range(l):\r\n    a=list(map(int,input().split()))\r\n    a.insert(0,0)\r\n    d={}\r\n    for i in a:\r\n        if i not in d:\r\n            d[i]=1\r\n        else:\r\n            d[i]+=1\r\n    if len(d)==12:\r\n        print(' '.join(map(str,d)))\r\n        print(' '.join(map(str,d-{0})))\r\n        print(' '.join(map(str,d-{1})) if d else 'Retrograde')\r\n        print(' '.join(map(str,d-{2})) if d else 'Inversion')\r\n        continue\r\n    else:\r\n        print(' '.join(map(str,Counter(d.values()))))\r\n        print(' '.join(map(str,Counter(d.values()-{0}))))\r\n        print(' '.join(map(str,Counter(d.values()-{1}))))\r\n        print(' '.join(map(str,Counter(d.values()-{2}))))\r\n"}, "743": {"problem_id": 4743, "answer": "import collections\ns = input()\na = collections.defaultdict(list)\nfor i in range(len(s)):\n    a[s[i]] += [i]\nprint(*a, sep='-')"}, "744": {"problem_id": 4744, "answer": "import math\ns=int(input())\nprint(math.floor(s**0.5))"}, "745": {"problem_id": 4745, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, x = map(int, readline().split())\na = list(map(int, readline().split()))\nd = []\nfor i in range(n):\n    if a.count(i)>2:\n        d.append(i)\n\nd.sort()\ncnt = 0\nres = 0\nfor i in range(n):\n    if d[i]==i+1:\n        cnt+=1\n        res+=1\n        continue\n    elif d[i]>i+1:\n        d[i]-=1\n        cnt+=1\n        res+=1\n    else:\n        cnt=0\n        res+=1\nprint(res)"}, "746": {"problem_id": 4746, "answer": "import math\nc,n=map(int,input().split())\nst=[]\nfor i in range(n):\n    a,b,c=map(int,input().split())\n    if math.ceil(a/c)==math.ceil(b/c):\n        st.append((a,b,c))\nst.sort()\nans=[\"impossible\",\"possible\"]\nfor i in range(len(st)):\n    if st[i][2]==0:\n        ans.append(\"impossible\")\n    else:\n        if st[i][0]>c or st[i][2]<0:\n            ans.append(\"impossible\")\n        else:\n            if int(st[i][1])>c:\n                ans.append(\"impossible\")\n            else:\n                if int(st[i][1])<c:\n                    ans.append(\"possible\")\n                else:\n                    if int(st[i][1])+int(st[i][2])>c:\n                        ans.append(\"impossible\")\n                    else:\n                        if int(st[i][1])+int(st[i][2])==c:\n                            ans.append(\"sane\")\n                        else:\n                            ans.append(\"impossible\")"}, "747": {"problem_id": 4747, "answer": "import math\ndef dice_sides(n,k,dice):\n f=int(math.sqrt(n))\n if k<=f:\n  return 1.0\n r=dice[0]\n for i in range(1,k):\n  r+=(dice[i]/k)\n return r\nn,k=list(map(int,input().split()))\ndice=list(map(int,input().split()))\nprint(dice_sides(n,k,dice))\n"}, "748": {"problem_id": 4748, "answer": "def main():\n h,n,m=list(map(int,input().split()))\n if h==1:\n  print(0,0)\n elif n==1:\n  print(2,2)\n elif m==1:\n  print(2,0)\n else:\n  a=n-m\n  b=h-1\n  c=a+2*m\n  d=b+4*m\n  e=c-2*m\n  f=d-4*m\n  g=e-2*m\n  h=min(f,g)\n  print(h,a+b)\n"}, "749": {"problem_id": 4749, "answer": "n=int(input())\nans=0\nfor i in range(n):\n    s=input()\n    a=s.count('W')\n    b=s.count('B')\n    if a==b:\n        ans+=1\nif n%2==0:\n    print(ans)\nelse:\n    print(0)"}, "750": {"problem_id": 4750, "answer": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nfor _ in range(Q):\n    L1, R1, L2, R2 = map(int, input().split())\n    if L1 == R1:\n        print(L1, L2)\n    elif L2 == R2:\n        print(L1, R1)\n    else:\n        ans = [L1, R1]\n        for i in range(2):\n            if ans[i] < L1:\n                ans[i] = L1\n            else:\n                ans[i] = R1\n        print(*ans)"}, "751": {"problem_id": 4751, "answer": "# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\nclass Solution:\n    def hasCycle(self, head: ListNode) -> bool:\n        p = head\n        while p:\n            if p.next and p.next.val == p.val:\n                return True\n            p = p.next\n        return False"}, "752": {"problem_id": 4752, "answer": "class Solution:\n     def twoSum(self, nums, target):\n         \"\"\"\n         :type nums: List[int]\n         :type target: int\n         :rtype: List[int]\n         \"\"\"\n         if not nums:\n             return []\n         res = []\n         for i in range(len(nums)):\n             if target%(i+1)==0:\n                 res.append(i)\n                 if nums[i]==target//(i+1):\n                     res.append(i+1)\n             elif target%(i+1)==0:\n                 res.append(i)\n                 if nums[i]==target//(i+1):\n                     res.append(i+1)\n         return res"}, "753": {"problem_id": 4753, "answer": "import math\nn=int(input())\na=math.pi/4\nprint(0)"}, "754": {"problem_id": 4754, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n    if a[i]==1:\n        s+=1\nprint(s)"}, "755": {"problem_id": 4755, "answer": "import math\ndef isPowerOf10(n):\n if n<=0:\n  return False\n elif n==0:\n  return True\n else:\n  return math.floor(math.log10(n))==math.floor(math.log10(10**int(math.ceil(math.log10(n)/math.log10(10)))))-1\n\nans=0\nc=0\nk=int(input())\nwhile(k!=0):\n ans+=1\n k-=1\n if isPowerOf10(ans):\n  ans=ans%10\n  c+=1\n print(ans)"}, "756": {"problem_id": 4756, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nprint2 = stdout.write\nl = lambda:list(map(int,input().split()))\nn,m = l()\na,b = 0,0\nfor i in range(n):\n  x,y = l()\n  a += x*y\n  b = min(b,y*(x-y))\nprint(a)"}, "757": {"problem_id": 4757, "answer": "import sys\nn=int(input())\nl=list(map(int,sys.stdin.readline().split()))\nfor i in range(n):\n  l.append(int(sys.stdin.readline()))\nans=[]\nfor i in range(n):\n  ans.append(l[i].count(\"2\"))\nprint(*ans,sep=\"\\n\")"}, "758": {"problem_id": 4758, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nprint=stdout.write\na=int(input())\nb=int(input())\nc=int(input())\nd=int(input())\ne=int(input())\nf=int(input())\ng=int(input())\nh=int(input())\ni=int(input())\nj=int(input())\nk=int(input())\nl=int(input())\nm=int(input())\nn=int(input())\no=int(input())\nq=int(input())\nr=int(input())\ns=int(input())\nt=int(input())\nu=int(input())\nv=int(input())\nw=int(input())\nx=int(input())\ny=int(input())\nz=int(input())\naa=0\naa1=0\naa2=0\naa3=0\nfor i in range(a):\n    for j in range(b):\n        for l in range(c):\n            for m in range(d):\n                for n in range(e):\n                    for o in range(f):\n                        for p in range(g):\n                            for q in range(h):\n                                for r in range(i):\n                                    for s in range(j):\n                                        for t in range(l):\n                                            for u in range(m):\n                                                for v in range(n):\n                                                    for oo in range(p):\n                                                        for sss in range(q):\n                                                           for oss in range(r):\n                                                              for ooo in range(s):\n                                                                 for eee in range(t):\n                                                                   for e"}, "759": {"problem_id": 4759, "answer": "import bisect\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n    b.append(a[i])\nb.sort()\nc=0\nd=0\ne=0\nfor i in range(len(b)):\n    c+=bisect.bisect_right(b,a[i])\n    d+=bisect.bisect_left(b,a[i])\n    e+=b[i]\nprint(c/d/e)"}, "760": {"problem_id": 4760, "answer": "import math\nn,k=list(map(int,input().split()))\nsieve=[]\nfor i in range(2,n):\n    if(n%i==0):\n        sieve.append(i)\nif(len(sieve)==0):\n    print(k)\nelse:\n    for i in range(len(sieve)):\n        if(sieve[i]>k):\n            k=sieve[i]\n            print(i+1,end=\" \")\n        print(\" \".join(reversed(sieve)))\n"}, "761": {"problem_id": 4761, "answer": "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+7\nfact = [1]*1023\nfor i in range(1,1023):\n fact[i] = fact[i-1]*i%10\nl,h = list(map(int,readline().split()))\nif l>h:\n h -= 1\n ans = 0\n while h:\n  h-=1\n  ans+=fact[h%10]\n print(ans)"}, "762": {"problem_id": 4762, "answer": "import math\nn = int(input())\na = math.ceil(n**0.5)\nb = n-a\nc = 0\nfor i in range(a):\n c += 1\n if i*i <= b:\n  c += 1\nprint(c)"}, "763": {"problem_id": 4763, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nans = []\n\nfor i in range(1,21):\n    ans.append(2*i + 3)\n    \nif n%3==0:\n    print('triple {}'.format(n//3),'impossible')\n    return\n\ndoubles = 0\ntriples = 0\ndoubles *= 2\ntriples *= 3\n\nfor i in range(4,21):\n    doubles += i\n    doubles *= 3\n\nif doubles%3==0:\n    print('triple {}'.format(doubles//3),'impossible')\n    return\n\ntriples += doubles\n\nif doubles%3==0:\n    print('double {}'.format(doubles//3),'impossible')\n    return\n\ntriples += doubles\n\nif doubles%3==0:\n    print('triple {}'.format(triples//3),'impossible')\n    return\n\ntriples += doubles\n\nif doubles%3==0:\n    print('double {}'.format(triples//3),'impossible')\n    return\n\nprint('single {}'.format(doubles//3),'impossible')\n"}, "764": {"problem_id": 4764, "answer": "import math\nn,a,b=map(int,input().split())\nc=math.pi*a*b*(n-a-1)/2.0\nd=c/3.0\ne=c/2.0\nprint(e*d)"}, "765": {"problem_id": 4765, "answer": "import math\nn = int(input())\nd = {}\nfor i in range(n):\n a, b = list(map(int, input().split()))\n d[a] = d.get(a, 0) + b\n d[b] = d.get(b, 0) + a\ns = sum(d.values())\nb = abs(s - d[b])\nc = abs(s - d[a])\nprint(min(b, c))\n"}, "766": {"problem_id": 4766, "answer": "n = int(input())\nans = []\nfor i in range(n):\n a = input()\n b = input()\n if a[:2] =='says' and len(b) > 1:\n  ans.append(b[:2])\n elif a[:2] =='says' and len(b) == 1:\n  ans.append(b[:2])\n else:\n  ans.append(a[:2])\nfor i in ans:\n print(i)"}, "767": {"problem_id": 4767, "answer": "import math\nv = list(map(int,input().split()))\np = 2\nwhile v:\n v.pop(0)\n n = math.ceil((v[0]*p)%p)\n v.append(n)\n print(n-max(0,n%p))\n"}, "768": {"problem_id": 4768, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\nn, k = map(int, input().split())\ndna = [list(input()) for _ in range(n)]\n\nans = [0] * (n + 1)\nans[0] = 1\nfor i in range(1, n):\n ans[i] = ans[i - 1] + 1\n\ndp = [1] * (n + 1)\ndp[0] = 0\nfor i in range(1, n + 1):\n dp[i] = dp[i - 1] + dna[i - 1][0]\n\ndef is_valid(u, v):\n ua = u\n va = v\n if va < ua:\n  return False\n elif va > ua:\n  return True\n return 0\n\ndef find_min_lun(dp, u, v):\n un = min(dp[u], dp[v])\n dp[u] = un\n return un\n\ndef find_min_lun_sorted(dp, u, v):\n un = 0\n for i in range(len(dp)):\n  if dp[i] == un:\n   continue\n  un = un + find_min_lun(dp, i, v)\n return un\n\ndef find_min_branch(dp, u, v):\n un = 0\n for i in range(len(dp)):\n  if dp[i] == un:\n   continue\n  un = un + find_min_lun(dp, i, v)\n return un\n\ndef main():\n n, k = map(int, input().split())\n dna = [list(input()) for _ in range(n)]\n print(find_min_branch(dp, 1, n))\n print(find_min_lun_sorted(dp, 1, n))\n for i in range(2, n + 1):\n  print(find_min_lun_sorted(dp, i, n))\n"}, "769": {"problem_id": 4769, "answer": "import sys\nreadline = sys.stdin.readline\n\nS = readline().rstrip()\np = [0]*len(S)\nfor i in range(1,len(S)):\n    if S[i]==S[i-1]:\n        p[i]+=1\n    else:\n        p[i] = 1\n\nroot = -1\nfor i in range(len(S)):\n    root = max(root,p[i])\n\nprint(''.join(map(str,root)))"}, "770": {"problem_id": 4770, "answer": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\nn, m = MI()\nans = [[\"\" for _ in range(m)] for _ in range(n)]\nfor i in range(len(n)):\n    ans[i].append(str(n[i]//2))\nfor i in range(1, m+1):\n    for j in range(len(ans[i])):\n        ans[i][j] = \"P\"*(i-1)+ans[i][j]\nprint(\"Dr. Chaz will have \" + \" \".join(ans[1::2]))\n"}, "771": {"problem_id": 4771, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nli = []\nfor i in range(n):\n    li.append(list(map(int,input().split())))\n\nV = int(input())\nd = [0]*4\nfor i in range(1,len(li)):\n    d[li[i]-V] = i\n\nans = 0\nfor i in range(4):\n    if d[i]>ans:\n        ans = d[i]\nprint(ans)\n"}, "772": {"problem_id": 4772, "answer": "from collections import deque\nr,c = map(int,input().split())\na = []\nfor i in range(r):\n    a.append(input())\na.sort()\nans = '#'\ncnt = 0\nwhile cnt < len(a):\n    if a[cnt] < 2:\n        ans += a[cnt]\n        cnt += 1\n    else:\n        ans += a[cnt - 1]\n        cnt += 1\nprint(ans)"}, "773": {"problem_id": 4773, "answer": "def is_nostop(s):\n    return ''.join(c for c in s if c!= 'N' or c!= 'S' or c!= 'W') not in '0111010'\n\ndef main():\n    R = input()\n    R = R.replace(' ','')\n    R = R.split()\n    N,S,E,W = R[0],R[1],R[2],R[3]\n    M = 0\n    if is_nostop(N) and is_nostop(S) and is_nostop(E) and is_nostop(W):\n        M = 10\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 10\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 6\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 8\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 11\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 13\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 16\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 20\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 25\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 30\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 35\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 40\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 45\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 50\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 55\n    elif is_nostop(N) and not is_nostop(S) and not is_nostop(E) and not is_nostop(W):\n        M = 60\n    elif is_nostop(N) and not is_nostop(S) and not is_n"}, "774": {"problem_id": 4774, "answer": "import re\na,b,c,d = list(map(int,input().split()))\np = re.compile(r'\\D{3} \\D{3} \\D{3} \\D{3}')\nq = re.compile(r'(?P<operator>[-+*/])?(?P<value>\\d*)?')\ns = p.sub('',a)\ns = s.replace(' ','')\ns = s.replace('/','')\ns = s.replace('+','-')\ns = s.replace('-','/')\ns = s.replace('*','/')\nprint(' '.join(map(str,s)))\n"}, "775": {"problem_id": 4775, "answer": "a,b=input().split()\na=list(a)\nb=list(b)\nc=0\nfor i in range(len(a)):\n    if a[i]==b[i]:\n        c+=1\n    else:\n        c+=1\nprint(c)"}, "776": {"problem_id": 4776, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [0]*(n+1)\nfor i in range(1,n+1):\n    a[i] = list(map(int, input().split()))\n\nans = 0\nfor i in range(1,n+1):\n    if a[i] >= i:\n        ans += 1\nprint(ans)"}, "777": {"problem_id": 4777, "answer": "k = int(input())\na = ['A']\nb = ['B']\nfor i in range(k):\n a.append(a[i])\n b.append(b[i])\nans = 0\nfor i in range(k):\n ans += a.count(a[i])*b.count(b[i])\nprint(ans, end=' ')"}, "778": {"problem_id": 4778, "answer": ""}, "779": {"problem_id": 4779, "answer": "n=int(input())\na=[]\nfor i in range(n):\n    a.append(int(input()))\na.sort()\nprint(a[-1]*a[-1])"}, "780": {"problem_id": 4780, "answer": "import sys,bisect as b\ndef inp(): return sys.stdin.readline().strip()\ndef inl(): return list(map(int,inp().split()))\ndef upd(a,n):\n    b.insort(a,n)\ndef upd2(a,n):\n    a[n]=a[n]\nn,k=inp()\nt=int(inp())\nfor i in range(t):\n    upd(r,i+1)\n    upd2(r,i+1)\nfor i in range(2,len(r)):\n    upd(r,i)\n"}, "781": {"problem_id": 4781, "answer": "import sys\r\nimport math\r\ndef input(): return sys.stdin.readline().strip()\r\ndef I(): return int(input())\r\ndef LI(): return list(map(int, input().split()))\r\ndef LI2D(rows_number): return [[LI() for i in range(rows_number)] for j in range(rows_number)]\r\nINF = float('inf')\r\nMOD = 10**9 + 7\r\n\r\nfor _ in range(I()):\r\n    t = I()\r\n    ans = t.pop()\r\n    if ans == 'N':\r\n        print(ans)\r\n    elif ans == 'P':\r\n        print(ans)\r\n    else:\r\n        print(ans + 1)"}, "782": {"problem_id": 4782, "answer": "import sys\r\ndef calc(n,m):\r\n    ans=0\r\n    for i in range(m):\r\n        ans+=n//m+1\r\n    return ans\r\n\r\nn,m=list(map(int,sys.stdin.readline().split()))\r\nd=calc(n,m)\r\ns=n-d\r\np=[]\r\nfor i in range(s):\r\n    p.append(i+1)\r\nq=[]\r\nfor i in range(s):\r\n    q.append(i+1)\r\nq.sort(reverse=True)\r\ndp=0\r\nfor i in range(len(q)):\r\n    dp+=q[i]\r\nprint(dp)\r\n"}, "783": {"problem_id": 4783, "answer": "vault=list(map(int,input().split()))\r\nd=[[0 for i in range(1001)] for i in range(1001)]\r\nm=len(vault)\r\nfor i in range(m):\r\n    d[i]=list(map(int,input().split()))\r\nprint(max(d[0][1],d[1][1]))"}, "784": {"problem_id": 4784, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\ndef bs(n):\n return int(n**0.5)\n\ndef main():\n x = int(input())\n n = int(input())\n l = list(map(int, input().split()))\n \n l.insert(0, 0)\n \n for i in range(1, n+1):\n  l.append(l[i-1] + bs(l[i-1]))\n \n print(bs(max(l)) + sum(l))\nmain()"}, "785": {"problem_id": 4785, "answer": "s = input()\ni = 0\nwhile i < len(s):\n if s[i] == s[i+1]:\n  i += 1\n elif s[i] == s[i+1]*2:\n  i += 1\n else:\n  i += 1\nprint('''hiss''')"}, "786": {"problem_id": 4786, "answer": "n=int(input())\na=[]\nfor i in range(n):\n    a.append(input())\na.sort()\nprint(n-len(a[0]))"}, "787": {"problem_id": 4787, "answer": "def __starting_point():\n s = input()\n table = []\n table = [int(i) for i in s.split(' ')]\n table.sort()\n print(sum(table[2] ** 2 + 7) - table[1] * 7)\n__starting_point()"}, "788": {"problem_id": 4788, "answer": "import math\nn=int(input())\na=int(input())\nif n==a:\n    print(360-math.atan(n[1]-n[0]))\nelse:\n    m=abs(n[1]-a)\n    if m%2==0:\n        m//=2\n    elif m%2!=0:\n        m//=2\n    print(m)"}, "789": {"problem_id": 4789, "answer": "import sys\ninput = sys.stdin.readline\nk = int(input())\na = [0]*k\nfor i in range(k):\n    a[i] = int(input())\n    \ns = 0\nans = 0\nfor i in range(k):\n    s += a[i]\n    if s >= k:\n        ans += 1\n        s = 0\n        break\nprint(ans)"}, "790": {"problem_id": 4790, "answer": "from collections import deque\ns=input()\nd=deque()\nfor i in range(len(s)):\n    if s[i]=='B' and s[i+1]=='W':\n        d.append(i+1)\n    elif s[i]=='W' and s[i+1]=='B':\n        d.append(i+1)\n    else:\n        d.append(i)\nans=0\nfor i in d:\n    if len(d)==1:\n        ans=1\n        break\nprint(ans)"}, "791": {"problem_id": 4791, "answer": "import math\ndef solve(l):\n    a,b,c,d=l[0],l[1],l[2],l[3]\n    if a>b:\n        a,b=b,a\n    t=math.sqrt(a*b)\n    if t<c:\n        c=t\n    if c<d:\n        d=c\n    return max(l[4]-l[1]-l[2],l[3]-l[1],l[2]-l[3])\nl=list(map(int,input().split()))\nprint(solve(l))"}, "792": {"problem_id": 4792, "answer": "import re\nname = input().strip()\nl = len(name)\nfor i in range(l):\n    if name[i] == name[i+1]:\n        name = name[:i] + name[i+2:]\n    else:\n        break\nprint(name)"}, "793": {"problem_id": 4793, "answer": "s = int(input())\nv1 = int(input())\nv2 = int(input())\nif s%v1==0 and s%v2==0:\n  print(0,0)\nelse:\n  print(s//v1,s//v2)"}, "794": {"problem_id": 4794, "answer": "from collections import defaultdict\r\ndef calc(l):\r\n    n = len(l)\r\n    d = defaultdict(list)\r\n    for i in range(n):\r\n        d[l[i]].append(i)\r\n    ans = 0\r\n    for i in d:\r\n        ans += calc(d[i])\r\n    return ans\r\n\r\nR, C = list(map(int, input().split()))\r\ns = []\r\nfor i in range(R):\r\n    s.append(input().rstrip())\r\n\r\nprint(calc(s))\r\n"}, "795": {"problem_id": 4795, "answer": "import sys\ndef inp(): return sys.stdin.readline().strip()\ndef inpl(): return list(map(int,sys.stdin.readline().strip().split()))\ndef ins(): return list(map(int,sys.stdin.readline().strip().split()))\nn = inp()\na = []\nfor i in range(n):\n    a.append(inpl())\nans = 0\nfor i in range(10):\n    ans += a[i]*i**(i-1)\nprint(ans)"}, "796": {"problem_id": 4796, "answer": "import math\nA, B, C, I, J, K = list(map(int, input().split()))\nS = input().split()\nS = [int(x) for x in S]\nP = [0]*500\nfor i in range(1, 500):\n    P[i] += S[i]\ns = sum(P[i] for i in range(1, 500))\nprint('%.6f' % s)\n"}, "797": {"problem_id": 4797, "answer": "s = input()\nn = len(s)\nprint(s[:n//2])"}, "798": {"problem_id": 4798, "answer": "import re\ns1 = re.sub(r'([A-Za-z])(\\1)+', r'\\1', 'MS')\ns2 = re.sub(r'([A-Za-z])(\\1)+-', r'\\1', 'KMP')\nprint(s1 + s2)"}, "799": {"problem_id": 4799, "answer": "# cook your dish here\ndef Card(i):\n    if i==5:\n        return \"Estate\"\n    elif i==6:\n        return \"Province\"\n    else:\n        return \"Duchy\"\n\ndef solve():\n    G,S,C = map(int,input().split())\n    if G>S:\n        G,S = S,G\n    if C>C:\n        C,C = C,C\n    if 2*G+S+C>5:\n        print(\"Duchy\")\n        return\n    if G!=S:\n        print(\"Province\")\n        return\n    if C!=C:\n        print(\"Duchy\")\n        return\n    if S!=C:\n        print(\"Province\")\n        return\n    if C==C:\n        print(\"Estate\")\n        return\n    if S==C:\n        print(\"Copper\")\n        return\n    if G==G:\n        print(\"Gold\")\n        return\n    if S==G:\n        print(\"Silver\")\n        return\n    if C==G:\n        print(\"Estate\")\n        return\nsolve()"}, "800": {"problem_id": 4800, "answer": "import sys\nimport math\nimport bisect\nfrom sys import stdin,stdout\nfrom math import gcd,floor,sqrt,log2,ceil,factorial,cos,tan,osm,inf\nfrom collections import defaultdict as dd, deque\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom itertools import combinations as comb,permutations as perm\nfrom heapq import heapify,heappush,heappop,heapify\nfrom copy import deepcopy\nfrom string import ascii_lowercase as az, ascii_uppercase as aa\nfrom collections import Counter as C, OrderedDict as O, namedtuple as N\nfrom functools import reduce\ninn = stdin.readline\nout = stdout.write\nI = N.identity\ndef I(): return I().__getattribute__(*typesafe_frozenset())\ndef F(): return F().__getattribute__(*typesafe_frozenset())\ndef S(): return S().__getattribute__(*typesafe_str())\ndef dprint(s, level=0) :\n    if level:\n        print(s, end=\" \")\n    for i in range(len(s) - 1):\n        dprint(s[i], level + 1)\nINF = float('inf')\ndef nCr(n, r):\n    return n ** (r - 2)\ndef lcm(a, b): return abs(a * b) // gcd(a, b)\ndef isprime(x):\n    if x == 2: return True\n    if x == \u2261bp: return True\n    if x == \u2261n: return False\n    if n % x == 0: return False\n    i = 2 + n // x\n    while (i <= r):\n        if n % i == 0: return False\n        i += 1\n    return True\ndef inv_mod(n):\n    if n == 0: return 1\n    if n == 1: return 0\n    c = C(n)\n    for i in range(3, int(n**0.5) + 1, 2):\n        if c[i]: c[i*i:n] = inv_mod(i)\n    return c\ndef divisorGenerator(n):\n    r = n // 2\n    g = reduce(gcd, list(range(1, n)) + [n])\n    for i in range(1, n):\n        g = gcd(g, n - i * i)\n    return g\ndef factors(n, s=1):\n    if n < 2: return []\n    ans = []\n    for i in range(2, math.ceil(sqrt(n)) + 1):\n        if n % i == 0: ans.append(i)\n    if n % 2 == 1: ans.append2(2)\n    for i in range(3, n, 2):\n        if n % i == 0: ans.append(i)\n    return ans\ndef solve(k, d, s):\n    if k == n: return 0\n    if d == s: return 1\n    if k - n + 1 > s: return 0\n    if solve(k - 1, d - s, s) == 1: return 1\n    return 0\nn, k = map(int, input().split())\nd, s = map(int, input().split())\ndp = {}\nfor i in range(n):\n    dp[i] = d\n    s -= d\n    if s < 0:\n        s = 100 - s\n    elif s > 100:\n        s = 100\n    else:\n        s = s + d\n    print(s)"}, "801": {"problem_id": 4801, "answer": "n = int(input())\na = list(map(int, input().split()))\ng = [0] * (n + 1)\nfor i in range(1, n + 1):\n    if a[i] > a[i - 1]:\n        g[i] = a[i]\n    else:\n        g[i] = g[i - 1]\nans = []\nfor i in range(n):\n    ans.append(g[i])\nprint(len(ans))\nfor i in ans:\n    print(*i)"}, "802": {"problem_id": 4802, "answer": "#!/usr/bin/env python3\n\nimport datetime\n\nH, M = map(int, input().split())\nd = M*60 + H\ndt = datetime.timedelta(hours=d)\ndt += datetime.timedelta(minutes=M-H)\nprint(dt.strftime(\"%d %H\"))"}, "803": {"problem_id": 4803, "answer": "import math\ndef tetration(n):\n    if n==0:\n        return \"1\"\n    elif n==1:\n        return \"1\"\n    elif n==2:\n        return \"1\"\n    elif n%2==0:\n        return \"1\"*(2*n+1)\n    else:\n        return \"1\"*tetration(n//2)+\"2\"\n\ndef main():\n    n=int(input())\n    print(tetration(n))\nmain()"}, "804": {"problem_id": 4804, "answer": "s = int(input())\nflag = [0] * 32767\nflag[0] = 1\nfor i in range(1, s):\n    flag[i] = 1\n    for j in range(i, i + 6):\n        if flag[j]:\n            flag[i] = 1\n            break\n    print(\",\".join([\"6\" if i == j else \"9\" for i, j in enumerate(flag[i])]))"}, "805": {"problem_id": 4805, "answer": "# cook your dish here\na = input().strip()\ns =''.join(a)\nif s in a:\n print(\"yes\")\nelse:\n print(\"no\")"}, "806": {"problem_id": 4806, "answer": "s = input()\nl = []\nfor i in range(len(s)):\n l.append(s[i])\nprint(''.join(l))"}, "807": {"problem_id": 4807, "answer": "def main():\n    from sys import stdin, stdout\n    input = stdin.readline\n\n    X, Y, N = map(int, input().split())\n    print(X * Y, end=\"\")\n    for _ in range(N - 2):\n        print(X * Y, end=\"\")\n        if _ % X == 0 and _ % Y == 0:\n            print(\"Fizz\", end=\"\")\n        elif _ % X == 0 \\\n           or _ % Y == 0:\n            print(\"Buzz\", end=\"\")\n        else:\n            print(\"FizzBuzz\", end=\"\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "808": {"problem_id": 4808, "answer": "import sys\ninput = sys.stdin.readline\n\nn,d=list(map(int,input().split()))\nL=list(map(int,input().split()))\ns=0\nfor i in range(n):\n    if L[i]>d[i]:\n        s+=1\n    else:\n        L.pop(i)\nif s==0:\n    print(\"It hadn't snowed this early in %s years!\" % n)\nelse:\n    print(\"It had never snowed this early!\")\n"}, "809": {"problem_id": 4809, "answer": "import math\ns=int(input())\nn=int(input())\nif s>n:\n    print(0)\nelse:\n    a=math.floor(s/n)\n    b=math.ceil(s/n)\n    if a==b:\n        print(a+1)\n    elif a>b:\n        print(a-1)\n    else:\n        print(a)\n"}, "810": {"problem_id": 4810, "answer": "import sys\ndef read():\n\treturn sys.stdin.readline().strip()\ndef write(s):\n\tsys.stdout.write(s+'\\n')\nm=int(read())\nn=m*m\narr=[]\nfor i in range(n):\n\tarr.append(chr(ord('a')+i%2))\narr.sort()\nc=0\nfor i in range(n):\n\tfor j in range(len(arr[i])):\n\t\tc+=arr[i][j]\nprint(c)"}, "811": {"problem_id": 4811, "answer": "k = int(input())\nprint(2, min(k//2, k//(2**(pow(2, k-1) + 1))))"}, "812": {"problem_id": 4812, "answer": "from collections import Counter\ndef __starting_point():\n    s = input()\n    cnt = Counter(s.lower())\n    print('NO' if cnt['r' not in list(cnt.keys())] else 'YES')\n__starting_point()"}, "813": {"problem_id": 4813, "answer": "def main():\n s = input()\n a = input()\n d = {c:i for i,c in enumerate(a)}\n n = len(s)\n if n == 1:\n  print(\"WIN\")\n elif n == 2:\n  for i in range(1,27):\n   if s[i] not in d:\n    d[s[i]] = i\n   else:\n    break\n  print(\"LOSE\")\n else:\n  for i in range(1,27):\n   if s[i] not in d:\n    d[s[i]] = i\n   else:\n    break\n  word = s[:n]\n  word = \"\".join(d[ord(c) - ord(\"A\")] for c in word)\n  win = False\n  for i in range(len(word)):\n   if word[i] not in d:\n    d[word[i]] = i\n   else:\n    win = True\n    break\n  if win:\n   print(\"WIN\")\n  else:\n   print(\"LOSE\")\nmain()"}, "814": {"problem_id": 4814, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\ndef main():\n    n = int(input())\n    line = [x for x in input().split()]\n    if len(line) == 1:\n        print(\"DECREASING\")\n    elif len(line) == 2:\n        print(\"NEITHER\")\n    else:\n        l = []\n        for i in range(1, 13):\n            l.append(line[i])\n        if sorted(l) == line:\n            print(\"INCREASING\")\n        else:\n            print(\"DECREASING\")\n"}, "815": {"problem_id": 4815, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nprint2 = stdout.write\ndef winner(score):\n if score<=10:\n  return \"No winner!\"\n elif score>=10 and score<=19:\n  return \"Win!\"\n elif score>=19 and score<=29:\n  return \"Win!\"\n elif score>=29 and score<=39:\n  return \"Win!\"\n else:\n  return \"Loser!\"\n n=int(input())\n p=int(input())\n m=int(input())\n for i in range(n):\n  name=input()\n  score=int(input())\n  if name[0]!=name[1]:\n   print(winner(score))\n  else:\n   print(name[2]+\" wins!\")\n"}, "816": {"problem_id": 4816, "answer": "import math\ndef f(x):\n return abs(x)**2\ndef g(x):\n return math.sqrt(f(x)**2 + g(x)**2)\ndef h(x):\n return min(f(x), g(x))\ns = input()\na, b, c, d, e, f, g, h = 0, 0, 0, 0, 0, 0, 0, 0, 0\nfor i in range(len(s)):\n x = s[i]\n if x >= a:\n  a = x\n elif x >= b:\n  b = x\n elif x >= c:\n  c = x\n elif x >= d:\n  d = x\n elif x >= e:\n  e = x\n elif x >= f:\n  f = x\n elif x >= g:\n  g = x\n elif x >= h:\n  h = x\n else:\n  h = h\nprint(h)"}, "817": {"problem_id": 4817, "answer": "# cook your dish here\nn = int(input())\nprint(0) if n == 0 else print(\"\".join(reversed(str(n))))"}, "818": {"problem_id": 4818, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\nn,m = li()\nt = li2()\nl = list(map(int,input().rstrip('\\n')))\nfor i in range(m):t.append(min(l))\nprint(sum(1 for _ in range(val())if t[0] <= _ <= t[1]))"}, "819": {"problem_id": 4819, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict as dd\nMOD = 1000000007\nfact = dd(int)\nfor i in range(10):\n  fact.add(i)\n  fact.add(i<<2)\n  fact.add(i<<1)\n  fact.add(i<<4)\n  fact.add(i<<3)\n  fact.add(i<<2)\n  fact.add(i<<0)\nans = 0\nfor i in range(10):\n  ans += fact[i]\nprint(ans)"}, "820": {"problem_id": 4820, "answer": "import math\ndef compress(s):\n    n = len(s)\n    if n==0:\n        return 0\n    d = math.floor(math.log(n,2))\n    ans = 1.0\n    for i in range(1,d+1):\n        ans *= n//i\n        ans += pow(2,i)\n    return ans\n\nN,b = map(int,input().split())\ncompress(list(map(int,input().split())))\n"}, "821": {"problem_id": 4821, "answer": "s=input()\nif s.count('P')==2:\n    print('GRESKA')\nelse:\n    a=s.count('H')\n    b=s.count('P')\n    c=s.count('H')\n    d=s.count('T')\n    e=a+b+c+d\n    print(e)"}, "822": {"problem_id": 4822, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nR, S, K = list(map(int, input().split()))\nans = 0\nfor i in range(R):\n    ans += abs(S - i)\nprint(ans)"}, "823": {"problem_id": 4823, "answer": "s = input()\na = s.split(' ')\na[0] = a[0]*26 + 'A'\na[1] = a[1]*26 + 'T'\na[2] = a[2]*26 + 'J'\na[3] = a[3]*26 + 'Q'\na[4] = a[4]*26 + 'K'\na[5] = a[5]*26 + 'D'\ns = int(s)\nprint(a[s-1])"}, "824": {"problem_id": 4824, "answer": "from sys import stdin,stdout\nfrom math import gcd, ceil, sqrt, log2, factorial, fmod, pi\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nmod = pow(2,97) + 7\nmod2 = 998244353\ndef inp(): return stdin.readline().strip()\ndef out(var, end=\"\\n\"): stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): stdout.write(' '.join(map(str, var)) + end)\ndef lmp(): return list(mp())\ndef mp(): return map(int, inp().split())\ndef smp(): return map(str, inp().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\ndef remadd(x, y): return 1 if x%y else 0\ndef ceil(a,b): return (a+b-1)//b\n\ndef isprime(x):\n    if x<=1: return False\n    if x in (2, 3): return True\n    if x%2 == 0: return False\n    for i in range(3, int(sqrt(x))+1, 2):\n        if x%i == 0: return False\n    return True\n\nC, P = mp()\narr = lmp()\narr = [int(i) for i in arr]\nfor i in range(P):\n    print(arr[i])\n"}, "825": {"problem_id": 4825, "answer": "import re\nt=input()\nfor i in range(len(t)):\n    t=re.sub(r'[a-zA-Z]',lambda x:chr(97+ord(x.group())),t)\n    t=re.sub(r'\\[|\\]|\\[/|\\]|\\D',lambda x:chr(97+ord(x.group())),t)\n    t=re.sub(r'[a-zA-Z][-]?[a-zA-Z]*',lambda x:chr(97+ord(x.group())),t)\n    t=re.sub(r'[a-zA-Z]',lambda x:chr(97+ord(x.group())),t)\n    t=re.sub(r'[a-zA-Z][-]*',lambda x:chr(97+ord(x.group())),t)\n    t=re.sub(r'[a-zA-Z]',lambda x:chr(97+ord(x.group())),t)\n    print(t)\n"}, "826": {"problem_id": 4826, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nans = \"Alice\"\nsys.setrecursionlimit(10**9)\n\ndef stone(n, a):\n if n == 0:\n  return 0\n if n%2 == 0:\n  return stone(n>>1, a) + stone(n>>(2&1), a^2)\n else:\n  return stone(n>>1, a^2)\n\ndef stone2(n, a):\n if n == 0:\n  return 0\n if n%2 == 1:\n  return stone2(n>>1, a) + stone2(n>>(2&1), a^2)\n else:\n  return stone2(n>>1, a^2)\n\nprint(ans)\n"}, "827": {"problem_id": 4827, "answer": ""}, "828": {"problem_id": 4828, "answer": "m = input().strip()\nnop = []\nfor i in range(len(m)):\n    if m[i] == 'NOP':\n        nop.append(i)\n    else:\n        nop.append(len(m))\n\nprint(min(len(nop), 4))"}, "829": {"problem_id": 4829, "answer": "import sys\r\nimport math\r\nimport bisect\r\nfrom collections import defaultdict, deque\r\ndef data(): return sys.stdin.readline().strip()\r\ndef makedict(cls): return dict(cls)\r\ndef makedaemap(cls): return list(makedict(cls.__dict__))\r\ndef solve():\r\n    a, b = map(int, data().split())\r\n    if a == b:\r\n        print(\"Not a moose\")\r\n        return\r\n    t = 0\r\n    ans = 0\r\n    for i in range(1, 21):\r\n        if t % 2!=0:\r\n            t //= 2\r\n            ans += i\r\n        else:\r\n            t //= 2\r\n            ans += i*i\r\n    print(\"Even {}\".format(ans))\r\n    return\r\n\r\n###############################################################################\r\ninput = lambda:int(input())\r\nsolve()"}, "830": {"problem_id": 4830, "answer": "from collections import defaultdict as dd\ndef __starting_point():\n n = int(input())\n d = dd(int)\n for i in range(n):\n  d[int(input())] += 1\n print(sum(d.values()))\n__starting_point()"}, "831": {"problem_id": 4831, "answer": "import math\ndef read():\n return int(input())\ndef readline():\n return input().strip()\nt=read()\nwhile t:\n t=t-math.ceil(t/3)\n print(''.join(list(reversed(list(read()))))+'\\n')\n"}, "832": {"problem_id": 4832, "answer": "import math\ndef area(r):\n if r<=0:\n  return 0\n elif r>=2*math.pi:\n  return 2*math.pi\n else:\n  return round(math.pi*2/r,0)\nr=int(input())\nprint(area(r))\n"}, "833": {"problem_id": 4833, "answer": "import sys\r\ninput = sys.stdin.readline\r\n\r\nn = int(input())\r\nl = list(map(int, input().split()))\r\nprint(sum(l))"}, "834": {"problem_id": 4834, "answer": "from sys import stdin,stdout\ndef get_ints():return map(int,stdin.readline().strip().split())\ndef get_list():return list(get_ints())\ndef get_tuple():return tuple(get_ints())\ndef get_std_input():return stdin.readline().strip()\ndef input():return get_std_input()\ndef print_s(s):stdout.write(s+'\\n')\n\nn = int(input())\nalgorithms = get_list()\nfor i in range(1,n):\n    s = get_tuple()\n    s.append(algorithms[i-1])\n    stdout.write(' '.join([str(i) for i in s]))"}, "835": {"problem_id": 4835, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nn,m,k=list(map(int,input().split()))\nA=[[0 for i in range(n+m)] for j in range(3)]\nfor i in range(3):\n A[i].append(1)\nA[0][0]=2\nA[1][0]=2\nA[2][0]=2\nfor i in range(3):\n for j in range(m):\n  if A[i][j]==1:\n   A[i][j]=2\n  elif A[i][j]==2:\n   A[i][j]=1\nans=0\nfor i in range(3):\n for j in range(m):\n  if A[i][j]==1:\n   ans+=2**k\n  elif A[i][j]==2:\n   ans+=2**k\n  ans+=(2**k-1)\nprint(ans)\n"}, "836": {"problem_id": 4836, "answer": "import sys\nn, c = map(int, input().split())\na = list(map(int, input().split()))\nd = []\nfor i in range(1, 1000):\n    if a[i] <= c:\n        d.append(a[i])\nprint(max(d))"}, "837": {"problem_id": 4837, "answer": "import sys\nreadline = sys.stdin.readline\nr, p, s = list(map(int, readline().split()))\nn = int(readline())\nans = [0]*n\nfor i in range(n):\n    s1 = list(map(int, readline().split()))\n    p1 = list(map(int, readline().split()))\n    r1 = r[i]\n    if r1 == 'R':\n        ans[i] = 2\n    elif r1 == 'S':\n        ans[i] = 1\n    elif r1 == 'P':\n        ans[i] = 2\nprint(' '.join(map(str, ans)))\nprint(' '.join(map(str, [max(ans) for ans in list(enumerate(['R', 'S', 'P']))])))\n"}, "838": {"problem_id": 4838, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\nwhile n:\n t=int(input())\n if t%2==0:\n  print(t//10)\n else:\n  print(t+1)\n n=n-1"}, "839": {"problem_id": 4839, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * 10000001\nfor i in range(1, n):\n    b[i] += a[i]\n\nc = 0\nans = float('inf')\nfor i in range(1, n):\n    ans = max(ans, b[i] - b[i - 1])\n    c += b[i]\n\nif c < 0.000000000000000:\n    print('impossible')\nelse:\n    print(ans)\n"}, "840": {"problem_id": 4840, "answer": "a,b=input().split()\na=int(a)\nb=int(b)\nl=list(map(int,input().split()))\nif a>b:\n print(\"Emmas\")\nelse:\n print(\"Tie\")"}, "841": {"problem_id": 4841, "answer": "n = int(input())\na = list(input().split())\nif a[0] =='mumble':\n    print('makes sense')\nelse:\n    print('something is fishy')"}, "842": {"problem_id": 4842, "answer": "import numpy as np\nn = int(input())\na = np.array([-2000000, 2000000])\nv = [int(i) for i in input().split()]\nfor i in range(1, n):\n    a = a + v[i]*v[i-1]\nprint(a.deg)\nprint(a)"}, "843": {"problem_id": 4843, "answer": "n = int(input())\nans = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    ans.append([x, y])\nprint([\"CORRECT\", \"INCORRECT\"][int(ans[0][0] < ans[1][0])])"}, "844": {"problem_id": 4844, "answer": "import sys\ndef get_array(): return [int(i) for i in sys.stdin.readline().split()]\ndef get_ints(): return map(int, sys.stdin.readline().split())\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\ndef main():\n    n = II()\n    ds = [0]*n\n    for i in range(1,n):\n        ds[i] = get_array()\n    print(*ds)\nmain()"}, "845": {"problem_id": 4845, "answer": "import datetime\nd, m = map(int, input().split())\nd -= 1\nm -= 1\ndt = datetime.date(2009, d, m).weekday()\nprint(dt.strftime(\"%s\"))"}, "846": {"problem_id": 4846, "answer": "l=int(input())\nd=int(input())\nx=int(input())\ns=0\nfor i in range(1,d):\n    s+=int(str(i))\n    if(s>x):\n        s-=x\n    elif(s<x):\n        s+=x\n    print(s)"}, "847": {"problem_id": 4847, "answer": "import numpy as np\nn = int(input())\napple = []\nfor i in range(n):\n apple.append(list(map(int,input().split())))\napple.sort()\nprint(np.sum(np.array(apple)*np.pi/180.0))\n"}, "848": {"problem_id": 4848, "answer": "import math\ndef is_square(n):\n if (math.floor(math.sqrt(n))==math.sqrt(n)):\n  return True\n else:\n  return False\nn=int(input())\nans=3\nfor i in range(1,n+1):\n if is_square(i):\n  ans=i\n elif is_square(i*i):\n  ans=i*i\n elif is_square(i*i*i):\n  ans=i*i*i\n print(ans)"}, "849": {"problem_id": 4849, "answer": "import sys\nsys.setrecursionlimit(10 ** 6)\n\ndef __starting_point():\n s = input().strip()\n n = len(s)\n d = {}\n for i in range(n):\n  d[s[i]] = i + 1\n ans = []\n for i in d:\n  if i not in d:\n   ans.append(i)\n print(*ans)\n\n__starting_point()"}, "850": {"problem_id": 4850, "answer": "import math\ndef dist(a, b):\n    return math.sqrt((a[0]-b[0])**2+(a[1]-b[1])**2)\ndef f(a):\n    return a[0]*a[1]\ndef g(a):\n    return a[0]/a[1]\ndef h(a):\n    return a[0]/a[1]/a[2]\nn = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\ns = dist(a,0)\nprint(\"%.12f\" % s)\n"}, "851": {"problem_id": 4851, "answer": "n = int(input())\r\nans = 0\r\nfor i in range(1,n+1):\r\n  ans+=i\r\n  if ans%i==0:\r\n    break\r\nprint(ans)"}, "852": {"problem_id": 4852, "answer": "import random\ninput = list(map(int, input().strip().split()))\ns = 0\nfor i in range(len(input())):\n    if input()[i]=='+':\n        s+=1\nprint(s)"}, "853": {"problem_id": 4853, "answer": "import sys\ninput = sys.stdin.readline\n\nclass Poly():\n    def __init__(self, n, coef=0):\n        self.n = n\n        self.coefs = [coef] * (n + 1)\n        self.p = [0] * (n + 1)\n        for i in range(n):\n            self.p[i + 1] = self.p[i] + self.coefs[i]\n        self.doubling = 0\n\n    def compute(self, i):\n        x = self.p[i]\n        self.doubling += (x!= 0)\n        return x\n\n    def __getitem__(self, key):\n        return self.p[key]\n\n    def __setitem__(self, key, value):\n        self.p[key] = value\n\ndef main():\n    n = int(input())\n    coef = [0] * (n + 1)\n    for i in range(1, n + 1):\n        coef[i] = coef[i - 1] + i\n\n    poly = Poly(n)\n    for i in range(n - 1):\n        poly.compute(i + 1)\n        poly.calculate(i)"}, "854": {"problem_id": 4854, "answer": "import sys\ninput = sys.stdin.readline\n\nn,c=list(map(int,input().split()))\ns=list(map(int,input().split()))\ns.sort()\nfor i in s:\n    print(i,end=\" \")\nprint()\n"}, "855": {"problem_id": 4855, "answer": "import sys\nimport math\ndef input(): return sys.stdin.readline().strip()\ndef iinput(): return int(input())\ndef finput(): return list(map(int, input().split()))\ndef isinstance(a, type):\n return type(a) == iinput()\ndef II(): return int(input())\ndef IINonlin(n): return II()(int(n))\ndef MI(a, b): return pow(a, b) - 2\ndef LI(a, b): return pow(a, b) // math.gcd(pow(a, b), 1)\ndef LLI(a, b): return pow(a, b) // math.gcd(pow(a, b), -1)\ndef LI2(a, b): return pow(a, b) // math.gcd(pow(a, b), 2)\ndef LI3(a, b): return pow(a, b) // math.gcd(pow(a, b), 3)\ndef LI4(a, b): return pow(a, b) // math.gcd(pow(a, b), 4)\ndef LI5(a, b): return pow(a, b) // math.gcd(pow(a, b), 5)\ndef LI6(a, b): return pow(a, b) // math.gcd(pow(a, b), 6)\ndef LI7(a, b): return pow(a, b) // math.gcd(pow(a, b), 7)\ndef LI8(a, b): return pow(a, b) // math.gcd(pow(a, b), 8)\ndef LI9(a, b): return pow(a, b) // math.gcd(pow(a, b), 9)\ndef LI10(a, b): return pow(a, b) // math.gcd(pow(a, b), 10)\ndef LI11(a, b): return pow(a, b) // math.gcd(pow(a, b), 11)\ndef LI12(a, b): return pow(a, b) // math.gcd(pow(a, b), 12)\ndef LI13(a, b): return pow(a, b) // math.gcd(pow(a, b), 13)\ndef LI14(a, b): return pow(a, b) // math.gcd(pow(a, b), 14)\ndef LI15(a, b): return pow(a, b) // math.gcd(pow(a, b), 15)\ndef LI16(a, b): return pow(a, b) // math.gcd(pow(a, b), 16)\ndef LI17(a, b): return pow(a, b) // math.gcd(pow(a, b), 17)\ndef LI18(a, b): return pow(a, b) // math.gcd(pow(a, b), 18)\ndef LI19(a, b): return pow(a, b) // math.gcd(pow(a, b), 19)\ndef LI20(a, b): return pow(a, b) // math.gcd(pow(a, b), 20)\ndef LI21(a, b): return pow(a, b) // math.gcd(pow(a, b), 21)\ndef LI22(a, b): return pow(a, b) // math.gcd(pow(a, b), 22)\ndef LI23(a, b): return pow(a, b) // math.gcd(pow(a, b), 23)\ndef LI24(a, b): return pow(a, b) // math.gcd(pow(a, b), 24)\ndef LI25(a, b): return pow(a, b) // math.gcd(pow(a, b), 25)\ndef LI26(a, b): return pow(a, b) // math.gcd(pow(a, b), 26)\ndef LI27(a, b): return pow(a, b) // math.gcd(pow(a, b), 27)\ndef LI28(a, b): return pow(a, b) // math.gcd(pow(a, b), 28)\ndef LI29(a, b): return pow(a, b)"}, "856": {"problem_id": 4856, "answer": "a=input().split()\na1=a[0]\na2=a[1]\na.reverse()\nprint(int(a1) + int(a2))"}, "857": {"problem_id": 4857, "answer": "a=input().split()\nl=int(a[0])\nw=int(a[1])\nif(l>26):\n print(\"Programming\")\nelif(26!=l and w>26):\n print(\"contest\")\nelse:\n print(\"invalid\")"}, "858": {"problem_id": 4858, "answer": ""}, "859": {"problem_id": 4859, "answer": "import sys\ndef I(): return int(sys.stdin.readline())\ndef MI(): return map(int,sys.stdin.readline().split())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef LI2(): return list(map(int,sys.stdin.readline().split(None)))\ndef LI3(): return list(map(int,sys.stdin.readline().split([])))\ndef LLI(rows_number): return [list(map(int,row)) for row in range(rows_number)]\ndef SR(rows_number): return [row[0] for row in range(rows_number)]\ndef LS(rows_number): return [str(row) for row in range(rows_number)]\ndef IR(rows_number): return [int(row) for row in range(rows_number)]\ndef SRL(rows_number): return [reversed(row) for row in range(rows_number)]\ndef SRL(rows_number): return [reversed(row) for row in range(rows_number)]\nsys.setrecursionlimit(3000)\nnum_of_legs = LI()\nnum_of_animals = LI()\nanswers = [0]*num_of_legs\nfor b,d,c,l in num_of_legs:\n    answers[b] += 1\n    answers[c] += 1\n    answers[d] += 1\n    answers[l] += 1\nfor a,b,c,d in num_of_animals:\n    answers[a] += answers[b]*answers[c]\n    answers[a] += answers[d]*answers[c]\n    answers[a] += answers[d]*answers[b]\nprint(*answers, sep=' ')"}, "860": {"problem_id": 4860, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nn = int(input())\nfor _ in range(n):\n    a = list(map(int, input().split()))\n    if a[0]!= a[-1]:\n        print(\"{}\".format(a[0]))\n    else:\n        print(\"{}\".format(a[1:]))"}, "861": {"problem_id": 4861, "answer": "import math\nn = int(input())\np = int(input())\ns = float(input())\nv = float(input())\ntour = []\nfor i in range(1, n+1):\n    tour.append(i*s/v)\n    v /= 10\ndist = math.sqrt(2*s)\ndist1 = dist*dist\n#print(dist1)\nfor i in range(1, n+1):\n    dist1 /= i\n    dist1 *= math.log(i/2)\nprint(\"%.9f\" % (dist1 + min(dist, tour)))"}, "862": {"problem_id": 4862, "answer": "n=int(input())\nprint(n//2 + (n-1)//2)"}, "863": {"problem_id": 4863, "answer": "n=int(input())\nfor i in range(n):\n a=input()\n if a[0]=='A':\n  print(4)\n else:\n  print(1)"}, "864": {"problem_id": 4864, "answer": "import numpy as np\nR,C,ZR,ZC=list(map(int,input().split()))\nl=[]\nfor i in range(R*C):\n    l.append(input())\nl.sort()\nm=np.zeros((R*C,5))\nfor i in range(R*C):\n    m[i]=l[i][ZR][i]\nfor i in range(C*ZC):\n    m[i]=l[i][ZC][i]\nprint(''.join(m))\n"}, "865": {"problem_id": 4865, "answer": "# cook your dish here\nt=int(input())\nfor i in range(t):\n    h,m=input().split()\n    h=int(h)\n    m=int(m)\n    h=h+60-h*12\n    m=m+60-m*12\n    print('{:02}  {} {}'.format(h,m))"}, "866": {"problem_id": 4866, "answer": "d = {'JAN' : 'OCT', 'FEB' : 'OCT', 'MAR' : 'OCT', 'APR' : 'OCT', 'MAY' : 'OCT', 'JUL' : 'OCT', 'AUG' : 'OCT', 'SEP' : 'OCT', 'NOV' : 'OCT', 'DEC' : 'OCT'}\ndate = input().strip()\n\nif date in d:\n    print('yup')\nelse:\n    print('nope')"}, "867": {"problem_id": 4867, "answer": "from sys import stdin,stdout\nfrom math import floor,sqrt,gcd,log2,ceil,factorial,pow\nfrom collections import deque,defaultdict,Counter\nfrom heapq import merge,heappop,heappush,nsmallest\nfrom bisect import bisect_left,bisect,bisect_right,insort,insort_left,insort_right\nfrom itertools import permutations,combinations\nfrom copy import deepcopy\nfrom time import perf_counter\nfrom fractions import Fraction\nfrom datetime import datetime,timedelta\nfrom re import sub\nfrom random import randrange,shuffle\ninput = stdin.readline\nPerfCounter = perf_counter()\nM = list(map(int,input().split()))\nN = M[0]\nS = [0]*N\nfor i in range(N):\n S[i] = int(input())\nM[0] = 1\nN = M[1]\nans = \"\".join(map(str,input().split()))\nprint(ans)"}, "868": {"problem_id": 4868, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ninp = lambda: list(map(int,sys.stdin.readline().rstrip(\"\\r\\n\").split()))\nt = inp()\na,b,c,d,e,f,g,h,a1,b1,c1,d1,f1,g1,h1,a2,b2,c2,d2,f2,g2,h2,a3,b3,c3,d3,f3,g3,h3,a4,b4,c4,d4,f4,g4,h4,a5,b5,c5,d5,f5,g5,h5,a6,b6,c6,d6,f6,g6,h6 = t()\ngcd = lambda: a%b else gcd\nprint(*gcd(a,b),sep=\"\")"}, "869": {"problem_id": 4869, "answer": "a,b=map(float,input().split())\nprint(\"Diablo is happy!\") if a*b<1.0000004 else print(\"Need more materials!\")"}, "870": {"problem_id": 4870, "answer": "def main():\n    f, s, g, u, d = list(map(int, input().split()))\n    up = s + g\n    down = min(u, d)\n    print(down, \"use the stairs\")\n    \nmain()\n"}, "871": {"problem_id": 4871, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nans = []\nfor i in range(n):\n    x = int(input())\n    ans.append(x)\nprint(average(ans))\nprint(\"%.6f\" % (float(average(ans)) / len(ans)))"}, "872": {"problem_id": 4872, "answer": "import bisect\ninput = lambda: list(map(int, input().strip().split()))\nn = int(input())\na = list(map(int, input().strip().split()))\nb = [0] * 365\nfor i in range(1, n):\n    b[i] += a[i - 1] + (i - 1) * (i > 2)\nprint(b[-1] // 2)"}, "873": {"problem_id": 4873, "answer": "w,h = list(map(int,input().split()))\nans = []\nfor i in range(h):\n    x,y = input().split()\n    ans.append(x)\n    if x == 'P':\n        if y > 0:\n            ans[y-1] += 'G'\n        else:\n            ans[y-1] += 'P'\n    elif x == 'T':\n        if y > 0:\n            ans[y-1] += 'T'\n        else:\n            ans[y-1] += '#'\n    else:\n        if y > 0:\n            ans[y-1] += 'G'\n        else:\n            ans[y-1] += '#'\nprint('\\n'.join(ans))"}, "874": {"problem_id": 4874, "answer": "import numpy as np\nn,m=list(map(int,input().split()))\narr=np.zeros((n,m),dtype=int)\nfor i in range(n):\n    arr[i]=list(map(int,input().split()))\nfor i in range(m):\n    print(arr[i][0])\n"}, "875": {"problem_id": 4875, "answer": "import re\ndef trans(s):\n    s=s.split()\n    trans=''\n    for i in range(0,len(s)):\n        if s[i] in ['a','e','i','o','u','y']:\n            trans+=s[i]\n        elif s[i] in ['A','E','I','O','U','Y']:\n            trans+=s[i]\n        else:\n            trans+=s[i]\n    return trans\n    \nfor _ in range(int(input())):\n    s=input()\n    trans=trans(s)\n    print(trans)"}, "876": {"problem_id": 4876, "answer": "n = int(input())\nl = list(map(str, input().split()))\nsoup = '\\n'.join(l[0])\npunsch = '\\n'.join(l[1])\nans = 'Anywhere is fine I guess'\nfor i in range(2, n):\n if soup.startswith(punsch):\n  ans = i\n  break\n elif punsch.startswith(soup):\n  ans = i\n  break\n print(ans)"}, "877": {"problem_id": 4877, "answer": "a,b,h=map(int,input().split())\ns=a+b\nprint(s//h)"}, "878": {"problem_id": 4878, "answer": "import math\nr1,s=map(int,input().split())\nprint(s//2)"}, "879": {"problem_id": 4879, "answer": "s = input().split(' ')\ns = [int(x) for x in s]\nprint('Yes' if s.count(1) == 1 else 'No')"}, "880": {"problem_id": 4880, "answer": "import string\nn, m = map(int, input().split())\nkey = list(map(str, input().split()))\nkey = [key[i] for i in range(26)]\ns = input()\ncipher = input()\nkey.append(26)\nprint(''.join(key))"}, "881": {"problem_id": 4881, "answer": "n = int(input())\nif n % 2 == 0:\n    print(\"Even\")\nelse:\n    print(\"Odd\")"}, "882": {"problem_id": 4882, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\nread = stdin.read\nprint = stdout.write\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(int(input()))\nprint(' '.join(map(str, ans)))"}, "883": {"problem_id": 4883, "answer": "import collections\nm, n = list(map(int, input().split()))\na = collections.defaultdict(list)\nfor i in range(m):\n    a[input().find(':')+1].append(list(map(int, input().split())))\nt =''\nfor i in range(n):\n    t +=''\ns =''\nfor i in range(m):\n    s +=''\nans = []\nfor i in range(len(t)):\n    ans.append(' '.join(map(str, t[i])))\nfor i in range(len(ans)):\n    if ans[i] == t[i]:\n        print('yes')\n    else:\n        print('no')\n"}, "884": {"problem_id": 4884, "answer": "n, p = map(int, input().split())\na = n*(p+1)\nb = []\nfor i in range(1, n+1):\n b.append(input())\na//=5\nc = 0\nfor i in range(n):\n for j in range(5):\n  if i>j:\n   c+=a\nprint(c)"}, "885": {"problem_id": 4885, "answer": ""}, "886": {"problem_id": 4886, "answer": "import sys\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef MI():\n\treturn map(int,sys.stdin.readline().split())\n\ndef SI():\n\treturn sys.stdin.readline().rstrip()\n\ndef main():\n\tn,k = MI()\n\tif n%2!=0:\n\t\tprint('You will become a flying monkey!')\n\telse:\n\t\tp = n//2\n\t\tans = 0\n\t\tfor i in range(k):\n\t\t\tif n%i==0:\n\t\t\t\tans = 1\n\t\t\t\tp = n//i\n\t\t\t\tbreak\n\t\tprint(ans)\n\t\tif p==1:\n\t\t\tprint('You will become a flying monkey!')\n\t\telse:\n\t\t\tprint('\\nYour wish is granted!')\n\nmain()\n"}, "887": {"problem_id": 4887, "answer": "a=int(input())\nprint(a*a*a)"}, "888": {"problem_id": 4888, "answer": "import sys\ninput = sys.stdin.readline\n\nn, t = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ndef isPossible(s, t):\n    return sum(s <= t) and (s + t) % 2 == 0\n\ncompleted = [0] * (n + 1)\nfor i in range(1, n + 1):\n    completed[i] = isPossible(tasks[i - 1], tasks[i])\n\nprint(len(completed))"}, "889": {"problem_id": 4889, "answer": "import math\ndef __starting_point():\n n = int(input())\n a = []\n for i in range(n):\n  a.append(int(input()))\n a.sort()\n print(math.ceil(sum(a) / (len(a) - 1)))\n__starting_point()"}, "890": {"problem_id": 4890, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m, s, d = map(int, readline().split())\nl = list(map(int, readline().split()))\na = [0]*n\nb = [0]*n\nfor i in range(n):\n    a[i] += l[i]\nfor i in range(m):\n    b[i] += a[l[i]-1]\nans = [0]*n\ncnt = 0\nfor i in range(n):\n    if b[i] < s:\n        ans[i] = cnt+1\n        cnt += b[i]\n    else:\n        ans[i] = max(ans[i-1], cnt)\nprint(' '.join(map(str, ans)))"}, "891": {"problem_id": 4891, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    k, q, r, b, kr, qr, bb, kn, np = map(int, input().split())\n    print(0, \" \".join(map(str, (qr, bb, kr, q, b, kn, np))))\n\nmain()"}, "892": {"problem_id": 4892, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort as is, bisect as bisect_\nfrom collections import defaultdict as dd, deque as dq\nimport math\nfrom operator import itemgetter\nfrom functools import reduce,cmp_to_key,lru_cache as lc\nimport sys\ninput = sys.stdin.readline\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__,([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\ndef li4():return [int(i) for i in input().rstrip('\\n')]\ndef li5():return [int(i) for i in input().rstrip('\\n')]\ndef li6():return [int(i) for i in input().rstrip('\\n')]\ndef li7():return [int(i) for i in input().rstrip('\\n')]\ndef li8():return [int(i) for i in input().rstrip('\\n')]\ndef li9():return [int(i) for i in input().rstrip('\\n')]\ndef lcm(a,b):return (a*b)//gcd(a,b)\ndef read_till(s, end=\"\\n\") as str:return input(s)\ndef read_line(s) as str:return input(s)\ndef read_map(s) as list:return list(map(int, input().split()))\ndef read_tuplet(start, end, tuplet=10) as [[int]]:return [[i for i in input(end + start - startt +'' + tuplet +'' +'' + str(tuplet))] for startt in range(start, end + start - startt +'' + str(tuplet) +'' + '\\n')]\ndef read_tuplet(start, end, tuplet=10) as [[int]]:\n r = []\n for i in range(start, end):\n  r.append(li())\n return r\ndef rec(arr, n):\n ans = 0\n for i in arr:\n  ans += (n * (i[1] - i[0]))\n return ans\ndef cnd(n):return n & (-n)"}, "893": {"problem_id": 4893, "answer": "from collections import deque\nn,p=input().split()\nn,p=int(n),int(p)\nl=list(map(int,input().split()))\nl.sort()\ndist=[0]*n\nfor i in range(n):\n dist[i]=l[i]\n q=deque([i])\n while q:\n  s=q.pop()\n  dist[s-1]+=(dist[s])*(10**7)\n  q.extend(s-1)\n print(min(dist[p-1],dist[p]))"}, "894": {"problem_id": 4894, "answer": ""}, "895": {"problem_id": 4895, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print('possible') if a[0]*3 + a[1] + a[2] > 2**60 else print('impossible')\n\nmain()"}, "896": {"problem_id": 4896, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\n\ndef main():\n    n = int(input())\n    li = [0]*(n+1)\n    li[0] = input().rstrip().split(' ')\n    for i in range(1, n+1):\n        li[i] = int(li[i][1])\n        li[i] //= 2\n    print(li[n])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "897": {"problem_id": 4897, "answer": "import math\ndef relat(s1,s2):\n m=math.ceil(s1/100)\n return''.join(f'{m}' for m in list(map(str,s1)))\n \nn=int(input())\ns1=[]\nfor i in range(n):\n s1.append(input().split())\n s1.sort()\n \ns2=[]\nfor i in range(n-1,-1,-1):\n s2.append(input().split())\n s2.sort()\n \ns1.reverse()\ns2.reverse()\n \nprint(relat(s1,s2))\n \n"}, "898": {"problem_id": 4898, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import deque\nimport math\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n\ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input()\ndef val():return int(input())\ndef li2():return [int(i) for i in input().rstrip('\\n')]\ndef val2():return input()\ndef lis():return list(input().rstrip('\\n'))\ndef ls():return list(input())\ndef val3():return int(input())\ndef li3():return [int(i) for i in input().rstrip('\\n')]\nMOD = 10**9+7\nINF = float('INF')\n\n\n\nt = val()\nans = 0\nfor i in range(t):\n    L,U = li()\n    if L<U:\n        ans+=1\n    elif L==U:\n        ans+=2\nprint(ans)"}, "899": {"problem_id": 4899, "answer": "s = input()\nn = len(s)\nfor i in range(1,n):\n    s = s.replace('ee', 'e'*2)\n    s = s.replace('eey', 'e'*2*n)\n    s = s.replace('hee', 'h'*2*n)\n    s = s.replace('heey', 'h'*2*n*2)\nprint(s)"}, "900": {"problem_id": 4900, "answer": "from collections import deque\nn = int(input())\na = []\nfor i in range(n):\n a.append(list(map(int, input().split())))\ns = set()\ns.add(0)\nm = {}\nfor i in range(n):\n m[a[i][1]] = a[i][0]\nq = deque([])\nq.append(a[i][0])\nwhile q:\n k = q.popleft()\n s.add(k)\n for i in m.get(k, None):\n  if i not in s:\n   q.append(i)\nprint(*s, sep='\\n')\n"}, "901": {"problem_id": 4901, "answer": "import sys\nreadline = sys.stdin.readline\n\nM = list(readline().strip())\nM = [i for i in M]\ns = len(M)//2\nB = \"ABCD\"*s\nA = \"ZRKB\"*s\nC = \"BKSC\"*s\n\ndef main():\n    drm_message = C[::2] + B[::2]\n    drm_message = [i for i in drm_message]\n    print(drm_message)\n\nmain()\n"}, "902": {"problem_id": 4902, "answer": "s = input()\nn = len(s)\nans = 0\nfor i in range(1,n+1):\n if s[i-1]!= s[i]:\n  ans += 1\nprint(ans)"}, "903": {"problem_id": 4903, "answer": "import math\na=input().lower()\nb=int(input())\nif a==b:\n print(\"go\")\nelse:\n print(\"no\")"}, "904": {"problem_id": 4904, "answer": "a = input().split()\na = a[1:]\ns = 0\nfor i in range(len(a)):\n if a[i] == 'A':\n  s += 1\n else:\n  s += 2\nprint(s)"}, "905": {"problem_id": 4905, "answer": "import bisect\nn,m=map(int,input().split())\na,b,k,g=list(map(int,input().split()))\ns=[[0]*1001 for i in range(1001)]\nfor i in range(n):\n s[i][0]=bisect.bisect_right(a,s[i][0])-1\n s[i][1]=bisect.bisect_left(a,s[i][1])+1\nprint(min(b-k+1,m-1))"}, "906": {"problem_id": 4906, "answer": "import sys\ndef main():\n s=sys.stdin.readline()\n n=len(s)\n l=[]\n for i in range(n):\n  l.append(s[i])\n print(\"\".join(l))\nmain()"}, "907": {"problem_id": 4907, "answer": "import sys\n\ndef main():\n n = int(input())\n if n % 2 == 0:\n  print(\"Alice\")\n elif n % 4 == 0:\n  print(\"Bob\")\n else:\n  ans = int(n / 2)\n  if n % 2 == 0:\n   ans = n - ans\n  print(ans)\n"}, "908": {"problem_id": 4908, "answer": "a, b, c, d = map(int, input().split())\nif c == 0:\n print('-' + str(a) + '+' + str(b))\nelif d == 0:\n print('-' + str(a) + '=' + str(b))\nelif a == b:\n print('+' + str(a) + '+' + str(c))\nelse:\n print('-' + str(a) + '=' + str(b) + '+' + str(c))"}, "909": {"problem_id": 4909, "answer": "from collections import deque\nn=int(input())\nl=list(map(int,input().split()))\nl.sort()\nd=deque()\nfor i in range(n-1):\n    d.append(l[i+1]-l[i])\n    \nif d[0]==0:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "910": {"problem_id": 4910, "answer": "import collections\nn = int(input())\ncategories = collections.Counter(list(map(str, input().split())))\nfor i in range(n):\n    categories[int(input())] += 1\nd = max(categories.values())\nprint('{}'.format(d))"}, "911": {"problem_id": 4911, "answer": "from collections import deque\ns = input()\nn = int(input())\na = sorted(s.split(), key = lambda x: int(x))\nd = deque()\nfor i in range(n):\n    d.append(int(input()))\n    a.sort(key = lambda x: len(a[x]), reverse = True)\n    print(' '.join(map(str, a)))\n    print(' '.join(map(str, d)))"}, "912": {"problem_id": 4912, "answer": "h,w,n=map(int,input().split())\nb=list(map(int,input().split()))\na=b[0]\nfor i in range(1,n):\n    a+=b[i]\n    \nif a>h:\n    print(\"NO\")\nelse:\n    print(\"YES\")"}, "913": {"problem_id": 4913, "answer": "import math\nn=int(input())\nwhile n:\n    a=list(input().split())\n    if a[0]==\"V\" and a[1]==\"Y\":\n        a.pop(0)\n    elif a[0]==\"C\" and a[1]==\"Y\":\n        a.pop(0)\n    elif a[0]==\"A\" and a[1]==\"Y\":\n        a.pop(0)\n    else:\n        a.pop(0)\n    if abs(int(math.ceil(n/len(a))*len(a)/100))<=0.01:\n        print(\"Not Effective\")\n    else:\n        print(\"66.666667\")\n    n-=1"}, "914": {"problem_id": 4914, "answer": "n=int(input())\na=input()\nb=input()\nc=input()\nans=0\nfor i in range(n):\n if a[i]==b[i]==c[i]:\n  ans+=1\n else:\n  ans+=2\nprint(ans)"}, "915": {"problem_id": 4915, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nn = int(read())\nans = []\nfor i in range(n):\n    x,y,z = list(map(int,read().split()))\n    ans.append((x+y+z)//3)\n    ans.append((x+y+z)%3)\nprint(ans[0],ans[1])\n"}, "916": {"problem_id": 4916, "answer": "import bisect\ndef main():\n n,k=list(map(int,input().split()))\n l=[[i for i in range(k)]]\n for i in range(n):\n  l.append(list(map(int,input().split())))\n d=[[0 for i in range(n)] for j in range(1,n+1)]\n for i in range(1,n+1):\n  for j in range(1,k+1):\n   d[i][j]=abs(l[i][0]-l[i][j])+abs(l[i][j]-l[j][0])\n d[0][0]=0\n q=deque()\n q.append(0)\n while(len(q)!=0):\n  v=q.popleft()\n  for i in range(1,n+1):\n   if(d[v][i]!=0):\n    q.append(i)\n    break\n  if(q[0]==k):\n   print(k)\n   return\n  else:\n   for i in range(1,n+1):\n    if(d[q[0]][i]!=0):\n     q.append(i)\n     break\n   if(q[0]==k):\n    print(k)\n    return\n   else:\n    for i in range(1,n+1):\n     if(d[q[0]][i]!=0):\n      q.append(i)\n      break\n    if(q[0]==k):\n     print(k)\n     return\nmain()"}, "917": {"problem_id": 4917, "answer": "n = int(input())\na = []\nfor i in range(n):\n a.append(str(input()))\na.sort()\nb = []\nfor i in range(n):\n b.append(str(input()))\nb.sort()\nans = \"gunilla has a point\"\nfor i in range(n):\n if a[i][0]!= b[i][0]:\n  ans = ans + \" edward is right\"\n else:\n  ans = ans + \" gunnilla is right\"\nprint(ans)"}, "918": {"problem_id": 4918, "answer": "import sys\ninput = sys.stdin.readline\n \nn, q = map(int, input().split())\nquerys = [tuple(map(int, input().split())) for _ in range(n)]\nquerys.sort()\n \ndef merge(a, b):\n    a += 1\n    b += 1\n    if a == n:\n        return b\n    elif b == n:\n        return a\n    else:\n        return merge(a, b - 1)\n    "}, "919": {"problem_id": 4919, "answer": "from sys import stdin,stdout\ninput=stdin.readline\ndef __starting_point():\n n=int(input())\n trips=[]\n for i in range(n):\n  trips.append(list(input().rstrip()))\n for query in range(1,n+1):\n  query=str(query)\n  query=query[2:]\n  query=query[y:len(query)]\n  print(trips[query-1][int(query)])\n__starting_point()"}, "920": {"problem_id": 4920, "answer": "import sys\nreadline = sys.stdin.readline\n\nS = readline().rstrip()\nN = len(S)\nM = 2**N\n#print(M)\nP = [0]*N\nfor i in range(N):\n    P[i] = ord(S[i])-97\n    if ord(S[i])<26:\n        P[i]+=1\ncnt = 0\nfor i in range(N):\n    if P[i]!=0:\n        cnt+=P[i]*M\nprint(cnt)"}, "921": {"problem_id": 4921, "answer": "import sys\ndef iin(): return int(input())\ndef lin(): return list(map(int, input().split()))\ndef isinstance(t, object): return type(t) == object\ndef lin2(): return list(map(type, sys.stdin.readline().split()))\ndef str2(n): return str(int(n) if n<=0 else n)\ndef lis(): return list(map(int, sys.stdin.readline().split()))\ndef mt(ob): return modm(ob)\ndef modm(ob): return (ob%10) if ob<10 else (ob%20+10)%10\ndef sh(ob): return sum(1 for x in ob if isinstance(x, str))\ndef si(ob): return list(map(str, ob))\ndef se(ob): return''.join(lis()[::-1])\ndef bo(ob): return''.join(lis()[::-1][ob:])\ndef bo2(ob): return''.join(map(str, lis()[ob:]))\ndef da(ob): return''.join(lis()[ob:])\ndef dl(ob): return''.join(map(str, lis()[ob:]))\ndef dd(ob): return''.join(map(str, lis()))\ndef egcd(a, b): return gcd(a, b)\ndef eratosthenes(): return [1, 19]\ndef radians(x): return (x%1000000007) if x<1000000007 else 0\ndef sin(x): return math.sin(x) if x else 0\ndef cos(x): return math.cos(x) if x else 0\ndef atan2(a, b): return (a*a) % 1 if b==0 else (a*(a+b)) % 1\ndef ceil(a): return (a+1)//1 if (a+1)%1==0 else (a+1)//1\ndef round(a): return (a+0.0000000001) if (a+0.0000000001)%1==0 else (a+0.000001)\ndef pow(x, n): return 1.0 if x==0 else (pow(x, n-1)*pow(x, n-2))\ndef hypot(a, b): return a*b if a==b else (a+b)"}, "922": {"problem_id": 4922, "answer": "import sys\nreadline = sys.stdin.readline\n\nMOD = 10**9 + 7\ninf = float('inf')\neps = float('-inf')\n\ndef solve(s, a, b, c):\n    if s.count(c) == 3:\n        return True\n    elif s[c] == '-':\n        return False\n    else:\n        a -= 1\n        b += 1\n        if a < 0 or b > 0:\n            return False\n        if abs(a) + abs(b) == c:\n            return True\n        else:\n            return solve(s, a, b, c)\n        \nm = int(readline())\nclauses = []\nfor _ in range(m):\n    s = list(map(int, readline().split()))\n    try:\n        for a, b in zip(s, s[1:]):\n            if a == b:\n                continue\n            else:\n                a -= 1\n            b += 1\n            if b < 0 or a > 0:\n                return False\n            if abs(a) + abs(b) == c:\n                return True\n            else:\n                return solve(s, a, b, c)\n    except:\n        return False\nprint(\"satisfactory\" if solve(s, 0, 0, c) else \"unsatisfactory\")\n"}, "923": {"problem_id": 4923, "answer": "n=int(input())\na=list(map(int,input().split()))\nans=max(a)\nfor i in range(n):\n    if a[i] not in a[i+1:]:\n        ans=i+1\nprint(ans)"}, "924": {"problem_id": 4924, "answer": "import time\ns = input().split(':')\nt = int(s[1])\nh = int(s[2])\nm = int(s[3])\ns = s[:-1]\nprint(h*3600 + m*60 + s[-1])"}, "925": {"problem_id": 4925, "answer": "l=list(map(int,input().split()))\nl.insert(0,0)\nprint(l[0]*l[1] + max(l[0]*(l[1]-l[0]),l[0]*(l[2]-l[1])))"}, "926": {"problem_id": 4926, "answer": "def __starting_point():\n n = int(input())\n print(sum(1! / (i*i) for i in range(n)))\n\n__starting_point()"}, "927": {"problem_id": 4927, "answer": "import sys\nreadline = sys.stdin.readline\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: list(map(int, readline().split()))\nnl = lambda: list(map(int, readline().split()))\n\ndef main():\n n, p, q = ni()\n if n == 0:\n  print('opponent')\n elif p == 0:\n  print('Paul')\n else:\n  a = n - p\n  b = n - q\n  if a % 2 == 0:\n   print('opponent')\n  else:\n   print('paul')\nmain()"}, "928": {"problem_id": 4928, "answer": "n=int(input())\nif n==1:\n print(1)\nelif n==2:\n print(1)\nelif n==3:\n print(1)\nelse:\n print(max(n-1,0))"}, "929": {"problem_id": 4929, "answer": "s = input()\np = input()\nreversed = ''.join([c for c in p if c.isalpha()])\nif len(s)!= len(reversed):\n    print('No')\n    return\n\nfor i in range(len(s)):\n    if s[i]!= reversed[i]:\n        print('No')\n        return\n\nprint('Yes')"}, "930": {"problem_id": 4930, "answer": "s = input()\nfor i in range(0, len(s)):\n    if s[i] in 'aeiou':\n        s = s[:i] +'' + s[i + 1:]\nprint(s)"}, "931": {"problem_id": 4931, "answer": "import math\ndef is_possible(a,b):\n if a == 0:\n  return True\n elif b == 0:\n  return True\n else:\n  return False\ntemp = math.sqrt(a*a + b*b)\nif temp.is_integer() or temp.is_ceil():\n print(\"IMPOSSIBLE\")\nelif temp.is_ceil() and temp.is_pow(2).is_integer():\n print(\"ALL GOOD\")\nelse:\n print(\"IMPOSSIBLE\")"}, "932": {"problem_id": 4932, "answer": "A,B,C,D=list(map(int,input().split()))\nP=int(input())\nif A>B:\n print(\"both\")\nelif B>A:\n print(\"one\")\nelif A>C:\n print(\"none\")\nelse:\n print(\"none\")\n"}, "933": {"problem_id": 4933, "answer": "# cook your dish here\na=int(input())\nif a==0:\n    print(0)\nelif a==1:\n    print(a)\nelse:\n    a1=int(input())\n    a2=int(input())\n    a3=int(input())\n    a4=a1-a2\n    a5=a3-a2\n    a6=a1-a3\n    a7=a2-a3\n    a8=a1-a2-a3\n    a9=a2-a3-a4\n    a10=a1-a2-a3-a4\n    a11=a3-a4"}, "934": {"problem_id": 4934, "answer": "h,v = map(int,input().split())\nroof = h*0.35\nl = roof**(1.0/2)+roof**(1.0/2)\nprint(int(l))"}, "935": {"problem_id": 4935, "answer": "import math\ndef calc_v(a,b):\n return math.cos((b-a)/180)*g*math.sqrt(a**2+b**2)\nn=int(input())\nwhile n:\n a,b=list(map(int,input().split()))\n v=calc_v(a[1],b[1])\n a.remove(a[0])\n b.remove(b[0])\n print(v)\n n=n-1\n"}, "936": {"problem_id": 4936, "answer": "n = int(input())\ntemp = list(map(int, input().split()))\nd = -20\ns = 0\nfor i in range(n):\n  if temp[i] > d:\n    d = temp[i]\n    s = i + 1\n  elif temp[i] < d:\n    d = temp[i]\nprint(d, s)"}, "937": {"problem_id": 4937, "answer": "import bisect as b\ninput = lambda: list(map(int,input().split()))\nn,a=input().split()\ne=list(map(int,input().split()))\ns=0\nfor i in range(n):\n    if e[i]>s:\n        s+=e[i]\n    else:\n        b.insort(e,s)\nprint(s//a)"}, "938": {"problem_id": 4938, "answer": "import math\nn=int(input())\ns=input()\na=s.count('W')\nb=s.count('M')\nif math.abs(a-b)>1:\n print(9)\nelse:\n print(0)"}, "939": {"problem_id": 4939, "answer": "n,k=list(map(int,input().split()))\negg=int(input())\negg-=1\nm=int(input())\nfor i in range(egg):\n try:\n  a=int(input())\n  if a%2==0:\n   print(egg+i)\n  else:\n   a-=1\n   if a>0:\n    egg-=a\n   elif a<m:\n    egg-=a-m\n   else:\n    egg-=m\n    \nexcept:\n pass\n"}, "940": {"problem_id": 4940, "answer": "import numpy as np\nl=[]\nfor i in range(int(input())):\n    l.append(int(input()))\nn,m=l[0],l[1]\nl=np.array(l)\nl=l.reshape(n,m)\nt=[]\nfor i in range(2):\n    t.append(l.sum(axis=0))\nprint(*t)"}, "941": {"problem_id": 4941, "answer": "import sys\r\nimport math\r\nfrom collections import defaultdict,Counter\r\n\r\ndef solve():\r\n    n = int(sys.stdin.readline())\r\n    s = sys.stdin.readline().strip()\r\n    d = defaultdict(list)\r\n    e = defaultdict(list)\r\n    c = Counter(s)\r\n    m = int(sys.stdin.readline())\r\n    ans = 0\r\n    for i in range(n):\r\n        d[s[i]].append(i)\r\n        e[s[i]].append(i)\r\n        c[s[i]].append(i)\r\n        if s[i] in d:\r\n            ans += len(d[s[i]])\r\n        elif s[i] in e:\r\n            ans += len(e[s[i]])\r\n        else:\r\n            ans += len(c[s[i]])\r\n    print(ans)\r\n    if ans > 1:\r\n        print(str(ans) + \" correct\")\r\n    else:\r\n        print(str(ans) + \" incorrect\")\r\n\r\nsolve()"}, "942": {"problem_id": 4942, "answer": "import bisect as b\nn=int(input())\na=list(map(int,input().split()))\nm=b.bisect_left(a,0)\nif m==len(a):\n print(0)\nelse:\n print(m+1)"}, "943": {"problem_id": 4943, "answer": "import numpy as np\nt = np.int64(input())\na = int(input())\nans = []\nfor i in range(t):\n    x,y = input().split()\n    x = int(x)\n    y = int(y)\n    ans.append([x,y])\nprint(*ans,sep=\"\\n\")"}, "944": {"problem_id": 4944, "answer": "n=int(input())\nprint(n+1)"}, "945": {"problem_id": 4945, "answer": "import math\na,b=list(map(int,input().split()))\nm,s=list(map(int,input().split()))\nap=math.sqrt(a)+1\nbp=math.sqrt(b)+1\napx=max(ap,bp)\ny=int(input())\nif apx<m:\n    print(apx)\nelif apx<s:\n    print(s)\nelse:\n    print(apx+y)"}, "946": {"problem_id": 4946, "answer": "n=int(input())\na=list(map(int,input().split()))\nd=n-max(a)\nif d==n:\n print(n)\nelse:\n ans=0\n for i in range(d):\n  ans+=min(a[i],a[i+1])**2\n print(ans)"}, "947": {"problem_id": 4947, "answer": "import math\ndef rint():\n return int(input())\ndef rint1():\n return int(input())\ndef rint2():\n return int(input())\ndef rint3():\n return int(input())\ndef rint4():\n return int(input())\ndef rint5():\n return float(input())\ndef rint6():\n return round(input(),5)\ndef rint7():\n return round(float(input()),5)\ndef rint8():\n return round(float(input()),5)\ndef rint9():\n return round(math.ceil(float(input())),5)\ndef rint10():\n return round(math.ceil(float(input())),5)\ndef rint11():\n return round(2*pow(10,9),5)\ndef rint12():\n return round(2*pow(10,9) + 5280,5)\ndef rint13():\n return round(2*pow(10,9) + 4854,5)\ndef rint14():\n return round(2*pow(10,9) + 523.4,5)\ndef rint15():\n return round(2*pow(10,9) + 5,5)\ndef rint16():\n return round(2*pow(10,9) + 523.4,5)\ndef rint17():\n return round(2*pow(10,9) + 523.4 + 5280,5)\ndef rint18():\n return round(2*pow(10,9) + 523.4 + 4854,5)\ndef rint19():\n return round(2*pow(10,9) + 523.4 + 523.4 + 5280,5)\ndef rint20():\n return round(2*pow(10,9) + 523.4 + 523.4 + 4854,5)\ndef rint21():\n return round(2*pow(10,9) + 523.4 + 523.4 + 523.4 + 5280,5)\ndef rint22():\n return round(2*pow(10,9) + 523.4 + 523.4 + 523.4 + 4854,5)\ndef rint23():\n return round(2*pow(10,9) + 523.4 + 523.4 + 523.4 + 51.8,5)\ndef rint24():\n return round(2*pow(10,9) + 523.4 + 523.4 + 523.4 + 5.6,5)\ndef rint25():\n return round(2*pow(10,9) + 523.4 + 523.4 + 523.4 + 5.6 + 51.8,5)\ndef rint26():\n return round(2*pow(10,9) + 523.4 + 523.4 + 523.4 + 5.6 + 51.8 + 5280,5)\ndef rint27():\n return round(2*pow(10,9) + 523.4 + 523.4 + 523.4 + 5.6 + 51.8 + 523.4 + 523.4 + 5280,5)\ndef rint28():\n return round(2*pow(10,9) + 523.4 + 523.4 + 523.4 + 5.6 + 51.8 + 523.4 + 523.4 + 523.4 + 523.4 + 5280,5)\ndef rint29():\n return round(2*pow(10,9) + 523.4 + 523.4 + 523.4 + 5.6 + 51.8 + 523.4 + 523.4 + 523.4 + 523.4 + 523.4 + 5280,5)\ndef rint30():\n return round(2*pow(10,9) + 523.4 + 523.4 + 523.4 + 5.6 + 51.8 + 523.4 + 523.4 + 523.4 + 523.4 + 523.4 + 5280,5)\ndef rint31():\n return round(2*pow(10,9) + 523.4 + 523.4 + 523.4 + 5.6 + 51.8 + 523.4 + 523.4 +"}, "948": {"problem_id": 4948, "answer": "import math\ndef C(a,b,c):\n \n x=math.sqrt(a**2+b**2)\n y=math.sqrt(c**2+b**2)\n z=a*x+b*y\n if z>100000:\n  return \"Error\"\n return str(z)\nn,s=list(map(int,input().split()))\nh=[]\nfor i in range(n):\n h.append(list(map(int,input().split())))\nl=len(h)\nh=sorted(h)\nprint(C(h[0][0]*100000+h[0][1]*100000+h[0][2],h[1][0]*100000+h[1][1]*100000+h[1][2],h[2][0]*100000+h[2][1]*100000+h[2][2]))"}, "949": {"problem_id": 4949, "answer": "import math\nn = int(input())\nl = list(map(int,input().split()))\nl.sort()\nans = []\nfor i in range(n):\n    ans.append(l[i]*l[i])\nprint(\"NE\" if ans[-1]!=l[-1]*l[-1] else \"DA\")"}, "950": {"problem_id": 4950, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    t,d = map(int,input().split())\n    l.append((t,d))\nl.sort()\nspeed = 0\nfor i in range(n):\n    speed += l[i][1]*60*60\nprint(speed)"}, "951": {"problem_id": 4951, "answer": "n = int(input())\nfor i in range(n):\n a = input()\n b = input()\n if 'A' in a.lower():\n  print('correct')\n elif 'B' in a.lower():\n  print('incorrect')\n else:\n  count = 1\n  for i in b:\n   if i.isalpha():\n    count += 1\n   else:\n    break\n  print(count)"}, "952": {"problem_id": 4952, "answer": "import sys\n\nt=sys.stdin.readline().rstrip('\\r\\n')\nfor i in range(len(t)):\n    t=t[i]\n    if t[0]=='P':\n        print(P)\n    elif t[0]=='M':\n        print(M)\n    elif t[0]=='R':\n        print('Runoff!')"}, "953": {"problem_id": 4953, "answer": "import operator\nl = []\nfor i in range(1,21):\n    l.append(input().rstrip())\nl.extend(list(map(str,input().split())))\nn = int(input())\nd = {}\nfor i in range(n):\n    d[l[i]] = i\nans = []\nfor i in d:\n    if d[i] not in d:\n        ans.append(i)\nprint('\\n'.join(map(str,ans)))"}, "954": {"problem_id": 4954, "answer": "import sys\r\nimport math\r\nimport bisect\r\nfrom collections import defaultdict,Counter\r\nfrom itertools import permutations, combinations\r\nfrom operator import itemgetter\r\n\r\ndef input(): return sys.stdin.readline().strip()\r\ndef I(): return int(input())\r\ndef LI(): return list(map(int, input().split()))\r\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\r\ndef SIZE(n): return math.floor(math.sqrt(n))+1\r\n\r\nmod = 1000000007\r\n\r\ndef main():\r\n    N,B = LI()\r\n    h = I()\r\n    for _ in range(H):\r\n        p = I()\r\n        a = I()\r\n        print(min([p[i] for i in range(W) if a[i] == 1]))\r\n\r\n        for i in range(W):\r\n            if i >= h[0]:\r\n                break\r\n            a[i] -= 1\r\n"}, "955": {"problem_id": 4955, "answer": "import sys\ndef main():\n n=int(input())\n ar=[int(x) for x in input().split()]\n d=dict()\n for i in range(1,len(ar)):\n  d[ar[i]]=i\n print(*d,sep=' ')\nmain()"}, "956": {"problem_id": 4956, "answer": "import re\na = raw_input()\nb = re.sub(r'ae', 'ae', a)\nc = re.sub(r'ae', 'haer', a)\nd = re.sub(r'ae', 'haer', c)\ne = re.sub(r'ae', 'haer', d)\nf = re.sub(r'ae', 'haer', e)\n\nif a.count('a') >= 40.0*len(a):\n print('dae ae ju traeligt va')\n"}, "957": {"problem_id": 4957, "answer": "import sys\nreadline = sys.stdin.readline\nn,m = map(int,readline().split())\nland = []\nwater = []\nfor i in range(n):\n    land.append(readline().rstrip()[:-1])\n    water.append(readline().rstrip()[-1:])\nland.sort()\nwater.sort()\nvisited = [0]*n\nfor i in range(n):\n    if visited[i]==0:\n        visited[i]=1\n        s = land[i]\n        t = water[i]\n        if s!=t:\n            print(\"\".join(land[i]))\n            break\n    else:\n        print(\"E\")"}, "958": {"problem_id": 4958, "answer": "import math\ndef is_equal(a,b):\n    return abs(a[0]-b[0])!=abs(a[1]-b[1])!=abs(a[2]-b[2])!=abs(a[3]-b[3])!=abs(a[4]-b[4])!=abs(a[5]-b[5])!=abs(a[6]-b[6])!=0\ndef main():\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    a.sort()\n    b.sort()\n    print(' '.join(map(str,a)))\n    print(' '.join(map(str,b)))\nmain()"}, "959": {"problem_id": 4959, "answer": "e,f,c = map(int,input().split())\ns = 0\nif e<1000:\n s += e\nelif f<1000:\n s += f\nelse:\n s += c\nprint(s)"}, "960": {"problem_id": 4960, "answer": "import sys\nread = sys.stdin.read\n\nn = int(read())\n\nprint(0x11, end='')\nfor i in range(1, n):\n    print(0x10 & (i << 7) + i, end='')"}, "961": {"problem_id": 4961, "answer": "R,S=map(int,input().split())\na=[]\nfor i in range(R):\n    a.append(input().rstrip())\nprint(sum(a))"}, "962": {"problem_id": 4962, "answer": "from collections import deque\nn,l=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append([int(x) for x in input().split()])\na.sort()\nb=deque()\nfor i in range(300000):\n if a[i][0]==b[0]:\n  b.pop()\n else:\n  b.append(a[i])\n  a[i]=b[0]\n \nfor i in range(l):\n if a[i][0]==b[0]:\n  b.popleft()\n  b.pop()\n elif a[i][0]!=b[0]:\n  b.append(a[i])\n  a[i]=b[0]\n \nprint('\\n'.join(map(str,b)))\n"}, "963": {"problem_id": 4963, "answer": "n=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n-1):\n    a.append(l[i])\nans=[]\nfor i in range(n-1):\n    ans.append(a[i])\nprint(*ans)"}, "964": {"problem_id": 4964, "answer": "from collections import Counter\r\nn,h,l=map(int,input().split())\r\nc=Counter(map(int,input().split()))\r\nd={}\r\nfor i in range(h):\r\n  d[i+1]=list(map(int,input().split()))\r\na=sorted(d.values(),reverse=True)\r\nb=sorted(c.keys(),reverse=True)\r\nif a[1]>b[0]:\r\n  print(a[1])\r\nelse:\r\n  m=min(a[0],b[0])\r\n  print(m)"}, "965": {"problem_id": 4965, "answer": "import sys\ninput = sys.stdin.readline\n\nn=int(input())\na=list(map(int,input().split()))\nb=[0]*(n+1)\nb[0]=a[0]\nfor i in range(1,n):\n    b[i]=max(b[i-1],a[i])\n    \nif b[n-1]!=a[n-1]:\n    print(\"impossible\")\nelse:\n    for i in range(n-2,-1,-1):\n        if b[i]>a[i]:\n            b.pop(i)\n        else:\n            break\n    print(\"\".join(map(str,b)))\n"}, "966": {"problem_id": 4966, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\nINF = float('inf')\nMOD = 998244353\n\nn, p, k = li2()\na = [0]*k\nfor i in range(k):a[i] = val()\nl = len(a)\nans = 0\nheapq.heapify(a)\nfor i in range(l):\n    ans += a[i]*p\nprint(ans)"}, "967": {"problem_id": 4967, "answer": "n=int(input())\nl=[]\nfor i in range(n):\n    l.append(input().rstrip('.'))\nl.sort()\nm=-1*len(l)\nfor i in range(len(l)):\n    if(l[i]=='H'):\n        m=max(m,abs(l[i]-l[i-1]))\n    else:\n        m=max(m,abs(l[i]-l[i-1]))\nprint(m)"}, "968": {"problem_id": 4968, "answer": "import math\ndef isok(x):\n    if x%2==0:\n        return 1\n    else:\n        return 0\ndef f(n):\n    s=int(math.sqrt(n))\n    if isok(s):\n        return s\n    else:\n        return f(s-1)\ndef main():\n    n,s,r=list(map(int,input().split()))\n    l=list(map(int,input().split()))\n    l.sort()\n    l.sort(reverse=True)\n    r.sort()\n    print(f(r[1]))\nmain()"}, "969": {"problem_id": 4969, "answer": "import sys\ndef get_int(): return int(sys.stdin.readline())\ndef get_list(): return list(map(int, sys.stdin.readline().split()))\ndef get_string(): return sys.stdin.readline()[:-1]\ndef get_int_list(): return list(map(int, sys.stdin.readline().split()))\ndef get_string_list(): return sys.stdin.readline().split()\ndef get_list_int(): return list(map(int, sys.stdin.readline().split()))\ndef get_list_string(): return sys.stdin.readline().split()\ndef get_list_int_list(): return list(map(int, sys.stdin.readline().split()))\ndef get_string_list_int(): return sys.stdin.readline().split()\ndef get_string_list_string(): return sys.stdin.readline().split()\ndef get_list_string_int(): return list(sys.stdin.readline().split())\ndef get_list_int_string(): return list(sys.stdin.readline().split())\ndef get_string_list_string_int(): return list(sys.stdin.readline().split())\nR = get_int()\nC = get_int()\ncheese = 0.0\nfor i in range(R):\n    cheese = cheese + get_int_list_int()[i]\nprint(cheese / R)"}, "970": {"problem_id": 4970, "answer": "n = int(input())\ns = 0\nfor i in range(n):\n    c = list(map(int, input().split()))\n    s += c.count(c[0])\nprint(s)"}, "971": {"problem_id": 4971, "answer": "m=int(input())\nif m<=400000:\n print(m)\nelif m%400000==0:\n print(m//4)\nelse:\n print(m//4+1)"}, "972": {"problem_id": 4972, "answer": "import sys\nreadline = sys.stdin.readline\ns = int(readline())\na = bin(s)[2:]\nprint(a.count('1'))"}, "973": {"problem_id": 4973, "answer": "import sys\r\nimport math\r\nfrom collections import defaultdict, deque\r\ninput = sys.stdin.readline\r\ndef list2d(a, b, c):\r\n return [[c] for i in range(a)]\r\ndef list3d(a, b, c, d):\r\n return [[c] for i in range(b)]\r\ndef ceil(x, y=1): return int(-(-x // y))\r\ndef INT(): return int(input())\r\ndef MAP(): return map(int, input().split())\r\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\r\ndef Yes(): print('Yup')\r\ndef No(): print('Nope')\r\ndef YES(): print('Yes')\r\ndef NO(): print('No')\r\n\r\n\r\nn = INT()\r\na = [input() for _ in range(n)]\r\nm = INT()\r\nblocked = defaultdict(bool)\r\nans = 0\r\nfor i in range(m):\r\n    if blocked[a[i][0]]:\r\n        continue\r\n    blocked[a[i][0]].append(i)\r\n    ans += 1\r\n    for j in range(1, n):\r\n        if a[i][j] == '#':\r\n            continue\r\n        if a[i][j] not in blocked[a[i][j]]:\r\n            blocked[a[i][j]] = bool()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}, "974": {"problem_id": 4974, "answer": "import sys\ninput = sys.stdin.readline\nr,n=list(map(int,input().split()))\nans=[]\nfor i in range(1,r):\n    ans.append(i+1)\nif n==r:\n    print(ans[0])\nelse:\n    print(\"too late\")\n"}, "975": {"problem_id": 4975, "answer": "a = input().split()\nb = input().split()\nc = []\nfor i in range(len(a)):\n    c.append(a[i])\nfor i in range(len(b)):\n    c.append(b[i])\nprint(\"\".join(c))"}, "976": {"problem_id": 4976, "answer": "a, b = map(int, input().split())\nc, d = map(int, input().split())\nprint(\"The gopher cannot escape.\"*(a + b) if a > b else \"The gopher can escape.\" if a < b)"}, "977": {"problem_id": 4977, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n a, b, t = map(int, input().split())\n c, d, charge = map(int, input().split())\n if (a == c) or (b == d):\n  print(\"Y\")\n elif abs(a - c) + abs(b - d) <= t:\n  print(\"Y\")\n else:\n  print(\"N\")\n \nmain()"}, "978": {"problem_id": 4978, "answer": "import sys\ninput = sys.stdin.readline\nread = sys.stdin.read\n\nN,M = list(map(int,input().split()))\nA = [[] for _ in range(N)]\nfor _ in range(N):\n    s = input()\n    A[s[0]].append(s[1:])\n\nfor i in range(1,N):\n    for j in range(M):\n        A[i].append(j)\n\nB = [[] for _ in range(N)]\nfor i in range(N):\n    b = A[i]\n    B[i].append(b)\n\nfor i in range(N):\n    print(''.join(B[i]))\n"}, "979": {"problem_id": 4979, "answer": "n=int(input())\na=n//2\nb=n%2\nif a!=0:\n print(a)\nelif b!=0:\n print(b)"}, "980": {"problem_id": 4980, "answer": "import re\nn=int(input())\nwhile n>0:\n a=re.findall('Rose|Pink',input())\n b=re.findall('\\D',a[0])\n if a!=[] and b!=[] :\n  print(0)\n  n=n-1"}, "981": {"problem_id": 4981, "answer": "a, b, c = map(int, input().split())\nl = ['A', 'B', 'C']\nprint(l[a:b])"}, "982": {"problem_id": 4982, "answer": ""}, "983": {"problem_id": 4983, "answer": "import sys\ninput = sys.stdin.readline\ndigits = [int(i) for i in input().split()]\nfor i in range(10, 100000):\n  digits.append(digits[i]*10)\nprint(''.join(map(str, digits)))"}, "984": {"problem_id": 4984, "answer": "import sys\nreadline = sys.stdin.readline\n\nR,C = list(map(int,readline().split()))\nans = 0\nfor i in range(R):\n ans += (C-1)*'W'[i]\nprint(ans)"}, "985": {"problem_id": 4985, "answer": "import math\r\ndef __starting_point():\r\n    n,b=map(int,input().split())\r\n    s=0\r\n    h=0\r\n    d=0\r\n    for i in range(4*n):\r\n        if b[i]==s:\r\n            s+=1\r\n        elif b[i]==d:\r\n            d+=1\r\n        else:\r\n            h=max(h,s)\r\n            s=0\r\n    print(sum(math.comb(h,d,math.pow(10,n-2)))%1000000007)\r\n__starting_point()"}, "986": {"problem_id": 4986, "answer": "s = input()\nt = input()\ncnt = 0\nfor i in range(len(s)):\n    if s[i] == \" \":\n        continue\n    elif s[i] == \"a\" or s[i] == \"z\":\n        cnt += 1\n    else:\n        s = s[i+1:]\n        t = t[i+1:]\n        cnt += 1\nprint(\"\".join(s))"}, "987": {"problem_id": 4987, "answer": "import math\ns=input().split()\ns=int(s)\nl=list(map(int,input().split()))\nl.sort()\ncount=0\nfor i in l:\n if i-l[-1]<=0:\n  count+=1\n else:\n  count+=math.ceil(i/l[-1])\nprint(count)"}, "988": {"problem_id": 4988, "answer": "import math\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    print(math.floor(n/10))"}, "989": {"problem_id": 4989, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n    c+=a[i]\n    a[i]=0\nprint(c,a[0])"}, "990": {"problem_id": 4990, "answer": "def main():\n    b, k, g = list(map(int, input().split()))\n    while b!= k:\n        k -= 1\n        b += 1\n    print(b)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "991": {"problem_id": 4991, "answer": "def isqrt(n):\n    if n == 1:\n        return 1\n    elif n%2==0:\n        return n+isqrt(n//2)\n    else:\n        return isqrt(n//2)+isqrt(n%2)\nn=int(input())\nprint(isqrt(n))"}, "992": {"problem_id": 4992, "answer": "import sys\nsys.setrecursionlimit(10**8)\ndef I(): return int(sys.stdin.readline())\ndef MI(): return list(map(int,sys.stdin.readline().split()))\ndef LI(): return list(map(int,sys.stdin.readline().split()))\nn=I()\na=LI()\ns=[0]*n\ns[0]=a[0]\nfor i in range(1,n):\n    s[i]=s[i-1]+a[i]\nif n%2:\n    print(\"impossible\")\n    return\nans=[]\nvisited=[False]*n\nvisited[0]=True\nwhile True:\n    v=s.pop()\n    if visited[v]:\n        break\n    visited[v]=True\n    for i in range(len(s)):\n        if s[i]>v:\n            ans.append(v)\n            s.append(s[i])\n    v=s.pop()\n    if visited[v]:\n        break\n    visited[v]=False\nif len(ans)<=1:\n    print(\"impossible\")\n    return\nprint(\"safe\")\nfor i in ans[1:]:\n    print(i,end=\"\")\nprint()"}, "993": {"problem_id": 4993, "answer": "import numpy as np\np,n=list(map(int,input().split()))\narr=[]\nfor i in range(n):\n arr.append(input())\narr=np.array(arr)\nans=0\nfor i in range(1,21):\n temp=len(set(arr[i]))\n if temp>20:\n  ans=i\n  break\n else:\n  print(i)\n"}, "994": {"problem_id": 4994, "answer": "import math\ndef read():\n s=input()\n return s\ndef write(s):\n print(s)\nt=int(input())\na=list(map(int,input().split()))\nfor i in range(t):\n a.append(math.sqrt(pow(a[i],2)+pow(a[i+1],2)))\nwrite(a)"}, "995": {"problem_id": 4995, "answer": "import math\nn = int(input())\nm = int(input())\ns = int(input())\na = 60*60*24\nb = 60*60*36\nfor i in range(n):\n    a += 60\n    b += 60\n    s += 60\nprint(\"%.9f\" % (math.floor(a/b)), \"%.9f\" % (math.floor(s/a)))"}, "996": {"problem_id": 4996, "answer": "import string\nm = input().rstrip().upper()\nk = input().rstrip().upper()\na = string.ascii_lowercase[m.count('a')+1:k.count('a')-1]\nb = string.ascii_lowercase[k.count('a')-1:].upper()\nprint(a[len(a)//2:len(a)//2+len(b)//2]"}, "997": {"problem_id": 4997, "answer": "s = input()\nn = len(s)\nfor i in range(n):\n if s[i] == 'A':\n  a = i\n elif s[i] == 'B':\n  b = i\n elif s[i] == 'C':\n  c = i\n if a-b!= n//2:\n  print('A')\n elif b-c!= n//2:\n  print('B')\n else:\n  print('C')"}, "998": {"problem_id": 4998, "answer": "from math import sqrt\na,b,c,d=list(map(int,input().split()))\nl=[]\nfor i in range(4):\n l.append(a*b+c)\n l.append(b*d+c)\n l.append(c*d+a)\nprint(max(l))\n"}, "999": {"problem_id": 4999, "answer": "a,b=list(map(int,input().split()))\nc=0\nif a%2==0:\n    c=a//2\nelif a%2!=0:\n    c=a-a%2\nprint(c)"}}