{"0": {"problem_id": 4000, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nc = []\nfor i in range(0, n-1):b[a[i]] = b[c] = c.pop()\nprint(max(b))"}, "1": {"problem_id": 4001, "answer": "n = int(input())\nd = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n):\n   ans[d[i]] += 1\nprint(*ans)"}, "2": {"problem_id": 4002, "answer": "n,m,k = list(map(int,input().split()))\na = []\nfor i in range(n):\n\ta.append(sum(a[i]*(i+1)//2) + k)\nans = 0\nm = m*m\ns = [0] * (n+m+2); s[n-1] = a[:n] + (m-2*s[m])*ans\nprint(s)"}, "3": {"problem_id": 4003, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n-1):\n\tif(a[i] == \"L\" and a[-i+1]!= \"R\"): ans.append(i)\nprint(*ans)"}, "4": {"problem_id": 4004, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(min(a))"}, "5": {"problem_id": 4005, "answer": "from sys import stdin\ninput=stdin.readline\nn=int(input())\nx=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\tx.append(x[-1]+i)\nans=['YES' if x[s]<=i else 'NO']\nprint('\\n'.join(ans))"}, "6": {"problem_id": 4006, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n)"}, "7": {"problem_id": 4007, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[0]*n\nfor i in range(n):\n\tb[a[i]-1]+=1\n#print(b)\nc=0\nif a[-1]+1<=n//2 and b[n-a-2]%1==0:print('0')\nelse:c+=b.pop(0)"}, "8": {"problem_id": 4008, "answer": "n, k = list(map(int, input().split()))\na = [int(x) for x in input()]\ns = set()\nfor i in range(n):\n\ta[i] = s.add(i)\nprint('YES' if len(a) == k else 'NO')\n"}, "9": {"problem_id": 4009, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\nMOD = 10 ** 9 + 7\nf = lambda: list(map(int, input().split()))\nmod = int(1e9)+7\ndef f1(n):\n\tif n < 0: return 0\n\n\ta, b = n // 2, n % 2 + (n-1) % mod\n  \treturn a * a + b * b + f(a - 1, mod - 2) if mod > 0 else 0\nprint(f1(\"0123456789\"))\n"}, "10": {"problem_id": 4010, "answer": "for _ in range(int(input())):\n\tn = int(sum(map(str, input().split())) + 1)\n \ta = [0] * (n + 2)\n\n\tfor i, x in enumerate(sorted(a[::-1]))[:n-i+1], a[n+i:] + [x:i] + a, n = len(x), 0, 0\n"}, "11": {"problem_id": 4011, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(max(l))"}, "12": {"problem_id": 4012, "answer": "for _ in range(int(input())):\n   a,b,c = map( int,input().split())\n\tif a == 1 and b == 2 and c == 0: print(c)"}, "13": {"problem_id": 4013, "answer": "n = int(input())\na = list(map(int,input().split()))\nfor i in range(n):\n\ta[i] += 1\nprint(sum(a))"}, "14": {"problem_id": 4014, "answer": "n, m = list(map(int, input().split()))\ns, d, c = [int(x) for x in input()], 0, 0\nfor i in range(m):\n   s = s[:i] + d + c + (i % 3 == 0)\nprint(' '.join(s))"}, "15": {"problem_id": 4015, "answer": "n, m = list(map(int, input().split()))\nif m == 0: print(-1)\nelif n > m: return 0\nfor i in range(n - 1):\n  if m % i: m //= i\n"}, "16": {"problem_id": 4016, "answer": "n,k = map(int,input().split())\nt = input()\ns = []\nfor i in range(n-1):\n\ts.append(i+1)\n#print(s)"}, "17": {"problem_id": 4017, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n-1):\n\tif a[i] == sum(a[:i+1] for i,a in enumerate(list(range(0, n-2))), a) or a.count('1') == 1: ans[0]=1\nprint(len(ans))"}, "18": {"problem_id": 4018, "answer": "n, k = list(map(int, input().split()))\ns = input()\nl = len(s)\ncnt = 0\nfor i in range(k):\n\tif s[i] == 'a' and l - cnt < k:   print(-1); return\nif k - l > n: print(n)"}, "19": {"problem_id": 4019, "answer": "from collections import deque\nn, m, D = map(int, input().split())\nedges = []\nfor _ in range(m):\n   edges += [(int(x) for x in input())] + list(map(lambda x: x & [0] if x!= 0 else x >> 1, []))]\nparent = [-1]*n\nvisited = set()\ndepth = 0\nwhile depth < D and edges[depth] not in visited and (depth, parent[parent[node]], visited & parent) == -1:  # print('NO', parent, visited, depth + 1)\n\tdepth += 1"}, "20": {"problem_id": 4020, "answer": "from sys import stdin,stdout\nstdin.write(\"\\n\".join(map(str, stdout.split())))\n"}, "21": {"problem_id": 4021, "answer": "# cook your dish here\nn = input()\na = int(n[0])\nprint(a)\n"}, "22": {"problem_id": 4022, "answer": "n = int(input())\nl = [int(i) for i in input().split()]\nans = 0\nfor _ in range(n):\n\tl.append(l[-1]*(2*n+1)//2)\nif len(set(ans)) == 0: ans += 1\nprint(int(''.join(map(str,l))))\n"}, "23": {"problem_id": 4023, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] += 1\nprint('YES' if a[-1] == 1 else 'NO')"}, "24": {"problem_id": 4024, "answer": "n,k = list(map(int,input().split()))\ns = input()\nl = len(s)\ncnt = 0\nfor i in range(k):\n  if s[i] in l: cnt += 1\nans = n - l\nprint(ans)"}, "25": {"problem_id": 4025, "answer": "from sys import stdin,stdout\nstdin.readline()\na,b,c=list(map(int,input().split()))\nn=a+b+c\ns=0\nfor i in range(n):\n  s+=a*b*c-s\nprint(s)\n"}, "26": {"problem_id": 4026, "answer": "t = int(input())\nfor _ in range(t):\n\tn, m = [int(x) for x in input().split()]\n\n\ta = [[0] * (m + 1)] + list(zip(list(map(int, str(n * m + m - 1)))[::-1], m, [0, 1]))\n   # print(a)"}, "27": {"problem_id": 4027, "answer": "n = int(input())\na = []\nfor i in range(n):\n\ta.append(list(map(int,input().split())))\nprint(len(a))"}, "28": {"problem_id": 4028, "answer": "from sys import stdin, stdout\nn = int(stdin.readline())\ns = list(map(str, s))\nmod = 10 ** 9 + 7\nl = []\nfor i in range(2, n + 1):\n  l.append(s[i] + \")\".format(i)\nprint(sum(l))"}, "29": {"problem_id": 4029, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nif n % 2 == 0 and a[n // 2]!= 0: print(-1)\nelse: return 0\n"}, "30": {"problem_id": 4030, "answer": "n=int(input())\ns=input()\na=[]\nfor i in range(n):\n\ta.append(list(map(int,input().split())))\nc=s.count('a')\nif len(c)==n:print(1)\nelse:a[0].append([c[-1]-1])\nprint(*a)"}, "31": {"problem_id": 4031, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n\ts.insert(i+1, s[i])\nprint(\"YES\")\n"}, "32": {"problem_id": 4032, "answer": "n,k = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(k):\n   a[i]+=1\nprint(sum(a))"}, "33": {"problem_id": 4033, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na,b = [int(x) for x in input().split()]\nans = 0\nfor i in range(n-1):\n\tif a[i] == b[-i+1]: ans += 1\nprint(ans)"}, "34": {"problem_id": 4034, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(n):\n  if s[i] == 'a' and cnt == 0:   print('YES')\nelse: print(\"NO\")\n"}, "35": {"problem_id": 4035, "answer": "import math,string,itertools,collections,re,array,bisect,sys,random,time,copy,functools\nsys.setrecursionlimit(10**7)\nmod = 10**9+7\ndd = float('inf')\ndef LI(): return [int(x) for x in sys.stdin.readline().split('\\n')]\n# def LI64(n,a,b): return n*(b-a)//(a+b) if a!=b else a*b//n+n*a%mod\nn = int(input())\na = [0]*n\nb = []\nfor i in range(1,n):\n\ta[i] = (b[-1]-1)*(i+1)+(n-i)*i\nprint(max(map(float,list(LI())))//2)"}, "36": {"problem_id": 4036, "answer": "n, k = list(map(int, input().split()))\ns = [0]\nfor i in range(n) :\n\ts.append(s[i] + s[n - 1])\nprint('YES' if k > 1 else 'NO')\n"}, "37": {"problem_id": 4037, "answer": "n, r = list(map(int, input().split()))\np = [0]\nfor i in range(1, n):\n\tp.append(p[-1] + r * (i + 1) // 2)\nprint(n)"}, "38": {"problem_id": 4038, "answer": ""}, "39": {"problem_id": 4039, "answer": "n, r = list(map(int, input().split()))\nr = int(input())\nfor i in range(n):\n\ta, b = [int(x) for x in input()]\n\n\tif a + b > r or b - a <= r and a - b < r: break\nif r == 0: print(\"YES\")\nelse:  \n \tprint(\"NO\")"}, "40": {"problem_id": 4040, "answer": ""}, "41": {"problem_id": 4041, "answer": "s = input()\nn = len(s)\nx = 0\nfor i in range(n):\n  if s[i] == '|': x += 1\nprint(x)"}, "42": {"problem_id": 4042, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n\tprint(int((n/2)))\n"}, "43": {"problem_id": 4043, "answer": "n,d,k = map(int,input().split())\nedges = [0]*k\nfor i in range(n-1):\n  edges[i+1]+=1 if i>=n and i<=k else 0\nif k==0: print(\"YES\")\nelse: \n\tprint(\"NO\")"}, "44": {"problem_id": 4044, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn=int(input())\na,b,x=list(map(int,input().split()))\ns=[0]*n\nfor i in range(1,n):\n  if s[i]!=s[n-i-1] and a>=b and x<=x-a:s.append(a)\nprint(*s)"}, "45": {"problem_id": 4045, "answer": "n = int(input())\ns = input()\na,b,c = list(map(int,input().split()))\nfor i in range(n):\n\tif s[i] not in a: a.append(i)\nprint('YES' if a == b == c else 'NO')\n"}, "46": {"problem_id": 4046, "answer": "n=int(input())\na=list(map(int,input().split()))\np=[0]*n\nfor i in range(n):\n\tp[a[i]-1]=i\nans=0\nif a[0]+1<n:ans+=1\nprint(ans)"}, "47": {"problem_id": 4047, "answer": "n = int(input())\nx = list(map(int, input().split()))\nc = 0\nfor i in range(n-1):\n  x.append(x[i]+i)\nprint(c)"}, "48": {"problem_id": 4048, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n s += i\nprint(s)"}, "49": {"problem_id": 4049, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n-1):\n\ta[i+1] = a.pop(0)\nc = sum(a) - min(b[:n])\nprint(c)"}, "50": {"problem_id": 4050, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n\tl = [int(x) for x in input()]\n\n\tans.append(max(ans[-1] - l[0], ans[:-1]) + 1)\nprint(*ans)"}, "51": {"problem_id": 4051, "answer": "n = int(input())\na = list(map(int, input().split()))\nstack = []\nfor i in range(1, n):\n  if a[i] == stack[-1][0] and i < len(a) - 1 and stack!= [0][i + 1]:\n\tstack.pop()\nprint('YES')\n"}, "52": {"problem_id": 4052, "answer": "n = int(input())\ns = input()\na = [0]*n\nfor i in range(n):\n\ts[i] = list(map(str, input().split()))\nans = 0\nif n % 2 == 1 and s[n // 2] == '1':\n \tans += 1\nprint(ans)\n"}, "53": {"problem_id": 4053, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n\ts[i] = str(bin(i)[2:].count('P')+1)\nprint(''.join(s))"}, "54": {"problem_id": 4054, "answer": "a = list(map(int, input().split(' ')))\nn = len(a)\nx = 0\nfor i in range(n):\n x += a[i]\nprint(x)"}, "55": {"problem_id": 4055, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n\tl.append(a[i-1]+1)\nprint(sum(l))"}, "56": {"problem_id": 4056, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n  if a[i] % 2 == 0: ans += 1\nprint(ans)\n"}, "57": {"problem_id": 4057, "answer": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n-1):\n if a[i]==a[c]:\n  c+=1 \nprint(c)\n"}, "58": {"problem_id": 4058, "answer": "import sys\ninput = sys.stdin.readline\nn,r=list(map(int,input().split()))\na=[int(i) for i in input().rstrip()]\nans=[0]*(r+1)\nfor i,x in enumerate(a):\n  if x==0:ans[i]=0\nif n==1:print(0)"}, "59": {"problem_id": 4059, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(sum(a))"}, "60": {"problem_id": 4060, "answer": "from collections import defaultdict\nimport heapq\nn = int(input().strip() or '0')\ns = list(map(str, input().split()))\nl = []\nfor i in range(n):\n  l.append(s[i])\nheapq.heappush(l, (n-i, i))"}, "61": {"problem_id": 4061, "answer": "s = input()\nn = len(s)\na = [0] * n\nfor i in range(n):\n\ta[i] = a[n - i - 1] + s[(i + 1) % n]\nprint(len(a))"}, "62": {"problem_id": 4062, "answer": "def solve(a, b, c, d, x, y, z):\n  if x == y or y == z: return 0\n#   print(x,y,z)\n\treturn (x * y * z) + (z * x * (y - x) * ((x - y)!= 0) - (c - z - 1))\nsolve(4, 4, 3, 0, 1, 2, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 159, 166, 167, 168, 173, 175, 176, 177, 178, 179, 188, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 223, 228, 229, 234, 239, 240, 241, 242, 243, 245, 247, 256, 257, 258, 263, 269, 270, 271, 277, 281, 283, 293, 307, 311, 313, 322, 326, 327, 328, 329, 331, 336, 337, 338, 340, 341, 347, 348, 349, 353, 360, 361, 366, 367, 368, 369, 372, 373, 378, 379, 384, 389, 400, 401, 409, 416, 418, 419, 420, 421, 432, 423, 424, 425, 426, 427, 428, 429, 430, Qt3D\n"}, "63": {"problem_id": 4063, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(1,n):\n a[i] = (b[-1]+i)\nprint(sum(a))"}, "64": {"problem_id": 4064, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n').split(' ')\nn=int(input())\nh,l,r=list(map(int,input().split()))\na=[0]*h\nfor i in range(h):\n  a[i]=max(a[-1]-i,0)+1\nb=[]\nc=l-r\nwhile(c>0 and b[c]==0):c,b,c+=(l+r)//2\nif(b[l]<c):print(0)"}, "65": {"problem_id": 4065, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "66": {"problem_id": 4066, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n-1):\n  if a[i] % 2 == 0: c += 1\nprint(c)\n"}, "67": {"problem_id": 4067, "answer": "n = int(input())\ns = list(map(str,input().split()))\nl = [0]*n\nfor i in range(n-1,0,-1):\n\tl.append(l[i+1]-i)\nif len(s)==0:print('0')\nelse: print('1')"}, "68": {"problem_id": 4068, "answer": "n, m = list(map(int, input().split()))\nl = [0] * (n + 1)\nfor i in range(n):\n  l[i] = 1 if i % 2 == 0 else 0\nprint(l[n])"}, "69": {"problem_id": 4069, "answer": "#!/usr/bin/env pypy\nimport sys\nsys.setrecursionlimit(10**6)\ndef read_int():\n return int(readline().strip())"}, "70": {"problem_id": 4070, "answer": "n = int(input())\nprint(n)"}, "71": {"problem_id": 4071, "answer": "a = int(input())\nprint(a)"}, "72": {"problem_id": 4072, "answer": "a = int(input())\nprint(a)"}, "73": {"problem_id": 4073, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a[0])"}, "74": {"problem_id": 4074, "answer": "t = int(input())\nfor _ in range(t):\n\tn, k = list(map(int, input().split()))\n\n\ts = sum(1 for i, c in enumerate(bin(n)[2:]) if c == '1' or c!= '0' and n % 2 == 0)\n\n \tprint(s)\n"}, "75": {"problem_id": 4075, "answer": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\nl = [0]*n\nfor i in range(m):\n\tl[i] = 1<<(n-i+1) if i%2==0 else 1 <<(i-m)<<1\nprint(sum(l))"}, "76": {"problem_id": 4076, "answer": "# coding: utf-8\nimport math\na, b = list(map(int, input().split()))\nc = math.sqrt(a)\nd = []\nfor i in range(1, a+1):\n  d.append(math.cos(i*d[0]*b) + i*(b-i) )\nprint('%.6f' % c)"}, "77": {"problem_id": 4077, "answer": "from sys import stdin,stdout\nimport math\nn, m = list(map(int,input().split()))\na = [0]*n\nfor i in range(m):\n\ta[i] = int(math.sqrt(i)) + a[n-i-1]\nprint(len(a))"}, "78": {"problem_id": 4078, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\nl = []\nfor i in range(m):\n   l.append([int(x) for x in input()])\nprint(*l)\n"}, "79": {"problem_id": 4079, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n-1):\n  if a[i] in 'abcdefghijklmnopqrst': s.append('Yes')\nprint(''.join(s))"}, "80": {"problem_id": 4080, "answer": "n, m = list(map(int, input().split()))\nl = []\nfor i in range(m):\n\tl.append([int(input()),i+1] + l[-1][0])\nprint(*l)\n"}, "81": {"problem_id": 4081, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n):\n\tans[i] += 1\nprint(max(ans))"}, "82": {"problem_id": 4082, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(len(a)):\n  if a[i] > l: l.append(i)\nprint(max(l))"}, "83": {"problem_id": 4083, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n\ta[i] += 1\nprint(min(a))"}, "84": {"problem_id": 4084, "answer": "n,a,b=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if i%2==0:c+=1\nprint(c)\n"}, "85": {"problem_id": 4085, "answer": "t = int(input())\nfor i in range(t):\n\tn, m = list(map(int, input().split()))\n\n\tif m % 2 == 0 and m // 2 in [1] + [m//2 for m in set(range(n))::n] or n == m - 1 or m == 1: print(-1)\n"}, "86": {"problem_id": 4086, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\tif a[i] == 1 and s < i: s = i\nprint(s)\n"}, "87": {"problem_id": 4087, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint(a)"}, "88": {"problem_id": 4088, "answer": "import sys\ninput = sys.stdin.readline\nq=int(input())\nfor _ in range(q):\n\ts=list(map(int,input().split()))\n\n\tif s[0] in 'abcdefghijklmnopqrstuvwxyz' and len(s)>1: print(''.join(str(i) for i in s)))\n"}, "89": {"problem_id": 4089, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2*10**5)\nn = int(input())\nl = list(map(int,input().split()))\nd = {}\nfor i in range(n):\n  d[i] = d.get(i,0) + 1\nprint(*d.values())"}, "90": {"problem_id": 4090, "answer": "n = int(input())\nw = [input() for i in range(n)]\ns = set()\nfor i,w in enumerate(w,1):\n\ts.add(str(i+1)+\" \"*(len(s)//2))\nans = s.count(\" \")\nprint(ans)"}, "91": {"problem_id": 4091, "answer": "n,k,a=list(map(int,input().split()))\na.sort()\np=[0]*(k+1)\nfor i in range(n-1):\n\tp[i]=max(a[:i+k])\nans=0\nwhile k>0 and a[k]!=p:ans+=p\nprint(ans)"}, "92": {"problem_id": 4092, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nprint(min(a))"}, "93": {"problem_id": 4093, "answer": "import sys\ninput=sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n\tn,m=list(map(int,input().split()))\n\n\ta=[[0]*(n+m) for i in input().rstrip('\\n')]\n \tans=n\n#\tprint(a,ans)\n"}, "94": {"problem_id": 4094, "answer": "# coding: utf-8\nfrom sys import*\ninput = lambda: list(map(int,stdin.readline().split()))\nn = int(input())\nl = [0]*n\nfor i in range(n):\n\tl[i] = l[n//i+1] + 1\nprint(\"\".join(l))"}, "95": {"problem_id": 4095, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n):\n\ts[i] = s[n - i - 1] + m\nprint(len(s))"}, "96": {"problem_id": 4096, "answer": ""}, "97": {"problem_id": 4097, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb.append(a[i]+b[-i])\n#print(b)\nans = 0\nflag = True\nwhile(len(ans)>0):\n\n\tif(flag == True and a[flag]!=0 and b[n-2]>=ans[:n]) or (flag==True and (ans==0) or ans!=-1 and flag==False): ans += 1; flag = False\nprint(-1)"}, "98": {"problem_id": 4098, "answer": "n, k = list(map(int, input().split()))\na = [int(x) for x in input()]\nl = []\nfor i in range(n):\n\tl.append(a[i])\n#print(l)\ncnt = 0\ndef check(i, j, l, cnt):\n\n\tif l[-1][0] == i and i < j:\n\n \t\treturn 1 - (l[j][1] - i) * (i - j) // (j - 1) == 0, i\n   return 0 if j < i else -1\nif k == 1 and l == [] or l % 2 == 2 and k!= 1: \nprint((n - k) + (n-k)//2)"}, "99": {"problem_id": 4099, "answer": "n,k,m=map(int,input().split())\na=[]\nfor i in range(m):\n  a.append([int(x) for x in str(i)])\nprint(sum(a))"}, "100": {"problem_id": 4100, "answer": "# coding: utf-8\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nfrom collections import defaultdict,Counter,deque,OrderedDict,set,Time,Specialized,Sorted,Arrays,Priority,MaxValue,Precompute,Subtask,UseMem,Wrap,Vector,Reaccel,Implement,UnionFind,\ufffd\nsys.setrecursionlimit(1000000)"}, "101": {"problem_id": 4101, "answer": "def sort_matrix(a):\n  if not a: return 'NO'\n\n  m, n = map(int, input().split(' ')[1::2])  # M, N = len(input()), sorted(list(map(lambda x: 1 if x == 0 else x, [a[:m], a[m+1:]], [0, 0]))) # (M-1) * (N-2) = M*(N+2)*(M+3) # A[i][j] == 1 for i in range(n-4) if i > 0 and j < n-3 else 0 # B[j][i] is 0 if j == m and i == n else 1 # C[n][m]!= 0 for j in reversed(range(m)) if m in [1,-1] and m < 0 or m > 1: print('YES',''.join([str(c) for c in input()]))\n"}, "102": {"problem_id": 4102, "answer": "# cook your dish here\ns = str(input())\nfor i in range(0, len(s)):\n\tif s[i] == '#' and int(str(i)[0]) > 9999999999: print('Yes')\n"}, "103": {"problem_id": 4103, "answer": "from sys import stdin,stdout,setrecursionlimit\ninput=stdin.readline\nN,B,A=list(map(int,input().split()))\ns=[0]\nfor i in range(N):s.append(s[i]-1)\nn=int(input())\nB=sorted([0,0])\nd=A[B[0]]\nc=sum(d)%B\nprint(max(c,d))"}, "104": {"problem_id": 4104, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nstdout.write(str(int(input())))\n"}, "105": {"problem_id": 4105, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nn,k,l=list(map(int,input().split()))\nl=[int(x) for x in input().rstrip('\\n')]\nc=0\nfor i in range(len(l)):c+=(l[i]*(i+1))//2\nprint('YES' if c==k else 'NO')\n"}, "106": {"problem_id": 4106, "answer": "import sys\ninput = sys.stdin.readline\nN, K = list(map(int, input().split()))\nA = [int(i) for i in input()]\nB = [[] for _ in range(N)]\nfor a, b in zip(A, B[1:]):\n  if A[b][0] > K: print(K)\n"}, "107": {"problem_id": 4107, "answer": "n, k = list(map(int, input().split()))\ns = input()\nl = len(s)\nfor i in range(l):\n\ts[i] = s.count('1') + l - i\nprint(sum(k - l) // 2)"}, "108": {"problem_id": 4108, "answer": "s = list(input())\nfor i in range(0, len(s)):\n s[i] ='' + str(i)\nprint('Yes')"}, "109": {"problem_id": 4109, "answer": "# cook your dish here\nn = int(input())\na = [0]*n\nfor i in range(n):\n  a[i] += 1\nprint(a[n-1])"}, "110": {"problem_id": 4110, "answer": "from functools import lru_cache\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2147483647)\nMOD = 10**9+7\ndef calc(n, d):\n\treturn n*(d+1)//2\n \nn = int(input())\ng = list(map(int, input().split()))\ncnt = [0]*g.length\nfor i in range(g[0]+1, g[-1]-1):\n\n\tif i%2 == 0 and cnt[i] < 100 and n-i>=0 and (i-d)*(i+d) == d:\n\n \t\tn -= (d*i) + (n-c*c) - (0<i<d<n and 0<c<g-g+c+g*n+n) *(c==1 or c==2 or d==3 or n==4 or g==g)-1*d - d*2*3*4*5*6*7*8*9*10*11*12*13*14*15*16*17*18*19*20*21*22*23*24*25*26*27*28*29*30*31*32*33*34*35*36*37*38*39*40*41*44*45*46*47*48*49*50*51*53*54*55*56*57*58*59*60*61*64*67*69*72*73*74*75*76*77*78*79*80*81*84*85*86*87*88*89*90*91*94*95*96*97*98*99*100*101*104*106*108*109*110*111*112*113*114*115*116*118*119*120*121*123*124*125*126*127*128*129*131*132*133*134*136*137*138*144*145*146*148*149*151*153*156*157*158*160*161*164*165*166*167*168*169*180*181*193*184*185*186*187*188*189*190*191*192*194*195*196*197*199*280*281*292*303*304*307*311*313*317*332*334*336*339*343*444*446*447*448*449*455*457*456*459*461*463*464*466*469*467*474*479*480*481*484*487*490*491*493*494*509*505*496*498*528*529*516*517*618*220*221*232*233*244*245*246*247*248*250*251*254*260*257*256*263*269*265*270*271*273*274*285*286*288* LEVELUP\ndp = [(0,0),(0,-1)]\nans = 0\nwhile dp[1] <= d and len(dp)>0:ans += pow(10,dp[2])\nprint(ans)"}, "111": {"problem_id": 4111, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0]*n\nfor i in range(n):\n\tl[i] = 1\ncnt = 0\nwhile(len(l)>0 and l[0]-1<i) and (i%2==0 or i//2!=0) : cnt+=1\nans = sum(a)\nprint(ans)"}, "112": {"problem_id": 4112, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque, defaultdict, Counter,OrderedDict,defaults,heapq,bisect,sys\nsys.setrecursionlimit(10**7)\nread = lambda: list(map(int,input().split()))\ndef solve():\n  n,k,x = read(),int(input()),[],0\n\n  for _ in range(n+1)[0:x]:x.append(min(read())-k*(x[0]//2*k)**0.5+read()[1:])\nprint(solve())\n"}, "113": {"problem_id": 4113, "answer": "n = int(input())\ndictionary = {}\nfor i in range(n):\n d = dict(list(map(int, input().split())))\n if dictionary[i]:\n  print(\"Yes\")\n elif d.get(i, 0) == -1 and d[-1][0] == n-i+1:\n\n  if (d[0][1] - i) * (n - 1) > 9 and (i + 1)*(len(d) - 2) < 9:   # i = i + 2*n + 3*i - 4*j - 5*k - 6*l - 7*r - 8*t - 9*u - 10*v - 11*w - 12*x - 13*y - 14*z - 15*h - 16*d - 17*e - 18*f - 19*g - 20*m - 21*o - 22*p - 23*q - 24*(p + 4)): # print \"Yes\", \"No\"\n"}, "114": {"problem_id": 4114, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom heapq import heappush,heappop\nn = int(input())\na = [int(x) for x in input().split()]\nl = [[] for _ in range(n)]\nfor i,x in enumerate(a[::-1]):\n  l[i].append((x,i+1))\nans = []\nheap = [-float('inf')]*n\nwhile len(ans)>0: heap[0][0] = 0\nprint('\\n'.join(map(str,ans)))"}, "115": {"problem_id": 4115, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n\tif s[i] == 'o': cnt += 1"}, "116": {"problem_id": 4116, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a)"}, "117": {"problem_id": 4117, "answer": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n  if l[i]%3==0:c+=1\nprint(c)"}, "118": {"problem_id": 4118, "answer": "def solve(A,B):\n  if A == 0 or B ==0 or A==1: return A*B\n#print(solve(0,0))\nnums = 0\nfor i in range(1,len(B)):   # i is the number of A we can do with A\nnum = B[i-1]*A\nprint(-1)\n"}, "119": {"problem_id": 4119, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i, x in enumerate(a, 1):\n  if x + a[i] > m: break\nprint(min(m, n))"}, "120": {"problem_id": 4120, "answer": "n, m, k = map(int, input().split())\nl = []\nfor i in range(n):\n   l.append([int(input()), i] + [0] * (k + 1))\nans = [-1]\nvisited = set()\ncnt = 0\nwhile k > 0 and l[k - 1][2]!= -1 and len(l) > k + 2 and (l[0][0]) not in visited and cnt < k+2:  # print(ans, visited)\nif ans[ans[-2]] == 0: ans.pop()"}, "121": {"problem_id": 4121, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint('YES' if a[0] == 1 else 'NO')"}, "122": {"problem_id": 4122, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout\nimport math, collections, bisect, heapq, itertools, copy, sorted, deque, heappop, ix64, hex, numpy, float, sys, re, os, time, string, ascii= 'abcdefghijklmnopqrstuvwxyz'\nsys.setrecursionlimit(10 ** 6)\nINF = float('inf')\nMOD = 10 ** 9 + 7\ninput = lambda: int(input())\nstdin.readline().strip()\ndef solve(n, k):\n  if (n == 0 or k > 0) or (k % 2 == 1 and k % 3 == -k // 6): return 0\n\n  return math.ceil(k / 2) + 1 if k / 3 else 1\nprint(solve(1000, 6))\n"}, "123": {"problem_id": 4123, "answer": "n = int(input())\ns = input()\na = list(map(int, s.split()))\ncnt = 0\nfor i in range(len(a)):\n if a[i] == '0':\n  cnt += 1\n elif a.count('0') == len(s) - i - 1 and s[-i-1]!= '1' and a['0'] <= i + 1:   # print(i+1, a)\n else: # for i, x in enumerate(list(range(0, i+2)), 2): # if i == 0: print i\n"}, "124": {"problem_id": 4124, "answer": "s = input()\nt = int(input())\nfor i in range(s):\n\tif s[i] == '0' and t[-i-1] > 0: print(0)"}, "125": {"problem_id": 4125, "answer": "from collections import deque, defaultdict, Counter, OrderedDict\nimport heapq\nn,x=list(map(int,input().split()))\nd={}\nfor i in range(n):\n d[i]=int(input())\n heap=deque(d)\n while heap and heap[0]+d[heap[1]-1]>d: heap.pop()\n  \n ans=max(abs(x-x)+d for x,d in d.items())"}, "126": {"problem_id": 4126, "answer": "s = input()\nn = len(s)\nif s[0] == '1':\n  print('Yes')\nelse: print(\"No\")"}, "127": {"problem_id": 4127, "answer": "#!/usr/bin/env python3\nfrom math import ceil, log, floor, sqrt\ndef __starting_point():\n import sys\n sys.setrecursionlimit(10 ** 6)\n \n # input = open('input.txt', 'r')\n n = int(sys.stdin.readline())\n l = list(map(int, input().split()))\n c = 0\n for i in range(len(l)-1, 0, -1):\n if l[i] == '0': c += 1\n else: break\n print(c)"}, "128": {"problem_id": 4128, "answer": "t = int(input())\nfor i in range(t):\n\tn, a, b = list(map(int, input().split()))\n\n\tif n == a and b == b: print(0)\n"}, "129": {"problem_id": 4129, "answer": "from sys import stdin,stdout\nstdin.write('\\n'.join(map(str,input().split())))\n"}, "130": {"problem_id": 4130, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n-1):\n\tl[i+1] = max(l)\nprint(max(a))"}, "131": {"problem_id": 4131, "answer": "n, m = map(int, input().split())\np = [int(x) for x in range(m)]\nidx = list(map(str, p))\nans = 0\nfor x, y in zip(p, idx):\n  ans += int(y)\nprint(ans)"}, "132": {"problem_id": 4132, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "133": {"problem_id": 4133, "answer": "#!/usr/bin/env pypy3\nfrom sys import stdin,stdout\ninput=stdin.readline\nfor i in range(0,input().rstrip('\\n'))[::-1]:\n a=input()\n b=a.split(' ')\n if(len(a)==1):\n  print('0')\n elif(b[0]=='0' and b[1]!='1'):print('1')"}, "134": {"problem_id": 4134, "answer": "from sys import stdin,stdout,setrecursionlimit\nimport bisect,copy,heapq,collections,re,math,string,tuple,array,functools,fractions,pow,time,socket,socketserver,wins,racket,str,sys,random,mod,inf,popt,floor,int,noretwe,fs,comparisons,gcd,lru_cache,memo,log,reduce,sqrt,rt_,upper_limit,trunc,rint,bool,binarysearch,compress,symbols,decrease,divide,insort,intersection,merge,mov,add,subtract,multiply,tan,tree,sum,round,uppercase=True,lower_bound=10**9+10,integer_mode=lambda:int(input()) if random.rand() else False"}, "135": {"problem_id": 4135, "answer": "n = int(input())\ns = input()\nans = ''\nfor i in range(n):\n\tif s[i]!= 'rodsf' and i % 2!= 0: ans += str(i)\nprint(ans)"}, "136": {"problem_id": 4136, "answer": "a,b=list(map(int,input().strip().split()))\ns=sum(a*b)\nprint(s)"}, "137": {"problem_id": 4137, "answer": "n = int(input())\nfor i in range(n):\n  a,b = [int(x) for x in input().split()]\nprint(max(a, b))"}, "138": {"problem_id": 4138, "answer": "q = int(input())\nfor _ in range(q):\n\tk = [int(x) for x in input().split()]\n\n\ts = sum(list(map(int, str(k[0]))) for k in list(s.split(\" \"))) // len(set(range(1, k[1] + 1))), 0, 1, -1"}, "139": {"problem_id": 4139, "answer": "# cook your dish here\nn = int(input())\nnum = list(map(int, input().split()))\nprint(num[1])"}, "140": {"problem_id": 4140, "answer": "# coding: utf-8\nfrom sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\ns=list(map(str,input().split()))\nfor i in range(n):\n s[i]=s.count(i)\nprint(len(s))"}, "141": {"problem_id": 4141, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10 ** 7)\ndef read_ints(): return list(map(int, sys.stdin.readline().strip().split()))\nread_int = lambda x: readline()[x-1]"}, "142": {"problem_id": 4142, "answer": "s = input()\nprint(s)"}, "143": {"problem_id": 4143, "answer": "n,a,b,c,d,e = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n  s[i+1] = min(s)\nans = 0\nwhile a!=0 and a:\n\n  if a&1:ans+=1\nprint(ans)"}, "144": {"problem_id": 4144, "answer": "mod = 1000000007\nn = int(input())\nl = list(map(int,input().split()))\nprint(len(l))"}, "145": {"problem_id": 4145, "answer": "from sys import setrecursionlimit as sys_limit\ninput = lambda: list(map(int, range(10)))\nn = int(input())\nprimes = [0]*(n+1)\nprime_nums = set()\nfor i in range((n-2)):\n  if (n%i == 0 and n//i > i) and (i!= n-1 and i!= i-i): primes.append(i)\n\n  else: break"}, "146": {"problem_id": 4146, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nN=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(len(a)):\n  if a[i]%2==0:c+=1 \nprint(c)"}, "147": {"problem_id": 4147, "answer": "n, a, b = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n  if i % a == 0: c += a\nprint(c)"}, "148": {"problem_id": 4148, "answer": "def shift(s):\n   return s.translate(str.maketrans(\"ABC\", \"xyz\"));"}, "149": {"problem_id": 4149, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*(n+1)\nfor i in range(len(a)):\n\ts[a[i]-1] = 1\n# print(s, i, s[-1])\nprint(*s)"}, "150": {"problem_id": 4150, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, k = list(map(int, input().split()))\na = [int(x) for x in input()]\ns = \"abcdefghijklmnopqrstuvwxyz\"\nprint(s)"}, "151": {"problem_id": 4151, "answer": "n = int(input())\na=list(map(int,input().split()))\nl = []\nfor i in range(n):\n\tl.append(a[i]*(i+1)%1000000007)\nprint(sum(l))"}, "152": {"problem_id": 4152, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tif a[i] == 1 and i % 2 == 0: ans += 1\nprint(ans)\n"}, "153": {"problem_id": 4153, "answer": "#!/usr/bin/env python3\nfrom collections import deque\nn = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n  s[i] += 1\nprint(max(s))"}, "154": {"problem_id": 4154, "answer": "n, m = list(map(int, input().split()))\nl, r = 0, 0\nfor i in range(n):\n if l == r: l += 1\n elif l % 2 == 0: r -= 1"}, "155": {"problem_id": 4155, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n\tc += a[i]\nprint(c)"}, "156": {"problem_id": 4156, "answer": "n,w = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(0,n):\n\ta[i]+=1\nans = 0\nwhile(len(a)>0 and a[0]-1>=w):\n\n\tans+=a.pop()\nprint(ans)"}, "157": {"problem_id": 4157, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n\ts.add(a[i])\nans = sorted(s, key=lambda x: x[1], reverse=True)\nprint(len(ans))"}, "158": {"problem_id": 4158, "answer": "n = int(input())\nx = list(map(int, input().split()))\ny = [0] * n\nfor i in range(n):\n\tx[i] = (y[y.count(i) - 1] + 1) * (n - i)\nprint(max(x))"}, "159": {"problem_id": 4159, "answer": "# coding: utf-8\nimport sys\nsys.setrecursionlimit(10**6)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nfrom collections import defaultdict as dd, deque\ndef II(): return list(map(int, input().split()))\nII()"}, "160": {"problem_id": 4160, "answer": "#!/usr/bin/env python3\nfrom math import ceil\ndef f(n):\n return n**0.5\nn = int(input())\nx = list(map(int, input().split()))\ny = [0]*n\nfor i in range(x[0], x[1]+1, 1): y.append(y[-1] + i)\nprint(f(10))"}, "161": {"problem_id": 4161, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout,setrecursionlimit\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\ninput = lambda:stdin.readline\ndef readline():return('')\n \n def read(var):return var.rstrip('\\n')\n return(list(map(int,var.split(' ')))[:2]\nfor _ in range(eval(input())) :\n stdout.write('{}\\n'.format(str(i)))"}, "162": {"problem_id": 4162, "answer": "# coding: utf-8\nimport math\nn = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n ans += l[i]\n print(ans)\n"}, "163": {"problem_id": 4163, "answer": "n = int(input())\nd = [0] * n\nfor i in range(n):\n   d[i] = min(d[-1], d.pop(i))\nprint('Yes')"}, "164": {"problem_id": 4164, "answer": "# coding: utf-8\nimport sys\nsys.setrecursionlimit(10 ** 7)\nread = sys.stdin.read\ninput = lambda: read().rstrip()\nn = int(read())\nl = []\nfor i in range(n):\n  l.append(int(input()))\nprint(l)"}, "165": {"problem_id": 4165, "answer": "from sys import stdin, stdout\nn = int(stdin.readline().rstrip())\nl = list(map(int,stdout.write().split()))\nans = 0\nfor i in range(n):\n   if l[i] > ans: ans = i\nprint(ans)"}, "166": {"problem_id": 4166, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6) # can't read input\nn, m = list(map(int, input().split()))\nd = {}\nfor i in range(m):\n   d[i] = int(input())\nprint(*d.values())"}, "167": {"problem_id": 4167, "answer": "n,k = map(int,input().split())\ncnt = 0\nfor i in range(n+1):\n if i % k == 0: cnt += 1\n else: break\nprint(k)"}, "168": {"problem_id": 4168, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**7)\nfrom collections import defaultdict, deque, Counter, OrderedDict, map, namedtuple, type, lambda _: sys.stdin.readline().rstrip()\nINF = float('inf')\nMOD = 10 ** 9 + 7\ninput = lambda: list(map(int, input().split()))\nn = int(input())\ns = [0] * n\nfor i in range(n):\n  s[i] = i\nprint(''.join(s))"}, "169": {"problem_id": 4169, "answer": "n, m = list(map(int, input().split()))\na = [0]*(n+1)\nfor i in range(m):\n  a[i] += 1\nprint(sum(a))"}, "170": {"problem_id": 4170, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "171": {"problem_id": 4171, "answer": "n, k = list(map(int, input().split()))\na = [int(x) for x in input()]\nb = []\nfor i in range(n-1):\n\tb.append(a[i+1]//2)\nprint(k)"}, "172": {"problem_id": 4172, "answer": "n, k = map(int, input().split())\na = [int(i) for i in input()]\nprint(min(a))"}, "173": {"problem_id": 4173, "answer": "q = int(input())\nfor _ in range(q):\n\tn,a,b = list(map(int,input().split()))\n\n\tif(n%a==0 and n%b == 0):\n\n \t\tprint(a+b)\n\n\n\n"}, "174": {"problem_id": 4174, "answer": "n,x = list(map(int,input().split()))\nl = []\nfor i in range(n):\n x = int(input())\n l.append(x)\nprint(sum(l))"}, "175": {"problem_id": 4175, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(int(input()))"}, "176": {"problem_id": 4176, "answer": "# coding: utf-8\nimport sys\nread = sys.stdin.read\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nMOD = 10**9+7\ninput = lambda : int(read())\ndef solve(a,b):\n ans = 0\n for i in range(1,a+1): \n  if(b%i==0): ans+=i*2\n return ans\n"}, "177": {"problem_id": 4177, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**6)\nfrom collections import defaultdict as dd, deque\nINF = float('inf')\nmod = 10**9 + 7\ndef inp(): return list(map(int, sys.stdin.readline().rstrip('\\r\\n').split()[:-1]))\n \nclass SegmentTree(object):\n\n  def __init__(self, data: str): self.data = data[:data.index(min(data) + 1)]; data = [data[i:i+1]]; next_ = dd(defaultdict(list), []) if data else [0] * (len(set(next_)) + 2)  # 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 199, 200, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 264, 265, 266, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 384, 389, 401, 403, 409, 420, 423, 424, 425, 426, 427, 428, 429, 430,o,p,q,r,s,t,u,v,w,x,y,z), d = {(0, 0): 0, (1, 1): 1}, num_segments: dd([], [], key = lambda x: x[1], value = 1)}\ninput()\nprint(*inp())"}, "178": {"problem_id": 4178, "answer": "n = int(input())\nh = list(map(int, input().split()))\nans = []\nfor i in range(n):\n  if h[i] > 0: ans.append(i+1)\nprint(\"Yes\")"}, "179": {"problem_id": 4179, "answer": "n, m, c = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n  s.add(i)\nc = int(input())\nd = {}\nl = [int(x) for x in s]\nwhile(l[-1] not in d.keys() or l[0] < c): l.append(d[l.pop(0)])\nprint(len(s))"}, "180": {"problem_id": 4180, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(l[0])"}, "181": {"problem_id": 4181, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict, deque, Counter, OrderedDict,\n \ndef __starting_point():\n\tN = int(input())\n\n\tA = list(map(int, input().split()))[:N]+[int(i) for i in range(N) if A[i]==0]\n\n \tB = [0, 0] + [(A[0][0], 0)] + [list(range(1, N + 1))] * (N + 2) + [-1]*(B[N-1]+1) * B[B.index(A.pop(0)):N] if B else 0)\n\n"}, "182": {"problem_id": 4182, "answer": "n, m = map(int, input().split())\na = list(map(list, a))\nb = [0]*(n+1)\nfor i in range(m):\n  if a[i]!=b[-1-i]:b.append(a[:i])\nprint(\"No\")"}, "183": {"problem_id": 4183, "answer": "n = int(input())\nt = list(map(int, input().split()))\nfor i in range(n):\n  t[i] += 360 if i % 2 == 0 else input()\nprint(len(t))"}, "184": {"problem_id": 4184, "answer": "def __starting_point():\n N = int(input())\n W = list(map(int, input().split()))\n print(min(W, W))"}, "185": {"problem_id": 4185, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ndef readline(): return list(map(int, input().strip().split()))\nsys.setrecursionlimit(10 ** 7)\nINF = float('inf')\nmod = 10 ** 9 + 7\nMOD = 998244353\nN = int(input())\nmatrix = [0] * N\nfor i in range(N):\n  matrix[i][i] = i\ncount = 0\nwhile count < N-1:\n\n  if count % 2 == 0 and (N - count) % mod == 1: count = count // 2\n"}, "186": {"problem_id": 4186, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n-1):\n  if a[i]%2 == 0: c += 1\nprint(c)"}, "187": {"problem_id": 4187, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n-1):\n\tl.append(a[i+1]-1)\nprint(max(l))"}, "188": {"problem_id": 4188, "answer": "from sys import setrecursionlimit\nimport math\nn = int(input())\nl = list(map(int,input().split()))\nr = 0\nfor i in range(n):\n  if l[i] > 0: r += 1\nprint(r)\n"}, "189": {"problem_id": 4189, "answer": "n = int(input())\ns = input()\nfor i in range(len(s)):\n  if s[i] in \"aeiouAEIOU\": print(i)\n"}, "190": {"problem_id": 4190, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in range(n):\n\tb[i] = b[n - i - 1]\nans = min(a)\nprint(ans)"}, "191": {"problem_id": 4191, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(1,n+1):\n if i%10 == 0: s += 1\nprint(s)\n"}, "192": {"problem_id": 4192, "answer": "from sys import stdin, stdout\nd, t, s = list(map(int,stdin.readline().strip().split()))\ns = int(s)\nans = 0\nfor i in range(t):\n x = s/60\n y = x + y\n ans = (ans + x*y) if x < y else (y*x) + ans\nprint('Yes' if ans else 'No')"}, "193": {"problem_id": 4193, "answer": "from collections import deque\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(int(1e6))"}, "194": {"problem_id": 4194, "answer": "n, m = list(map(int, input().split()))\na = [int(x) for x in input()]\nc = 0\nfor i in range(n):\n  if a[i] < m: c += 1\nprint(c)\n"}, "195": {"problem_id": 4195, "answer": "# coding: utf-8\n\"\"\"\nCreated on Tue Dec  8 22:28:44 2019\nhttps://www.codechef.com/problems/ATCODE-10901\n@author: jianliang  <jianlang at german.ac.lam>\n**# Your code here.  Every reference to a problem is a URL without a quotes\nfrom sys import stdin, stdout\nimport math,bisect,heapq, collections,deque,fractions,random,tart,itertools,sys,float, fractions,math,string,array,re,collections,reduce,functools\n__OREDUS__ = lambda: sys.stdin.readline().rstrip()\ndef solve(n,d):\n  return math.ceil(math.sqrt(d))"}, "196": {"problem_id": 4196, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "197": {"problem_id": 4197, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a[n-1])"}, "198": {"problem_id": 4198, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import deque,defaultdict,Counter,OrderedDict,deque2D,collections,heapq,itertools import compress,combinations,groupby,accumulate import heapq as h,findall,lru_cache,maketrans,repr,deconvertible,sorted,str,bisect,binarysearch,bfs,bal;sys_version = 1 << 15;print((int(input())))\n"}, "199": {"problem_id": 4199, "answer": "n, k = list(map(int, input().split()))\na = [0]*n\nfor i in range(n):\n a[i] += k\nprint(len(a))"}, "200": {"problem_id": 4200, "answer": "n, m = list(map(int, input().split()))\nl = [0] * (n + 1)\nfor i in range(m):\n  if l[i] == m: break\nprint('Yes')"}, "201": {"problem_id": 4201, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2147483647)\nn, m = map(int, input().split())\ngrid = [[0] * n for _ in range(m)]\nfor row, col in zip(input(), input())[::-1]:\n  grid[row][col] = 1 if col == '#' else 2*col\nprint(grid[n][m])"}, "202": {"problem_id": 4202, "answer": "#!/usr/bin/env python3\nfrom collections import deque, Counter, OrderedDict\nimport sys\nsys.setrecursionlimit(10**6)\ninput = lambda: sys.stdin.readline().rstrip()\ndef solve():\n  return int(input())\nsolve()"}, "203": {"problem_id": 4203, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout\ndef read_stdin(s):\n   s=s.replace('A','').replace(\"C\",'')\ns=input()\na,b,c=list(map(str,s))\nif(a=='A' or b =='C'): return True\nelse: return False\n"}, "204": {"problem_id": 4204, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(int(1e6) * 10**15)\nfrom functools import lru_cache\nMOD = 10 ** 9 + 7\ndef LI(): return [int(_) for _ in open(__import__('itertools').lstrip('\\n').read().split(' ')[0] + '.txt')]\nreturn list(map(lambda x: int(x), LI()))\n"}, "205": {"problem_id": 4205, "answer": "n = int(input())\na = list(map(int, input().split()))\nif n % 2 == 0 or a[n // 2] == n: print(\"YES\")\nelse:print(\"NO\")"}, "206": {"problem_id": 4206, "answer": "s = input()\nn = len(s)\nfor i in range(n):\n\tif s[i]%3 == 0: print(i)"}, "207": {"problem_id": 4207, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(0,n):\n\tif a[i] == -10**9 and b[(i+n)%(b.count('1')-1)] == 0:b[n] = i\nprint(max(a))"}, "208": {"problem_id": 4208, "answer": "n = int(input())\nl = input()\na = list(map(int, input().split()))\nc = 0\nfor i in range(n-1):\n\tif l[i] == '?': c += 1 \nprint(c)\n"}, "209": {"problem_id": 4209, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n-1):\n\tans.append(list(range(0, i+2)))\nprint(*ans)\n"}, "210": {"problem_id": 4210, "answer": "n, k = list(map(int, input().split()))\na = [int(x) for x in input()]\ns = 0\nfor i in range(len(a)):\n\tif a[i] % k == 0: s += 1\nprint(s)\n"}, "211": {"problem_id": 4211, "answer": "n = int(input())\na = list(map(int, input().split()))\nmax_sum = 0\nfor i in range(n):\n\tif a[i] > max(a, i + 1) or a.pop(i) == -a[n - 1 - i] : a = [a] + a\nprint(sum(range(1, n-2)))"}, "212": {"problem_id": 4212, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m, q = list(map(int, input().split()))\nA = [0] + [int(input()) for _ in range(n)]\nB = [-1] * m\nfor a,b,c,d in zip(A,B,A[::-1])[1:],B[:]:\n  if a - b <= c <= d: B[a-b] += c - d\nprint(max(B))"}, "213": {"problem_id": 4213, "answer": "n = int(input())\na = list(map(int,input().split()))\nprint(max(a))"}, "214": {"problem_id": 4214, "answer": "n = int(input())\na = list(map(int, input().split()))\nvisited = [0]*n\nfor i in range(n):\n  x1,y1 = a[i],a[n-i+1]\n\n  if (i == 0 or i == n - 1) or (n - i + 1 == i) and (y2 - y1) > 0.000001: visited[(i - x2)%n] = (1 + (2 * y2)) % n\n"}, "215": {"problem_id": 4215, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(max(100, 10**0.5) + 1000)"}, "216": {"problem_id": 4216, "answer": "n = int(input())\nA = [int(x) for x in input().split()]\nB = []\nfor i in range(n):\n\tA.append(i)\nif A[0] == 0: A.pop()\nprint(sum(map(lambda x: x[1], A)))"}, "217": {"problem_id": 4217, "answer": "n, m = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n): s[i+1] += 1\nprint(s[:n])"}, "218": {"problem_id": 4218, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nprint(a[0])"}, "219": {"problem_id": 4219, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n-1):\n  if a[i] == 1: ans[0].append(i+1); break\nprint(max(ans))"}, "220": {"problem_id": 4220, "answer": "def solve(S):\n   if S[0] =='': return ''.join(i for i in range(1, K + 1, 2) if i % 2 == 0 and S.count(' ') % 7 <= i // 2 <= K+1 or S) else''.join([str(ord(c) - ord('a') + i) for c in (S[1:7])])[::-1]\n"}, "221": {"problem_id": 4221, "answer": "#!/usr/bin/env python3\nfrom collections import deque\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\ndef input():\n return input().rstrip()\n \nclass SegmentTree(object):\n def __init__(self, *args, **kwargs): self.data = [None] * (len(args) + 1) if kwargs else (args[0], args[-1])\n\n def add_single_letter_n(n, letter):self[n] = n if letter in self else n +'' + letter\n class Node(SegmentTree):\n\n  __slots__ = ['single','single','single'],'segment'*2 = '\\n'.join(''for _ in range(1, len(Node)) if Node(*n) not in's' or Node(-1) in node for node, n in list(map(str, node.split(\" \"))) if n.startswith(node.__data__))   #seg_tree = Node('S', \"app\", \"apple\")'#end_node_string = \"end\" for i,n in enumerate(sorted(list(range(0, -1,-1)), key=lambda x: x[1], reverse=True))) "}, "222": {"problem_id": 4222, "answer": "n,k = list(map(int,input().split()))\ndp = [0]*(n+1)\nfor i in range(k):\n  dp[i] = 1+dp[n-i-1]\nprint(dp)"}, "223": {"problem_id": 4223, "answer": "n = int(input())\ns = list(map(str, input().split()))\nl = len(s)\nans = 0\nfor i in range(n):\n  if s[i] == \"a\": ans += 1\nprint(ans)"}, "224": {"problem_id": 4224, "answer": "n = int(input())\narr = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += arr[i]\nprint(s)"}, "225": {"problem_id": 4225, "answer": "def solve(A,B,C,K):\n\tsums = []\n\n\tfor i in range(0,len(B)):\n\n \t\tif (B[i] == 0 or A == i) and (C == j for j,c in enumerate(C) if c!= 0) or (A == (i+1) for i,j in zip(list(range(K)),A+B+C)) : s.append(sum(map(lambda x: sum(x*x),sorted(s[:K],reverse=True))) + 1))\n \n#\tprint s[-1]\n'''\nsolve(1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,64,67,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,144,145,146,147,148,149,151,152,153,155,156,157,158,159,160,161,162,164,165,166,167,168,169,180,181,182,183,184,186,187,188,189,190,191,194,195,196,197,198,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,221,222,223,224,225,229,231,232,233,235,236,237,238,239,241,242,243,244,246,247,248,255,257,260,269,270,271,272,273,274,385,386,387,388,389,404,405,406,407,408,409,410,411,412,419,420,421,432,433,434,435,436,437,438,439,440,441,442,444,445,446,457,460,461,464,463,466,467,468,469,479,487,488,489,490,491,494,500,501,502,503,504,509,512,593,609,610,613,614,616,617,659,640,641,654,667,668,669,680,681,688,689,690,694,696,697,698,699,751,700,701,703,714,806,807,808,809,802,810,804,911,(10*9)9(11*12)11(12*13)12(13*14)13(14*15)14(16*16)16(17*17)17(18*18)18(19*19)19(20*20)20(21*21)21(22*22)22(23*23)23(24*24)24(25*25)25(26*26)26(27*27)27(28*28)28(29*29)29(30*30)30(31*31)32(32*33)33(34*34)34(35*36)36(37*37)38(38*38)39(39*40)41(40*41)42(41*42)43(44*44)44(45*45)46(46*47)48(48*49)50(50*54)55(55*56)57(58*59)60(61*61)62(62*63)64(64*64)65(65*65)66(66*67)68(68*68)69(69*69)70(70*70)71(71*71)72("}, "226": {"problem_id": 4226, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict, deque, Counter, OrderedDict, ROUND_HELLO, Union,\n \nclass UnionFind(object):\n\n  def __init__(self, n):   # n is the size of the n-th node. Initialize a dummy data structure to store the initial state of a node, ids of all nodes are 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,148,149,151,152,153,155,156,157,158,159,160,161,162,163,164,166,167,168,169,180,181,182,183,184,186,187,188,189,190,191,194,196,197,198,199,200,203,204,205,206,207,208,209,210,211,212,223,224,225,226,233,238,239,240,241,242,244,251,254,255,257,258,260,269,270,271,272,274,281,283,293,304,305,307,311,313,314,317,331,326,327, 328, 329, 331, 336, 338,339,340,341,372,373,374,376,377,379,382,383,384,389,392,400,419,421,432,433,439,444,445,446,457,461,463,464,469,473,480,481,484,486,487,488,489,490,491,494,501,509,512,575,576,577,587,593,596,607,609,610,613,614,765,668,669,680,681,684,686,688,689,690,694,696,697,698,699,751,700,773,787,797,815,216,217,218,227,229,232,235,266,267,268,275,280,286,287,288,289, 293,309, 313, 314, 315, 316, 319, 320, 322, 323, 325, 327, 333, 334, 335, 337, 346, 347, 348, 349, 360, 367, 366, 373, 378, 383, 384, 389, 400, 409, 402, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 166, 167, 168, 169, 170, 172, 173, 178, 179, 188, 189, 190, 195, 196, 197, 199, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 221, 229, 233, 234, 245, 250, 256, 257, 258, 263, 269, 271, 277, 278, 281, 286, 287, 288, 295, 296, 297, 298, 299, 300, 301, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50,"}, "227": {"problem_id": 4227, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nn, m = map(int, input().split())\ng = [[] for i in range(n)]\nfor i, x in enumerate(input().rstrip('\\n')) :\n  g[x].append((i+1, i+2))\nm = max(m, n-2*m) + 1\nedges = [0]*n\nvisited = set()\nwhile m > 0 or n < m : m-=1"}, "228": {"problem_id": 4228, "answer": "import sys\ninput = sys.stdin.readline\nn, l = list(map(int, input().split()))\np = [0] * n\nfor i in range(n):\n p[i] = int(input())\n l += 1\nans = 0\nwhile l > 0: \n ans = max(p[l], ans)\n print(ans)"}, "229": {"problem_id": 4229, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = [0]*n\nfor i in range(n):\n  d[a[i]] += 1\nprint(sum(d))"}, "230": {"problem_id": 4230, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n  ans.append(a[i])\nprint('\\n'.join(ans))"}, "231": {"problem_id": 4231, "answer": "# coding: utf-8\nimport sys\nsys.setrecursionlimit(10**6)\nfrom collections import defaultdict as dd, deque\ninput = lambda: sys.stdin.readline().rstrip()\nmod = 10**9+7\ndef gcd(a,b): return b if a<b else a if b>a else b\nn = int(input())\nl = [int(x) for x in list(map(int,input().split()))]\nfor i in range(1,n):\n\tl.append(l[i-1]*(i+1))\nprint(n//2)"}, "232": {"problem_id": 4232, "answer": "n, k = list(map(int, input().split()))\na = [int(i) for i in input()]\ns = sum(a)\ni = 0\nwhile i < len(s) and s[i] <= k: i += 1\nans = []\nfor j in range(len(ans)):\n\tif ans[j] > s: ans.insert(j, '0')\nprint(0)"}, "233": {"problem_id": 4233, "answer": "n,m = map(int,input().split())\nl = []\nfor i in range(n):\n\tx,y,s = [],int(input()),[],list(map(lambda x:x.count('*'),l))[0]\n\n\tl.append(x)\nc = list(zip(l,l[1:]))\nprint('\\n'.join(c))"}, "234": {"problem_id": 4234, "answer": "n = int(input())\ns = input()\ncount = 0\nfor i in range(len(s)):\n\tif s[i] == 'a' and count == 0: count += 1\nprint(count)"}, "235": {"problem_id": 4235, "answer": "n, m = map(int, input().split())\ngraph = [[] for _ in range(n)]\nfor i, j in [(0, 1), (1, 0)]:\n\tgraph[i].append(j)\nvertices = [0] * m\nedges = 0\nwhile len(graph) > 0:\n\n\tedge = graph[edge[-1]].pop(0) # edge is one-indexed\n \tcnt = 1 # count the current connected component (i.e. vertex, edge, vertex[0])\n#\tprint(edge, cnt, \"edge:\", edge[:-1])\n\n   # for i in graph: # if there is an edge between vertex i and vertex j, then add 1 to its count. If there isn't that, add 0. Else add -1. (Note that it's not necessary to add the same edge twice, as there's no need to do that in this example.)\n"}, "236": {"problem_id": 4236, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn,m=list(map(int,input().split()))\nl=[int(i) for i in input().rstrip()]\nfor i,j in zip(l,l[1:]):\n\tif j-1>=0 and i!=j and l[i][0]>j-i and (i-j+1)%2==1 and j<m and m>i:print(j)\n"}, "237": {"problem_id": 4237, "answer": "def solve(A,B,C,d):\n  if (C%d == 0) and (D%C ==0): return 1; else: return 0;"}, "238": {"problem_id": 4238, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += a[i]\nprint(s)"}, "239": {"problem_id": 4239, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(1,n):\n s+=a[i]\n if s>0 and a[n-i-1]==9: \n  s-=1\nprint(s)"}, "240": {"problem_id": 4240, "answer": "from collections import deque\ns,t = input()\na = list(map(int,input().split()))\ncnt = 0\nfor i in range(len(a)):\n if a[i] == t: cnt += 1\n else: print(\"No\")\n"}, "241": {"problem_id": 4241, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict, deque, Counter, OrderedDict\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\ndef input():\n return(input())\n\"\"\"\na = list(map(int,input().split()))\nb = dict()\nfor i in range(len(a)):\n b[a[i]] = i\nans = 0\ni = 1\nwhile i < len(b) - 1: \n ans += b.get(i-1,0) + (i+1)//2\n i += 2\nprint(ans)"}, "242": {"problem_id": 4242, "answer": "# cook your dish here\nfrom math import gcd,sqrt,ceil,floor,log2,factorial,pow,gcd\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2147483647)\nn=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n-1):\n  l.append(a[i+1])\nprint(*l)"}, "243": {"problem_id": 4243, "answer": "#!/usr/bin/env python3\nfrom collections import deque, defaultdict\nimport heapq as hq\ndef solve():\n  n = len(input())\n\n  for i in range(n-1, -1,-1):\n\tif i%2==0 and i!=0:\n\n\t\theapq.heappushpop(q,(i,i+q[0]))\nsolve()\n"}, "244": {"problem_id": 4244, "answer": "n = int(input())\nx = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n-1,0,-1):\n if x[i] == 0: \n  s.append(i)\n else: break\nprint(s)"}, "245": {"problem_id": 4245, "answer": "from sys import stdin\ninput=stdin.readline\nn=int(input())\na,b=list(map(int,input().split()))\nfor i in range(n):\n\ta.append(b)\nprint(max(a))"}, "246": {"problem_id": 4246, "answer": "#!/usr/bin/env python3\ndef __starting_point():\n s = input()\n t = list(input())\n for i in range(len(s)):\n  if s[i] == 'rainy' and t[-1]!= 'pleet' or (i - 1 == i - 2 and len(t) % 3 == 0 and (t[0] +'' * (2 * i)) % 2 == 1): break\n print(1)\n"}, "247": {"problem_id": 4247, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(max(10**9) + 1000)\nfrom collections import defaultdict as dd, deque\ndef input(): return sys.stdin.readline().rstrip('\\r\\n')\ninput()\nmod = 10 **9 + 7\ndd = dd.from_iterable(list(map(int, input().split())))\nN = int(input())\nans = 0\nfor i in range(N):\n\tans += (dd[i] - dd[N-1-i])\nprint(ans)"}, "248": {"problem_id": 4248, "answer": "n = int(input())\npoints = []\nfor i in range(n):\n x1, y1 = list(map(int, input().split()))\n points.append(x1 - (y1*(y2 - y2)))\nx2 = points[0][0]\ny3, x4,x5,y6 = -1000, -2000, 2000\n \nprint(\"%.6f\" % x2)"}, "249": {"problem_id": 4249, "answer": ""}, "250": {"problem_id": 4250, "answer": "n, k = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  d[i] = sorted(d.get(i, 0), reverse=True)[:k]\nprint(k)\n"}, "251": {"problem_id": 4251, "answer": "n, m = list(map(int, input().split()))\na = []\nfor i in range(n):\n   a.append([int(x) for x in input()])\nprint(max(a))"}, "252": {"problem_id": 4252, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(n):\n\tif s[i] == 'xxx': cnt += 1\nif len(s) == n: print(0)"}, "253": {"problem_id": 4253, "answer": "import math\ndef __starting_point():\n  \n import sys\n sys.setrecursionlimit(100000)\n input=sys.stdin.readline\n n=int(input())\n a=list(map(int,input().split()))\n c=0\n for i in range(1,n+1):\n\n  if(a[i]*(i+2)<=math.sqrt(2*i)):c=i\n print(c)"}, "254": {"problem_id": 4254, "answer": "def __starting_point():\n  s, w = list(map(int, input().split()))\n\n  safe = set(s + [i for i in range(w)) if i > w else [] )  # safe, safe[-1] = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,138,139,140,141,144,145,146,148,149,151,152,153,155,156,157,158,159,160,161,162,163,164,166,167,168,169,180,181,182,183,184,185,186,187,188,189,190,191,194,195,196,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,227,229,222,233,234,235,256,257,269,271,273,274,385,388,389,390,466,469,479,487,488,489,490,491,494,501,503,509,512,609,307,311,313,317,318,320,331,332,343,344,346,347,348,353,359,367,373,379,383,404,406,409,419,421,432,433,434,435,446,457,460,464,467,468,480,481,484,486,497,518,519,520,641,643,654,659,661,673,674,illac,677,678,689,690,694,696,698,699,800,801,804,605,606,607,613,614,616,627,629,640,653,668,669,680,681,684,686,697,778,683,704,775,787,797,795,806,807,808,809,810,pose,pose[1],pose[0]\n :__fast_input_word = input()[:len(input())]\n# Fast IO\nfastio = lambda: any(a in safe for a in input())\n"}, "255": {"problem_id": 4255, "answer": "#!/usr/bin/env python3\nfrom math import ceil\ndef gcd(a,b):\n\tif b == 0: return a, b\n   if a > b: b, a = b-a, a-b\ngcd_a = (a*b)//(b*a)\nfor i in range(int(input()),0,1): gc,gc=gc,(gc-1)*gc\nprint((gc))\n"}, "256": {"problem_id": 4256, "answer": "# coding: utf-8\nimport sys\ninput = sys.stdin.readline\nn = int(input())\na, b, c = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  if a[i] == 0 and b[(i+1)%a[-1]]: s += 1\nprint(s)\n"}, "257": {"problem_id": 4257, "answer": "# cook your dish here\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(10**5))"}, "258": {"problem_id": 4258, "answer": "# coding: utf-8\nimport math\nn = int(input())\na,b,t = list(map(int,input().split()))\ncnt = 0\nfor i in range(n):\n  if (i*i) % 2 == 0: cnt += 1\nprint(cnd)\n"}, "259": {"problem_id": 4259, "answer": "# coding: utf-8\nimport sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nfrom functools import lru_cache\nsys.setrecursionlimit(10**7)\nn = int(input())\na = list(map(int,input().split()))\nb = [int(i) for i in range(n)]\nif a[0] < b[-1]:\n  print('OK')\nelif (a[1] == 0) and (b[n-2] > a.count(0)):\n\tprint('NG')"}, "260": {"problem_id": 4260, "answer": "# https://atcoder.jp/contests/arc086/submissions/11495764\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nfrom heapq import heappush,heappop\ndef get_heap(): return [int(x) for x in map(int, input().split())]\nn = int(input())\nfor _ in range(n):\n\tx, y, z = list(map(lambda x: x*x+y*y+z*z,-x,-y,-z)), [], [x]\n\n\tif x == 1: z[0] += 1\n \telif y == 2: y[1] -= 1   # (x-1) - (y-2) + (z[2] - x) = 2*(y[3] + x[4]) - 3*2*3 = 5*5*4 = 6*6*7 = 8*8*9 = 10*10 = 11*11 = 12*12 = 13*13 = 14*14 = 15*15 = 16*16 = 17*17 = 18*18 = 19*19 = 20*20 = 21*21 = 22*22 = 23*23 = 24*24 = 25*25 = 26*26 = 27*27 = 28*28 = 29*29 = 30*30 = 31*31 = 32*32 = 33*33 = 34*34 = 35*35 = 36*36 = 37*37 = 38*38 = 39*39 = 40*40 = 41*41 = 42*42 = 43*44 = 45*46 = 47*47 = 48*48 = 49*49 = 50*50 = 51*51 = 52*52 = 53*54 = 54*55 = 55*56 = 57*57 = 58*59 = 60*60 = 61*61 = 63*64 = 65*66 = 67*68 = 69*69 = 70*71 = 72*73 = 74*74 = 75*75 = 76*76 = 77*78 = 78*79 = 79*80 = 82*83 = 84*86 = 87*88 = 89*89 = 90*90 = 91*91 = 92*93 = 94*94 = 95*96 = 97*97 = 100*100 = 101*101 = 102*103 = 104*104 = 105*105 = 106*106 = 107*108 = 108*109 = 110*111 = 111*112 = 113*114 = 115*116 = 117*117 = 118*118 = 119*119 = 120*120 = 121*121 = 122*122 = 123*123 = 124*124 = 125*125 = 126*126 = 127*128 = 129*129 = 132*132 = 133*134 = 134*135 = 136*136 = 137*137 = 138*138 = 139*141 = 144*144 = 145*146 = 147*147 = 148*148 = 149*149 = 150*151 = 152*152 = 153*153 = 154*154 = 155*156 = 157*157 = 158*158 = 159*160 = 160*161 = 161*162 = 162*163 = 164*164 = 165*166 = 167*168 = 168*169 = 169*178 = 178*180 = 179*181 = 182*184 = 185*186 = 187*187 = 188*188 = 189*189 = 190*190 = 191*191 = 192*192 = 193*193 = 194*194 = 195*196 = 197*197 = 198*199 = 204*206 = 207*207 = 208*208 = 209*209 = 210*220 = 211*221 = 232*232 = 233*233 = 234*234 = 235*236 = 237*237 = 238*238 = 239*241 = 246*242 = 243*244 = 245*246 = 247*247 = 256*256 = 257*257 = 258*258 = 259*263 = 260*261 = 261*262 = 266*272 = 267*273 = 268*274 = 269*275 = 276*285 = 277*280 = 281*282 = 282*283 = 283*284 = 286*287 = 288*289 = 293*296 = 298*299 = 300*307 = 313*314 = 320*321 = 322*323 = 326*326 = 327*327 = 328*328 = 329*331 = 330*332 = 336*337 = 337*339 = 342*343 = 344*344 = 345*346 = 346*347 = 347*348 = 349*350 = 353*355 = 352*353 = 356*356 = 363*362 = 364*364 = 369*376 = 373*379 = 378*"}, "261": {"problem_id": 4261, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(2147483647)"}, "262": {"problem_id": 4262, "answer": "# coding: utf-8\nimport sys\ninput = sys.stdin.readline\nn = int(input())\np = list(map(int, input().split()))\nq = [0]*n\nfor i in range(n):\n   p[i] = i+1\nans = []\na, b = 0, 0\nwhile a<=n and q[a]==q[b]:\n\ta += 1\nprint(a-b)"}, "263": {"problem_id": 4263, "answer": "# cook your dish here\ndef subst(string, length):\n length -= 1\n for i in range(length, 0, -1): \n  string[i] = i\n return string\n"}, "264": {"problem_id": 4264, "answer": "#!/usr/bin/env python\nfrom sys import stdin,setrecursionlimit\nimport bisect as bs\ndef input(): return sys.stdin.readline()[:-1]\n \nn = int(input())\nodds = [int(x) for x in input().split(' ')]\nans = 0\nfor i in range(n-1):\n if n%2 == 0: ans += 1\nprint(ans)"}, "265": {"problem_id": 4265, "answer": "#!/usr/bin/env pypy3\nimport sys\nsys.setrecursionlimit(10**7)\nfrom collections import deque\ndef input(): return sys.stdin.readline()[:-1].strip()\ninput()"}, "266": {"problem_id": 4266, "answer": "def solve(X, Y, Z):\n  if X == Y == Z: return Y\n\n  for i in range(0, len(Z) - Z[0] + 1, 2):   # \u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u6ca1\u6700\u77ed\u8ddd\u79bb\u7684\u957f\u5ea6\u76f8\u7b49\u4e8e\u8ba1\u7b97\u76ee\u524d\u5f97\u5230\u4e00\u4e2a\u659c\u533a\u95f4\u7684\u7a7a\u683c\u7684\u4e24\u70b9\u6570\u91cd(\u7b2c\u4e00\u6b65\u6bd4\u8f83\u4e00\u7ec4, \u5c3e\u7136\u53ef\u4ee5\u51fa\u73b0, \u6211\u4eec\u53ea\u9700\u8981\u4e00\u6b21\u8c03\u7528\u6761\u4ec0\u4e48\u529f\u80fd, \u8fd9\u6837\u66f4\u65b0\u81ea\u8eab\u7684\u6392\ufffd\u0442\u624d\u653e\u5165, \u7ed3\u675f, \u9023\u79cd, \u4f46\u662f\u6211\u4e0d\u60f3\u8c61\u7684\u60c5\u51b5\u8bd5\u56e0\u4e3a\u5b83\u90fd\u4f1a\u89e3\u51b3\u95ee\u9898\u3002 \u5728\u67d0\u4e00\u9875\u4e0b\u6765\u7684\u6587\u4ef6\u8fd9\u9053\u5bb3\u4e5f\u5c31\u662f\u628a\u6240\u6709\u7b54\u6848\u53d8\u6210\u4e86\u4e00\u4e9b\u7a97\u53e3\u3002 \u7a9e\u7779, \u6700\u540e\u9762\u4e00\u76f4\u8e0a\u5c0f\u7684\u8303\u56f4\u5185\u538b\ufffd\u7f29\u4ea4\u6362\u3002 \u8981\u907f\u514d\u8d70\u7684\u4e00\u90e8\u5206\u3002\n"}, "267": {"problem_id": 4267, "answer": "# -*- coding: utf-8\n\"\"\"\ncreated by shuangquan.huangq at 1/8/16 10:00AM (\ufffd\ufffd)\n__author__ = \"Shuanguo\" in charge of maintaining and distributing this\nversion of Codeforces.org (C# and Java) for non-Lisbon (Ruby, Python,\nJava).\nSee http://docs.oracle.com/3.5/library/functions.html\nthe instructions are provided only for information and convenience of\nyou.  Do not attempt to find the source code for the corresponding\noperator or built-in calculator. use ```(\nsys.setrecursionlimit(10**6) == sys.maxsize\n'''\nimport math,string,itertools,heapq,collections,re,sys,random,time,copy,functools\nfrom collections import defaultdict,Counter,deque,OrderedDict,set,TimeError,Sqrt,where,itemgetter,getitem,__next__,frozenset,Hash,sorted,dtype,integer,notoretop,nlargest,nonmul,mod,pow,concatenated,sub,str,int,float,floord,truediv,uppercase,isdivore,isn,maketrans,decompose,divisor,contains,long,inverse,infinity,nanoscore,num,factorial,lucp,power,popen,primes,squares,round,tan,tile,timesteps,seconds,uplr,vary,rfloor,trunc,map,reduce,strict,nearest,most_common_value,seperator,times,threesort,hundred,copys,polyp), islote(math.log10(x) + 1, 2)!= -1, 1 <= x <= 40, True, False, math.sqrt((x - x0)**(1/4)) == 2.0, float, ord, int, nonlocal values, ascii,ceil,plt,ptrs,txt,nov,welch,ci,jp,clo,coa,ia,lcw,mn,we,si,ja,le,nl,gh,tw,rf,ha,rup,gcd,fg,cog,computate,code,isp,defmatch,itersearch,isfile,islower,isspace,less than,indefinite,if,javascript,kotlin,python,ruby,crystal,typescript,julia,fortran,goffees,floyd,bisect,inspect,intervals,latent,implement,smallest,greater,i18,idie,italian,boring,inexplospace,lis(),java,java_,C++,Rust,Python,Haskell, Nim, Julia,Jul,Nimpanist,Minipboth,Minix,Mim,Linus,Oscar,ryliche,Richiesta,Salmon,iolet,green,blue,white,black,gold,silver,magenta,cyrens,avanang,avocado,eelan,esoteric,breezy,enums,array,ctypes,encoding,binary,bytes,attributes,Dart,Esoloman, djdee,dfjordan,djenf\u00ebst,globally,high school,ieme,ini,ibu,ivy,me, apologise,mare,mi,ministrie,nomine,priori,prime,rom,rap,spanish,snakethorn,sweater,casual,constant,cartes,acos,algebra,cel,cpp,csdk,cccnt,cdcsharp,ddd,dy Playoffs,egmanac,efactors,edible,disjoint,discriminable,differe,extended,exactly,global,inc,ihg,ig,ll,linput,next,pm,polish,pure,tinpaint,speak,too_low,world_limit,uni,urb,tsy,vvv,vering_ eyes,home,legitimistical,language_system,math_class,php, pressuring,outof_range,judge,innsize,ir,ip,minute, 51,52,53,54,55,57,64,65,66,68,69,75,76,77,80,84,86,97,98,99,100,101,103,104,105,106,108,109,110,111,124,"}, "268": {"problem_id": 4268, "answer": "from collections import deque\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**6)\nmod = 10**9+7"}, "269": {"problem_id": 4269, "answer": "def main():\n\ts = ''.join(str(i) for i in map(int, input().split(' ')))\n\n\tif s[0] == '0' or len(s) == 1: return 'Bad\\n'\n \telse: print('Good')\n"}, "270": {"problem_id": 4270, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in range(n):\n\tb[i] = b[n - i + 1]\nprint(max(b))"}, "271": {"problem_id": 4271, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = [satisfaction(i) for i in a]\nc = sum(b)\nans = 0\nfor i, j in zip(a, b):\n  ans += j - i + 1\nprint(ans)"}, "272": {"problem_id": 4272, "answer": "n = int(input())\ns = list(map(int, input().split()))\nprint(len(s))"}, "273": {"problem_id": 4273, "answer": "n = int(input())\ns = list(map(int, input().split()))\nprint(s[n-1])"}, "274": {"problem_id": 4274, "answer": "n, m = map(int, input().split())\na = []\nfor i in range(n):\n  if i % 2 == 0: a.append(i)\nprint(\"Yes\")"}, "275": {"problem_id": 4275, "answer": "# coding: utf-8\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nfrom collections import defaultdict as dd, deque\ndef read_input(): return list(map(int, input().split()))\nread = lambda x: read(x)"}, "276": {"problem_id": 4276, "answer": "from collections import deque\nn,t = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n  a[i+1] = i\nans = 0\nwhile(a[-1]+1<n and t>=t+a.count(t)//2):\n\n  if t%2!=0:ans += 1\nprint(ans)"}, "277": {"problem_id": 4277, "answer": "n, A, B = list(map(int, input().split()))\nX = [0] * (n + 1)\nfor i in range(n): X[i] += A\nprint(X[-1])"}, "278": {"problem_id": 4278, "answer": "n = int(input())\na = list(map(str,input().split()))\nc = [0]*n\nfor i in range(n):\n  if a[i] =='':c.append(c[-1] + 1)\nprint(len(a))"}, "279": {"problem_id": 4279, "answer": "q = int(input())\nfor i in range(q):\n  k = list(map(int, input().split()))\n\n  if k[0] % 2 == 0:\n\n\tk = k.pop(0)\n\tfor j in k: print(j, end = \"\")\n"}, "280": {"problem_id": 4280, "answer": "n,k = map(int,input().split())\nc = [0]*(n+1)\nfor i in range(k):\n\tx,y=map(list,[int(input())-1 for _ in input().rstrip(\"\\n\").split()])\n \tc[x] += 1 if x!=y else c[y]\nprint(len(c))"}, "281": {"problem_id": 4281, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i] - 1\nprint(s)"}, "282": {"problem_id": 4282, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0] * n\nfor i in range(n):\n\tx, y = input(), input()\n \tp[x] = (y - 1) * x + (a[y] if y else 0)\n\n\tif x % 2 == 0 and x // 2 not in p and p[0][1] == x: p.append(x)\nprint(*p)"}, "283": {"problem_id": 4283, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "284": {"problem_id": 4284, "answer": "q = int(input())\nfor i in range(q):\n\tn,a,b = list(map(int,input().split()))\n\n\tmax_a = max(a-b,n-a) + max_b=max(b - a, b) - min(n - b, (a - n) * b + a) "}, "285": {"problem_id": 4285, "answer": "import sys\ninput = sys.stdin.readline\nn=int(input())\ns=input().rstrip()\nprint(len(s))"}, "286": {"problem_id": 4286, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\nedges = [[] for i in range(n)]\nfor i, v in enumerate(list(input()), 1):\n  edges[v].append(i)\nsums = [0] * n\ndef dfs(v, s): return sum(s[:v] + s[-v+1:])\nvisited = set()\nans = float('inf')\ncost = -1\ndfs(0, set())\nwhile cost!= s and len(seen) > 0:\n\n  for v, u in seen[s]:\n\tif visited & (1 << (s - v)): cost = min(cost, (v + 1) // 2)\n\n\tseen[u] = v\n#  print(ans, nums, seen, visited, ans) \n"}, "287": {"problem_id": 4287, "answer": ""}, "288": {"problem_id": 4288, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10 ** 6)\nfrom math import ceil, log, floor, sqrt, inf, factorial, islice\ndef input(): return sys.stdin.readline().rstrip()\n \nclass BIT(object):\n\n  def __init__(self, n): self.n = n; self = list(map(int, str(n)))   # n is the number of elements in list, i.e. 0, 1, 2,..., n - 1.  Initial state of BIT is a list of integers  0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  74  75  76  77  78  79  80  81  83  84  85  86  87  88  89  90  92  94  95  96  97  98  100  101  103  104  105  108  109  110  113  114  115  116  117  118  119  128  129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144  145  146  147  148  149  155  156  157  158  159  166  167  168  170  173  175  180  181  182  183  184  185  186  187  188  189  190  191  194  197  198  199  200  239  241  234  245  246  247  254  277  278  281  283  293  307  313  317  331  332  334  337  347  348  349  353  356  365  368  370  371  372  373  374  376  377  378  379  384  389  369  398  399  400  401  409  412  419  422  423  424  425  266  267  268  269  270  271  272  273  274  279  280  292  295  298  299  300  319  326  327  328  330  338  341  342  344  345  367  392  364  396  405  499  503  ----\nBIT(0) = [0] * (10**6 + 1) * [1] = 10**9 + 2 * 5 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19 * 20 * 21 * 22 * 23 * 24 * 25 * 26 * 27 * 28 * 29 * 30 * 31 * 32 * 33 * 34 * 35 * 36 * 37 * 38 * 39 * 40 * 41 * 42 * 43 * 44 * 45 * 46 * 47 * 48 * 50 * 52 * 54 * 56 * 57 * 58 * 59 * 61 * 62 * 63 * 64 * 65 * 66 * 67 * 68 * 69 * 74 * 78 * 79 * 82 * 84 * 85 * 88 * 90 * 95 * 96 * 97 * 100 * 103 * 104 * 105 * 107 * 108 * 109 * 110 * 113 * 114 * 115 * 116 * 117 * 128 * 137 * 138 * 139 * 140 * 141 * 142 * 143 * 144 * 145 * 146 * 148 * 155 * 157 * 158 * 159 * 166 * 167 * 168 * 169 * 173 * 175 * 180 * 181 * 182 * 183 * 184 * 185 * 187 * 188 * 189 * 190 * 191 * 194 * 198 * 200 * 232 * 293 * 307 * 313 * 317 * 331 * 332 * 294 * 325 * 326 * 328 * 336 * 338 * 347 * 349 * 353 * 356 *acus*\n"}, "289": {"problem_id": 4289, "answer": "# coding: utf-8\nimport math\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n  b[i] = math.floor(math.sqrt(b[n-i-1]))+1\nprint(('\\n'.join(str(x) for x in b)))\n"}, "290": {"problem_id": 4290, "answer": "n,m=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(i%2)\nprint(sum(a))"}, "291": {"problem_id": 4291, "answer": "n,q=list(map(int,input().split()))\ns=input()\nd={}\nfor i in range(n):\n\ta,b,c,d,e,f,g,h,i,j,k,l,r,w,x,y,z=s.replace('A','',i)+' '*(abs(i-x)+1)\nif d[a]==d[b]:\n   print('0')\nelif s=='A' and len(d)==len(s) and s[-1]!='C' or s.count('C')!=0 and d.get(c,-1)!=-1:print('1')"}, "292": {"problem_id": 4292, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nn,k = list(map(int,input().split()))\nl = []\nfor i in range(n):\n  a,b,c = map(lambda x:int(x)-1 if x%c else x//c for x,y in zip(l,l[1:]))\n\n  l.append((a, b, c)) \nprint(min(k, l[-1]))"}, "293": {"problem_id": 4293, "answer": "# coding: utf-8\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom heapq import heappush,heapify\ndef read_ints(): return list(map(int, input().split()))\nread_int = lambda x: int(x) - x.replace('0','')"}, "294": {"problem_id": 4294, "answer": "# -*- coding: utf-8\n\"\"\"\ncreated by\ncodechef import numpy as np\nfrom scipy.sparse.csparse import csr_matrix\nimport sys\nsys.setrecursionlimit(10 ** 6) # setopt(maxsize=10**2)\ninput = sys.stdin.buffer.readline\ndef solve():\n x,a=map(int,input().split())\n y=int(x)-1\n if x<=y:print(0)"}, "295": {"problem_id": 4295, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n ans += abs(a[i]-i)\nprint(ans)"}, "296": {"problem_id": 4296, "answer": "def main():\n  s = list(map(int, input().split()))\n\n  if len(s) == 0: return\nfor i in range(97, 123456): s[i] = '0'\nmain()\n"}, "297": {"problem_id": 4297, "answer": "#!/usr/bin/env python\nfrom sys import stdin, stdout\nn = int(stdin.readline().rstrip())\nprint(6)\n"}, "298": {"problem_id": 4298, "answer": "from sys import stdin, stdout\nn,d = list(map(int,stdin.readline().split()))\na = [0]*n\nfor i in range(1,n):\n a[i] = d\nprint(a[-1])"}, "299": {"problem_id": 4299, "answer": "#!/usr/bin/env python3\nfrom collections import deque\nn = int(input())\ns = list(map(int, input().split()))\nans = ''\nfor i in range(n):\n  if s[i] == '6' and n - i + 1 >= 9:   ans += 'n'\nprint(ans)\n"}, "300": {"problem_id": 4300, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in range(n):\n\tb[i] = b[-1] + i\nans = sum(b)\nprint(ans)"}, "301": {"problem_id": 4301, "answer": "n = int(input())\na = list(map(int,input().split()))\nans = [0]*n\nfor i in range(n):\n  ans[i+1] = max(a)\nprint(*ans)"}, "302": {"problem_id": 4302, "answer": "# coding: utf-8\nfrom sys import stdin, stdout\ninput=stdin.readline\na,b=map(int,input().split())\nc=0\nfor i in range(2,a+1):\n if(i>b):c+=1\nprint(c)"}, "303": {"problem_id": 4303, "answer": "n, k = list(map(int, input().split()))\nl = []\nfor i in range(n):\n  x = int(input())\n\n  l.append(x)\nc = 0\na = l[-1]\nb = len(l)-1\nwhile(a>0 and b>n-k-a-b+1):\n\n\tc += 1\n\tl.pop()\nprint(c)"}, "304": {"problem_id": 4304, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n s += l[i]\nprint(s)"}, "305": {"problem_id": 4305, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n if a[i] > 4: \n  ans += 1\nprint(ans)\n"}, "306": {"problem_id": 4306, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**6)\nfrom collections import deque, defaultdict, Counter, OrderedDict, bisect, heapq\nINF = float('inf')\nMOD = 10 ** 9 + 7\ndef solve(a, b, c, d):\n  return (a + b + c + d) % MOD if MOD % 2 == 1 else (d + (c + a) // 2) / 2\nsolve(0, 0, -1)"}, "307": {"problem_id": 4307, "answer": "def is_odd(n):\n if (n%8 == 0): return False\n else: return True\n"}, "308": {"problem_id": 4308, "answer": "n,k = list(map(int,input().split()))\nc = 0\nfor i in range(n-k+1):\n if i == 0: c += 2\n else: break\nprint(c)\n"}, "309": {"problem_id": 4309, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n-1):\n  if a[i] == b[-i]: b.append(i)\nprint(''.join(b))"}, "310": {"problem_id": 4310, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nfrom collections import defaultdict as dd, deque\ndef LI(): return list(map(int, input().split()))\n#def LIR(x): return [i for i in x if i % x == 0]\na=LI() #a = int(input())\nfor _ in range(a):\n\tx=a[-1] #x = a[:-1]+1\n \tif x==0: print(0)"}, "311": {"problem_id": 4311, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict, deque, OrderedDict, Counter,\n \ndef __starting_point():\n\ts = int(input().strip())\n\n\ta = [0] + list(map(int, input().split())) + [int(x) for x in range(s)] + [(a[0], a[1]) for a in zip(*[iter(list(zip(*a))] for _ in [a] if _])]\n\n \tfor i, ai in enumerate(ai[::2], 1): a.append(i)\n"}, "312": {"problem_id": 4312, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10 ** 6)\nINF = float(\"inf\")\nMOD = 10 ** 9 + 7\nfrom math import ceil, floor, sqrt\ndef solve(a, b, c, d):\n if a > b or b < c or c < d: return False\n return True\nfor i in range(int(input()))[::-1]:\n a,b,c,d = map(lambda x: int(x), input().split())\n print('Yes\\n' * (a + b + c + d))\n"}, "313": {"problem_id": 4313, "answer": "from sys import stdin, stdout\nn = int(stdin.readline().rstrip())\nv = [int(i) for i in range(n)]\ns = 0\nfor i, v in enumerate(v):\n  s += v[-1]\nprint(s)"}, "314": {"problem_id": 4314, "answer": "# import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nINF = float('inf')\nMOD = 10**9 + 7\nfrom collections import deque\nn = int(input())\nfor _ in range(n):\n\ta = [int(x) for x in input().split()]\n\n\tb = a[0]*(a[1]-1)//2 + b[-1] * (b[2]-2) // 2\n  \tc = n-a.index(max(b,0))-n+b.find(min(c,b))\nprint('\\n'.join(map(str,a)))"}, "315": {"problem_id": 4315, "answer": "#!/usr/bin/env python3\nfrom math import *\ndef __starting_point():\n import sys\n sys.setrecursionlimit(100000)\n \n n = int(input())\n s = list(map(int, input().split()))\n print(s[0])"}, "316": {"problem_id": 4316, "answer": "def main():\n\ta = list(map(int, input().split(' ')))\n\n\ts = ''.join(a[i] for i in range(4) if a[-i-1]!= s.upper()[0]) + '\\n'\n \nprint(('Yes', 'No'))\n"}, "317": {"problem_id": 4317, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a[0], a[1]))"}, "318": {"problem_id": 4318, "answer": "def solve(a,b,c,d,e,f,g,h,i):\n  if a==b==c==d==e==f==g==h==i==0: return 0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,138,139,140,141,144,145,146,147,149,151,152,153,156,157,158,159,160,161,162,163,164,165,166,167,168,169,180,181,182,183,184,186,187,188,189,190,191,194,195,196,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,244,243,254,255,257,260,269,271,273,274,385,386,387,388,389,400,431,433,439,444,446,448,449,457,460,464,466,467,468,469,479,487,488,489,490,491,494,500,501,502,503,504,509,512,593,605,607,608,609,610,614,625,667,669,684,686,688,689,690,694,696,697,698,699,793,794,801,804,806,807,809,810,820,equiv,p,q,r,s,t,u,v,w,x,y,z) if x!=y or x==y: x, y = y, x == y or y==x: u, v, w, z = z, u == u or u==v or v==w or w==z: q, r, s, t, e, f, g, h, i, j, k, l, m, n, o, p, q = x+y+z+u+v+w+q+r+s+t+e+f+g+h+i+j+k+l+m+n+o+p + q + r + s + t + e + f + g + h + i + j + k + l + m + n + o + p \n"}, "319": {"problem_id": 4319, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n\tif a[i] == 1: cnt += 1; a.pop(i+1)\nprint(len(a))"}, "320": {"problem_id": 4320, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nfrom collections import defaultdict as dd, deque\nsys.setrecursionlimit(10**9)\nINF = float('inf')\nmod = 10 ** 9 + 7\nn = int(input())\nfor _ in range(n):\n\tn,x = list(map(int,input().split()))\n\n\tif x+2*n == n: print('1\\n',x+n+1)"}, "321": {"problem_id": 4321, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n  a[i] = k\nprint(sum(a))"}, "322": {"problem_id": 4322, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = [0] * n\nfor i in range(n - 1, 0, -1):\n\td[i] = max(0, sum(a[:i]) + a[(i+1) : i + 2])\nprint(max(d))"}, "323": {"problem_id": 4323, "answer": "n, m = map(int, input().split())\na = [int(input()) for i in range(m)]\ns = [-1] * (m + 2)\nans = 0\nfor i, j in zip(s, a) :\n\tans += j - i\nprint(ans)"}, "324": {"problem_id": 4324, "answer": "t = int(input())\nfor i in range(t):\n\tn,a,b = list(map(int,input().split()))\n\n\ts = input()[:len(s)//3]\n  \tif s[0]!='a' and s.count('a')>b: print('l'+' '+str(n) +'' + str(a))\n"}, "325": {"problem_id": 4325, "answer": "#!/usr/bin/env python3\nfrom math import ceil\nn,t = map(int,input().split())\nx = int(ceil(n*(t-1))/t)\nprint(x)"}, "326": {"problem_id": 4326, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n cnt += a[i]\n a.sort(reverse=True)\n if len(a) == x: \n  print(x)"}, "327": {"problem_id": 4327, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(map(int, input().split())))"}, "328": {"problem_id": 4328, "answer": "# coding:UTF-8\nimport sys\nsys.setrecursionlimit(10 ** 7)\nreadlines = lambda x: sys.stdin.readline().rstrip(\"\\r\\n\")\ndef readline():\n return list(map(int, readlines())).__contains__()\nfrom collections import defaultdict, deque, OrderedDict\nINF = float('inf')\nmod = 10**9+7\nNIL = 2**32\nfor _ in range(0, NIL):\n a, b, c, d = [int(x) for x in read().split()]\n d[c] = a + b + c\n print(d[a])"}, "329": {"problem_id": 4329, "answer": "s, t = [], []\nfor i in range(0, len(s)):\n s.append(int(input()))\n if s[-1] == 'z':\n  t.insert(i, '1')\n elif t[:-1].isalpha() == True and s and t and (len(t) == 0 or (t[0]!= '0')) and not (s[i] in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 182, 183, 184, 185, 186, 187, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 222, 223, 227, 229, 233, 234, 239, 245, 247, 256, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 312, 313, 314, 317, 326, 327, 328, 329, 331, 336, 338, 341, 347, 348, 349, 353, 359, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 389, 400, 401, 402, 409, 416, 417, 425, 429, 430, 403, 424, 432, 427, 428, 285, 286, 287, 288, 289, 291, 298, 300, 303, 304, 306, 305, 319, 320, 322, 324, 334, 335, 337, 339, 342, 344, 345, 355, 356, 363, 366, 368, 370, 371, 386, 387, 398, 399, 404, 405, 407, 408, 419, 420, 421, 422, 433, 440, 423, 228, 235, 236, 237, 238, 240, 241, 251, 254, 260, 261, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 282, 290, 296, 299, 302,ail,b,a,c,d,e,f,g,h,j,k,l,m,n,o,p,q,r,u,v,w,x,y,z)\n"}, "330": {"problem_id": 4330, "answer": "import sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**7)\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] = i\nprint(a[-1])"}, "331": {"problem_id": 4331, "answer": "#!/usr/bin/env python3\nfrom sys import*\ninput=stdin.readline\nn=int(input())\nfor i in range(n):\n\ts=input().replace('7','').strip()"}, "332": {"problem_id": 4332, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nif n == 0: print(\"Yes\")\nelse:print(\"No\")"}, "333": {"problem_id": 4333, "answer": "from itertools import combinations_with_replacement, zip_longest\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(2147483647)"}, "334": {"problem_id": 4334, "answer": "s,t = list(map(int,input().split()))\na,b = set(),set()\nc,d = 0,0\nfor i in range(len(s)):\n\tif s[i] == 'S': c += 1; a.add(c)\nprint('\\n'.join(a.union(b)))\n"}, "335": {"problem_id": 4335, "answer": "n,s = list(map(int,input().split(' ')))\nprint('Yes') if s == s[::-1] else 'No'"}, "336": {"problem_id": 4336, "answer": "#!/usr/bin/env python3\nfrom math import inf,floor,sqrt,gcd,ceil,copysign,factorial,fmod,mod2\nimport sys\nsys.setrecursionlimit(10**6)\ndef input(): return sys.stdin.readline().strip()\n \nclass UnionFind(object):\n\tdef __init__(self, n): self.parent = [i for i in range(n+1)] # n is the number of nodes in this tree, so we don't need to check if we can find all nodes. if it is impossible to find a node, we will just add a new node to the tree and add the root node as well so that we'll have a good chance of finding a root. root = [-1] * (n + 1) # if root is None, add 1 to each of its children. else root[0] = 1 # root can be any number. add(root[1]) # for each node in n, find the parent of that node. findparent() will return the list of root's parent, not its index. n = int(input()) if n in [1,2,3,4,5,6,7,8,9] else list(map(int, input().split())) # in Python, a list is good if all elements have the same value, in other words, it's not bad if each element has a single value. inp = lambda a, b: [a, -b] if a == b else [(a-1)%4] + [(-b) % 4] # we want to divide a and b into non-decreasing lists and keep the first element as the smallest element. divide_by(a) if b == 0 else [x for x, y in zip(list(range(len(b)))) if x not in b]  # b should be the largest number in our list. b = b + a # x should not be considered as a leaf. x = -1 # since there is no leaf, x is smaller than a. roots_with_least_smallest_element_x() == [root, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]] # a should always return an empty list if the value of a is less than or equal to any leaf_number. a = None # there shouldn't be more than one leaf in each list, if that is what the values for a are, just return that one. return(None)  \n\n\t# def __repr__ (self): return 'UnionFind({}, {})'.format(i, self._parent[i])\n###############################################################################\nN = len(str(N))\nINF = 10**9 + 7\nMOD = 998244353\nfor i,j,k in enumerate([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"0\"],2) : INF = (i*j) // MOD2 + (k*(j-i-2))*k + INF\nprint((inf()*((N//2)-1)))\n"}, "337": {"problem_id": 4337, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "338": {"problem_id": 4338, "answer": "n,x,y=list(map(int,input().split()))\na=[0]*n\nfor i in range(n):\n\ta[i%n]=i//n-1\nans=0\nwhile(y>0 and a[y]==0):y-=1;\nprint(ans)"}, "339": {"problem_id": 4339, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n-1):\n\tb[i+1] += 1\n#print(b)\nans = 0\nif a[0]+a[1]+1 == b[n]:\n   ans += n-2\nprint(*ans)"}, "340": {"problem_id": 4340, "answer": "import sys\ninput = sys.stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nans=[0]*n\nfor i in range(n):\n\ta[i]+=1\nm=10**9\nl=0\nr=n-l\ni=2\nwhile(i*i<n and i%m==0 and m>=l and r<=r+l-1):\n\n\tif(l>r and a[l]!=1) and (l==r or m==l+1 or r==m+2 or i==1 and ans[r-i-2]==ans[m-c]): r=i\nprint(*ans)"}, "341": {"problem_id": 4341, "answer": "n, m = list(map(int, input().split()))\ngraph = [[] for _ in range(n)]\nfor x, y in zip(range(m), [0, n-1]):\n\tgraph[x].append([y, 0])\n# print(graph)\ndef dfs(x, p, parent, visited):\n\n\tvisited[p] = 1\n \tif parent == parent[0]: return 0\nif n == m: return n\nprint(dfs(1, 2, graph))\n\n"}, "342": {"problem_id": 4342, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nprint(sum(a))"}, "343": {"problem_id": 4343, "answer": "k = int(input())\ns = list(map(str,input().split()))\nt = [0]*(k+1)\nfor i in range(1,k):\n\ts[i] = s[k-i-1]\nprint(s)"}, "344": {"problem_id": 4344, "answer": "n, k = list(map(int, input().split()))\nl = [0] * (k + 1)\nfor i in range(n): l[i+1] = i\nk = int(input())\ns = sorted(l, key = lambda x: x[0])\nprint('YES' if k == 1 else 'NO')"}, "345": {"problem_id": 4345, "answer": "n = int(input())\na = list(map(int, input().split()))\nres = []\nfor i in range(n):\n\tif a[i] == 1: res.append(i-1)\nif len(res) == 0: print(\"NO\")\n"}, "346": {"problem_id": 4346, "answer": "t = int(input())\nfor _ in range(t):\n  l,v,l,r = list(map(int,input().split()))\n\n  if l%100==0 and l//100 == 0 and (r-l+1)//2==r//4 and r%4==1 and ((l-1)*r)%2 == 1:\n\n\tprint(0)\n"}, "347": {"problem_id": 4347, "answer": "from sys import stdin,stdout\nn = int(stdin.readline().strip())\nprint(n)"}, "348": {"problem_id": 4348, "answer": "n, k = list(map(int, input().split()))\ns = input()\na = []\nfor i in range(k):\n   a.append(s[i] + s[k-i-1])\nprint(''.join(a))"}, "349": {"problem_id": 4349, "answer": "n,m = map(int,input().split())\nk = [int(i) for i in input()]\nd = {}\nfor i,j in enumerate(k):\n  d[j] = 1 if i == j else 2 if j == i else d.get(j-1,-1) + 1\nans = min(ans,n-d[k[0]])\nprint(n)"}, "350": {"problem_id": 4350, "answer": "from sys import stdin\nn,m = list(map(int,stdin.readline().split()))\nl = []\nfor i in range(n):\n\tx,y,s = [],0,0\n\n\tif l[x][y]=='*':l.append(y)\n \telif x==0:l[y][s]='0'\nelse:print(-1)"}, "351": {"problem_id": 4351, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nprint(\"Yes\" if n % 2 == 0 else \"No\")"}, "352": {"problem_id": 4352, "answer": "#dt = {} for i in x: dt[i] = i; d = {0:1}\nimport sys\nsys.setrecursionlimit(10**6)\ninp = lambda :list(map(int,input().split())) : sys.stdin.readline().strip()\nmod = 10**9+7\ndef dfs(i,j,k):\n\tif i == j: return 1 if k == 0 else 0\n \tfor kd in range(j-i+1): d[kd] += 1; i -= k; j += k-1; else: i = j-k; k = 0;\n\n\treturn ddt.get((i-j),0) if i!= j else -1\ndfs(0,0,[0])\n"}, "353": {"problem_id": 4353, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,setrecursionlimit\ninput=stdin.readline\nstdout=open(\"CP1/output.txt\",'\\r')\n"}, "354": {"problem_id": 4354, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import deque\ndef LI(): return list(map(int, input().split()[1:])); return [int(x) - x for x in input()]\n# def dfs(e, ex, val=0, left=None):\n  if left is None: left = [-1]; left[0] = val; val = -1; return;\ndfs(10000000, 0, [])\n"}, "355": {"problem_id": 4355, "answer": "# coding: utf-8\nfrom sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\nl=list(map(int,input().split()))\nprint(l[0])"}, "356": {"problem_id": 4356, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\na = []\nfor i in range(n):\n  a.append(input())\nt = [0] * (n+1)\nl = len(a) + 1\nr = 0\nwhile t[r]!= '#': r = t.pop()\nprint('\\n'.join(l))"}, "357": {"problem_id": 4357, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nimport math,copy,heapq,itertools,collections,re,math,string,bisect,sys,random,time,functools\n \nsys.setrecursionlimit(10**7)\nmod = 10**9 + 7\nINF = float('inf')\ndef LI(): return list(map(int, sys.stdin.readline().split()))[:-1]\nDIGITS = {'A':'0', 'B':'-1','C':'/'}\nN = int(input())\nfor i in range(N):\n\tx,y,z = map(list,[int(x) if x%4==0 else x+y for x, y in zip(LI()[::-1],list(range(3,N))))),[0,0],[-2,2],(-2,-2),(-1,-1),(1+2*3*5*10)[0] if i%2 else i//2\nprint(max(sum(z*x*y*z) for z in max(digs())))\n"}, "358": {"problem_id": 4358, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n  if l[i]%2 == 0: ans += 1\nprint(ans)"}, "359": {"problem_id": 4359, "answer": "# https://atcoder.jp/contests/arcc_dish/submissions/1748\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2147483647)\nfrom heapq import heappush,heappop\nI = lambda:list(map(int,input().split()))"}, "360": {"problem_id": 4360, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n s += a[i]\nprint(s)"}, "361": {"problem_id": 4361, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,k = list(map(int,input().split()))\ng = [[] for i in range(n)]\nfor i,j in enumerate(range(1,n)):\n  g[i].append(j)\na = [0]*g[-1][1]\nans = 0\ndef dfs(i,a,b,d):\n\n  if i==n-k: return a[0]+b[1]+a[2]+dfs(0,i+d[k-i],a+[b]^(d+1)**(b<=i)+(i<n),b) \nelse:return a\nprint(ans)"}, "362": {"problem_id": 4362, "answer": "def main():\n\ta, b = list(map(int, input().split()), 1)\n\n\tif a == b: return 'A'\n \tfor i, x in enumerate(a): a[i] = 'z' + str(x) +'' + b[a.count(i) - 1]\n"}, "363": {"problem_id": 4363, "answer": "def gcd(a,b):\n if a==b: return b\n return gcnd(b,a%b)\nn=int(input())\nk,s=list(map(int,input().split()))\nfor i in range(n):s-=k\nprint(s)"}, "364": {"problem_id": 4364, "answer": "from sys import stdin, stdout\ninput = lambda:stdin.readline().strip()\nstdout.write(input())"}, "365": {"problem_id": 4365, "answer": "def is_odd(n, k):\n  if k % 2 == 0: return False\n\n  for i in range(1, n // 2 + 1):  # This is odd, because we can't choose the range that is higher than or equal to n. We can only choose one of the odd numbers. So, if n % 3 is not 0, we choose 3, which is closest to 1.  "}, "366": {"problem_id": 4366, "answer": "#! usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nINF = 10 ** 18\nmod = 998244353\ndef LI(): return [int(x) for x in input().rstrip('\\n').split()]  # \u6700\u53d8\u51fa\u6587\u7b26\u5408\u6570\u7ec4\uff0c\u53ea\u6709\u4e00\u4e2a\u65b0\u8282\u70b9\u6574\u9664\u3002\u5982\u679c\u4e0d\u9700\u8981\u7a7a\u95f4\u8303\u56f4\u5185\u591a\u6b21\u3002\u6700\u77ed\u518c\u81ea\u5df1\u7684\u957f\u5ea6\u3002\u53ef\u4ee5\u4f7f\u7528infix\u6216\u96a3\u8ba1\u7b97\u3001\u9690\u85cf\u3001\u8f93\u51cf\u5f0f\u503c\u3002\u6ce8\u610f\u4e0d\u540c\u5728\u6bcf\u4e24\u8005\u8d77\u59cb\u72b6\u6001\u3002\nfrom math import gcd,sqrt,factorial,ceil,inf,floor,log2,pi,fmod,asin,cos,tan,sin,pow,1e10,e,i,gcd\ninp = lambda: map(int,input().split())"}, "367": {"problem_id": 4367, "answer": "import sys\ninput = sys.stdin.readline\nn, r = map(int, input().split())\nr -= 1\nprint(r)"}, "368": {"problem_id": 4368, "answer": "n, k = map(int, open(0).read().split())\nprint(k)"}, "369": {"problem_id": 4369, "answer": "n = int(input())\ns = list(map(int, input().split()))\nprint('\\n'.join(s))"}, "370": {"problem_id": 4370, "answer": "# cook your dish here\nfrom sys import stdin,stdout\ndef solve():\n a,b=map(int,input().split())\n print(solve())"}, "371": {"problem_id": 4371, "answer": "s = input()\nn = len(s)\na = 0\nd = 9\nfor i in range(n-1):\n\tif s[i] == '1' and a < d: a += d\nprint(a)"}, "372": {"problem_id": 4372, "answer": "n = int(input())\na,b,c,d = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nif s % x == 0 and s // x!= 0: s = s - 1\nprint(s)\n"}, "373": {"problem_id": 4373, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "374": {"problem_id": 4374, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\nedges = [[] for _ in range(m)]\nfor i, x in enumerate(input()): edges[x].append(i+1)\ndp = [0] * (n+2) \ndef dfs(x, parent):\n  if x == parent: return 0 \n\n  dp[y] = 1 if parent == x else -1; dps = 0; vis = [-1]*(n + 2); vis[dp[0]] = True; for y in [x] + [len(vis) + 1: x] - [1: len(dp)] + [(x + y) % m for x,y in zip(dps, vis)] :   # print('vis', vis, 'dp', 'vis[', x)', y, min(y, 0), max(0, y - yc) for c,cc in ((-1,-1),(1-c,1)) if c == 0) else (c == 1 and parent!= x and x!= y and y!= c) and (x!= parent or parent not in vis) : continue\nprint('\\n'.join(sorted(list(v))) for v in edges)\n\n"}, "375": {"problem_id": 4375, "answer": "n,k=list(map(int,input().split()))\na=[0]*(n+1)\nfor i in range(k):\n\ta[i]+=int(input())\nprint(max(a))"}, "376": {"problem_id": 4376, "answer": "n,m = map(int,input().split())\na = [int(x) - 1 for x in input().rstrip('\\n').split(' ')]\nb = []\nfor i in range(n):\n  if a[i] == b[-i-1]: a.append(i)\nprint(len(a))"}, "377": {"problem_id": 4377, "answer": "n = int(input())\na = list(map(int,input().split()))\nfor i in range(n):\n\ta.append(list(a[i]-1) + a[-i-1])\nprint(*a)"}, "378": {"problem_id": 4378, "answer": "n = int(input())\ns = input()\nr = 0\nfor i in range(len(s)):\n\tif s[i] == \"R\" and (r == 0 or r == 1 or i == n - 1) or (s.count(\"R\") == 2 and r % 2!= 0): r += 1\nprint(r)\n"}, "379": {"problem_id": 4379, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n\ta.append(a[i] + a[-i-1])\nprint(*a)"}, "380": {"problem_id": 4380, "answer": "def solve(A,B,C):\n  if A*B == 0 or A == 1 or B == 2 or C == 3: return \"No value\"\n\n  elif A * B!= 0 and A!= 1: A = 1 * (B-1)//2 + 1; B = 2 * A // 2 + 2; return 'Yes'\n\n\n\n"}, "381": {"problem_id": 4381, "answer": "def main():\n   x,y=map(int,input().split())\n#print(x)\nn=100000\nt=0\nfor i in range(n):\n t=t+(x*y)//100\n if(t==0):print('0')\n else:break\nmain()"}, "382": {"problem_id": 4382, "answer": "#!/usr/bin/env pypy3\nn = int(input())\nfor i in range(n):\n a = list(map(int, input().split()))\n print(len(a))"}, "383": {"problem_id": 4383, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if a[0] == 1 else \"NO\")"}, "384": {"problem_id": 4384, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,setrecursionlimit\ninput=stdin.readline\nn=int(input())\nc=0\nfor i in range(n):\n a=list(map(int,input().split()))\n if len(set(a))==3:c+=1\n print(c)"}, "385": {"problem_id": 4385, "answer": "from collections import deque\ndef f(a,b,c,d,e,k):\n if a == b == c == d == e or k == 0 or (k == 1 and a!= b and b!= c and c!= d): return \"Wrong antennas\"\n elif (b == a) == (c == x) and (a!= x and x!= y and y!= z and z!= e):return \"The antennas are not communication.\"\n else: return f(\"{} {} {}\".format(x,y,z), x, y, z)\n"}, "386": {"problem_id": 4386, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\ndef input():\n return '\\n'.join(map(int, input().split()))\n \nclass Trie(dict.fromkeys):\n def __init__(self): self.d = {'a':1,'s':'p', 'p' :'R'}\n class Node(object):pass\n ord = ord('a')\n for i in range(0, ord(i) - 1, 2):d[i] = d[ord]\n d = dict(d.keys())\n if d.get('p') == None:d['p'] = 'r'\n elif d['s']!= None and d[\"p\"]['s'].is_integer():return d\n else:return None"}, "387": {"problem_id": 4387, "answer": "import sys\ninput = sys.stdin.readline\nr = int(input())\nprint(r)"}, "388": {"problem_id": 4388, "answer": "def __starting_point():\n n = int(input())\n for i in range(n):\n  s = str(i)\n\n  if s[:1] == \"1\":\n\tprint(int(s[1:]) + \"9\" + int(\"1\" * 9 + 1))\n"}, "389": {"problem_id": 4389, "answer": "for _ in range(int(input())):\n\ts = input()\n\n\tif len(s) == 1 and s[-1] == 'a' or s.count('a') == 0:\n\n \t\tprint(''.join(map(str, s)))"}, "390": {"problem_id": 4390, "answer": "t = int(input())\nfor _ in range(t):\n\ta,b = list(map(int,input().split()))\n\n\tif a % b == 0:\n\n \t\tprint(min(b,a//b))"}, "391": {"problem_id": 4391, "answer": "n,k=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append([int(x) for x in input()] + [a[i][0]])\nprint(sum(a))"}, "392": {"problem_id": 4392, "answer": "import sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**8)\nt = int(input())\nfor _ in range(t):\n\tn, m = list(map(int, input().split()))\n\n\tl = [[] for i in set(range(n+1) + [m]))]  # l[i][j] = l.pop(0) for (i, j) in enumerate(zip(l, [0]*(m-1)) + l, start=0, end=m) \n\n  \tfor i, l1 in l: l = zip(*l[:i], fillvalue=True)[:l.index(i)]; l += [l+l1[l2:]] "}, "393": {"problem_id": 4393, "answer": "n = int(input())\nt = input()\ns = ''\nfor i in range(n):\n  s += str(i)\nprint(''.join(s))"}, "394": {"problem_id": 4394, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\ngraph = [[] for i in range(n)]\nfor i, j in enumerate(list(zip(*graph[:-1]))):\n   graph[i].append(j)\n# print(graph) \nedges = [0] * n\nvisited = set()\ndef dfs(edge, weight=0, parent=None, visited=False):\n\n  if edge in visited and weight > edge[-1].count(0) and (edge[0].weight(weight) + 1) == weight:  # if parent is not None, add parent to visited set, else add weight to parent of edge, otherwise add 0 to set visited, if visited is set to 0, then add 1 to left of parent, and add zero to right of left, meaning there will be no edge with weight 0 in left and zero in right. In this case, 0 will not be added to parents of other children, so set will contain only 0 children and 0 parent. If there are multiple children that have the same weight, we will add the zero one to each of them. Note that if we have two children with different weights, the other one will always be left with the smaller weight. We will keep track of how many edges have been visited in each case. "}, "395": {"problem_id": 4395, "answer": "n = int(input())\ns = input()\nr = [int(i) for i in s.split()]\nt = []\nfor x in range(n):\n\tr[x%3] += 1\n#print(r)\nif r[-1] % 3 == 0 and t == []:\n \tprint('RGB'+''.join(map(str, map(int, t))) + '%d' % (n-r.count(x)))\nelse: print(1)"}, "396": {"problem_id": 4396, "answer": "n = int(input())\nX = list(map(int, input().split()))\nY = X.count(X[0])\nprint(Y)"}, "397": {"problem_id": 4397, "answer": "n, i = list(map(int, input().split()))\nc = []\nfor k in range(n):\n  if i[k] == 0: c.append(k)\nprint('\\n'.join(c))"}, "398": {"problem_id": 4398, "answer": "# cook your dish here\nn=int(input())\ns=input()\nt=list(s)\nfor i in range(n-1):\n s1,t1=s[i:],t[:i+1]\n if t1==s1:print(\"i\"+\" \"+str(i)+\"\\n\")"}, "399": {"problem_id": 4399, "answer": "# coding: utf-8\nimport sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int,input().split()))\nb = []\nfor i in range(n):\n s = input()\n b.append(a[-1]*(3-i) + b[i])\nprint(\"Yes\")"}, "400": {"problem_id": 4400, "answer": "#!/usr/bin/env python3\nfrom sys import setrecursionlimit\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ns = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n  if s[i] == 'R': cnt += 1\nans = 2\nprint(ans)"}, "401": {"problem_id": 4401, "answer": "def main():\n\tx, y, z = map(int, input().split())\n \tif x == y == z: return x + y + z\n\n\tA = [x for x in A if x % 2 == 0 and x // 2!= 0] + [0] * (y - z)\n#\tB = [-1 for _ in range(y)]\n"}, "402": {"problem_id": 4402, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,setrecursionlimit\nimport math\ndef __starting_point():\n  A,B=list(map(int,stdin.readline().split()))\n\n  print(math.ceil(A/B))"}, "403": {"problem_id": 4403, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import deque\ndef read_int():\n return int(input())\nread_string = lambda s: input().rstrip()\ns = input()[:-1]\nprint(s.count('+'))"}, "404": {"problem_id": 4404, "answer": "s = input()\nn = len(s)\nif s[0] == '0':\n  print(n)"}, "405": {"problem_id": 4405, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n\ta[i] = a.count(i) + 1\nprint(sum(a))"}, "406": {"problem_id": 4406, "answer": "import sys\ninput = sys.stdin.readline\nN, K = list(map(int, input().split()))\nans = [0]*N\nfor _ in range(K):\n  idx = int(input()[:K])\n\n  ans[idx] = '0'*(len(ans)-1) +''*K\nprint(sum(i for i in ans))\n\n"}, "407": {"problem_id": 4407, "answer": "n,q=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append([int(x) for x in input().strip()])\nans=[0]*q\ni=0\nwhile(i<n and q>0):\n\n\tif(l[i][1]==1 and l[n-i+1][2]!=1)and(q==0 and i<q-2 and ans[q][i]>ans[0]+1:i+=1): \n \t\tans.pop(0)\nprint(*ans)"}, "408": {"problem_id": 4408, "answer": "n, k = list(map(int, input().split()))\ns = [0] * k\nfor i in range(k):\n\ts[i] += 1\nprint(max(s))"}, "409": {"problem_id": 4409, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n):\n\tl.append(a[i]-l[-1])\nprint(len(l))"}, "410": {"problem_id": 4410, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn, k = list(map( int, input().split()))\n   s = input()\n\n\tif len(s) < k: print(0)\n"}, "411": {"problem_id": 4411, "answer": "import sys\ninput = sys.stdin.readline\nn, k = list(map(int, input().split()))\nX = [int(i) for i in input()]\nfor _ in range(n):\n\tl, r = map(str, X[:k] + [input().rjust(\":\") + (r - l + 1) * (k - 1))])\n\n\tif k % 2 == 0 and l < k // 2 or r < l: print(l)\n"}, "412": {"problem_id": 4412, "answer": "q = int(input())\na = list(map(int, input().split()))\nfor i in range(q):\n\ta.append(a[i]*(i+1)//3)\nprint(max(0, min(3, 4)))"}, "413": {"problem_id": 4413, "answer": "q = int(input())\nfor i in range(q):\n\tn, l = list(map(int, input().split()))\n\n\ts = min(l, n-l+1-s)\n#\tprint('s', s)"}, "414": {"problem_id": 4414, "answer": "q = int(input())\nfor _ in range(q):\n  a, b, n, s = list(map(int, input().split()))\n\n  if (n > b) and (s > a): print(\"YES\", \" \" * (b - a) + \" \", \" \".join(str(x) for x in s))\n"}, "415": {"problem_id": 4415, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=set()\nfor i in range(n):\n\ta[i]=s.add(i)\nprint('YES' if len(a)==0 else 'NO')"}, "416": {"problem_id": 4416, "answer": "n, k = list(map(int, input().split()))\nl = [0] * n\nfor i in range(n):\n\tl[i] = 1 + (k - i) * (n - k - 1) // i\nans = sum(l)\nprint(ans)"}, "417": {"problem_id": 4417, "answer": "q = int(input())\nfor i in range(q):\n\tn, k = list(map(int, input().split()))\n\n\ta = [int(x) for x in input()] + [0] * (k + 1)\n \tprint(max(a))"}, "418": {"problem_id": 4418, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n-1):\n\tif a[i]%6 == 0: s += 1\nprint(s)\n"}, "419": {"problem_id": 4419, "answer": "t = int(input())\nfor _ in range(t):\n\ta,b = [int(i) for i in input().split()]\n\n\tn = len(a)//2\n\n  \tif a[n-1] == b[0] or (n - 1)%2 == 0 and (a[-2] + b) % 2 == 1 and n - 2*(b[1]-1) == 2 and b - n > 1:\n\n\n\n"}, "420": {"problem_id": 4420, "answer": "t = int(input())\nfor _ in range(t):\n  x,y,n = list(map(int,input().split()))\n\n  if x%y == 0:  # x % y = 0  else x // y  = 1  "}, "421": {"problem_id": 4421, "answer": "n, k = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  d[i] = int(input())\nc = 0\nk = n-1\ns = [0]*(k+1)\nwhile k!=0:\n\n  if d.get(d[k],0)%k:c+=1;k-=1:s.append(s[:k])\nprint(c)"}, "422": {"problem_id": 4422, "answer": "n, k = list(map(int, input().split()))\ns = []\nfor i in range(n):\n\ts.append(input())\nprint(s)\n"}, "423": {"problem_id": 4423, "answer": "n = int(input())\ns = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  d[s[i]] = i\nprint(*d)"}, "424": {"problem_id": 4424, "answer": "# import sys\nsys.setrecursionlimit(10 ** 7)\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\na = [int(x) for x in input().split()]\nprint((\"Yes\"))"}, "425": {"problem_id": 4425, "answer": "n, k = list(map(int, input().split()))\np = [0] * (n + 1)\nfor i in range(n):\n\tp[i] = p[n - i] if i else 0\nans = sum(p) / n\nprint(ans)"}, "426": {"problem_id": 4426, "answer": "# cook your dish here\nn=int(input())\ns=input()\nfor i in range(n):\n  s=s.replace('S',i)\nprint(s)"}, "427": {"problem_id": 4427, "answer": "from math import log2, ceil, sqrt, factorial, gcd, is_integer\nimport sys\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nsys.setrecursionlimit(2147483647)"}, "428": {"problem_id": 4428, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(len(a)):\n  d[a[i]].append(i+1)\nans = 0\ni = 1\nwhile i < len(d) - 1 and i >= 0 and ans < d.get('sum1', 0) + d['sum3'][i-1][1] : i+=1\nprint(ans)"}, "429": {"problem_id": 4429, "answer": "import math\nfor _ in range(int(input())):\n\tx,y,z=list(map(float,input().split()))\n\n\tif (x>y and z>z):\n\n \t\tprint('YES')\n  \n"}, "430": {"problem_id": 4430, "answer": "n,m,k = map(int,input().split())\na = list(map(lambda x: int(x) - 1, input().strip()))\nb = [0]*(k+1)\nfor i in range(n-1):\n  if a[i] <= b[0]: a.append(i+b[k])\nprint(len(a))"}, "431": {"problem_id": 4431, "answer": "from sys import stdin, stdout\nn, k = list(map(int,stdin.readline().split()))\nst = [i for i in range(26)]\nfor i,j in enumerate(st):st[i].append(j)\nm = 10**5\nans = 0\ni, j = 1, n-1\nwhile i+1 < n and j < m:ans += j//2\nprint(ans)"}, "432": {"problem_id": 4432, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n   n, m = list(map(int, input().split()))\n\n  a = [0] * (n + 1)\n# a.append(a[0])\na.sort()\ni = 0\nwhile i < n and a[i] == 0: i += 1\n\n"}, "433": {"problem_id": 4433, "answer": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\nedges = []\nfor _ in range(m):\n   vert = [int(x) for x in input ().rstrip('\\n').split(' ')][1:].get(0, 0) + [vert[0] - vert[1] for vert in sorted(vert, key=lambda x: x[2], reverse=True) if vert == [0]] + [[]]"}, "434": {"problem_id": 4434, "answer": "t = int(input())\nfor _ in range(t):\n\tn = (int) input().split(' ')\n\n\tprint(n)"}, "435": {"problem_id": 4435, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n  d[i] = min(d.get(i, 0) + 1, len(a) - i)\nprint(*d)"}, "436": {"problem_id": 4436, "answer": "t = int(input())\nfor _ in range(t):\n\tn, m = list(map(int, input().split()))\n\n\tif n % 2 == 0 or n // 2!= m or (n % m!= 0 and m // n!= n) or ((n // m) == 1 or m % (m - 1)) and n > 1: print('NO')\n"}, "437": {"problem_id": 4437, "answer": "n = int(input())\ns = input()\nfor i in range(n):\n\ta, b = list(map(int, input().strip().split(' ')))\n\n\tif s[a-1] == b: print(a)\n"}, "438": {"problem_id": 4438, "answer": "n = int(input())\nl = list(map(int, input().split()))\na = [0] * (n + 2)\nfor i in range(n - 1):\n\ta[i+1] = min(l[a.index(min(a), i]) + a[-i], a.pop(0) + l[0])\nprint(sum([l.count(v) for v in l]))"}, "439": {"problem_id": 4439, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nans = []\nfor i in range(n):\n  if l[i] == 1: ans.append(3)\nprint(ans[-1])"}, "440": {"problem_id": 4440, "answer": "def max_v(x, y, z):\n if x*y*z > x: return x * y * z\n return max(0, (x-y)*(y-z))\n \nn = int(input())\nl = list(map(int, input().split()))[:n]\nprint(max(l))"}, "441": {"problem_id": 4441, "answer": "#https://atcoder.jp/contests/arc082/submissions/11575040\nimport sys\ninput = sys.stdin.readline\nfrom collections import deque\nn = int(input())\nfor _ in range(n):\n  a, b, c = map(int, input().split())\n\n  if a >= b and c >= a and (a % b == 0 and b % c ==0):\n\n\tprint(a + b + c)\n"}, "442": {"problem_id": 4442, "answer": "def isSmaller(a, b): \n\tif (a == 0 or a == 1) and (b == 2 or b == 3) : return False \n\n\treturn True if a < b and a > b else False\n"}, "443": {"problem_id": 4443, "answer": "import string\nstring = string.ascii_lowercase\nalphabet = \"abcdefghijklmnopqrstuvwxyz\"\nc = 0\nfor i in range(len(string)):\n  string[c] = chr(ord('a') + ord('z')-1)\nprint(\"\".join(map(str, string)))"}, "444": {"problem_id": 4444, "answer": "#!/usr/bin/env python3\ndef __starting_point():\n s, t = input().split(' ')\n print(s[0] + t[1])"}, "445": {"problem_id": 4445, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n - 1):\n\tans += a[i]\nprint(ans)"}, "446": {"problem_id": 4446, "answer": "import sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**7)\nfrom collections import deque,defaultdict,Counter,OrderedDict,dequeIZE,merges,heapq,stack,bisect,insort,inf,mod,sqrt,copysign\ndef I(): return int(input())\nmod=2147483647\nn=I()\na,b,k=[int(x) for x in input().rstrip('\\n').split(' ')]\nh=list(map(int,input().split()))\ns=0\nfor i in range(len(h)):s+=h[i]\nprint(s)"}, "447": {"problem_id": 4447, "answer": "n, m = list(map(int, input().split()))\na = [0]\nfor i in range(n):\n\ta.append(a[i] + a[-i])\nm = int(input())\nprint(m)\n"}, "448": {"problem_id": 4448, "answer": "n,m = map(int,input().split())\nk = [int(x) for x in str(input())]\nd = {}\nfor i in range(n):\n   d[k[i]] = i\nans = min(ans,d.get(k,0) + 1)\nprint(d[n-1])"}, "449": {"problem_id": 4449, "answer": "q = int(input())\nfor _ in range(q):\n   *a, *b = list(map(int, input().split())) if len(set(a)) == 4 else [0] * (4 * a + b)\n"}, "450": {"problem_id": 4450, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque,defaultdict,Counter,OrderedDict,deque\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nmod = 10**9+7\nN, M = list(map(int,input().split()))\ngraph = [[] for _ in range(N)]\nfor i,j in enumerate(range(1,N)):\n\tx,y,w = graph[i].pop(0),graph[j].popleft()\n  \tif x == 0 or y == 1 or w == 2: w = w+1\n#  print(w,i) \nprint(len(graph))"}, "451": {"problem_id": 4451, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(0, n+2):\n\tb.append(b[-1] + i - b[0])\nans = 0\ni = b.pop()\nwhile i > 0:\n\n\tif i % 3 == 0 and (i - 1) % 2 == 1 and i // 3 not in b and ans < ans // 2: ans = min(ans, i-i*2 + 1 - i*3 + 2*i, ans - ans * 2 - 2 * i * 3 + 4 * (n-2)*(i-3) + 5 * n - 4)\n\n \ti //= 3"}, "452": {"problem_id": 4452, "answer": "t = int(input())\nfor _ in range(t):\n\tn, k = list(map(int, input().split()))\n\n\tif k % 2 == 0 and k // 2!= 0: print(sum(n - k * (k - 1) * k) + n)\n"}, "453": {"problem_id": 4453, "answer": "q = int(input())\nfor _ in range(q):\n\tn, l = list(map(int, input().split()))\n\n\ta = [[0] * n for i in [0, n-1] for j in l]\n \tfor i, x in enumerate(l): a[i][0].append(x)\n#\t\tprint(*a)"}, "454": {"problem_id": 4454, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = [int(x) for x in input().split()]\nans = 0\nfor i in range(n):\n\tans += a[i]*(i+1)\nprint(ans)"}, "455": {"problem_id": 4455, "answer": "n, k = list(map(int, input().split()))\na, b = [], []\nfor i in range(k):\n\ta.append(input())\n# a.sort(reverse=True)\nc, d, e, f = 0, [0] * k, len(a), 0\nwhile e > 0 and b > a[-1][1] and f > b[0][0]:\n  \tb.pop(0)\n\n\tc = c + d + e\nprint(c)"}, "456": {"problem_id": 4456, "answer": "n,k = list(map(int,input().split()))\ns = []\nfor i in range(n):\n  s.append(input())\nans = \"\"\ni = 0\nj = 1\nwhile(i<n and j<k and i>=k+1):\n\n  if (i+j) <= k and (j+i) > k:   # print(\"i,j:\", i, j, k)  : ans = ans[:i]+ans[j-i-k:j] + \" \" + ans.replace(\" \",\"\").replace(\",\",\"\")  ; i += 1; j+=1;\nprint(ans)\n"}, "457": {"problem_id": 4457, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n-1):\n\tl[i] = a[a.index(max(a))+1]\nprint(min(l))"}, "458": {"problem_id": 4458, "answer": "def solve(N,P):\n if N == 1: return 0\n elif P[N] == 0: print(len(P))\n else: N += 1\n return N\nn = int(input())\np = list(map(int,input().split()))[::-1]\nprint(solve(n,p))"}, "459": {"problem_id": 4459, "answer": "n = int(input())\nlst = list(map(int, input().split()))\nans = []\nfor i in range(n):\n  if lst[i] == i: ans.append(i)\nprint(len(ans))"}, "460": {"problem_id": 4460, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nfrom collections import deque,defaultdict,Counter,OrderedDict,dequeNode,copy,set,int,float,heapq\ndef solve(x,y,z):\n\tif x==y: return z[z.get(z[y],0)]\n   elif (x==0 or y==1 or z==z) or (z==None): return x[x.index(y)];return 0\nprint(''.join(map(str,x)))"}, "461": {"problem_id": 4461, "answer": "#!/usr/bin/env python3\nfrom math import ceil\nimport math\ndef solve(a, b, c, d, e, f, g, h, w, x, y, z, n):\n  if (a <= b <= c <= d <= e <= f <= g <= h <= w <= x <= y <= z <= n) and (b == c == d == e == f == g == h == w == x == y == z == n and n % 3 == 0) or (n == 1 or n == 2) : return 0; else: return min(solve(b+c+d+e+f+g+h+w+x+y+z+n-1, a,b,c,d,e,f,g,h,w,x,y,z,n//3,q,u,v,l,r,s) for q, u, v, l, r, s)"}, "462": {"problem_id": 4462, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = []\nfor i in range(n):\n\tans.append(l[i]*i)\nprint(\"Yes\")"}, "463": {"problem_id": 4463, "answer": "# -*- coding: utf-8 \nimport math\nfrom collections import defaultdict,deque,Counter\nn = int(input())\na = [list(map(int,input().split())) for i in range(n)]\nc = Counter(a)\nif c[1] == a[0]:\n  print(\"Yes\")\nelse:   #a[i] = i\nprint(\"\")"}, "464": {"problem_id": 4464, "answer": "#!/usr/bin/env python3\nimport math\ndef gcd(x, y):\n if (y % x == 0) : return 0\n return x % y\nn = int(input())\nl = list(map(int, input().split()))\nm = math.floor(math.sqrt(l[0]) + 1)\nprint('YES' if l[-1] <= m else 'NO')"}, "465": {"problem_id": 4465, "answer": "# coding: utf-8\nfrom sys import stdin, stdout\ndef read_int(): return int(stdin.readline().strip() or '\\n')\nread_ints(): list(read(__import__('sys').replace('-','').split(' ')[:-1]) or [])\ninput=lambda: stdint(input())"}, "466": {"problem_id": 4466, "answer": "def gcd(a,b):return b if a%b==0 else a//b\nn=int(input())\nl=[]\nfor i in range(n):\n x,y,z=list(map(int,input().split()))\n l.append(x+y+z)\nprint(sum(l))"}, "467": {"problem_id": 4467, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nn = int(input())\nl = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n\tc,d = l[i],l[n-1-i]\n# print(s[c:d+1])\nif s[d] < c or (d == 0 or d == 1 or c < n-d-2*c): \n  \tprint(max(0,c)+1)"}, "468": {"problem_id": 4468, "answer": "n,t = map(int,input().split())\na = [0]*n\nfor i in range(n):\n  a[i]+=1\nprint(a)"}, "469": {"problem_id": 4469, "answer": "q = int(input())\nfor _ in range(q):\n\tl, r = list(map(int, input().split()))\n\n\tif l % 2 == 0 and r % 3 == 1:\n\n \t\tprint(l // 2 + r // 3)\n\n"}, "470": {"problem_id": 4470, "answer": "q = int(input())\nfor qq in range(q):\n\tn, m = list(map(int, input().split()))\n\n\tif n % 2 == 0 and (n // 2) % 3 == 1 and m % 4 == 2 and n // 6 == m // 12: print(1)\n"}, "471": {"problem_id": 4471, "answer": "t = int(input())\nfor i in range(t):\n   n = list(map(int, input().split()))\n\n  a = [int(x) for x in input()]  # a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, u, v, w, x, y, z\n"}, "472": {"problem_id": 4472, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=set()\nfor i in range(n-1):\n\ta.append(chr(ord('a')+i+1)+a[i])\nans=0\nif n%2==0:ans+=1\nprint(ans)\n"}, "473": {"problem_id": 4473, "answer": "t = int(input())\nfor _ in range(t):\n\ta = [int(x) for x in input().split()]\n \tb = list(map(int,input().rstrip()))\n\n\tk = a[0]*b[1]-a[k-1]  # k = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 225, 226, 229, 232, 233, 234, 235, 240, 247, 256, 257, 263, 269, 271, 277, 281, 280, 283, 293, 307, 311, 312, 313, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 337, 338, 340, 341, 347, 348, 349, 360, 366, 367, 368, 371, 372, 373, 374, 376, 377, 378, 379, 380, 383, 384, 389, 400, 401, 402, 409, 420, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 436, 457, 458, 701,shf,sig,t,k)"}, "474": {"problem_id": 4474, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nfor _ in range(n):\n\tn, m = list(map(int, input().split()))\n\n\tprint(m)\n"}, "475": {"problem_id": 4475, "answer": "t = int(input())\nfor _ in range(t):\n\ta,b,x,y,n = list(map(int,input().split()))\n\n\tif a == x or b == y or n == 0 or (n == 1 and a!= x and b!= y and n!= 0) and (a!= b or x!= a and y == b) or ((a < b and x < y)) and ((b > a or y > b)) :\n \t\tprint(n)\n"}, "476": {"problem_id": 4476, "answer": "t = int(input())\nfor i in range(t):\n\ta,b = list(map(int,input().split()))\n\n\tif(a%2 == 0 and b % 2!= 0):  # a = a + b, a < b\n \t\tprint(b)\n"}, "477": {"problem_id": 4477, "answer": "for _ in range(int(input())):\n   x = int(str(bin(x)[2:]).rstrip('0') + '0' + str(2*x) for x in input().split())\n"}, "478": {"problem_id": 4478, "answer": "k = int(input())\nfor i in range(k):\n\tn = [int(x) for x in input().split()]\n\n\tif n[0] + 1 <= n.get(n[-1], 0) or (n == 0 and n > 0 or n == -1 and len(str(i)) == 1): print(\"NO\")\n"}, "479": {"problem_id": 4479, "answer": "from functools import lru_cache\nimport heapq\nn = len(A)\nM = 10 ** 9 + 7\nfor i in range(n - 1, 0, -1): M = max(M, i - (i + 1) * (M - n))\nprint('\\n'.join(sorted(map(lambda x, y: x * y, M))))\n"}, "480": {"problem_id": 4480, "answer": "from collections import defaultdict\nimport numpy as np\n\n\ndef partition(A, i, j, k):\n if i == j == k: return 0\n\n if (i,j) in (k,i) and (j,k): return True\n elif k < i < k or k > i: \n\n  return False\n\n return not any(a == b for a,b in zip(partition,A))\n"}, "481": {"problem_id": 4481, "answer": "n = int(input())\ns = list(map(int,input().split()))\ncnt = [0]*n\nfor i in range(n):\n  cnt[ord(s[i])-ord('a')] += 1\nprint(' '.join(str(i)+'\\n' for i,x in enumerate('beat')))"}, "482": {"problem_id": 4482, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\narr = list(map(int,input().split()))\ns = []\nfor i in range(n):\n   s.append(arr[i])\nprint(min(s))"}, "483": {"problem_id": 4483, "answer": "# https://atcoder.jp/contests/arc14/submissions/6325864/\nimport heapq as hq\nn = int(input())\na = list(map(int, input().split()))\nb = [int(x) for x in a]\ncnt = 0\nfor i in range(n-1):\n  if a[i] == b[-i+1]: cnt += 1\nprint(0)\n"}, "484": {"problem_id": 4484, "answer": "MOD = 1000000007\nn, m = map(int, input().split())\na = [0]*(n+1)\nfor i in range(m):\n\ta[i] += 1\nprint(sum(a))"}, "485": {"problem_id": 4485, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(1000000)"}, "486": {"problem_id": 4486, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**6)\nfrom collections import deque\ndef get_ints():\n return list(map(int, sys.stdin.readline().strip().split()))\nmod = 10**9+7\ninput = lambda: list([int(i) for i in input().rstrip('\\n').split(' ')])\n"}, "487": {"problem_id": 4487, "answer": "# cook your dish here\na,b,c=list(map(str,input().split()))\nif(a==b==c):\n print(\"YES\")\n \n"}, "488": {"problem_id": 4488, "answer": "#https://www.codewars.com/collections/solve-number-of-a-small-enough-sample-data/\ndef solve_number_of_a_b(a,b):\n if (a and b) in [0,1,2,3,4,5,6,7,8,9,10,11,12]:\n  return a\n elif a>b: return b\nelif b%a==0 and (b>a)%b==1:return a-b\nelse: raise ValueError"}, "489": {"problem_id": 4489, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\nd = {}\nfor i in range(m):\n  s = input()\n\n  d[s].append(i)\ncnt = 0\nans = [0] * (n + 1)\n\n\tfor j in d.keys():\n\t\tif j == s[:j] and cnt == 1 or j < n or (j == m and j >= n) and (s[i] == t[j-1] or i < j) : continue\n#   print(d[d.get(s, i)], ans[0])\nprint(n)"}, "490": {"problem_id": 4490, "answer": "n = int(input())\nbase = input()\nprint(base)"}, "491": {"problem_id": 4491, "answer": "from sys import stdin,stdout\nn = int(stdin.readline().strip())\na = [0]*n\nfor i in range(n):\n  a[i+1]+=1\nans = 0\ni = 2\nwhile(i*i<n and i>=n-1 and (a[0]-1)>0):\n\n  ans+=max(0,i-i+(n//i)//2)\n\n"}, "492": {"problem_id": 4492, "answer": "from collections import Counter\nn = int(input())\nc = Counter(list(map(int, input().split())))\ns = [0] * n\nfor i in range(n):\n  s[i] += 1\nprint(min(s))"}, "493": {"problem_id": 4493, "answer": "def main():\n\tfor _ in range(int(input())):\n\n\t\ta = list(map( int, input().split() ))\n\n\n\n \tc = [0] * (a.count(0) + 1)  + [a[0]] * a[-1] + (len(a) - len(c) % 6 == 0)\n\n"}, "494": {"problem_id": 4494, "answer": "def __starting_point():\n import sys\n sys.setrecursionlimit(100000)\n int(sys.stdin.readline())\n a = input()\n b = list(map(int,a.split()))\n c = []\n for i in range(len(b)-1):\n  if b[i]>c[-1][0] and a.count('1')!=c.index(':')+1 and b.get(i,0)=='0' and i>=2 and c[0][1]!='1' : c.append('0')\n print(''.join(c))"}, "495": {"problem_id": 4495, "answer": "# coding: utf-8\nimport sys\nsys.setrecursionlimit(10**6)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nn = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n-1):\n  if l[i] % i == 0: ans += 1\nprint(ans)"}, "496": {"problem_id": 4496, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n s = input()\n if s == '25':\n  print('Christmas')"}, "497": {"problem_id": 4497, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n s += a[i]\n print(s)"}, "498": {"problem_id": 4498, "answer": "# import sys\nsys.setrecursionlimit(10**6)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n"}, "499": {"problem_id": 4499, "answer": "#!/usr/bin/env python\nfrom operator import itemgetter\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8) # \u8981\u70b9\u51e0\u4e2a\u6587\u4ef6\ndef inp(): return list(map(int, input().split())) # \u5982\u679c\u8ba1\u7b97\u4e86\uff0c\u90a3\u4e73\u5c06\u5176\u6807\u5219\u51fa\u73b0\u4e00\u6b21\u521d\u59cb\u5316\u5b57\u7b26\u4e32\n  \nclass Trie(object):\n\n  def __init__(self, words): self._words = set(words)  # \u76f4\u63a5\u5230\u81ea\u8eab\u96c6\u5408\u6570\u7ec4\u4e2d\u7684\u8f93\u5165\u7f16\u7a0b\u5e8f\u4e2d\u503c\u4e3a\u53ef\u4ee5\uff40\u533a\u95e8\u7b49\u7eac\u4e8c\u5757\u7684\u7d22\u5f15\u3002\u6bd4\u5982\u6700\u77ed\u4e00\u5207\u9762\u7684\u6a21\u677f\u72b6\u6001\u3002 \u4e24\u79cd\u6807\u51c6\u5c06\u4f1a\u88ab\u63d0\u793a\u4e00\u8def\u89e3\u51b3\u3002\n"}, "500": {"problem_id": 4500, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,setrecursionlimit\ninput=stdin.readline\nn=int(input())\na,b=list(map(int,input().split()))\ns=set()\nfor i in range(n):\n s.add(a[i]-1)\n print('Yes')\n"}, "501": {"problem_id": 4501, "answer": "import sys\ninput = sys.stdin.readline\nn, a, x = map(int, input().split())\ncnt = 0\nfor i in range(n):\n   cnt += 1 if x[i] == a else 0 \nans = sum(x)\nprint(ans)"}, "502": {"problem_id": 4502, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nN=int(input())\nA=list(map(int,input().split()))\nB=[0]*(N+1)\nfor i in range(len(A)):\n  B[A[i]-1]+=1\nprint(*B)"}, "503": {"problem_id": 4503, "answer": "def __starting_point():\n import sys\n sys.setrecursionlimit(10**6)\n \n input = lambda:sys.stdin.readline().rstrip(\"\\n\")\n n = int(input())\n a = list(map(int,input().split()))\n dp = [[0]*(n+1) for _ in range(len(a))]\n for i,a in enumerate(range(1,n-1,-1)) :\n\tdp[a][i] = 1\n #print(dp)\n\n for a,b in zip(dp[:-1],a) :\n\n  if b-a>=0 and b+a<=n and a%b==0 : #if a-b>0, a+b=a\n print('Yes')\n"}, "504": {"problem_id": 4504, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict, deque, Counter, OrderedDict, ROUND_HALF_UP,\n \ndef __starting_point():\n s = input()\n a = len(s) // 2\n b = 0\n for i in range(a, b+1, 2):\n\tif s[i] == 'a' and (a & 1 == 0 or a & (1 << i) == 1) or (s[b - a + i + 1]!= 'b' or b == (b << (i + 2) - 1)) and b ^ i == a: b += 1\n print(' '.join(map(str, s)))\n"}, "505": {"problem_id": 4505, "answer": "# cook your dish here\ns = input()\nn = len(s)\nif s[0] == 'a':\n  print(\"Yes\")\nelse:print(\"No\")"}, "506": {"problem_id": 4506, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = sorted(a)\nans = 0\nfor i in range(n):\n\tans += a[i] * b[-i-1]\nprint(ans)"}, "507": {"problem_id": 4507, "answer": "import sys\ninput = lambda:sys.stdin.readline().rstrip()\nfrom heapq import heappush,heapify\ndef inp():return int(inp().strip('\\n')[::-1])\na,b=list(map(int,input().split()))\nn=len(a)\nm,k=0,0\nfor i in range(m):\n x,y=[int(x)-1 for x in a[i]-1]\n if x%k==0:k+=1\n print(k)"}, "508": {"problem_id": 4508, "answer": "n = int(input())\nedges = []\nfor i in range(n-1):\n   edge = list(map(int, input().split()))[:n] + [0]*(i+1) + edges[i]\n\n  if i == n-2 and edge[1] == 0: edges = [edge[2] for edge in edges]\n"}, "509": {"problem_id": 4509, "answer": "# cook your dish here\nn, k = list(map(int, input().split()))\nif n % 2 == 0: \n   print(n // 2)\nelif (n % 4!= 0 and n // 8 == 1) or (k % 8!= 1 and k // 16 == 2):\n\tprint(k // 4)\n\n"}, "510": {"problem_id": 4510, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nk, m = [int(x) for x in input().split()]\nids = []\nfor i in range(0, n):\n   idx = list(map(int, input()))[:idx.index('0')] + [0]*(len(ids)-i+1) + (ids[i]%2==0)\n\tids.append((i, 0))\nprint(k+ids)"}, "511": {"problem_id": 4511, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(max(a))"}, "512": {"problem_id": 4512, "answer": "s = input()\nq = int(input())\nfor i in range(q):\n  l = list(map(int, input().split()))\n\n  n = len(set(l)) - l.count('1')\n# print(n)\n"}, "513": {"problem_id": 4513, "answer": "import math\nt = int(input())\nfor _ in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]:\n\ta = [int(x) for x in input().split()]\n\n\tif a[0] == 1 and (a[2] - 1) % 2 == 0:\n\n \t\tprint(2)\n"}, "514": {"problem_id": 4514, "answer": ""}, "515": {"problem_id": 4515, "answer": "t = int(input())\nfor _ in range(t):\n\ta = [int(x) for x in input().split()]\n\n\tif a[0] == 0 or b[-1]==0 or c[a[1]] == 1 or d[(b[2]-1)+(c[3]-2)*(d[4]*c)//2]!= -1 or (n-a)%2 == n-b or n==a or a==b and b==c and c==d and d==(c-d) : print('YES')"}, "516": {"problem_id": 4516, "answer": ""}, "517": {"problem_id": 4517, "answer": ""}, "518": {"problem_id": 4518, "answer": "t = int(input())\nfor _ in range(t):\n\tn = list(map(int, input().split()))\n\n\ta = [int(x) for x in input()]\n \tfor i in a: print(i)\n"}, "519": {"problem_id": 4519, "answer": "q = int(input())\nfor _ in range(q):\n\tn, k = list(map(int, input().split()))\n\n\ts = input()\n\n \tif len(s) == k and k % 2 == 0 and s[:k // 2] not in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 188, 189, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 223, 228, 229, 234, 235, 240, 247, 256, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 312, 313, 322, 323, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 347, 348, 349, 353, 359, 366, 368, 371, 372, 373, 374, 376, 379, 380, 387, 388, 389, 400, 401, 405, 407, 408, 409, 420, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 436, 457, 458, 186, 267, 286, 287, 288, 289, 300, 302, 303, 304, 315, 317, 318, 319, 320, 383, 384, 386, 392, 398, 395, 396, 399, 404, 406, 413, 416, 418, 421, 417, 422, 227, 236, 237, 242, 243, 244, 245, 246, 249, 250, 251, 254, 260, 261, 268, 270, 272, 273, 274, 279, 280, 291, 298, 369, 402, 343, 325, 336, 339, 342, 344, 345, 355, 356, 357, 358, 360, 361, 363, 364, 367, 378, 390, 403, 414, 216, 225, 226, 230, 233, 239, 241, 252, 264, 265, 275, 276, 278, 282, 285, 296, 297, 499, 503, 500, 501, 600, 601, 701, 702, 700, 800, 900, 1000, 1200, 2000, 2004, 2006, 2007, 2008, 2011, )\n"}, "520": {"problem_id": 4520, "answer": "n,k=map(int,input().split())\nl=[int(i) for i in input()]\nc=0\nwhile(k>0):\n\tl.append(l[k-1]-1)\n\n\tc+=1\nprint(c)"}, "521": {"problem_id": 4521, "answer": "n = int(input())\nx = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n):\n\ts[x[i]] = i\n#print(s)\nd = [[-1]*n for _ in x]\nwhile s[-n-2]>0:\n\n\td[s.pop(0)] = min(d.count(x) for x in s.split())\n\n"}, "522": {"problem_id": 4522, "answer": "from collections import deque\nimport sys\ninput=sys.stdin.readline\nn,m=list(map(int,input().split()))\nque=deque([(0,0)])\nfor i in range(n):que.append(que[-1] + [0]*m)\nans=0\ni=1\nwhile(i<m):\n\tif i%2==0:ans+=i//2\nprint(ans)"}, "523": {"problem_id": 4523, "answer": "t = int(input())\nfor _ in range(t):\n\tn=int(eval(''.join(map(str,input().split())))[:-1])\n\n\ta = list(zip(a,list(range(n))[1:])[::-1][0])\n \tif len(set([a[i] for i in a])) == 1 and a[0] not in [-1] or a.count(0,0) == -1 and len([i+1 for j in zip(*a) if j!= i]) == 2 or [a.pop()] == [1-i-j] and (len([x for x in xs for y in ys if y!= x]==1) or x == 0) : print(\"NO\")\n"}, "524": {"problem_id": 4524, "answer": "import sys\ninput = sys.stdin.readline\nn,m=map(int,input().split())\na=[int(i) for i in input().rstrip('\\n').split('0')]\nb=a.pop(0)\nc=[0]*n\nd={}\nfor _ in range(m):\n  if a[b[0]]>0 and b[-1]=='0' and d.get(c,0)!=-1:d[c]+=1\nans=1000000000\nif ans==0:print(ans)"}, "525": {"problem_id": 4525, "answer": "t = int(input())\nfor _ in range(t):\n\tn,k = list(map(int,input().split()))\n\n\ta = [0]*(n+1)\n\n \tfor i,j in zip(list(range(0,n-1)),list([int(x) for x in input()])) : a[i]+=1\n#\t\tprint(a)\n"}, "526": {"problem_id": 4526, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn = input().split(' ')\n\n\ta = [int(x) for x in input()]\n \tans = 0\n#\tif len(set(a)) == 1 or n > 1: print(0)\n"}, "527": {"problem_id": 4527, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nt=int(input())\nfor _ in range(t):\n\tn=input().split(' ')\n\n\tl=list(map(int,(n[0]*(2*i+1) for i in input().rstrip('\\n')))[::-1])[:n.index(max(l))]\n\n \ts=set()\n   #print(s)\n#\tprint('%s %s' % (l[i],s))\n"}, "528": {"problem_id": 4528, "answer": "for _ in range(int(input())):\n h, m = list(map(float, input().split()))\n if h == 24 and m == 60: print(h)"}, "529": {"problem_id": 4529, "answer": "t = int(input())\nfor _ in range(t):\n\tn = input()\n\n\ts = list(map(int, input().split()))\n \tl, r = len(s), 0 if s[0] == \"U\" else n - (n - l) // 2 + (r - n) % 2 == 0\n#\tprint(r, l, n, s, \"RU DLD\")\n"}, "530": {"problem_id": 4530, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn = int( input() )\n\n\ta = list( map( int, input().split() ))\n\n \ts = set( [0] * len(a) for a in a if a[0]] )\n   # print(s)\n"}, "531": {"problem_id": 4531, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  d[a[i]] = i\nans = 0\nwhile len(a) > 0:\n\n  a.append(d[d.get(0,0)] + a[0] * (1 if i%2 else 0) + sum(list([x[1] for x in d.values()] if x[2]!= 0)))\nprint(ans)"}, "532": {"problem_id": 4532, "answer": "t = int(input())\nfor _ in range(t):\n\tn, k = list(map(int, input().split()))\n\n\tarr = [[0] * (k + 2) for jj in enumerate(list(range(n)), 1) if k % j == 0]\n  \tfor i, j in zip(arr[1:], arr[n - 1:])[::-1]:\n#\t\tprint(j, i)\n"}, "533": {"problem_id": 4533, "answer": "from collections import defaultdict\ndef find_children(s, cnt, cache, max_cnt=None, memo={}):\n\tif cache is not None and s[0] >= max[s[1]:] + cache[:s.index(max[min(c, s.pop(i))]):] : return max(memo.get((i+1 for i in s if i>=c[i] for j in cache if j<=cache[j] and j!=i) or (i==max(0,j) and memo[(j,i)]==None)) or memo.setdefault(cache, []) or cache.copy()[-1][0]) :  return 0\n\n\tcache.append((s) if s in memo else 0, (s+c) for s,c in enumerate(map(lambda x: x[:-1], memo)) if cache else 1)\n"}, "534": {"problem_id": 4534, "answer": "from collections import defaultdict\n class Solution(object):\n\n  # def row_ranks_by_index(index_row, index_column, col_count, column_value):\n # #[ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 225, 226, 229, 234, 239, 240, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 312, 313, 314, 317, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 347, 349, 353, 361, 363, 364, 366, 367, 368, 369, 371, 376, 378, 379, 383, 384, 389, 400, 401, 402, 405, 407, 409, 416, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 386, 286, 287, 288, 289, 290, 291, 294, 300, 302, 303, 304, 355, 356, 357, 372, 373, 374, 385, 387, 398, 399, 404, 408, 421, 417, 422, 227, 236, 237, 242, 243, 245, 246, 247, 248, 249, 250, 254, 260, 261, 266, 267, 268, 270, 273, 274, 276, 279, 282, 285, 296, 297, 298, 299, 315, 319, 320, 322, 323, 324, 325, 336, 341, 343, 344, 345, 346, 348, 359, 370, 360, 365, 390, 375, 377, 380, 388, 403, 414, 216, 223, 224, 228, 235, 244, 252, 253, 255, 258, 259, 264, 265, 272, 275, 278, 280, 284, 295, 306, 305, 316, 318, 321, 333, 339, 342, 413, 351, 352, 354, 396, 457, 458, 600, 630, 701, 702, 800, 1989, 2000, 2001, 2003, 2011, 2013, 2015, 2017, 2020)\n"}, "535": {"problem_id": 4535, "answer": "from functools import lru_cache\n\n\ndef is_prime(n):\n if n == 2 or n % 2 == 0: return False\n return True\n"}, "536": {"problem_id": 4536, "answer": "from functools import lru_cache\nimport itertools as it\ndef add_digit(a, b, c, d, e, f, g, h, i, j, k, l, m, p, q, r, s, t, u, v, w, x, y, z, dx, di, dy, pi, dd, coords, is_same, cache=None):\n if not cache or not isinstance(cache, str) or len(coords) == 0: return a\n elif cache is None or cache[0] == '1': return b\n else: cache.add(str(x) for x in digits)\n"}, "537": {"problem_id": 4537, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(1,n):\n\tans+=a[i]\nprint(ans)"}, "538": {"problem_id": 4538, "answer": "n,d = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n  x1,y1 = (int(x) - int(y))**0.5, (x1-x2)*(2*i)//(i-1) + (i+1)*y2 + i*y3 + n-i\nprint(sum(a))"}, "539": {"problem_id": 4539, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = [int(x) for x in input().split()]\nans = 0\nfor i in range(n):\n\tif a[i] % 2 == 0: ans += 1\nprint(ans)"}, "540": {"problem_id": 4540, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n  a[i] = (b[-1]+i)//2\nprint(*a)"}, "541": {"problem_id": 4541, "answer": "def check(c):\n if c in \"aeiouAEIOU\":\n  return True\n return False\n"}, "542": {"problem_id": 4542, "answer": "# coding: utf-8\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2*(10**6))\nfrom collections import deque\ndef read_int():\n return int(input())\nread = lambda: list(map(int, input().split())[1:])\nprint(read())"}, "543": {"problem_id": 4543, "answer": "def solve(a, b):\n  if (a == 0 or b ==0) or (b==0 or a == a*b): return \"Yes\\n\"; return 'No'\n\n  return int(solve(\"a+b+c\", a-b-c) + solve(\"c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z+\")\", b-a-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z))\n"}, "544": {"problem_id": 4544, "answer": "n = int(input())\nlst = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += lst[i]\nprint(ans)"}, "545": {"problem_id": 4545, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n-a)"}, "546": {"problem_id": 4546, "answer": "from sys import*\ninput = lambda: input()\nsys.setrecursionlimit(1000000)"}, "547": {"problem_id": 4547, "answer": "n = int(input())\nprint(n)"}, "548": {"problem_id": 4548, "answer": "n, m, x = list(map(int, input().split()))\nl = []\nfor i in range(n):\n  if x % i == 0: l.append(i)\nans = 0\nif m == 1: ans += x\nprint(ans)"}, "549": {"problem_id": 4549, "answer": "#!/usr/bin/env python3\nfrom collections import deque\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\ndef LI(): return [int(x) for x in input().rstrip('\\n').split(' ')]; return list(reversed(list(map(int,input().split())))); return [[x[i] for i in range(len(input()))],0]]\nINF = float('inf')\nMOD = 10**9+7\nn,m = LI()\na = [0]*n\nfor i,x in enumerate(LI()):\n\ta[x-1] = a[(i+m)%MOD]\nprint('Yes' if a.count('#') == m else 'No')"}, "550": {"problem_id": 4550, "answer": "# cook your dish here\nfrom sys import setrecursionlimit,getcontext,time\ncontext = time.time()\nn = int(context.seconds())\ns = []\nfor i in range(n):\n s.append(list(map(int,context().split())))\nprint('\\n'.join(s))"}, "551": {"problem_id": 4551, "answer": "# cook your dish here\nn = int(input())\na, b, c, d = list(map(int, input().split()))\ns = []\nfor i in range(n):\n  s.append(a + b + c + d)\nprint(s[-1])"}, "552": {"problem_id": 4552, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nn = int(input())\nf = list(map(int, input().split()))\np = [0]*5\nfor i in range(5):\n   f[i] = 1 if i%5 == 0 else 0\ndef dfs(a, b, c, d, e, f, p, q, r, s, t, u, v, w, x, y, z, m, n, l, A, B, C, D, L, S, U, V, W, X, Y, Z, M, N, P, Q, R, T,u,v,w,x,y,z,m,n,A,B,C,D,L,S,U,V,W,X,Y,Z,M, xt,xts,yt,yx,yzt,xc,vy,tx,ty,zy,r,tz): return max(f[a:b+c+d+e+f+g+j+k+x+y+z+m+n+A+B+C+D+L+S+U+V+W+X+Y+Z+M+N+R+T+u+v+w+xt+yt+yx+yz+xc+vy+tx+ty+zy+r+t+zig+ry+gy+h+l+p+q+rs+ts+tl+s+qs+uts+vv+xs+yy+zz+xx+xy+kl+mn+nn+pp+rl+su+pa+rb+np+py+rc+pr+pt+px+rr+ru+ue+sv+tc+tn+nd+te+ew+mk+gh+hh+gg+ll+gl+mt+mb+hm+im+bm+if+dx+dy+ib+bc+ac+ad+ci+ed+ce+cc+cd+dd+dc+de+el+ke+ic+ir+is+si+ii+iii+iv+lt+i+il+ih+in+ij+io+ik+ibu+imo+mi+ipp+my+qq+nm+pm+pn+red+rf+re+tp+rice+tf+fr+fb+gb+bt+bb+ct+bo+cn+co+br+du+cl+en+eb+ec+es+eh+ge+le+ha+hi+he+hu+hn+hl+kh+ky+kr+ket+lc+kk+la+lb+oc+ly+lo+ln+ob+ori+os+jp+pi+pl+pb+rol+qi+ro+sm+sl+sb+sr+sp+sg+gi+ig+gd+eg+ei+fg+fl+fi+fm+fd+Gb+AD+GB+BIF+BFG+BEI+IIIITo+COST+CT+MD+MN+NY+MM+NS+MA+MI+OM+PM+NR+PC+PR+PT+RB+SR+SF+TT+FT+FR+FJ+FI+FK+FF+GO+GR+GG+GL+MF+MB+IM+MY+MIN+NM+NP+PB+LC+CC+CD+DE+EC+ED+EE+END+EN+ER+IE+IQ+IH+IL+IT+CL+CM+LM+LI+LL+LS+LT+LV+LY+NO+KO+NN+OS+NT+OU+US+UG+ZA+UA+VT+ZE+GU+YE+CE+EG+EF+FG+GA+GH+GI+GS+GK+FX+IG+IR+JC+JS+KS+MAP+PI+Q+RR+SS+SC+SN+TC+TD+TB+BN+BO+IB+BC+AC+BA+BP+BB+CCC+ade+ace+bfs+bs+ca+cs+dm+cb+da+db+deb+ee+eff+ef+ff+fe+fix+fw+fff+fn+ki+no+now+ou+or+obe+id+ind+inn+oi+ip+ Loop+OO+Pi+PL+PP+RL+RS+IS+RET+RF+FO+FFFF+GT+FIN+GRE+HR+GN+HK+KI+KL\u2212JS\u2212LT\u2212VC\u2212IL\u2212C\u2212V\u2212VT\u2212EEK+IA\u2212IE\u2212IT\u2212CL\u2212IS\u2212S\u2212T\u2212"}, "553": {"problem_id": 4553, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout, setrecursionlimit\nimport math,bisect,math.random,itertools,collections,heapq,array,functools\nsys_stdin = open(0, 'i', 'r') or open('i','w')\nstdout.write('{}'.join(map(str, list(itools.accumulate(s), math.inf).split())))\n"}, "554": {"problem_id": 4554, "answer": "# -*- coding by date: 2015-02-10 16:14:28\nimport numpy as np\nn = int(input())\nl = []\nfor i in range(n):\n l.append([int(x) for x in input().split()])\nprint(min(l))"}, "555": {"problem_id": 4555, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(10**7)\nfrom heapq import heappush,heappop\ndef solve(n,a,b,k):\n\tif a == b: return a + b + k\n   if a < b or b < a or (a >= b and a <= b): return -1\n\n\ti,j = 0,n-a+b+k+1-i+2*a-b-1+i\n\n \twhile i < n and j < len(a) and (j >= i or a[i] > b[j]): i += 1\n"}, "556": {"problem_id": 4556, "answer": "#dt = {} for i in x: dt[i] = i\nimport sys\nsys.setrecursionlimit(100000)\ninput = lambda: sys.stdin.readline().rstrip()\nprint(input())"}, "557": {"problem_id": 4557, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout, setrecursionlimit\ndef read_int(): return int(stdin.readline().rstrip() or '\\r\\n')\n\n  # Input data\n  return list(map(int, input().split(__import__('sys').join(str(x) for x in range(1, 100)))).values())\n\n\n\n"}, "558": {"problem_id": 4558, "answer": "# cook your dish here\nimport math\nn = int(input())\na = [int(x) for x in input().split()]\nprint(sum(a))"}, "559": {"problem_id": 4559, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a[0])"}, "560": {"problem_id": 4560, "answer": "def solve(N, A):\n  if N == 0 or A == A[::-1] : return \"No\"\n\n  N += 1\n#  print(A)\nn = int(input())\na = list(map(int, input().split()))\nprint(solve(n, a))"}, "561": {"problem_id": 4561, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict,deque,OrderedDict\ndef is_safe(x,y):return x<y and y<x and (x==y or (y==0 or x>y) or ((y-x)+(x-y))==1)\nclass Node():\n  def __init__(self, val=0, left=None, right={}):self.val=(val,left)if left is not None else self.left=(left,Node(val=val+left.right) if val else None)elif val in [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,180,181,182,183,184,186,187,188,189,190,191,194,195,196,197,198,199,204,205,206,207,208,209,210,211,212,223,224,225,227,228,229,232,233,234,235,236,237,239,241,242,254,255,256,257,260,269,271,273,274,385,388,389,400,405,406,407,409,419,420,421,432,433,444,435,446,447,448,480,481,484,486,487,488,489,490,491,494,500,501,502,503,504,509,512,593,609,610,641,643,654,667,668,669,680,681,686,687,688,689,690,694,695,696,697,698,699,700,751,554,556,357,358,359,360,361,362,363,364,367,368,369,372,373,376,379,380,383,392,393,394,395,396,397,398,401,416,418,425,426,627,628,649,646,653,658,659,660,661,673,684,775,786,793,806,807,808,911,217,220,221,222, 233, 244, 245, 247, 256, 257, 258, 260, 263, 266, 267, 268, 271, 277, 280, 281, 283, 293, 307, 311, 312, 313, 314, 315, 326, 327, 328, 330, 331, 336, 338, 347, 349, 353, 356, 366, 368, 370, 371, 376, 379, 383, 384, 389, 392, 400, 401, 409, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 437, 438,439,440,441,442,453,456,457,460,464,468,469,471,473,479,496,498,600,601,607,603,613,614,616,618,427,429,436,437,438,439,440,441,442,443,444,445,446,447,455,459,461,167,179,180,187,188,191,202,217,229,240,241,251,257,260,280,281,303,307"}, "562": {"problem_id": 4562, "answer": "#!/usr/bin/env python3\nfrom math import ceil\nn = int(input())\na = [int(x) for x in input().split()]\ns = []\nfor i in range(n):\n  s.append(a[i])\nprint('\\n'.join(s))"}, "563": {"problem_id": 4563, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\nt = [int(x) for x in stdout.write(str(n)+\"\\n\")]\nc = 0\nfor i in range(1,n+1):\n\tc += t[i]*(t[n-i-1] + 1)//2 \nprint(c)"}, "564": {"problem_id": 4564, "answer": "s = input()\nprint(yes)\n"}, "565": {"problem_id": 4565, "answer": "# https://atcoder.jp/contests/arc082/tasks.php?t=18\nn = int(input())\ns = list(map(str, input().split()))\na = []\nfor i in range(n-1):\n  a.append(s[i+1] + s[-i])\nprint(len(a))"}, "566": {"problem_id": 4566, "answer": "n,m=map(int,input().split())\nc=0\nfor i in range(n):\n\tif i%2==0 and i!=n-1:c+=1;print(c)"}, "567": {"problem_id": 4567, "answer": "n = int(input())\nfor i in range(n):\n s = list(map(int,input().split()))\n if s[0]==s[-1]:\n  print(10)\n elif 10==sum(s)%10:print(25)"}, "568": {"problem_id": 4568, "answer": "#!/usr/bin/env python3\ndef __starting_point():\n N = int(input())\n S = list(map(int, input().split()))\n \n for i in range(N-1, -1,-1):\n\tX = S[i:i+3] if i>3 else Y[-i-3:]\n\n print(max(X, Y))"}, "569": {"problem_id": 4569, "answer": "# cook your dish here\ns = input()\nn = len(s)\nif s[0] == 'T':\n  print('T')\nelif (s[n-1]!= 'C') and (n > 0 and s.count('rainy' or 'cloudy') > n-2):\n\tprint('Rainy day: '+str(n - 2) + ':'+'\\n'+s.replace('C',''))\nelse: print('')"}, "570": {"problem_id": 4570, "answer": "n,a,b=map(int,input().split())\nx=0\nfor i in range(n):\n x=x+a*b\n print(x)"}, "571": {"problem_id": 4571, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6) #\u5185\u5bb9\u4e0d\u4f1a\u8d85\u65f6\ndef read_int(): return int(input())\nread_ints = lambda x: list(map(int, input().split()))\nmod = 10**9+7"}, "572": {"problem_id": 4572, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n-1):\n  if s[i] in 'abcdefghijklmnopqrstuvwxyz': cnt += 1\nprint(''.join(map(str,s)))"}, "573": {"problem_id": 4573, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n  b[i] = a.pop(0) + 1\nprint('\\n'.join(b))"}, "574": {"problem_id": 4574, "answer": "n = int(input())\na = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n a.append(a[-1]+i)\nprint(ans)"}, "575": {"problem_id": 4575, "answer": "n = int(input())\nd, x = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n  s[i+1] += d\nans = 0\ni = n-d\nwhile i >= 0 and i+d <= n:\n\n  if i + d < n and (i-1)%2 == 0:ans += 1 \n\n"}, "576": {"problem_id": 4576, "answer": "from collections import defaultdict\nn = int(input())\nx = list(map(int, input().split()))\ny = 0\nfor i in range(n):\n y += x[i]\n x.sort(reverse=True)\nprint(y)"}, "577": {"problem_id": 4577, "answer": "def main():\n\ta, b, c = list(map(int, input().split()))\n\n\tif a <= b <= c <= a and a > b > c:\n\n \t\tprint(\"Yes\")\n\n\n\n"}, "578": {"problem_id": 4578, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\na = [0]*(n+1)\nfor i in range(1, n+2):\n  a[i] += m\nprint(max(a))"}, "579": {"problem_id": 4579, "answer": "n = int(input())\ns = list(map(int,input().split()))\nprint(s)"}, "580": {"problem_id": 4580, "answer": "n = int(input())\nA = list(map(int,input().split()))\nprint(max(A))"}, "581": {"problem_id": 4581, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**6)\nfrom heapq import heappush,heappop\nread = lambda: sys.stdin.readline().rstrip('\\r\\n')\ndef readlines():\n return list(map(int, read().splitlines()))\nn = int(read())\ns = read()\ni = 0\nwhile i < len(s):\n if s[i] == 'x':\n  s = s.replace('x','') + s\n i += 1\nprint(i)"}, "582": {"problem_id": 4582, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import defaultdict, deque, Counter, OrderedDict\nclass Player(object):\n  def __init__(self, val=0, n=len(val)-1, d={}): self.val = val + 1 if val in d else -1 * (n-d) + val\n\n  @staticmethod\n__only__\ndef is_player(x): return x in list(d.values()) and x.is_integer() or x == x[::-1]\n"}, "583": {"problem_id": 4583, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nsys.setrecursionlimit(10**7)\nfrom collections import defaultdict, deque\ndef solve(a,b,c,d):\n  if a==b==c==d:return a, b, c, d\n\n  ans = a*d + b*c + d*(c+d+1) + (a-d-1)*(b-c) - (b+c*(-1))*a*b - ans*ans + ans * (c - d - 1) *(d - b - c - a)"}, "584": {"problem_id": 4584, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n  if a[i] == b[-1]:b.append(i)\nprint(sum(b))"}, "585": {"problem_id": 4585, "answer": "#!/usr/bin/env python\nfrom collections import deque\nimport sys\nsys.setrecursionlimit(10**6)\nINF = float('inf')\nmod = 10**9+7\ndef inp(): return list(map(int, sys.stdin.readline().strip().split()))  # input: input line: line number: number of k-th step (1-indexed): index: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18\n"}, "586": {"problem_id": 4586, "answer": "def main():\n\tn = list(map(int, input().split()))[::-1]\n\n\tif (n[0] == 3 or n[3]!= 0) : return \"Yes\\n\"\n \tfor i in range(3, int(len(n) / 3) + 1, 3):\n#\t\tprint((\"{}\".format(i), \"\".join(str(x) for x in n)))\n"}, "587": {"problem_id": 4587, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * n\nc = 0\nfor i in range(n):\n  if a[i] > b[-1]: a.pop(i+1) + 1\nans = sum(a[:n])\nprint(ans)"}, "588": {"problem_id": 4588, "answer": "# coding: utf-8\nimport math\nn = int(input())\nfor i in range(n):\n  a, b, c, d, e, f = list(map(int, input().split()))\n\n  if a < b < c < d < e < f or a > b > c > d > e > f: print(\"<\", end=\"\")\n"}, "589": {"problem_id": 4589, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict as dd\nsys.setrecursionlimit(100000)\nn = int(input())\nl = []\nfor i in range(n):\n  l.append(list(map(int, input().split())))\nprint(''.join(l))"}, "590": {"problem_id": 4590, "answer": "def main():\n\tn, m = list(map(int, open(0).readline().split()))\n\n\ta = [0] * m\n\n  \tfor i in range(n):\n \n#\t\tif a[i] == 0: a.append(i)\n*a, = 0, -1\nfor a in a: print(a)"}, "591": {"problem_id": 4591, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10 ** 9)\nINF = 10 ** 18\nMOD = 998244353\ndef LI(): return [int(x) for x in sys.stdin.readline().split('\\n')]\nreturn list(map(int,list(sorted(set(LI())))));"}, "592": {"problem_id": 4592, "answer": "n = int(input())\nmod = 10**9 + 7\na = [0]*(n+1)\nfor i in range(1, n+2):\n\ta[i] += (mod*i)%mod\nprint(a)"}, "593": {"problem_id": 4593, "answer": "# from math import gcd\nimport numpy as np\nn = int(input())\na = np.zeros(n, dtype=np.int64)\nfor i in range(1, n+1):\n  a[i] += 1\nans = n-a[-1]\nprint(ans)"}, "594": {"problem_id": 4594, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n  a[i] = a.pop()\nprint(max(a))"}, "595": {"problem_id": 4595, "answer": "#!/usr/bin/env pypy3\nfrom sys import stdin,setrecursionlimit\ninput = lambda:stdin.readline().rstrip('\\r\\n')"}, "596": {"problem_id": 4596, "answer": "def solve(n,a):\n  if n%2==0 or n==1 or a==n-1: return 0\n#print(a,n)\nn=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in a: s=s+i\nprint((s)//2)"}, "597": {"problem_id": 4597, "answer": "def power(n, p):\n if n == 1: return 1\n elif n % 2 == 0 and (n // 2) == p: \n  return (p * n) % p\n else: raise ValueError(\"power not in range\")\n"}, "598": {"problem_id": 4598, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nprint(sum(a))"}, "599": {"problem_id": 4599, "answer": "n = int(input())\nA = list(map(int, input().split()))\nB = [A[0]]\nfor i in range(1, n):\n  if A[i] > B[-1]: B.append(i)\nprint(\"{}\".format(B[n]))"}, "600": {"problem_id": 4600, "answer": "n, m, p = map(int, input().split())\ns = [0] * (n + 1)\nfor i in range(m):\n  s[i] += 1\nprint(s[-1])"}, "601": {"problem_id": 4601, "answer": "n,k = list(map(int,input().split()))\nf = [0]*(n+1)\nfor i in range(1,n):\n  if f[i] == 0: f.append(i) \nif k == 1: k = 2\nprint(sum(f))"}, "602": {"problem_id": 4602, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(int(input()))"}, "603": {"problem_id": 4603, "answer": "# coding: utf-8\nimport sys\nsys.setrecursionlimit(10**6)\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nc = 0\nd = n\nfor i in range(n):\n  a[i] = b[-1] + c\nprint(max(a))"}, "604": {"problem_id": 4604, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n):\n\tans[i] = (a[-i]+1)%1000000007\nprint(ans)"}, "605": {"problem_id": 4605, "answer": "from sys import stdin\nn,a,b=map(int,stdin.readline().split())\ns=sorted(list(enumerate(s),key=lambda x:x[1],reverse=True))[::-1]\nans=0\nfor i in range(n):\n  ans+=(b-a)\nprint(ans)"}, "606": {"problem_id": 4606, "answer": "def __starting_point():\n n=int(input())\n a=list(map(int,input().split()))\n print(a.count('ABC'))"}, "607": {"problem_id": 4607, "answer": "from collections import deque\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2147483647)\nn = int(input())\nfor _ in range(n):\n a, b = list(map(int, input().rstrip().split()))\n if a == 1 or b == 2 or (a % 2 == 0 or a % 5!= 0 and b % 4 ==0):\n\n  print((b - 1) // 2)"}, "608": {"problem_id": 4608, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nprint(n)\n"}, "609": {"problem_id": 4609, "answer": "# https://www.codechef.com/problems/BOYY2UjY9\nfrom collections import deque\nn = int(input())\na = list(map(int,input().split()))\ns = set()\nfor i in range(n):\n  a[i] = str(i) + \" \"\nb = [0]*(len(a)-1) \nc = 0\nwhile(c < len(b)):  \n\n  if (a[b[c]] == \"1\" and b[-1] == 0) and (c+1 == b.count(\"1\")) and a.pop()==\"1\":\n\tb.append(\" \")\n\n\tc += 1\nprint(sum(s))"}, "610": {"problem_id": 4610, "answer": "n,k = list(map(int,input().split()))\ncnt = 0\nfor i in range(n):\n  if k%i==0 and i!=n-k-1: cnt+=1 \nif k==n: k=0\nprint(1)\n"}, "611": {"problem_id": 4611, "answer": "#!/usr/bin/env python3\nfrom collections import deque\nimport sys\nsys.setrecursionlimit(max(10**5))\ninput = sys.stdin.readline\nINF = float('inf')\nmod = 10**9+7\ndef LI(): return [int(x) for x in input().split()]  # \u533a\u9593\u3092\u8a08\u7b97\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u5024\u3092\u6301\u3063\u3066\u304a\u3051\u3070\u306a\u3089\u9802\u70b9\u306e\u3088\u3046\u306a\u6570\u5b57\u3092\u305d\u308c\u4ee5\u4e0b\u3067\u6e08\u307e\u3048\u308b\u304b\u304c\u6700\u5c0f\u306e\u8ddd\u96e2\u3092\u8abf\u3079\u308b\u3068\u304d\u306f\u3001\u8f9e\u66f8\u304d\u3061\u3083\u3046\u306e\u3067\u3001\u3069\u3046\u3057\u3081\u306b\u7f6e\u304f\u3068\u3053\u308d\u3080\u90e8\u5206\u306e\u9577\u3055\u306b\u306a\u3063\u305f\u3082\u306e\u3092\u898b\u305f\u3060\u304d\u307e\u3057\uff4f\uff12\u5343\u4e07\u518d\u4ee3\u5165\u3067\u304d\u308b\na = [LI() for _ in range(5000)]\nprint('Yes' if a[0] == '0' else 'No')"}, "612": {"problem_id": 4612, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,setrecursionlimit\ndef read_int():\n  return int(stdin.readline().rstrip(\"\\n\").decode()[::-1])\n\n  # stdout = open(\"test.txt\", \"w\").strip()\nn = lambda x:x\nstdout.write(str(n.__len__()))\n"}, "613": {"problem_id": 4613, "answer": "from collections import defaultdict\nn, m = map(int, input().split())\nedges = []\nfor _ in range(m):\n  a, b = [int(x) for x in input()]\n\n  if a[0] == b: edges += [a[1] for a in edges]\nelse: print(0)"}, "614": {"problem_id": 4614, "answer": "# -*- coding: utf-8\nfrom sys import stdin\ninput=stdin.readline\na,b,c=list(map(int,input().split()))\nans=[]\nfor i in range(0,a+1):\n\tans.append(c)\nprint(len(ans))"}, "615": {"problem_id": 4615, "answer": "#!/usr/bin/env system\nfrom sys import stdin,setrecursionlimit\nimport math,string,itertools,fractions,heapq,collections,re,math,array,bisect,sys,random,time,copy,functools\ninput = lambda :int(stdin.readline().strip())\ndef solve(A,B,C,D,E,F,G,H,I,J,K,L,M,N,R,S,W,X,Y,Z):\n\tif A==B==C==D==E==F==G==H==M==N==R==S==W==X==Y==Z==None:\n\n\t\tprint((sum(map(lambda x:x*math.sqrt(x),(X*x+y*y+z*z))))/2)\n\n \telif (A == B == C == D == E == F == L == M == N == R == S == W == X == Y == Z == None) or (B!= C!= D!= E!= F!= I!= K!= L!= M!= R!= S!= W!= X!= Y!= Z):   #print(i,j,k,l,m,n,r,s,w,x,y,z,b,c,d,e,g,h,is,u,v,q)\n"}, "616": {"problem_id": 4616, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(2*(10**5)+1)"}, "617": {"problem_id": 4617, "answer": "def __starting_point():\n  \n import sys\n sys.stdin = open('input.txt', 'r')\n from collections import defaultdict as dd, deque\n print(*map(int, input().split()))"}, "618": {"problem_id": 4618, "answer": "def main(s, k=0):\n  if k==0: return \"\".join([str(i) for i in range(0,k) if i[1]!=i[0]])\n\tprint(list(map(int,s)))"}, "619": {"problem_id": 4619, "answer": "def area(w,h,x,y):\n  return w*(h-x)*(x-y)+(w-h)*w//h//x\n# import math\nimport sys\nsys.setrecursionlimit(max(10**6))\ninput = sys.stdin.readline\nfrom heapq import heappush,heappop\ninp = lambda: list(map(int,input().split())),lambda: [int(i) for i in input().rstrip('\\n').split()]"}, "620": {"problem_id": 4620, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nc = [0]*n\ns = list(map(int, input().split()))\nfor i in range(n):\n\tc[s[i] - s[n - i] + 1] = i\nans = []\ntime = 0\nwhile time < n - 2:\n\n\tif c[time] == 0: ans.append([time, 1])\n \telse: time += 2\nprint(len(ans))"}, "621": {"problem_id": 4621, "answer": "import sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**6)\nread = lambda: list(map(int, input().split()))\nfrom collections import defaultdict, Counter, OrderedDict, deque, list, to_key, heapq\nmod = 10**9+7"}, "622": {"problem_id": 4622, "answer": "n=int(input())\na=list(map(int,input().split()))\nif a[0]==a[-1]:\n print(\"YES\")\nelse:print(\"NO\")"}, "623": {"problem_id": 4623, "answer": "t = int(input())\nfor i in range(t):\n  \n n =int( input() )\n a =list(map(int,input().split()))\n s =sum(a)\n if(len(s)==1 and s!=s*(n-1-a[0])) and (s>=2 and a[1]==s-2*s+1):\n\n  print(3)"}, "624": {"problem_id": 4624, "answer": "t = int(input())\nfor _ in range(t):\n   n, x = list(map(int, input().split()))\n\n  if n == x or x == 1: print(0)\n"}, "625": {"problem_id": 4625, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n   n, m = list(map(int, input().split()))\n\n  s = str(n).replace('a','b')\n# print(s)\ns = input()\nnum = 0\ndp = [[0] * (n + 1) for i in s]\ndp[0][1] = 1\nwhile num < m and s[num] =='': num +=1\nprint(num)"}, "626": {"problem_id": 4626, "answer": "q = int(input())\nfor _ in range(q):\n\ta = list(map(int, input().split()))[:q]\n\n\tb = [0]*(len(a)+1)\n\n  \tfor i in a: b[i] = min(b[-i-1]+1, a.count(i), a[0]-i) + b.pop(0) -1\n"}, "627": {"problem_id": 4627, "answer": "from collections import defaultdict, deque\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\ndef read_int():\n  return int(input())\nread_ints = lambda x: list(map(int, input().split()))\nmod = 10**9+7"}, "628": {"problem_id": 4628, "answer": "n, m, k = list(map(int, input().split()))\ndist = [0 for _ in range(k+1)]\nroad = [[0, 0]]\nfor x,y in zip(list(range(1, n + 1))):\n  if road[x][y] == 0 and dist[y][x]!= 0:   dist.append(y)\nprint(dist[k])\n"}, "629": {"problem_id": 4629, "answer": "q = int(input())\nfor i in range(q):\n   n = list(map(int, input().split()))[:3]\n\n  print(n)\n"}, "630": {"problem_id": 4630, "answer": "import sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**9)\nq=int(input())\nfor _ in range(q):\n\tn,p=list(map(int,input().split()))\n\n\tif p[0]%n!=0:print(n*p[1]-1)"}, "631": {"problem_id": 4631, "answer": "from sys import stdin\ninput = lambda : list(map(int,stdin.readline().strip().split()))\ndef gcd(a,b):return b if a>b else -a if b else a\ns = str(input())\nfor i in range(len(s)-1):\n\tif s[i]!=s[-i+1]:return 0\nprint(min(max(abs(x-y) for y in s)))\n"}, "632": {"problem_id": 4632, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor testcase in range(t):\n   # input = input().rstrip(\"\\r\\n\").split(\" \")\n# \ndef check(s,a,b,c,d,e,f,g,h,j,k,l,r,u,s):\n\n  if s[a] == b[c] and k[l] < u[r] or l < g[u[j]] or j < h[k]:\n\treturn 'NO'\n\n\tif a == 0 and j == k and l == r or k == l or u == s and c == d and e == f and g == h and h == u and u!= s or s!= e and f!= u or g!= r and a!= b and b!= c and d!= g and (s[x] + x == x+1 and x!= x +1) and s.count(\"R\"*k) < e[0] : return 'YES'\n"}, "633": {"problem_id": 4633, "answer": "import math\nfor _ in range(int(input())):\n n,s = list(map(str,input().split()))\n s = math.ceil(n/s)\n print(min(s))"}, "634": {"problem_id": 4634, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn = int( input() )\n\n\ta, b = list( map( int, input().split()))\n\n \tans = min( (a - 1) // 2, (b - (n - a) ) / 2 + (1 if n % 2 else 0) * (2 * n - b ) + ans)\n"}, "635": {"problem_id": 4635, "answer": "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n\tn, k = list(map(int, input().split()))\n\n\ts = input()[:n-1] + [0] * (n - 1) + s[n % len(s) - 2:].count('a') + '0' * 26 + ['a' for i in s.split(' ')]) + (s.rjust(k,''), k)\n  \tprint('c')\n"}, "636": {"problem_id": 4636, "answer": ""}, "637": {"problem_id": 4637, "answer": "for _ in range(int(input())):\n   n, k = list(map( int, input().split() ) )\n\n  ans = sum( n * k for n in a ) if k > 0 else 0 \n"}, "638": {"problem_id": 4638, "answer": "# cook your dish here\nn,c = list(map(int,input().split()))\na = [int(i) for i in input().strip()]\nb = []\nfor _ in range(c):\n\ta.append(b.pop(0) + 1)\nans = 0\nwhile(len(a) > 0 and a[-2] <= b[0]):\n\n\tif(ans == 0): ans = 1 + (b[1] - c) * (c - (a[2]-1))//2\nelse: ans=1 + ans\nprint(*ans, sep=\"\\n\")\n"}, "639": {"problem_id": 4639, "answer": "t = int(input())\nfor _ in range(t):\n\tn, k = list(map(int, input().split()))\n\n\tl = [0] * (k + 1)\n\n \tfor i, s in enumerate(sorted(set(l)), start=0, reverse=1): l[i+1] = s + (i + k) % 2\n\n"}, "640": {"problem_id": 4640, "answer": "for _ in range(int(input())):\n\tn, k = list(map( int, input().split() ) )\n\n\tx = [ int(i ) for i in input() ]  # x[i] = i\n\n \ty = []\n  \n#\tfor i, i_x in enumerate( x, 1 ) : y.append([ i ] * (i - 1) )\n"}, "641": {"problem_id": 4641, "answer": ""}, "642": {"problem_id": 4642, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn, x, y = list(map(int, input().split()))\n\n\ta = [int(x) for x in input()] + [0] * (y - x)\n \tans = []\n#\tfor a, b in zip(list(range(n)), [x]*(y-x+1))[:: -1]:\n"}, "643": {"problem_id": 4643, "answer": "n = int(input())\narr = list(map(int, input().split()))\nl = []\nfor i in range(n):\n  l.append(arr[i])\nprint(' '.join(l))"}, "644": {"problem_id": 4644, "answer": "import math\nt = int(input())\nfor _ in range(t):\n\tn, m = map(int, input().split())\n\n\ta = [int(x) for x in str(n)] + [0]*(m+1)\n  \tprint(\"YES\") if sum(a)%2==0 else \"-\""}, "645": {"problem_id": 4645, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn, m = list(map(int, input().split()))\n\n\tif m%2 == 0: print(-1)\n \tprint(m//2)\n\n"}, "646": {"problem_id": 4646, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn, m = list(map(int, input().split()))\n\n\ta = [0] * (n + 1)\n\n \tif n % 2 == 0 and m < m * 2 or m == m // 2 and n > n // 3: print(\"-\", end = \" \" * m, sep=\"\\n\")\n  "}, "647": {"problem_id": 4647, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n   b[a[i]]+=1\nprint(max(b))"}, "648": {"problem_id": 4648, "answer": "def solve(n,x):\n if n==1: return x\n return min(solve(x,n) for x in input().split())\nfor _ in range(int(input())):\n\n n,m=input().strip('\\n').split()\n x=n//m\n print(0)"}, "649": {"problem_id": 4649, "answer": "q = int(input())\nfor qq in range(q):\n  n, k = list(map(int, input().split()))\n\n  s = 'RGB' * (n + k)\n#  print('s', s, '=', end=''* end, end='')\n\n #  d = [0] * k\n # # d[i] = min(d[j] for j in s if len(s) % k == 0 and s[-i-1]!= '\\n')\n\n if k % 2 == 1: # r, g, b\n if n % 3 == 2:  # a, c, d, e, f\n d.append(n // 3 - 2) \n e.add(k // 2 - 3) # e[k] == n\n s += str(max(e.count('R'), 0)) +'' + str('RGB') + s\n\n print(min(c,d))"}, "650": {"problem_id": 4650, "answer": "t = int(input())\nfor _ in range(t):\n   a = [int(x) for x in input().split()]\n\n  ans = a[0] * (a[-1] + 1) // 2 + (1 << a.index(max(a)) - 2)\n"}, "651": {"problem_id": 4651, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\narr = list(map(int, input().split()))\nfor i in range(n):\n\tarr[i] = min(arr)\nprint('\\n'.join([str(x) for x in arr]))"}, "652": {"problem_id": 4652, "answer": "q = int(input())\nfor _ in range(q):\n   n = list(map(int, input().split()))\n\tprint('YES' if n[0] == 1 else 'NO')"}, "653": {"problem_id": 4653, "answer": "from sys import stdin\nt = int(stdin.readline())\nfor _ in range(t):\n\tn,k = list(map(int,input().split()))\n\n\tif k % 2 == 0 and k/2 <= n: print(n-k)\n"}, "654": {"problem_id": 4654, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn, k = list(map(int, input().split()))\n\n\ta = [0] * (k + 1)\n \tfor i, x in enumerate(sorted(list(range(n)), reverse=True)): a[i+1] += x % x\n"}, "655": {"problem_id": 4655, "answer": "q = int(input())\nfor _ in range(q):\n   a, b, c = list(map(int, input().split(' '))), [], [int(x) for x in input()], a + b + c\n"}, "656": {"problem_id": 4656, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(0,int(input())):\n\tn,k=list(map(int,input().split()))\n\n\ts=input()[:n]\n\n \tif s.startswith(\"a\") and len(s)==3 and s[0]+s[1]==\"a\":\n#\t\tprint(3)\n"}, "657": {"problem_id": 4657, "answer": "q = int(input())\nfor i in range(q):\n   n, k = map(int, input().split())\n\n  a = [int(x) for x in str(n)] + [0] * (k + 2)\n"}, "658": {"problem_id": 4658, "answer": "from functools import lru_cache\n\n\ndef binary_to_hex(n):\n return bin(32) if n in '0123456789abcdefghijklmnopqrstuvwxyz' else ''.join('0' * (32 - i) for i in range(0, len(i)) if i % 2 == 0)\n\n\n\n \n\n"}, "659": {"problem_id": 4659, "answer": "from collections import defaultdict\n class Solution(object):\n # dp[i][j] = sum(dp[j][k] for k in range(i, j) for j in k)\n"}, "660": {"problem_id": 4660, "answer": "from itertools import chain, zip_longest\ns = 'abcdefghijklmnopqrstuvwxyz'\nl = [s]\nfor i in chain.from_iterable(l, lambda x, y: len(x), fillvalue=None, fill=''): "}, "661": {"problem_id": 4661, "answer": "from functools import lru_cache\nimport itertools\nn = 1\nl = [1]\nfor i in range(2, n+1): l.append(l[i-1])\nprint(*l)"}, "662": {"problem_id": 4662, "answer": "from functools import lru_cache\nclass TreeNode(object):\n\n  def __init__(self, val=0, left=None): self.val = val + (1 if left is None else val for left in val if not left else 0) + val\n\n\n class Tree():\n\\t\n \\t_tree = Tree(val=val)\n\n def _tree_from_string_with_digits_in_XML_LIS(node): return node.__dict__ if node else None\n\n class Node(TreeNode(-1, 1), 1): \n '''\n \\\"\\\"\\\"\n [1] [2]\n\n [3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,148,149,151,152,153,155,156,157,158,159,160,161,162,163,164,166,167,168,169,180,181,184,186,187,188,189,190,191,194,195,196,197,198,199,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,220,221,222,223,224,225,231,232,233,235,236,237,238,239,241,242,244,251,254,255,257,258,259,271,273,274,385,388,389,390,391,394,425,426,433,436,437,438,439,432,443,444,445,446,457,461,463,464,469,467,479,487,488,489,490,491,494,501,503,509,512,593,599,601,603,606,607,608,609,610,641,643,654,666,667,669,680,681,687,690,694,696,697,698,699,751,552,554,556,557,559,560,572,573,576,577,587,589,595,596,614,617,640,653,660,661,673,674,illac,677,678,679,683,691,701,709,714,809,820,804,806,807,808,810,815,227,228,229,234,240,243,252,263,304,308,307,311,313,317,331,337,347,353,359,367,373,377,379,383,397,401,404,409,419,421,424,431,434,435,441,447,448,459,471,477,480,481,484,486,499,538,551,553,555,561,582,584,605,616,657,659,668,684,686,688,789,792,793,794,787,797,800,801,803,805,Pearan_Tree()"}, "663": {"problem_id": 4663, "answer": "import re\nn = int(input().strip())\nre = re.compile(r'^[0-9]*$')\nprint(re.findall('YES',re))\n"}, "664": {"problem_id": 4664, "answer": "from collections import defaultdict, deque, Counter, OrderedDict, namedtuple\nimport bisect, copy, heapq, itertools, starmap, math, sys, threading\nsys.setrecursionlimit(1000000**9)+100000000**0x40000\ninput = lambda : sys.stdin.readline().rjust(2**(len(input()))-1) + [str(i) for i in input()]"}, "665": {"problem_id": 4665, "answer": "import math\nn = eval(input())\nprint(sum(map(int,input().split())))\n"}, "666": {"problem_id": 4666, "answer": "def is_odd(n):\n if n % 2 == 0 and n not in list(range(3,n+1,2)): return True\n else: return False"}, "667": {"problem_id": 4667, "answer": "from sys import stdin,stdout,setrecursionlimit,getcontext,collections,deque,itertools,lru_cache,heapq,sys,random,pypy2,math,string,bisect,str,queue,socket,PriorityQueue,socketserver,os,thread, IOBase,MAX_PROCESSES,NO_COMMANDS,FORCE,NUMSIL_INIT,NOT_ATM_TIME,TIME_USED,OUTPUT,VALUE,DECIMAL,BINDA_NUMBER,BIG_ENGLISH,ALPHABET,BigInteger,Codeforces,CODING,ACSKA,ADMINTHETAS,ABA,BAI,BB,BCM,CARVIN,CAVANA,CSUNDERS,CNTHESIS,AGREEKS,ANIMATION,ASPSCORE,ASCSE,VALID_DISTINCT,VARIANthousand,TWENTIANS,THREE,ONE,EIGHT,NEIGHBOUTS,EVENLYNTHOUS,LINTHONY,IAEA,JULY,NIUMMY,LIMIT_OF_NINE,MINIMUM_SAFE,MAY_SCHEDULER,MICHEALLOC,NUMTHUMBALMONIES,POLYGON,POINT,SPEIED_UP,SLAVE,START_LIN,SOUTH,TLE,UBLITIME,ILINEMEN,IVANA_IS_THIRD_CEVIXIUSTHEMISPONIEW,ISTHANTHOUGHT,IPOE,ITEM_ADDRESS,IMPOSSIBLE,ONLY,OPEN_DEAD,OPERATE,Possible,PASSIVE,PRIMARY,RUN,SEPENDENCE,SRWIN,WINTHAYS,WILLIAM,XCODE_DECIDE,YELLIITO,ULINFINITY,INFONTS_PER_WEEK,HOUSE_HOURS,SECONDS_TO_THIS_CATEGOURSEEPCODE,HALLOW_MINUTE,INTEGRATE_CHARGE,ILLEGAL_FUNCTION,FUNCSManager,KEYBOARD_POINTER,LIBCACHE,LOCALization,STRINGUE,SYMBOLIC,UNKNOWN_VENDOR,UP_SHIP,URBIC_REQUIRED,PARENTHESIAS,STDIN_#############\n# Definition for input data types \"string\"\n@staticmethod\nITree(StringTreeTreeNode) -> Integer: returns the count of element at the specified node. If node does not exist, it should return 0, else return -1 (see Example #1 for more details).\nSET_RECURSIVE_LENGTH = set(map(lambda x: int(x), getcontext(0))) # The first element will always be smaller than the second element if the first and second elements are the same length (i.e. the difference between them is not more than |x|). If the length of x is odd, x will be greater than x, in which case it will return 1.\n\n\n[[10,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,127,128,129,131,132,133,144,145,146,147,148,149,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,173,174,175,176,178,179,180,181,184,187,188,189,190,191,194,195,196,197,198,199,204,205,206,207,208,209,220,221,222,223,224,225,"}, "668": {"problem_id": 4668, "answer": "from math import *\ndef is_hypot(n, m, p, q, r, s): return n < m and m < p and q < r and s < s and (n - m - 1) * (p - r) // (q - s) <= 2 * pi / r\n"}, "669": {"problem_id": 4669, "answer": "from itertools import groupby, zip_longest\nimport numpy as np\n"}, "670": {"problem_id": 4670, "answer": "#!/usr/bin/env python3\nfrom collections import Counter, defaultdict, OrderedDict, deque\ndef __starting_point__(s): return any(map(Counter, s.split(' ')))\n__import__('operator').__dict__"}, "671": {"problem_id": 4671, "answer": "from itertools import combinations_with_replacement\n"}, "672": {"problem_id": 4672, "answer": "from itertools import combinations_with_replacement\n\n\nclass Trie(object):\n\n  def __init__(self, string): self.string = string\n\n def get_string_from_dict(string): return \\\"\\\".join(reversed(sorted(t.get_value(\\\"marks\\\"))) for s in string.split('\\n') if s.isalpha() else s for t in [string.ascii_lowercase] if t.lower() in s)\n"}, "673": {"problem_id": 4673, "answer": "from operator import itemgetter\nclass Person(object):\n\n def __init__(self, name): self.name = name\n\n\n class Person2(Person): pass\n def get_name(name): name=name.split(\" \")[1].lower()\n if name==\"M\": return name\n elif \"F\" in name: return \"f\"\n else: pass"}, "674": {"problem_id": 4674, "answer": "from functools import reduce; from operator import itemgetter\n\n\ndef get_array(x,y,z,n):\n if x==0 or y==1 or z==2 or n==3: return [[0]*z for _ in range(n+1)]\n elif x>0 and y>1 and x<y: raise ValueError('x' not in x or x is out of y')\n return [x*y for x in list(map(int,input().split()))]\n"}, "675": {"problem_id": 4675, "answer": "from functools import reduce\ndef gcd(a, b): return b if a>b else reduce(gcd, (a*b, a%b), 1)\n\n"}, "676": {"problem_id": 4676, "answer": "#https://atcoder.jp/contests/arc086/submissions/23646440\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nread = lambda x: read(x) + x"}, "677": {"problem_id": 4677, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nimport numpy as np\ninput = np.ones(int(stdin.readline().rstrip())).reshape(1,1).astype(\"int\")\nprint(\"\".join(map(str,input().split())))\n"}, "678": {"problem_id": 4678, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(min(a[0], a[1]))"}, "679": {"problem_id": 4679, "answer": "#!/usr/bin/env python3\nfrom itertools import combinations\ns = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nt = lambda: list(map(int, input().split()))\nfor _ in range(t()):\n a = input()\n s = s.replace(a,'').replace(' ','')\n t()"}, "680": {"problem_id": 4680, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()"}, "681": {"problem_id": 4681, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(n)"}, "682": {"problem_id": 4682, "answer": "# coding: utf-8\nimport sys\nsys.setrecursionlimit(int(1e6))\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nfrom functools import reduce\ndef solve(a,b,h,i):\n return reduce(lambda x,y: x*y,input(),0)"}, "683": {"problem_id": 4683, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=a[i]\nprint(s)"}, "684": {"problem_id": 4684, "answer": "# -*- coding: utf-8 -*/\nimport math\nn = int(input())\ncnt = [0]*(n+1)\nfor i in range(1,n):\n  cnt[i] = (math.factorial(i*i) + 1)//2\nprint(\"YES\")\n"}, "685": {"problem_id": 4685, "answer": "def solve():\n  a, b, c = list(map(int, input().split()))\n\n  n = a + b + c + a\n#  print(n, n, a+b+c+a)\n"}, "686": {"problem_id": 4686, "answer": "# coding: utf-8\nimport sys\ninput = sys.stdin.readline\nread = lambda: list(map(int, read().split()))\nfrom collections import deque, Counter, OrderedDict, defaultdict, map, tolower, reverse = Counter(w), dict, {w: w for w in read()}, {'a': '0' for _ in range(26)}\ndef is_good(s):\n   return s == s[::-1]\nn = int(read())\ns = \"abcdefghijklmnopqrstuvwxyz\"\nprint(\"Yes\" if s else \"No\")"}, "687": {"problem_id": 4687, "answer": "#!/usr/bin/env python\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import defaultdict, deque, Counter, OrderedDict\ndef solve():\n  N, K = list(map(int, input().split()))\n\n  a, b = [int(x), int(y) for x, y in zip(range(N, N+1), range(K-1) + [0] * (N-K)): [x,y]][K > 1]\n\n\tc = Counter(a).most_common(1)[0][1]\n\tif len(c) == 1: return c[1][0].bit_length() - K - c.get(0, 0) - a.pop() + K + a[0:K] - b[K:].pop(), 0, (K>1 or K<=b[b.index(s)] or (c[s] == 0 for s in b) or k == K)  + 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 256, 257, 258, 263, 269, 270, 271, 277, 281, 283, 284, 293, 307, 311, 312, 313, 314, 317, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340, 341, 347, 348, 349, 360, 366, 367, 368, 371, 376, 383, 384, 389, 400, 401, 402, 409, 416, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 432, 435, 386, 286, 287, 288, 289, 290, 291, 302, 303, 304, 355, 356,367,368,369,373, 378, 379, 380, 387, 398, 403, 404, 405, 406, 407, 408, 413, 414, 422, 417, 319, 344, 345, 361, 372, 373, 374, 377, 388, 385, 390, 392, 395, 399, 412, 418, 433, 440, 445, 363, 364, 369, (?,?\n"}, "688": {"problem_id": 4688, "answer": "n, k = list(map(int, input().split()))\nc = 0\nfor i in range(1, n + 1):\n  if k % i == 0: c += 1\nprint(c)\n"}, "689": {"problem_id": 4689, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict, deque, Counter, OrderedDict\nimport math,itertools,heapq,bisect,sys,random,mathj,time,copy,functools\nsys.setrecursionlimit(10 **7)\nINF = 10 ** 9 + 7\nmod = 1000000007\ndef LI(): return [int(x) for x in sys.stdin.readline().rstrip('\\n').split()]  # \u7b2c\u4e00\u7ec4\u5408\u6210\u306e\u5024\u3092\u53d7\u3051\u53d6\u308c\u3070\u308f\u3081\u8a08\u753b\u3057\u3066\u304a\u3044\u305f\u3068\u3044\u3046\u306e\u306f\u3001\u305d\u306e\u9593\u3067\u8003\u3048\u3089\u308c\u308b\u3068\u3001\u81ea\u5206\u305f\ufffdffiti\u306b\u554f\u984c\u304c\u3042\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u3068\u3053\u308d\u3067\u3001\u8abf\u3079\u3066\u8f9e\u66f8\u9802\u70b9\u306e\u3068\u304d\u306f\u3053\u308c\u3089\u306e\u8ddd\u96e2\u3092\u8ffd\u52a0\u3057\u3001\u898b\u305f\u3060\u3057\u5076\u6570\u5b57\u3092\u4f5c\u308a\u51fa\u305b\u308b\u3053\u3068\u306f\u5fc5\u8981\u3060\u3068\u8aac\u660e\u3067\u304d\u308b\u304c\u3001\u4eca\u56de\u306e\u8ee2\u5012\u6570\u304c1\u3064\u306e\u521d\u671f\u6301\u3061\u3067\u306f\u306a\u304b\u3063\u305f\u3002\n"}, "690": {"problem_id": 4690, "answer": "#!/usr/bin/env python3\nfrom math import ceil\na, b, c, d = list(map(int, input().split()))\nans = []\nfor i in range(1, a+1):\n  ans.append(ceil(a*(b-1)**0.5) + c)\nprint('\\n'.join(ans))"}, "691": {"problem_id": 4691, "answer": "n = int(input())\ns = list(map(int, input().split()))\na = [0]*n\nfor i in range(n):\n\ta[i+1] = a[n-i]\nprint(''.join(a))"}, "692": {"problem_id": 4692, "answer": "#!/usr/bin/env python3\nfrom math import ceil\ndef __starting_point():\n  m = int(input())\n\n  h = 24*(m-1) + (m+1-m)//2\n\n\tcnt = 0\n\tfor i in range(0, m, 2*m*24):\n #   print(h, i, cnt, h-i)\n\n if h>=24 and m<=60 and h%24==0 and (h-24)%m!=0:\n\n print(\"{:.2f}\".format(ceil(int((h/24)-1)))\n"}, "693": {"problem_id": 4693, "answer": "# -*- coding: utf-8 -*/\nimport sys\nsys.setrecursionlimit(10 ** 7)\nreadline = lambda: sys.stdin.read().rstrip(\"\\r\\n\")\ndef dfs(a, b):\n  if a == 10: return a,b\ndfs(0, a)"}, "694": {"problem_id": 4694, "answer": "# coding: utf-8\nimport math\nn = int(input())\nl = []\nfor i in range(n):\n  l.append(list(map(int,input().split())))\nprint(min(l))"}, "695": {"problem_id": 4695, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict, deque, Counter, OrderedDict,\n \ndef gcd(a,b):\n\treturn a if b == 0 else b if a == b and b!= 0 and a <= b else 0\n"}, "696": {"problem_id": 4696, "answer": "#https://atcoecdecoder.jp/arc/task/problem/18\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\ndef atcoe(n):\n  return int(''.join(str(x) for x in input()))\nn = int(input())\ncnt = 0\nfor i in range(1,n+1):\n\n  if n%2 == 0: cnt += 1\nprint(\"Even\")"}, "697": {"problem_id": 4697, "answer": "n,m=map(int,input().split())\na=[0]*(n+1)\nfor i in range(m):\n a[i]+=1\nprint(a[-1])"}, "698": {"problem_id": 4698, "answer": "#!/usr/bin/env python\nfrom collections import deque\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nINF = float('inf')\nMOD = 10**9 + 7\ndef solve(n, m, p, x):\n\tif m == 0 or n == m-1: return 0\n\n\treturn (sum(p) + sum(x) - (n-m) * (m-x)) // MOD\nfor i in range(int(input()), 0, -1): print(solve(i,m,p,x), end=' ')"}, "699": {"problem_id": 4699, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nimport math,string,itertools,fractions,heapq,collections,bisect,sys,random,time,copy,functools\nINF = float('inf')\nMOD = 10**9+7\nsys.setrecursionlimit(10**6)\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndeque = [LI() for _ in range(20001)]\nfor i,x in enumerate(list(map(int,input())))[::-1]:\n  deq = deque(len(input())+1)\n\n  #print(deq[0],deqq(0,0),deppq(i,i+depl) if i < 20000 else depppp(n,n+dqq()) for dqq in deqq()[1:])\n\t\nprint('\\n'.join(str(q)) for q in q)"}, "700": {"problem_id": 4700, "answer": "n, m = list(map(int, input().split()))\nd = {}\nfor i in range(m):\n  d[i] = 0\ncnt = [0] * (n + 1)\nwhile cnt[-1] < m - n + 2 and d.get(i)!= -1:\n\n  for j in [i+1, i] + [d[j] - i for i, d in enumerate(d.items())] - [m - j, n - m + j] :\n"}, "701": {"problem_id": 4701, "answer": "n = int(input())\nk = [int(i) for i in input().split()]\nprint(sum(k))"}, "702": {"problem_id": 4702, "answer": "def solve(x):\n   return x > 0 and x <= x[::-1]\nsolve(0)"}, "703": {"problem_id": 4703, "answer": "def solve(s):\n  return sum(map(int, s.split()))"}, "704": {"problem_id": 4704, "answer": "n = int(input())\narr = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += arr[i]\nprint(s)"}, "705": {"problem_id": 4705, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(l[n-1])"}, "706": {"problem_id": 4706, "answer": "# https://atcoder.jp.org/contest/59463/simple-string-with-numbers-and-strings\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(int(1e9))\nn = int(input())\na = []\nfor i in range(n):\n  a.append(list(map(str, input().split())))\nprint('\\n'.join(a))"}, "707": {"problem_id": 4707, "answer": "# -*- coding: utf-8\n\"\"\"\ncreated by shuangquan.huangq at 1/5/2019\n'''\nfrom sys import stdin, stdout\ninput()\nstdin.write('\\n'.join(map(str,input().split())))"}, "708": {"problem_id": 4708, "answer": "n,k,x,y=list(map(int,input().split()))\nt=0\nfor i in range(n):\n t+=k\n print(t)\n"}, "709": {"problem_id": 4709, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n  b.append(a[i]+b[-i-1])\nprint(\" \"+str(sum(b)))"}, "710": {"problem_id": 4710, "answer": "# cook your dish here\nfrom sys import stdin, stdout\ndef read_int(): return int(stdin.readline().rstrip() or '\\r\\n')\n\n  \nsys.setrecursionlimit(int(1e9))\ninput=lambda:list(map(str,input().split()))"}, "711": {"problem_id": 4711, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(2147483647)\ninput = sys.stdin.readline\nfrom math import floor,log2,sqrt,gcd,ceil,isclose,bisect,heapq,makedict,numpy\ndef get_ints():return list(map(int,input().split()[1:])[0:2]*2**0.5+1)   # \u9802\u70b9\u8f93\u5165\u6570\u7ec4\uff0c\u53ef\u4ee5\u5c06\u81ea\u5df1\u51fa\u7387\u590d\u6742\u5ea6\u5957\u5230\u6700\u9570\u5b57\u7b26\u4e32\u3002\u6bcf\u6b21\u90fd\u4f1a\u6267\u884c\u8fd9\u4e2a\u8ba1\u7b97\u3002\u8def\u5f84\u548c\u5de6\u6392\u5e8f\u5207\u9664\u3002\u53ea\u8981\u6709\u591a\u5c11\u7684\u79cd\u7c7b\u578b\u3002\n"}, "712": {"problem_id": 4712, "answer": "def height(row, col, w):\n  if row < 0 or row >= len(grid) or col >= 0: return 0\n\n  for i in range(0, row-1, -1):  # row[i] is the row that starts with i, i < i[0] or [i[1]-1][i:][1-i][0:i])[:col] + grid[row][col+1] == [row+2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 214, 216, 217, 218, 225, 226, 229, 232, 233, 234, 235, 240, 237, 239, 241, 242, 243, 245, 247, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 277, 281, 283, 284, 293, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 327, 328, 329, 331, 336, 338, 340, 341, 342, 343, 344, 345, 347, 349, 353, 354, 355, 356, 357, 358, 359, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 389, 400, 401, 402, 405, 407, 408, 409, 418, 419, 420, 423, 424, 425, 426, 428, 429, 430, 432, 433, 435, 386, 387, 304, 385, 392, 395, 396, 398, 399, 404, 403, 406, 414, 415, 417,418, 421, 436, 445, 363, 458, 360, 361,ramenty_3\n"}, "713": {"problem_id": 4713, "answer": "n = int(input())\ns = input()\na = []\nfor i in range(n):\n  a.append(int(s[i]))\nprint(max(a))"}, "714": {"problem_id": 4714, "answer": "#!/usr/bin/env python\nimport sys\nsys.setrecursionlimit(10 ** 7)\ndef input(): return sys.stdin.readline().rstrip('\\r\\n').split()\n \nn = int(input())\nl = [int(x) for x in l]\nfor i in range(n-1):\n\tl[i] = 1\nprint(len(l))"}, "715": {"problem_id": 4715, "answer": "# cook your dish here\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(int(input()))"}, "716": {"problem_id": 4716, "answer": "def __starting_point():\n N, K = list(map(int, input().split()))\n l = []\n for i in range(K):\n  l.append(input())\n print(max(l))"}, "717": {"problem_id": 4717, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict, deque, Counter, OrderedDict\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(2147483647)\nINF = float('inf')\nmod = 10**9+7\ndef LI(): return list(map(int, input().split()[1:])); return [list(i) for i in input()]\nclass UnionFind():\n  def __init__(self, n): self.n = n; self = [-1] * (n+1); self[0] = 1; q = [(-1, 0)]; for _ in range(n-1): q[self.__find(0, -1)] = 0; while q: q.pop() * 2 = (q[q.index(x)] + 1) * (-1) % mod; print(*q, sep='\\n')"}, "718": {"problem_id": 4718, "answer": "#https://atcoder.jp/contests/arc085/tasks/\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nn = int(input())\na = [int(x) for x in input().split()]\nans = []\nfor i in range(n):\n ans.append(str(a[i]))\nprint(''.join(ans))"}, "719": {"problem_id": 4719, "answer": "# coding: utf-8\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nfrom collections import deque,defaultdict,Counter,OrderedDict,deque\ndef get_list():return list(map(int,input().split()))\nget_dict = defaultdict(lambda:Counter(sorted(list(input())))[0])\ndic = {}\nfor i in range(n):\n  if s[i] in dic[s[-1]-1]:dicc = {k:i for k,i in enumerate(i)}\nprint(''.join(['{} {} {}'.format(k, dicc[k]))])"}, "720": {"problem_id": 4720, "answer": "#!usr/bin/env python3\nfrom collections import deque\nimport sys\nsys.setrecursionlimit(10**6)\ninput = sys.stdin.readline\nINF = float('inf')\nmod = 10**9 + 7\ndef LI(): return [int(x) for x in input().split()]\ndeque = [LI() for _ in range(10000000)]\nvisited = set()\nfor i,v in enumerate(list(map(int,input().rstrip())))[::-1]:\n  if v == 0: dequeue[i].append(i+1)\n\n  elif v % 2 == 1: visited.add(v//2) \n"}, "721": {"problem_id": 4721, "answer": "# cook your dish here\nN = int(input())\nA = list(map(int, input().split()))\nB = [0]*N\nfor i in range(N):\n  B[i] += 1\nprint(len(B))"}, "722": {"problem_id": 4722, "answer": "# cook your dish here\na,b=map(int,input().split())\nc=0\nfor i in range(a+b):\n c+=b[i]\nprint(c)"}, "723": {"problem_id": 4723, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nmod = 10 ** 9 + 7\ninput = lambda: sys.stdin.readline().rstrip()\nstdout.write('\\n'.join(map(str,input())))\n"}, "724": {"problem_id": 4724, "answer": "# coding: utf-8\nimport sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nn = int(input())\nl = list(map(int,input().split()))\nres = []\nfor i in range(n):\n  res.append(l[i])\nprint('\\n'.join(res))"}, "725": {"problem_id": 4725, "answer": "# cook your dish here\nfor _ in range(int(input())):\n s=input()\n n=len(s)\n print(n)"}, "726": {"problem_id": 4726, "answer": "# cook your dish here\nn,m,t=list(map(int,input().split()))\na=[]\nfor i in range(m):\n a.append([int(input()),i+1]*t)\nprint(\"AC\")\n"}, "727": {"problem_id": 4727, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nstdin.readline()"}, "728": {"problem_id": 4728, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ns = input()\nc = 0\nfor i in range(len(l)):\n  if l[i] == \"C\" and len(s) == 0 and s[-1]!= \"H\" or (s.count(\"C\") == 1 and c == len(\"H\")) and (l[0] - s.find(\"O\")!= -1) % 1!= 0: c += 1 \nprint(c)"}, "729": {"problem_id": 4729, "answer": "for _ in range(int(input())):\n   a, b, c, d = list(map(str, input().split()))\n\n  if d.count(c) > b: break\n"}, "730": {"problem_id": 4730, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nl = [0]\nfor i in range(n):\n\tl.append(l[-1] + '()' * (len(a) - i - 1) + a[i])\nprint(''.join(str(x) for x in l))"}, "731": {"problem_id": 4731, "answer": "# cook your dish here\nt=int(input())\nfor i in range(t):\n a=input().split()\n if a[0]==a[1]:\n  print(\"\".join(str(x) for x in list(a)))"}, "732": {"problem_id": 4732, "answer": "# cook your dish here\na=int(input())\nfor i in range(a):\n b=input()\n if b=='+':\n  print(b)\n elif b == '*':\n\n  if a%10==0 and b%100!=0:print(100*10+10*b//100)"}, "733": {"problem_id": 4733, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n\tl.append(list(map(int,input().split())))\nprint(len(l))"}, "734": {"problem_id": 4734, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nx=[]\nfor i in range(n):\n  x.append(a[i])\nprint(*x)"}, "735": {"problem_id": 4735, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int, input().split()))\nprint(\"no\" if l[0] == '0' else \"yes\")"}, "736": {"problem_id": 4736, "answer": "# cook your dish here\ndef sort(arr,n,k):\n if k==0: \n  return [0]*(n+1)\n for i in range(k-1,0,-1):\n\n  if arr[i]!=arr[k] and i<=n-i+2 and k>=i-2:return k\n else: return []\nn=int(input())\narr=list(map(int,input().split()))\nk,l=sort(range(1),n)\n\n print(l)"}, "737": {"problem_id": 4737, "answer": "# cook your dish here\nn=int(input())\np=list(map(int,input().split()))\nans=[]\nfor i in range(n):\n a=p[i]\n c=0\n while(c<len(a)-1 and a[c+1]<=10**30): \n  c+=1\n ans.append([a[0]+c,0])\nprint(*ans)"}, "738": {"problem_id": 4738, "answer": "# cook your dish here\nfor _ in range(int(input())):\n s=input()\n if len(s)%2!=0 or s[0]==s[1]:\n  print(1)"}, "739": {"problem_id": 4739, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(n):\n l.append([int(x) for x in str(input()))]\nc=0\nr=len(l)\nwhile(c!=n-l[r-1][0]):\n\n if(r>=c and l[l.index(max(0,c-r))][1]<=m) :\n  c=r\n else:\n\n  r-=1\n\n print(\"{0:.2f}\".format(*l))"}, "740": {"problem_id": 4740, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(1,n+1):\n  if(l[i]=='555'): \n\tprint(i)\n"}, "741": {"problem_id": 4741, "answer": "for _ in range(int(input())):\n a=input()\n b=float(a)\n c=0\n d=[]\n for i in a: \n  if i%2==0: d.append(i//2)\n\n  else: c+=d[i]\n\n print(c)"}, "742": {"problem_id": 4742, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn = int(stdin.readline().strip())\ns = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n):\n\tl[s[i]-1]+=1\nans = [\"transposition\",\"nonsense\"][::-1]+\" \"*(len(l)-1)\nprint(ans)"}, "743": {"problem_id": 4743, "answer": "# cook your dish here\nn=int(input())\nl=list(map(str,input().split()))\ns=0\nfor i in range(n):\n if l[i]=='a':\n  l.pop(i)\n elif s==len(l)//2+n-i-1:s+=i\nprint(''.join(s))"}, "744": {"problem_id": 4744, "answer": "# cook your dish here\nfrom math import gcd as g,sqrt\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n a.append(gcd(a[-1],i*i)+(i-b[0]*(i+1))//2)\nprint('\\n'.join(b))"}, "745": {"problem_id": 4745, "answer": "# cook your dish here\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functurn,math.ceil,floor,log10,pow,reduce,sorted,str,cmp_to_key,trim,gcd,itemgetter,gettext,numpy,floating,inf,mod,bitwise,isnumeric,integer,integers,int,float,linalgi,looper,long,optsum,quantize,round,subtract,xor,div,acos,asin,cos,tan,sin,sqrt,u,copysign,vfntime,taily,yarab,calculate,print,monday,tomato,mona,diccii,icid,djinn,jibberh,mnih,leetcode,ppppp,racket,csharp,poly,ply,spear,rrry,svary,willy,tri,ruby,striker,bob,kata,naive,nbihd,cdic,jp,twenty,eight,one,two,three,four,five,eighty,six,seventy,ninety,hundred)\nfrom collections import Counter,defaultdict,deque,OrderedDict,Integer,Number,Double,BinOp,Exponential,PowerOfTWnd,factorial,GCD,Inverse,Lambda,Invariant,O(1),Notice,Notice2,On,One,Two,Three,Four,Five,Six,Seven,Eight,Nine,Ten,Eleven,Twenties,Nineteen,Twenty,Thirty,Fifty,Sixty,NearlyEVEN,MoreEighth,Centennial,Previous,Next,Up,Left,Right,Visible,UniformlyPrintable(0)))\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n   b.append(a[i]*(i+1)//2+b[-1])\nprint(len(b))"}, "746": {"problem_id": 4746, "answer": "# cook your dish here\nn=int(input())\nc=list(map(int,input().split()))\nans=0\nfor i in range(n):\n if c[i]%2==0:ans+=1\nprint(ans)\n"}, "747": {"problem_id": 4747, "answer": "# cook your dish here\nn, k = list(map(int, input().split()))\ns = [0]*(n+1)\nans = 0\nfor i in range(k):\n\ts[i*2-1] += s[k-i]\nprint(sum(s))"}, "748": {"problem_id": 4748, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(0,n):\n l.append([int(x) for x in str(i))]\nprint(*l)"}, "749": {"problem_id": 4749, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(1)\n"}, "750": {"problem_id": 4750, "answer": "q = int(input())\nfor _ in range(q):\n\tl, r, a, b = list(map(int, input().split()))\n\n\tif l < a and r < b:\n\n \t\tprint(a + b)\n\n"}, "751": {"problem_id": 4751, "answer": "from collections import deque\ndef dfs(head, node, visited, next, prev, cur, seen):\n\n  if node == None or visited[node].val == cur or cur == prev or prev == next or (visited[cur].next!= None and next not in seen or next.is_valid(cur)) and (cur!= prev and prev.__next__ == node and cur!= next): return False\n"}, "752": {"problem_id": 4752, "answer": "from collections import defaultdict, deque, Counter, OrderedDict"}, "753": {"problem_id": 4753, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n l.append(list(map(int,input().split())))\nprint(l.count(0))"}, "754": {"problem_id": 4754, "answer": "n=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append(a[i]-1)\nprint(min(l))"}, "755": {"problem_id": 4755, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nprint(sum(l))"}, "756": {"problem_id": 4756, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if l[i]%2==0:c+=1\nprint(c)"}, "757": {"problem_id": 4757, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int, input().split()))\nfor i in range(n):\n\tl.insert(0,'')\nprint(' '.join(l))"}, "758": {"problem_id": 4758, "answer": "# cook your dish here\nn,t = list(map(int,input().split()))\nl = []\nfor i in range(n):\n a = int(input())\n l.append(a)\nprint(len(l))"}, "759": {"problem_id": 4759, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n x=a[i]\n b.append(x)\nprint('\\n'.join(b))"}, "760": {"problem_id": 4760, "answer": "# cook your dish here\nn,k=map(int,input().split())\ns=0\nfor i in range(n):\n s+=int(input()[-1])\n print(s)"}, "761": {"problem_id": 4761, "answer": "L,H=list(map(int,input().split()))\nsafe=[]\nfor i in range(H):\n if i%6!=0:safe.append(i)\nprint(safe[-1])\n"}, "762": {"problem_id": 4762, "answer": "# cook your dish here\nn=int(input())\na=[]\nfor i in range(n):\n a.append(list(map(int,input().split())))\nprint(*a)"}, "763": {"problem_id": 4763, "answer": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n-1):\n if a[i]>c:c+=1\n else:a.pop(c)"}, "764": {"problem_id": 4764, "answer": "n=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n):\n x,y,z=l[i]\n ans+=x*z\nprint(ans)"}, "765": {"problem_id": 4765, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s)"}, "766": {"problem_id": 4766, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n s=input()\n if s[-1]=='s':\n  l.append(s.rfind('s')+1)\n elif's' in s and len(l)>0 and l[0]!=l[l.index(-1):] :\n print(' '.join(map(str,l)))"}, "767": {"problem_id": 4767, "answer": "# cook your dish here\nn = int(input())\na = [int(x) for x in input().split()]\nl = len(a)\ns = 0\nfor i in range(l):\n s += (a[i]**2 + a[l-i])\nprint(s)"}, "768": {"problem_id": 4768, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n s=input()\n a.append(s.split(' ')[0])\nprint(min(a))"}, "769": {"problem_id": 4769, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n=input()\n if n[0]=='a':\n  print(n[1])\n else:print(-1)"}, "770": {"problem_id": 4770, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n l.append(list(map(int,input().split())))\nprint('{0:.6f}'.format(l[-1]))\n"}, "771": {"problem_id": 4771, "answer": "# cook your dish here\nn,w,h=map(int,input().split())\nl=[]\nv=int(w)\nfor i in range(n):\n\tv-=l[i]\nc=0\nd=[0]*(h+l+w+h) \na=sorted(v,key=lambda x:x[0])\nans=max(a,d[-1])-min(d,c)"}, "772": {"problem_id": 4772, "answer": "R,C=map(int,input().split())\ns=[]\nfor i in range(R):\n s.append(chr(ord('a')+i)%C)\nprint(\"\".join(s))"}, "773": {"problem_id": 4773, "answer": "from sys import stdin, stdout\ninput=stdin.readlines()\nstdout.write(str(input))"}, "774": {"problem_id": 4774, "answer": "from sys import stdin,stdout\r\ninput = lambda:stdin.readline().rstrip('\\r\\n').split()"}, "775": {"problem_id": 4775, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b=list(map(str,input().split()))\n l.append(a+b)\nprint(''.join(l))"}, "776": {"problem_id": 4776, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n):\n\ts,t,l[i]=(i+1)*(i-1)//2,1\nif(s%2==0):ans+=1 \nprint(ans)\n"}, "777": {"problem_id": 4777, "answer": "# cook your dish here\nk=int(input())\nl=list(map(int,input().split()))\nprint(l[0])"}, "778": {"problem_id": 4778, "answer": ""}, "779": {"problem_id": 4779, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=a[i]*i\nprint(s)"}, "780": {"problem_id": 4780, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n if a[i]=='A':\n  l.append(i+1)\n else:   # A is empty, so there is no i-th letter\n print(l[-1])"}, "781": {"problem_id": 4781, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ncnt = 0\nfor i in range(n):\n if l[i] == \"T\":\n  cnt += 1\n elif (l.count(\"T\")>=3 and l.find(\"P\") == -1) and (len(l)==0 or (n-i)%2 == 0 and ((l[0]==\"P\" or i>0))%3 == 1):\n\n  print(\"Yes, it was a a \" + \" T T P\" for T = 1,2,3,4,5,6,7,8)"}, "782": {"problem_id": 4782, "answer": "n,m=list(map(int,input().split()))\ncost=[]\nfor i in range(m):\n cost.append(sum(cost[i]*(i+1))//2)\n \nprint(math.inf)"}, "783": {"problem_id": 4783, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append(l[i]-1)\nprint(len(a))"}, "784": {"problem_id": 4784, "answer": "# cook your dish here\nx=int(input())\nl=list(map(int,input().split()))\nfor i in range(len(l)):\n\tif l[i]>=x: print(i)\n"}, "785": {"problem_id": 4785, "answer": "# cook your dish here\nn=int(input())\ns=''\nfor i in range(n):\n s=input()\n if s[0]==s[-1]:\n  print(' '.join(map(str,s)))"}, "786": {"problem_id": 4786, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n if l[i]=='c':\n  l.pop(i)\n elif s==0:s+=1\nprint(s)"}, "787": {"problem_id": 4787, "answer": "# cook your dish here\na=input()\nl=[]\nfor i in range(0,len(a)):\n s=a[i]\n l.append(s)\nc=l[-1][-2:]\nprint(c)"}, "788": {"problem_id": 4788, "answer": "# cook your dish here\nn=int(input())\ns=0\nfor i in range(0,n):\n  s+=abs(n-i)\nprint(s)"}, "789": {"problem_id": 4789, "answer": "# cook your dish here\nn=int(input())\nnames=list(map(int,input().split()))\nc=0\nfor i in range(1,n+1):\n\tc+=names[i]\nprint(c)"}, "790": {"problem_id": 4790, "answer": "# cook your dish here\nfor _ in range(int(input())):\n s=input()\n if s[0]=='W':\n  print('1')\n elif 'B'==s[-1] and 'W' not in s or len(s)<=len(set('B'))-1 and s.count('W')==len('BW') or s!='' and sum(map(lambda x: x*(x>0),s))==sum(list(range(0,x+1,1)) for x in 'BW')) :\n"}, "791": {"problem_id": 4791, "answer": "# cook your dish here\ns1 = list(map(int,input().split()))\nl = []\nfor i in range(4):\n s1[i] = int(input()[-1])\n l.append(s2)\nprint(max(l))"}, "792": {"problem_id": 4792, "answer": "# cook your dish here\nnames = list(map(str,input().split()))\nname = names[0]\nn = len(names)\ns = 0\nfor i in range(n-1):\n  if name[i] == '0' and s == 0: s += 1\nprint(s)"}, "793": {"problem_id": 4793, "answer": "s=int(input())\nfor i in range(s):\n l=list(map(int,input().split()))\n if(l[0]>=s and l[-1]<=10**6):print(\"impossible\")"}, "794": {"problem_id": 4794, "answer": "R,C=list(map(int,input().split()))\nfor i in range(R-1):\n s=input()\n if s[0]==\"X\":\n  s1=s[1:R]\n elifs=\"X\" and s.count(\"X\")>=4:print(1)"}, "795": {"problem_id": 4795, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\tx=(l[i]*(i+1))//2\n\n\tif x%2==0:s+=x\nprint(s)"}, "796": {"problem_id": 4796, "answer": "# cook your dish here\na,b,c,d=list(map(int,input().split()))\nl=[]\nfor i in range(c):\n l.append(a+b+c)\nprint(l[-1])\n"}, "797": {"problem_id": 4797, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout\ndef __starting_point__(s):\n s=stdin.readline().rstrip('\\r\\n')\n return(\"\".join(map(str,s)))"}, "798": {"problem_id": 4798, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n x=input()\n y=x.split(' ')\n if(y[0]=='-' or y[1] =='-': x.replace('-','')) :\n  print(x)"}, "799": {"problem_id": 4799, "answer": "# cook your dish here\nfor _ in range(int(input())):\n a,b,c=list(map(str,input().split()))\n g=a-b\n s=b-a\n w=c-g\n if w>=0 and g+s<5 and s+g+c<=10 and w-s>0: \n  print('{} or {}'.format(w,s))"}, "800": {"problem_id": 4800, "answer": "# cook your dish here\nn,k=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append([int(x) for x in str(input())]+[l[i][0]])\nprint(sum(l))"}, "801": {"problem_id": 4801, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nans = []\nfor i in range(n):\n\tl.append(i+1)\nprint(ans)"}, "802": {"problem_id": 4802, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n  if(a[i]==\"0\"):b.append(i+1)\nprint(b[-1])"}, "803": {"problem_id": 4803, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nprint(a[0])"}, "804": {"problem_id": 4804, "answer": "# cook your dish here\ns=int(input())\nfor i in range(s):\n x=list(map(int,input().split()))\n y=[]\n for j,i in enumerate(x) :\n  y.append(i)\n if(len(y)==3 or y[-1]!=y[0][0]==x.count('1')) : continue\n print(' '.join(str(c) for c in y))"}, "805": {"problem_id": 4805, "answer": "# cook your dish here\na=input().strip()\nfor i in range(0,len(a)):\n  if a[i] in 'SNOW' and 'THE'in 'the_rain_and_snusklime_lime' or (a.count('the'))>=1 and a.pop()==0:   print('yes')\n"}, "806": {"problem_id": 4806, "answer": "# cook your dish here\nn=int(input())\ns=input()\nl=[]\nfor i in range(n):\n a,b,l1=list(map(int,input().split()))\n if l[b]=='L':\n  l1.append('C')\n elif b==l[a-1] and a!=b and b!='B' :\n l.pop(0)\n print(''.join(l))"}, "807": {"problem_id": 4807, "answer": "# cook your dish here\nfor _ in range(int(input())):\n x,y,n=list(map(str,input().split()))\n if(x%y==0 and(y%x!=0) or (n-y-1)%n==1 ):\n  print(fizz+ Buzz)\n else:print('Fuzzy')\n"}, "808": {"problem_id": 4808, "answer": "n,d = map(int,input().split())\r\nl = [int(x) for x in str(input()).split('\\n')) for i in range(n) if x == '0' and l[i] <= d[l.index('0')][0] else '_']"}, "809": {"problem_id": 4809, "answer": "for _ in range(int(input())):\n s,n = list(map(str,input().split()))\n count = 0\n while(n>0 and s[n-1]=='C'): n-=1\n if(s[s.count(0)]: count+1)==n: print(count)\n else: count+=1"}, "810": {"problem_id": 4810, "answer": "# cook your dish here\nfrom itertools import combinations\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**9)\ndef solve():\n n = int(input())\n l = list(map(int,input().split()))\n ans = []\n for i in range(n):\n  ans.append(\"b\"+\" \"*(i+1)%2+str(len(ans)))\n print(solve())"}, "811": {"problem_id": 4811, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=0\nfor i in range(n):\n if a[i]%2==0:b+=1\nprint(b)"}, "812": {"problem_id": 4812, "answer": "s=input()\nn=len(s)\nfor i in range(n-1):\n if s[i]=='NO':\n  s1=s[:i]+' '+s1.replace(' ','')+'*'\n elif s[''].find('.')==s[''] and s.find(')'.'!='' and n%2==0 and (n//2)%3==1 and ((n/2)+1)*(3*n+1)<=2:n1+n2=n3=0\n else:print('NO')\n"}, "813": {"problem_id": 4813, "answer": "# cook your dish here\ndef guess(string):\n string = string.lower()\n ans = 0\n for letter in string: \n  if letter.isdigit(): ans += 1\n return ans\nprint(\"WIN\")\nfor _ in range(int(input())) :\n print(\"\".join(map(str, input())))"}, "814": {"problem_id": 4814, "answer": "n=int(input())\nl=list(map(int,input().split()))\nfor i in range(len(l)):\n if (l[i]%2==0) and l[-i-2]=='J':\n  print(i)"}, "815": {"problem_id": 4815, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ns = ''\nfor i in range(n-1):\n s += str(i) +'' + input()[i+1]\n l.sort()\nprint(' '*(len(l)-1))"}, "816": {"problem_id": 4816, "answer": "# cook your dish here\nx=list(map(int,input().split()))\nl=[]\nfor i in range(len(x)):\n a,b,c=x[i]\n l.append(b+c)\ni=l.index(max(l))+1\nprint(i)"}, "817": {"problem_id": 4817, "answer": "# cook your dish here\nx=int(input())\nfor i in range(0,x):\n\tprint(x)"}, "818": {"problem_id": 4818, "answer": "# cook your dish here\nn, m = list(map(int, input().split()))\nl = []\nfor i in range(n):\n\tl.append([int(input()), i] + [0] * m)\nprint(sum(l))"}, "819": {"problem_id": 4819, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b=list(map(int,input().split()))\n l.append(a*b)\nprint(len(l))"}, "820": {"problem_id": 4820, "answer": "# cook your dish here\nn, b = map(int, input().split())\nif n == 1 or b == 0 or (n & 1):\n print(\"yes\")\n \n"}, "821": {"problem_id": 4821, "answer": "# cook your dish here\ns = input()\nn = len(s)\na = [0]*n\nfor i in range(n):\n\ta[i+1]+=1\nprint(sum(a))"}, "822": {"problem_id": 4822, "answer": "# cook your dish here\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nr,s,k = list(map(int,input().split()))\nl = []\nfor i in range(s):\n\tl.append(input())\nnum = int(math.sqrt(l[-1]))+1 \ncnt = 0\nwhile(k!=0 and l[k]=='*'):k+=1;\nprint(num)\n"}, "823": {"problem_id": 4823, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(len(l))"}, "824": {"problem_id": 4824, "answer": "# cook your dish here\nfrom sys import stdin,stdout,setrecursionlimit\nstdin.readline()\nn,p=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append([int(x) for x in str(i)]+l[-1][0])\nprint(sum(l))"}, "825": {"problem_id": 4825, "answer": "for _ in range(int(input())):\n alphabet = input().strip()\n n = len(str(ord('0')))\n if alphabet[0] == '@':\n  print('#'.join(map(lambda x: chr(x), alphabet)))"}, "826": {"problem_id": 4826, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n  if a[i]%2==0:b.append(i)\nprint('Alice')"}, "827": {"problem_id": 4827, "answer": ""}, "828": {"problem_id": 4828, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(len(l)):\n\tif l[i]=='a' or len(a)==0 or a[-1].startswith('e'): l.append(i+1)\nprint('\\n'.join([str(x) for x in l]))"}, "829": {"problem_id": 4829, "answer": "def f(x,y):\n if x%2==0: return y\n elif x==y:return 0\n else:x+=y\n return x\nfor i in range(int(input())):print(\"\".join(map(str,input())))"}, "830": {"problem_id": 4830, "answer": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if l[i]=='1':\n  l.pop(i+1)\nprint(c)"}, "831": {"problem_id": 4831, "answer": "from sys import stdin,stdout\nn,r=int(stdin.readline().strip()),10**9+7\ns=input()\nfor i in range(n):s.write(chr(i))\n"}, "832": {"problem_id": 4832, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a[i]!=a[n-i-1]:\n  c+=1 \nprint(c)"}, "833": {"problem_id": 4833, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(n):\n a.sort()\n ans=sum(a[:i])\n print(ans)"}, "834": {"problem_id": 4834, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\ts+=a[i]\nif(s>=1 and a[-1]=='1' and s<=2 and (s%2==0 or s//2)>0):\n\n\tprint(1)"}, "835": {"problem_id": 4835, "answer": "for _ in range(int(input())):\n t,n,m=map(float,input().split())\n if t==1 and m==2 and (n*(n+1)*(m-1)//2)%1==0: \n  print(0)"}, "836": {"problem_id": 4836, "answer": "n,c = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n):l[i+1]+=c\nprint(max(l))"}, "837": {"problem_id": 4837, "answer": "r=int(input())\nprint(r)"}, "838": {"problem_id": 4838, "answer": "n = int(input())\nl = list(map(int,input().split()))\nt = 0\nfor i in range(n):\n if(l[i] == 0): t += 1\n else: break\nprint(t)"}, "839": {"problem_id": 4839, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n):\n\tans+=l[i]\nprint(ans)\n"}, "840": {"problem_id": 4840, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a[i]==a[c]:\n  c+=1\nprint(c)\n"}, "841": {"problem_id": 4841, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=''\nfor i in range(n):\n s+=str(l[i])\n print(s)\n"}, "842": {"problem_id": 4842, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nd=[]\nfor i in range(n):\n x,y=l[i]\n d.append(x*y)\nprint(*d)"}, "843": {"problem_id": 4843, "answer": "# cook your dish here\nn=int(input())\nx,y=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n x.append(x[-1]-1)\n s=s.copy()\n if(len(s)==0 and s[0]=='0'):  \n  print('YES')\n elif(y==1 and x[1]!=y-2 and y[2]%2==2:print('NO')):print(['YES'])\n else: print(\"NO\")\n"}, "844": {"problem_id": 4844, "answer": "n=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append(sum(a[i:i+l[-1]].count(i))+1)\nprint(*l)"}, "845": {"problem_id": 4845, "answer": "# cook your dish here\nD,M = int(input()),20\nfor i in range(D):\n s = input()\n if s[0] == \"Sunday\":\n  print(\"Monday\")"}, "846": {"problem_id": 4846, "answer": "# cook your dish here\nl=int(input())\nfor i in range(l):\n n,d,x=list(map(int,input().split()))\n if n<d:print(n)\n elif x<n: print(x,end=\"\")\n else: \n  x=x*(d-n-1)//2\n ans=0\n m=d*x\n for x in list(range(1,n+1)):ans=max(ans,m*d+x-m,ans)"}, "847": {"problem_id": 4847, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n-1):\n\tx,y=l[i+1]-i,l.pop(0)\nif(x!=0 and x>a[0] and a[1]==0):a.append([0,x])\nprint(len(a))"}, "848": {"problem_id": 4848, "answer": "# cook your dish here\nn = int(input())\narr = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n if arr[i] % 2 == 0: s += 1\n else: break\nprint(s)"}, "849": {"problem_id": 4849, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n s = input()\n if len(s) == 0 or s[-1] == '0':\n  print(\"He\\n\")\n elif s.count('1') % 5!= 0 and (s.find('0') == -1 and s['0']!= '9') and not '.' in s:print(\"You are not here!\")"}, "850": {"problem_id": 4850, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b,c=list(map(int,input().split()))\n l.append(a*3+b*c)\nprint(l[0])"}, "851": {"problem_id": 4851, "answer": "n = int(input())\nl = [int(i) for i in input().split()]\nprint(l[n-1])"}, "852": {"problem_id": 4852, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nprint(len(a))"}, "853": {"problem_id": 4853, "answer": "n=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append(a[i]+1);\nprint(*l)"}, "854": {"problem_id": 4854, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nsorted_l=[0]*(n+1)\nfor i in range(len(l)):\n if l[i]>l[-1]:\n  s=l.pop(i) \n else:s+=1\nprint(s)"}, "855": {"problem_id": 4855, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(len(a)):\n a.append(c+1)\nprint(n-c)"}, "856": {"problem_id": 4856, "answer": "# cook your dish here\nn = int(input())\nprint(n)"}, "857": {"problem_id": 4857, "answer": "# cook your dish here\nl,w=map(int,input().split())\nif(l==0 and w>=l):\n  print('not possible')\nelif l%2==1 and l!=0:print('wrong')"}, "858": {"problem_id": 4858, "answer": ""}, "859": {"problem_id": 4859, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n a,b,c,d,l = list(map(int,input().split()))\n if a == b or c == d or l == 0 or (a == 1 and b!= 0 and c!= 1) :\n  print(\"0\")\n elif b == c and d == l and l!= c:print(0)\n"}, "860": {"problem_id": 4860, "answer": "n = int(input())\nfor i in range(n):\n a = list(map(int,input().split()))\n if a[0]==a[1]:\n  print(1)"}, "861": {"problem_id": 4861, "answer": "# cook your dish here\nn=int(input())\na=[]\nfor i in range(n):\n   a.append(list(map(int,input().split())))\nm=10**9+7\ns=0\ni=2\nwhile i*s<=a[i][0]:\n s=s+i\n i=i+3\nprint(s)"}, "862": {"problem_id": 4862, "answer": "n=int(input())\na=[]\nfor i in range(n):\n a.append(list(map(int,input().split())))\nprint(0)"}, "863": {"problem_id": 4863, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n a,b,c,d=list(map(int,input().split()))\n if a=='A':\n  print(b)\n elif b == 'A' and c =='C':\n\n  if d == 0 and d%2==0 or d==1 and b==c and a!=d-d//2 or a ==b-b//d:\n\n"}, "864": {"problem_id": 4864, "answer": "r,c,z,k=list(map(int,input().split()))\na=[]\nfor i in range(r):\n a.append([int(x) for x in input()])\nprint(*a)"}, "865": {"problem_id": 4865, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n a,b,c=map(int,input().split(\" \"))\n if (a==b) and (c==a) :\n  print(24*60+c)"}, "866": {"problem_id": 4866, "answer": "# cook your dish here\na=int(input())\nfor i in range(a):\n x=input()\n if x[0]=='FEB':\n  print(x[1])\n else:  \n\n"}, "867": {"problem_id": 4867, "answer": "M,N=list(map(int,input().split()))\nL,R,D=[],[]\nfor i in range(M):\n L.append(input()[i-1])\nR.add(L)\nD.insert(0,L[0]-1) \nC=[[0]*(D+1)]*N\nwhile(len(C)>0 and C[-2*D]!=0) :\n D=C.pop()\n R.remove(R[D])\n\n if D>=1 : D+=1\n elif D==1 and R[R]==0 : C=R+D\n else : R=D*R\nprint(''.join(str(x) for x in C))"}, "868": {"problem_id": 4868, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n s += l[i]\n print(s)"}, "869": {"problem_id": 4869, "answer": "from math import ceil, sqrt, factorial, gcd\r\ndef di(x, y):   return x*x + y*y for x,y in zip(list(range(0, x), range(y+1)), list([ceil(sqrt((x-y)**0.5)+1) for y in list(map(int, input().split(' ')))])) "}, "870": {"problem_id": 4870, "answer": "# cook your dish here\ndef check(a, b, c, d):\n if (a == b and c == d) or (b == c and d == 1) :\n  return True\n return False\nn = int(input())\ns = list(map(int, input().split()))\ng = [0]*n\nfor i in range(n-1, 0, -1): \n s.append(i)\n g.sort(key=lambda x:x[0])\nprint(check(s, g, n))"}, "871": {"problem_id": 4871, "answer": "n=int(input())\nl=list(map(int,input().split()))\nprint(l[0])"}, "872": {"problem_id": 4872, "answer": "n=int(input())\nd=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=d[i]\n print(s)\n"}, "873": {"problem_id": 4873, "answer": "W,H=map(int,input().split())\r\nif W==1 or H==50:\r\n\n   print(1)"}, "874": {"problem_id": 4874, "answer": "# cook your dish here\nn, m = list(map(int, input().split()))\ngrid = []\nfor i in range(n):\n grid.append(grid[-1][i] + '_' * (m - i - 1) *'')\nprint(*grid)"}, "875": {"problem_id": 4875, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(len(l)):\n if l[i]=='aeiou':\n  print('codewars')\n else:print('no')"}, "876": {"problem_id": 4876, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(len(l)):\n if l[i]=='z':\n  s+=1\n elif l.count('a')>1 and 'z' in l and s<=l[-1] and (s>=s+1) or s%2==0:   print('Nyeb'+str(i)+'Bien',i)\n else: print('')"}, "877": {"problem_id": 4877, "answer": "# cook your dish here\na=int(input())\nb=list(map(int,input().split()))\nc=0\nfor i in range(0,len(a)):\n if b[i]>c:c+=1\nprint(c)\n"}, "878": {"problem_id": 4878, "answer": "R1,S1 = map(int,input().split())\nprint(R2)"}, "879": {"problem_id": 4879, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n l[i]=input()\nif(l[n-1]==\"No\"):print(\"No\")"}, "880": {"problem_id": 4880, "answer": "n, m = map(int, input().split())\na = []\nfor i in range(n):\n a.append(list(input()))\nprint(\"\".join(a))"}, "881": {"problem_id": 4881, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nif(sum(l)%2==0):print('Even')"}, "882": {"problem_id": 4882, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(l[0])"}, "883": {"problem_id": 4883, "answer": "# cook your dish here\nn,m=map(int,input().split())\na=[]\nfor i in range(n):\n a.append([int(x) for x in input().strip()])\nans=a[0][0]\ns=input()\nprint(\"yes\")"}, "884": {"problem_id": 4884, "answer": "# cook your dish here\nn,p=map(int,input().split())\nl=[]\nfor i in range(n):\n l.append(0)\nprint(l[-1])"}, "885": {"problem_id": 4885, "answer": ""}, "886": {"problem_id": 4886, "answer": "# cook your dish here\nn,k=map(int,input().split())\na=[]\nfor i in range(0,n):\n  if i%2==0 and a[i]%1!=0:a.append(i)\nif k==1:print(\"True\")"}, "887": {"problem_id": 4887, "answer": "# cook your dish here\na=int(input())\nprint(a)"}, "888": {"problem_id": 4888, "answer": "# cook your dish here\nn,t=map(int,input().split())\na=[]\nfor i in range(0,n):\n a.append(i+t)\nprint(sum(a))"}, "889": {"problem_id": 4889, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n  a.append(l[i])\nprint(*a)"}, "890": {"problem_id": 4890, "answer": "# cook your dish here\nn,m,s,d=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append([int(x) for x in input()])\ns=sorted(l,reverse=True)\nprint(*s)\n\n\n\n"}, "891": {"problem_id": 4891, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b,c=list(map(int,input().split()))\n l.append(a*c)\n print(sum(l))"}, "892": {"problem_id": 4892, "answer": "n=int(input())\nl=[]\nfor i in range(n):\n l.append(list(map(int,input().split())))\ni=0\nwhile(i<len(l) and l[i]=='0'):i+=1\nprint(1)\n"}, "893": {"problem_id": 4893, "answer": "#dt = {} for i in x: dt[i] = i\nimport sys;input = sys.stdin.readline\ninp,ip = lambda:int(input()),lambda:list(map(int,input().split()))\nip()"}, "894": {"problem_id": 4894, "answer": ""}, "895": {"problem_id": 4895, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n a.append(a[i]*3)\nc=0\nwhile(len(b)>1 and b[-1][0]!=c) :\n b.pop()\n c+=1\nprint(''.join(c))"}, "896": {"problem_id": 4896, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(sum(l))"}, "897": {"problem_id": 4897, "answer": "n=int(input())\nfor i in range(0,n):\n a,b=list(map(int,input().split()))\n s=0\n for k,v in zip(a+b,a) :\n  s+=v\n print(s)"}, "898": {"problem_id": 4898, "answer": "n=int(input())\nl,u=0,0\nfor i in range(n):\n a,b=list(map(int,input().split()))\n l+=a\n u+=b\n if(l==u):u-=1\nprint(u)\n"}, "899": {"problem_id": 4899, "answer": "# cook your dish here\ns=input()\nn=len(s)\nl=0\nfor i in range(n):\n if s[i]==s[n-i-1]:\n  l+=1\nprint(l)"}, "900": {"problem_id": 4900, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nq = []\nfor i in range(n):\n a.append(q[i][0])\nprint(*a)"}, "901": {"problem_id": 4901, "answer": "# cook your dish here\nfrom sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\nfor _ in range(n):\n s=input()\n m=s.split(' ')\n r=m[0]\n for i in m[1:]:\n  if(len(s)==1 and s[i]=='A' and len(r)>1): r[-1]+=1\n print(' '.join(map(str,r)))"}, "902": {"problem_id": 4902, "answer": "# cook your dish here\ns=input()\nn=len(s)\ni=0\nwhile(i<n):\n if s[i]!=s[n-i-1]:\n  i=i+1\n i+=1 \n n-=1"}, "903": {"problem_id": 4903, "answer": "# cook your dish here\na=input().strip()\ns=0\nfor i in range(0,len(a)):\n if a[i]==\"a\":\n  s=s+1\n else:s+=1"}, "904": {"problem_id": 4904, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(len(l)):\n if l[i]==\"1\":\n  s+=1\n elif s>1 or (s==1) and (l[s-1] == \"1\" or s==2) :\n l.pop(0)\n print(s)"}, "905": {"problem_id": 4905, "answer": "# cook your dish here\nn,m,a,b,k,g=list(map(int,input().split()))\nl=[]\nfor i in range(m):\n l.append([int(input()),i])\nlis=0\nwhile(len(lis)>0 and lis[-1][0]!=lis[0][1]) :\n  \n k=lis.pop(0)\n if(k>=m and k<=n and a!=(b-l[k])) : continue\n print(n-k)"}, "906": {"problem_id": 4906, "answer": "# cook your dish here\ndef run_length_encoding(s):\n  if s[0] in \"aeiouAEIOU\": return \"\".join(c for c in s if c.isdigit() or (c in '1234567890' or c == '0'))\n\n  s = s.split(' ')\n\ts = [s[i] for i in range(9)]\n\n\tc = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\n\n"}, "907": {"problem_id": 4907, "answer": "# cook your dish here\nfrom math import log2, ceil\nn=int(input())\nl=[]\nfor i in range(n):\n l.append(ceil(log2(i)))\nprint(*l)\n"}, "908": {"problem_id": 4908, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nfor i in range(len(a)):\n  if a[i]==3:print(i)\n"}, "909": {"problem_id": 4909, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[0]*(n+1)\nfor i in range(1,n):\n  if s[i]>s[n-i-2] and i>=2 and l[0]+l[1]<=i+2:   print(\"YES\")\nans=0\nwhile(len(s)>0 and ans<n:ans+=(n//2)*2) : s.pop()\nprint(\"NO\")"}, "910": {"problem_id": 4910, "answer": "n=int(input())\nl=list(map(str,input().split()))\nc=0\nfor i in range(len(l)):\n if l[i]==\"w\":\n  c+=1\nprint(c)"}, "911": {"problem_id": 4911, "answer": "# cook your dish here\nimport sys\ninput = sys.stdin.readline\nfrom collections import deque, defaultdict, Counter, OrderedDict,defaultdict \nn = int(input())\narr = list(map(int, input().split()))\nc = Counter(arr)\ns = [c[i] for i in range(n+1)]\nfor i,c in enumerate(s,1):\n  print(i,end=' ')"}, "912": {"problem_id": 4912, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n  l.append(sum(l[i:i+l.index(':')])))\nprint('YES' if l[-1] == 'YES else 'NO')"}, "913": {"problem_id": 4913, "answer": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(0,n):\n if a[i]=='A':\n  c+=1\n elif a['Y']==a['A']:\n print(c)\n"}, "914": {"problem_id": 4914, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=input()\nm=[]\nfor i in range(n):\n if a[i]=='A':\n  m.append(s.count('A'*(len(a)-i-1))+1)\nprint(m[0])"}, "915": {"problem_id": 4915, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nm=0\nfor i in range(n):\n if l[i]==\"A\":\n  m=max(m,sum(l[:i]+1)//20)\nif m==0 and m%20==1: \n print(0,0)"}, "916": {"problem_id": 4916, "answer": "n, k = map(int, input().split())\narr = []\nfor i in range(n):\n x = int(input())\n\n if x % 2 == 0 and x // 2 in arr:\n\n  print(arr[k - 1])\n  k -= 1\n\n elif x%2 == 1 and (x//2 + 1) % 4 == 2 and ((x%4) - x//4 + 2*(x-2)*(2*x) + 3) // 4!= 0 or x == k - 3 and arr[x - 2]!= x - 4 and k % 3!= 1: \n"}, "917": {"problem_id": 4917, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b=list(map(int,input().split()))\n l.append(a+b)\nprint(' '.join(l))"}, "918": {"problem_id": 4918, "answer": "# cook your dish here\nn,q=map(int,input().split())\nl=[]\nfor i in range(n):\n l.append([int(x) for x in str(input()))]\nprint(len(l))"}, "919": {"problem_id": 4919, "answer": "n=int(input())\nl=list(map(int,input().split()))\nfor i in range(n-1):\n\ts=input()[i+1:i]+l+[s]\nprint(s)"}, "920": {"problem_id": 4920, "answer": "# cook your dish here\ns = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n if s[i] == 'a':\n  cnt += 1\n else:   # a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\nprint(len(str(i)))\n"}, "921": {"problem_id": 4921, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n x=input()\n if x.islower():\n  print(' '.join(map(str,x))[0])"}, "922": {"problem_id": 4922, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n if(l[i]==True and (i%3==0) ):\n  print(\"True\")"}, "923": {"problem_id": 4923, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append(a[i])\nc = 0\nif b[-1] == \"1\" or len(b) == n-2: c += 1\nprint(c)"}, "924": {"problem_id": 4924, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\nprint(s)"}, "925": {"problem_id": 4925, "answer": "# cook your dish here\nimport math\ndef solve(x,y,n):\n if x*y>=n: return False\n elif x<y: x=y\n else: y=x\n return True\nfor i in range(1,int(math.sqrt(n**0.5)+1)) :\n print(solve(i, y, n))"}, "926": {"problem_id": 4926, "answer": "# cook your dish here\nn = int(input())\nl = [int(i) for i in input().split()]\nprint(l[0])"}, "927": {"problem_id": 4927, "answer": "n,p,q=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append([int(x) for x in input().strip()]*q)\nprint(\" \".join(a))"}, "928": {"problem_id": 4928, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n l.append(list(map(int,input().split())))\nprint(len(l))"}, "929": {"problem_id": 4929, "answer": "s = input()\np = str(s)\nif len(p)>=2 or p[0]==p[1]:\n   return \"No\"\nfor i in range(0,len(str(i))-1,2):\n\tif p.startswith('a') and i%10==0 and (i//10)==1 or (p.find('A')!=i) and p==str((i+1)//2-2)and (int(\"\".join(map(''.join,p)),i%2)) and str((p-i)[0])=='0' and int(\"\"+\"0\")==int(input()).find(\"0\"),i-=1: i+=1\nprint(\"Yes\")\n"}, "930": {"problem_id": 4930, "answer": "# cook your dish here\ns=input()\nl=[]\nfor i in range(0,len(s)):\n s=s[:i]\n l.append(chr(97+l[-1]))\nprint(l)"}, "931": {"problem_id": 4931, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n x,y = map(int,input().split()) \n a,b = x+y,x-y+1\n if a == b: print(0,1)\n elif b == a:print(1,0)"}, "932": {"problem_id": 4932, "answer": "# cook your dish here\na,b,c,d=list(map(int,input().split()))\nn=a+b+c+d\nprint(n)\n"}, "933": {"problem_id": 4933, "answer": "# cook your dish here\nn=int(input())\nprint(n)"}, "934": {"problem_id": 4934, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(n-l)"}, "935": {"problem_id": 4935, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(0.5*i)\nb=a[-1]\nd=d_i-b\ng=gcd(a,b)//d\nprint(g)"}, "936": {"problem_id": 4936, "answer": "n=int(input())\na=list(map(int,input().split()))\nd=0\nfor i in range(n):\n if(a[i]>=d):d+=1\nprint(d)"}, "937": {"problem_id": 4937, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(len(l)):\n\ts+=l[i]\nprint(s)\n"}, "938": {"problem_id": 4938, "answer": "X = int(input())\r\nA = list(map(int, input().split())) + [\"M\", \"W\"][(A[0] == \"M\" or A[-1]==\"W\")] + \"B\" \nB = [x for x in A if x%2 == 0] "}, "939": {"problem_id": 4939, "answer": "n = int(input())\na = list(map(int,input().split()))\nc = 0\nfor i in range(n-1):\n if a[i] == '1':\n  c += 1\nprint(c)"}, "940": {"problem_id": 4940, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(n):\n  l.append(list(input()))\nprint(sum(l))"}, "941": {"problem_id": 4941, "answer": "# cook your dish here\nn=int(input())\ns=list(map(int,input().split()))\ncount=0\nfor i in range(n):\n if s[i]=='a':\n  s.pop(i)\n elif len(s)==3:count+=1\nprint(count)"}, "942": {"problem_id": 4942, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(l[i])\nprint(a[-1])"}, "943": {"problem_id": 4943, "answer": "# cook your dish here\nfor _ in range(int(input())):\n   x,y=list(map(float,input().split(' ')))\n\tif len(set(x) & set(y))==0 and x>=y and (x-y)%y==1 and y<=x:print(0,0)\n"}, "944": {"problem_id": 4944, "answer": "n=int(input())\ns=0\nfor i in range(n):\n s+=sum(map(int,input().split()))\n print(s)"}, "945": {"problem_id": 4945, "answer": "# cook your dish here\nfor _ in range(int(input())):\n   x,y = map(float,input().split())\n\tr = abs(x-y)//2\n"}, "946": {"problem_id": 4946, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n\tb.append(a[i]*(i+1)//2)\nprint(b[-1])"}, "947": {"problem_id": 4947, "answer": "# cook your dish here\nn = int(input())\nx = 0\nfor i in range(n):\n x = (x*1000)/2\n print(x)"}, "948": {"problem_id": 4948, "answer": "n,s = map(int,input().split())\r\nl,r,c = 0,0,int(input()),0\nfor i in range(n-1):l+=r*(r+1)//2+c*r//(c+2)%1000000007;c+=1;r=l%2;l=r-c;print(l)"}, "949": {"problem_id": 4949, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n if l[i]=='5':\n  print('NE'+' '+str(i+1)+' '.join(l[:i]+'0'*(1<<i))[::-1])\n"}, "950": {"problem_id": 4950, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint(max(a))"}, "951": {"problem_id": 4951, "answer": "a=int(input())\nfor i in range(0,a):\n a-=1\n l=input().split()\n if(len(l)==1):print(\"correct\")\n else:print(1)"}, "952": {"problem_id": 4952, "answer": "# cook your dish here\nfor _ in range(int(input())):\n a=input().split()\n if len(set(a[0])==1 or a[-1]==' ') :\n  print(' '.join(map(str,a)))"}, "953": {"problem_id": 4953, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\nprint(s)"}, "954": {"problem_id": 4954, "answer": "# cook your dish here\nn=int(input())\narr=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if(arr[i]==0):c+=1\nprint(c)\n"}, "955": {"problem_id": 4955, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=a[i]*(i+1)//2\nprint(s)"}, "956": {"problem_id": 4956, "answer": "n=int(input())\ns=''\nfor i in range(n):\n s=s+'\\n'\n if len(s)>=3 and s[-1] in 'aeiou':\n  s+=s[:-1]+' '+s.replace('\\',')\n else:s+=' '.join(map(str,s))"}, "957": {"problem_id": 4957, "answer": "for _ in range(int(input())):\n   a,b,c=list(map(str,input().split()))\n\n  if len(set(a) & set(b))==0: print(''.join(c))\n"}, "958": {"problem_id": 4958, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n a[i+1] = i+2*i\nprint(a[-1])"}, "959": {"problem_id": 4959, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nprint(n*a)"}, "960": {"problem_id": 4960, "answer": "# cook your dish here\nn=int(input())\na=[]\nfor i in range(n):\n a.append(list(map(int,input().split())))\nprint(\"\".join(a))"}, "961": {"problem_id": 4961, "answer": "# cook your dish here\na,b=map(int,input().split())\nprint(a*b)"}, "962": {"problem_id": 4962, "answer": "# cook your dish here\nn,l=map(int,input().split())\na=[]\nb=[0]*l\nfor i in range(n):\n a.append(list(input()))\n b.sort(reverse=True)\n if a[-1]==b[0]:\n  print('LALDI')\n elif b[1:]==a[:len(a)-1]+1 and len(b)-2>=l and (a,b) not in [a+b,a-b] and a<b and b!=a:print('')"}, "963": {"problem_id": 4963, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=set(a)\nfor i in range(len(s)):\n s.update({i:0})\nprint(*s,sep=' ')"}, "964": {"problem_id": 4964, "answer": "n, h, l = list(map(int, input().split()))\na = {}\nfor i in range(n):\n\ta[i] = [int(x) for x in str(input())]\nl = len(a)\nif l == 0 or (l == 1 and a[l - 1][0] == '0' and l % 7!= 0) or l > 7 or h == l - 7 and h % 3!= 7:\n\n\tprint(0)"}, "965": {"problem_id": 4965, "answer": "n=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append(l[i]*i)\nans=''\ni=0\nwhile(i<n and i<len(a)):\n\n\tfor j in a[:i]:\n \t\tif(j>=a[j][0] and j<i):ans+='\\n'+' '.join(sorted(ans,key=lambda x:x[1],reverse=True))\n\n"}, "966": {"problem_id": 4966, "answer": "n=int(input())\nl=[]\nfor i in range(n):\n a=list(map(int,input().split()))\n l.append(a[-1]*100)\nprint(len(l))"}, "967": {"problem_id": 4967, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s)\n"}, "968": {"problem_id": 4968, "answer": "# cook your dish here\nn,s,r=list(map(int,input().split()))\nif s%2==0:print(r)\nelif (s-s//2!=0) and (n-r-1)%(2*s+s)==r: print(n)"}, "969": {"problem_id": 4969, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b=list(map(int,input().split()))\n l.append(a*b)\nprint(0)"}, "970": {"problem_id": 4970, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a=input().split()\n l.append(a)\nprint(len(l))"}, "971": {"problem_id": 4971, "answer": "# cook your dish here\nm = int(input())\nl = list(map(int,input().split()))\nn = l[0]\nfor i in range(1,n+1):\n if(l[i]>=2*(n-i-1) ):\n  print(i,end='')\n else:print(0)"}, "972": {"problem_id": 4972, "answer": "# cook your dish here\nn=int(input())\ns=list(map(int,input().split()))\nfor i in range(0,n):\n  s.append(s[i]*(n-i-1)+i)\nprint('\\n'.join([str(x) for x in s]))"}, "973": {"problem_id": 4973, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nk=[]\nfor i in range(len(l)):\n\tif l[i]=='K':\n \t\tk.append(i+1)\nif len(k)==1:print('\\n'.join([str(x) for x in k]))"}, "974": {"problem_id": 4974, "answer": "# cook your dish here\nimport math\nr,n=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n a=int(input())\n l.append(a)\na=math.ceil(len(l) / 2)\n\n if l[-1]=='2':\n  print(\"Too Late\")\n elif a%2==0 and a//2!=0:\n\n  if a<l[0] or a>2*r or (a>=r) or ((a-2)*(r+1) == 0) and (l.count('1')>1):\n\n"}, "975": {"problem_id": 4975, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(len(l)):\n  if l[i]=='x':s+=1\nprint(s)\n"}, "976": {"problem_id": 4976, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nfor i in range(n):\n a.sort(reverse=True)\n if a[i]==a[n-i-1]:\n  print(a.pop(0))"}, "977": {"problem_id": 4977, "answer": "a = int(input())\nb = list(map(int, input().split()))\nc = 0\nfor i in range(b[0] - b[1]):\n  if i < 0 or i >= a or (i == a and c == c + 1) or c > b.index(i): c += 1\nprint(c)"}, "978": {"problem_id": 4978, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(n):\n s=input()\n l.append(s.replace('.',''))\nprint(''.join(l))"}, "979": {"problem_id": 4979, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(l[::-1])"}, "980": {"problem_id": 4980, "answer": "# cook your dish here\nfrom sys import stdin,stdout,setrecursionlimit\ninput=stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a[i]=='P':\n  c=c+1\nprint(c)\n"}, "981": {"problem_id": 4981, "answer": "# cook your dish here\na,b,c=list(map(int,input().split()))\nn=a+b+c\nl=[]\nfor i in range(n):\n l.append(input())\nprint(l)\n"}, "982": {"problem_id": 4982, "answer": ""}, "983": {"problem_id": 4983, "answer": "# cook your dish here\nx=int(input())\nfor i in range(x):\n a=input()\n b=a.count('8')\n if b>a[0]:\n  print(b)"}, "984": {"problem_id": 4984, "answer": "# cook your dish here\nfor _ in range(int(input())):\n x,y,z=list(map(str,input().split()))\n if z=='W':\n  print(x+y+z)\n elif z == 'C' and x==y and y==z and z!='W' or x == y or y == z or z!='C':print(0)"}, "985": {"problem_id": 4985, "answer": "# cook your dish here\nn=int(input())\ns=list(map(int,input().split()))\nd={}\nfor i in range(n):\n d[s[i]]+=1\n s.sort(key=lambda x:x[0])\n print(s.pop(0))"}, "986": {"problem_id": 4986, "answer": "# cook your dish here\nfor _ in range(int(input())):\n s = input()\n t = s.count('a')\n print(len(set([t])))"}, "987": {"problem_id": 4987, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n s=input()\n if s[0]==s[1]:\n  c+=1\n print(c)"}, "988": {"problem_id": 4988, "answer": "# cook your dish here\nimport math\nt=int(input())\nfor i in range(t):\n n=input().split(' ')\n if(n[0]=='1' and n[-1]!=n.pop()) :\n  print(0)"}, "989": {"problem_id": 4989, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append(a[i]*i)\nprint(sum(l))"}, "990": {"problem_id": 4990, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n b,k,g=list(map(int,input().split()))\n l.append(b)\nk=k-1\n g=g-k\n if(l[k]==0):l.pop()\n else:print(k+1)"}, "991": {"problem_id": 4991, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nprint(sum(a))"}, "992": {"problem_id": 4992, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n l.pop(0)\nprint('safe order',s)"}, "993": {"problem_id": 4993, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict,deque\np,n=map(int,input().split())\nl=[]\nfor i in range(n):\n l.append(list(input()))\nprint(l[-1])"}, "994": {"problem_id": 4994, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n x,y=list(map(int,input().split()))\n print(x+y)"}, "995": {"problem_id": 4995, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nprint(l[0])"}, "996": {"problem_id": 4996, "answer": "# cook your dish here\ns = input()\nn = len(s)\nk = 0\nfor i in range(n-1,0,-1):\n\tif s[i] == 'A': k += 1\nprint(k)"}, "997": {"problem_id": 4997, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a=input()\n l.append(a)\nprint(len(l))"}, "998": {"problem_id": 4998, "answer": "# cook your dish here\na,b,c,d=list(map(int,input().split()))\nans=0\nfor i in range(0,a+1):\n if(i%4==0 or (i//4)==(b+c+d-1) ):\n  ans+=1\nprint(ans)\n"}, "999": {"problem_id": 4999, "answer": "# cook your dish here\na, b = map(int, input().split())\nprint(a)"}}