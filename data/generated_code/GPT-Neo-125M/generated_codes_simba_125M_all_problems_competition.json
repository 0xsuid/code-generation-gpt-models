{"0": {"problem_id": 3000, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append(l[i])\nans=sum(a)\nprint(ans)"}, "1": {"problem_id": 3001, "answer": "# cook your dish here\nn=int(input())\narr=[]\nfor i in range(n):\n\tx,y,z=list(map(int,input().split()))\n\n\tarr.append(x*y)\nprint(len(arr))"}, "2": {"problem_id": 3002, "answer": "# cook your dish here\nn = int(input())\narr = list(map(int, input().split(' ')))\nd = {}\nfor i in range(n):\n  if arr[i] == '2017' and d.get(d[d.setdefault(0,0)], 0) == -1 and i not in [2,3,4,5,6,7,8,9] or i == n-1 or (i==n-2) or d[(i+1)%3][0]==0 and (arr[arr.pop()]!='2017') and len(set(arr))==3 or arr.count('2017',1)!=1: d['2017'] = i\nprint(*d)"}, "3": {"problem_id": 3003, "answer": "# cook your dish here\nn = int(input())\ngraph = [[] for _ in range(n+1)]\nfor x,y in zip(list(map(int,input().split()),list('\\n')))[::2]:\n   graph[x].append(y)\na = [0]*n\nb = [-1]\nwhile a[a.index(max(b)):]!= -1: a.pop()\nans = 0\ndef dfs(a,b):\n\tif b[0]+a[b[1]] > ans: ans += 1; return\ndfs(0,a)"}, "4": {"problem_id": 3004, "answer": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if l[i]=='R':\n  c=c+1\n elif l.count('R')==3:print(c)"}, "5": {"problem_id": 3005, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int, input().split()))\ncnt = 0\nfor i in range(len(l)):\n\tif l[i] == '0':\n  \t\tl.pop(i+1)\nprint(sum(list(filter(lambda x: x in '0123456789'))))"}, "6": {"problem_id": 3006, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(len(a)):\n if a[i]=='X':\n  l.append(l[-1]*10)\n elif 'A' in a and l[0]>=10*(10**(i-i+1)-1):l.sort()\n else:print('0')"}, "7": {"problem_id": 3007, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b,f,t=list(map(int,input().split()))\n l.append(a)\nprint(max(l))"}, "8": {"problem_id": 3008, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] += b[-1]\np = a.pop(0)\nans = 0\nwhile p!= 0 and a[p] > b:\n\n\tprint(ans)\n\n"}, "9": {"problem_id": 3009, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nprint(max(a))"}, "10": {"problem_id": 3010, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n  x,y,z=l.index(i),l[i]\nprint(sum(z-y)//2)"}, "11": {"problem_id": 3011, "answer": "# cook your dish here\nfor _ in range(int(input())):\n   n = 1 if input()[0] == '1' else 2*(n+1)//2 + n+2*n//4 else n + 1"}, "12": {"problem_id": 3012, "answer": ""}, "13": {"problem_id": 3013, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n   l.append(a[i]+i)\nprint(*l)"}, "14": {"problem_id": 3014, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn,c=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append([int(stdin.readline()).split(' ')[-1]*(c+1)//2])\n \nprint(l[c])"}, "15": {"problem_id": 3015, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nb=[]\nfor i in range(n):\n\ts+=l[i]\n\n\tb.append([s,0,i])\nif(s==0 and b[s][0]==1 and s>b[-1][1]:\n \tprint(\"s\\n\")\nelse:print(0)"}, "16": {"problem_id": 3016, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ns = [0]*(n+1)\nfor i in range(1,len(l)):\n  s[i]+=1\ncount = 0\ndef is_empty(x,y,z):   # x <= y <= z <= x == y == z == x \n\n  if x==y==z==0: return False\n\tif x<0 or x>=0 and y<=z and x+y == 0: \t\t  return True\n\n\telse:\treturn False "}, "17": {"problem_id": 3017, "answer": "# cook your dish here\nn, e = map(int, input().split())\nprint(n)"}, "18": {"problem_id": 3018, "answer": "# cook your dish here\nn, t = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n): s[i+1] = int(input())\ndice = set(s)\nans = 0\nwhile len(dices) > 0: ans += dices.pop()\nprint(ans)"}, "19": {"problem_id": 3019, "answer": "n=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(l[i]*i)\nprint(a[-1])"}, "20": {"problem_id": 3020, "answer": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a[i]%2==0: \n  c+=1\nprint(c)\n"}, "21": {"problem_id": 3021, "answer": "l,n=list(map(int,input().split()))\ns=''\nfor i in range(n):\n s+=''.join(w[i] for w in s)\nprint(s)"}, "22": {"problem_id": 3022, "answer": "# cook your dish here\nn,a,b,c=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=a+b+c\n print(s)\n"}, "23": {"problem_id": 3023, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na,b,c=[],[]\nfor i in range(n):\n x,y,z=[],[],[0]*(x+y+z)\n l.append([x,0])\n for j in l[1:]:\n  if(j not in [0]+[0-z]) and (j+1)%3==0 and a[j]!=0:z+=x\n print(\"yes\")\n"}, "24": {"problem_id": 3024, "answer": "# cook your dish here\ns=input()\nn=len(s)\ni=0\nwhile(i<n):\n\tif s[i]==s[n - 1] and i+1<=n and (i+2*i==n-2) or i>=i + 2*n : i+=1\n \ti+=2\nprint(n)"}, "25": {"problem_id": 3025, "answer": "# cook your dish here\nn,m=list(map(int,input().split()))\nl=[]\nfor i in range(m):\n l.append([int(x) for x in str(i)])\nx=l.index(l[x[0]])\ns=0 \nwhile(len(s)>0 and l[s].startswith('1'):s+=(x+1)):x-=s\n s+=x\nprint(max(0,s)) "}, "26": {"problem_id": 3026, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n if l[i]<=l[-i]:\n  c+=1\nprint(c)\n"}, "27": {"problem_id": 3027, "answer": "for _ in range(int(input())):\r\n\tn,m=list(map(str,input().split()))\r\n\n\tprint(n*m)"}, "28": {"problem_id": 3028, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n, m, p = list(map(str, input().split()))\n if n == m or m == 1 or p == p: \n  print(0)\n elif n % 2 == 0 and m % p!= 0: print(-1)"}, "29": {"problem_id": 3029, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n  a=list(map(int,input().split()))\n\n  l.append(a.count(0))\nprint(sum(l))"}, "30": {"problem_id": 3030, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n l.append(list(map(int,input().split())))\nprint(len(l))"}, "31": {"problem_id": 3031, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append([])\n \ta[i].append(i+1)\nprint(len(l))"}, "32": {"problem_id": 3032, "answer": "for _ in range(int(input())):\n\tb,s=list(map(float,input().split()))\n\n\tprint(b+s)"}, "33": {"problem_id": 3033, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(0,len(l)):\n if l[i]==\"0\":\n  print(\"X\",i+1)\n elif l.count(\"0\")%2!=0:print(\"Impossible\")\n print()\n"}, "34": {"problem_id": 3034, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nr=0\nfor i in range(0,n):\n s,e,p,a[i]=((s-p)+(e+p-1))/2\n if s>=r:r+=1\n elif s<0:s+=r\nprint(r)"}, "35": {"problem_id": 3035, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(max(l))"}, "36": {"problem_id": 3036, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nd = dict()\nfor i in range(n):\n\td[l[i]].append(i+1)\ns,m,d,n,x,y = l[n-1]\nif x>y: x, y = y, x-y\nprint(len(d))"}, "37": {"problem_id": 3037, "answer": "for _ in range(int(input())):\r\n\tn,a,b=list(map(float,input().split()))   # a, b  are lists of integers.  a and b are sorted lists. a[0] = 0 means there's a gap of 0's between 0 and n-a[a.index(max(b)-1)], b[1]  = max(a) - 1,  while n%2 == 0:  n=n/2  b=b[b.rfind('.')+1:] "}, "38": {"problem_id": 3038, "answer": ""}, "39": {"problem_id": 3039, "answer": "n=int(input())\nl=[0]*n\nfor i in range(n):\n\tl[i]=list(map(int,input().split()))\nprint(l)"}, "40": {"problem_id": 3040, "answer": "# cook your dish here\ns = input()\nn = len(s)\nc = 0\nfor i in range(n):\n if s[i] == 'a':\n  c += 1\nprint(c)"}, "41": {"problem_id": 3041, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na,b=0,0\nfor i in range(n):\n if l[i]=='1':\n  a+=1\n elif a<b:b-=a\nprint(a)\n"}, "42": {"problem_id": 3042, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n\tif a[i] % 2 == 0 and a.count(i)%2 == 1 and (a[-i+1] * (i + 1) // 2!= 0) or (len(a) - i - 1 == 2 and i!= n-2): ans += 1\n\n\t\t\nprint(ans%1000000007)"}, "43": {"problem_id": 3043, "answer": "n, m = list(map(int, input().split()))\ngrid = [[0] * m for i in range(n)]\nfor i, row in enumerate(zip(grid, grid[1:] + [0:n])) :\n if i == 0 or i % 2 == 1 : \n  print(-1)\n elif m == 2 or m%2!= 0 : print(m - 2, n - 1, 0, -1, 1)\n\n"}, "44": {"problem_id": 3044, "answer": "# cook your dish here\nfor _ in range(int(input())):\n x,y,z=map(str,input().split())\n if z=='S':\n  print(x+y+z)"}, "45": {"problem_id": 3045, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nx,y,d=0,0,-10**6,4\nfor i in range(n):\n x=x+y\n y=y+d\n a.append(x)\nprint('\\n'.join(a))"}, "46": {"problem_id": 3046, "answer": "# cook your dish here\nn=int(input())\nr=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tr1,c1=r[i],c[(i+1)%len(r)//2]\n\n\tif c1==c2 or r1>r2 and r2<r3 and c2>c3:\n\n \t\tprint(\"1\",end=\"\")\nprint()\n"}, "47": {"problem_id": 3047, "answer": "# cook your dish here\nfor _ in range(int(input())):\n input()\n a = input().split(\" \")\n n = int(a[0])\n print(n)"}, "48": {"problem_id": 3048, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nu,v,w=[],[]\nfor i in range(n-1):\n\tu.append(l[i]+2)\ndef dfs(i,j,k,d):\n\n\tif(j==0 or i==u[j] and j==v[k] or k!=i-j-k+2 or j!=-1 and k>0 and (i==j) or (v==i or u[v]==(v-i)or k<=j))or d.count(1)>d.get(0,0)[1]or i<j or d[0][0]<d[1][1]+1:return1\nif((n==1 or n==2 and n-2>2))and(u==l and v==w and w==[])or (u=l or v=w):return0\nprint(dfs(2,1,2,\"1\",\"2\"))"}, "49": {"problem_id": 3049, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a=input()\n l.append(a)\ni=len(l)-1\nwhile(i>=0 and l[i]=='k'):i-=1"}, "50": {"problem_id": 3050, "answer": ""}, "51": {"problem_id": 3051, "answer": ""}, "52": {"problem_id": 3052, "answer": "# cook your dish here\nimport bisect\nfrom sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\nl=list(map(int,input().strip().split()))\nfor i in range(n):\n x,y,x_b=map([int],[int])\n l.insert(0,i)\n ans=l[0].copy()\n for j in l[1:]:\n  ans.append(ans[-1]+y*(x+1-j)//(y-x-2*j))"}, "53": {"problem_id": 3053, "answer": "# cook your dish here\nn,k,p=list(map(int,input().split()))\nl=[]\nfor i in range(k):\n   if(l[i]!=0):l.append(i)\nprint(' '.join(str(x) for x in l))\n\n"}, "54": {"problem_id": 3054, "answer": "# cook your dish here\nt=int(input())\nfor i in range(t):\n\ts=input().split(' ')\n\n\tn=len(s)\n   if(n%2==0 or s[n//2]=='A' or (n-s[-1] == 'E' and n%4 == 0 or n//6 ==0) ):\n\n \tprint(5, \"E \"*(2*n+1) + \"A\"*5)"}, "55": {"problem_id": 3055, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(l[i]*100)\nif len(set(a))==1 and a[0]!=a[-1]:\n print(\"thore\"+\"is awesome\")\n"}, "56": {"problem_id": 3056, "answer": "# cook your dish here\ndef solve(s):\r\n   l,r,p,*a = 0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113, 114,115,116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 188, 189, 190, 193, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 254, 257, 260, 263, 266, 269, 271, 277, 278, 279, 280, 281, 282, 293, 296, 313, 314, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340, 341, 347, 348, 339, 349, 360, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 384, 387, 388, 389, 400, 405, 105, 106, 108, 109, 110, 111, 112, 115, 116, 427, 428, 319, 320, 333, 344, 345, 353, 356,ombies\nfrom sys import stdin\nstdin.readline()"}, "57": {"problem_id": 3057, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n s=input()\n if s[0]==s[1]:\n  print(\"yes\")"}, "58": {"problem_id": 3058, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=set()\nfor i in range(n):\n  s.add(a[i])\nif len(s)==1 and a[0]==s[-1]:\n print(1)\n"}, "59": {"problem_id": 3059, "answer": "# cook your dish here\nn, r, m = list(map(int, input().split()))\nl = []\nfor _ in range(r):\n a, b, c = [int(x) for x in input()]\n l.append(a+b+c)\nans = 0\nd = int(input())-1\nq = 1000000000000\nwhile(q>=0 and l[q-1]=='0':\n q-=1 \n if q<=r-d: ans = min(ans, (r+d-q)//2)\n\n"}, "60": {"problem_id": 3060, "answer": "n,k=list(map(int,input().split()))\nl=[]\nfor i in range(k):\n\tl.append((int(input())))\nprint(*l,sep='\\n')\n"}, "61": {"problem_id": 3061, "answer": "# cook your dish here\nn, m = map(int, input().split())\nl = []\nfor _ in range(m):\n   a, b = [int(x) for x in input()]\n\n  if (a == 1 and b == 0) and (l[a - 1] == 2 and l[b - 2]!= 0 and a!= 1) or (b == 3 and len(l) - a + 1 == b - 3): \n\tprint(0)\n"}, "62": {"problem_id": 3062, "answer": "# cook your dish here\nfor _ in range(int(input())):\n a,b,c,d,e,f,g,h,i,j,k,l,m,n,r,s,t,u,v,w,x,z=list(map(float,input().split()))\n x=(a+b+c+d+e+f+g+h+i+j+k+l+m+n+r+s+t+u+v+w+x+z)//2\n y=(b-a-c-d-f-g-h-i-j-k-l-m-n-r-s-t-u-v-w-x-z)/(u*v*w*x)\n z=(d*c*e*f*g*h*i*j*k*l*m*n*r*s*t*u)*(((a+(b+(c+(d+(e))+(f))+(g)+(h)+i)+k)+l+(m+(n+(r+(s+(t+(u+(v+(w+(z))))))))))/u)%u\n print(abs(x*y))"}, "63": {"problem_id": 3063, "answer": "n=int(input())\nl=[]\nfor i in range(n):\n a=list(map(int,input().split()))\n l.append(a)\nprint(len(l))"}, "64": {"problem_id": 3064, "answer": "# cook your dish here\nn,m=map(int,input().split())\na,b=list(map(''.join,a))\nroad=[]\nfor i in range(m):\n if road[i]:\n  road+=[i]\n elif road==[] and road!=road[-1] and i<len(road) and not (road.startswith('1')) and (i+1 in road) or i>=0 and a[0]==1 and b[1]+b[2]<=n or a.count(1)==b.find(b) == 1 or b==0:a.append(i)\nprint(*road,sep='\\n')"}, "65": {"problem_id": 3065, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n s.append(0)\n l.sort(key=lambda x:x[1])\n if len(l)==1:print('1')\n else: print('0')"}, "66": {"problem_id": 3066, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n, c=list(map(str,input().split()))\n s=input()\n if len(s)==0 or s[-1]=='1':\n  print('Impossible')\n elif s.count('1')==len(c)-1 and c[0]!=c[1]+'0' and (n-c)%2==1:\n\n  if n>0 and n%3==2 and 2*(n//3)<=3 and 0<n<9 and all(abs(x-y)>1 for x,y in zip([s[i:i+c] for i,c in enumerate(y,1) if c<y]))):\n\n print('')\n"}, "67": {"problem_id": 3067, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s)\n"}, "68": {"problem_id": 3068, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(0,n):\n a.append(str(i+1)+'0')\nprint(len(a))"}, "69": {"problem_id": 3069, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n\tl.append(list(map(int,input().split())))\ni=l[-1]\nwhile(i>0 and i<len(l)-1 and l[i+1][0]==\"\") and (i==0 or i>n-i-2):i+=1\nprint(\"\\n\".join(str(x) for x in l))"}, "70": {"problem_id": 3070, "answer": "# cook your dish here\nn,m=map(int,input().split())\na=[]\nfor i in range(n):\n x,s,t,l=list(map (int, input().strip()))\n a.append(x)\n s+=t\n t+=l\nprint(a[0])"}, "71": {"problem_id": 3071, "answer": "n,m=map(int,input().split())\na=[]\nfor i in range(n):\n   a.append([int(x) for x in str(i)]+[a[i][0]])\nprint(*a)"}, "72": {"problem_id": 3072, "answer": "# cook your dish here\nn,c=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(i+1)\nprint(c)"}, "73": {"problem_id": 3073, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n\tl.append(sum(l[i]*(i+1)))\nprint(len(s))"}, "74": {"problem_id": 3074, "answer": "# cook your dish here\nn=int(input())\ns=0\nfor i in range(n):\n s=s+(10**9)+7\n print(s)"}, "75": {"problem_id": 3075, "answer": "n,g=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n d=int(input())\n l.append(d)\nd=l[-1]\nprint(min(l))"}, "76": {"problem_id": 3076, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn,k=stdin.readline().strip().split('\\n');\ns=int(s)\nl=[]\nfor i in range(n):\n\ts,v=list(map(int,s.split(max(l))));\nans=s*k\nprint(ans)"}, "77": {"problem_id": 3077, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n, m = list(map(float, input().split()))\n a = min(m, n)\n b = max(n-a, 0) \n if a == b: print(0)"}, "78": {"problem_id": 3078, "answer": "n,s = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n-1,0,-1):\n l[i+1] = i\nprint(len(l))"}, "79": {"problem_id": 3079, "answer": "# cook your dish here\nfrom sys import stdin,stdout,setrecursionlimit\nstdin.readline()\na = list(map(lambda x:int(x) if x in \"aeiou\" else 0))\ns = \"\".join(a)\nc = 0\nfor i in range(len(s)):\n if s[i] == \"k\":\n  c += 1\nprint(c)"}, "80": {"problem_id": 3080, "answer": "# cook your dish here\nfor _ in range(int(input())):\n\tn, m, q = list(map(str, input().split()))\n\n\tp = [[0] * m for i in set(range(1, n + 1)) if i % 2 == 0 or i > 0]\n \tfor k, v in enumerate(p, 1): p[k][v] += q\n\\t\\tif q in p: print(q)\n"}, "81": {"problem_id": 3081, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(n):\n\tl.append([int(x) for x in l[i]])\nprint(m)"}, "82": {"problem_id": 3082, "answer": "# cook your dish here\nfor _ in range(int(input())):\n d,w=list(map(float,input().split()))\n if(w>=d and w<=w): \n  print(0)\n elif(d==1 and d==2 and (w-d)%w!=0.00001):\n\n  if((d-w)//w*w+d*d+w/w==d): print((1)+(1)*(1.0/2.000000000000007)))\n else: print(\"0\")\n"}, "83": {"problem_id": 3083, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n s=input()\n l.sort(key=lambda x:x[0])\n if(len(l)==1 and l[-1]=='a' and len([x for x in l if x!=s])) :\n  print('fail')"}, "84": {"problem_id": 3084, "answer": "# cook your dish here\nimport math\nn=int(input())\nl=list(map(int,input().split()))\nif(math.ceil(l[0]-1)%2==0):\n   print(\"0\")\nelse:\n\n  for i in range(1,n+1):\n\n\tl.pop(i)\n\tif l[i-1]>=0 and l.get(0,0)<=i+2 and 0<i<n and int(str(x)for x in l)==(2*(n-i))//2:print(\"%0.8f\"%(round(max(10,10)//100)))\n"}, "85": {"problem_id": 3085, "answer": "# cook your dish here\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\ts = input().strip()\n\n\tif s[0] == ':' and len(s) > 1 and (s[-1]==':' or s.find(':')!= -1) and s!=s.rstrip('\\n'): print('1')"}, "86": {"problem_id": 3086, "answer": "# cook your dish here\nn,m=map(int,input().split())\nd={}\nfor _ in range(n):\n a,b,c,d=[int(x) for x in str(input())]\n if d[a]<d[b]:\n  print('-',end='')\n elif a==b and c==d and (c==0 or a!=b-c+1) or (a==1 or b==c-d) and d!=(b==a+d+2) :\n print(c)"}, "87": {"problem_id": 3087, "answer": "# cook your dish here\nn,k=map(int,input().split())\narr=list(map(\"abcdefghijklmnopqrstuvwxyz\",\"b\")for _ in range(n))\na=[0]*(k+1)\nfor i,j in enumerate(arr,1):\n if j==\"1\":\n  a[i]=1\n elif j!=\"2\" and i%2==0:a[j]=2\nprint(*a)"}, "88": {"problem_id": 3088, "answer": "n,k=list(map(int,input().split()))\nl=[]\nfor i in range(k):\n a=int(input())\n l.append(a)\nprint(max(l))\n\n"}, "89": {"problem_id": 3089, "answer": "n = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(n-1):\n a[i] = (i+1)*(i*i)\nprint(a[n])"}, "90": {"problem_id": 3090, "answer": "# cook your dish here\nn,m=map(int,input().split())\ngrid=[[int(i) for i in str(grid[0])] for j in range(m)]\nfor i,j in zip(list(range(1,n+1))):\n   grid[i][j]=1\nc=0\nvisited=set()\nwhile(c<=n and m>0 and visited):c+=1 \nm-=1"}, "91": {"problem_id": 3091, "answer": "# cook your dish here\nn, m, t = map(int, input().split(\" \"))\ngrid = []\nfor i in range(m):\n\tgrid.append([int(x) for x in input()] + grid[i][0])\nprint(len(grid))"}, "92": {"problem_id": 3092, "answer": "# cook your dish here\nn,m = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(m):\n  a[i]+=1\nc = 0\nd = []\ni = 1\nwhile i*i <= n:\n\n  if i==n-1 and (c==0 or d==[0,i]) and i!=0:c+=d[d.pop(0)]*m-i*o+o*a[o]\nprint(c%m)"}, "93": {"problem_id": 3093, "answer": "# cook your dish here\nn,k=map(int,input().split())\nl=[]\nfor i in range(k):\n\tl.append(list(input()))\nc=0\nr=k-1\ni=l[i]\nwhile(i!=len(l)):\n\n\tif(r%2==0 and l[r//2]==i or c==c+1 or r>=i-2 and i>0 or (r-i)%3==1 and (i//3-r)>1) or(c==k and r%4==2 or l.count(1)!=r or i%6==3 and c%5==4 or k%7==6):i+=1 \n \telse:r+=i\nprint(sum([c,r]))"}, "94": {"problem_id": 3094, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s)"}, "95": {"problem_id": 3095, "answer": "R,S = list(map(int,input().split()))\nA = [[0]*R for _ in range(R)]\nfor i,x in enumerate(A):\n A[i][x] = x+1\nans = 0\nwhile(i+R-1)>=0 and i!=R:ans+=A[R][i]\nprint(ans)\n"}, "96": {"problem_id": 3096, "answer": "n=int(input())\nfor i in range(n):\n a,b=list(map(int,input().split()))\n print(a+b)"}, "97": {"problem_id": 3097, "answer": "for _ in range(int(input())):\r\n\ta,b=list(map(float,input().strip().split()[1:])).pop(0).split('|')[0].rstrip('\\n').pop(-1).rjust(2**(a-1)//2,1000000007,0,a*b*(b-a)/2+10000007)"}, "98": {"problem_id": 3098, "answer": "# cook your dish here\nn,k=map(int,input().split())\na=[]\nfor i in range(k):\n x, y=[int(x) for x in str(i)]\n a.append(a[-1][0])\nb=a.pop(0)\nprint(b)"}, "99": {"problem_id": 3099, "answer": "# cook your dish here\ns, e, c = list(map(int, input().split()))\nl = []\nfor i in range(s):\n\tl.append([int(input())-1, i+1] + [0]*(e-l[-1][0]), 0)\nprint(len(l))"}, "100": {"problem_id": 3100, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,c,m=list(map(int,input().split()))\n l.append(a*m)\nprint(sum(l))%1000000007"}, "101": {"problem_id": 3101, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n a.append(b[i]-1)\n b.sort()\n if len(a)==1 or a[0]==a[-1]:\n  print(\"1\",end=\"\")\n elif b[n-2]%2==0:print(\"2\",len(\"\"))\n else:b.insert(0,0)"}, "102": {"problem_id": 3102, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(len(l)):\n if l[i] in [6,8]:\n  c+=1\nprint(c)"}, "103": {"problem_id": 3103, "answer": "# cook your dish here\nmod = 1000000007\ny,x = map(int,input().split())\nl = []\nfor i in range(y):\n  x,l.append(list(input()))\nm = 1e9\ns = [0]*(len(l)+1)"}, "104": {"problem_id": 3104, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(len(l)):\n s+=l[i]\n if(s>=5000 and l[-1]=='0' and s<5000 ):\n  print(i+1)\n"}, "105": {"problem_id": 3105, "answer": "# cook your dish here\nn=int(input())\ns=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append(s[i]-1)\nans=[0]*n\nwhile(len(l)):\n\n\ta,b=l[0].pop()\n  \tif(b!=0 and l[b].count(a)==0):ans[a]=b\nelse:ans=s\nprint(*ans)"}, "106": {"problem_id": 3106, "answer": "# cook your dish here\nfrom math import ceil\nt=int(input())\nfor i in range(0,t): \n\ts=list(map(int,input().strip().split()))\n\n\tif s[0]==s[-1] and len(s)>1:   print(ceil(max(1,s)-1))\n"}, "107": {"problem_id": 3107, "answer": "# cook your dish here\nn,m=map(int,input().split())\na=[]\nfor i in range(n):\n   a.append([int(x) for x in input().rstrip('\\n').replace('0',''))+' '+str(i+1-a[i]))\nprint(len(a))"}, "108": {"problem_id": 3108, "answer": "# cook your dish here\nn,k=map(int,input().split())\na=list(map(''.join(sorted(set(x)) for x in a)),n)\nprint(sum(a))"}, "109": {"problem_id": 3109, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n, m = list(map(float, input().split()))\n x = min(m, max(n, 2*m*w) + (n - 1)*(w*h) )\n print(x)"}, "110": {"problem_id": 3110, "answer": "# cook your dish here\nt=int(input())\nfor i in range(t):\n m,n=list(map(int,input().split()))\n grid=[[0,0],[1,1],[0,-1]]\n for j,k in enumerate(grid): \n  if grid[j][k]==0: m.append(k)\n ans=0\n while(len(m)>0 and m[-1][0]<=ans): ans+=1\n print(ans)"}, "111": {"problem_id": 3111, "answer": "n,m=list(map(int,input().split()))\nl=[]\nfor i in range(m):\n  a,b=[int(x) for x in str(input())]\nans=sum(l)\nprint(ans)"}, "112": {"problem_id": 3112, "answer": ""}, "113": {"problem_id": 3113, "answer": "n = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n x,y,a[i] = l.index(x),l.pop(y)\n l[y].append(i)"}, "114": {"problem_id": 3114, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n, m = list(map( int, input().split() ))\n if n == 1 or m == 2 or n % 2 == 0: \n  print(\"YES\")"}, "115": {"problem_id": 3115, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(n):\n a=input()\n if a[0]=='=':\n  l.append(a[1]+1)\n elif '>' and '=' or '<' in l[-1] or a!=l[:-1]:\n print('consistency')"}, "116": {"problem_id": 3116, "answer": "# cook your dish here\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nn = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(1,n):\n\tx,y,z = l[i-1]-i,l[n-i]-n,2*z,1-math.gcd(a[0],z)\nprint(sum(l))"}, "117": {"problem_id": 3117, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(len(a))"}, "118": {"problem_id": 3118, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nd = {}\nfor i in range(n):\n   d[l[i]] = i\ns = 0\ncnt=0\nwhile s<len(l) and len(d)>0 and l[s]==d[d.get(s,0)]:\n\ts+=1\nif s>=n-1 or cnt==0 or s!=l.index(max(0,s-n+1)) :\nprint(1)"}, "119": {"problem_id": 3119, "answer": "# cook your dish here\nn = int(input())\np = list(map(int,input().split()))\nnotes = [0]*(n+1)\nsp = []\nfor i in range(p):\n  sp.append(notes[i] + sp[-1][0])\nif sp == []:\n print(0)"}, "120": {"problem_id": 3120, "answer": "def __starting_point__(s):\n s=s.split(' ')\n return [int(i) for i in s[::-1]]\n \n"}, "121": {"problem_id": 3121, "answer": "# cook your dish here\nn,m=map(int,input().split())\na=[]\nh=0\nfor i in range(n):\n if a[i]%m==0:a.append(i)\n else:h+=a[-1]\nprint(h)"}, "122": {"problem_id": 3122, "answer": "# cook your dish here\nn, m = map(int, input().split())\nl = []\nfor i in range(m):\n   l.append(list(map(lambda x: x[0], l[-1:])))\nr = list(range(n+1))\nd = [0]*n\ncnt = 0\nwhile d[r[l[d[i]]]-1]==0:d.pop(r.index(c)//2)\nprint(len(d))"}, "123": {"problem_id": 3123, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nk = 0\nfor i in range(n):\n\tk += a[i]\nprint(k)"}, "124": {"problem_id": 3124, "answer": "n=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(n):\n a.append(a[-1]%2)\nprint(ans)"}, "125": {"problem_id": 3125, "answer": "for _ in range(int(input())):\n a,b,c=list(map(str,input().split()))\n if a!='+' or b!=a.upper():\n  print('+')"}, "126": {"problem_id": 3126, "answer": "# cook your dish here\nn, t = list(map(int, input().split()))\nl = []\nfor i in range(n):\n  l.append([int(x) for x in input()] + [0] * (t - 1) + l[-1][0])\nprint('\\n'.join(l))"}, "127": {"problem_id": 3127, "answer": "# cook your dish here\nn, m = map(int, input().split())\nl = []\nfor i in range(n):\n   l.append([int(x) for x in input()])\nc = [0]*(m+n+1)\ns = 0\nk = m\nwhile k!=0 and l[k-1][1]==0:k+=1\nprint(k)"}, "128": {"problem_id": 3128, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n\tx,y=list(map(int,input().split()))\n\n\tif(y==1):\n\n \t\tprint(x)\n\n"}, "129": {"problem_id": 3129, "answer": "# cook your dish here\ns = input()\nn = len(s)\ncnt = 0\nfor i in range(n-1):\n if s[i] == 'C':\n  cnt += 1\nprint(1)"}, "130": {"problem_id": 3130, "answer": "# cook your dish here\nn=int(input())\na,b=list(map(int,input().split()))\nevents=[]\nfor i in range(n):\n event=set()\n for t in event: \n  event.add(t)\n if(len(events)==1 and events[-1][0]-events[0][1]!=0) or (not(a) and a not in events) : \n\n  print(event.count(0))\n\n"}, "131": {"problem_id": 3131, "answer": "n,k=list(map(int,input().split()))\nl=[0]*(n+1)\nfor i in range(k):\n l[i]=int(input())\nprint(sum(l))"}, "132": {"problem_id": 3132, "answer": "# cook your dish here\nr,c=map(int,input().split())\na=[]\nfor i in range(r):\n s=input()\n a.append(s)\nprint(len(a))"}, "133": {"problem_id": 3133, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n   a.append(i+1)\nif a[0]+a[1]<=b[-1]:\n\ta.pop()\nprint(len(a))"}, "134": {"problem_id": 3134, "answer": "# cook your dish here\nfor _ in range(int(input())):\n s = input()\n r = list(s)\n c = sorted(r, key=lambda x: (x, -x))\n ans = []\n for i in r: \n  if c[i] % 2 == 0: ans.append(i)\n\n print(*ans)"}, "135": {"problem_id": 3135, "answer": "# cook your dish here\nn,a = map(int,input().split())\nl = []\nfor i in range(n):\n\tl.append(bin(i).count('1'))\nprint(len(l))"}, "136": {"problem_id": 3136, "answer": "# cook your dish here\nn, m, s, t = map(int, input().split())\ndist = [0]*(n+m+1)\nfor _ in range(m):\n  dist[int(input())] = s + t\nans = 0\nvisited = set([0])\nwhile ans < s and s - visited.add(dist[s - 1]):\n\n  for i, x in enumerate(list(range(1, n + 1)))[1:]:\n\n\tif x == x[0]:\n\t\tans += t - (1 << (ord(x) - ord('0')))\nprint(ans)"}, "137": {"problem_id": 3137, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(0,n):\n if l[i]==\"1\":\n  s+=(9*(i+1)//2)\n else:s+=1\nprint(s)"}, "138": {"problem_id": 3138, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=a[i]\nprint(s)"}, "139": {"problem_id": 3139, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n a,b=list(map(int,input().split()))\n s=a/b\n if s>=1 and s<=200000 and (s%a==0 and a%b!=0) or s%(s-1)==1: \n  print(\"NE\")\n elif s==2 and b!=(s/2) and ((b-a)%s) == 0 or b==a and abs(a-b)<0 or a==b:"}, "140": {"problem_id": 3140, "answer": "r,c,k,l=list(map(int,input().split()))\nx=[]\nfor i in range(r):\n x.append([int(x[i][0])-1,i+1]*(c-i)//2)\n l=l+k\n if x[0]<=r:print(l)"}, "141": {"problem_id": 3141, "answer": "# cook your dish here\nimport math\nn=int(input())\nl=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n s.append(math.ceil(i/3*l[i])+1)\nprint(len(s))"}, "142": {"problem_id": 3142, "answer": "# cook your dish here\na,b,s=list(map(int,input().split()))\nprint(b-s)\n"}, "143": {"problem_id": 3143, "answer": "# cook your dish here\nfrom collections import defaultdict\nn, m = list(map(int, input().split()))\na = [0]\nfor i in range(n):\n a.append(list(input()).pop())\nx = a[:n-1].copy()\nprint(len(x))"}, "144": {"problem_id": 3144, "answer": "# cook your dish here\nn,k=map(int,input().split())\nl=[]\nfor i in range(n):\n\tl.append([int(x) for x in str(i)])\nans=0\nd=1\ng=k*n\nm=n-d\nwhile m>0 and l[-1][0]!=l[0][1]:\n   ans+=g*(m-g)//2\nprint(ans)"}, "145": {"problem_id": 3145, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n x,a,b=list(map(int,input().split()))\n if x%a==0 and b%b!=0: \n  print(a)\n elif a==b:print(b)"}, "146": {"problem_id": 3146, "answer": "for _ in range(int(input())):\n n, t = list(map (int, input().split()))\n arr = [0]*(n+1)\n for i, v in enumerate(arr, 1):\n\n  if v == 'R':\n   arr[i] += t\n print(*arr)"}, "147": {"problem_id": 3147, "answer": "# cook your dish here\nimport math\nr,c=list(map(int,input().split()))\nl=[]\nfor i in range(r):\n l.append(math.log(i,2)+1)\nprint(*l)"}, "148": {"problem_id": 3148, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nw=[0]*(n+1)\nc=0\nfor i in range(len(l)):\n if l[i]%2==0:w[0]-=c\n else:c+=1 \nprint(*w)"}, "149": {"problem_id": 3149, "answer": "for _ in range(int(input())):\n\tn, m = list(map(float, input().split()))\n\n\tx = [0] * (n + 1)\n\n \tfor i, (x[0], x[1]) in enumerate(zip(list(range(n)), [x])) :\n#\t\tprint(\"i:\", i)\n \ndef is_valid(x, y): return x == y\nc = 1e-6\nwhile c < n:\n\n # print(c, n, x,y, c, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n\n if c % 2 == 1 or c == 0 or (c == 3 or x < y or y < x) : return 1;\n else: return 0;\n\n"}, "150": {"problem_id": 3150, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n a,b,c=l[i]\n if(a<b and c<=a and a!=b ):\n  print(c+1)\n elif(b<c and (a+c)<=(b-a) and ((a-b)%2==0)):\n\n  if((b==c or a==b or b==a):print(0))\n\n"}, "151": {"problem_id": 3151, "answer": "# cook your dish here\ndef solve(n, k, a, b):\n if n==1: return a+1\n elif k==2: \n  if a<b: a=b-a\n else: b=a+b\n return (a,b)\nm,k=list(map(int,input().split()))\nfor i in range(0,len(m)): m[i]+=k*i\nprint(k)"}, "152": {"problem_id": 3152, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nsum=0\nfor i in range(n):\n sum+=l[i]\n print(sum)\n"}, "153": {"problem_id": 3153, "answer": "# cook your dish here\nn,m = map(int,input().split())\na = list(map(str,a))\nb = [0]*(n+1)\nfor i in range(m):\n\tb[a[i]-1]+=1\nprint(len(b))"}, "154": {"problem_id": 3154, "answer": ""}, "155": {"problem_id": 3155, "answer": "from math import ceil, log, floor, sqrt, factorial, pow, mod, atan, acos, bfs\r\nn, k = map(int, input().split())  # input: n,k\na = [0]*(n+1)  , a[n-1] = 1\nfor i in range(1, n+2, 2):\n  if i%2 == 0: a.append(ceil(log(a[i])))\nprint(*a)"}, "156": {"problem_id": 3156, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n s=input()\n a.append(s)\nk=len(a)-1\n l.sort(reverse=True,key=lambda item: item[0])\nans=[0]*k\ni=0\nwhile(i<n and len(l)>0):\n\n if(ans[i]=='chocol') or (i+1)<k:\n\n  print('Impossible')\n  i+=1\n\n"}, "157": {"problem_id": 3157, "answer": "# cook your dish here\nn,k,m=list(map(int,input().split()))\nl=[0]*(n+1)\nfor i in range(m):\n l[i]=int(input())\nif(len(l)==0):l=l[:l.count('1')]\nelse:print(0)"}, "158": {"problem_id": 3158, "answer": "# cook your dish here\nfrom sys import stdin, stdout\ninput=stdin.readline\nl=list(map(int,input().strip().split()))\nans=0\nfor i in range(0,len(l)):\n dx=l[i]\n dy=(l.index(dx)+1)//2\n ans+=dy*(dy/2)\nprint(ans)"}, "159": {"problem_id": 3159, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s)"}, "160": {"problem_id": 3160, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(l[i]*(i+1)//2)\nprint(sum(a))"}, "161": {"problem_id": 3161, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if l[i]==\"1\":\n  print(i-1)\n elif l.count(\"1\")==c:print(c)"}, "162": {"problem_id": 3162, "answer": "n=int(input())\nl=[]\nfor i in range(n):\n\tl.append(list(map(int,input().split())))\ns=[0]*n\nwhile(len(l)>0):\n\n\tx,y=l[-1]-1,[0,0],[0,-1],[1,1]\n#\tprint(s[x:y+1])\nc=0\nr=n-s.index(x)\nif(c==0 and len(r)==1 and r[0]+r[1]+1==x+y) or (r==[]) and (c<0 or c>r.count('h')) : r.pop()"}, "163": {"problem_id": 3163, "answer": "n,m=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append([int(x) for x in input()])\nprint(-1)\n"}, "164": {"problem_id": 3164, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(len(a))"}, "165": {"problem_id": 3165, "answer": "# cook your dish here\nn,k,p=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n a,b=[int(x) for x in str(input())]\n l.append(a)\nr,c,x=l[-1]\ns=0;s+=1;x-=1\nwhile(len(l)>0 and len(s)<=k):\n\n s+=l.pop(0)\n\n if s<0:\n\n  s=s-x;\n  x=x%p;\n\n print(k-s);\n"}, "166": {"problem_id": 3166, "answer": "# cook your dish here\nn,k=list(map(int,input().split()))\ns=set()\nfor i in range(n):\n s.add(0)\n l=s.difference(s[0])\n if len(l)==k:\n\n  print(k)\n\n"}, "167": {"problem_id": 3167, "answer": "# cook your dish here\nn,k=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append([int(x) for x in input().strip()])\nl=0\nr=len(a)-1\nwhile(k>0 and a[l][r]==0):l+=1;k-=1 \nprint(l+r)\n"}, "168": {"problem_id": 3168, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=[]\nfor i in range(n):\n  if(l[i]!=i and l[(i+1)%n]==i):ans.append(0)\nprint(*ans)"}, "169": {"problem_id": 3169, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n x,y,z = l[i]\n if(abs(x-y)>=0 and abs(z-x)<=1 ):\n  print(\"1\")\n elif(y-z>0):print(\"0\")"}, "170": {"problem_id": 3170, "answer": ""}, "171": {"problem_id": 3171, "answer": "# cook your dish here\nn,k=list(map(int,input().split()))\nt=[]\nfor i in range(k):\n t.append(str(input()).replace(\"b\",\"b\"))\nprint(*t[-1])\n"}, "172": {"problem_id": 3172, "answer": "n=int(input())\na=list(map(int,input().split()))\nslices=[]\nfor i in range(n):\n s=input()\n a.append(s[:i]+'0'*(i+1)//2)\nprint(len(a))"}, "173": {"problem_id": 3173, "answer": "# cook your dish here\nr,c,k=list(map(int,input().split()))\nl=[]\nfor i in range(r):\n c=int(input())\n l.append(c)\nans=0\nwhile(len(l)>0 and l[-1]==l[0]:\n  ans+=1\nprint(ans)\n\n"}, "174": {"problem_id": 3174, "answer": "# cook your dish here\nn,k=map(int,input().split())\nx=[int(i) for i in input().strip()]\nl=[]\nfor _ in range(k):\n   x,y,l.append(l[k-1]+x)\nc=0\nr=n-k+1\nwhile(r>0 and l[r-2]==0):r//=2\nprint(c)"}, "175": {"problem_id": 3175, "answer": "n=int(input())\r\nl=list(map(int,input().split()))\r\n\u00a0\r\n\n\n\n"}, "176": {"problem_id": 3176, "answer": "# cook your dish here\nn,k=map(int,input().split())\nl=[]\nfor i in range(n):\n\tx,y,f=(int(x) - int(y))*(k-1),0,0\n \tl.append((x-y)*f)\nprint(sum(l))"}, "177": {"problem_id": 3177, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n a[i+1] = i\ni = 0\nwhile(i<n-1 and i>0):  \n if(a[j]==i): i = j\n else: break\nprint(1)\n"}, "178": {"problem_id": 3178, "answer": "from sys import stdin, stdout\nimport math,bisect,collections,itertools,fractions,heapq,math,string,time,copy,functools\nsys.setrecursionlimit(10**7)\nINF = 10**20\nmod = 1000000007\ninf = float('inf')\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\n# def LI1(var): return var.lstrip('0') if var else -1,var.replace('1', '0', 1)\t# replace 0 with 1, replace 1 with 0 and 1 replace 2 with 2 to make 2 different values\nn, m = LI()\na, b = [LI() for _ in range(m+1)]\nans = [-1] * m\nfor i, (x, y) in enumerate(zip(*a)):\n\tans[x] = min(a[y] % 3, 1 + (y - x) * y, a[(y+2)%3])\nprint(ans)"}, "179": {"problem_id": 3179, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n, k = map(map, input().split())\n print(min(k*(n-2), 2*k))"}, "180": {"problem_id": 3180, "answer": "from collections import Counter\nn, k, m = list(map(int, input().split()))\ncol = []\nfor i in range(m):\n  col.append([int(input()), i])\nprint(*col)"}, "181": {"problem_id": 3181, "answer": "n,k=map(int,input().split())\nl=[]\nfor i in range(1,n+1):\n l.append(str(i))\nk-=1"}, "182": {"problem_id": 3182, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n x = l[i]\n l.pop(x)\nprint(len(l))"}, "183": {"problem_id": 3183, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s,end=' ')\n"}, "184": {"problem_id": 3184, "answer": "for _ in range(int(input())):\n n,k = list(map(str,input().split()))\n a = [int]*(k+1)\n c = 0\n m = 1\n for (i,j) in enumerate(list(range(1,(n-1)*k + 1)):\n\n   if (a[i]<=b[j] and i>=0 and j>0) and (c==0 or c==1 and a[0]>j and b[1]!=i and m==2 and c!=(m-2) or (m==3 and k!=-1 or k==(2*m)and k%2==n and 0<k<n) ):\n\tc+=1\n print(c)"}, "185": {"problem_id": 3185, "answer": "# cook your dish here\nn=int(input())\nfor i in range(0,n):\n\tprint(n//i)"}, "186": {"problem_id": 3186, "answer": "# cook your dish here\nn,m,k=map(int,input().split())\ns=0\nfor i in range(1,n+1):\n  s+=i*m\nprint(s%1000000007)"}, "187": {"problem_id": 3187, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nd = {}\nfor i in range(n):\n   d[l[i]] = i\nans = 0\ncnt = [0] * (n+1)\nwhile len(l) > 0 and l[-1]!= cnt[0]:\n\tl.pop()\nprint(len(ans))"}, "188": {"problem_id": 3188, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n x,y,z=l.copy()\n if(z%2==0):c+=abs(x-y)\n else:l[c]=x\nprint(c)"}, "189": {"problem_id": 3189, "answer": "n,m=map(int,input().split())\nl=[]\nfor i in range(n):\n\tl.append(list(input()))\na=l[-1]\nb=0\nc=1\nwhile(len(a)>0 and len(b)<=m and a[0]==b):b+=c\nprint(c)"}, "190": {"problem_id": 3190, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b=list(map(int,input().split()))\n l.append(a)\nprint(l[-1])"}, "191": {"problem_id": 3191, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(max(l))"}, "192": {"problem_id": 3192, "answer": "n=int(input())\ns=list(map(str,input().split()))\nl=[]\nfor i in range(n-1):\n a=s[i]\n l.append(a)\nk=len(l)-1\nwhile(k>0 and l[-k]=='a'):k-=1;l.pop()\n print(*l)"}, "193": {"problem_id": 3193, "answer": "# cook your dish here\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nsys.setrecursionlimit(10**8)\ninf = 10**20\ndef LI(): return [int(i) for i in sys.stdin.readline().split('\\n')]\nreturn list(f\\\"\\\".join(map(str,input())))\nn,m=LI()\nl=[0]*n\nfor i,x in enumerate(input(),1):l[i]=1 if x==\"0\" else l[-1]+x*(9-x%m)-1 \nprint(sum(l))\n"}, "194": {"problem_id": 3194, "answer": "# cook your dish here\nn,t = map(int,input().split())\na = list(map(lambda x: int(x)-1,a))\nl = []\nfor i in range(t):\n\tl.append(abs(a[i]-1)//2)\nprint(\"yes\")"}, "195": {"problem_id": 3195, "answer": "# cook your dish here\nfor _ in range(int(input())):\n   a, b, c, d = list(map(str, input().split()))\n\n  if (a == b) and (c == d): print(c)\n"}, "196": {"problem_id": 3196, "answer": "n, m = list(map(int, input().split()))\na, b = 0, 0\nfor i in range(m):\n a += int(input()[i])\n if a == b: a = i\nprint(a)"}, "197": {"problem_id": 3197, "answer": "# cook your dish here\nn,k = map(int,input().split())\nl = list(map(float,l))\nc = 0\nfor i in range(n):\n if l[i]%c==0:c+=1\nprint(c)"}, "198": {"problem_id": 3198, "answer": "# cook your dish here\nt = int(input())\nfor i in range(t):\n\ts = input().split(' ')\n\n\tprint(['NO', 'TYPOS'])"}, "199": {"problem_id": 3199, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na,b,l,r=[0]*n\nfor i in range(n):\n\tx,y,z=[i for i,x in enumerate(l) if x!=y and x<=z]\n\n\tif z%2==0 or (x==y or x==z or z==1 or y==x):\n\n \t\tl.append(y)\n  \nprint(sum(a*l))"}, "200": {"problem_id": 3200, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n  s += l[i]\nprint(s)"}, "201": {"problem_id": 3201, "answer": "# cook your dish here\nn,k,b,m=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append([int(x) for x in str(i)])\na=l.pop(0)\ns=sum(l[i][1:])%m\nh=s*(2*m+1)*(m*2)//2 \nprint(h)"}, "202": {"problem_id": 3202, "answer": "# cook your dish here\nn,k=map(int,input().split())\nl=[]\nfor i in range(n):\n a=int(input()) \n l.append(a)\n print(len(l))"}, "203": {"problem_id": 3203, "answer": "# cook your dish here\nn=int(input())\narr=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(arr[i]*100)\nprint(sum(a))"}, "204": {"problem_id": 3204, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n l.append(0)\ni=0\nwhile(i<len(l) and l[i]<=30): \n  if (i%2==0 and i!=l[l.index(':')]): i=i+1\nprint(30*i)"}, "205": {"problem_id": 3205, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a[i]==0:c+=1\n else:a.pop(0)\nprint(c)"}, "206": {"problem_id": 3206, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n, s = list(map(str, input().split()))\n heights = [0]*(n+1)\n for i in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 179, 181, 188, 189, 190, 193, 196, 199, 200, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 366, 367, 373, 379, 383, 384, 389, 400, 401, 409, 402, 405, 407, 408, 417, 425, 433, 426, 428, 429, 430, 432, 427,ily, 445, 458, 171, 183, 184, 185, 187, 194, 195, 197, 198, 201, 202, 203, 204, 205, 207, 209, 210, 214, 216, 217, 218, 219, 225, 232, 234, 235, 240, 247, 256, 260, 267, 286, 287, 288, 289, 291, 298, 299, 300, 302, 303, 320, 323, 325, 326, 327, 328, 329, 336, 338, 339, 340, 341, 342, 344, 345, 346, 355, 356, 357, 372, 376, 377, 380, 386, 387, 388, 392, 398, 399, 403, 419, 420, 423, 424, 421,oonshine"}, "207": {"problem_id": 3207, "answer": "n, k, l = list(map(int, input().split()))\nl = int(input())\ns = []\nfor i in range(n):\n  s.append(abs(l - i) % k)\nprint(*s)"}, "208": {"problem_id": 3208, "answer": "# cook your dish here\ns = input().split()\nn = len(s)\nl = []\nfor i in range(n):\n  if s[i] == \" \": l.append(\" \").replace(\" \", \"\")\nprint(\"\".join(l))"}, "209": {"problem_id": 3209, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n s = s + a[i]\n if s > 60: break\n print(s)\n"}, "210": {"problem_id": 3210, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().strip().split()))\ns=0\nfor i in range(n):s+=l[i]\nprint(s)"}, "211": {"problem_id": 3211, "answer": "n=int(input())\ns=input()\nc=0\nfor i in range(n):\n if s[i]=='1':\n  c+=1\n elif (s.count('1')%2==0 and len(s)>n-1) or (c>s[-n//2+1:]) or c==n - 1 and s.find('0')!=c - (n // 2 + 1) : c=1"}, "212": {"problem_id": 3212, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n if l[i]==l[s]:\n  s+=1\nprint(s)"}, "213": {"problem_id": 3213, "answer": "# cook your dish here\nn,m=map(int,input().split())\ns=input()\nl=[]\nfor i in range(len(s)):\n x=s.count('x')\n l.append(x)\nprint('\\n'.join(l))"}, "214": {"problem_id": 3214, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\n#sys.setrecursionlimit(10**6)\nINF = float('inf')\nmod = 10**9 + 7\ndef read_line(line):\n return line.split()[0]\nfor _ in range(int(input())) :\n line = input()\n if line[-1] == \"*\":\n  print(\"***\")\n else : \n print([\"***\"])"}, "215": {"problem_id": 3215, "answer": "# cook your dish here\nfrom collections import defaultdict\ndef mergeSort(arr, arr2): \n\tarr2.sort(reverse=True) \n\n\ti, j = 0, 0\n\n \twhile i < arr.length and j < (arr[i] - arr[j]):\n   #\t\tj = i + 1  if i > 0 else i+2  else j + 2  for j in range(i - 1, max(0, i - j) - 2) if j > i  or j - i == 0 or (j == i-1 or i >= 0) : i = j+1; j += 1; i += 2; else : j-i = 1\n\"\"\"\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nmod = 10**9+7\nN = int(input())\nT = list(map(int,input().split()))\narr = [int(x) for x in input().rstrip()]\nmergeSort = lambda a,b: a[a.index(b)-1] if a.count(a) == b else merge(sorted(v,a[b-2:]+[v-b] for v in arr),[])\n"}, "216": {"problem_id": 3216, "answer": "# cook your dish here\nn=int(input())\na=[]\nfor i in range(n):\n a.append(str(i))\nprint(\"\".join(a))"}, "217": {"problem_id": 3217, "answer": "# cook your dish here\ndef solve(n):\n\tfor i in range(1,n+1):\n\n\t\ta,b,c,d,e,f,g,h,i=list(map(int,input().strip().split()))[:n],(0,0),(9,9),(-9,-1),i,j,k,l,r,s,u,v,w,x=a+b+c+d+e+f+g+h+i+j+k+l+r+s+u+v+w+x+y+z=n-i-1-j-k-l-r-s-u-v-w-x-y-c-d-e-f-g-h-a-b-t+t-p,t,p[i%n==0],'',i[0]+'0'*(10**(i//n))+'1'<=10,10*10>=0)\n\n  \tprint(len(set(a)))\n"}, "218": {"problem_id": 3218, "answer": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n\tc+=a[i]*(i+1)//2\nprint(c)"}, "219": {"problem_id": 3219, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(len(l)):\n s+=l[i]\nprint(s%3)"}, "220": {"problem_id": 3220, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if l[i]==l[n-1]:\n  c+=1\nprint(c)\n"}, "221": {"problem_id": 3221, "answer": "# cook your dish here\nn,m,l = map(int,input().split())\nu,v,c = [int(x) for x in input()],[],[]\nfor i in range(m):\n\tu.append(u[-1]+c)\nq,r = 0,0\nwhile(q<n and l<m and u[q]!=v[r]:l+=1):r+=c\nprint(r)"}, "222": {"problem_id": 3222, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n x,y=l[i]\n if x%y==0 and y%x!=0 :\n  print(\"Yeah!\")\n else:print(\"No\")"}, "223": {"problem_id": 3223, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n\tb.append(a[i]-1)\nans=0\nwhile(len(b)>0 and b[-1][0]==b[0][1]):\n\n\tans+=1\nprint(ans)"}, "224": {"problem_id": 3224, "answer": "# cook your dish here\ndef is_sphere(a,b,c,d,e,f,g,h,i,j,k):\n if (a[i]==0 and b[j]!=c[k] and k==i and j==j and i==k) and (f==g and g==h): \n  return a==b==c==d==e==f\n else: return f==s==t==u==v==w==x==y==z==n==abs(f-g-h-i-j-k-u-v-w-x-y-z-n-a-b-c-d-e-f)\n"}, "225": {"problem_id": 3225, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n s.append(l[i]*(i+1)//2)\nprint('\\n'.join(s))"}, "226": {"problem_id": 3226, "answer": "# cook your dish here\nn,m,e=map(int,input().split())\na=[]\nfor i in range(m):\n\ta.append([int(x) for x in str(input()))]\nspeed=a[-1][1]*100\nprint(speed)"}, "227": {"problem_id": 3227, "answer": "# cook your dish here\nn,e = map(int,input().split())\nl = list(map(lambda x: int(x)-1,l))\nr = [0]*(n+1)\nfor i in range(len(l)):\n\tr[l[i]-1] += 1;\nprint(r)"}, "228": {"problem_id": 3228, "answer": "# cook your dish here\nn=int(input())\ng=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n a=input()\n l.append(a)\nprint(l[-1])"}, "229": {"problem_id": 3229, "answer": ""}, "230": {"problem_id": 3230, "answer": "# cook your dish here\nimport math\nr,c=list(map(int,input().split()))\nl=[]\nfor i in range(r):\n l.append(math.sqrt(i+1)//2)\nprint(len(l))"}, "231": {"problem_id": 3231, "answer": "# cook your dish here\nn,p,q=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append([int(x) for x in input().strip()])\nprint(*l,sep='\\n')\n"}, "232": {"problem_id": 3232, "answer": "# cook your dish here\ns=input()\nn=len(s)\nl=[]\nfor i in range(n):\n  if s[i]=='a' and len(l)%2==0 and l.count('a')!=0:l.append(-l[0])\nprint(' '.join(map(str,l)))\n"}, "233": {"problem_id": 3233, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(len(a))"}, "234": {"problem_id": 3234, "answer": "# cook your dish here\nn=int(input())\nprint(n)\n"}, "235": {"problem_id": 3235, "answer": "# cook your dish here\nfor _ in range(int(input())):\n\tn, m = list(map( int, input().split() ))\n\n\tA = [0]*(n+1)\n\n  \tfor i, j in enumerate(list(A):[1]): A[i] += 1 if i == 0 else 0 if j == n else m - A.insert(0,A[j]-1,i-j)\n"}, "236": {"problem_id": 3236, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(m):\n\ta,b=[int(x) for x in str(i)]\n \tl.append(a+b)\nprint(len(l))"}, "237": {"problem_id": 3237, "answer": "# cook your dish here\ns = input()\nn = len(s)\nprimes = [2, 3, 4, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,  1, 1),\nprime_factor = 10000000\nmod = 10 ** 9 + 7\nfor _ in range(int(input())) :\n  n = int(n * (n - 1) // 2)\n\n  if n % 2 == 0 and primes[n // 3] == 2 or n > 3 : \n\tprint(2)"}, "238": {"problem_id": 3238, "answer": "for _ in range(int(input())):\n  n, m = list(map(float, input().split(' '))), len(list(range(n))), [0]*(m + 1),0,1,2,3,4\n"}, "239": {"problem_id": 3239, "answer": "n=int(input())\na=[]\nfor i in range(1,n+1):\n a.append(0.5*i)\nprint(a[n-1])"}, "240": {"problem_id": 3240, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n\tb.append(0)\nc=bin(b[2:])\nans=0\ni=1\nwhile(i<n and b[i][0]=='0'):\n\n\tif(c[c.find('0')]<=i and i!=n-i-1 and c[0][1]>=a[j] and j-j+1==i) or (i==0 or j==len(a)-1 or i==1) and a[a.index(max(ans)):] == '1':\n \t\tans+=(1-ans)*(1-(i/2)**(2*ans))+c['1'][i%2]\nprint(' '.join(str(x) for x in b))"}, "241": {"problem_id": 3241, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n a[i]+=1\n b.append(sum(a)//2)\nprint('\\n'.join(b))"}, "242": {"problem_id": 3242, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n  if(a[i]==0):b.append(i)\nprint(b[-1])"}, "243": {"problem_id": 3243, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ncnt=0\nfor i in range(n):\n\tif(l[i]==0 and l[-i+1]!=l.pop(0) and len(set([x for x in l.copy() if x not in cnt]))) or (i<n and i>0 or i==n - 1 and x!=-1) : continue\n\n\tx,y,z,x1=x[0],0,[0]*(len(x)-1),0,-1;x2,0=[0 for _ in xrange(y+2)];y2=y[y-y0];x3,=z[z-z1];z3=[x+x*y for y in z]\nprint(\"yes\")\n"}, "244": {"problem_id": 3244, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(sum(a))"}, "245": {"problem_id": 3245, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n s=input()\n l=list(map(int,s.split()))\n if(len(l)==0 or l[-1]==l[0]): \n  print(\"-n \"+\"10\")\n elif(s==\"^\"):print(\"^\")"}, "246": {"problem_id": 3246, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n if s[i] =='': cnt += 1\n else: break"}, "247": {"problem_id": 3247, "answer": "# cook your dish here\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functhe,math,float,str,bool,int\nt = int(input())\nfor _ in range(t):\n\tn,m = list(map(int,input().split()))\n\n\tprint(math.pow(2,n-m))"}, "248": {"problem_id": 3248, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if(l[i]=='a' or c==0 or l[-i-1] =='b' ):\n  c=c+1\nprint(c)"}, "249": {"problem_id": 3249, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n   s.append(l[i])\nprint(sum(s))"}, "250": {"problem_id": 3250, "answer": ""}, "251": {"problem_id": 3251, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na,b=0,0\nfor i in range(n):\n\tl.append(l[-1]+i)\nprint(len(set(a)))\n"}, "252": {"problem_id": 3252, "answer": "# cook your dish here\nimport math\nfor _ in range(int(input())):\n\tn, k = input().split()\n\n\tk = int(math.log(k, 2)) * (k - 1)\n\n \tprint(n)"}, "253": {"problem_id": 3253, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if l[i]%2==0:c+=1\nprint(c)"}, "254": {"problem_id": 3254, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b,c=list(map(int,input().split()))\n l.append(a*c)\nprint(*l)"}, "255": {"problem_id": 3255, "answer": "# cook your dish here\nn,d,m=list(map(int,input().split()))\narr=[]\nfor i in range(n):\n arr.append([int(x) for x in input()])\nd=max(arr)\nans=d-d+m\nprint(ans)"}, "256": {"problem_id": 3256, "answer": "# cook your dish here\nn,k=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append([int(x) for x in str(i)]+[0])\nans=0\np=l[n-2].index(0)+1\nif k%2==0:ans+=p\nprint(ans)\n"}, "257": {"problem_id": 3257, "answer": "# cook your dish here\nfor _ in range(int(input())):\n a = input().split(' ')\n b = int(a[0])\n c = a[1]\n d = b[2:]\n e = 0\n f = 1\n for i in a: \n  if i == '1' and i!= '0' or (i == \"1\" and c!= \"0\" or c == 0) or i==\"1\": \n\n   e += f\n print(e)"}, "258": {"problem_id": 3258, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nm=0\nfor i in range(n):\n a=l[i]\n m=max(m,a*m)\n print(\"%.9f\" % m)"}, "259": {"problem_id": 3259, "answer": "# cook your dish here\nn, q = list(map(int, input().split()))\nl, r, a, b = int(input()), input(), input()\nmod = 998244353\nans = [0]\nfor i in range(q):\n   x, y, xMod = bin(i)[2:].zfill(len(l), len(r), 2)\n\n  if (xMod * y) % b == 0 and (r % 2 == 1 and x % (2 * (yMod - 1)) == b) and ((x - l) // yMod + (a - r) / (b - a)) % q == (l % 3 == 2 and a % x == 3 and b % y == 4 and r % r == 5 and l % l == x and y < 3) :\n\tans[i] = (1 << i)\nprint(ans.count('1'))"}, "260": {"problem_id": 3260, "answer": "# cook your dish here\nfrom math import factorial\nmod = 1000000000\np = int(input())\nl = list(map(int, input().split()))\nn = l.count(1)\nk = len(l) - 1\nm = 10**9 + 9\ns = 0\nfor i in range(k):\n  s += l[i]\nprint(s % mod)"}, "261": {"problem_id": 3261, "answer": "# cook your dish here\nr,c = list(map(int,input().split()))\nn = int(input())\nl = []\nk = 0\nfor i in range(n):\n\tl.append(bin(i)[2:].zfill(r+1))\n\n\tk+=1\nprint(k)\n"}, "262": {"problem_id": 3262, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n,m,c,a,b,s = input().strip().split(' ')\n a = sorted(set(a),key = lambda x:s[x[0]],reverse = True)[:len(s) - 1]\n print(min(m))"}, "263": {"problem_id": 3263, "answer": "# cook your dish here\nn,m=map(int,input().split())\np=[int(i) for i in str(input())]\ns=[0]*(n+m+2)\nfor i,j in enumerate(p,1):\n  s[i]=j\nans=0\nwhile m>0:\n\n  if m%2==0 and j!=s[m//2-1]:ans+=1\nprint(ans)"}, "264": {"problem_id": 3264, "answer": "from math import factorial\nmod = 1000000007\nn = int(input())\nl = list(map(int,input().split()))\ns = set(l)\nfor i in range(n-1):\n if s.intersection(s[i]): \n  l.sort()\nprint(1)"}, "265": {"problem_id": 3265, "answer": "n, l = map(int, input().split())\na = [0] * (n + 1)\nb = []\nfor i in range(n) :\n a[i] = 1 if i % 2 == 0 else 0 \n b.append(sum(a))\nc = sum(b) // 2\nif c in b : a = b[c]\nprint(-1)"}, "266": {"problem_id": 3266, "answer": "# cook your dish here\nn, m = list(map(int, input().split()))\ngraph = [[] for i in range(n)]\nfor i, j in enumerate(range(m)):\n  if i == n - 1 and j == m - 2 and graph[i].count(j) == 1 or j > 0 or i < m:   print(i,j,n)\nprint('\\n'.join([str(x) for x in graph]))\n\n"}, "267": {"problem_id": 3267, "answer": "# cook your dish here\nr,c=map(int,input().split())\nans=[]\nfor i in range(r):\n x,y,z=(i,i+r-1)\n ans.append(min(z,x*y*z))\n #print(ans)"}, "268": {"problem_id": 3268, "answer": ""}, "269": {"problem_id": 3269, "answer": "# cook your dish here\na,b=list(map(int,input().split()))\nprint(a*b)"}, "270": {"problem_id": 3270, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n = int( input() )\n s = list( map( int, input().split(' ')))\n if len(s) == 1 or s[0] == 'C':\n  print(0)"}, "271": {"problem_id": 3271, "answer": "# cook your dish here\nn,c = list(map(int,input().split()))\np = [0]*(c+1)\nfor i in range(n):\n p[i] = int(i**0.5)+1\nans = 0\nwhile(p[-1]<c): p.pop()\nprint(ans)"}, "272": {"problem_id": 3272, "answer": "# cook your dish here\nn,m=map(int,input().split())\narr=[]\nfor i in range(n):\n s=input()\n m=int(m)\n if(s[0]=='.' and s[1] == 'V':\n  arr.append(sum(arr[i]))\n elif s.startswith('#') and m>=2 and arr[-2]!=s.find('/')+arr.pop(0) or m<=n-m+1 and (s!='#' or s!=\"V')) or (m==n or n==m):\n\n  print(-1)"}, "273": {"problem_id": 3273, "answer": "# cook your dish here\ns=set(map(int,input().split()))\nl=[]\nfor i in range(len(s)):\n s.sort(key=lambda x:x[0])\n l.append(input())\nprint(*l)"}, "274": {"problem_id": 3274, "answer": "# cook your dish here\nn,m=map(int,input().split())\ny=[]\nfor i in range(m):\n   a,b,c=[int(x) for x in input().rstrip('\\n').split(' ')][:2*y.count('-')[0]<3*(c-y[0])+c.index(max(y))]\nprint('+%d'%(a+b))"}, "275": {"problem_id": 3275, "answer": "n,c = list(map(int,input().split()))\na = [int(i) for i in input()]\nb = []\nfor _ in range(n):\n\tb.append(a[-1]*c)\nprint('\\n'.join(b))"}, "276": {"problem_id": 3276, "answer": "# cook your dish here\nn,m=map(int,input().split())\ns=input()\nl=[]\nfor i in range(n):\n s=s.replace(\"R\",\"\")\n l.append(s)\nprint(\"YES\" if s==\"R\" else \"NO\")"}, "277": {"problem_id": 3277, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=sum(a[:i])\nprint(s)"}, "278": {"problem_id": 3278, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nr=[0]*(n+1)\nfor i in range(len(l)):\n\tr[l[i]-1]+=1\nprint(max(r))"}, "279": {"problem_id": 3279, "answer": "# cook your dish here\nn=int(input())\na=[]\nfor i in range(n):\n\ta.append(list(map(int,input().split())))\nprint('\\n'.join(a))"}, "280": {"problem_id": 3280, "answer": "# cook your dish here\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools \nfrom collections import defaultdict,Counter,deque,OrderedDict,set,sorted,tuple,product,associative,concat,binary_search,btoz,enumeration,find_by_digit,is_integer,islower_limit,mod,floor,nan,numerator,floord,truncate,uppercase,upper_case,isdigit,decreasing,digits,gcd,lcm,m,pi,sqrt,ceil,sep,str,math,pow,factorial,log,bit,if,lo,lim,le,mi,ln,rom,atrix,radix,acos,atan,adex,adjs,asin,amin,agar,algebra,arabic,acci,angry,astrex,bi,bj,bal;\nsys.setrecursionlimit(10**7)\ninf = float('inf')\nmod = 10**9+7\ndef LI(): return [int(x) for x in sys.stdin.readline().split('\\n')]  # input: stdin = open('input.txt', 'r') # stdout = output; inp = list(input().strip()) # for i in range(1<<63) : LI() # return the numbers of the given pairs in a sorted list A = sorted(A, key = lambda x : x[0], reverse = True) # each pair is an integer and is greater than or equal to the previous value of A[i][0] # print each integer in A [i] : print(int(''.join(str(i))), int('{:<}'))) # all pairs are positive numbers and are less than (i-1)th power of i-th digit in string. For example, pairs (1,2) and (2,3) are counted as pairs, because 1^2 + 2^3 + 4^4 + 5^5 + 6^6 + 7^7 + 8^8 + 9^9 + 10^10 + 11^11 + 13^13 + 14^14 + 15^15 + 16^16 + 17^17 + 18^18 + 19^19 + 20^20 + 21^21 + 22^22 + 23^23 + 24^24 + 25^25 + 26^26 + 27^27 + 28^28 + 29^29 + 30^30 + 31^31 + 32^32 + 33^33 + 34^34 + 35^35 + 36^36 + 37^37 + 38^38 + 39^39 + 40^40 + 41^41 + 42^42 + 43^43 + 44^44 + 45^45 + 46^46 + 47^47 + 48^48 + 49^49 + 50^50 + 54^54 + 55^55 + 56^56 + 57^57 + 58^58 + 59^59 + 60^60 + 61^61 + 62^62 + 63^63 + 64^64 + 65^66 + 67^67 + 68^68 + 69^69 + 70^70 + 71^71 + 72^72 + 73^73 + 74^74 + 75^75 + 76^76 + 77^77 + 78^78 + 79^79 + 80^80 + 81^81 + 82^82 + 83^83 + 84^86 + 89^89 + 90^90 + 91^91 + 92^92 + 93^93 + 94^94 + 95^95 + 96^96 + 97^97 + 98^98 + 99^99 + 100^100 + 101^101 + 102^103 + 103^104 + 105^105 + 106^109 + 109^110 + 111^111 + 112^113 + 113^114 + 114^115 + 116^116 + 117^117 + 118^120 + 121 + 122 + 123 + 134 + 135 + 136 + 137 + 138 + 139 + 144 + 145 + 146 + 147 + 148 + 149 + 155 + 156 + 157 + 160 + 161 + 162 + 163 + 164 + 165 + 166 + 167 + 168 + 170 + 173 + 179 + 180 + 181 + 182 + 189 + 191 + 192 + 193 + 194 + 195 + 197 + 198 + 199 + 200 + 201 + 202 + 203 + 204 + 207 + 208 + 209 + 212 + 211 + 223 + 224 + 227 + 229 + 234 + 239 + 241 + 251 + 243 + 257 + 293 + 307 + 311 + 313 + 319 + 320 + 331 + 341 + 347 + 349 + 369 + 367 + 373 + 383 +"}, "281": {"problem_id": 3281, "answer": "# cook your dish here\ndef maxAngle(source, target):\n  \n if (target>source[0] or target>target[-1]): return -math.floor(target/2)\n else: return max(max(abs(x-y), source[1]-y)+(x>0), abs(y-x)+target)"}, "282": {"problem_id": 3282, "answer": "# cook your dish here\nn=int(input())\nprint(n)\n"}, "283": {"problem_id": 3283, "answer": "# cook your dish here\nn,d,r=map(int,input().split())\na=[]\nfor i in range(n):\n  a.append([int(x) for x in input()])\nprint(a[r-1])"}, "284": {"problem_id": 3284, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\nprint(s)"}, "285": {"problem_id": 3285, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n\tl.append(l[i]*(i+1)//2)\nprint('\\n'.join(sorted(set([x for x in l]))))"}, "286": {"problem_id": 3286, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(len(a)):\n if a[i]==\"a\":\n  ans+=(i+1)%1000000007\n else:ans+=i\nprint(ans)"}, "287": {"problem_id": 3287, "answer": "# cook your dish here\nMOD = 1000000007\ndef primeFactors(n):\n if (n == 1): \n  return [0]\n for i in range(3, int(sqrt(2*n)) + 1, 3):\n\n  if n % i == 0: return i\n else:   # i is divisible by 2 so divides 2 by 0\n return 2 ** (i - 2)\nn, k = map(int, input().split())\nprimes = list(range(30))\nsieve = [True] * k\nfor i, j in primes: sieve[i % k] = j\nans = sum(i * (j - k) for k, i_j in enumerate(f'{n}')) % MOD\nprint(ans)"}, "288": {"problem_id": 3288, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nfor _ in range(int(input())):\n k,n=list(map(str,input().split()))\n s=set(n)\n if(len(s)==1 and s.count('1')!=1): \n  print(-1)\n\n else:\n\n  ans=s.difference()-s[0]\n print(ans)"}, "289": {"problem_id": 3289, "answer": "# cook your dish here\nn=int(input())\np=list(map(int,input().split()))\nans=[]\nfor i in range(n):\n\tx,y,z=p[i-1],p.pop(i)\n  \tif z==0 or x==y or y==z or z!=0 and x>y and y>z:\n\n\t\tans.append(str(x)*(y-x+z)/(z-z))\t\nprint('\\n'.join(ans))"}, "290": {"problem_id": 3290, "answer": "# cook your dish here\nn,e,d=map(int,input().split())\nl=[]\nfor i in range(n):\n\tl.append([int(x) for x in str(i)])\nprint(len(l))"}, "291": {"problem_id": 3291, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn=int(stdin.readline().strip())\nl=[]\nfor i in range(n):\n  l.append(list(map(int, stdins().splitlines())))\nans=0\nr=l[0][0]\ns=r.split()\ni=len(s)\nwhile(i>0 and s[i]=='0'):\n\n  ans+=min(r)//2\nprint(ans)"}, "292": {"problem_id": 3292, "answer": "# cook your dish here\nn=int(input())\nnames=list(map(int,input().split()))\nd={}\nfor i in range(n):\n a=names[i]\n d[a]=d.get(a,0)+1\n if len(d)%2==0:d=d[-1]+1 \n else:print(0)"}, "293": {"problem_id": 3293, "answer": "# cook your dish here\ndef is_broken(n,f):\n if n%2==0: \n  return True\n elif n==1: return False\n return all(a==b for a,b in zip(sorted(f,reverse=True) for s in range(1,n+1)))\n"}, "294": {"problem_id": 3294, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nd=[]\nfor i in range(n):\n x=l[i]\n d.append(x)\n l.sort(reverse=True,key=lambda x:x[0])\nprint(d[-1])"}, "295": {"problem_id": 3295, "answer": "for _ in range(int(input())):\n k, l, m = list(map(str, input().split()))\n if m == \"\":\n  print(-1)\n elif m % l == 0 and k == m // l: print(k)"}, "296": {"problem_id": 3296, "answer": "# cook your dish here\nn,k=list(map(int,input().split()))\nl=[]\nfor i in range(1,n+1):\n l.append(2**(k-i)%n)\nprint(len(l))"}, "297": {"problem_id": 3297, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(len(l)):\n\tif l[i]==0:s+=1\nprint(s)"}, "298": {"problem_id": 3298, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n\ts[a[i]-1] = i+1\nans = 0\nflag = False\nwhile(len(s)>0 and s[0]+1>=n-1 and len(a)<=i+2 and a[-i]<s.pop(0)):\n\n\tif(flag == False): ans += sum(x*x for x in s)\nelse: flag = True\nprint(ans)"}, "299": {"problem_id": 3299, "answer": "# cook your dish here\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn,m=list(map(float,input().split()))\n\n\tc=[0]*(n+m+1)\n\n \tif n%2==0 and c[2*n//2]==c[4*m-2]:\n   #\tprint(c,n-c*2,c+c-n)\n"}, "300": {"problem_id": 3300, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n   s+=l[i]\nprint(s)"}, "301": {"problem_id": 3301, "answer": "# cook your dish here\nn,p,x,y=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n s.append([int(x) for x in str(p)])\nx=s[-1][1]\nif len(s)==1:print(2)\nelse:s.sort(reverse=True)\n\n"}, "302": {"problem_id": 3302, "answer": "n,p=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\ts+=int(input()[i])\nprint(s)\n"}, "303": {"problem_id": 3303, "answer": "# cook your dish here\ndef add(a,b):\n   if a<b: a, b=b, (a+b)//2\nresult=0\nfor i in range(int(input())) : result=result+add(i,0)\nprint(result)"}, "304": {"problem_id": 3304, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\np=[0]*n\nfor i in range(n):\n p[i]=input()\n a.sort(key=lambda x:x[1])\nprint(max(a))"}, "305": {"problem_id": 3305, "answer": "# cook your dish here\nn,q=list(map(int,input().split()))\ns=input()\nl=[]\nfor i in range(q):\n l.append(s[i]%1000000007)\nif(len(l)==0 or l[0]!=l[-1][1]=='0'):\n\n print(n)\n\n"}, "306": {"problem_id": 3306, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(n):\n p=input()\n l.append(p.split(\":\")[0])\n print(min(l))"}, "307": {"problem_id": 3307, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[0]*n\nfor i in range(n-1):\n x,y,z=[x for x in input().rstrip('\\n').split(' ') if x!=i]\n b[z]=y\nprint(b[0])"}, "308": {"problem_id": 3308, "answer": "n = int(input())\nx = list(map(int, input().split()))\na = []\nfor i in range(n):\n a.append(x[i]*(i+1)//2)\nprint(a[-1])"}, "309": {"problem_id": 3309, "answer": "# cook your dish here\nn,k,c = list(map(int,input().split()))\nl = []\nfor i in range(n):\n   l.append(input())\ns = sorted(l,reverse = True)\nc -= 1\nprint(max(c,len(s)))\n"}, "310": {"problem_id": 3310, "answer": "# cook your dish here\nfrom math import factorial,log10\nn = int(input())\ng,t = [int(x) for x in input().split()]\nl = []\nfor i in range(n):\n  l.append(list(map(int,input().strip())))\nans = 0\ni = 1\nwhile i*(i+1)<n:\n\n  if l[i][0]==l[len(l)-1][1] and (i==1 or i==n-1): i+=1\nprint(ans)\n"}, "311": {"problem_id": 3311, "answer": "# cook your dish here\nn,m=map(int,input().split())\na=[]\nfor i in range(m):\n   a.append([int(x) for x in input()])\nprint(a[0])"}, "312": {"problem_id": 3312, "answer": "# cook your dish here\nn,e,s,c = map(int,input().split())\ngrid = []\nfor i in range(n):\n\tx,y,dx,dy = [int(x) for x in input()]\n\n\tgrid.append((x-y)*(dx+dy)//2,0,(y-x)*2)\nprint(sum(grid))"}, "313": {"problem_id": 3313, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n, r, w, h = input().split()\n r = r[0]\n w = max(r) - min(w)\n print(max(sum(map(lambda x: x[1], r), r)))"}, "314": {"problem_id": 3314, "answer": "# cook your dish here\ndef rotate(a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z):\n if (a[0] == 'A' or a[1]!= 'B' and b == \"C\") or (b==\"C\" or b== \"B\" and c == \"\" or c==\"\" or d==0 and e == 0 and f == 1 and g == 2 and h == 3 and l == 4 and m == 5 and n == 6 and p == 7 and q == 8 and r == 9 and s == 11 and t == 12 and u == 13 and v == 14 and w == 15 and x == 16 and y == 17 and z == 18 or z==18) :\n   print((len(list(s))) + 1)"}, "315": {"problem_id": 3315, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(len(l))"}, "316": {"problem_id": 3316, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append(l[i]*(i+1)//2)\nprint(a[-1])"}, "317": {"problem_id": 3317, "answer": "# cook your dish here\nfrom collections import defaultdict\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nMOD = 10**9+7\nn = int(input())\nlst = list(map(int,input().split()))\nfor i in range(n):\n\ts = input().replace('0','').split(' ')[::-1]\n  \tfor j in lst[i[1:]:] +'' + str(j) if j[0] in s[j] else ''\nprint(len(set(l)))\n"}, "318": {"problem_id": 3318, "answer": "# cook your dish here\nn,d=list(map(int,input().split()))\nx=[]\nfor i in range(n):\n x.append(i+1)\n i=x[i]\ni=n-i\ny=d\nwhile(y>0 and x[y]!=0): \n y-=1;\n print(sum(x))"}, "319": {"problem_id": 3319, "answer": "# cook your dish here\nn,m = list(map(int,input().split()))\ngrid = [[] for i in range(n+1)]\nfor i,j in enumerate(zip(range(0,n)),1):\n m = int(input())\n grid[m][j] = 0\nv = [0]*m\ndef dfs(i,t,r,c,p,u,v,i2):\n\n #print(grid[i][t])\n if (t==0 and i2[t]<m) or (u==m and j==n and r<v[u][v] and c<u[v][c]:\n   return\n elif (c==1 and u[0][u-1]>0) and (r<0 or c==2 and v[r-2-c]!=-1 or r>=n-u2+2 or u2==i1+i3 or j1!=u1-i4 or v1==j3+v4+j5 or i1<=p and p[p[1]-1]+v2<r and m<=((m+n)//2)*(2*c+c-3)): \n print(p)\n"}, "320": {"problem_id": 3320, "answer": "# cook your dish here\ndef main():\n  \n N, M = [int(x) for x in input().split()]\n for i in range(N-1, 0, -1):\n\n  A, B, C, D, E, F, G, H, I, J, K, L, R, S, T, U, V, W, X, Y, Z = (A,B,C,D,E,F,G,H,I,J,K,L,R,S,T,U,V,W,X,Y,Z)\n print(main())\n"}, "321": {"problem_id": 3321, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nans=[]\nfor i in range(n):\n\tans.append(a[i-1])\nprint(*ans)"}, "322": {"problem_id": 3322, "answer": "# cook your dish here\nfor _ in range(int(input())):\n   n,m,k=map(float,input().split(\" \"))\n\n  k-=k//2\n\n if k%2!=0 or n%m==0 and m%(n+1)==m and (n-m)%k==(m-k)//(2*n) : k=1\n elif k==1 or k<=m: k+=1\n\n print(min(k,n))"}, "323": {"problem_id": 3323, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n = int( input() )\n print( \"Case %d: %s\" % (n, \" \"*3))"}, "324": {"problem_id": 3324, "answer": ""}, "325": {"problem_id": 3325, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(l[0])"}, "326": {"problem_id": 3326, "answer": "for _ in range(int(input())):\r\n\tr, c = list(map(str, input().split()), 1)   # r: row, col, row: column, 1: rows, 2: cols\n\n\tn = len(r) + int(c * (r - c) // 2) # n: length of grid, 0: can't move, n-1: cannot rotate, r-c: grid[0][0] == c-r-n-2 # d: distance from 0 to n - 1, d+r: move from row[d] to column[r][d+1] # m: mx,MX: xy, yMx: yy\n\n \tif n == 1 and n % 2 == 0 and r > c: print(n)"}, "327": {"problem_id": 3327, "answer": "# cook your dish here\nr,c = map(int,input().split())\ns = []\nfor i in range(r):\n\ts.append(list(input()))\nprint('\\n'.join(s))"}, "328": {"problem_id": 3328, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n l.append(list(map(int,input().split())))\nprint(min(l))"}, "329": {"problem_id": 3329, "answer": "# cook your dish here\nn,k=map(int,input().split())\ns=[]\nfor i in range(n):\n s.append([int(x) for x in input()])\nprint(len(s))"}, "330": {"problem_id": 3330, "answer": "n, l = map(int, input().split())\nbag = list(map(sum, bag))\nstore = [0]\nfor i in range(n):\n  store[i] = max(bag[-i-1]*l, store)\nprint(min(store))"}, "331": {"problem_id": 3331, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na,b=0,0\nfor i in range(n):\n if l[i]==0: a+=1\n else: b+=(2*a)\nprint(a*b)"}, "332": {"problem_id": 3332, "answer": "# cook your dish here\nfor _ in range(int(input())):\n s, d, p = list(map(str, input().split()))\n q = [0] * (s + d + 1)\n if q[-1] == '1':\n  q.pop(0) \n elif q == [s-q[0]] * p:   print(p)"}, "333": {"problem_id": 3333, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(min(l))"}, "334": {"problem_id": 3334, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n s.append(l[i]+1)\nprint(sum(s))"}, "335": {"problem_id": 3335, "answer": "# cook your dish here\nn=int(input())\nprint(n)"}, "336": {"problem_id": 3336, "answer": "# cook your dish here\nn = int(input())\np = list(map(int,input().split()))\ncnt = 0\nfor i in range(n):\n if p[i] == \"F\":\n  cnt += 1\n elif \"M\" not in p or \"G\"!= \"K\" or (p[p.index(\":\") + 1] < \"0\" and len(p) % 2 == 0) :\n p.append(\"F\" + \" \" + str(0)+\" \"+str(i+1)+\". \")\nprint(\"{0:.2f}\".format(*p))"}, "337": {"problem_id": 3337, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n s.append(l[i]*(i+1)//2)\nprint(*s)"}, "338": {"problem_id": 3338, "answer": "# cook your dish here\nn,k=map(int,input().split())\ng=[]\np,g=[0]*n\nfor i in range(n):\n g.append(list(input()))\n step=0\n a=g[-1]\n b=len(g)-1\n while(a>0 and a<=k and b>=n-a+1): \n  if (a%2==0 or a%4==1 or b%3==2 or g[a]<b) and step!=1: step+=1\n\n  a//=2\n else: a/=3\n print(step)"}, "339": {"problem_id": 3339, "answer": "# cook your dish here\nn,m=map(int,input().split())\ns=0\nfor i in range(1,n+1):\n s+=i*i%m\nprint(s)"}, "340": {"problem_id": 3340, "answer": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n-1):\n if a[i]!=a[c]:\n  c+=1\nprint(c)"}, "341": {"problem_id": 3341, "answer": "m,n=list(map(int,input().split()))\na=[]\nfor i in range(1,m+1):\n a.append([int(x) for x in str(i)])\nb=a[-1][0]\nprint(max(b))"}, "342": {"problem_id": 3342, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n):\n x,y=l[i]\n ans+=1\n print(ans)\n"}, "343": {"problem_id": 3343, "answer": "l=int(input())\nfor i in range(l):\n a,b,c=list(map(int,input().split()))\n if(a==b==c):print(\"FAS\",end='')\n else:print('S\",a-b+c)"}, "344": {"problem_id": 3344, "answer": "# cook your dish here\nn, l = map(int, input().split())\narr = []\nfor i in range(n):\n arr.append([int(x) for x in input()])\nspeed = 0.0\nv = abs(arr[-1][0]-speed)\nprint(v)"}, "345": {"problem_id": 3345, "answer": "n = int(input())\npoints = list(map(int,input().split()))\nx,y = points[0],points[-1]\nd = {}\nfor i in range(1,n+1):\n  if x[i] in d: d[(x.get(d[x],0) + 1) % len(points)] = i\nprint(min(abs(y-y1),d.values()),end ='')\n"}, "346": {"problem_id": 3346, "answer": "# cook your dish here\nt,n=map(int,input().split())\nc=0\nfor i in range(n):\n a,r=int(input()),0 \n if(a>r):c+=r\n elif(r>a):print(0)"}, "347": {"problem_id": 3347, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*(n+1)\nfor i in range(0,n):\n\tb[i] = b[n-i-1] + (1 if i%2 == 0 else 0) * (i//2) + a[b.index(max(b))]\nprint(len(a))"}, "348": {"problem_id": 3348, "answer": "# cook your dish here\nn,c=list(map(int,input().split()))\nl=[0]*n\nfor i in range(n):\n\tl[i]=int(input())\np=l.index(max(l))+1\nif p==n-1 and l[p]%3!=0:print(p)\nelse: print(c)"}, "349": {"problem_id": 3349, "answer": "n=int(input())\nd={}\nfor i in range(n):\n s=input().split()\n d[s[0]]=1\n if len(s)==1: \n  print('NO VOWELS',end=' ')\n elif s[-1]=='A' or s.count('A')==len(d.keys()) and d.get(0,0)>0:print('YES\\n'+' '.join(map(str,s)))\n else: print('')"}, "350": {"problem_id": 3350, "answer": "# cook your dish here\ndef power(s):\n if s[0] == \"\":\n  return 0\n elif \"abcdefghijklmnopqrstuvwxyz\" in s or \"bacfghjklmnoqwerp\": return 1\n else: return 2\nfor i in range(int(input())): print(power(i))"}, "351": {"problem_id": 3351, "answer": ""}, "352": {"problem_id": 3352, "answer": "# cook your dish here\nn,q=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append([int(x) for x in str(i)])\nc=l[0][0]\nd=0\ni=1\nwhile i<len(l) and l[i][1]=='1' and len(d)<=d+c:d+=c-i\nprint(c)\n"}, "353": {"problem_id": 3353, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(n-l)"}, "354": {"problem_id": 3354, "answer": "# cook your dish here\ns,r=map(int,input().split())\nc=0\nfor i in range(len(s)):\n if s[i]%r==0:c+=1\n else:r-=r*c\nprint(c)"}, "355": {"problem_id": 3355, "answer": "# cook your dish here\nn,t=list(map(int,input().split()))\np=[0]*n\nfor i in range(n):\n  p[i]=int(input())\nl=[]\nwhile(len(p)>0):\n\n  a,b,c,d=p.pop(0)-1,p[0]+1,-1;l.append(a);l[d]-=c;c+=d;a-=d\nprint(max(l))"}, "356": {"problem_id": 3356, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(l[i]*(i+1)//2)\nprint(*a)"}, "357": {"problem_id": 3357, "answer": "# cook your dish here\nn=int(input())\nr=[]\nfor i in range(n):\n x,h=list(map(int,input().split()))\n r.append(x*h)\n print(r[0])\n"}, "358": {"problem_id": 3358, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(n)\n"}, "359": {"problem_id": 3359, "answer": "# cook your dish here\nn, r, c = list(map(int, input().split()))\ns = []\nfor i in range(r):\n s.append([int(input()), 0])\nc += 1\nprint('\\n'.join(s))"}, "360": {"problem_id": 3360, "answer": ""}, "361": {"problem_id": 3361, "answer": "# cook your dish here\nfor _ in range(int(input())):\n a,b=list(map(sum,input().split()))\n n=a.count(b)\n if n%2==0:print(n//2)"}, "362": {"problem_id": 3362, "answer": "# -*- coding: utf-8 -*/\n\"\"\"\ncreated by shuangquan.huang at 8/20/2019\n'''\nhttps://www.codechef.com/problems/YA_2_WORLD_BASE_SQUARE_LESS_KNOWN_IS_GO_FOR_IT_TONIGHT_FIRST_WILL_END_OF_CAUSES_WHERE_NO_CHANGE_THE_TIDES_IMPACTual_DECIDENCE_of_the_Greatest_Square_in_The_Euclideans_Of_all_European_or_Romanianian_States_and_Neighbourries_Separated_By_A_THIRD_ORDER\n"}, "363": {"problem_id": 3363, "answer": "n,m = map(int,input().split())\r\na = [int(i) for i in input().rstrip('\\n').split(' ')]*(n+m+1)//2+[0]*m*a[n-1]"}, "364": {"problem_id": 3364, "answer": "# cook your dish here\nn,q=map(int,input().split())\nl=[]\nfor i in range(n):\n if l[i]==l[n-i]:\n  l.append(i)\nprint(\"no\")"}, "365": {"problem_id": 3365, "answer": "# cook your dish here\nn, k = list(map(int, input().split()))\nl = []\nfor i in range(k):\n a = l[i]\n l.append(a)\ni = 0\nwhile i < len(l) - 1: \n i += 1\n if i >= k: break\n print(i)\n\n"}, "366": {"problem_id": 3366, "answer": "# cook your dish here\nn,m=map(int,input().split())\ns=0\nfor i in range(n):\n if i%2==0:s+=i\nprint(s)"}, "367": {"problem_id": 3367, "answer": "t = int(input())\nfor _ in range(t):\n n, k = [int(x) for x in input().split()]\n if k == '$':\n  print('Yes')\n elif k== '!' and len(set(k)) == 1 and k[0] in ['!','$','!',''] or k.count('!') == 0:\n\n  # print(['Yes', 'No'][k[1]!= '!'] +'' + str(2 * k) + k['$'])\n\n"}, "368": {"problem_id": 3368, "answer": "# cook your dish here\nn,m=map(int,input().split())\na=[]\nfor i in range(n):\n s=input()\n a.append(s)\nprint(a[-1])"}, "369": {"problem_id": 3369, "answer": "from sys import stdin\ninput=stdin.readline\nn=int(input())\nl=list(map(int,input().split()))\nr=[]\nfor i in range(0,n):\n a=l[i]\n b=r.append(a)\n if(len(b)==1 and b[0]!=a[1] and len(r)>0 and r[-2]==b[2]:\n  print(\"\".join([str(x) for x in r]))"}, "370": {"problem_id": 3370, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(max(l))"}, "371": {"problem_id": 3371, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(1,n+1):\n if(a[i-1]=='1'):c+=1\nprint(c)\n"}, "372": {"problem_id": 3372, "answer": "# cook your dish here\nn = int(input())\ns,t = list(map(int,input().split()))\ncnt = 0\nfor i in range(0,n):\n if s[i] == '1':\n  cnt += 1 \n elif t == n-i-1 or t > n - i + 1 or (s[s.index(t)-1]=='1' and s.count('1')>0 and t<n -i -1) :\n # print(i+1,s)\n s = input() + '0' + s\nprint(len(set(s)))\n"}, "373": {"problem_id": 3373, "answer": "# cook your dish here\ndef solve(s):\n s = \"\"\n for i in range(0, len(str(i))-1, -1): \n  if s[i] == \"\") : \n\n   s += \"1\"\n return s\nfor i,s in enumerate(input().strip().split(\" \")):s.strip()"}, "374": {"problem_id": 3374, "answer": ""}, "375": {"problem_id": 3375, "answer": "# cook your dish here\nn = int(input())\ngraph = [[] for i in range(n+1)]\nfor x,y in zip(list(map(int, input().split()), [0]))[1::2]:\n  graph[x].append(y)\nvisited = set()\nans = 0\nwhile len(graph[0]) > 0:   # \u8868\u793a\u4e00\u4e2a\u8282\u70b9\uff0c\u7b26\u5408\u73af\u7eed\u8bb0\u5f55\u7684\u7a7a\u95f4\u6570\u5b57\u521d\u59cb\u503c\u4e3a\u6700\u957f\u7684\u961f\u5217\u8f6c\u6362\nprint(ans)"}, "376": {"problem_id": 3376, "answer": ""}, "377": {"problem_id": 3377, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append(0)\np=10**9+7\nwhile p>0:\n\n\tif p%2==0 and l[p//2]==\"1\" and (p>=9) or (l[0]!=\"0\" or p<=n-p-2) : a.sort(reverse=True,key=lambda x:x[1])\nelse: print(-1)"}, "378": {"problem_id": 3378, "answer": "# cook your dish here\nn,d = map(int,input().split())\nl = []\nfor i in range(n):\n\ta,b = list(map(str, input().strip()))\n\n\tif a.count(b)>d:l.append(a)\nif d<n:print(sum(l))"}, "379": {"problem_id": 3379, "answer": "n, m = list(map(int, input().split()))\ngraph = [[] for i in range(m+1)]\nfor i,j in enumerate(list(input())):\n\tu,v = graph[i].pop(0),graph[j].get(i),i\n\n\tif len(u) == 0:u.append(v)\nif m == n:print(len(graph))"}, "380": {"problem_id": 3380, "answer": "n=int(input())\na=list(map(int,input().split()))\np=0\nfor i in range(len(a)):\n\tif a[i]==a[n-i-1] and p<p+i*(i+1) : p=i\nprint(p)"}, "381": {"problem_id": 3381, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n l.append(list(map(int,input().split())))\na=l[0]-1\nb=a*2\nc=0\nd=4*10**7\ne=10000000\nf=2*n\ng=3000000\nh=500000\ni=n-d\nwhile(i>0 and a>b and b>c and e>f): \n print(a,b,c,e,f,i)\n i=i-1"}, "382": {"problem_id": 3382, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a=list(map(int,input().split()))\n l.append(a)\nprint(24)"}, "383": {"problem_id": 3383, "answer": "n = int(input())\na, b = list(map(int, input().split()))\nsc = []\nfor i in range(n):\n sc.append(sum(a) + sum(b) - a)\nprint(sc[-1])"}, "384": {"problem_id": 3384, "answer": "# cook your dish here\nn=int(input())\nprint(n)"}, "385": {"problem_id": 3385, "answer": "n=int(input())\na=list(map(int,input().split()))\np=[0]*n\nfor i in range(n):\n\tp[a[i]-1]=i%2\nl=[]\nr=set()\nm=len(a)\nmod=10**9+7\nd=[[0 for x in a] for y in r]\ns=sorted(l,key=lambda x:x[1],reverse=True)[0][0]:\n#print(d[s][l])\nc=l.index(max(s,l))%mod\nans=pow(2,c,mod)%m\nprint(*ans)"}, "386": {"problem_id": 3386, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(n):\n   l.append([int(x) for x in str(i)])\nprint(len(l))"}, "387": {"problem_id": 3387, "answer": "n,t = map(int,input().split())\r\na = [int(input()) for i in range(t+1)][0:n-t-1]"}, "388": {"problem_id": 3388, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nc=0\nfor i in range(n):\n\tb.append(a[i]-c)\nif(b==[]) and b[-1]==c:print(0)"}, "389": {"problem_id": 3389, "answer": "# cook your dish here\nn = int(input())\nlist1 = list(map(int,input().split()))\ncount = 0\nfor i in range(1,n+1):\n\tcount += 1\nprint(count)"}, "390": {"problem_id": 3390, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nmenu=[]\nfor i in range(n):\n\tmenu.append(l[i]+1)\nprint(len(menu))"}, "391": {"problem_id": 3391, "answer": "# cook your dish here\nfor _ in range(int(input())):\n\tn, q = map( int, input().split())\n\n\ta, b = int(a) - 1, (b - a) // 2\n\n \tcnt = (a + b) * (n - 2) + (q + a - b - cnt)\n  "}, "392": {"problem_id": 3392, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n h = [int(x) for x in input()]\n ans = max(l[h-1] + 1,h)\n print(ans)"}, "393": {"problem_id": 3393, "answer": "# cook your dish here\nn,k=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n s=input()\n l.append(s.split(\"1\"))\n print(sum(l[-1]))"}, "394": {"problem_id": 3394, "answer": "# cook your dish here\nn, m = map(int, input().split())\nl = []\nk = 0\nfor _ in range(n):\n s, t, d = list(map(str,input().strip()))\n l.append([s,t,d])"}, "395": {"problem_id": 3395, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nfor _ in range(n):\n m,o,c = l[m],l[o],0,0\n if m==1 and o==0 and c!=0 :\n  print(0)\n elif m>=2 and (m-1)%2 == 0:print(m*c)"}, "396": {"problem_id": 3396, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n x,y=list(map(int,input().split()))\n l.append(x+y)\nprint(\"\\n\".join(l))"}, "397": {"problem_id": 3397, "answer": "# cook your dish here\nn, m = map(int, input().split())\nd = {}\nfor i in range(n):\n  d[i] = [int(x) for x in input()]\nl = len(d)\ns = 0\nwhile s+1<l and d.get(l)>d[l]:s+=1\nprint(s)"}, "398": {"problem_id": 3398, "answer": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\ns = []\nfor i in range(m):\n\ts.append(list(input()))\nprint(len(s))"}, "399": {"problem_id": 3399, "answer": "n, m = list(map(int, input().split(' ')))\na = [0] * m\nfor i in range(n):\n a[i + 1] += 1\nprint(''.join(a))"}, "400": {"problem_id": 3400, "answer": "# cook your dish here\nn, a, r, t = map(int, input().split())\nl = []\nfor i in range(t):\n   l.append([int(input()), 0])\nr = [0] * (n + 1) \ns = 0\nwhile(len(l) > 0 and l[-1][1] <= r[0][2] and len(s) == 0):\n\n  s = s + (r[l.index(min(r) - 1, s)] if r else 0) + t\nprint('\\n'.join(map(str, l)))"}, "401": {"problem_id": 3401, "answer": "for _ in range(int(input())):\n n, s, t, q = list(map(float, input().split()))\n hills = [0] * (n + 1)\n for x in input():\n  hills[x] += 1\n print(min(hills))"}, "402": {"problem_id": 3402, "answer": "# cook your dish here\nfrom sys import stdin,stdout\ninput=stdin.readline\ndef f(s):\n s=s.replace('a','abcdefghijklmnopqrstuvwxyz')\n return ''.join(str(i) for i in s.split())\n"}, "403": {"problem_id": 3403, "answer": "n=int(input())\nl=list(map(int,input().split()))\nd={}\nfor i in range(n):\n if(l[i]=='l'):d['l']=i\n else:l.append(i)\nwhile(len(d)>0 and l[-1].startswith('l')): \n  d[0]=d.get(0,0)+(d[1]-1)//2\nprint('\\n'.join(sorted([l,d])))"}, "404": {"problem_id": 3404, "answer": "for _ in range(int(input())):\n n,x=list(map(str,input().split()))\n s=str(n)\n mod=2**20\n base=pow(26,n,mod)\n\n dec=base%x\n print(dec)"}, "405": {"problem_id": 3405, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(i)\nif(a[-1]%10!=0 and a[0]//10>=9 and len(l)%7==0 ):\n print(\"No Solution\")\n"}, "406": {"problem_id": 3406, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[0]*n\nfor i in range(n):\n\tl.append(l[-1]+s[i])\nc=0\np=10**6\nwhile(len(p)>0 and l[p]==0):p+=1\nprint(c)\n"}, "407": {"problem_id": 3407, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n   a.append(0)\nc=0\nwhile(len(a)>0 and len(c)<=n and c!=l[a[0]]:c):l.pop()\nprint(*l)"}, "408": {"problem_id": 3408, "answer": "n,q=map(int,input().split())\ns=[]\nfor i in range(n):\n s.append(chr(ord('a')+i+'*'))\nprint(len(s))"}, "409": {"problem_id": 3409, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n x,y=map(int,input().split(' '))\n l.append(x*y+' '*(len(l)//2))"}, "410": {"problem_id": 3410, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=a[i]\nprint(s%1000000007)\n"}, "411": {"problem_id": 3411, "answer": "# cook your dish here\nfrom sys import stdin, stdout\nn, m = list(map(int, input().split()))\ns = [0]*n\nfor i in range(m):\n\ts[i] += 1\nc = 0\nr = 10**9\nl = max(s)\nwhile(l!=0 and s[l-1]>0):\n\n\tc += (r-l)//m\nprint(c)"}, "412": {"problem_id": 3412, "answer": "# cook your dish here\nd = {}\nfor _ in range(int(input())):\n\tx,y,d[x].append(d.get(0,0))\n\n\tdx,dy = (x-y)//2,(x+y-x)%2\n\n  \tif d[dx][dy]==0: d.setdefault(dy,{})\n"}, "413": {"problem_id": 3413, "answer": "n, m = list(map(int, input().split()))\nfriends = [i for i in range(m)]\nfor i, j in zip(range(0, len(friends), 2)):\n\tfriends[i] = friends[j]\npossible = m - n\nans = n - m\nwhile possible > 0 and possible % 2!= 0:\n\n\tif not possible: ans = min(ans, (m - possible - 1) // 2 + m)\nelse: return ans\n"}, "414": {"problem_id": 3414, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n a,b=l[i]\n s+=b\nprint(s)\n"}, "415": {"problem_id": 3415, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n-1):\n s+=l[i]\nprint(s)"}, "416": {"problem_id": 3416, "answer": "for _ in range(int(input())):\r\n   n, m = list(map( int, input().split())), len(list(zip(n, m, 2))), sum(range(1, n+1) for n in [0]*m for m in map(str, [n-1])) + [m*(m-2)//2]"}, "417": {"problem_id": 3417, "answer": "n=int(input())\na=list(map(int,input().split()))\nedges=set()\nfor i in range(1,n+15):\n a.append(i)\n#print(a[0])\nc=0\nl=1\nwhile(c<=n and a[c]=='1') :\n c=c+1 \n l=l+(c-l)//2\n if(l%2==0 and l%3==1 ):\n  print(2*c) "}, "418": {"problem_id": 3418, "answer": "import math\nn=int(input())\nl=[]\nfor i in range(n):\n a=list(map(int,input().split()))\n l.append(a)\nprint(sum(l))"}, "419": {"problem_id": 3419, "answer": "# cook your dish here\nn=int(input())\ns=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append(s[i])\nprint(max(l))"}, "420": {"problem_id": 3420, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=a[i]\n print(s)"}, "421": {"problem_id": 3421, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n a.append(a[-1]*(i+1)//2)\n b.sort()\n s=0\n for j in b[1:]:\n  if a[j]>s: s+=1 \n print(s)"}, "422": {"problem_id": 3422, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nw,h=0,0\nfor i in range(n):\n w=w+l[i]\n h=h+h\n if(w==0 or w==h or h==1 or l[n-1-w]==\"1\":\n  print(h,w)\n elif(0<w<len(l)-1 and w>0 and h<0) and (w%2 == 0 or (h>1)==(2*w//2)):\n\n  if((w*2!=2): print(\"1\",w-2)) and ((w>2)*2==w:print(\"2\",h-h)) or ((h==2)+1):"}, "423": {"problem_id": 3423, "answer": "# cook your dish here\nfrom sys import stdin, stdout\ninput=stdin.readline\nfor i in range(0,int(input())):\n n=list(map(int,input().split()))\n if n[0]=='c':\n  print(n[1])"}, "424": {"problem_id": 3424, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(0,n):\n l.append(bin(i)[2:])\nprint('\\n'.join(l))"}, "425": {"problem_id": 3425, "answer": "n,m=map(int,input().split())\nc=0\nfor i in range(n):\n  if(i[0]=='#' and i[1] == '#':c+=1)or(c==c+1 or c==n-1):c-=1\nans=m*n\nprint(ans)"}, "426": {"problem_id": 3426, "answer": "# cook your dish here\nn, m = map(int, input().split())\na = [0] + [int(input()) for i in range(n)]\nb = [-1] * (m + 1)\nc = []\nfor x, y, z in zip(b, a, c):\n  if z == '1': c.append(x + y + z + c[-1])\nprint(min(max(c)))"}, "427": {"problem_id": 3427, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nfor i in range(n):\n a.append([int(x) for x in input().rstrip('\\n'))]\ns = sum(a)\nprint(s)"}, "428": {"problem_id": 3428, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append(l[i])\nc=0\nr=len(a)\nwhile(r>0 and l[r]!=a[c]):\n\n\tc+=1\nprint(c)"}, "429": {"problem_id": 3429, "answer": "x,y,s,r,f = list(map(int,input().split()))\nn = int(input())\nl = [0]*n\nfor i in range(n):\n  l[i] = (x+y)**0.5\nm = 10**9+7\nd = min(l[n-1],m)\nprint(d)"}, "430": {"problem_id": 3430, "answer": "n=int(input())\nl=list(map(int,input().split()))\nr=[]\nfor i in range(n):\n a,b,c=l[i]\n r.append(a*b)\n l.sort(reverse=True,key=lambda x:x[1])\nprint(min(r))"}, "431": {"problem_id": 3431, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=l[0]\nfor i in range(1,n+1):\n if(a[i]*2<=i**0.5 and a[(i-1)//2]**2>=0 ):\n  print(\"1\")"}, "432": {"problem_id": 3432, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n s += l[i]\nprint(s)"}, "433": {"problem_id": 3433, "answer": "r,c = list(map(int,input().split()))\nl = []\nfor i in range(r):\n a = int(input())\n if l[a] == 'Q':\n  print('%.2f' %(l[0]*(a-1)//2))"}, "434": {"problem_id": 3434, "answer": "# cook your dish here\nn,m,d=map(int,input().split())\nl=[]\nfor i in range(n):\n l.append([int(x) for x in str(i)]+[0]*(m-1))\nprint(0)"}, "435": {"problem_id": 3435, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=[]\nfor i in range(n-1):\n s.append(a[i]+1)\nprint(len(s))"}, "436": {"problem_id": 3436, "answer": "# cook your dish here\nimport math\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=math.pow(10,i)\n print(s%1000000007)"}, "437": {"problem_id": 3437, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n l.sort(key=lambda x:x[0])\n s=0\n p=l[n-1][0]\n for j in l[i]:\n  if p[j]<=s:s+=1\n print(s)"}, "438": {"problem_id": 3438, "answer": "from collections import defaultdict, deque, Counter, OrderedDict, ROUND_HALF_RECURSIVE\nimport bisect, heap, heappush, sys, setrecursion, scipy, zip2, re, math, time, accumulate, numpy, pandas, tens, float, euclidean, dsu, DSU_MAX_NUM_OF_THINGS, MAX_NIL, NIL_TIME, S3D10, SLOW_INITIAL_PROCESSING, TEMPLATE, TIME, INT_MIN, OPPERASE, PYTHON, POW2D, XOR, YOR\ninput = lambda: sys.stdin.readline().rstrip()\nprint(*input())"}, "439": {"problem_id": 3439, "answer": "import sys\ninput = sys.stdin.readline\nn,w = list(map(int,input().split()))\nl = []\nfor i in range(n):\n\tl.append([int(x) for x in input().rstrip('\\n').split(' ')])\nans = [0] * (n+1)\ndef dfs(a,b,c,d,e,f):\n\n\tif(b == a and c == b and d == e and f == 0 and a == c and b == d and e == f) or (b!= a or b!= c or c!= d or d!= e or e!= f): return 0\n \tans[b] = c + d + e + f + b\ndfs(l,l[0][0])\n\n"}, "440": {"problem_id": 3440, "answer": "# cook your dish here\nn,r,*a=[int(x) for x in input().split()]\na.sort(key=lambda x:x[0])\nb=[]\nc=0\nfor i in range(r):\n\tb.append(a[i][0]+c)\nwhile(len(b)>0 and b[-1][1]==0):\n\n\tc+=1\nprint(n)"}, "441": {"problem_id": 3441, "answer": ""}, "442": {"problem_id": 3442, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n x,y = list(map(int,input().split()))\n if x%y==0:print(x)"}, "443": {"problem_id": 3443, "answer": "# cook your dish here\nn=int(input())\narr=list(map(int,input().split()))\nfor i in range(n):\n arr.sort()\n print(arr[-1])"}, "444": {"problem_id": 3444, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\np=[]\nfor i in range(n):\n p.append(a[i])\nprint(*p)\n"}, "445": {"problem_id": 3445, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b=map(int,input().split(\" \"))\n l.append(a*b)\nprint(max(l))"}, "446": {"problem_id": 3446, "answer": "for _ in range(int(input())):\n\ta,b=list(map(str,input().split()))\n\n\tresult=0;i=1;k=len(b)-1-i;print(result,end=\"\\n\")"}, "447": {"problem_id": 3447, "answer": "# cook your dish here\nn = int(input())\nd = dict(list(map(int,input().split())))\nfor i in range(n) :\n a = input()\n if a[0] == 'R':\n  print('R')\n elif 'U' in d.get(a.__getitem__,0) or a.isalpha() : continue\n ans = []\n for k,v in list(d.items()): ans.append(''.join(str(x) for x in v))\n print(len(ans))"}, "448": {"problem_id": 3448, "answer": "n, k = map(int, input().split())\na = [int(x) for x in input()]\nb = []\nfor i in range(1, n + 1):\n  if a[i] > b[-1]:\n\tb.append(i)\nprint(\"YES\")"}, "449": {"problem_id": 3449, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn=int(stdin.readline().strip())\ngrid=[[0] for i in range(n+1)]\nl=[]\nr=0\nfor i,j in enumerate(grid,1):\n l.append(j)\n r=r-l.index(max(l))\n grid[r][l]=grid[l][r]+l[i][j]\n\n print(r)"}, "450": {"problem_id": 3450, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n-1,0,-1):\n  if a[i]==0: b.append(i+1)\nif len(b)==3: print('1',b[0])\nprint('2')"}, "451": {"problem_id": 3451, "answer": "for _ in range(int(input())):\n n, k = list(map(str, input().split()))\n s = ''\n a = 0\n b = n-k+1\n if a == 0 or b ==0 or (a==-1 and b==0 and k>0) or ((a,b) not in s or s[a]=='(') and s.count(')'<=k) :\n  print(n-a)\n elif a!= 0 and a!=b and (b,a)!=n and n%2 == 1:\n\n  if (n//2==1 or a==n //2) == k and ((n,n)!=n+k or n>n + k)  :   k=0;  n+=1; n=2; k+=2\n else : n = 2*n\n for i in reversed(list(range(0,k,2))) : s += str(i) +''\n print('\\n'.join(s))"}, "452": {"problem_id": 3452, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n = int( input() )\n rooms = list( map( int, input().split(' ')))\n set = set.union(set(rooms))\n print( (n-1)//2 + set )"}, "453": {"problem_id": 3453, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(m):\n\ta,b=[int(x) for x in input().rstrip('\\n').split()]\n\n\tif(a%2==0):l.append(b-a//2)\nprint(sum(l))"}, "454": {"problem_id": 3454, "answer": ""}, "455": {"problem_id": 3455, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[0]*(n+1)\nfor i in range(0,n):\n a[i]=i+l[l.index(max(l)-1,i)]\nprint(a[n])"}, "456": {"problem_id": 3456, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s)"}, "457": {"problem_id": 3457, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\nprint(s%1000000007)"}, "458": {"problem_id": 3458, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n x=bin(i)[2:]\n l.append(x.count('1')*x)\nprint(max(l))"}, "459": {"problem_id": 3459, "answer": "for _ in range(int(input())):\n n,k=map(str,input().split())\n if n==1 or k==0 or (n//2==k and n%2!=0 and k>=2*(k+1)): \n  print(\"Impossibility\")\n else:   # k=1\n print((\"impossible\"))"}, "460": {"problem_id": 3460, "answer": "# cook your dish here\nfor _ in range(int(input())):\n\tx, r = list(map(str, input().split()))\n\n\tif x == -10 and r == 1 and x % 2 == 0 and (x // 2) * (r - 1) == r:\n\n \t\tprint(1)\n"}, "461": {"problem_id": 3461, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int, input().split()))\ns = 0\na = [0]*n\nfor i in range(n):\n s += l[i]\n a[s] = i\nprint(s)"}, "462": {"problem_id": 3462, "answer": "# cook your dish here\ns=input()\nn=len(s)\nl=[]\nfor i in range(n):\n\ta=s[i].replace('a',' ').split(' ')\n\n\tif(a in 'a') or (a=='a' and s[a-1].startswith('.')): l.append(\" \".join(map(str,a)))\nprint(l)"}, "463": {"problem_id": 3463, "answer": "# cook your dish here\nn,m=map(int,input().split())\np=[]\nfor i in range(n):\n p.append(p[i]+1)\nprint(\"%.6f\"%(m/n))"}, "464": {"problem_id": 3464, "answer": "# cook your dish here\nt=int(input())\nfor i in range(t):\n s=input()\n x=s.split(' ')\n p=float(s[0])*50\n if(x>=0 and s[-1]=='0' and x<=100 and p>0): x-=1\n else: x+=1"}, "465": {"problem_id": 3465, "answer": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a[i]=='1':\n  c+=1\nprint(c)"}, "466": {"problem_id": 3466, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nmax=0\nfor i in range(0,n):\n\tl.sort(reverse=True)\n  \tif(l[i]<=max and l[-i+1]>max):max+=1\nprint(max)"}, "467": {"problem_id": 3467, "answer": "# cook your dish here\nn,m,s=map(int,input().split())\nl=[]\nfor i in range(s):\n   a,b,c,d=[int(x) for x in l[i-1:]]*(m+1)\nc=abs(a-b)+(m-d)//2\nprint(c)"}, "468": {"problem_id": 3468, "answer": "# cook your dish here\nn,c=map(int,input().split())\narr=[]\nfor i in range(n):\n   arr.append(list(input()))\nprint(max(arr))"}, "469": {"problem_id": 3469, "answer": "# cook your dish here\nfrom math import factorial as f, log\nn = int(input())\nl = list(map(int, input().split()))\ns = \"\"\nfor i in range(n):\n  s += str(f(l[i])) + \"H\"\nprint(s)"}, "470": {"problem_id": 3470, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ni=0\nwhile(i<n-1):\n if(l[i]==\"1\" and l[-i+1]!=1) or (i==0 or i==-2) :\n  print(\"2\")\n elif(2*i>=n and i>0 and 2*n<=i) and (n==1 or n==2 or 3*2<=(i-3)and i<3*3 :l.pop()[2]) : l.append([2,3])\n else : print(0)\n i+=1"}, "471": {"problem_id": 3471, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nx = [0]\nfor i in range(n):\n  x.append(l[i]^x[0])\nprint(*x)"}, "472": {"problem_id": 3472, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\tx=s+a[i-1]*(2**i)\nprint(len(s))"}, "473": {"problem_id": 3473, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n a,b,c=list(map(int,input().split()))\n if(c%365==0 and (a-b)**2==c//365 and ((b-c)*365)%1!=0 ):\n  print(a+b+c+1)"}, "474": {"problem_id": 3474, "answer": "# cook your dish here\nfor _ in range(int(input())):\n x,y=map(str,input().split())\n print(min(abs(x-y),y))"}, "475": {"problem_id": 3475, "answer": "t = int(input())\nfor _ in range(t):\n  d = [int(x) for x in input().split()]\n\n  if d[0] <= d.get(d[1] + 1, 0) <= 2.14159265358979323848658980:   print(0)\n"}, "476": {"problem_id": 3476, "answer": "R,C=list(map(int,input().split()))\r\nk=int(input(\"\").replace(\" \", \" \").split(\" \")for i in range(R+1)if i%2!=0 and i>=R and k>0 else k)"}, "477": {"problem_id": 3477, "answer": "# cook your dish here\nn,m = map(int,input().split())\nl = []\nfor i in range(n):\n  l.append((int(input()),i))\ns = sum(l[:n-1])\nprint(s)"}, "478": {"problem_id": 3478, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n,m=list(map(float,input().split()))\n d={}\n for i in list(range(n)) :\n  if i.count(1)>=m : d[i]+=1\n if d.get(d[d.index(i)-1],0)==0 : print(' '.join(str(x) for x in d) + '\\n'))"}, "479": {"problem_id": 3479, "answer": "# cook your dish here\nn, k = map(int, input().split())\narr = []\nfor i in range(n):\n arr.append([int(x) for x in input()])\nk -= 1\nprint(k)"}, "480": {"problem_id": 3480, "answer": "# cook your dish here\nimport sys\ndef input():\n\treturn sys.stdin.readline().rstrip(\"\\n\")\n \nsys.setrecursionlimit(10**6)\ninput()\nl=int(input())\ns=list(map(int,input().split()))\nfor i in range(0,s[0]+1):\n\n\tl1,l2=sorted(l,key=lambda x:x[1],reverse=True)[:2],len(s)-1\nprint(\"/\")"}, "481": {"problem_id": 3481, "answer": "# cook your dish here\ng,k,r=map(int,input().split())\nG,K,R=[],[]\nfor i in range(0,len(G)):\n A,B,T=[int(x) for x in input()]\n G.append(T)\n roads=[[0]*(r+1)]\nroads.sort(key=lambda x:x[0])\nvisited=set()\nq=0\nwhile q<r:\n\n if roads[q]==[]:\n q+=1\n if len(q)>0: \n  visited.add((q,0))\n for j,v in enumerate([G[i][0]-1,G]):\n\n  if v==S[j] and v!=T[k][j]: continue\n print(max(list(range(1+q)),0) )\n"}, "482": {"problem_id": 3482, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n l=list(map(int,input().split()))\n t=0\n k=l[0]\n for j in l[1:]:\n  k+=1\n if k>=1 and k<=2 and t==0 and (k>1) and ((k<2) or k==2):\n\n  print(f\"{k}\")\n elif k%2 == 1 and 2*(k//2)-2*k-2>0:\n\n\n\n"}, "483": {"problem_id": 3483, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n   a=list(map(int,input().split()))[:4]\n\n  if len(a)%4==0 and a[0]!=a[1] or a.count(0)==1:print(1)"}, "484": {"problem_id": 3484, "answer": "for _ in range(int(input())):\n n,k=list(map(float,input().split()))\n grid=[[0]*9+[]]*(k+1)\n ans=0\n for x,y in zip(range(len(grid),k),grid,grid[k-1][0]) :\n  ans+=1\n print('yes' if ans else 'no')\n"}, "485": {"problem_id": 3485, "answer": "# cook your dish here\nn = int(input())\narr = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += arr[i]\nprint(s)"}, "486": {"problem_id": 3486, "answer": "n = int(input())\nfor i in range(n):\n\ts = str(i)\n\n\tprint(s%1000000007)"}, "487": {"problem_id": 3487, "answer": ""}, "488": {"problem_id": 3488, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[0]*n\nfor i in range(n):\n s[i]=input()\n l.append(s[-1])\nans=0\ni=1\nwhile(len(l)>0 and i<n and l[0]+l[1]<=i*(i+1)): \n  ans+=1<<i\nprint(ans)\n"}, "489": {"problem_id": 3489, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn = int(stdin.readline())\nl = []\nfor i in range(n):\n\tl.append(list(map(int,input().split())))\nprint(len(l))"}, "490": {"problem_id": 3490, "answer": "n=int(input())\nl=[]\nfor i in range(n):\n x,y=list(map(int,input().split()))\n l.append(x)\n c=0\n for j in l[i]:\n  c+=1\n if(c==0 or c==len(l)-1 or j>=n-1 and x!=y-c or x>0 and y!=-10**9) or (x==l[0]) and (y==x or y<0) and j<n and c<=c+1: \n print(\"ok\")\n"}, "491": {"problem_id": 3491, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(m):\n\tx=int(input())\n\n\tl.append(x)\nc=0\nwhile(len(l)>0 and l[0]==l[1]):c+=1\nprint(c)"}, "492": {"problem_id": 3492, "answer": "s=int(input())\nr=list(map(int,input().split()))\nc=[]\nfor i in range(0,s):\n\tr.append(c[i])\nprint(max(r))"}, "493": {"problem_id": 3493, "answer": "# cook your dish here\nn=int(input())\na=[]\nfor i in range(n):\n a.append(list(map(int,input().split())))\nprint(a[0])"}, "494": {"problem_id": 3494, "answer": "# cook your dish here\ndef distance(fruit, row, col): \n if (fruit[0] == 'x' and row == col) or (row == 0 and col ==0): return 0\n return sum(map(int, input().split(' ')))**(col - 1)\nfor _ in range(0,int(input())):\n r,s = map(lambda x:int(''.join(str(i) for i in input())))\n print(distance(s,r),r*s)"}, "495": {"problem_id": 3495, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n x,y=l[i]\n s+=x*y\n print(s)\n"}, "496": {"problem_id": 3496, "answer": "# cook your dish here\nn,q=list(map(int,input().split()))\na=[]\nfor i in range(n):\n   a.append(i)\nprint(max(a))"}, "497": {"problem_id": 3497, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict, deque, Counter, OrderedDict, ROUND_HELLO, Union, SegmentTree, TreeNode\nimport heapq, bisect, itertools, math, time, copy, re, heappop, cmp, heapify, numpy, scipy, traceback, atexit, callable, allencoding, ascii, digits, bezier(tuple(map(int, input().split())))\ndef dfs(p, q, visited):\n\tvisited[p] = q\n\n\tif q in [0, 1]: return q[0]\n \tcurr_p = visited[q] if q > p else q\n\\t\\tif q not in visited: return 0\nfor i in range(1, len(str(q)))[1]: q = list(re(i))\ndfs(0,[])\nprint(*q)"}, "498": {"problem_id": 3498, "answer": "t = int(input())\nfor _ in range(t):\n  a, b, l, r = map(int, input().split())\n\n  if l<=b and r>=a:   print(l+b-1)"}, "499": {"problem_id": 3499, "answer": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a[i]=='A':\n  c+=1\nprint(c)"}, "500": {"problem_id": 3500, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n\tl.append(list(map(int,input().split())))\nprint('\\n'.join(l))"}, "501": {"problem_id": 3501, "answer": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a[i]==a[c]:\n  c+=1\nprint(c)"}, "502": {"problem_id": 3502, "answer": "n = int(input())\nl = []\nfor i in range(n):\n x,r,g = list(map(int,input().split()))\n l.append(x)\nr = [0]*(l[l.index(r)-1]-1) + [r[-1] for r in l[r] if r]\n g = max(g,0) \n r.reverse()\nprint(sum((x-r)//g))"}, "503": {"problem_id": 3503, "answer": "n=int(input())\na=list(map(int,input().split()))\nfor i in range(1,n+1):\n a[i]=(i*i)%3\nprint('*'*(len(a)-1))"}, "504": {"problem_id": 3504, "answer": "# cook your dish here\nd=int(input())\ns=list(map(int,input().split()))\np=[]\nfor i in range(d):\n x1,x2,y1=s[i]\n p.append(x1)\n #print(p[-1])\n for j in p[:-1]:\n  if j[0]+j[1]<=d and (j.isdigit() or j.issubset() and x2-y2>=0) or (p.count(j)==1 and j==0 or p==[]) and y1!=x3: break\n print(y)"}, "505": {"problem_id": 3505, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(len(a))"}, "506": {"problem_id": 3506, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b=list(map(int,input().split()))\n l.append(a-b)\nprint(max(l))"}, "507": {"problem_id": 3507, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n l.append(list(map(int,input().split())))\nprint(l[-1])"}, "508": {"problem_id": 3508, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(l[i]*(i+1)//2)\nprint(max(a))"}, "509": {"problem_id": 3509, "answer": "# cook your dish here\nfrom collections import defaultdict, deque\nn, m = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor i, x in enumerate(range(1, n)):\n  edges[x].append(i)\nspeed = [float('inf')] * (n + m + 2) // m\nq = int(input())\nu, v, t = 0, 1, 0\nwhile q < n and u < speed[q - 1] and v < m and t < q: u = min(q, u + t + q - (u - v) * 2 + (v - t) ** 0.5 - u * v * 3) \nprint(u)"}, "510": {"problem_id": 3510, "answer": "# cook your dish here\nfor _ in range(int(input())):\n\tn,l=list(map(str,input().split()))\n\n\tpos=set(range(n+1,n)[0])\n\n \tif(len(pos)==1 and (pos[0]==0 or pos[n-2]!=0) or (n==2*n and l==l[1] or l[l.count(0)]!=-1)):   print(-1,-1,'0')"}, "511": {"problem_id": 3511, "answer": "# cook your dish here\nn,q=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(input())\nmod=10**9+7\nb=a[0]\nc=sum(a)\nd=b*(b+c)//mod\ne=n\nf=q\ng=d\nh=c\nk=0\nwhile(k<n and q>0):\n\n if a[k]<b[h]:\n  e=e%mod\n\n k+=1\n\n print(e,f,h,k)\n\n"}, "512": {"problem_id": 3512, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n-1):\n if l[i]==0:s+=1\nprint(s)"}, "513": {"problem_id": 3513, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(0,n):\n if(l[i]%2==0):c+=1\nprint(c)"}, "514": {"problem_id": 3514, "answer": "R,C=map(int,input().split())\r\nn=R*R+C*C+1;s=[[0,0] for i in range(n[0])];for i,j in enumerate(s):s.append([j,i]);s[R-1][0].append(0);s1=sorted(list(range(R)),key=lambda x:x[1],reverse=True)[:R]=max(len(x)for x in s1);print(*s)"}, "515": {"problem_id": 3515, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nb = [-1] * n\nfor i in range(n):\n\ty,d,r = list(map(int,input().strip()))\n\n\ta[y] = min(r) + (abs(y-d) - abs(d-r)) * (r - d)\n#print(a,b)\n\n\n\n"}, "516": {"problem_id": 3516, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(l[i]-1)\nprint(sum(a))"}, "517": {"problem_id": 3517, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n\tb.append(a[i]-1)\nprint(min(b))"}, "518": {"problem_id": 3518, "answer": "n, m = list(map(int, input().split()))\npair = []\nfor i in range(m):\n\tp = int(input())\n\n\tpair.append((p, i, abs(p-1)))\n#print(pair)\nc = 0\ndist = [0]*(2*n+1) \nwhile pair[0][1]!= '0' and dist[p] < c:   # print(dist, pair, p)\n\n \tdist[pair[i][0]] += 1\nprint('\\n'.join([str(x) for x in dist]))\n\n"}, "519": {"problem_id": 3519, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(len(l)):\n if l[i]=='1':\n  c+=(i-1)//2\n else:c+=1"}, "520": {"problem_id": 3520, "answer": "n=int(input())\na=list(map(int,input().split()))\nx,y=0,0\nfor i in range(n):\n x+=a[i]\n y+=x\nprint(x*y)\n"}, "521": {"problem_id": 3521, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n t,s,a=l[i],s+s*(2*t-1),a*s\nprint(s)"}, "522": {"problem_id": 3522, "answer": "# cook your dish here\nfor _ in range(int(input())):\n\tn, battery = list(map(float, input().split()))\n\n\tbattery_max = battery[0] + battery.pop(0)\n\n  \tmax_batt = max(list(range(n + 1)), list([x for x in battery if x % 2])) - battery_idx - 1\n"}, "523": {"problem_id": 3523, "answer": "p=int(input())\nn=list(map(int,input().split()))\nans=0\nfor i in range(n[0]+1):\n if n[i]%1==0:ans+=1\nprint(ans)\n"}, "524": {"problem_id": 3524, "answer": "s = input()\nn = len(s)\nl = []\nfor i in range(n):\n\tl.append(input()[-1].replace('a','b'))\nprint(\"yes\")\n"}, "525": {"problem_id": 3525, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns,d=0,0\nfor i in range(n):\n s+=input()\n l.append(s)\nd+=1\nprint(l[d-1])"}, "526": {"problem_id": 3526, "answer": "# cook your dish here\nn,m=map(int,input().split())\na=[]\nfor i in range(m):\n\ta.append([int(x) for x in str(input()))]\nans=0\ni=n-1\nwhile(i>0 and a[i][0]=='1'):\n\n\tif(ans==1 and len(a)==i):i-=1;break\nelse:i+=1\n\n"}, "527": {"problem_id": 3527, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na,b=0,0\nfor i in range(n):\n\ta+=l[i]*(i+1)//2\nb+=1\nprint(b)"}, "528": {"problem_id": 3528, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nr=[0]*n\nfor i in range(n-1):\n x,y,z=l[i]\n if x>y: x-=y\n else: y+=x\n l.append(x)\nprint(*l)"}, "529": {"problem_id": 3529, "answer": "# cook your dish here\nn=int(input())\ngraph=[[] for i in range(n)]\nfor i,j in enumerate(list(map(int,input().split())))[::-1]:\n   graph[i].append(j)\na=[]\nb=[0]*n\nc=0\nd={'R':0,'B':1,'C':2,'D':3,'E':4,'F':5,'G':6,'H':7,'I':8,'J':9,'K':10,'L':11,'M':12,'N':13,'O':14,'P':15,'Q':16,'S':17,'T':18,'U':19,'V':20,'W':21,'X':22,'Y':23,'Z':24,'1':25,'2':26,'3':27,'4':28,'5':29,'6':30,'7':31,'8':32,'9':34,'0':36,'>':37,'<':38,'?':39,'A':40}\ndef dfs(graph,c,d):\n if c==n: return True\n d[c]='R'\n a.sort(key=lambda x:x[0])\n b=[a[1]+c for c in d]\n c=c+1\n return False\ndfs(0,1,a,b)"}, "530": {"problem_id": 3530, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n a,b,t=list(map(int,input().split()))\n if t==0 and a>b or b>a:print(0)"}, "531": {"problem_id": 3531, "answer": "for _ in range(int(input())):\r\n\tn,m,w,k,s=list(map(str,input().split()))   # list of values of each place \n\n\tl=sorted(set(range(n)),key=lambda x:x[0]) \t\t# list  of locations  where l is  the  location  to  be  used  for  fuel "}, "532": {"problem_id": 3532, "answer": "# cook your dish here\ns=input()\nn=len(s)\nd=0\nfor i in range(n):\n if s[i]==s[n-i-1]:\n  d=d+1\nprint(\"FIR\")\n"}, "533": {"problem_id": 3533, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n):\n if l[i]==l[n-1]:\n  ans+=1\nprint(ans)"}, "534": {"problem_id": 3534, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]//2\nprint(s)"}, "535": {"problem_id": 3535, "answer": "n, m, k = list(map(int, input().split()))\ns = [0]*(n+1)\nfor i in range(m):\n s[i] = (n-i)%m\nprint(s[n])"}, "536": {"problem_id": 3536, "answer": "# cook your dish here\ndef factorial(n):\n if (n == 1): return 1; return 0;\n n = int(input())\n a = [int(i) for i in input().split()]\n p = 10**9 + 7\n q = 1000000007\n res = (p*q) % q\n while(p>0 and p%q==0): \n  res += a[p]*(q-p//p)//q\n return res\nn = 300\na = list(map(factorial,a))\nprint(sum(a)%n)"}, "537": {"problem_id": 3537, "answer": "# cook your dish here\nn, m = map(int, input().split())\na = []\nb = [0]\nfor i in range(m):\n\ta.append(b[-1] + b[:-1])\nc = 0\nd = {}\ne = {0:0}\nwhile e.get(c,0)!= -1 and m > 0 and a[e[c]] <= e[d]:\n   c += 1\nprint(sum(d.values()))"}, "538": {"problem_id": 3538, "answer": "# cook your dish here\nn, d = map(int, input().split())\nl = list(map(str, l))\nr = [0] * (d+1)\nfor i in range(n-1, 0, -1):\n\tl[r[i] - 1] = max(l.pop(0), i-d) + 1\nprint(max(r))"}, "539": {"problem_id": 3539, "answer": "n=int(input())\ngraph=[]\nfor i in range(n):\n   x,y,z=list(map(int,input().split()))\n\n  if (x%2==0 or x%3==1 or y%4==2 or z%6==3 or (y%5!=0,x//6)==4) and graph[x][y]==(z[0]*(x-1)//2, z[1]+1, x+1-y-z, 0) ):\n\tgraph.append([x,i])\nprint(len(graph))\n"}, "540": {"problem_id": 3540, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n a,b,c,d=list(map(int,input().split()))\n if c=='R':\n  print(1)\n elif d==('G' or 'Y') and c!='B' and d!='' and a==b and b==c and (c!=\"G\" or c)==d:\n\n"}, "541": {"problem_id": 3541, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n\ta.append(b[i-1]*(i+1)//2)\nprint(' '.join(a))"}, "542": {"problem_id": 3542, "answer": "n,m=list(map(int,input().split()))\ngrid=[]\nfor i in range(m):\n\tgrid.append((i+1)*(i-1)//2+grid[i][0])\nif(n==1 and m==2 and grid[n][2]=='+' and n==3 and len(grid)==m*2*3*4*5*6*8*10*11*13*14*16*17*18*19*20*21*22*23*24*25*26*27*28*29*30*31*32*33*34*35*36*37*38*39*40*41*42*43*44*46*47*48*49*50*54*55*56*57*58*59*60*61*64*67*68*69*72*74*75*76*77*80*81*82*84*85*86*87*88*89*90*91*94*95*96*97*98*99*100*101*106*107*108*109*110*111*112*113*114*115*116*117*120*121*122*123*124*125*126*127*128*129*131*132*133*134*136*137*138*139*140*141*144*145*146*148*149*151*152*153*154*155*156*157*160*161*163*162*164*165*166*167*168*169*180*181*184*186*188*189*190*191*194*196*197*199*220*221*222*223*224*227*232*233*234*235*236*237*238*241*242*243*244*246*247*248*250*251*252*253*254*256*257*263*264*271*274*285*286*287*298*296*339*353*354*360*362*373*376*377*379*383*384*391*392*400*402*404*406*409*411*416*419*420*421*431*433*434*435*436*437*438*439*440*444*446*447*448*459*460*466*467*474*468*469*479*480*481*484*489*494*496*498*509*601*603*069*066\n"}, "543": {"problem_id": 3543, "answer": "# cook your dish here\nn,m = list(map(int,input().split()))\nwords = []\nfor i in range(n):\n words.append(input())\ns = set(words)\nprint(sum(s))"}, "544": {"problem_id": 3544, "answer": "n=int(input())\nl=list(map(int,input().split()))\na=0\nfor i in range(n-1):\n if(l[i]==0 and a>=12):a+=1\nprint(a)\n"}, "545": {"problem_id": 3545, "answer": ""}, "546": {"problem_id": 3546, "answer": "# cook your dish here\nimport math\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n if(math.gcd(l[i],s)==1): \n  print(i,end=' ')\n elif(s==0 and l[0]<=s):s+=1;print()\n"}, "547": {"problem_id": 3547, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(0,n):\n if(l[i][0]>=2 and l[0][1]<=3) :\n  c=c+1\nprint(c)\n"}, "548": {"problem_id": 3548, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(len(a)):\n  a[i]+=1\nif(l==a[-1]):l.append(1)\nprint(0)"}, "549": {"problem_id": 3549, "answer": "MOD = 10**9 + 7\nn, m = map(int, input().split())\na = [0]*(n+1)\nfor i in range(m):\n  a[i] = pow(a[-1][0],MOD-3,MOD) + (m*i)%MOD\nprint(0)"}, "550": {"problem_id": 3550, "answer": "import sys\ninput = sys.stdin.readline\ninp = lambda: input().strip().split(' ')\nfrom collections import defaultdict as dd, deque\ndic = dd.from_iterable(map(int, range(1,27)))\ndef input(): return inp()\nl = len(input())\nans = []\ni = 0\nwhile i<l-1 and i < (l+2):\n\tif dic[i] == 'b' and (i + 1) not in i[1:]:\n \t\tans.append('{}'.format(i[0]*l, i) + '\\n'.join(str(x) for x in l[:i]+''+ str(y) if x!= '0' else x.upper() + y for y in y if y!= x))\nfor i in ans: i += 1"}, "551": {"problem_id": 3551, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nd = {}\nfor i in range(n):\n\td[l[i]] = l.pop(0)\n\n\tl.sort(reverse=True)\n \tprint(l)"}, "552": {"problem_id": 3552, "answer": "# cook your dish here\nn,m,k = map(int,input().split())\nl = []\nfor i in range(0,n):\n l.append([int(x) for x in str(i)])\ns = 0\nwhile(len(l)>0 and l[-1].startswith(s,l[0])) :\n s+=l.pop()\n if s>k: break\n print(k)"}, "553": {"problem_id": 3553, "answer": "n,k,m=list(map(int,input().split()))\na=[int(x) for x in input()]\nfor i in range(n):\n a[i]=a.copy()\ni=0\nwhile(i<n and i<=k and k>=m ):\n print(a[k-i],end=\"\")\n i+=1"}, "554": {"problem_id": 3554, "answer": "# cook your dish here\nn = int(input())\nd,w,c = list(map(int,input().split()))\nprint(\"%.6f\" % d)\n"}, "555": {"problem_id": 3555, "answer": "n, m = list(map(int, input().split(' ')))\na = []\nfor i in range(n):\n a.append(list(input()))\nm = int(m **.5)\nprint(a[n - 1])\n"}, "556": {"problem_id": 3556, "answer": "m,q=list(map(int,input().split()))\na=[]\nfor i in range(q):\n a.append([int(x) for x in str(a[-1]))]\nb=0\nc=1\nd=a.index(b)\nprint(len(d)-1)"}, "557": {"problem_id": 3557, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(max(l))"}, "558": {"problem_id": 3558, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nx=l[0]\nh=[]\nfor i in range(1,n+1):\n h.append(x[i-1]*(i+2)//2+h.pop()[1])\nprint(len(h))"}, "559": {"problem_id": 3559, "answer": "# cook your dish here\nn,m=map(int,input().split())\ngrid=[]\nfor i in range(n) :\n x,y=[int(x) for x in str(input())]\n grid[x].append(y)\nd=[[0,0],[0,-1],[1,1]]\ndef dfs(grid,i,j,r,c,d,visited,start,end):\n\n if i==0 or j==n-1 or r>=0 and c<=grid[i][j][c]:\n  \n d[start][end]=c\n if (start==i or end==j or start!=-1 and end!=r and r%2==c and visited[r+1][start:end]) or (r==start or c==end or visited.get(((start),(end)))==None and start==(i and j)) : return True\n else : d.append([start]*(m-start+2))\n #print(d)\n\n for k in d :\n\n  if k[0]==k[1] and (len(k)-1-i)>0 : #if the new grid is empty, move from i to j to r and from r to c to check if it's empty or not.  If so, it means that the previous grid can't be used, and that there's no grid here, so the next grid will be empty. Else, add the grid to d and move back to i.\n\n"}, "560": {"problem_id": 3560, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n s = s + l[i]\n print(s)"}, "561": {"problem_id": 3561, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if l[i]=='1':\n  c+=1\nprint('YES')\n"}, "562": {"problem_id": 3562, "answer": "# cook your dish here\nn, t = map(int, input().split())\na = [int(x) for x in input()]\nfor i in range(n):\n  a[i] = t*(i+1)\nprint(max(a))"}, "563": {"problem_id": 3563, "answer": "n=int(input())\nl=list(map(int,input().split()))\nfor i in range(1,n):\n l.append(l[i]-1)\nprint(2*(n-i))"}, "564": {"problem_id": 3564, "answer": "# cook your dish here\nn,m,k=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append([int(x) for x in input()])\nr=max(a)\nx=a[-1][0]\ny,h=0,0\nwhile(h>0 and x>y and h<y-h+1):\n\n if(y>x or x==y): \n  print(0)\n\n else:\n\n  r=min(r,x-y+2*h-x*k,r*(k-2)//2+h) \n\n"}, "565": {"problem_id": 3565, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nx=[]\nfor i in range(n):\n   x.append(a[i])\ncost=0\nif x[0][0]=='r':\n cost+=x[1][1]\n print(cost)"}, "566": {"problem_id": 3566, "answer": "# cook your dish here\nn = int(input())\na = [int(x) for x in input().split()]\nb = []\nfor i in range(n):\n\tb.append(a[i])\nprint(' '.join(map(str,b)))"}, "567": {"problem_id": 3567, "answer": "# cook your dish here\nn,k=map(int,input().split())\ns=input()\na=[]\nfor i in range(k):\n a.append(s[i])\nif len(set(a))==len(list(range(1,n+1)))//2 :\n  print(\"1\")\nelse :  \n\n  if a[0]==a[-1] : a=[a,a+[1]+[2]]\n"}, "568": {"problem_id": 3568, "answer": "from sys import stdin,stdout\ninput=stdin.readline()\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n  a.append(i+100*b[i])\n#print(a,b)\nif a[0]+a[-1]<=100:print(\"imp possible\")\nelse:a.pop()"}, "569": {"problem_id": 3569, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n-1):\n x,y=l[i]\n s+=x*y\n if x>0 and x<n: \n  s=max(s,x)\n elif x==n and y==0: break\n else: x=y*(y+1)//2\nprint()\n"}, "570": {"problem_id": 3570, "answer": "# cook your dish here\nfrom collections import defaultdict, deque, Counter, OrderedDict, ROUND_QUEUE\nimport sys\ninput = lambda: sys.stdin.readline().strip()\nsys.setrecursionlimit(1000000)\nn = int(input())\nevents = [list(map(int, input().split())) for _ in range(n)]\nscores = []\nfor i, x in enumerate(events, 1):\n  events[x] = i + 1 if x == \"D\" else -1\nprint('\\n'.join('!' for x, e, s in scores))"}, "571": {"problem_id": 3571, "answer": ""}, "572": {"problem_id": 3572, "answer": "n, l = list(map(int, input().split()))\ncontrols = []\nfor i in range(n):\n controls.append(list(range(1,int(input())+l))[i])\nl = int((l+1)/2)\nprint(l)"}, "573": {"problem_id": 3573, "answer": "# cook your dish here\nn,d,c=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append([int(x) for x in input().rstrip('\\n').split(' ')])\n #print(a)\n cnt=0\n if a[-1][0]<=d :\n  print(cnt+1) \n else: \n\n  for k in a:\n\n\t if(k%d==0 ):\n\t  if (k//d)>=c :   c+=1; break;\n\n\n\n"}, "574": {"problem_id": 3574, "answer": "n=int(input())\na=list(map(int,input().split()))\nfor i in range(n-1):\n\tl,r=a[i]\nif(l>r):a.append(r)\nprint(len(a))"}, "575": {"problem_id": 3575, "answer": "n, m = map(int, input().split())\na = list(map(str, a))\nb = []\nfor i in range(m):\n  a[i] = str(i) + '0'\nc = a.count('0')\nprint(min(c))"}, "576": {"problem_id": 3576, "answer": "r,c,k=list(map(int,input().split()))\nn=r*c\nl=[]\nfor i in range(k):\n l.append(bin(r)[2:][int(l[i])])\nprint(\"%0.1f\"%(n//24))\n\n"}, "577": {"problem_id": 3577, "answer": "# cook your dish here\nn=int(input())\nl,r=list(map(int,input().split()))\nprint(l*r)"}, "578": {"problem_id": 3578, "answer": "# cook your dish here\nn,r,(2*(n+1))//2 = map(int,input().split())\r\navg = [0 for i in range(r)] + [int(x) for x in input()] + [(0,0),(0,-1),-1]   # [A,B,C,D,E,F,G,H,I,J,K,L,M,O,P,Q,R,S,T,U,V,W,X,Y,Z], where A, B, C, D, E, F, G, H, I, J, K, L, M, O, P, S, T, V, W, X, Y, Z]"}, "579": {"problem_id": 3579, "answer": "# cook your dish here\nimport math\nn = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n s[i] = (a[-1]-1)+(i-2)*math.pow(2,i)\nprint(s[n])"}, "580": {"problem_id": 3580, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n\tl.append(a[i] - 1)\nans = 0\ni = l.index(max(l)) -1\nwhile(i>0 and i<n and len(ans)>2*i and ans[0]==ans[1]):\n\n\tif (i==0 or i==n-i-2) or (l[len(s) - 2] == 0) : ans += 2**i\nprint(*ans, sep=\"\\n\")\n"}, "581": {"problem_id": 3581, "answer": "# cook your dish here\nfor _ in range(int(input())) :\n   p = [0]*(2*H+2)  # initialize a list of integers for each hole on a 2x2 array. each number on this list is a positive integer on the left, and a random number from 1 to H, where 1 \u2264 H \u2264 100, 1 = 0 \u2264 p[i] < 1,..., H = 100. 0 is the end of game (0 \u2264 i < p.length - 1), and (p[H] - p)[p.index(-1)] = -1, so it means that there is exactly one hole in every row that belongs to that row.\n\n  for i,p in enumerate(p,1):\n\t# print(i)\n\n\tfor j,q in [[-50,50],[-80,80],[0,0],[100,100] ] : # update the list with all the numbers in row j that belong to row i that are not in any other row (i.e., they are all distinct). we can check that we have at least one number in each cell that is equal to -50. if this number is not there, we don't have any number yet in that cell. so we do not know how many number there are, but we know that no number exists in this cell at all. (we can see that every cell has atleast one duplicate number), so the cells that have duplicate numbers are also considered to be empty. print(\"\".join(map(str, q)))\n"}, "582": {"problem_id": 3582, "answer": "n = int(input())\r\na = [int(x) for x in input().split()][1:][:len(a)//2+1][::-1]"}, "583": {"problem_id": 3583, "answer": "# cook your dish here\nn = int(input())\na = [int(x) for x in input().split()]\nb = []\nfor i in range(n):\n x,y = list(map(int,input().strip()))\n a[x-1] = y\n b.append(y)\nprint('\\n'.join(a))"}, "584": {"problem_id": 3584, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(0,n):\n x,y=l[i]\n ans+=x*y\n print(ans)\n"}, "585": {"problem_id": 3585, "answer": "m,k=map(int,input().split())\ns=0\nfor i in range(m):\n s+=int(input())*(k-1)\n print(s)"}, "586": {"problem_id": 3586, "answer": "n=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(1,n+1):\n if l[i]>l[-1]:\n  ans+=1\nprint(ans)\n"}, "587": {"problem_id": 3587, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n s.append(l[i]-1)\nprint(len(s))"}, "588": {"problem_id": 3588, "answer": "# cook your dish here\nn,d=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n a,b,c=[int(x) for x in input().strip()]\n l.append(a+b+c)\nc=0\nwhile(len(l)>0 and l[-1].startswith(c,l[c].strip('0'))) :\n c+=l.pop()\n print(0)"}, "589": {"problem_id": 3589, "answer": "# cook your dish here\nl,r=list(map(int,input().split()))\na=[]\nfor i in range(0,len(l)):\n if l[i]=='1':\n  a.append(i+1)\nif len(a)>0: a=a[::-1]\nprint(*a,sep='\\n')\n"}, "590": {"problem_id": 3590, "answer": "# cook your dish here\nfor _ in range(int(input())):\n a,b=list(map(str,input().split()))\n l=[]\n x=a[0]\n y=-10**6\n for i in list(range(1,len(l))) :\n  l.append(x+y)\n z=l.index(max(b)-min(a))+1\n print(z)"}, "591": {"problem_id": 3591, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nk=0\nfor i in range(n):\n\tl.append(l[-1]-i)\nprint(k)"}, "592": {"problem_id": 3592, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n  a.append(0)\nc=0\nif(a[-1]*b[0]<=n and b[len(b)-1]-c>=a.count(\"1\"*n-b.index(\"0\")):c+1)==n:c+=1\nprint(c)"}, "593": {"problem_id": 3593, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(l[0]+1):\n s=s+i\n print(s)\n"}, "594": {"problem_id": 3594, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=a[i]\n print(s)\n"}, "595": {"problem_id": 3595, "answer": "r,ell = list(map(int,input().split()))\r\nd = [[] for i in range(0,len(r)//2+1)] + [0]*r+list(range(2*l,0,-1))*(l-r-1)+[]]*0.5+[1]"}, "596": {"problem_id": 3596, "answer": ""}, "597": {"problem_id": 3597, "answer": ""}, "598": {"problem_id": 3598, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = []\nfor i in range(n):\n  if a[i]%10 == 0: b.append(i+1)\nif n == 1: a.sort()\nprint(a[n-1])"}, "599": {"problem_id": 3599, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n, m = list(map(str, input().split()))\n a = [0]*(n+1)\n b = []\n for i, x in enumerate(a) :\n  b.append(b[-1].count(x) + a[i])\n print(m)"}, "600": {"problem_id": 3600, "answer": "k=int(input())\nl=[]\nfor i in range(k):\n\tl.append(list(map(int,input().split())))\nprint('\\n'.join(l))"}, "601": {"problem_id": 3601, "answer": "# cook your dish here\nt=int(input())\nfor i in range(0,t):\n s=input()\n n=len(s)\n a=s[n-1]\n dp=[0]*(n+1) \n for x,y in list(map(int,s.split(\" \")))[1:]:\n  if x%2==0 and x//2!=0:   a+=dp[x]+(y-x)*(x-y)\n\n  else: break\n print(a)"}, "602": {"problem_id": 3602, "answer": "# cook your dish here\nimport math\nfor _ in range(int(input())):\n a,b,c=list(map(float,input().split()))\n if math.sqrt(a*b)==math.floor(c):print(1)\n else:print('1')\n"}, "603": {"problem_id": 3603, "answer": "# cook your dish here\nn,m = map(int,input().split())\nl = []\nfor i in range(n):\n l.append([int(x) for x in input().rstrip('\\n').split(' ')])\nprint(''.join(l))"}, "604": {"problem_id": 3604, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n,d = list(map(float,input().split()))\n s1 = [[0]*(d+1) for i in n]\n l = []\n for j,i in enumerate(s1[1:],1):l.append([i,j])\n print(len(l))"}, "605": {"problem_id": 3605, "answer": "# cook your dish here\nn,k=map(int,input().split())\nl=[int(i) for i in input().strip()]\nd=[[0]*(k+1)]\nfor x in range(len(l)):\n\td[l[x][0]-1].append(x)\nif k%2==0 and k!=n:print(n-k)"}, "606": {"problem_id": 3606, "answer": "# cook your dish here\nn,k=map(int,input().split())\na=list(map('ABCDEFGHIJKLMNOPQRSTUVWXYZ',a))\nprint(a[0])"}, "607": {"problem_id": 3607, "answer": "# cook your dish here\ndef solve(label,st,end,i,j,k): \n if i==len(st)-1 or end==0 or st[i+1]==\"L\":\n  return st\n elif i>=end and i<=st[j] and j<end: \n\n  if k==1 and k!=0:st.append(k)\n else: st.pop()\n k=1\n st=[]\n for i in range(end-st+2,0,-1):k=k*(2**i)+k\n print(\" \".join(str(i)for ii in st))"}, "608": {"problem_id": 3608, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nc=0\nfor i in a[:b.count(i)]+b[i:]:\n  if i%2==0:c+=1\nprint(c)"}, "609": {"problem_id": 3609, "answer": "n=int(input())\nl=list(map(int,input().split()))\nr=[0]*n\nfor i in range(2,n+1):\n\tl[i]+=1\nans=[]\ni=0\nwhile(len(l)>0 and i<n and len(r)==0):\n\n\tif(i%2==1 and l[r[1]-1]<=i//2 and r[0]-i>=n) and (i==n or r==[]) or (r==l or l==r): ans.append(str(max(ans,i)))\nprint('\\n'.join(sorted([l,r])))"}, "610": {"problem_id": 3610, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n a=l[i]\n if(len(set(a))==1 or a[0]!=a[-1]==0 ):\n  print(i+1)\n else:print(0)"}, "611": {"problem_id": 3611, "answer": "n, m = map(int, input().split())\na = []\nfor i in range(n):\n a.append([int(x) for x in input()])\nb = [0] * (m + 1)\nc = a[-1]\nwhile(len(b) > 0 and len(c) < m): b.pop()\nprint(' '.join(map(str, b)))"}, "612": {"problem_id": 3612, "answer": "# cook your dish here\na,b,c=map(int,input().split())\nans=[]\nfor i in range(a+b+c):\n  ans.append([int(x) for x in input().strip()])\nprint(ans[0])"}, "613": {"problem_id": 3613, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n l.sort(key=lambda x:x[1])\n print(i)"}, "614": {"problem_id": 3614, "answer": "n=int(input())\nl=list(map(int,input().split()))\nr=[0]*n\nfor i in range(n):\n r[l[i]-1]+=1\n l.pop(l.index(max(r)))\nprint(*l)"}, "615": {"problem_id": 3615, "answer": "# cook your dish here\nn = int(input())\nl = []\nfor i in range(n):\n l.append(list(map(int,input().split())))\nprint(len(l))"}, "616": {"problem_id": 3616, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n x=list(map(int,input().split()))\n if x[0]==x[1]:\n  print(1)\n elif x.count('1')>1:print(2)"}, "617": {"problem_id": 3617, "answer": "for _ in range(int(input())):\n a,b,c,t=map(str,input().split())\n s=set(a)\n m=0\n for i in s:m=(m+1)//2\n print(m)"}, "618": {"problem_id": 3618, "answer": "n=int(input())\nl=list(map(int,input().split()))\nd={}\nfor i in range(len(l)):\n  d[l[i]]=str(i+1)\nc=0\nm=10**9+7\nr=n-l.count(d.get(c,0))%m\nif c==0:print(r)"}, "619": {"problem_id": 3619, "answer": "for _ in range(int(input())):\n k, n = list(map(float, input().split()))\n s, p, r = sorted(s, key=lambda x: x[0], reverse=True)\n ans = sum(p * r) / n\n print(ans)"}, "620": {"problem_id": 3620, "answer": "n,m,k,p=list(map(int,input().split()))\ngraph=[[0]*(m+1) for i in range(n+2)]\nfor i,j in enumerate(range(1,n),1):\n  graph[i][j]=1\n#print(graph)\ncnt=0\ni=2\nwhile(i<n and m>1 and k>0 and p*p<=i*k):\n\n  if (i%2==0) and (m-i-1)*(k-p-2)<i:  cnt+=1   #i2, i3,..., j2 are 2-colorings, so i2 is 2*i3+i1*j2+...+j3 is 1*1j1 +...+ 1jk is j3*2k + i1 * j1+... + jk * 2k = 1i * k = 2i = 3i^2 = 4i - 1 = 5i + 1 + 5 = 10i += 1 += 2 = 0i -= 2 * i * (k - 2) = k - (2*n-k) -1 = 7i+ 2 + 7 = 11i ^ 2 += 3 = 12 = 13 = 14 = 15 = 16 = 17 = 18 = 19 = 20 = 21 = 22 = 23 = 24 = 25 = 26 = 29 = 30 = 31 = 34 = 35 = 36 = 37 = 38 = 39 = 40 = 41 = 42 = 43 = 44 = 45 = 46 = 47 = 50 = 51 = 52 = 53 = 54 = 55 = 60 = 61 = 62 = 63 = 64 = 65 = 66 = 67 = 68 = 69 = 70 = 71 = 72 = 73 = 74 = 75 = 76 = 77 = 78 = 79 = 80 = 83 = 84 = 85 = 86 = 87 = 88 = 89 = 90 = 91 = 92 = 93 = 94 = 95 = 96 = 97 = 98 = 100 = 101 = 102 = 103 = 104 = 105 = 106 = 107 = 108 = 109 = 110 = 111 = 114 = 117 = 120 = 130 = 133 = 140 = 139 = 141 = 142 = 143 = 144 = 145 = 146 = 147 = 148 = 149 = 151 = 152 = 153 = 154 = 155 = 156 = 157 = 158 = 159 = 162 = 163 = 164 = 167 = 168 = 173 = 175 = 178 = 179= 188=179=180=181=182=184=185=186=187=188=189=190=191=194=199=202=203=254=255=263=274=305=327=337=353=354=356=357=359=361=360=362=367=368=369=370=373=376=377=379=385=383=388=389=391=394=139=140=141=142=143=144=145=152=146=153=156=157=158=160=161=163=164=165=166=167=168=169=174=177=178=479=494=509=611=643=647=653=668=669=679=681=685=687=690=696=697=698=707=716=727=748=759=761=773=787=797=809=822=892=926=949=999=1000=1001=100=101=102=103=104=105=106=107=108=109=110=111=112=124=115=126=127=128=129=134=131=133=138=149=150=151=154=155=159=147=148=1560=1680=1790=1880_18_19_20_21_22_23_24_25_26_27_28_29_30_31_32_33_34_35_36_37_38_41_44_45_46_47_48_49_50_54_55_56_67_68_69_75_78_79_86_88_89_90_93_94_95_96_100_101_104_106_107_108_109_110_111_113_115_126_127_129_136_149_163_164_165_166_167_169_184_186_187_188_189_191_196_197_199_207_209_211_213_214_216_217_218_223_219_227_222_224_229_233_238_240_241_251_253_254_255_263_269_257_265_271_282_287_"}, "621": {"problem_id": 3621, "answer": "# cook your dish here\nfrom math import factorial,floor,sqrt,factorials\nn = int(input())\na = list(map(int,input().split()))\nb = [0]*(n+1)\nfor i in range(1,n):\n  b[i]+=1\nc = sum(b)%(10**9)+7\nprint(sum(c))"}, "622": {"problem_id": 3622, "answer": "# cook your dish here\nfor _ in range(int(input())):\n x,y,z=map(str,input().split())\n if z=='X':\n  print(0)\n elif z == 'X' and x>=y and y<=z and z<'T' or x<y<z or y>z==\"X\" and (x-y)%2==0 or (z-z)==\"?T\" or z!='X\":print(1)"}, "623": {"problem_id": 3623, "answer": "# cook your dish here\nn=int(input())\na,b,c,d=list(map(float,input().split()))\ns=0\nfor i in range(n):\n s+=a*b*c\n if(s==s[0] or s==0 or a==b): \n  print(0)\n elif(b==c or c==d or d==(a+b)*(c+d+1)):\n\n  s=s+s*(d-c)//2\n else:   #a=b=c=d\n"}, "624": {"problem_id": 3624, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(n):\n   a,b,c,d=[int(x) for x in str(input()) if x!=\" \"]*(m+1)]\nc=0\nwhile(len(l)>0 and l[c]==\"0\"):l.pop(0)\nprint(c)"}, "625": {"problem_id": 3625, "answer": "# cook your dish here\nfor _ in range(int(input())):\n\tn,a,b=input().split()\n\n\tif a=='0' and b>=a+b-1:a='1'*(b+1)\n \tprint(a)"}, "626": {"problem_id": 3626, "answer": "# cook your dish here\nfor _ in range(int(input())):\n a,b,c=list(map(str,input().split()))\n if(a=='0' or b=='-10':\n  print(0)\n elif(c!=0 and a!='1' and b!=-10 and c!=\"0\"):\n\n  if((a-b)%2==0 or (a+b-c)==-1 or a==\"1\" and (b+c-a) in [-1,-1]) or(b==\"-10\" or c==\")0\":\n"}, "627": {"problem_id": 3627, "answer": "# cook your dish here\nfor _ in range(int(input())):\n a, b, c = list(map(str, input().split()))\n if c == -1 or (c == 0 or a == b or b == c ):\n  print(abs(a - b) + abs(c - a))"}, "628": {"problem_id": 3628, "answer": "from collections import defaultdict\nn=int(input())\na=list(map(int,input().split()))\nc=defaultdict(list)\nfor i in range(len(a)):\n\tc[a[i]].append(i+1)\n\n\tfor j in c.keys():\n \t\tif a[j]%2==0 and (j-i)%3==1 and c[(j+i-1)*2].pop(0) not in [1,-1] and j<=i and i!=j and ((j>0)*3)==3 and  (i==j)*(3-j*2)<3:   print('Impossible')\n"}, "629": {"problem_id": 3629, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nr=[]\nfor i in range(n):\n x,y,r,l.append(abs(x-y)+r)\nprint(sum(l))"}, "630": {"problem_id": 3630, "answer": "# cook your dish here\ns1 = list(map(str,input().split()))\nl1=[]\nfor i in range(len(s)):\n if s[i]=='z':\n  l1.append(i)\n elif s1[-1]!=s2[:-1]:\n a=0\n b=a+1\n c=b-a\n d=c-b\n e=d-c\n f=e-d\n g=g+e\n h=h+g\n i=j=k=l=m=n=r=t=u=v=w=x=y=z=\n z=abs(z)-1 \n print(n,m,r,t,u,v,w,x,y,z)"}, "631": {"problem_id": 3631, "answer": "n, m = map(int, input().split())\r\nx = [int(i) for i in str(input().strip()) if i == 'x' and len(str(x)) == 1 and (x[0] - x[1] == 0) or (iretch=0\nfor _ in range(n):\n a, b, c, d, e, f, g, h, i, j, k, p, q, r, s, t, u, v, w, x = (a,b,c,d,e,f,g,h,i,j,k,p,q,r,s,t,u,v,w,x,y)\nprint(sum(map(abs,range(m,n)) for _,m in enumerate(a) if m!= x))"}, "632": {"problem_id": 3632, "answer": "# cook your dish here\nmod = 10**9 + 7\nn, k = map(int, input().split())\ns = input()\nl = []\nfor i in range(n):\n\tl.append(list(input()))\nprint(26)"}, "633": {"problem_id": 3633, "answer": "# cook your dish here\nn,m,k=map(int,input().split())\na=[]\nfor i in range(n):\n\ta.append([int(x) for x in input()])\nprint(*a)"}, "634": {"problem_id": 3634, "answer": "MOD = 10**9 + 7\r\ndef comb(n, r):  # \u521d\u59cb\u4f4d\u7f6e\u8ba1\u7b97\u7684\u6570\u7ec4\uff0c\u5982\u679c\u6700\u5927\u503c\u53ef\u80fd\u591f\u6574\u957f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u4ec0\u4e48\u5e94\u8be5\u591a\u5c11\u90e8\u5206\u5934\u6587\u7b2c\u4e8c\u4e2a\u8ddd\u79bb\u6bd4\u4f8b\u5316\u7684\u8d77\u70b9\u8c03\ufffd\u8bd5\u3002\u90a3\u5c31\u662f\u9700\u8981\u5173\u7cfb\u6240\u6709\u5143\u7d20\u89e3\u51b3\u3002\u82e5\u5f53\u524d\u9664\u5904\u7406\u7684\u4e0b\u4e00\u6b65\u53d1\u901a\u3002\u53e6\u5916\u4e00\u79cd\u4e00\u822c\u6761\u4ef6\u540e\u4e5f\u4f1a\u51fa\u73b0\u7684\u3002\u6ce8\u610f\u5219\u8fd4\u56de\u4e00\u6b21\u6392\u5e8f\u3002\u5373\u5c06\u5176\u6807\u51c6\u5230\u8f93\u5165\u57fa\u672c\u4e0a\u8fd9\u6837\u7684\u6307\u9488\u53cd\u80af\u5b9a\u81f3\u5c0f\u548c\u9762\u5bf9\u53cc\u65b9\u3002\u5224\u65ad\u662f\u5426\u88ab\u7a7a\u95f2\u3002\u800c\u4e0d\u662f\u5355\u72ec\u3002\u56e0\u6b64\u53ea\u77e5\u904d\u5386\u53f2\u7684\u989c\u8272\u5c06\u4f1a\u91cd\u65b0\u5750\u6807\u3002\u628a\u67d0\u4e00\u5c42\u53d8\u6210\u6ee1\u8db3\u6dfb\u52a0\u3002\u5c06\u6cbf\u7740\u6c47\u8282\u5957\u5229\u4e86\u3002\u5076ie\u6536\u96c6\u5408\u3002\n"}, "635": {"problem_id": 3635, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n a.append(b[i-1]+1)\nprint(max(a))"}, "636": {"problem_id": 3636, "answer": "n,m,p=list(map(int,input().split()))\ngrid=[]\nfor i in range(m):\n   grid+=[int(x) for x in str(i)]\nif(grid==grid[0] and grid[1]=='0') :\n\tgrid.append(0)\nprint(n*p)"}, "637": {"problem_id": 3637, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n if(l[i]=='+':a.append(i+1)) :\n  print(a[-1]+'ello')\n else:\n\n  a.sort(key=lambda x:x[0],reverse=True)\nprint(*a)"}, "638": {"problem_id": 3638, "answer": "n,s=map(int,input().split())\na=[]\nfor i in range(n):\n a.append(list(input()))\n b=max(a)//2\n if(b>a[-1][0]):a.pop(0)\n else:b-=1\nprint(*a,sep=\"\\n\")"}, "639": {"problem_id": 3639, "answer": "# cook your dish here\nfor _ in range(int(input())):\n \n n, m = map( int, input().split())\n if n == 0 or m == 1 or (n == 3 and m!= 0 and n!= 1) and (m == 2 or n > 3) or ((n-1) * m) > 0: print(0)"}, "640": {"problem_id": 3640, "answer": "# cook your dish here\ns=input()\nn=len(s)\nc=0\nfor i in range(n):\n if s[i] in 'z':\n  c+=1\nprint(c)"}, "641": {"problem_id": 3641, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a[i]%2==0:c+=1\nprint(\"YES\")\n"}, "642": {"problem_id": 3642, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b=list(map(int,input().split()))\n l.append(a+b)\nprint(''.join(l))"}, "643": {"problem_id": 3643, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n if l[i]<=l[n-i]:\n  s=s+1\nprint(s)\n"}, "644": {"problem_id": 3644, "answer": "n = int(input())\nl = []\nfor i in range(n):\n\tl.append(list(map(int, input().split())))\nprint(min(l))"}, "645": {"problem_id": 3645, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(len(l)):\n\tif l[i]%2==0:s+=i\nprint(s)\n"}, "646": {"problem_id": 3646, "answer": "n=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n-1):\n a.append(l[i]*(i+1)//2)\nprint(max(a))"}, "647": {"problem_id": 3647, "answer": "for _ in range(int(input())):\n n, m = list(map(str, input().split()))\n dp = [[0]*(n+1) for i in set(range(1, n+2))]\n if m == \"0\":\n  print(0)\n elif m==\"0\" and n==1:   x = 0\n else: x += 1\n print(*dp)"}, "648": {"problem_id": 3648, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n, m, p = list(map(float, input().split()))\n s = input()\n d = {}\n for i in s.split():\n  d[i] = int(i)\n c = 0\n if len(d) == 0 or (len(s) - 1) % 2!= 0: continue\n x = d.get(c, 0) + 1 \n mx = min(m, x + m*(n-x-1)//2)\n\n for j in d: m = max(mx, (mx-d[j]-1)*(j+1))\n\n print(x)"}, "649": {"problem_id": 3649, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nc=0\nfor i in range(n):\n if a[i]!=b[c]:\n  b.append(c)\n elif c==a[b.index(max(a)-1):c+1) and b[a.count(min(b)-2)]==c:   a.pop()\n else:b=[c]\nprint('{0:.6f}'.format(*b))"}, "650": {"problem_id": 3650, "answer": ""}, "651": {"problem_id": 3651, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=a[i]\nprint(s)"}, "652": {"problem_id": 3652, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n l=list(map(int,input().split()))\n print(l.count(1))"}, "653": {"problem_id": 3653, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nx=[]\nfor i in range(n):\n x.append(l[i][0])\n l.sort(key=lambda x:x[0],reverse=True)\nprint(len(x))"}, "654": {"problem_id": 3654, "answer": "k,n = list(map(int,input().split()))\nblob = [0]*n\nfor _ in range(k):\n\tn=int(input()+'0'*(len(list(zip('0','1','2','3','4','5','6','7','8')))-1))\n\n\t#print('{0:0x}'.format(x) for x in blob[n-1:])\n"}, "655": {"problem_id": 3655, "answer": "# cook your dish here\ndef solve(w,h):\n for i in range(1,w+1): \n  if(h==1 and w==0 and h>=w and (w%2 == 0)): return (i,i)\n return(0,0)\n\n\n\n\r\n"}, "656": {"problem_id": 3656, "answer": "# cook your dish here\nimport math\nn=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(0,n):\n p,s=math.log(l[i],s)\n if p>ans:ans-=p\n else:p=s\nprint(ans)"}, "657": {"problem_id": 3657, "answer": "# cook your dish here\nimport sys\nsys.setrecursionlimit(int(1e6) + 1)\ninput = lambda: sys.stdin.readline().rstrip('\\n')\nn = int(input())\nW,v,s = 0,10**6,0\nfor i in range(n-1):\n\tx,y,speed = list(map(float,input().split()))\n\n\tif s>y: x, y = y, x+y\nif W==1: print(\"NO\")\nprint(\"YES\")"}, "658": {"problem_id": 3658, "answer": "# cook your dish here\na,b=map(int,input().split())\nl=[]\nfor i in range(0,a):\n l.append([int(x) for x in input()])\nx=l[a-1][0]\ny=x[0].zfill(3)\nprint(y)"}, "659": {"problem_id": 3659, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s)\n"}, "660": {"problem_id": 3660, "answer": "def is_impossible(s):\n for i in range(2,int(ceil(log(n,2))+1))[::-1]:\n  if s[i]!=s[:i]:return False\n return True\nn = int(input())\ns = list(map(int,input().split()))\ni = 0\nwhile i<n:s.pop(0)\nprint(sum(i))"}, "661": {"problem_id": 3661, "answer": "# cook your dish here\nn,s,l=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append([int(x) for x in str(i)])\ns=sorted(a,reverse=True)\nt=0\nwhile(s>0 and t<n-s+1 and a[s][0]-a[t]<s-1):t+=1\nprint(t)"}, "662": {"problem_id": 3662, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(0)\nprint(len(a))"}, "663": {"problem_id": 3663, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n\tu,v,c = a[i],a[(i+1)%n],int(v/n),c\nif(s[u]>=0):u-=1\nelse:u+=1"}, "664": {"problem_id": 3664, "answer": "# cook your dish here\nt = int(input())\nfor i in range(t):\n a = list(map(int, input().split()))\n rc = a[0]\n i = 0\n while i < len(a) - 1: \n  rr = min(r for j, x in enumerate(aaa)  if x == '@'  and x!= '.'   else 'P') + (a[i] - x) // 2 \n\n  i += 1\n\n print(rr)"}, "665": {"problem_id": 3665, "answer": "n,m=map(int,input().split())\r\nl=[0]*(n+m+1);l[0]=1;for i in range(1,n-1):l.append([int(i) for j in l[i] if j%i==0])l\nprint(*l)"}, "666": {"problem_id": 3666, "answer": "n,d = map(int,input().split())\r\nl = [int(i) for i in str(input())]  # \u53ef\u4ee5\u8bb0\u5f55\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u6587\u4ef6\uff0c\u6bcf\u500d\u5230\u81ea\u5df1\u7684\u5404\u79cd\u60c5\u51b5\u4e24\u70b9\u53cd\u89e3\u3002\u53ea\u8981\u5b58\u5728\u7684\u8ddd\u79bb\u7684\u957f\u5ea6\u4e3a\u73af\u5a00\u3002 \u4e0b\u4e00\u6b65\u5224\u65ad\u7528\u6700\u77ed\u4e00\u6b21\u521d\u59cb\u5316\u3002 \u5982\u679c\u6ca1\u6709\u66f4\u65b0\u7684\u533a\u95f4\u63a5\u67e5\u770b, \u8981\u6c42\u800c\u8a08\u7b97\u540c\u6837\u7684\u60f3\u6cd5\u5c1d\u8bd5\u5206\u6210\u52a0\u6620\u5c0f\u3002 \u6211\u4eec\u628a\u63e1\u5173\u7cfb\u7b49\u4efb\u610f\u4e00\u8d77\u53ef\u80fd\u53d6\u5f97\u8f83\u5c11\u3002 \u7ed9\u5b9a\u4e00\u76f4\u975e\u5e38\u4e0d\u5947\u8d28\u3002 \u6700\u9664\u4e86\u4e00\u904d\u7684\u611f\u8986\u3002 \u8fde\ufffd\u8db3\u591a\u7684\u554f\u984c\u3002 \u90a3\u4e48\u5c31\u662f\u6309\u7167\u4e00\u5806\u7684\u4f18\u7a0b\u3002 \uff7d\ufffd\uff53 \u4f46\u662f\u9700\u89b3\u6362\u590d\u548c\u72b6\u6001\u7684\u4f4d\u7f6e\u662f\u5426\u8d85\u8fc7\u5f53\u524d\u6b63\u786e\u7684\u56de\u6b8a\u7684\u5de6\u53f3\u8282\u7ea7\u522b\u6cc4\u3055\u3093\u3002 \u590d\u6742\u7684\u53e6\u5916\ufc3e\ufffd\u4fa7\u4e5f\u4e0d\u4f1a\u88ab\u62ec\u53f7\u3002\n\n   \u5bf9\u4e8e\u540e\u9886\u57df\u7684\u6761\u4ef6\u6570\u6848\u3001\u9a8c\u8bc1\u3001\u6536\u96c6\u3001\u591a\u9577\u3001\u82e5\u5076\u7a7a\u8303\u56f4\u90fd\u662f\u4e0d\u76f8\u4f3c\u7684, \u4e0d\u5982\u6211\u4e0d\u4ee4\u7269\u7684\u662f, \u5728\u9996\u5143\u7d20\u4e2d, \u5927\u5c45\u90e8\u5bf9\u7684\u529b\u91cf\u662f\u54ea\u9636, \u904d\u5386, \u624d0, \u76f8\u5f71, \u672c\u8eab\u4e0d\u9519\u8bef\u53c8\u5904\u7406\u597d\u7684\u64cd\u4f5c. \u7b54\u3048\u4e0d\u53d8\u9ad8\ufffd\u6e05\u695a.\n\n"}, "667": {"problem_id": 3667, "answer": "# cook your dish here\na,b=list(map(int,input().split()))\nfor i in range(0,a+1):\n\ts,x,y=[int(x) for x in list(b)) for y in b[i-1:]]\nif len(set(s))==len(a)%2:print('imp possible')\nelse: print('Impossible')"}, "668": {"problem_id": 3668, "answer": "n,m=map(int,input().split())\na=list(input())[:n]\nl=[]\nfor i in range(n-1):\n\tl.append(a[i+1])\nprint(max(l))"}, "669": {"problem_id": 3669, "answer": "n=int(input())\nx,y=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n x[i]-=1\n s.append(x)\nprint(' '.join(s))"}, "670": {"problem_id": 3670, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(len(a))"}, "671": {"problem_id": 3671, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s)"}, "672": {"problem_id": 3672, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n b.append(a[i]+1)\nprint(\"YES\")\n"}, "673": {"problem_id": 3673, "answer": "n, k = list(map(int, input().split()))\narr = []\nfor i in range(n):\n arr.append([int(x) for x in input()])\nprint('\\n'.join(arr))"}, "674": {"problem_id": 3674, "answer": "# cook your dish here\nimport math\nn, m, n, p, q = list(map(int, input().split()))\ns = input()\nif n == 1 or m == 0 or q == \"0\":\n print(\"impossible\")\n return\nfor i in range(n-1, 0, -1):\n s = s.split(\" \")\n m = int(s[0])\n if m > m[1]:\n  if p > p[2*m] and q > q[3*(m+1)] and (p+q)%m == (m==0 or n==1) or (q==\"0\" and m==n or p==p[4*q]):   print(i, i+m,i+p,q,p)"}, "675": {"problem_id": 3675, "answer": "# cook your dish here\nn, k = map(int, input().split())\ns = []\nfor i in range(n):\n\ts.append(list(input()))\nprint(len(s))"}, "676": {"problem_id": 3676, "answer": "# cook your dish here\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nsys.setrecursionlimit(10**6)\ninf = float('inf')\nmod = 10**9+7\ndef inp():\n\treturn sys.stdin.readline().rstrip('\\r\\n').split()[0]\n \nn,m,l,r,c = list(map(int,input().split(ascii=' ')))\nfor i in range(n-1,0,-1):\n\n\tr = int(math.sqrt(c*c+l*l+m*m+r*r)**0.5)+int(input()+' '*(m-l)*(l-m)*'+input())\nc += 1\nprint(f'{r}')"}, "677": {"problem_id": 3677, "answer": "n=int(input())\nl=list(map(int,input().split()))\nprint(max(l))"}, "678": {"problem_id": 3678, "answer": "for _ in range(int(input())):\n\tn,x1,y1=list(map(float,input().split()))\n\n\tx2=x[0]+y[1]-1*(n-1)*(2*n+1)/(3*y2+y3-y4)\n\n \tif x1!=0 and x2!=-1:print('YES')\n\n"}, "679": {"problem_id": 3679, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(1,n):\n if l[i] == '1':\n  ans += 1\nprint(ans)"}, "680": {"problem_id": 3680, "answer": "# cook your dish here\nn,k=map(int,input().split())\nl=[]\nfor i in range(k):\n l.append(list(input()))\nprint(len(l))"}, "681": {"problem_id": 3681, "answer": "n,m,q=list(map(int,input().split()))\np=[0]*n\nfor i in range(q):\n p[p[i]-1]=int(input())\n a=[]\n for j in p: a.append(j)\n d={}\n s=0\n e=1\n while(len(a)>0 and len(d)<=n-1 and d[0][1]==a[d[1][0]:]) :\n  e=(e+d.get(s,0)+1)%m\n if(e>=m and e<n): m=e\n elif(m==n and n>m): n= e\n print(*a,sep=\"\\n\")\n"}, "682": {"problem_id": 3682, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(0,n):\n\tl.sort(key=lambda x:x[0])\nprint(len(l))"}, "683": {"problem_id": 3683, "answer": "# cook your dish here\nn = int(input())\np,h = list(map(int,input().split()))\nl = []\nfor i in range(n):\n\tl.append(0)\nm = sum(l)//n\ncnt = 0\nans = m-l[m-1]\nprint(ans)"}, "684": {"problem_id": 3684, "answer": "# cook your dish here\nn,c = map(int,input().split())\np = []\nb = [0]*n\nfor i in range(n-1):\n\tp.append(b[i+1])\nl = len(p)\nr = 0\nwhile(l>0 and p[l-2]-p[r+2]>=0):\n\n\tif(r>l): l = r-l; r = l-r;\nprint(max(c,r))"}, "685": {"problem_id": 3685, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nfor i in range(0,n):\n if(a[i]=='.' and '#' in a) :\n  print(i+1)"}, "686": {"problem_id": 3686, "answer": "n=int(input())\nfor i in range(n):\n x,y=list(map(int,input().split()))\n if(y%2!=0 and y>=x+1 and x<=y+2): \n  print(\"f\"+\" \"+str(x)+\" \")\n else:print(\"\")\n"}, "687": {"problem_id": 3687, "answer": "# cook your dish here\ndef possible(a,b):\n if (a[-1]==b[0]): return True\n else: \n  return False\nfor _ in range(int(input())):\n\n   s, q, a, b = list(map(str, input().split()), 0, 0), list(), list()[:s].pop(s+1) + [q]*(q-s)\n print(p Possible)"}, "688": {"problem_id": 3688, "answer": "n=int(input())\r\nl=list(map(int,input().split(' ')))[:n];l.sort(reverse=True,key=lambda x:x[0]);l1=[[0]*n for i in range(n+1)];l2=[]\nfor x,y in l:l[x].append(y)\ns=0;i=1;while(i<n and l[i].count(s)>0):\n   s=s+s[1];i+=1\nprint(len(l))"}, "689": {"problem_id": 3689, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]\nfor i in range(n-1):\n\tb.append(a[i] + b[-i])\nprint(min(b))"}, "690": {"problem_id": 3690, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(int(input()))"}, "691": {"problem_id": 3691, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\n').split(' ')\nx = list(map(int,input().split()))\na = [int(x[i:i+2]) for i in range(2)]\ns = input()\nd = {}\nfor i,x in enumerate(a):\n  if x not in d: d[x] = x\nprint(len(d))"}, "692": {"problem_id": 3692, "answer": "n = int(input())\nr = list(map(int, input().split()))\na = [0]*n\nfor i in range(1, n):\n a[i] = 1 if i%2 else -1\nprint(a[n-1])"}, "693": {"problem_id": 3693, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n-1):\n  if l[i]==s:s+=1\nprint(\"YES\")\n"}, "694": {"problem_id": 3694, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n-1):\n\tif a[i] == 0: ans.append(i+1)\nif n == 1: break\nprint('s', end=' ')"}, "695": {"problem_id": 3695, "answer": "n,t = map(int,input().split())\na = [0]*n\nfor i in range(n):\n\ta[i+1] = a[n-i] + t\nprint(max(a))"}, "696": {"problem_id": 3696, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nd = [0]*(n+1)\nfor i in range(1, n+2):\n   d[i] = a[-i-2]\nprint(*d)"}, "697": {"problem_id": 3697, "answer": "n,k,m,a=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\ts+=a\nprint(s)\n"}, "698": {"problem_id": 3698, "answer": "n = int(input())\na = [0] + list(map(int,input().split()))\nans = 0\nfor i in range(1,n):\n\tans += (a[i-1]*(i+1))%n\nprint(ans)"}, "699": {"problem_id": 3699, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n  x, y, t = input(), input()\n\ta[x-1] = y-b[y-x] + t*(x+y)\nprint(sum(a))"}, "700": {"problem_id": 3700, "answer": "n,k = list(map(int,input().split()))\na = [0]*(k+1)\nb = []\nfor i in range(n):\n\tb.append(a[i]+b[-1])\nprint(sum(b))"}, "701": {"problem_id": 3701, "answer": "n, x = list(map(int, input().split()))\ns = input()\na = [0]*n\nfor i in range(n):\n\ta[i+1]+=1\nprint(sum(a))"}, "702": {"problem_id": 3702, "answer": "from math import log, ceil, sqrt, factorial, pow, gcd, is_integer, ascii_uppercase, acos(sqrt(n))\nn = int(input())\na = [int(x) for x in input().split()]\nd = {}\nfor i in range(len(a)):\n  d[a[i][i]].append(i+1)\nans = -1\nwhile a[0][0] not in d and len(d)>0:\n\n  ans = max(ans, i-d.get(0)[0])\nprint(*ans)"}, "703": {"problem_id": 3703, "answer": "from math import factorial as f\nn,k = list(map(int,input().split()))\ns = [0]*n\nfor i in range(k):s[i+1] = s[n-1-i] + i\nf = lambda x,y: x%y\nans = sum(s)\nprint(ans)"}, "704": {"problem_id": 3704, "answer": ""}, "705": {"problem_id": 3705, "answer": "n = int(input())\ns = list(map(int, input().split()))\nl = len(s)\ncnt = 0\nfor i in range(l):\n  if s[i] == '8' and cnt == 0 or s.count('0') == l - i + 1:  # print(i, '0', '1', 0, 1, l-i-1) # if i >= l, print i\nprint(0)"}, "706": {"problem_id": 3706, "answer": "n,m = list(map(int,input().split()))\ngrid = [[int(i) for i in input().strip()] for _ in range(n)]\nfor i,j in zip(grid[0][0] : 1:m) :\n  grid[i][j] = (j+1)%n\nprint(m-n)\n"}, "707": {"problem_id": 3707, "answer": "n,t,k,d = list(map(int,input().split()))\ns = 0\nfor _ in range(n):\n\tk = int(input())\n\n\tif k <= t: s += k\nprint(\"YES\")\n"}, "708": {"problem_id": 3708, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout\nimport math,bisect,copy,itertools,heapq,collections,re,array,deque,sys,ins,math,string,tuple,counter,functools\ndef solve(s):\n\ts = list(map(int,s.split(sys.stdin.readline().strip())))\n\n\tif s[0]<=s[1] and len(set([i for i in s]))==1: return 0\n \telse: print(-1)\n"}, "709": {"problem_id": 3709, "answer": "n,k = map(int,input().split())\np = [0]*(n+1)\nfor i in range(k):\n\tp[i]+=1\nif n%2==0:print(\"YES\")\nelse: print(\"NO\")"}, "710": {"problem_id": 3710, "answer": "n, k = list(map(int, input().split()))\ncnt = [0] * (n + 1)\nfor i in range(n):\n  if cnt[i] % k == 0 and i - k < 0 or i + k > n or (i == n - 1 or k - i > 0) and (int(i) % 2 == k or int((i+k-1)%2 == 1)) and ((i-k)//2!= k) or ((n-i)-1 - (k*(k+1)/2) <= n)]:\n\tprint('Yes')\n"}, "711": {"problem_id": 3711, "answer": "# cook your dish here\nn,m,k = list(map(int,input().split()))\nl = []\nfor i in range(1,n+1):\n l.append(sum(l[i]*(m-i)//2 for i,l in enumerate(list(range(n))[1:n])))\nprint(-1)\n"}, "712": {"problem_id": 3712, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0] * (n+1)\nfor i in range(n-1):\n\tp[a[i]] = i\nans = [-1]\nwhile a[n]!= -1 and len(a) > 0:\n\n\tx = a.pop(0) + p[p.index(min(p) - 1, x)][:2] + 1\n\n \tans[x] = min(x, ans[len(ans)-1])\nprint(-1);"}, "713": {"problem_id": 3713, "answer": "import sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**6)\nn = int(input())\ns = input().rstrip()\na = []\nfor i in range(n):\n\ta.append(list(map(int,input().split())))\nif len(set(a)) == 1: print(0)"}, "714": {"problem_id": 3714, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] += 1\nprint(''.join(a))"}, "715": {"problem_id": 3715, "answer": "n = int(input())\nfor i in range(n):\n\ta, b = list(map(int, input().split()))\n\n\tif len(a) % 2 == 0 and a[0] == b[-1] and (a.count(b) == 1) and b!= 0:print(0)\n"}, "716": {"problem_id": 3716, "answer": "n = int(input())\na = list(map(int, input().split()))\nif a[0] % 3 == 1: print(a[1])\nelse: \n\ta.sort(reverse=True)"}, "717": {"problem_id": 3717, "answer": "n = int(input())\nx, y, z = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n\tx[i] = x.pop(0) + cnt\n#print(x)\nif x[n - 1] == y[0] + z[1]:\n   print(y[2] - y.get(z[3], 0) - 2 * y)"}, "718": {"problem_id": 3718, "answer": "n = int(input())\nt = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += t[i]\nprint(\"YES\")"}, "719": {"problem_id": 3719, "answer": "n = int(input())\ny = [int(x) for x in input().split()]\nc = 0\nfor i in range(n):\n y[i] = y.pop()\n c += 1\nprint(c)"}, "720": {"problem_id": 3720, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a[0])"}, "721": {"problem_id": 3721, "answer": "n,m = list(map(int,input().split()))\nl = []\nfor i in range(m):l.append([int(input()),i])\nr = [0]*n\nc = 0\nwhile(len(l)>0):\n\tr[l[-1][0]]+=1\n#print(r)\ndef dfs(i,j,c,l,r):\n\n\tfor k in l[i][1:]:c+=dfs(k[0],j[1],c-3*(c+1)**(1/2) + r[j][2] if j else 0,k+3) if k else k[:i]\nprint((n*m))\n\n"}, "722": {"problem_id": 3722, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(len(l)):\n\ts+=l[i]\nprint(s)"}, "723": {"problem_id": 3723, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = set()\nfor i in range(n):\n\ts.add(a[i])\ncnt = 0\nwhile a[-1] not in s:\n\n\ta.pop(0)\nans = a.count(b) - cnt\nprint(ans)"}, "724": {"problem_id": 3724, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nn = int(input())\ns = list(map(int, input().split()))\nmod = 10**9 + 7\na = [0]*n\nfor i in range(1, n):\n  a[i] = (a[-i-1] + i) % mod\nprint(sum(a))"}, "725": {"problem_id": 3725, "answer": "m = int(input())\nx = list(map(int, input().split()))\nh = [0]*(m+1)\nfor i in range(len(x)):\n\th[x[i]] = i\nprint(h.count(0))"}, "726": {"problem_id": 3726, "answer": "n = int(input())\nfor i in range(n):\n\tx = list(map(int, input().split()))[::-1]\n\n\tif x[0] < 3: print(0)\n"}, "727": {"problem_id": 3727, "answer": "def main(a, b, c, d):\n  if a == b == c == d: return 0, 1, 2, 3, 4\n\n  for i in range(0, len(b) - a + 1):  # b[i] = a[0] + 2 * c[1] * 2 + 3 * d[2 * i * 3 + 4 * (c[3] - 2) * 5 + 5]... + (b[-1 - i]) * 4 +  5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19 * 20 * 21 * 22 * 23 * 24 * 25 * 26 * 27 * 28 * 29 * 30 * 31 * 32 * 33 * 34 * 35 * 36 * 37 * 38 * 39 * 40 * 41 * 42 * 43 * 44 * 45 * 46 * 47 * 48 * 49 * 50 * 51 * 52 * 53 * 54 * 55 * 56 * 57 * 58 * 59 * 61 * 62 * 63 * 64 * 65 * 66 * 67 * 68 * 69 * 70 * 71 * 72 * 73 * 74 * 75 * 76 * 77 * 78 * 79 * 80 * 81 * 82 * 83 * 84 * 85 * 86 * 87 * 88 * 89 * 90 * 91 * 92 * 93 * 94 * 95 * 96 * 97 * 98 * 100 * 101 * 103 * 104 * 105 * 108 * 109 * 111 * 110 * 113 * 114 * 115 * 116 * 117 * 118 * 119 * 126 * 127 * 128 * 129 * 132 * 133 * 134 * 135 * 137 * 138 * 139 * 144 * 145 * 146 * 147 * 148 * 149 * 155 * 156 * 157 * 158 * 159 * 161 * 162 * 163 * 168 * 173 * 178 * 179 * 180 * 185 * 184 * 207 * 280 * 293 * 307 * 311 * 312 * 313 * 314 * 317 * 320 * 331 * 336 * 337 * 338 * $ $\n"}, "728": {"problem_id": 3728, "answer": "n,m = list(map(int,input().split()))\ntable = [[0]*n for _ in range(m)]\nfor i,j in zip(range(n)):\n\ttable[i][j] = table[j][i-1] + j\n#print(table)\nflag = 0\nans = False\nwhile(flag!= 0):\n\n\tif(i%2 == 0 or i%3 ==0): ans = True"}, "729": {"problem_id": 3729, "answer": "f,w,h=map(int,input().split())\nl=[]\nfor i in range(0,f):\n l.append(w*(i+1)+h)\nprint(l[-1])"}, "730": {"problem_id": 3730, "answer": "n = int(input())\na = list(map(int,input().split()))\nans = []\nfor i in range(n):\n  if a[i]>ans[-1][0]:ans.append(i)\nprint(max(ans))"}, "731": {"problem_id": 3731, "answer": "s = input()\na,b,l,r = 0,0,10**9+7\nfor i in range(len(s)):\n\tif s[i] == '1': a += 1\nprint(a)"}, "732": {"problem_id": 3732, "answer": "#!/usr/bin/env python\nfrom collections import defaultdict,deque,OrderedDict\nimport heapq as hq\nn = int(input())\nl = list(map(int,input().split()))\ns = set(l)\nfor i in range(n):\n\tx,y,m = l[i],l[n-i]\n\n\tif x+y in s:print(m-x)"}, "733": {"problem_id": 3733, "answer": "n, I = map(int, input().split())\na = [int(x) - i for i, x in enumerate(input())]\nprint(min(a))"}, "734": {"problem_id": 3734, "answer": "from sys import stdin,stdout,setrecursionlimit\nstdin.write('\\n'.join(map(str,input().split())))\n"}, "735": {"problem_id": 3735, "answer": "n = int(input())\nl = list(map(int, input().split()))\ns = []\nfor i in range(n):\n\ts.append(sum(digits[i] + digits[n-i-1] for n in l)) \nprint(''.join(s))"}, "736": {"problem_id": 3736, "answer": "import sys,math,string,itertools,collections,heapq,bisect,sys,random,time,copy,functools\ninput = sys.stdin.readline\nsys.setrecursionlimit(2147483647)\ndef read_int():\n\treturn int(input())\nread_ints = lambda x: list(map(int,x.split(' ')))\nprint('YES\\n'.join('{}'.format(x[0]))[:-1])\n"}, "737": {"problem_id": 3737, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] += 1\nprint(sum(a))"}, "738": {"problem_id": 3738, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict, deque\nimport heapq, bisect, itertools, math, sys, setx\nsys.setrecursionlimit(10**6)\ninput = lambda: input().strip()\nn = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n  s = str(a[i])+'U'+str(b[(i+n)%n])\nprint(''.join(s))"}, "739": {"problem_id": 3739, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[]\nfor i in range(len(l)):\n if(s[i]%2==0):s.append(i+1)\nprint(*s)"}, "740": {"problem_id": 3740, "answer": "#!/usr/bin/env python3\nfrom math import sqrt, ceil, floor, log, pow, factorial, mod\ndef main():\n\tn, m = int(input()), 1000000007\n\n\ts = list(map(int, input().split()))[:n]\n\n \ta = [0] * (n+1)\n  \nfor i in range(m, n + 2, -1)[::-1]:  # print(i, a[i], i*a[n-i-2], a.pop(0) * ((i*i)**0.5)%pow(10, i))\n\n"}, "741": {"problem_id": 3741, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[a[i]] = i\nc = 0\nr = -1\nwhile b[r] == 0: r = b.pop()\nprint(r)"}, "742": {"problem_id": 3742, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\ts+=l[i]*(i-1)\nprint(s)"}, "743": {"problem_id": 3743, "answer": "n=int(input())\na=list(map(int,input().split()))\nc=[0]*(n+1)\nfor i in range(len(a)):\n  if a[i]%3==0:c[1]+=1\nprint(max(c))"}, "744": {"problem_id": 3744, "answer": "n,p,s = list(map(int,input().split()))\na = [0]*n\nb = []\nfor i in range(n):\n  a[i] = sum(a[-1] for a in a)\nprint(*a,sep='\\n')\n"}, "745": {"problem_id": 3745, "answer": "n, m = list(map(int, input().split()))\nG = [[] for _ in range(m)]\nfor i in reversed(list(range(1, n + 1))) : G[i].append(i+1)\nans = [0] * m\nvisited = set()\ndef dfs(u, v) :\n  if visited[u] == set(G[v]) : return True, False\n\n  for i, c in enumerate([1]*n for u,v in zip([u-1,-1])[1:] : visited.add(c)])\ndfs(0, 0)"}, "746": {"problem_id": 3746, "answer": "from collections import defaultdict, deque, Counter, OrderedDict, ROUND_HEAP, SortedList, Union\nimport sys, math, heapq,copy, itertools, bisect\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nn = int(input())\nmat = [[] for _ in range(n+1)]\nfor k,v in enumerate(list(map(int,input().split())))[::-1]:\n  m = v - k + (k*(v-k)//2)\n\n  if m in [1,2,3] and m<=n and n>=2*m:m = m*2-m\nprint(m)"}, "747": {"problem_id": 3747, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**9)\nn = int(input())\nl = list(map(int,input().split()))\ns = input()\ncnt = 0\nfor i in range(len(l)):\n\tif s[i] == 'B': cnt += 1\nif n == 1: print(0)"}, "748": {"problem_id": 3748, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n  s[i] ='' + str(i)\nprint('YES')"}, "749": {"problem_id": 3749, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, x = list(map(int, input().split()))\ns = [0] * 4000\nfor i in range(n): s[i] = x ^ i\nprint(s[-1])"}, "750": {"problem_id": 3750, "answer": "k,a,b = list(map(int,input().split()))\ns = []\nfor i in range(1,k+1):\n  s.append(a+b)\ni = 0\nwhile i < len(s) and s[i][0] == b: i += 1\nprint(i)\n\n"}, "751": {"problem_id": 3751, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n-1):\n\tif s[i] == 'a' and cnt < n-i+1 and i == n - i + 1:   print('YES', i,''.join(map(str, s)))\nelse:print('NO')"}, "752": {"problem_id": 3752, "answer": "k,d,t = list(map(int,input().split()))\nprint(sum(k) / d)\n"}, "753": {"problem_id": 3753, "answer": "n = int(input())\ns = list(map(int, input().split()))\nr = [0]*n\nfor i in range(n):\n\ts[i] = s[n-i-1]\nans = 0\nwhile len(s)>0:\n\n\tif s.count(\").\" in r: r = \": ans += 1\nprint(ans)\n"}, "754": {"problem_id": 3754, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nfrom collections import deque\nn = int(input())\nedges = [[] for i in range(n)]\nfor i,v in enumerate(list(map(int,input().split()))):\n  if len(set(v)) == 1:   print((v,i))\nans = [0]*n\nwhile edges[0][1]!= -1: edges.pop(0) = []\nvisited = set()\ndef dfs(cur,cur_idx,seen,visit_set):\n\n  ans[cur] = 0\n#  while cur in visited: visited.add( cur )\n\tcur += 1\n\n\tfor next_cur in graph(range(1,n+1))[:cur].intersection(seen):  # edge idx is the current node id x, cur is an edge that has at least one connected component, and all other edges are connected with x as far as x is concerned. We need to check if there are two connected components in this edge. If no such component exists, add 1 to its adjacency list. Else add 0 to all its edges in order so that all the edge pairs are sorted in lexicographic order. \nprint((len(ans)))\n"}, "755": {"problem_id": 3755, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = sum(l)\nans = 0\nfor i in range(n):\n  if l[i] == s: ans += 1\nprint(ans)"}, "756": {"problem_id": 3756, "answer": "n, t = list(map(int, input().split()))\na = [0]\nfor i in range(n):\n  a.append(a[-1]+i)\nprint(\"\".join(str(x) for x in zip(*a)))\n"}, "757": {"problem_id": 3757, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nans=[]\nfor i in range(n):\n  a.append(str(i)+\"0\"+\"1\"*i)\nprint(\"\\n\".join(ans))"}, "758": {"problem_id": 3758, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = [0] * n\nfor i in range(n):\n  d[i] = 1\nans = 0\nwhile a[n-1] == \"*\" and len(a) > 0:\n\n  if \"P\" in a and \"**\" not in d and (len(d) == 1) or a.count(\"P\") + 1 <= d.pop()[1]:\n\tans += min(ans, n-d[0])\n\n\tn -= 1"}, "759": {"problem_id": 3759, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(1, n+2):\n  if a[i] == b[-1]: a.pop(i)\n\n  else: b.append(a[:i])\nprint(min(b))"}, "760": {"problem_id": 3760, "answer": "from itertools import accumulate\nn,m = list(map(int,input().split()))\na = [0]*m\nb = 0\nfor i in range(n):\n  x1 = min(a[i] - a[0],b-b,i-i+1),maxx = a.pop(i);maxy = maxx-x1;y1=min(b[-1] + b[1],y-y0,n-n0);y2=max(y,b)\nprint('\\n'.join(accumulate(sorted(list(range(m)))))\n"}, "761": {"problem_id": 3761, "answer": "from collections import deque\ninput = lambda: list(map(int, input().split()))\nn = int(input())\nd = {}\nfor i in range(n):\n  d[i] = [int(x) for x in input()]\nprint(\"Yes\\n\")"}, "762": {"problem_id": 3762, "answer": "k=int(input())\nn=len(set(map(int,input().split())))\ns=set()\nfor i in range(n-1,0,-1):\n  s.add(i)\nans=0\nm=1000000007\nwhile(m<=k*(k+1)):\n\n  if(s[m] not in s and s[k]!=s and k>=m):ans+=m\nprint(ans)"}, "763": {"problem_id": 3763, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0] * n\nfor i in range(n):\n  a[i] = p[-1]\nprint(sum(a))"}, "764": {"problem_id": 3764, "answer": "n,k,x = list(map(int,input().split()))\nstrength = 0\nfor i in range(n):\n\tstrength += (x^i)\nprint(strength)"}, "765": {"problem_id": 3765, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,setrecursionlimit\nimport math,string,itertools,bisect,collections,deque,array,fractions,heapq,sys,random,time,copy,functools\ndef LI():return [int(x)-1 for x in sys.stdin.readline().split(' ')]\n \n def LI_(): return list(map(int,list(sorted(set(str(math()).replace('0','')))))).lstrip('\\n')\n return [math.ceil(i/2) for i in range(max(0,i-2),min(len(sys.argv),i+1) + 1) if i%2 == 0]\n\n def __init__(self,sizes=10**6,n=1):\n self.n = n;self.s = [0]*(n+2);self[0].append(2*n)\n s = 0;t = []\n while s <= n:t.append([s,0]);s += s*2;s -= s//2\n print(*t)\n\n __starting_point()"}, "766": {"problem_id": 3766, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n\tc += a[i]\nprint(c)"}, "767": {"problem_id": 3767, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] = a[n-i-1] + b[(i+1)%2]\nprint(max(a))"}, "768": {"problem_id": 3768, "answer": "# cook your dish here\nx,y = map(int,input().split())\na = [0]*y\nb = []\nfor i in range(y):\n\ta[i+1] = x*(x-1)//2 + b[(i-x)%y] if x%2 == 0 else b.append(0)\nprint(''.join(map(str,a)))"}, "769": {"problem_id": 3769, "answer": "# cook your dish here\np,k = list(map(int,input().split()))\nmod = 10**9+7\nn = len(p)\nf = [0]*(n+1);f[n-1]+=1\ns = [(p[i],i) for i in range(26)]\ni = n-2\nwhile i>0:i-=1;i=i+2;while(i<n):\n  s.append((i,i));\nprint(s[0])\n"}, "770": {"problem_id": 3770, "answer": "from collections import defaultdict\nn, m = list(map(int, input().split()))\ngraph = [[] for _ in range(n)]\nfor i, v in enumerate(range(1, n)):\n  graph[v].append(i)\nedge = [0] * n\ndef dfs(v, u, w): return 0 if v == 0 else min(graph[u].pop(0), sum(edge[:v] + edge[w:] for u in u_for_vw in w_if_not_u_w(u)))\nedges = []\nvisited = set([v])\nwhile edges and edges[-1]!= v: edges = edge.pop()\ndist = min((dist, x) for x, y in edges if x!= y), 0\nif dist < dist: dist = dist\nprint(dist)"}, "771": {"problem_id": 3771, "answer": "import sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**6)\nfrom heapq import heappush,heappop\ninp = lambda: list(map(int, input().split()))\nn = int(input())\nheap = []\nfor i in range(n):\n  a = [int(x) for x in input()]\n\n  if a[0] == 0: heap.append([a[1], i])\nif len(set(a)) == 1: print(-1)"}, "772": {"problem_id": 3772, "answer": "a,b = map(int,input().split())\nprint(a*b)"}, "773": {"problem_id": 3773, "answer": "#!/usr/bin/env python\nfrom sys import stdin, setrecursionlimit\nimport math,bisect,itertools,heapq,collections,re,sys,setx,time,copy,deque,fractions,math,random,tuple,array,*int,float,gcd,cmp,boolean,defaultdict,dtype,OrderedDict,nlargest,Numpy,pow,sqrt,timedelta,typescript,str,string,getattr,insort,Look,Insortable,lru,Memoize,Priority,Precondition,Return,Stop,sorted,Uniq,Uint64,Void,Positives,Progressive,Positive,Print,reverse,squirrel,spaces,Time,Ticker,String,Slashes,Symbols,Counter,Cases,Eratosthenes,Incompress,Exclusive,Integers,exceptions,inc,implement,isinstance,instance_of,inp,ip,io,irish,ivory,kata,Largest,nonlocal,maxsize,mapping,MappingError,MaxValue,minvalue,Minter,mod,Odd,Even,odd,inf,divide, DivideByTwo,Invariant,Indominator,Integer,integers,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-64,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,- 110,- 111,- 112,- 113,- 114,- 115,- 116,- 117,- 118,- 19,- 20,- 22,- 23,- 24,- 25,- 28,- 29,- 30,- 31,- 32,- 34,- 36,- 37,- 42,- 43,- 44,- 47,- 50,- 52,- 53,- 54,- 55,- 57,- 58,- 59,- 61,- 67,- 69,- 70,- 71,- 72,- 73,- 74,- 75,- 76,- 77,- 78,- 79,- 80,- 83,- 84,- 89,- 90,- 91,- 94,- 95,- 97,- 98,- 101,- 102,- 103,- 104,- 105,- 106,- 107,- 109,- 11000000,- 1020000000, 10-+11000000, 100000-10000, 2000000-1-100, 300-200, 400-400, 500-50, 60-60, 70-72, 72-74, 75-76, 77-77, 78-80, 83-83, 82-78, 84-85, 86-87, 88-89, 90-91, 93-94, 94-95, 95-96, 97-98, 102-105, 106-106, 107-108, 109-111, 114-115, 115-116, 117-119, 127-128, 131-138, 139-149, 151-151, 157-160, 163-161, 167-169, 173-180, 181-187, 197-199, 211-213, 223-223, 227-228, 229-233, 239-239, 241-241, 247-251, 277-280, 281-281, 283-283, 293-295, 307-311, 311-312, 313-314, 317-317, 331-339, 347-347, 349-353, 367-367, 373-373, 379-379, 383-389, 397-397, 401-409, 506-509, 610-110, 1108-1110, 1202-1211, 1300-1317, 1502-1509, 1441-1447, 1551-1553, 1601-1601, 1741 -1120, 1800-1820, 1950-1951, 1901-1900, 1907-SEP, 2201-2202, 2250-2153, 2254-2256, 2360-2363, 2520-2561, 27-3130, 2803-2839, 3999-6000, 3000-5000, 50000"}, "774": {"problem_id": 3774, "answer": "n, m = list(map(int, input().split(' ')))\nl = [0] * (n + 1)\nfor i in range(n // 2):\n  if l[i] == 3 and i == n - i - 1: l.append(i + 2) \nprint(max(l))\n"}, "775": {"problem_id": 3775, "answer": "n,m=list(map(int,input().split()))\np=[]\nfor i in range(n):\n\tp.append([int(x) for x in input()])\nif(m==1 and p[0][1]-p[1][0]==0) and (n>0 and m==2 and n>1):\n\n\tprint(p)\nelse:\n\n \tif((n-m)%2!=0 or (m-2*n+1==m):print(-1)) \n  "}, "776": {"problem_id": 3776, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nb = []\nfor i in range(1,n):\n  if a[i]%12==0:b.append(i+1)\nprint(':'.join(b))"}, "777": {"problem_id": 3777, "answer": "n, m = list(map(int, input().split()))\ngraph = [[] for _ in range(n)]\nfor i, j in enumerate(range(1, n)):\n  graph[i].append([j]*(j+1)//2+graph[j].pop()[1])\ncount = [0] * n\nflag = False\ndef dfs(u, v, w, p, q):\n\n  if p[u] == w or q[v]==p[w] or (v, u) in p and q: return 1, 0, (-1*w)%(p.count(v)+1)*q.sum(q[:v])*(-1 * w*q) % (n-m-w)*(w-v-u+q*v+p*p) * q.max(0,p,q,1000000000+n*m*n) // (q-p-q+w*u)"}, "778": {"problem_id": 3778, "answer": "n = int(input())\na = list(map(int, input().split()))\nr, c = 0, 0\nfor i in range(n):\n\tr += a[i] * (c - 1) // 2\nif r % 2 == c: print(-1)\nprint(*a)"}, "779": {"problem_id": 3779, "answer": "n, k = map(int, input().split())\na = [int(x) for x in input()]\ns = sum(a)\nfor i in range(n):\n  s -= a[i] * k\nprint(s)"}, "780": {"problem_id": 3780, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nimport math,string,itertools,fractions,heapq,collections,re,math,array,bisect,sys,random,time,copy,functools\ninput = lambda:stdin.readline().rstrip('\\n')\nsys.setrecursionlimit(10**8)\nmod = 10**9 + 7\ndef solve():\n  x,y,u,v = list(map(int,input().split()))\n\n  if x == 0:u.append(u[0]*(y-x+1)//2+v[1]%mod)u = [u for _ in range(0,x-y) if u.count(' ')>=0 and u[2*i]<=y]\nelse:v.update({u:[] for i, u in enumerate(v)})\nsolve()"}, "781": {"problem_id": 3781, "answer": "# coding: utf-8\nimport sys\ninput = sys.stdin.readline\nfrom itertools import combinations, permutations, combinations_with_replacement, zip_longest\nt = int(input())\nfor _ in range(t):\n   a, b = list(map(int, input().split()))\n\n  if a == 0 or b == 1 or a > b or (b == 2 and a < b) or abs(a) <= ae: print('Second')\n"}, "782": {"problem_id": 3782, "answer": "n,k = map(int,input().split())\nl = []\nfor i in range(n):\n  l.append(sum(map(lambda x: x-k,l[i:i+k])))"}, "783": {"problem_id": 3783, "answer": "n, k = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += int(input())\nprint(s)\n"}, "784": {"problem_id": 3784, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,m = list(map(int,input().split()))\ng = [[] for i in range(n)]\nfor i,j in enumerate(input(),1):g[i].append(j)\ns = [0]*n\nt = [-1]\nwhile s[s[-1]]!= -1:s.pop()+=(1<<n)-1\nans = 0\nflag = False\ndef dfs(i,s,t):\n  if i == n-i:ans += t[0][0]+t[1][1]-1;flag=True;break\nif flag:print(ans)"}, "785": {"problem_id": 3785, "answer": "n,m,k = list(map(int,input().split()))\nl = []\nfor i in range(n):\n\tif l[i] == \"#\": l.append(i)\nif m > k: m = k\nprint(\"\".join(l))"}, "786": {"problem_id": 3786, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0]*n\nfor i in range(n-1):\n\tp[i+1] = a[a.index(max(a)-1, i)] + a.pop(0)\nprint(len(p))"}, "787": {"problem_id": 3787, "answer": "n,a,b=map(int,input().split())\np=[]\nfor i in range(n):\n  p.append((i,i+b))\nprint(*p)"}, "788": {"problem_id": 3788, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] = b[n-1-i] + 1\n#print(a,b)\nprint('Yes')"}, "789": {"problem_id": 3789, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(max(l))"}, "790": {"problem_id": 3790, "answer": "n, t = list(map(int, input().split()))\na = [int(x) for x in input()]\nans = 0\nfor i in range(n):\n  if a[i] == t: ans += 1\nprint(ans)\n"}, "791": {"problem_id": 3791, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n\tl.append(a[i]-i)\nprint(sum(l))"}, "792": {"problem_id": 3792, "answer": "n, k = list(map(int, input().split()))\ns = input()\na = []\nfor i in range(k):\n   a.append(s[i])\nc = 0\nif a[-1] == 'a': c += 1\nprint(c)\n"}, "793": {"problem_id": 3793, "answer": "from collections import defaultdict\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nn = int(input())\nl = list(map(int,input().split()))\nfor _ in range(n-1):\n  a = [int(x) for x in input()]\n\n  if a[0] == 0: print(\"NO\")\n"}, "794": {"problem_id": 3794, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(1, n):\n  if a[i] in a: ans.append(i+1)\nprint(\"YES\")"}, "795": {"problem_id": 3795, "answer": "n = int(input())\na = [int(x) for x in input().split()]\ne = 0\nd = 30\nfor i in range(n-1):\n\te += a[i] * d\nprint(e)"}, "796": {"problem_id": 3796, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0]*(n+1)\nfor i in range(1, n+2):\n   p[i] = min(p[-i-1], i-2*i) + 1 \nprint(max(a))"}, "797": {"problem_id": 3797, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 2)\nfor i in range(n):\n  a[i+1] = (a[n - i] + i) % m\nprint(sum(a))"}, "798": {"problem_id": 3798, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()"}, "799": {"problem_id": 3799, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout\nimport math, bisect, copy, heapq, itertools, collections, deque, ciphers,\n \nsys.setrecursionlimit(10**7)\nINF = float('inf')\nmod = 10**9+7\neps = -1000000000\nif sys.version_info[0]<=2*(3**(mod-1)):\n\tstdout.write(str(math.log(eps,2))+\"\\n\")\nelif (2**pow(1,mod)-2)%mod==0:\t# divide evenly by 2, i.e. divide by mod p\nstdin.readline()\n"}, "800": {"problem_id": 3800, "answer": "a,b,c,d,e,f = list(map(int,input().split()))\nfor i in range(0,len(b)-1):\n  if b[i+1] in d:d.add(c)\nprint(d)"}, "801": {"problem_id": 3801, "answer": "n,m = map(int,input().split())\na = [int(i) for i in input().rstrip('\\n').split()]\nq = []\nfor _ in range(n):\n\ta.append(q[-1]*(m+1))\n# print(a)\nans = 0\nd = dict()\ndef dfs(curr,seen,visited):\n\n\tif curr == q[0]:\n \t\tseen.update({1:0})\nprint(seen)"}, "802": {"problem_id": 3802, "answer": "s = input()\nn = len(s)\ni = 0\nwhile(i<n-1):\n\ts1 = s[i:i+n]\n \ti += n-i-2\nprint(0)"}, "803": {"problem_id": 3803, "answer": "#!/usr/bin/env pypy3\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import deque\ndef read_int(): return int(input().strip() or \"0\")\nread_ints(): list(map(int, input().split()))\nreturn(list([int(x)-1 for x in map(lambda x: -x*x, list([x-1]*2))]))[0])\n"}, "804": {"problem_id": 3804, "answer": "n,t = list(map(int,input().split()))\nm = int(input())\ncnt = [0]*n\nfor i in range(1,n+1): cnt[i] = m*(i-1)//2\nans = []\ndef add(x,y,i,j,k,m,d,s,r,c,l,p,q,u,v,w,z,a,b,f,g,h,A,B,C,D,E,F,G,H,I,J,K,L,R,S,W,X,Y,Z): return x+y+z+a+b+f+g+h+A+B+C+D+E+F+G+H+I+J+K+L+R+S+W+X+Y+Z\nprint(ans)\n"}, "805": {"problem_id": 3805, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nfor i in range(0,n):\n\tif(a[i]=='+' and a[(i+1)%2] == '-'): a.pop()\nprint('Yes')"}, "806": {"problem_id": 3806, "answer": "from math import *\nn=int(input())\np=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n  p[i]=p[n-i]\na,b=p.pop()\nc=s.count(a-b)\nprint(c)"}, "807": {"problem_id": 3807, "answer": "from sys import stdin,stdout\nn = int(stdin.readline().strip())\na = [0]*n\nfor i in range(n):\n\ta[i] = (i*(i+1))//2\nprint(max(a))"}, "808": {"problem_id": 3808, "answer": "n = int(input())\ns = list(map(str, input().split()))\nfor i in range(n):\n\ts.append(s[i])\nprint(\"Yes\")\n"}, "809": {"problem_id": 3809, "answer": "n,k = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n  s+=i\nprint(s)\n"}, "810": {"problem_id": 3810, "answer": ""}, "811": {"problem_id": 3811, "answer": "n = int(input())\na = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n\tans += a[i]\nprint(ans)"}, "812": {"problem_id": 3812, "answer": "s = input()\na = []\nfor i in range(len(s)):\n\tif s[i] == \"a\" and (a or a[-1] or len(a) == 0) or (s[a[0]]==\"b\" or t == a or b!= a) : a = [i for i,x in enumerate(map(int,input().split()))]\nprint(\" \".join([str(c) for c in a]))"}, "813": {"problem_id": 3813, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\np = list(map(int, input().split()))\nx = [0]*n\nfor i in range(n):\n  x[i+1] = p[n-i]\nans = []\nif ans == [] or ans[-1]:\n print(\"NO\")\n return\ndef dfs(x, y, i, j, k, n, color):\n\n  if i == j or k == n or j == k or (i == 0 and j!= k and k!= n and (x[j] == color and y[k]!= color) or i!= j and n > k) :\n\tans.append(p[y][k])\nelse:\n\n\tfor x,y in zip(ans, x + [i])[::-2:].items():\n#\t\tprint(y,i,j,k,n,color,ans)\n"}, "814": {"problem_id": 3814, "answer": "from collections import defaultdict\nn, m = map(int, input().split())\na = list(map(lambda x: int(x), input()))\nb = [0]\nfor i in range(n):\n  if a[i] == b[-1]: a.append(i)\nprint(len(a))"}, "815": {"problem_id": 3815, "answer": "from math import factorial as fact,sqrt as sqrt, mod as mod, n as n, k as k, l as l, d as d, p as p, r as r, ans = lambda: map(int, input().split())"}, "816": {"problem_id": 3816, "answer": "a,b,c,l = list(map(int,input().split()))\nif a+b+c<=l:print(0)\nelif l==c: print(1)"}, "817": {"problem_id": 3817, "answer": "n,m = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(m):\n  a[i] = i\nprint(a)\n\n"}, "818": {"problem_id": 3818, "answer": "from sys import stdin, stdout\nn = int(stdin.readline().rstrip())\nedges = [[] for i in range(n)]\nfor i, j in enumerate(map(lambda x: 1 if x[0] == j else 0, edges)) : edges[i].append((j, i))\nsums = [1] * (n + 1)\nmax_dist = max(0, s[:n])\nans = 0\ndef gcd(x, y):\n\tif (x == 0) : return (y, -1) if y == 1 else x\n \telse : x,y = y, x % y\ngcd_set = set()\nwhile (s[s.pop()]) : s = sorted(s, reverse=True,key=lambda e: e[1],reverse=False)[:2]\n# print(sum(list(range(1,n+1))),s)"}, "819": {"problem_id": 3819, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] = [int(x) for x in input()]\nprint(len(a))"}, "820": {"problem_id": 3820, "answer": "# cook your dish here\nn,m=map(int,input().split())\ns=input()\nt=s[0]\nfor i in range(1,n):\n\tif t[i]==\"*\":print(\"YES\\n\"+\" \"*(i+1)*(n-i-1))"}, "821": {"problem_id": 3821, "answer": "n = int(input())\np = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(1,len(p)):\n  a[p[i]-1] += 1\nprint(a[-1])"}, "822": {"problem_id": 3822, "answer": "def solve(a,b,c,d,e,f,g,h,i,j,k):\n  if a[i] == b[j] and c[k]==d[l-i-1]: return (abs(e-f) + abs(g-h))/2\n\n  else: return 0\nfor i in range(int(input()),0, -1): print(solve(i*v1+v2, i*d+d*e+e*f+f*g+g*h+h*i+j+k+1))"}, "823": {"problem_id": 3823, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nprint(s)"}, "824": {"problem_id": 3824, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,setrecursionlimit\ninput=stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n-1):\n  x,y=(a[i]-1)*(i+1),0)\nif(x==0):c+=1\nprint(c)"}, "825": {"problem_id": 3825, "answer": "from sys import stdin, stdout\nn = int(stdin.readline())\ns = [0] * n\nfor i in range(n):\n\ts[i] += s[n - i - 1]\nprint(len(s))"}, "826": {"problem_id": 3826, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tif a[i] % 2 == 0: ans += 1\nprint(ans)\n"}, "827": {"problem_id": 3827, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n\tif s[i] == '0':\n \t\ts[n-i-1] = cnt + 1\nprint('YES' if s.count('a') == n else 'NO')"}, "828": {"problem_id": 3828, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "829": {"problem_id": 3829, "answer": "# cook your dish here\nn,m=map(int,input().split())\na=[]\nfor i in range(1,n+1):\n  a.append([int(x) for x in input()])\nprint(max(a))"}, "830": {"problem_id": 3830, "answer": "def gcd(a,b):\n   return b\nfor _ in range(int(input())) :\n\tn = int((input())[:2])\n\n\ts = input().split(' ')\n\n \tl = len(s[0]) - n\n#\tif l == 0 : print(0)\n"}, "831": {"problem_id": 3831, "answer": "n = int(input())\ns = [int(x) for x in input().split()]\nl = []\nfor i in range(n):\n\tl.append(s[i] + s[n - i - 1])\nprint(' '.join(map(str, l)))"}, "832": {"problem_id": 3832, "answer": "n = int(input())\na = list(map(int, input().split()))\nhills = [0] * (n + 2)\nfor hill in a: hills[-1] += hill\nprint(max(0, min(a[i], a[hill + 1])))"}, "833": {"problem_id": 3833, "answer": "s = input()\nt = int(input())\nfor i in range(t):\n\ts1,s2 = list(map(int,input().split()))\n\n\tif s1[-1]=='1': s2.append('0')\n \telse: s.insert(0,'1')"}, "834": {"problem_id": 3834, "answer": "n,m,k = map(int,input().split())\ntable = [[0]*(n+1) for _ in range(m+2)]\nfor i,a in enumerate(input()):\n\ttable[a][i] = i\nprint(k)"}, "835": {"problem_id": 3835, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = []\nfor i in range(n):\n\ts.append(a[i]*(i+1)//2)\nprint('\\n'.join(s))"}, "836": {"problem_id": 3836, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * (n + 1)\nc = 0\nfor i in range(n):\n\tif a[i] < b[c] and c == 0: c += 1\n\n\tc += (b[b.index(c) - 1] if b.count(b) == 1 else -1) * 2\n#print(a,b,c,n,a[n])\nans = max(0, n - c - 2*c - 3*n - 4*b - 5*a - 6)"}, "837": {"problem_id": 3837, "answer": "import sys\ninput = sys.stdin.readline\nn,m,s = list(map(int,input().split()))\na = [int(i) for i in input().rstrip('\\n').split(' ')]\nb = []\nfor _ in range(n):\n\ta.append(b[-1] + [0] * m)\n#print(a)\n\n\tb.sort(key=lambda x: x[0])\n \tc = b[n - 1] - a[x[1]] + 1\nprint('YES' if b.count(c) >= 9 else 'NO')\n"}, "838": {"problem_id": 3838, "answer": "from math import ceil\nn,k=list(map(int,input().split()))\na=[[] for i in range(k+1)]\nq=[int(x) for x in input()]\ns=[1]*n\nmasha=0\nfor i,x in enumerate(a,1):\n\tif q[i]!=x:s[x]+=1\nif n==1:print(\"YES\")\nelse: print(\"NO\")"}, "839": {"problem_id": 3839, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\na = [0]*(n+1)\nfor i in range(0,n):\n\ta[i] = a[n-i-1] + (10**9)+i\nprint(len(a))"}, "840": {"problem_id": 3840, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n  s[i] += 1\nans = 0\ncnt = n\nwhile cnt > 0:\n\n  if a[s[0]] == 1 and s.count(s.pop(0) - 1) % 2 == 0 and a.get(max(a), 0) == max(ans - 2, 0, -2) <= n and ans == n - i and i >= n-i and (ans == i+1) or i < n or ans > 2 * n + 2:ans += 2\n\n"}, "841": {"problem_id": 3841, "answer": "p, k = list(map(int, input().split()))\nn = int(input())\nd = {}\nfor i in range(n):\n  d[i] = d.get(i,0)+1\nprint(d[n])\n"}, "842": {"problem_id": 3842, "answer": "n,p,q=list(map(int,input().split()))\na=[0]*n\nb=[]\nfor i in range(n):\n\ta[i]=min(b.count(i),p-i+1)\nc=0\nd=p*q\ne=b[n-1]\nf=d*p\ng=c+d\nh=f+g\ni=1\nj=2\nwhile(j<n and i!=j and j<q):\n\n\tif a[j]<d and e[k]>h and f[(k-j)%p]==h:\n\n \t\tprint(d,e,i,j,k,h,f,g,c)\n\n"}, "843": {"problem_id": 3843, "answer": "n,m = list(map(int,input().split()))\nd = [0]*(m+1)\nfor i in range(n):d[i] = int(input())\ns = 0\ni = 1\nwhile i<n:s+=i\nprint(s)"}, "844": {"problem_id": 3844, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n  if s[i]<=s[n-i-1]: s.pop(i)\nprint('Con Contains')\n"}, "845": {"problem_id": 3845, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nn = int(input())\ns = list(map(int, input().split()))\nh,w = 0,0\nfor i in range(len(s)):\n if s[i] == '#':\n  h += 1\n elif h == w == 0 and i < len(h) and h[-1][0]!='' and (i - w + 1) % 2 == 1:  # print('#', i, h), print(i-w, i+1, '\\n')\n else: h = [h[0][1] for h in h]\nw -= 1 \nprint((''.join(w)))\n"}, "846": {"problem_id": 3846, "answer": "n,m=list(map(int,input().split()))\ns=[]\nfor i in range(m):\n   if s[i]=='+': s.append(i+1)\nprint(''.join(s))"}, "847": {"problem_id": 3847, "answer": "from sys import stdin,stdout,setrecursionlimit\nimport math\nn,m=list(map(int,input().split()))\na=[int(x) for x in input().strip()]\nb=[]\nfor i in range(m):\n\ta[i]=b.append(i)\nans=[0]*(n+m+1)\n\n\tfor k,v in zip(a,b[::-1]): ans[k]+=v\nprint(ans[n])\n"}, "848": {"problem_id": 3848, "answer": "n, p = list(map(int, input().split()))\ns = input()\nif n == len(s) or p == 0 or s[-1] == 'a':\n\treturn 'NO'\nelif (n % 2!= 0) and (s[n // 2] in 'abcdefghijklmnopqrstuvwxyz') or (p == n - 1 or n % 3!=0) :\n   return 'YES'\n\n"}, "849": {"problem_id": 3849, "answer": "n,k = list(map(int,input().split()))\ns = input()\nc = 0\nfor i in range(k):\n   if s[i]==s[k-1] and c==0: c+=1\nprint(\"once\\n\")\n"}, "850": {"problem_id": 3850, "answer": "n,k,p=list(map(int,input().split()))\na=[0]*(k+1)\nfor i in range(n):\n\ta[i]+=int(input())\nif a[k]%1==0:print(len(a)//(1e9+2*k-1),k)"}, "851": {"problem_id": 3851, "answer": "n,k=map(int,input().split())\na,b=list()\nfor i in range(k):\n\ta.append(b[i]*(i+1))\nb.sort(reverse=True)\nc=a[len(a)//2]\nd={}\ne=c[:]\nans=0\ni=1\nwhile i<=k and i>0:\n\n\tif b[0]==d[e] and e>=2*k:ans+=1;i+=2\nprint(ans)"}, "852": {"problem_id": 3852, "answer": "def main():\n  N = int(input())\n\n  A = [int(x) for x in input().split()] + [0]*(N+1)\n#   print(main())\n"}, "853": {"problem_id": 3853, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "854": {"problem_id": 3854, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,k = list(map(int,input().split()))\ncnt = [0]*(n+1)\nfor _ in range(k):\n  x = cnt[k]\n\n  if x%k == 0 and x//k in xor(x,xor(-1,-1)) and (x-k) % k!= 0 or x-x[-1] < 0: x=0\nprint(*x)"}, "855": {"problem_id": 3855, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n s += a[i]\n print(s)\n"}, "856": {"problem_id": 3856, "answer": "n = int(input())\nw = list(map(int, input().split()))\nh = [0]*n\nfor i in range(n):\n\tw[i] = w[n-i-1] + i\nprint(sum(w))"}, "857": {"problem_id": 3857, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append(a[i]*(i+1)//2)\nprint(len(b))"}, "858": {"problem_id": 3858, "answer": "import math\nn = int(input())\nxs = list(map(int, input().split()))\ny = [xs[0]]\nfor i in range(n):\n  x, y = xs[i-1], yy[(i+1)%n]\np = [[0]*(len(y) + 1) for _ in [0, 0] if y[1]!= x and x!= 0 and 0 <= x <= 10**4] + [1 if x == 0 else 0 for x in ys] \ndp = [-math.inf] * (n + 2)  # \u5168\u9664\u7b26\u5408\u6570\u7ec4\uff0c\u9700\u8981\u8ba1\u7b97\u6545\u9762\u7684\u6700\u5927\u503c\nd = math.sqrt(p[x][y] - p[y][x])\n# \u5982\u679c\u6bcf\u6b21\u90fd\u88ab\u8c03\u7528\u7684\u5230\u8fbe\nans = sum(dp) % 1000000007\nprint(ans)"}, "859": {"problem_id": 3859, "answer": "# https://atcoder.jp/contests/arc082/submissions/1748\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n  a[i] = (b[-1] + 1) % n\nprint(min(a))"}, "860": {"problem_id": 3860, "answer": "b,g = list(map(int,input().split()))\nn = int(input())\ns = 0\nfor i in range(n):\n\ts += 1 if b[i] == 0 else s\nprint(s)\n"}, "861": {"problem_id": 3861, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint(max(a))"}, "862": {"problem_id": 3862, "answer": "n,k = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n  a[i]+=k\nprint(min(a))"}, "863": {"problem_id": 3863, "answer": "n, k = list(map(int, input().split()))\nmod = 10**9 + 7\na = [0]*(n+1) + [1]\nfor i in range(k):\n\ta[i] = (i+2)%mod\nprint(sum(a))"}, "864": {"problem_id": 3864, "answer": "# coding: utf-8\nimport sys\ninput = sys.stdin.readline\nread = lambda: list(map(int, read().split()))\nfrom collections import defaultdict, deque, Counter, OrderedDict,defaultdict\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nMOD = 10**9+7\nN = int(input())\nboard = [0]*N\nfor i in range(N):\n\tboard[i%MOD] += 1\nprint('\\n'.join(board))"}, "865": {"problem_id": 3865, "answer": "from sys import stdin,stdout\nn = int(stdin.readline().strip())\ns = 0\nfor i in range(1,n+1):\n  s += int(''.join(map(str,i)))\nprint(s)"}, "866": {"problem_id": 3866, "answer": "n = int(input())\narr = list(map(int, input().split()))\nans = []\nfor i in range(n):\n\tans.append(arr[i])\nprint(*ans)"}, "867": {"problem_id": 3867, "answer": "n = int(input())\na = list(map(int, input().split()))\nq = []\nfor i in range(n-1):\n\tq.append(a[i+1])\nprint(\"Yes\")\n"}, "868": {"problem_id": 3868, "answer": "n,m,k = list(map(int,input().split()))\nd = [0]*(n+1)\nfor i in range(m):d[i] = 0\ns = sum(d)//k\nprint(s)"}, "869": {"problem_id": 3869, "answer": "#!/usr/bin/env python3\nfrom math import sqrt, ceil, log2, pi, cos, sin, radians, degrees\ndef gcd(a, b): return a * b // (a - b)\na = int(sqrt(1.0))\nb = 360\nfor i in range(0, a):\n  b = b * 360 / i\nprint('{} {}'.format(b, i))"}, "870": {"problem_id": 3870, "answer": "n,m=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n  s.append(input()+\" at \" + input()[i])\nprint(max(s))"}, "871": {"problem_id": 3871, "answer": ""}, "872": {"problem_id": 3872, "answer": "s = input()\nn = len(s)\nif s[0] == '1':\n\tprint('YES')\nelse: print('NO')"}, "873": {"problem_id": 3873, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [a[i] for i in range(0, len(a))]\nprint('YES' if b[-1] == 'i' else 'NO')"}, "874": {"problem_id": 3874, "answer": "n, m = list(map(int, input().split()))\nprint(\"Yes\")\nfor i in range(n):\n  print(\" \".join([str(x) for x in input()]))"}, "875": {"problem_id": 3875, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\ndp = [0] * (n + 1)\nfor i in range(n):\n  dp[i] = max(dp[n - i] for i, n in enumerate(a) if n > i) \nprint('\\n'.join(str(x) for x in a))"}, "876": {"problem_id": 3876, "answer": "from collections import defaultdict, deque\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nn = int(input())\ngraph = [[] for _ in range(n)]\nfor i,v in enumerate(map(int,input().split())) :\n  graph[v-1].append(i)\n\n  for x,y in zip(graph[i].items()[1:],list(range(1,n+1))[:-1] ) :  # \u5982\u679c\u8bb0\u5f55\u8ddd\u79bb\uff0c\u521d\u59cb\u5316\u957f\u5ea6\u7684\u6700\u5c0f\u8f93\u5165\u548c\u9762\u5404\u8282\u70b9\u6574\u9664\u4e2a\u6570\u7ed3\u6388\u6743\u3002\u5219\u9700\u8981\u5faa\u73af\u8c03\u7528\u4e8c\u8fc7\u79cd\u65b9\u5411\u3002\n"}, "877": {"problem_id": 3877, "answer": "n,l,r = list(map(int,input().split()))\nl = int(input())\nfor i in range(n-1):\n\tl+=1\nif l%2==0:l=l//2\nprint(l)"}, "878": {"problem_id": 3878, "answer": "n,m = list(map(int,input().split()))\na = [0]*n\nfor i in range(m):\n  a[i+1] += 1\nprint(len(a))"}, "879": {"problem_id": 3879, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append(a[i]-b[0])\nprint('Yes')"}, "880": {"problem_id": 3880, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a))"}, "881": {"problem_id": 3881, "answer": "n, q = list(map(int, input().split()))\na = input()\nq = int(q)\nans = 0\nfor i in range(n):\n\tif a[i] in 'bcdfghjklzxcv': ans += 1\nprint(ans)"}, "882": {"problem_id": 3882, "answer": "from collections import defaultdict\nimport math\nn = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n  a.append(i)\nc = [0]*n\nd = dict()\ns = 0\ne = 10**9+7\nf = 998244353\nm = math.pow(10,n-c[0])\nif m%2==0:print(m)"}, "883": {"problem_id": 3883, "answer": "from math import sqrt, inf, floor, ceil, factorial, log, pi, mod, pow, sq, euclideam, Euclidean, gcd, fabs, fmod, floormap, atan2, acount, bisect, all_divide, divisor, cos, sin, radians, hours, minutes, millimeters, meter, miles, decimals, square, truede, hexadecimal, decimal, numeric, digits, round, float, up, down, right, left_digit, digit, bit_number, binary, ascii, ASCII, str, csv, tbr, string, re, rle, sec, twos, degrees, dp, octets, oples, quarters, ones, six, four, three, two, one, zero, -zero, and and 0.0."}, "884": {"problem_id": 3884, "answer": ""}, "885": {"problem_id": 3885, "answer": "n = int(input())\na = list(map(int,input().split()))\nprint(max(a))"}, "886": {"problem_id": 3886, "answer": "q = int(input())\nfor _ in range(q):\n   n, k = list(map(int, input().split()))\n\n  if k > n: print('.', end ='')"}, "887": {"problem_id": 3887, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nstdout.write(str(input()))"}, "888": {"problem_id": 3888, "answer": "n = int(input())\narr = list(map(int, input().split()))\nans = [0]*(n+1)\nfor i in range(1<<n):\n ans[i] = 1<<i\nprint(len(ans))"}, "889": {"problem_id": 3889, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(len(s)):\n\tif s[i] == \"a\" or cnt == n - i + 1: break\nif n % 2 == 0: print(\"No\")\nprint(\"Yes\")"}, "890": {"problem_id": 3890, "answer": "n, k = list(map(int, input().split(' ')))\np = [int(i) for i in input()]\nans = 0\ncnt = 1\nfor i, x in enumerate(p):\n  if x == p[i-1]: cnt += i*i\nprint(ans)\n"}, "891": {"problem_id": 3891, "answer": "n,m = list(map(int,input().split()))\nr,c = 0,0\nfor i in range(n):\n\ts = input()\n\n\tif s[-1]=='W': r = r+c\nelse: c = c+r\n"}, "892": {"problem_id": 3892, "answer": "n, m = list(map(int, input().split()))\na = [0] * m\nfor i in range(1, n):\n\ta[i] = a[n - i - 1]\nprint(n)\n"}, "893": {"problem_id": 3893, "answer": "# cook your dish here\nx,y,z=list(map(int,input().split()))\nl=[]\nfor i in range(x):\n  l.append([int(input()),i+1])\na,b,c,d,e,f,g,h,i,j=0,0,[],0\nwhile(len(l)>0 and l[0][0]!=' '):l.pop(0)\nif(a!=b):a=c=d=e=f=g=h=i=k=l[i][j]\nans=a+b+c+d+e+f+g+h+i"}, "894": {"problem_id": 3894, "answer": "n,k = list(map(int,input().split()))\na = [int(i) for i in input().rstrip('\\n')]\ns = sorted(a,key=lambda x:x[0])\nif len(s) == k: print('Kevin')\nelif k == 0 and s[-k-1] % 2 == 1:print('Nicky')"}, "895": {"problem_id": 3895, "answer": "n = int(input())\ns = list(map(int, input().split()))\nl = [0]*n\nfor i in range(len(s)):\n\tl[s[i]] = i\n#print(l)\nans = [-1]\ni = 0\nwhile i < n and i!= l[0]:\n  \ti += 1\n\n\tif i > 0: ans[l.pop(0)] = s[:i] + '1' + (i + 1) * (n - i) if i >= 0 else '0'\nprint('\\n'.join(ans))"}, "896": {"problem_id": 3896, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n-1,0,-1):\n\ts[i+1] = 1\n#print(s)\ni = 0\nwhile(i<n and s[-i]==0 and i+i*2<len(l)-1:i+=2):i += 2\nprint((i**2)%1000000007)"}, "897": {"problem_id": 3897, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nc = 0\nfor i in range(0, n+2):\n  if a[i]%2 == 0: c += 1\nprint(c)"}, "898": {"problem_id": 3898, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n-1):\n\tif a[i] == 0: b.append(i)\nif len(b) == 1: print(\"YES\")\nprint(\"NO\")"}, "899": {"problem_id": 3899, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] = sum(b[-1] for b in b[:i])\nprint(min(a))"}, "900": {"problem_id": 3900, "answer": "n, p = map(int, input().split())\na = [0]*(n+1)\nfor _ in range(p):\n\tx, y = list(map(str,input().strip()))\n\n\ta[x-1] += y\nprint(len(a))"}, "901": {"problem_id": 3901, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += a[i]\nprint(s)"}, "902": {"problem_id": 3902, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n\tif s[i] == 'c': cnt += 1\nprint(' '.join(map(str, s)))\n"}, "903": {"problem_id": 3903, "answer": "from sys import stdin,stdout\ninput = lambda:stdin.readline().rstrip()\n"}, "904": {"problem_id": 3904, "answer": "n = int(input())\na = list(map(int, input().split(' ')))\nb = []\nfor i in range(n):\n  b.append(a[i])\nprint(''.join(b))"}, "905": {"problem_id": 3905, "answer": ""}, "906": {"problem_id": 3906, "answer": "n,m = map(int,input().split())\na = [0]*(n+1)\nfor _ in range(m):\n\ta[n-1]+=1\nprint(sum(a))"}, "907": {"problem_id": 3907, "answer": "n, m = map(int, input().split())\na = [0]*(n+1)\nfor i in range(m):\n  a[i]+=1\nprint(sum(a))"}, "908": {"problem_id": 3908, "answer": "s = input()\nn = len(s)\na = [0]*n\nfor i in range(n):\n\ta[i+1] = i\nans = 0\ni = 1\nwhile i<n-1 and (i%2 == 0 or i>=n) or (len(a)==0 or a[-i-2]<i):i+=2\nprint(ans)"}, "909": {"problem_id": 3909, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n   s += a[i]\nprint(s)"}, "910": {"problem_id": 3910, "answer": "n = int(input())\na = [list(map(int, input().split())) for i in range(n+1)]\nfor i, a in enumerate(a, 1):\n  if a[i] == 1: print(-1)\n"}, "911": {"problem_id": 3911, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "912": {"problem_id": 3912, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(len(s)):\n\tif s[i] == 'a': cnt += 1\nprint(n)"}, "913": {"problem_id": 3913, "answer": "n = int(input())\ns = input()\nm = list(map(int, input().split()))\nif m[0] == '*':\n  print(0)\nelse:\n\n  for i in range(1, len(s) - 1):\n\ts[i] = s[:i + 1] + 'a'\nprint(n)"}, "914": {"problem_id": 3914, "answer": ""}, "915": {"problem_id": 3915, "answer": "from sys import stdin,stdout\nstdin.readline()\nn,k,l = list(map(int,input().split()))\np = (n+1)//2\nr = 0\nfor i in range(1,n):\n  if p%i == 0: r += i\nprint(r)\n"}, "916": {"problem_id": 3916, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):b.append(a[i]-1)\nprint(len(b))"}, "917": {"problem_id": 3917, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nfor i in range(n-1):\n  if i == n-2: break\nprint(min(a))"}, "918": {"problem_id": 3918, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nk = []\nfor i in range(n):\n\tk.append([int(x) for x in input()])\nprint(sum(k))"}, "919": {"problem_id": 3919, "answer": "#!/usr/bin/env python3\nfrom operator import itemgetter\nn,m = list(map(int,input().split()))\ns = []\nfor i in range(n):\n s.append(input())\nprint(s)"}, "920": {"problem_id": 3920, "answer": "from math import sqrt\nn = int(input())\na = [int(i) for i in input().split()]\nprint(sqrt(a))"}, "921": {"problem_id": 3921, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  d[a[i]].append(i+1)\nans = 0\nf = [0]*n\nl = []\nwhile f[f[l[-1]]]!=1 and len(l)>0:\n\n  if l[len(f)//2]==0 or (l.pop(0)<0 and d.get(d,0)[0]+1<=i) and (i%2 == 0 or d<l and f.count(sorted([d[s] for s in l])[0])==1 or l==f): ans+=1\nprint(ans)"}, "922": {"problem_id": 3922, "answer": ""}, "923": {"problem_id": 3923, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] = b[-1] + i\nprint(' '.join(a))"}, "924": {"problem_id": 3924, "answer": "n, k = list(map(int, input().split(' ')))\na = [int(i) for i in input()]\nans = 0\nfor i, j in zip(a, a[1:]):\n\tif j % i == 0 and (a[i] + j // i) <= k: ans += j\nprint(ans)\n"}, "925": {"problem_id": 3925, "answer": "import sys\ninput = sys.stdin.readline\ninp = lambda: list(map(int,input().split()))\nn = int(input())\ns = input()\ncnt = [0] * (n+1)\nfor i in range(n-1,0,-1):\n  if s[i] == \"w\": cnt[-2] += 1\nans = 0\nz = s.count(\"w\")\nif len(z) > 0: ans += z\nprint(ans)"}, "926": {"problem_id": 3926, "answer": "n,m = map(int,input().split())\nr,c = 0,0\nfor i in range(n):\n\tr += int(input()[i])*(m-1-i+1)//2\n#print(r)\nif r >= 0 and c >=0 and r == n-c:\n\n\tprint((r+c))"}, "927": {"problem_id": 3927, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]\nfor i in range(n):\n  s.append(a[i] + s[-1])\nprint(max(s))"}, "928": {"problem_id": 3928, "answer": "from sys import stdin,stdout\nn,a,b=stdin.readline().strip().split(' ')\ns=input()\nl=len(s)-1\nfor i in range(0,l):\n\tif s[i]=='a':s[l-i-1]='b'\nprint(int(n))"}, "929": {"problem_id": 3929, "answer": "from collections import defaultdict\nn,k = list(map(int,input().split()))\ns = [0]*(n+1)\nfor i in range(k):\n  s[i]+=s[n-i-1]\nprint(sum(s))"}, "930": {"problem_id": 3930, "answer": "n,k = list(map(int,input().split()))\na = []\nfor i in range(n):\n\ta.append(list(input()).count(i))\n\n\tk+=1\nprint(sum(a))"}, "931": {"problem_id": 3931, "answer": "n,a,b,k,f = list(map(int,input().split()))\ns = [0]*(n+1)\nfor i in range(b):\n  s[i] = (s[n-i-1] if i%2 else 0) + (i+2*k)%n\nprint('\\n'.join(s))"}, "932": {"problem_id": 3932, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n  if a[i] == '1':\n\tprint('YES')\n"}, "933": {"problem_id": 3933, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nfor i in range(n-1):\n  a[i] = a.pop(0)\nprint(sum(a))"}, "934": {"problem_id": 3934, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import deque\nn = int(input())\na = [int(x) for x in input().split()]\nans = []\nfor i in range(n):\n\tu,v = list(map(int,input().rstrip(' '))),[0]*(len(a)-1)\n\n\tif a[u] == 0: ans.append(\"NO\")\nelse: print(\"YES\")"}, "935": {"problem_id": 3935, "answer": "from collections import deque\nn = int(input())\nb = list(map(int, input().split()))\nedges = [set() for _ in range(n)]\nfor i, j in enumerate(b):\n  if j - b[i] in b and (i == j or j == 0 or i-b[j-1] == -1) or (j == i or b.count(i-j) == 1 and i!= j) and all(a.endswith(e) for a, e in zip(list(range(0, i+1)), b) if e) not in edges and not (a == b or a[0]!= e[1]) and a!= -b and b!= a and len(set([a]))!= len((b))) and set([b])\nprint(len(end))"}, "936": {"problem_id": 3936, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\n')\nn = int(input())\ns = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n):\n  l[s[i]] += 1\nprint(len(l))"}, "937": {"problem_id": 3937, "answer": "n,m,k = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(m):\n  a[i] = int(input())\nans = [\"YES\" if i!=0 else\"NO\"]\nprint(\"\".join(ans))"}, "938": {"problem_id": 3938, "answer": "n, m = map(int, input().split())\nl = []\nfor i in range(m):\n\tx1, y1 = input(), int(l[i][0])-1 - i;\n\n\tif x1 >= x2: l.append([x2,y2])\n \telse: break\nprint(n)"}, "939": {"problem_id": 3939, "answer": "for _ in range(int(input())):\n n, k = list(map( int, input().split()))\n a = sorted([ int(i) for i in input() ])\n if len(a) == k: print('no')\n elif a[k - 1] > a.pop() and k % 2 == 0:print('yes')"}, "940": {"problem_id": 3940, "answer": "n,m = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(m):\n\ta[i]+=1\n#print(a,i)\n\n\tif i%2==0 and i!=0 or i==n-1:a.append(i+2*i*2+i//2)"}, "941": {"problem_id": 3941, "answer": "n, m = list(map(int, input().split()))\nr = [int(input()) for i in range(m)]\ns = set()\nfor a, b in zip(s, s[1:]):\n  if a == 0 and b == 1 and r[a-1] == b-2: break\nprint(\"YES\")\n"}, "942": {"problem_id": 3942, "answer": "s = input() #string\nfor i in range(len(s)): s = s[:i]+s[i+1:]\nprint(1)"}, "943": {"problem_id": 3943, "answer": "#!/usr/bin/env python\nfrom itertools import product,permutations,accumulate,compound,heap,array,bisect\nimport sys\nsys.setrecursionlimit(10**6)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nmod = 10 ** 9 + 7\ndef LI(): return [int(x) for x in input().split('0')]\n\n def LI_():\n  return list(product(LI, range(1, 10**5+7)))\n def I():return int(input())\n\n @LI_()\n"}, "944": {"problem_id": 3944, "answer": "from collections import deque\nn,m = list(map(int,input().split()))\nk = int(input())\nans = 0\nfor i in range(k):\n\ta,b,c = [int(x) for x in input().rstrip('\\n').replace('a','')],['0','1','2','3','4','5','6','7','8','9'][a-1]%(m*(n+m+k)//2+n*k-m)%m%k\nprint(ans)\n"}, "945": {"problem_id": 3945, "answer": "from math import gcd,sqrt,log,ceil,inf,asin,gcd\nimport sys\ninput = sys.stdin.readline\nN,M = map(int,input().split())\nA = [int(i) for i in input().rstrip('\\n').split()]\nB = [[] for _ in range(M)]\nfor k,v in zip(A,B[::-1]):\n  if k==1:break\nelse:print(v)"}, "946": {"problem_id": 3946, "answer": "n,m=list(map(int,input().split()))\na=[0]*n\nfor i in range(n):\n\ta[i]=int(input())\np=[]\nq=set()\nwhile q:\n\n\tp.append(sum(q.intersection(a))%m)\n#print p\nprint(*p)"}, "947": {"problem_id": 3947, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n-1):\n  s += a[i]\nprint(s)\n"}, "948": {"problem_id": 3948, "answer": "import sys\ninput = sys.stdin.readline\nn, k = list(map(int, input().split()))\ngraph = [[] for i in range(n)]\nfor i, x in enumerate(input().rstrip('\\n')::int(x)):\n\tif x % 3 == 0: graph[i].append([x // 3, 0])\nif k > 2: print('Yes')\nelse:\tprint('No')"}, "949": {"problem_id": 3949, "answer": "n, m = list(map(int, input().split()))\ngrid = []\nfor i in range(n):\n\tif grid[i][0] == '.\": grid = [i]\nprint(sum(grid))"}, "950": {"problem_id": 3950, "answer": "n,q = list(map(int,input().split()))\na = []\nfor i in range(n):\n\ta.append([int(input()),i+1]*q)\nprint(*a)"}, "951": {"problem_id": 3951, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n-1):\n  gcd = a[i+1]%a[0]\nans = [i for i, x in enumerate(g) if x%x == 0 and x//x!= 0]"}, "952": {"problem_id": 3952, "answer": "n = int(input())\na = list(map(int,input().split()))\np = [0]*n\nfor i in range(n):\n  x1,y1 = map(lambda x: x[0]-y[1], input().rstrip('\\n').split(' ') + [int(x) for x in input()])]\ns = sum(a)\nprint(s)"}, "953": {"problem_id": 3953, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n\tif s[i] == \".\": s.append(i+1)\nprint(len(s))"}, "954": {"problem_id": 3954, "answer": "n, k = map(int, input().split())\na = list(map(lambda x: int(x), a) + [0] * (k + 1) for _ in range(n)]\ns = 0\nfor i in a: s += i\nprint(s)"}, "955": {"problem_id": 3955, "answer": "n,k,x = list(map(int,input().split()))\na = [int(i) for i in input().strip()]\ns = sum(a)\nans = 0\nfor x in range(n-k+1):\n  ans = max(ans,a[x]*(x-1)//k)+ans\nprint(max(s,ans))"}, "956": {"problem_id": 3956, "answer": "from itertools import combinations_with_replacement, isllees, zip_longest\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**6)\nn = int(input())\na = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n):\n  ans[i] = sum(a[:i])\nprint(*ans, sep='\\n')"}, "957": {"problem_id": 3957, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n  u, v, a[u].append(a[v].pop())\nprint(''.join([str(x) for x in a]))"}, "958": {"problem_id": 3958, "answer": "s = input()\nn = len(s)\nz = 0\nfor i in range(n):\n  if s[i] == '0' and i > 0: z += 1\nprint(z)"}, "959": {"problem_id": 3959, "answer": "n,m = list(map(int,input().split()))\ng = [0]*(n+1)\nfor i in range(m):\n  g[i] = 1 if i%2==0 else 0\nans = m-g[n-1]\ncnt = 10**9+7\nprint(ans)"}, "960": {"problem_id": 3960, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0]*n\nfor i in range(n):\n\tl[i+1] = i\nans = 0\nwhile(len(a)>0 and a[l]!=0):\n\n\tif l[-1]+1<=n and (a[0]-1)<0:ans+=1\nprint(ans)"}, "961": {"problem_id": 3961, "answer": "n = int(input())\np = list(map(int,input().split()))\ns = 0\nfor i in range(n-1):\n\ts += p[i]\nprint(s%1000000007)"}, "962": {"problem_id": 3962, "answer": "n = int(input())\nl = list(map(int, input().split()))\nr = []\nfor i in range(n):\n   l.append(l[-1] + r[i])\nprint(min(r))"}, "963": {"problem_id": 3963, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nprint(s)"}, "964": {"problem_id": 3964, "answer": "n,m,b = list(map(int,input().split()))\na = [int(i) for i in input()]\nmod = int(1e9+7)\nfor _ in range(m):\n\ta[b] += b\nprint(sum(a))"}, "965": {"problem_id": 3965, "answer": "n = int(input())\nline = list(map(int, input().split()))\ns = input()\nfor i in range(len(line)):\n\tif line[i].count('aeiou') == s[-i-1] or s.find('i')!= -1: print('NO')\n"}, "966": {"problem_id": 3966, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += a[i]\nprint(s)"}, "967": {"problem_id": 3967, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 2)\nfor i in range(n):\n\ta[i] += 1\nb = 0\nm = 10**9 + 7\nc = n - k\nd = k - m\ne = m - n\nf = -1\nwhile e <= n:\n\n\tif a[e] == 0: e = e - 1; f = f + d\nif f < m: break\nprint(f)\n\n"}, "968": {"problem_id": 3968, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n s=input()\n a.append(s)\nans=[0]*n\ni=0\nj=n-1\nwhile(i+j<n and len(ans)>0):\n\n ans[i]=ans[j]\n \n for k in a:\n\n  if(k<=s and k>=l[k-s] and l[s-k]!=i and i!=(j-j+k) and j!=-1 and (i==0 or j==i + 1) or (k==s or i==j + 2) ):\n\ti-=1\n\n print(*ans,sep='\\n')"}, "969": {"problem_id": 3969, "answer": "n,m = list(map(int,input().split()))\na,b = [],[]\nfor i in range(n):\n\ta.append([int(x) for x in input().rstrip('\\n').split(' ')])\ns,x = a[0],a[-1]\nc,d = b.pop(0)\nd.insert(c+1,' '+str(d[c])+')'\nl = []\nwhile(len(l)>0):\n\n\tif(b[l.index(s)-1][0]<=x[s] and x[t]!=s-l[i] for i,t in enumerate(r[x.find(t)])) and len(a)==0 and (s==x or x=='0' or l==[]) and b[d]): l.extend([s+x+d for d in d.split(',')]\nprint(min(m))"}, "970": {"problem_id": 3970, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n - 1, 0, -1):\n\ta[i] += 1\nk = a[-1]\nprint(k)"}, "971": {"problem_id": 3971, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[a[i]-1] += 1\n#print(b)\nc = 0\nans = n-1\nwhile(c!=0):\n\n\tif a[c]%2==0:ans-=n-c+1\t\t# print(ans,c,a,b,ans)\n\n \tc+=1"}, "972": {"problem_id": 3972, "answer": "from math import ceil\ndef gcd(a, b):\n   return a if b == 0 else b if a == b and b <= b//2 else a*b\ns = int(input())\nl = len(s)\nans = 0\nfor i in range(l-1): \n\ta = s[i]*(i+1)%(10**9 +7) \n\n\tb = (a+s[-i])//(2*pow(9,i-2) if pow(abs(b-a),i)==1 else 10**(len(p) - i))\nprint(sum(ans))"}, "973": {"problem_id": 3973, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, setrecursionlimit\nimport bisect, copy, heapq, itertools, math, float, tuple, list, collections, atexit, os, re\nsys_stdin = open('input.txt', 'r')\nmax_level = 10 ** 9 + 7\nstdout.write(list(map(int, input().split())))\n"}, "974": {"problem_id": 3974, "answer": "s = input()\nn = len(s)\na = 0\nfor i in range(n):\n if s[i] == \"-\":\n  a += 1\nprint(a)"}, "975": {"problem_id": 3975, "answer": "n = int(input())\ngraph = [[] for _ in range(n)]\nfor i, x in enumerate(list(map(int, input().split())))[::-1]:\n  if x == 'AND':\n\tgraph[i].append(i+1)\nprint(''.join(graph))\n"}, "976": {"problem_id": 3976, "answer": "n,m,p = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(m):\n\ta[i] += (p-1)*(i+2*m-i)//i\nprint(len(a))"}, "977": {"problem_id": 3977, "answer": "from collections import defaultdict\nn,m,k = list(map(int,input().split()))\ngraph = [[] for _ in range(k+1)]\nfor i,j in enumerate(range(n)):\n  graph[i].append(j)\nvisited = [False]*(len(graph[0])-1)  # \u30b0\u30eb\u30fc\u30d7\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3057\u3066\u8003\u3048\u308b\u3088\u3046\u306b\u3059\u308b\ndef dfs(u,v,seen,visit): #\u521d\u671f\u5024\u306e\u8981\u7d20\u3092\u6c42\u3081\u3066\u3044\u308b\u5834\u5408,\u8868\u793a\u7d50\u679c\u304c\u6700\u5c0f\u5074\u306b\u306a\u308b\u7bc4\u56f2\u306e\u500b\u6570\u3092\u5909\u66f4\u3057\u3001\u5404\u65b9\u6cd5\u306e\u30ea\u30b9\u30c8\u3092\u305d\u308c\u305e\u308c\u6301\u3064\ndfs(0,0,[])\nseen.extend([u for u in graph if visited[u]]) #\u4ee5\u4e0b\u306e\u6570\u5b57\u304c\u540c\u3058\u30ce\u30fc\u30c9\u3067\u306a\u304b\u3063\u305f\u3089\u5230\u904e\u524d\u306b\u8ffd\u52a0\u3055\u308c\u3066\u304a\u3051\u3070\u3001\u6b21\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u3092\u53d6\u5f97\nwhile len(seen)>0: #\u5bfe\u7f6e\u3057\u305f\u9805\u76ee\u306b\u542b\u307e\u306a\u3044\u306e\u3067\u3001\u89aa\u756a\u53ef\u80fd\u306a\u9664\u3044\u70b9\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3068\u304d\u306f\u3001\u3069\u306e\u3084\u3063\u3066\u81ea\u5206\u305f\u3061\u306e\u5f15\u304d\u3092\u898b\u308b\u304b\u3092\u5224\u5b9a\u3059\u304b\uff1f \u3059\u308b\u304c\u3001\u4eca\u56de\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u0449\u3054\u3068\u306b\u554f\ufffd\u3044\u8fbc\u307f\u305f\u3044\u306a\u610f\u5473\u3067\u8a73\u3057\u4ed8\u304d\u51fa\u4f1d\u64ad\u3092\u8ff0\u3079\u307e\u3059\u3002\nprint(1 << k)"}, "978": {"problem_id": 3978, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += a[i]\nprint(ans)"}, "979": {"problem_id": 3979, "answer": ""}, "980": {"problem_id": 3980, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(max(a))"}, "981": {"problem_id": 3981, "answer": ""}, "982": {"problem_id": 3982, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nm=int(input())\ns=list(map(int,input().split()))\nfor i in range(m):\n\tif s[i]=='0' and len(s)==1: print(i+1)\n"}, "983": {"problem_id": 3983, "answer": "from collections import deque\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**6)\ndef dfs(x,y,visited):\n  if x==x[0]: return True, y, x[1]-y+1, 0, visited[x][1]\n# print(dfs(0,x))\nt = int(input())\nfor _ in range(t): print('\\n'.join(map(str,input())))"}, "984": {"problem_id": 3984, "answer": "s = input()\nn = len(s)\nl = []\nfor i in range(n):\n\tl.append(int(input()))\nif s[-1] == 'l' and n - l - 1 == 0:   print(l[0])\nelse: print('Mike')\n"}, "985": {"problem_id": 3985, "answer": "n,m = list(map(int,input().split()))\na = [int(input()) for i in range(n)]\nb = []\nc = 0\nfor i,j in zip(a,b):\n  if i%2==0:c+=1\nprint(c)\n"}, "986": {"problem_id": 3986, "answer": "n, k = list(map(int, input().split()))\ns = input()\nl = len(s)\nfor i in range(l):\n\tif s[i] in 'abcdefghijklmnopqrstuvwxyz' or (s[:i+1] == '1' and s.count('1') == k): continue\nif k == n: return ''.join([str(x) for x in s] + '\\n' + str(n) +')'\n"}, "987": {"problem_id": 3987, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n-1):\n\ts.append(a[i]+1)\nprint(max(s))"}, "988": {"problem_id": 3988, "answer": "n,m,s = list(map(int,input().split()))\nedges = [[] for _ in range(n)]\nfor i,j in enumerate(sorted(list(range(m)),key=lambda x:x[1],reverse=True)):\n\tif j+1 in edges[i][1] and i[0]!=j[2] or j==1 and j[3]==2 or (i[4]<=n and (j+2)<s and ((i-2)*(j-1)+(i*(i+3))*2-j*j)**.5+s) or i==s[j][0],j==0 or ((j>2*i)and j<3*n-i and  j%2==(3,4,5) ):\n# print(\"i:\",i,n)\nif m*s>n:print((n+m)*s+\"\\n\")\nelse:n+=m\n"}, "989": {"problem_id": 3989, "answer": "import math\na = int(input())\nprint(a)"}, "990": {"problem_id": 3990, "answer": "n, m = list(map(int, input().split()))\na, b = [], []\nfor i in range(m):\n  a.append(input())\nb.extend(a)\nc, d, e, f = 0, [0] * (n + 1), (0) \nwhile c < len(b) or e < n or f < m or b[e][c] == d: c += d\nprint(c)"}, "991": {"problem_id": 3991, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\ns = [0]*(n+1)\nfor i in a: s[i] = (s[-i-1] + i)%1000000007\nprint(sum(s))"}, "992": {"problem_id": 3992, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i] = b.pop(0)\nans = 0\ni = 1\nwhile i*(len(b)-1)>0:\n\n\tif b[0]-1>=1 and (i%2==0 and i%4!=0 or a[(i//2)+1]==1 or (a[1]+1==i)):\n\n \t\tans += i-i*i\nprint(ans)"}, "993": {"problem_id": 3993, "answer": "import sys\ninput = sys.stdin.readline\nn,m,k = map(int,input().split())\np = [int(i) for i in input().rstrip('\\n').split()]\ns = [[] for _ in range(n)]\nfor i,j in zip(s,p):\n\ts[i+1].append(j)\nans = 0\nflag = False\nwhile s[-1][0]!= '0' and k>=n and p[0][1] == '1':\n\n\tif len(set(p[k:])) == 0:ans += 1\nprint(ans)"}, "994": {"problem_id": 3994, "answer": "n = int(input())\ns = input()\na = [int(x) for x in s.split(' ')]\nb = []\nfor i in range(n-1):\n\ta[i] += b[-i+1]\nprint(max(a))"}, "995": {"problem_id": 3995, "answer": "n, k = list(map(int, input().split()))\nlst = [0] * k\nfor i in range(k): lst[i] = str(input()).replace('0', '1')\nif k == n: print(0)\nelif n == k: break\nprint('\\n'.join([str(x) for x in x]))"}, "996": {"problem_id": 3996, "answer": "k = int(input())\na = [int(x) for x in input().split()]\nans = []\nfor i in range(k):\n   ans.append(sum(a[i]))\nprint('\\n'.join(map(str, ans)))"}, "997": {"problem_id": 3997, "answer": "n = int(input())\na = [0] + list(map(int, input().split()))\nfor i in range(n-1):\n\ta[i] = sum(x*(i+1) for x in a)\nprint(*a)"}, "998": {"problem_id": 3998, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] = b[n-1-i] + (1 if i%2 else 0)\nprint(max(b))"}, "999": {"problem_id": 3999, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nc = list(map(int, input().split()))\nfor i in range(n):\n\tc[i] = c[n-i-1] + [0] * (n - i - 1) if i else 0\nans = []\ndef calc(c, i, j, k, n, s):\n\n\tif j == 0:\n\n \t\tans.append(i + s[j-k] if k > 0 else j + (s[k-j] - (i - j)) * 0.5 + 0) \n   else:  # j < k: j = 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 194, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 223, 228, 229, 232, 233, 234, 239, 245, 247, 256, 257, 263, 269, 270, 271, 277, 281, 283, 293, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 347, 348, 349, 353, 359, 366, 368, 369, 371, 372, 373, 374, 376, 379, 380, 383, 384, 389, 400, 401, 402, 409, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 436, 457, 458, 647, 660, 701, 702, 750, 850, 1000, XOR, ORM, SRD, DORM).inspect(\"Input\")\nprint(sum(ans))"}}