{"0": {"problem_id": 2000, "answer": "from collections import defaultdict\nn, m, a, b = list(map(int, input().split()))\nd = defaultdict(list)\nfor i in range(n):\n    u, v, c = list(map(int, input().split()))\n    d[u].append(v)\n    d[v].append(u)\n\ndef is_amicable(u, v, c):\n    if u == v:\n        return True\n    elif is_amicable(u, v, c):\n        return False\n    else:\n        return True\n\ndef main():\n    n, m, a, b = list(map(int, input().split()))\n    d = defaultdict(list)\n    for i in range(n):\n        u, v, c = list(map(int, input().split()))\n        d[u].append(v)\n        d[v].append(u)\n    \n    q = deque([(0, a, b)])\n    q.append((0, a, b))\n    while q:\n        u, v, c = q.popleft()\n        if is_amicable(u, v, c):\n            print(u, v, c)\n            return\n        q.append((u, v, c))\n        q.append((v, u, c))\n        q.append((u, v, c))\n        q.append((v, u, c))\n        q.append((u, v, c))\n        q.append((v, u, c))\n        q.append((u, v, c))\n        q.append((v, u, c))\n        q.append((u, v, c))\n        q.append((v, u, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q.append((u, v, c))\n        q"}, "1": {"problem_id": 2001, "answer": "from sys import stdin\ninput = stdin.readline\ndef f(s):\n    return 0 if s[0] == '0' else s[1] * -1\n\nn = int(input())\nX = list(map(int, input().split()))\nd = int(input())\nfor i in range(n):\n    x = list(map(int, input().split()))\n    d += x[0]\n    d += x[1]\n    x.insert(0, '0')\n    x.insert(0, '1')\n    x.insert(0, '2')\n    x.insert(0, '3')\n    x.insert(0, '4')\n    x.insert(0, '5')\n    x.insert(0, '6')\n    x.insert(0, '7')\n    x.insert(0, '8')\n    x.insert(0, '9')\n    x.insert(0, '0')\n    x.insert(0, '1')\n    x.insert(0, '2')\n    x.insert(0, '3')\n    x.insert(0, '4')\n    x.insert(0, '5')\n    x.insert(0, '6')\n    x.insert(0, '7')\n    x.insert(0, '8')\n    x.insert(0, '9')\n    x.insert(0, '0')\n    x.insert(0, '1')\n    x.insert(0, '2')\n    x.insert(0, '3')\n    x.insert(0, '4')\n    x.insert(0, '5')\n    x.insert(0, '6')\n    x.insert(0, '7')\n    x.insert(0, '8')\n    x.insert(0, '9')\n    x.insert(0, '0')\n    x.insert(0, '1')\n    x.insert(0, '2')\n    x.insert(0, '3')\n    x.insert(0, '4')\n    x.insert(0, '5')\n    x.insert(0, '6')\n    x.insert(0, '7')\n    x.insert(0, '8')\n    x.insert(0, '9')\n    x.insert(0, '0')\n    x.insert(0, '1')\n    x.insert(0, '2')\n    x.insert(0, '3')\n    x.insert(0, '4')\n    x.insert(0, '5')\n    x.insert(0, '6')\n    x.insert(0, '7')\n    x.insert(0, '8')\n    x.insert(0, '9')\n    x.insert(0, '0')\n    x.insert(0, '1')\n    x.insert(0, '2')\n    x.insert(0, '3')\n    x.insert(0, '4')\n    x.insert(0, '5')\n    x.insert(0, '6')\n    x.insert(0, '7')\n    x.insert(0, '8')\n    x.insert(0, '9')\n    x.insert(0, '0')\n    x.insert(0, '1')\n    x.insert(0, '2')\n    x.insert(0, '3')\n    x.insert(0, '4')\n    x.insert(0, '5')\n    x.insert(0, '6')\n    x.insert(0, '7')\n    x.insert(0, '8')\n    x.insert(0, '"}, "2": {"problem_id": 2002, "answer": "from sys import stdin\ninput = stdin.readline\n\ndef shift(s):\n    return s.translate(str.maketrans('abcdefghijklmnopqrstuvwxyz', ''.join(s)))\n\n\ndef bin_shift(s):\n    return s.translate(str.maketrans('0123456789','-'))\n\n\ndef solve(s,n,bin_shift=0.0) -> int:\n    if n == 0:\n        return 1\n    s = ''\n    for i in range(n):\n        s += bin_shift(s)\n    return sum(s)\n\n\ndef __starting_point():\n    solve(0,0,0)\n__starting_point()"}, "3": {"problem_id": 2003, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\nd = int(input())\nfor i in range(n):\n    x,y = a[i]\n    if x == y:\n        print(0)\n        continue\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x)\n    c.append(y)\n    a.append(x)\n    b.append(y)\n    c.append(x)\n    d = max(d,c[i])\n    c.append(x"}, "4": {"problem_id": 2004, "answer": "a = input()\nprint(a)"}, "5": {"problem_id": 2005, "answer": "s = input()\nn = len(s)\nl = 0\nfor i in range(n):\n    if s[i] == s[i-1]:\n        l += 1\n    else:\n        l += 1\nprint(l)"}, "6": {"problem_id": 2006, "answer": "from fractions import gcd\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\nd = []\nfor i in range(n):\n    d.append(a[i]*b[i])\n\nprint('Bob', '\\n'.join(d))"}, "7": {"problem_id": 2007, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    h = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    r = list(map(int, input().split()))\n    ans = 0\n    for _ in range(n):\n        h.append(h[-1] + p[-1])\n        p.append(p[-1] + l[-1])\n        l.pop(0)\n        r.pop(0)\n        ans += min(l[-1] - l[0], 2)\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "8": {"problem_id": 2008, "answer": "from sys import stdin\nn = int(stdin.readline().strip())\na = list(map(int, stdin.readline().strip().split()))\nb = list(map(int, stdin.readline().strip().split()))\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = list(map(int, stdin.readline().strip().split()))\n    b = list(map(int, stdin.readline().strip().split()))\n    print(main())\n\nmain()\n"}, "9": {"problem_id": 2009, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nx, y = map(int, input().split())\np = [0]*n\nfor i in range(n):\n    x, y = map(int, input().split())\n    p[x-1] += y\n    p[y-1] += x\n\nans = [0]*n\nfor i in range(n):\n    ans[i] = sum(p[i] for i in range(n))\nprint(' '.join(map(str, ans)))"}, "10": {"problem_id": 2010, "answer": "def main():\n    n = int(input())\n    h = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        h[i] = h[i-1] + h[i]\n        s += h[i]\n    print(s)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "11": {"problem_id": 2011, "answer": "n = int(input())\nif n < 3:\n    print('0')\nelse:\n    print('1')\n"}, "12": {"problem_id": 2012, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(' '.join(l))"}, "13": {"problem_id": 2013, "answer": "s = input()\nn = len(s)\na = 0\nfor i in range(n):\n    if s[i] == s[i+1]:\n        a += 1\n    else:\n        a += 1\nprint(a)"}, "14": {"problem_id": 2014, "answer": ""}, "15": {"problem_id": 2015, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nl = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n    v,d,p = l[i]\n    s[v] = d-p\n    s[d] = p-1\nprint(s[n])"}, "16": {"problem_id": 2016, "answer": "from collections import defaultdict\nn, m = list(map(int, input().split()))\nd = defaultdict(list)\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    d[a].append(b)\n    d[b].append(a)\n\ndef dfs(s, start):\n    if s == len(s):\n        return 0\n    res = 0\n    for i in range(len(s)):\n        if s[i] == start:\n            res += dfs(s[i], i)\n        elif s[i] == start:\n            res += dfs(s[i], i)\n    return res\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    d = defaultdict(list)\n    for i in range(n):\n        a, b = list(map(int, input().split()))\n        d[a].append(b)\n        d[b].append(a)\n\n__starting_point()"}, "17": {"problem_id": 2017, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\na = list(map(int,stdin.readline().split()))\nc = 0\nfor i in range(n):\n    c += a[i]\n    if c%2==0:\n        print(i)\n    else:\n        print(c//2)\n"}, "18": {"problem_id": 2018, "answer": "n, h = list(map(int, input().split()))\nl = list(map(int, input().split()))\nl.sort()\ns = [0] * n\nfor i in range(n):\n    if l[i] == 1:\n        s[i] = 1\n    else:\n        s[i] += 1\nprint(s[n - 1])"}, "19": {"problem_id": 2019, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i]\nprint(s)"}, "20": {"problem_id": 2020, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n# a.sort()\n# b.sort()\n\n# print(a)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(1)\n    for i in range(n):\n        print(a[i], end=\" \")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n        print(a[i] + \" \" + b[i] + \" \" + \"1\")\n"}, "21": {"problem_id": 2021, "answer": "n, m = list(map(int, input().split()))\nedges = set()\nfor i in range(m):\n    u, v = list(map(int, input().split()))\n    if u in edges:\n        edges.add(u)\n        edges.add(v)\n    elif v in edges:\n        edges.add(u)\n        edges.add(u)\n    else:\n        print(-1)\n        continue\n    \n    if len(edges) == 2:\n        print('-1')\n        continue\n    \n    vertices = list(edges)\n    edges.sort(reverse=True)\n    \n    for i in range(len(vertices)):\n        if vertices[i] not in edges:\n            edges.remove(vertices[i])\n            edges.add(vertices[i])\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n         "}, "22": {"problem_id": 2022, "answer": "n, m = map(int, input().split())\nl = list(map(int, input().split()))\nfor i in range(1, n):\n    if l[i] == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "23": {"problem_id": 2023, "answer": "from math import ceil\nn = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n    s.append(int(input()[i]))\nprint(' '.join(s))"}, "24": {"problem_id": 2024, "answer": "n = int(input())\np = input().split()\np = list(map(int,p))\n\nans = 0\nfor i in range(n):\n    ans += p[i]\nprint(ans)"}, "25": {"problem_id": 2025, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(l[n-1] if n % 2 else l[n-1])"}, "26": {"problem_id": 2026, "answer": "n, d = list(map(int, input().split()))\na = [0] + list(map(int, input().split()))\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    a[x] += y\nprint(a[n-1])\n"}, "27": {"problem_id": 2027, "answer": "s = input()\nn = len(s)\nl = 0\nr = 0\nfor i in range(n):\n    if s[i] == 'l':\n        l += 1\n    else:\n        r += 1\nprint(r)\n"}, "28": {"problem_id": 2028, "answer": "s = input()\nn = len(s)\nk = 0\nfor i in range(n):\n    if s[i] == s[i-1]:\n        k += 1\n        break\nprint(k)"}, "29": {"problem_id": 2029, "answer": "n = int(input())\nif n%2 == 0:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n"}, "30": {"problem_id": 2030, "answer": "n, x, y = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    u, v = list(map(int, input().split()))\n    s.add(u)\n    s.add(v)\ncost = 0\nvisited = set()\nvisited.add(0)\nd = {}\ndef dfs(u, v):\n    if u in visited:\n        return 0\n    else:\n        visited.add(u)\n        d[u] = 1\n        for v in s:\n            if v not in d:\n                d[v] = 1\n                continue\n            if v not in d:\n                d[v] = 0\n                continue\n            if d[v] == 0:\n                dfs(v, u)\n                dfs(v, u)\n                dfs(v, u)\n                dfs(v, u)\n                dfs(v, u)\n                dfs(u, v)\n                dfs(v, u)\n                dfs(u, v)\n                dfs(v, u)\n                dfs(u, v)\n                dfs(v, u)\n                dfs(u, v)\n                dfs(v, u)\n                dfs(u, v)\n                dfs(v, u)\n                dfs(u, v)\n                dfs(v, u)\n                dfs(u, v)\n                dfs(v, u)\n                dfs(u, v)\n                dfs(v, u)\n                dfs(u, v)\n                dfs(u, v)\n                dfs(v, u)\n                dfs(u, v)\n                dfs(v, u)\n                dfs(u, v)\n                dfs(v, u)\n                dfs(u, v)\n                dfs(v, u)\n                dfs(u, v)\n          "}, "31": {"problem_id": 2031, "answer": "from collections import deque\ndef dfs(n, m, l):\n    if m == 0:\n        return -1\n    elif m == 1:\n        return l[0]\n    else:\n        l[0] += 1\n        for i in range(1, n):\n            if l[i] == l[i-1]:\n                l[i] -= 1\n                dfs(i, m-1, l)\n                l[i] += 1\n            else:\n                l[i] += 1\n        return l\n\nn, m = map(int, input().split())\nl = list(map(int, input().split()))\ndfs(n, m, l)\nprint(len(l))\n"}, "32": {"problem_id": 2032, "answer": "from collections import deque\nn = int(input())\nedges = list(map(int, input().split()))\nfor i in range(n - 1):\n    a, b = list(map(int, input().split()))\n    if a > b:\n        edges.append((a, b))\n    elif b > a:\n        edges.append((a, b))\nprint(-1)\n"}, "33": {"problem_id": 2033, "answer": "import sys\ninput = sys.stdin.readline\n\ndef is_gcd(a, b):\n    if a == 0:\n        return True\n    elif b == 0:\n        return False\n    else:\n        return a % b == 0\n\ndef solve(a, b):\n    d = {}\n    for i in range(len(a)):\n        if a[i] not in d:\n            d[a[i]] = i\n        else:\n            d[a[i]] = d[a[i]][0]\n            d[a[i]].append(i)\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].append(i)\n            d[a[i]].extend(d[a[i]])\n            d[a[i]].extend(d[a[i]])\n            d[a[i]].extend(d[a[i]])\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].extend(d[a[i]])\n            d[a[i]].extend(d[a[i]])\n            d[a[i]].pop()\n            d[a[i]].extend(d[a[i]])\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n            d[a[i]].pop()\n      "}, "34": {"problem_id": 2034, "answer": "from math import sqrt\nn = int(input())\nl = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    l.append([x, y])\n\nans = 0\nfor i in range(n):\n    x1, y1 = map(int, input().split())\n    ans += sqrt(x1 - x) + sqrt(y1 - y)\nprint(ans)"}, "35": {"problem_id": 2035, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\nd = {}\nfor i in range(m):\n    d[i] = 0\n    for j in range(n):\n        if a[i] == d[j]:\n            d[i] += 1\n        else:\n            d[j] += 1\n            \nprint(d.get(0, 0))"}, "36": {"problem_id": 2036, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\nl = list(map(int, input().split()))\n\nfor i in range(n):\n    a = l[i]\n    if a == 1:\n        print(1)\n    elif a == 2:\n        print(2)\n    else:\n        print(n-1)\n"}, "37": {"problem_id": 2037, "answer": "n = int(input())\na, b = list(map(int, input().split()))\n\ns = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        s += 1\n    else:\n        s -= 1\nprint(s)\n"}, "38": {"problem_id": 2038, "answer": ""}, "39": {"problem_id": 2039, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort_left as ins, insort_right as ins, insort_left as ins, insort_right as ins, mxor_right as mx, xor_right as x\n\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nl = len(a)\n\nleft = 0\nright = mxor_right(a)\n\nfor i in range(left):\n    if a[i] > right:\n        right -= 1\n    elif a[i] < left:\n        left -= 1\n    else:\n        left = 0\n\nprint(left)\n"}, "40": {"problem_id": 2040, "answer": "from math import sqrt\nn, h = map(int, input().split())\nbase = n/2.0\nh = h*h\nfor i in range(n):\n    print(sqrt(base * base + h * base))\n"}, "41": {"problem_id": 2041, "answer": "from bisect import bisect_left, bisect_right\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] < b[i]:\n        s += 1\n    else:\n        s -= 1\nprint(s)"}, "42": {"problem_id": 2042, "answer": "from collections import deque\nn, a, b, t = map(int, input().split())\ns = input()\nl = len(s)\nq = deque()\nfor i in range(n):\n    q.append(s[i] + 'w')\n    q.append(s[i] + 'h')\n\ndef is_horizontal(x):\n    return x == 'w' and x == 'h'\n\ndef is_vertical(x):\n    return x == 'w' and x == 'h'\n\ndef is_bouncy(x):\n    return x == 'w' and x == 'h'\n\ndef is_symmetric(x):\n    return x == 'w' and x == 'h'\n\ndef is_horizontal(x):\n    return is_bouncy(x) and is_symmetric(x)\n\ndef is_vertical(x):\n    return is_bouncy(x) and is_symmetric(x)\n\n# input()\n# n, a, b, t = map(int, input().split())\n# s = input()\n# l = len(s)\n# q = deque()\n# for i in range(n):\n#     q.append(s[i] + 'w')\n#     q.append(s[i] + 'h')\n#     q.append(s[i] + 'w')\n# print(is_horizontal(q))\n# print(is_vertical(q))\n# print(is_bouncy(q))\n# print(is_symmetric(q))\n# print(is_horizontal(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_vertical(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_symmetric(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q[::-1]))\n# print(is_bouncy(q"}, "43": {"problem_id": 2043, "answer": "def __starting_point():\n    n = int(input())\n    l, r = list(map(int, input().split()))\n    print(l, r)\n__starting_point()"}, "44": {"problem_id": 2044, "answer": "n, k = map(int, input().split())\nn -= 1\nk -= 1\nl = []\nfor i in range(k):\n    l.append(input())\nl.sort()\ns = 0\nfor i in range(k):\n    s += l[i]\nprint(s)"}, "45": {"problem_id": 2045, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    r = list(map(int, input().split()))\n    a = [0] * n\n    for i in range(m):\n        a[i] = l[i]\n        l[i] = 0\n    for i in range(n):\n        r[i] = l[i]\n    print(' '.join(map(str, r)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "46": {"problem_id": 2046, "answer": "from bisect import bisect_left as bl, bisect_right as br, bisect_left as br, bisect_right as br, insort_left as insort, insort_right as insort, insort_left as insort\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ns = 0\nfor i in range(n-1):\n    if a[i] > b[i]:\n        s += 1\n    elif a[i] == b[i]:\n        s += 1\nprint(s)\n"}, "47": {"problem_id": 2047, "answer": "from collections import deque\ndef dfs(s,visited,n,k):\n    if k==1:\n        return True\n    else:\n        for i in range(n):\n            if visited[i]==visited[i-1]:\n                continue\n            else:\n                visited[i]=visited[i-1]\n                dfs(s,visited,n,k-1)\n                visited[i]=True\n        return False\n\ndef __starting_point():\n    n,k=map(int,input().split())\n    s=list(map(int,input().split()))\n    n-=1\n    k-=1\n    visited=[False]*(n+1)\n    visited[0]=True\n    dfs(s,0,n,k)\n    print(len(visited))\n\n__starting_point()"}, "48": {"problem_id": 2048, "answer": "n, k = list(map(int, input().split()))\nl = [0] * n\nfor i in range(n):\n    l[i] += 1\nprint(l[n])"}, "49": {"problem_id": 2049, "answer": "n, m = list(map(int, input().split()))\na = [0] * m\nb = [0] * m\ncx = [0] * m\nd = [0] * m\ne = [0] * m\n\ndef bitwise(x):\n    if x == 0:\n        return 0\n    elif x == 1:\n        return 1\n    else:\n        return -1\n\ndef get_score(x):\n    if x == 0:\n        return 0\n    elif x == 1:\n        return sum(a[i] for i in range(n) if bitwise(a[i]))\n    else:\n        return sum(a[i] for i in range(n) if bitwise(a[i]))\n\ndef sum(x):\n    if x == 0:\n        return x\n    elif x == 1:\n        return 1\n    else:\n        return -1\n\ndef sum_bip(x):\n    if x == 0:\n        return x\n    elif x == 1:\n        return 1\n    else:\n        return -1\n\ndef get_score(x):\n    if x == 0:\n        return 0\n    elif x == 1:\n        return sum(a[i] for i in range(n) if bitwise(a[i]))\n    else:\n        return sum(a[i] for i in range(n) if bitwise(a[i]))\n\ndef sum_linalg(x):\n    if x == 0:\n        return x\n    elif x == 1:\n        return 1\n    else:\n        return -1\n\ndef get_score(x):\n    if x == 0:\n        return 0\n    elif x == 1:\n        return sum(a[i] for i in range(n) if bitwise(a[i]))\n    else:\n        return sum(a[i] for i in range(n) if bitwise(a[i]))\n\ndef sum_zilg(x):\n    if x == 0:\n        return x\n    elif x == 1:\n        return 1\n    else:\n        return -1\n\ndef sum_zilg(x):\n    if x == 0:\n        return x\n    elif x == 1:\n        return 1\n    else:\n        return -1\n\ndef sum_linalg(x):\n    if x == 0:\n        return x\n    elif x == 1:\n        return 1\n    else:\n        return -1\n\ndef sum_gcd(x):\n    if x == 0:\n        return 1\n    elif x == 1:\n        return x\n    else:\n        return -1\n\ndef sum_gcd(x):\n    if x == 0:\n        return x\n    elif x == 1:\n        return 1\n    else:\n        return -1\n\ndef sum_mod(x):\n    if x == 0:\n        return 1\n    elif x == 1:\n        return x\n    else:\n  "}, "50": {"problem_id": 2050, "answer": "def main():\n    n, k = list(map(int, input().split()))\n    s = input()\n    if k == 0:\n        return \"Second\"\n    elif k == 1:\n        return \"First\"\n    elif k == 2:\n        return \"Second\"\n    else:\n        first = s[0]\n        second = s[1]\n        for i in range(n-1):\n            if s[i] == second:\n                first = s[i]\n                second = s[i+1]\n            else:\n                second = s[i]\n        print(first, second)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "51": {"problem_id": 2051, "answer": "from collections import deque\nn, k = list(map(int, input().split()))\nc = [0] * n\nfor i in range(n):\n    c[i] = c[i - 1] * 10 + i\n\ndef dfs(i, k):\n    if k <= i:\n        return 0\n    else:\n        ans = 0\n        for j in range(i + 1, i):\n            ans = min(ans, dfs(j, k - 1) + c[i])\n        return ans\n\nprint(dfs(0, k))"}, "52": {"problem_id": 2052, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    d = [[0] * m for i in range(n)]\n    for i in range(m):\n        d[i][i] = 1\n    for i in range(n):\n        for j in range(2, min(n, i - d[i - 1][0]))[::-1]:\n            if d[i][j] & 1:\n                d[i][j] = 0\n            elif d[i][j] & 0x1:\n                d[i][j] = 0\n            else:\n                d[i][j] = 0\n            if d[i][j] & 1:\n                break\n    print(sum(d[2][1:]) - sum(d[2][0:]) - sum(d[2][-1:]) - sum(d[2][-2:]) - sum(d[2][-3:]) - sum(d[2][-4:]) - sum(d[2][-5:]) - sum(d[2][-6:]) - sum(d[2][-7:]) - sum(d[2][-8:]) - sum(d[2][-9:]) - sum(d[2][-10:]) - sum(d[2][-11:]) - sum(d[2][-12:]) - sum(d[2][-13:]) - sum(d[2][-14:]) - sum(d[2][-15:]) - sum(d[2][-16:]) - sum(d[2][-17:]) - sum(d[2][-18:]) - sum(d[2][-19:]) - sum(d[2][-20:]) - sum(d[2][-21:]) - sum(d[2][-22:]) - sum(d[2][-23:]) - sum(d[2][-24:]) - sum(d[2][-25:]) - sum(d[2][-26:]) - sum(d[2][-27:]) - sum(d[2][-28:]) - sum(d[2][-29:]) - sum(d[2][-30:]) - sum(d[2][-31:]) - sum(d[2][-32:]) - sum(d[2][-33:]) - sum(d[2][-34:]) - sum(d[2][-35:]) - sum(d[2][-36:]) - sum(d[2][-37:]) - sum(d[2][-38:]) - sum(d[2][-39:]) - sum(d[2][-40:]) - sum(d[2][-41:]) - sum(d[2][-42:]) - sum(d[2][-43:]) - sum(d[2][-44:]) - sum(d[2][-45:]) - sum(d[2][-46:]) - sum(d[2][-47:]) - sum(d[2][-48:]) - sum(d[2][-49:]) - sum(d[2][-50:]) - sum(d[2][-51:]) - sum(d[2][-52:]) - sum(d[2][-53:]) - sum(d[2][-54:]) - sum(d[2][-55:]) - sum(d[2][-56:]) - sum(d[2][-57:]) - sum(d[2][-58:]) - sum(d[2][-59:]) - sum(d[2][-60:]) - sum(d[2][-61:]) - sum(d[2][-62:]) - sum(d[2][-63:]) - sum(d[2][-64:]) - sum(d[2][-65:"}, "53": {"problem_id": 2053, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nb = list(map(int, input().split()))\ng = list(map(int, input().split()))\n\ns = sum(b)\nfor i in range(1, n):\n    if g[i] == 0:\n        s -= g[i-1]\n        break\nprint(s)\n"}, "54": {"problem_id": 2054, "answer": "from collections import defaultdict, deque\nn = int(input())\nedges = []\nfor i in range(n):\n    u, v = list(map(int, input().split()))\n    edges.append(u)\n    edges.append(v)\n\ndef is_neighbor(edges):\n    if len(edges) == 1:\n        return True\n    else:\n        return False\n\ndef is_edges(edges, color):\n    if len(edges) == 1:\n        return True\n    else:\n        return False\n\ndef get_edges(edges, color):\n    edges.sort()\n    for i in range(len(edges)):\n        if is_neighbor(edges[i]):\n            return edges[i]\n    return None\n\ndef is_neighbor(edges):\n    if len(edges) == 1:\n        return True\n    else:\n        return False\n\ndef get_subsets(edges, color):\n    subsets = defaultdict(list)\n    for i in edges:\n        subsets[i].append(colors[i])\n    return subsets\n\ndef is_subsets(edges, color):\n    subsets = get_edges(edges, color)\n    if subsets[colors[colors[col]]] == color:\n        return True\n    else:\n        return False\n\ndef main():\n    n = int(input())\n    edges = []\n    for i in range(n-1):\n        u, v = list(map(int, input().split()))\n        edges.append(u)\n        edges.append(v)\n    \n    for i in range(n-1):\n        if is_neighbor(edges[i]):\n            print('YES')\n        elif is_edges(edges, color):\n            print('NO')\n        else:\n            print('YES')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "55": {"problem_id": 2055, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    s = input().split()\n    d = {}\n    t = []\n    for i in range(n):\n        d[s[i]] = i\n    t.append(d.get(s[i], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1], 0))\n    t.append(d.get(t[-1"}, "56": {"problem_id": 2056, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ns = 0\nfor i in range(n):\n    if a[i]!= b[i]:\n        s += 1\n        break\nprint(s)"}, "57": {"problem_id": 2057, "answer": "s = input()\nn = len(s)\nm = 10**9+7\nfor i in range(n):\n    if s[i] == 'a':\n        s.pop(i)\n    elif s[i] == 'b':\n        s.pop(i)\n    else:\n        m = min(m, s[i])\nprint(m)\n"}, "58": {"problem_id": 2058, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] < a[i-1]:\n        s += 1\nprint(s)"}, "59": {"problem_id": 2059, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] > a[i-1]:\n        s += a[i]\nprint(s)"}, "60": {"problem_id": 2060, "answer": "n, k = list(map(int, input().split()))\nv = list(map(int, input().split()))\n\ng = [0] * n\nfor i in range(n):\n    g[i] = v[i]\n\ndef solve(i, v):\n    if i == 0:\n        return 0\n    elif len(g[i]) == k:\n        return max(v[i] - g[i][0], 0)\n    else:\n        v[i] = min(v[i] - g[i][0], k)\n        return solve(i + 1, v)\n\nprint(solve(0, n - 1))\n"}, "61": {"problem_id": 2061, "answer": "def solve(ax, ay, bx, by, cx, cy):\n    if ax == bx and ay == by and cx == cy:\n        return 0\n    elif ax == cx and ay == by and cx == cy:\n        return 1\n    elif ax == cx and ay == by and cx == cy:\n        return 2\n    elif ax == cx and ay == by and cx == cy:\n        return 3\n    elif ax == cx and ay == by and cx == cy:\n        return 4\n    else:\n        return 5\n\ndef __starting_point():\n    t = int(input())\n    print(solve(t, t, 0, 0))\n__starting_point()"}, "62": {"problem_id": 2062, "answer": "def main():\n    N, A, B, C, D = list(map(int, input().split()))\n    mod = 10**9+7\n    dp = [[0]*(N+1) for _ in range(N+1)]\n    for i in range(1, N+1):\n        dp[i][0] = 1\n        for j in range(1, min(C, i)):\n            dp[i][j] = (dp[i-1][j-1] + dp[i-1][j]) % mod\n            dp[i][j] = (dp[i][j-1] + dp[i-1][j]) % mod\n            dp[i][j] = (dp[i][j-1] + dp[i-1][j]) % mod\n            dp[i][j] = (dp[i-1][j] + dp[i][j-1]) % mod\n            dp[i][j] = (dp[i-1][j] + dp[i][j-1]) % mod\n    print((dp[N][A-1]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "63": {"problem_id": 2063, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\nl = [set() for i in range(n)]\nq = deque([0])\nfor i in range(n):\n    q.append(list(map(int, input().split())))\n    l.append(q[-1] - q[-2])\nprint(sum(l))\n"}, "64": {"problem_id": 2064, "answer": "n, q = map(int, input().split())\nq = int(input())\nfor _ in range(q):\n    r, c = map(int, input().split())\n    if r == 1:\n        print(\"Yes\")\n    else:\n        print(\"No\")"}, "65": {"problem_id": 2065, "answer": "def main():\n    n, k = list(map(int, input().split()))\n    matrykas = list(map(int, input().split()))\n    m = 0\n    for i in range(k):\n        if i == 1:\n            matrykas.append(i)\n        else:\n            matrykas.append(i-1)\n            m += 1\n            if len(matrykas) > k:\n                break\n            k -= len(matrykas)\n    print(m)\n\nmain()\n"}, "66": {"problem_id": 2066, "answer": "n = int(input())\nx = sorted(map(int, input().split()), reverse=True)\nprint(n - 2)"}, "67": {"problem_id": 2067, "answer": "n = int(input())\nl = list(map(int, input().split()))\na = [0]*n\nfor i in range(n):\n    a[i] = 1\n    for j in range(i, n):\n        a[j] = max(a[j], a[i])\nprint(max(a))"}, "68": {"problem_id": 2068, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\nw = list(map(int,stdin.readline().split()))\n\ndef calc(s):\n    return sum(w[i]*s for i,w in enumerate(s))\n\ndef dfs(s,i,l):\n    if i==len(s):\n        return 0\n    else:\n        return max(calc(s[i:i+l]))\n\ndef __starting_point():\n    n = int(stdin.readline())\n    w = list(map(int,stdin.readline().split()))\n    s = list(map(int,stdin.readline().split()))\n    dfs(s,0,n-1)\n\n__starting_point()"}, "69": {"problem_id": 2069, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = 0\n    for j in range(i, len(a)):\n        if a[i] == 0:\n            a[i] = 1\n        elif a[i] % 2 == 0:\n            a[i] = a[i] // 2\n        else:\n            a[i] = a[i] // 2 + 1\n    print(a[i])"}, "70": {"problem_id": 2070, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    d = 10**9 + 7\n    if s.isdigit():\n        d = int(s.replace('0', ''))\n    else:\n        d = int(s.replace('0', ''))\n    print(d)"}, "71": {"problem_id": 2071, "answer": "from collections import Counter\nn = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\ncnt = Counter(x)\nfor i in range(n):\n    cnt[y[i]] += 1\nprint(cnt.most_common(1))"}, "72": {"problem_id": 2072, "answer": "from math import sqrt\nn, k = list(map(int, input().split()))\ns = sorted(list(map(int, input().split())))\na = sqrt(s[n-1] - s[n-2])\nans = 0\nfor i in range(n):\n    x, y, x2, y2 = list(map(int, input().split()))\n    ans += min(x, y)\nprint(ans)\n"}, "73": {"problem_id": 2073, "answer": "n = int(input())\ns = list(map(int, input().split()))\nl = 0\nfor i in range(n):\n    if s[i] == '0':\n        l += 1\n    else:\n        print(l)\n        break\nprint(l)"}, "74": {"problem_id": 2074, "answer": "n, k = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\n# dp[i] = min(A[i] for i in range(n))\n# dp[i] = k\n# print(dp[i])\n\nfor i in range(n - k):\n    if A[i] - A[i + k] == 0:\n        print(i)\n        break\n    elif A[i] - A[i + k] == 1:\n        print(i)\n        break\n    else:\n        print(i)\n"}, "75": {"problem_id": 2075, "answer": "n, m, k = list(map(int, input().split()))\ns = sorted(list(map(int, input().split())))\nif s[0] > k:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"}, "76": {"problem_id": 2076, "answer": "n = int(input())\na = sorted(map(int, input().split()))\nb = sorted(map(int, input().split()))\nc = sorted(map(int, input().split()))\nd = sorted(map(int, input().split()))\ne = sorted(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        ans += 1\n        break\nprint(ans)"}, "77": {"problem_id": 2077, "answer": "def f(n):\n    if n == 0:\n        return \"NO\"\n    elif n == 1:\n        return \"1\"\n    else:\n        return f(n - 1) + f(n - 2)\n\nn, a, b = map(int, input().split())\np = list(map(int, input().split()))\n\nset1 = set(p)\nset2 = set(p)\n\nfor i in range(n):\n    if a == 0:\n        continue\n    if b == 0:\n        continue\n    if p[i] == 1:\n        set1.add(i)\n        set2.add(i)\n        break\n    else:\n        set1.add(a)\n        set2.add(b)\n        break\n\nprint(\"YES\")\nprint(\" \".join(map(str, set1)))"}, "78": {"problem_id": 2078, "answer": "from sys import stdin\ninput = stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    if n == 0:\n        return 1\n    elif a[n-1] == b[n-1]:\n        return -1\n    else:\n        return solve(n-1, a, b)\n\nsolve(n, a, b)\n\nprint(solve(n-1, a, b))\n"}, "79": {"problem_id": 2079, "answer": "from collections import deque\ndef main():\n    q = int(input())\n    for _ in range(q):\n        a, b = map(int, input().split())\n        print((a + b) * 32)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "80": {"problem_id": 2080, "answer": "m = int(input())\nq = list(map(int, input().split()))\nn = int(input())\na = [0]*n\nfor i in range(n):\n    a[i] += q[i]\n    q.append(i)\nprint(sum(a))"}, "81": {"problem_id": 2081, "answer": "n,x=map(int,input().split())\na=list(map(int,input().split()))\nif x<a[0]:\n    print(n+1)\nelse:\n    print(n+1)\n"}, "82": {"problem_id": 2082, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ndp = [[0] * (n+1) for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    dp[i] = [0] * (i+1)\n    for j in range(i+1, n+1):\n        dp[i][j] = min(dp[i-1][j], dp[i][j-1] + dp[i-1][j-1])\n\nprint(dp[n][n])\n"}, "83": {"problem_id": 2083, "answer": "from collections import deque\nn, m = map(int, input().split())\na = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(m):\n    l, r, d = map(int, input().split())\n    a[l] = max(a[l], d)\n    s[l] = max(s[l], a[l])\nprint('YES' if s[-1] == n else 'NO')"}, "84": {"problem_id": 2084, "answer": "import sys\ninput = sys.stdin.readline\n\nM = 10**9 + 9\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        x, y = list(map(int, input().split()))\n        print(sum(map(int, x.split())))\n\nmain()\n"}, "85": {"problem_id": 2085, "answer": "n = int(input())\ns = list(map(int, input().split()))\na = 0\nb = 0\nfor i in range(n):\n    if s[i] == '1':\n        a += 1\n    elif s[i] == '0':\n        b += 1\n    else:\n        break\nprint(a)"}, "86": {"problem_id": 2086, "answer": "from collections import deque\nn, q = list(map(int, input().split()))\na = list(map(int, input().split()))\nd = deque(sorted(a, reverse=True))\nfor i in range(q):\n    m = a[i]\n    if m > d[d[m]]:\n        d.pop()\n    else:\n        d.appendleft(m)\nprint(' '.join(map(str, d)))\n"}, "87": {"problem_id": 2087, "answer": "n, l, r, ql, qr = list(map(int, input().split()))\nw = list(map(int, input().split()))\nw.sort()\ns = 0\nfor i in range(n):\n    s += w[i]\nprint(s)\n"}, "88": {"problem_id": 2088, "answer": "n = int(input())\nl = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += l[i]\n    if s == 0:\n        break\n    else:\n        print(s)\n        s = 0\n        break\n"}, "89": {"problem_id": 2089, "answer": "from sys import stdin, stdout\nn = int(stdin.readline())\na = [0] * 1023\nfor i in range(n):\n    a[i] += 1\n    if a[i] == 0:\n        a[i] &= a[i - 1]\n    elif a[i] == 1:\n        a[i] |= a[i - 1]\nprint(n)"}, "90": {"problem_id": 2090, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\ns = list(map(int, input().split()))\nq = deque([s])\nfor i in range(n):\n    q.append(s[i] - s[i-1])\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef gcd(a, b):\n    g = 1\n    for i in range(1, len(a)):\n        g = gcd(a, b)\n    return g\n\ndef is_integer(x):\n    if x < 0:\n        return False\n    else:\n        return True\n\ndef solve(n, m, s):\n    if n <= m:\n        return -1\n    if is_integer(s[n-1]):\n        return -1\n    if is_integer(s[n-2]):\n        return -1\n    if is_integer(s[n-3]):\n        return -1\n    if is_integer(s[n-4]):\n        return -1\n    if is_integer(s[n-5]):\n        return -1\n    if is_integer(s[n-6]):\n        return -1\n    if is_integer(s[n-7]):\n        return -1\n    if is_integer(s[n-8]):\n        return -1\n    if is_integer(s[n-9]):\n        return -1\n    if is_integer(s[n-10]):\n        return -1\n    if is_integer(s[n-11]):\n        return -1\n    if is_integer(s[n-12]):\n        return -1\n    if is_integer(s[n-13]):\n        return -1\n    if is_integer(s[n-14]):\n        return -1\n    if is_integer(s[n-15]):\n        return -1\n    if is_integer(s[n-16]):\n        return -1\n    if is_integer(s[n-17]):\n        return -1\n    if is_integer(s[n-18]):\n        return -1\n    if is_integer(s[n-19]):\n        return -1\n    if is_integer(s[n-20]):\n        return -1\n    if is_integer(s[n-21]):\n        return -1\n    if is_integer(s[n-22]):\n        return -1\n    if is_integer(s[n-23]):\n        return -1\n    if is_integer(s[n-24]):\n        return -1\n    if is_integer(s[n-25]):\n        return -1\n    if is_integer(s[n-26]):\n        return -1\n    if is_integer(s[n-30]):\n        return -1\n    if is_integer(s[n-30]):\n        return -1\n    if is_integer(s[n-31]):\n        return -1\n    if is_integer(s[n"}, "91": {"problem_id": 2091, "answer": "from itertools import accumulate\ndef is_a_single(s):\n    return s.count(\"|\") == len(s)\n\ndef is_a_single_n(s):\n    return s in [single, single_n, single_n+single_n]\n\ndef main():\n    \"\"\"Main program.\"\"\"\n    n = int(input())\n    s = input()\n    l, r = list(map(int, s.split()))\n    print(is_a_single_n(s))\n    print(is_a_single_n(s[::-1]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "92": {"problem_id": 2092, "answer": "n = int(input())\nl = input()\nif n % 2 == 0:\n    print(\"home\")\nelse:\n    print(\"contest\")"}, "93": {"problem_id": 2093, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = sorted(l)\nfor i in range(n):\n    if s[i] == 1:\n        print(i)\n    else:\n        print(s[i])\n"}, "94": {"problem_id": 2094, "answer": "n = int(input())\ns = input()\nz = 0\ne = 0\nr = 0\no = 0\nn = len(s)\nfor i in range(n):\n    if s[i] == 'z':\n        z += 1\n    elif s[i] == 'e':\n        e += 1\n    elif s[i] == 'r':\n        r += 1\n    elif s[i] == 'o':\n        o += 1\n    else:\n        print(0)\n        break\n        \n"}, "95": {"problem_id": 2095, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef dfs(x, parent):\n    nonlocal a\n    if parent == x:\n        return x\n    else:\n        return dfs(parent, x)\n\ndfs(0, 0)\n\nfor i in range(n):\n    x = a[i]\n    if x not in a:\n        print(i)\n        continue\n    else:\n        print(n-i-1)\n"}, "96": {"problem_id": 2096, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sorted(a)\nfor i in range(n):\n    if a[i] not in s:\n        s[a[i]] = i\nprint(len(s))"}, "97": {"problem_id": 2097, "answer": "import math\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i] == 1:\n        c += 1\n    else:\n        a[i] = c\nprint(math.ceil(c/2))"}, "98": {"problem_id": 2098, "answer": "from sys import setrecursionlimit as SQUARATION_LIMIT\ninput = lambda: setrecursionlimit(int(input()))\n\nn, m = map(int, input().split())\np = list(map(int, input().split()))\n\ndef solve(x):\n    if x == 0:\n        return 0\n    elif x == 1:\n        return min(p[0], p[-1])\n    else:\n        return solve(x - 1) + solve(x - 2)\n\nsolve(0)\n\nprint(n)\nfor i in range(n):\n    print(solve(i))"}, "99": {"problem_id": 2099, "answer": "def __starting_point():\n    n, k = list(map(int, input().split()))\n    print(k)\n\n__starting_point()"}}