{"0": {"problem_id": 0, "answer": "s = input()\nn = len(s)\nl = []\nfor i in range(n):\n\tif s[i] == '|': l.append('|')\nelse: l = list(map(str, s))\nprint(len(l))"}, "1": {"problem_id": 1, "answer": "n=int(input())\nl=list(map(int,input().split()))\nif n<=l[0]:\n print(n)\n"}, "2": {"problem_id": 2, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nprint(a[n-1])\n"}, "3": {"problem_id": 3, "answer": "n,q=list(map(int,input().split()))\ns=0\nfor i in range(n):\n   s+=int(input())\nprint(s)"}, "4": {"problem_id": 4, "answer": "from collections import deque\ndef solve(n):\n return n[n.count('7')]\nn = list(map(int, input().split()))\ns = 0\nfor i in range(0, len(s)): s += (s[i] + '0' * (i - 1) // 2)\nprint('%.7f' % s)"}, "5": {"problem_id": 5, "answer": "n,p,l=list(map(int,input().split()))\na=[0]*n\nfor i in range(n):\n\ta[i]=pow(2,i-2)\nc=0\nwhile(len(a)>0 and a[-1]==p):a.pop()\nprint(c)"}, "6": {"problem_id": 6, "answer": "t = int(input())\nfor _ in range(t):\n\tn, x = list(map(int, input().split()))\n\n\ts = [0] * (n + 1)\n\n \tfor i, j in zip(list(range(1, n + 2))): s[i: j] = min(s[j: i] + x, (i - x) % 3)\n  "}, "7": {"problem_id": 7, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn,m=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\ts+=int(input())\nprint(s)"}, "8": {"problem_id": 8, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\nprint(n)"}, "9": {"problem_id": 9, "answer": ""}, "10": {"problem_id": 10, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = a[0]\nc = b.count(a[1])\nd = max(c, b)\ne = min(d, a) + 1\nans = n - e\nprint(ans)"}, "11": {"problem_id": 11, "answer": "n,a,b,p,q=list(map(int,input().split()))\ns=n*(n+1)//2\nprint(s)\n"}, "12": {"problem_id": 12, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n-1,0,-1):\n  if(a[i]==b[-i-2]):b.append(i)\nprint(max(b))"}, "13": {"problem_id": 13, "answer": "n, k = list(map(int, input().split()))\ns = [0]\nfor i in range(n): s[i+1] = int(input())\nprint(sum(s))"}, "14": {"problem_id": 14, "answer": "n, k = list(map(int, input().split()))\np = [-1] * (k + 1)\nfor i in range(n): p[i] = int(input())\nprint(*p)"}, "15": {"problem_id": 15, "answer": "a,b,c = list(map(int,input().split()))\ns = ''\nfor i in range(len(a)):\n  if b - a[i] == c: s += 'YES'\nprint('\\n'.join(s))"}, "16": {"problem_id": 16, "answer": "s = input()\nn = len(s)\na = []\nfor i in range(n-1):\n  if s[i]=='(':a.append(i+1))\nprint(len(a))"}, "17": {"problem_id": 17, "answer": "from collections import Counter\nn,k,t=list(map(int,input().split()))\nc=Counter(n)\ns=[]\nfor i in range(k):\n\tc[i]=s.append(i+1)\n\n\tif i>0 and s[-i-1]==s[:i] and len(s)<=k and c[0][0]>c.get(0,0) : s.pop()\nprint(sum(c))"}, "18": {"problem_id": 18, "answer": "s = 'abcdefghijklmnopqrstuvwxyz'\nt = ''\nfor i in range(1, len(s)):\n  if s[i] not in ('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')[::-1][s.find(i)!= -1] == s: t += i\nprint(t)"}, "19": {"problem_id": 19, "answer": "def main():\n t = int(input())\n for i in range(t):\n  p,c = list(map(int,input().split()))\n\n  if p.count(c)>=1 and p[0]!=c:print(\"YES\")\n else: print(\"NO\")"}, "20": {"problem_id": 20, "answer": "# cook your dish here\ndef is_pal(s):\n  if s == '0' and s[-1]!= '1': return False\n\n  for i in range(1, 24): s = '0123456789'[i - 1] if i % 2 == 0 else ''.join(map(str, s.split('0')), s)\n"}, "21": {"problem_id": 21, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += a[i]\nprint(s)"}, "22": {"problem_id": 22, "answer": "s = input()\nn = len(s)\nif s == s[::-1]:\n  print(\"TA\", end = \"\")\nelif n == 0 or n % 2 == 1 or (n // 2 and n > 2) or int(n) < 0: print((\"Invalid input\"))\n"}, "23": {"problem_id": 23, "answer": "a = int(input())\nn = 0\nfor i in range(1,a+1):\n  if str(i) in \"0123456789abcdefghijklmnopqrstuvwxyz\" and i > 0: n += 1\nprint(n)"}, "24": {"problem_id": 24, "answer": "a = input().split()\nn = int(a[0])\ncnt = 0\nfor i in range(1,n):\n\tif a[i] == \"X\" and cnt == 0 and i == n-1:print(\"YES\")\nelse: print(\"NO\")"}, "25": {"problem_id": 25, "answer": "from sys import stdin, stdout\nn, k = list(map(int,stdin.readline().split()))\na = [[0]*(k+1) for i in range(n)]\nfor i,j in zip(a,a[1:]):\n  a[i][j] = j\nans = [-1] * k\nprint(ans)\n"}, "26": {"problem_id": 26, "answer": "# cook your dish here\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**8)\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*100001\nc = 0\nfor i in range(n):\n\tx = a[i]\n\n\ty = b[(i+1)%12] + x\n \tz = c + y\np = [-1] * 10000\nans = []\nwhile p!=-1 and p[p[-1]] == -1:p.append(0)"}, "27": {"problem_id": 27, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(len(s)):\n\tif s[i] == 'a': cnt += 1\nif n == 1: print(0)\nprint(1)"}, "28": {"problem_id": 28, "answer": "# cook your dish here\nimport sys,bisect,math,string,sys.stdin,collections,deque\ninput = lambda :int(input())\ndef inpl():return list(map(int,input().split()))\nfrom collections import deque,Counter,OrderedDict,defaultdict,set,null,copy,reduce,cmp_to_key,enumerate,itemgetter,get,heappop(1024)\nmod = int(1e9) + 7\ninf = 10**9+7\nans = [0]*26\nfor i in range(26):\n\tans[i] = ans[-1] + ord(i) - ord('a')\nprint(len(ans))"}, "29": {"problem_id": 29, "answer": "s = input()\nn = len(s)\na = 0\nfor i in range(n-1):\n\tif s[i] == '0' and i >= 6: a += 1\nprint(a)"}, "30": {"problem_id": 30, "answer": "m,x=list(map(int,input().split()))\nl=[]\nfor i in range(len(l)):\n  if l[i]%2==1:l.append(i+1)\nif m==0:print((0,0)) \nelse: print(0) "}, "31": {"problem_id": 31, "answer": "n, k = list(map(int, input().split()))\np = [0] * 23\nfor i in range(n):\n\tp[i+1] = p[n-i]%(10**6+3)\nprint(p)"}, "32": {"problem_id": 32, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = ''\nfor i in range(n):\n\ts += a[i]\nprint('YES' if s == '' else 'NO')"}, "33": {"problem_id": 33, "answer": "a,b,l,r = list(map(int,input().split()))\nprint(a+b+l+r)\n"}, "34": {"problem_id": 34, "answer": "n,a,b = list(map(int,input().split()))\ncnt = 0\nfor i in range(n):\n\tif cnt+a<=b:c+=a\nprint(max(sum(list(range(0,n-1,2)) for n in c)))\n"}, "35": {"problem_id": 35, "answer": "n,m = list(map(int,input().split()))\nl = []\nfor i in range(n):\n\tl.append(str(i+m+1) + \" \")\nif len(l) == m:print(\"YES\")\nelse: print(\"NO\")"}, "36": {"problem_id": 36, "answer": "n = int(input())\na = [0] + list(map(int, input().split()))\nfor i in range(1, n + 1):\n  a[i] += 1\nprint(a[n - 1])"}, "37": {"problem_id": 37, "answer": "a,b,c=list(map(int,input().split()))\nd=0\nfor i in range(1,a+1):\n  if b[i]==c:d+=1\nprint(\"Yes\")\n"}, "38": {"problem_id": 38, "answer": "n, l = list(map(int, input().split()))\na = []\nfor i in range(n):\n\ta.append([int(x) for x in input()])\nl = int(input())\nc = 0\nwhile(l>0 and a[l-1][0]==0):\n\n\tc+=1\nprint(c)\n"}, "39": {"problem_id": 39, "answer": "s=input()\nn=len(s)\nl=[]\nfor i in range(n-1):\n  if s[i+1]=='a' and len(l)<i: l.append(i)\n\n  else: print(0)"}, "40": {"problem_id": 40, "answer": "n = int(input())\na, b = [], []\nfor i in range(n):\n\ta.append(list(map(int, input().split())))\nb.sort(key=lambda x: x[0], reverse=True)"}, "41": {"problem_id": 41, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = []\nfor i in range(n):\n  d.append(sum(a[:i] + a[i+1:] for i,a in enumerate(d)))\n"}, "42": {"problem_id": 42, "answer": "n = int(input())\na = list(map(int,input().split()))\nc = 0\nfor i in range(n):\n\tif a[i]=='0': c+=1\nprint(c)"}, "43": {"problem_id": 43, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\ta.append(b[i]-1)\nprint(a[0])"}, "44": {"problem_id": 44, "answer": "d,k,a,b = list(map(int,input().split()))\ns = 0\nfor i in range(k):\n  s+=abs(a-b)\nprint(s)"}, "45": {"problem_id": 45, "answer": "n,k = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n\ta[i]+=1\nprint(a)\n"}, "46": {"problem_id": 46, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,m = list(map(int,input().split()))\ns = [int(i) for i in input().strip('\\n')]\nans = 0\nfor x,y in zip(s,s[1:]):\n  ans += x+y\nprint(ans)\n"}, "47": {"problem_id": 47, "answer": "n, x = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n  a[i] += x\nb = [-x for x in a if x % 2 == 0]\nprint(b)"}, "48": {"problem_id": 48, "answer": "n,m,k = list(map(int,input().split()))\ns = [0]*(n+1)\nfor i in range(m):\n  s[i] = (i*i)//(2*n) + k\nprint(' '.join(s))"}, "49": {"problem_id": 49, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn=int(input())\na=list(map(int,input().split()))\ns=str(a[0])\nfor i in range(1,n):\n s=s+\"0\"*(i+1)\n print(s)"}, "50": {"problem_id": 50, "answer": "import sys\ninput = sys.stdin.readline\nn=int(input())\ns=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ts.append(s[-1]-a[i])\nprint(max(a))"}, "51": {"problem_id": 51, "answer": ""}, "52": {"problem_id": 52, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = [0]*(n+1)\nfor i in range(len(l)):\n  if l[i]%2 == 0: s[:i+2] += 1\nprint(' '.join(s))"}, "53": {"problem_id": 53, "answer": "n = int(input())\nb = [0]*n\nfor i in range(n):\n\tb[i+1] = sum(list(map(ord, input())))\nprint(max(b))"}, "54": {"problem_id": 54, "answer": "#!/usr/bin/env python3\nfrom math import sqrt\nfor i in range(int(input())):\n  l,m = list(map(float,input().split()))\n\n  if m*l<=2e-9:print('YES')\n"}, "55": {"problem_id": 55, "answer": "n, k = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n): s[i+1] = k - i\nans = 'Yes' if k > i else 'No'\nprint(''.join(ans))"}, "56": {"problem_id": 56, "answer": "n, t = list(map(int, input().split()))\nl = [0] * n\nfor i in range(n): l[i] += 1\nprint(t)\n"}, "57": {"problem_id": 57, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n  x, y = [int(x) for x in input()]\n\n  if (y - x[0]) % 2 == 0 and (x[1] - y) % 4!= 0 or (a[i][0] == 1 and a[(i + 1) : i + 2]) in [1, 3, 4] and ((y + (i - 2) * (n - i)) // 2 + ((n + i) / 2)) in [-1,-2,-3,-4] or (((y * y + n * n) - (2*y)) * 0.5) == (0.0) and n < n-3:a.extend(a)\nprint(-1)"}, "58": {"problem_id": 58, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i] = b[n-i-1]\nprint(len(b))"}, "59": {"problem_id": 59, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = input()\nfor i in range(len(a)):\n\tif a[i] == s[-1] and i+1 < len(s) -1 or i == 0 and s.count('1') == 1 and (s[0]!= '0' and not any(isinstance(x, int) for x in a) or x == '1' or s) in s: continue\nif s == \"\": s = \"NO\"\nprint(\"YES\")"}, "60": {"problem_id": 60, "answer": "from collections import deque\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nn = int(input())\na = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n\ts[a[i]-1] += 1\nans = 0\ni = 2\nwhile i*(i+1)<n:\n\n\tif s[-i] == 0 and (i%2==0 or i%4 ==0) and a[0]-i>=n-1:ans+=1;i+=2\nprint(ans)"}, "61": {"problem_id": 61, "answer": "n,b = list(map(int,input().split()))\nx = int(input())\nfor i in range(n):\n\tx,y = [int(x) for x in input()]\nif x == y: print(\"<\")\nelse: x -= y\n"}, "62": {"problem_id": 62, "answer": "n = int(input())\na = [0] + list(map(int,input().split()))\nfor i in range(n):\n\ta.append(a[-1]+i+1)\nprint('\\n'.join(sorted(list(range(0,n)),reverse=True)))"}, "63": {"problem_id": 63, "answer": "n, k = list(map(int, input().split()))\na = [0]\nfor i in range(n):\n  a.append(a[-1] + k)\nprint(' '.join(str(x) for x in a))"}, "64": {"problem_id": 64, "answer": "n,k = list(map(int,input().split()))\ns = input()\nl = len(s)\nif s[0] == 'a':\n  l -= 1\nelse:   print('NO')\n"}, "65": {"problem_id": 65, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint(sum(a))"}, "66": {"problem_id": 66, "answer": "t,w,b=list(map(int,input().split()))\ns=t+w+b\nprint(s)\n"}, "67": {"problem_id": 67, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\ndef I(): return int(input())\nI()"}, "68": {"problem_id": 68, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ns = list(map(int,input().split()))\na = [0] * (n+1)\nc = 0\nfor i in range(n):\n  a[s[i]] = i\nans = [-1] + [a[0]]\nwhile len(a) > 0:\n\n  d = a.pop(0)  # \u521d\u59cb\u5076\u6570\uff0c\u8ba1\u7b97\u672c\u679d\u5230\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u6700\u957f\u6539\u53d8\u7684\u6bcf\u503c\u4e0e\u672a\u6765\u7684\u53ef\u80fd\u603b\u7ed3\u675f\n\tc += 1\n\n\tans[d] = c\nprint(len(ans))"}, "69": {"problem_id": 69, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn,x=list(map( int,input().split()))\n   s=input()\n\n\tif len(s)==n:print(0)\n"}, "70": {"problem_id": 70, "answer": "n, k=list(map(int, input().split()))\nl=[]\nfor i in range(n):\n\tif l[i]%10==0:l.append(i)\nprint(sum(l))"}, "71": {"problem_id": 71, "answer": "n,m,k,x,y=list(map(int,input().split()))\nl=[]\nfor i in range(1,n+1):\n\tl.append(i)\nprint('\\n'.join(l))"}, "72": {"problem_id": 72, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0] * (n + 1)\nfor i in range(n):\n\tp[a[i]] += 1\nif len(p) == 0: print(\"Draw\")\nelse: p.sort()\nprint(\" \".join(str(x) for x in p))"}, "73": {"problem_id": 73, "answer": "#!/usr/bin/env python\nfrom sys import stdin,stdout\nimport numpy as np\nn = int(stdin.readline().strip())\na = np.array(list(map(int,np.arange(n,n))))\nl,r = 0,0\nfor i in range(len(a)):\n  l+=a[i]\nprint(l)"}, "74": {"problem_id": 74, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n  s[i] += 1\nprint(s[-1])"}, "75": {"problem_id": 75, "answer": "n,m = list(map(int,input().split()))\nl = []\nfor i in range(n):\n  if l[i] == '*': l.append(i)\nprint('NO',l)"}, "76": {"problem_id": 76, "answer": "n,m,a,b = list(map(int,input().split()))\nl = []\nfor i in range(m):\n   if l[i]%m == 0: l.append(i)\nprint(sum(l))"}, "77": {"problem_id": 77, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += a[i]\nprint(s)"}, "78": {"problem_id": 78, "answer": "n, T = map(int, input().split())\narr = [0] * T\nfor _ in range(T):\n  arr[T] = int(input())\n\n  if arr == [1] and 0 <= T <= 15:   print(0)\n"}, "79": {"problem_id": 79, "answer": "n = int(input())\na = list(map(int,input().split()))\np = 1\nq = 10**9 + 7\nans = [0]*n\nfor i,j in zip(a,a[1:]):\n\tans[i+j] = max(j,i-j+1)\nprint('\\n'.join(ans))"}, "80": {"problem_id": 80, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\ndef solve(n,x,y,l,r,c,d):\n\tif (n==0 and x==y): return 1\n   else: return 0\nn=int(input())\nx=list(map(int,input().split()))\ny=[0]\nfor i in range(len(x)): y[x[i]-1]+=1\nprint(y[-1])"}, "81": {"problem_id": 81, "answer": "#!/usr/bin/env pypy3\nimport sys\ninput = sys.stdin.readline\nfrom collections import defaultdict as dd, deque\nsys.setrecursionlimit(100000)\ndef read_int():\n   return int(input())\nread = lambda: list(map(int,input().split()))\nmod = 10**9+7"}, "82": {"problem_id": 82, "answer": "n, k = map(int, input().split())\na = [int(input()) for i in range(n)]\ns = sum(a) // k\nprint(s)"}, "83": {"problem_id": 83, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(len(a)):\n  if a[i]<=s:s+=i\nprint(s)\n"}, "84": {"problem_id": 84, "answer": "n = int(input())\ns = list(map(int, input().split(' ')))\nprint(len(s))"}, "85": {"problem_id": 85, "answer": "from sys import stdin,stdout\nn = int(stdin.readline().strip())\na,b = list(map(int64,input().split()))\nl = []\nfor i in range(n):\n\tl.append((a[i]*(i+1)//2) if i%2 else 0)\nprint(l[0])\n"}, "86": {"problem_id": 86, "answer": "# -*- coding: utf-8 -\n\"\"\"\ncreated by shuangquan.huang at 1/30/20\n***Disclaimer***\nThis kata is based on a problem I was working on on. I really want to solve this problem, but I can't find a solution online. So I came up with this idea but it doesn't work for me. Here is my solution: https://www.codewars.com/kata/solution-for-first-player-win-if-both-play-plays-nice-and-didn't-get-here/problem-number-2\nimport numpy as np\nfrom itertools import zip_longest,combinations_with_replacement,chain,takewhile,isclose,lru_cache,fractions,heapq,statistics,memo,predictor,comparisons,primes,sorted,str,truediv,binary_search,bisect,accur WARNING: This program is supposed to be able to run on 32-bit integers. You are incorrect. If your program receives an integer argument, it will be represented by a tuple. The argument is a list of integers of length n (n-1). You do not need to use list.__contains__, isinstance__ or islice__ because these functions are built into Python. They are only available if you are using Python 3.6 or later. For information about building Python code, see the Python docs. ***Note***, that binary search can be used to find the next integer. But it is not a good idea for a number of reasons: it takes too long to iterate through, and it breaks when you encounter a zero. Instead of looking for this you should build a function that will take a binary string as the input and returns an array of all integers in that string. This will make the search too slow for your language. Be careful about iterating through the string every time you get an error.***Note for Python3: Binary search is more complex. It takes a little more time to process the given string, so you'll need a faster algorithm. Also, be aware that search strings can contain more than one value than strings. On the rightmost element in a string will always contain exactly 1 value (i.e. an empty string). Also be sure to check for the case when two or more values have the same value. Consider that there are n values. However there is only one index n and each value is assigned a different index. See the example test cases for more details. Happy coding!\n\"\"\".strip()\nfor _ in range(int(input())):\n  x,y,xv,vv = list(map(float,input().split()))\n\n  if xv[0] == yv and x == 0 and y == 1 and v == 2: print(str(x) + \" \" + str(y))"}, "87": {"problem_id": 87, "answer": "from sys import stdin\ninput=stdin.readline\nn,m,d=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n\ts.append(input())\nm=int(m)\nt=sorted(s,key=lambda x:x[1])\nif m<=d:print(0)"}, "88": {"problem_id": 88, "answer": "a,b = list(map(int,input().split()))\ncnt = 0\nfor i in range(len(a)):\n  if a[i] == b: cnt += 1\nprint(i+1)"}, "89": {"problem_id": 89, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(len(l))"}, "90": {"problem_id": 90, "answer": "n,k,s = list(map(int,input().split()))\ncubes = []\nfor i in range(1,n+1):\n  cubes += int(input())\ncube = cubes//k\nif cube%k == 0:s+=cube\nprint(s)"}, "91": {"problem_id": 91, "answer": "for _ in range(int(input())):\n\tn, k = list(map( int, input().split() ))\n\n\ta = [ int(i) for i in input() if i > 0 and i < len(a) - 1 ]\n\n \tif k % 2 == 1 and a[k] in [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 172, 173, 175, 176, 177, 179, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 329, 331, 336, 338, 340, 341, 347, 348, 349, 353, 356,ombies)\n"}, "92": {"problem_id": 92, "answer": "# cook your dish here\nfrom math import gcd, mod, pow, ceil, sqrt, factorial, is_integer, ascii_letter, all_digits, digit_counts\nmod = pow(10,30) + 1\nn = int(input())\na,b,c = list(map(int,input().split()))\ns = 0\nfor i in range(0,len(a)):\n  s += a[i]*(b-c)\nprint(s)"}, "93": {"problem_id": 93, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**6)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nfrom collections import deque, defaultdict, Counter, OrderedDict,default,bisect,sys\ndef read_int(): return int(input())\nread_ints()"}, "94": {"problem_id": 94, "answer": "n = int(input())\nk = 0\nfor i in range(n):\n  k += (10**i)\nprint(k)"}, "95": {"problem_id": 95, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(len(a)):\n  if a[i] == 1: c += 1\nprint('YES')\n"}, "96": {"problem_id": 96, "answer": "import sys\ninput = sys.stdin.readline\nn, k = map(int, input().split())\ns = []\nfor i in range(n):\n\tx = int(input())\n\n\tif x%2 == 0: s.append([x/2, x-1])\nif n == k: print(sum(s))\n"}, "97": {"problem_id": 97, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque, Counter, OrderedDict,defaultdict,deque\nsys.setrecursionlimit(max(10**9))\nINF = float('inf')\nMOD = 10 ** 9 + 7\ndef solve(n,m,x):\n if m == 0 or n == m: return 0,0\n elif m < n: m,n = n-m+1,2*n\n return (m-n) * (n-x) + (x-y)*(0.5*x+y*(1/2)**(-1))[0][0]\nprint('\\n'.join(map(str,input())))"}, "98": {"problem_id": 98, "answer": "a,b = list(map(int,input().split()))\nprint('YES' if a == b else 'NO')"}, "99": {"problem_id": 99, "answer": "#!/usr/bin/env python\nfrom sys import stdin,stdout\nimport math,string,itertools,collections,bisect,getattr,deque,fractions,hex,numpy,random,socket,socketserver,ttmrw,time\ninput = lambda:stdin.readline().strip()\nprint(*map(int,input().split()))"}, "100": {"problem_id": 100, "answer": "from sys import stdin\ninput=stdin.readline\nn,m=list(map(int,input().split()))\ngrid=[[0 for i in range(m+1)]for jin=1,1]\nc=0\nfor i,j in enumerate(grid):\n\tif(j==0):c+=1\nprint(c)\n"}, "101": {"problem_id": 101, "answer": "n = int(input())\na = list(map(int, input().split()))\nb= list([int(x) for x in input()])\nprint(a[0])"}, "102": {"problem_id": 102, "answer": "s=int(input())\nprint(\"\".join(map(str,s)))"}, "103": {"problem_id": 103, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nans = 0\nfor i in range(n):\n\tans += a[i] * (i + 1)\nprint(ans)"}, "104": {"problem_id": 104, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "105": {"problem_id": 105, "answer": "n=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(n):\n\tif a[i]%2==0:ans+=i\nprint(ans)"}, "106": {"problem_id": 106, "answer": ""}, "107": {"problem_id": 107, "answer": "s = input()\nn = len(s)\nif s[0] == '1':\n if n % 2 == 0: \n  print('yes')\nelse:print('no')"}, "108": {"problem_id": 108, "answer": "s = input()\nn = len(s)\ni = 0\nwhile(i < n):\n\ts1 = s[i:i+n]\n \tif s1 == '-' or '0' not in s: i += 1\nprint('')"}, "109": {"problem_id": 109, "answer": "from sys import stdin,stdout\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nsys.setrecursionlimit(10**7)\nmod = 10**9+7\ninf = float('inf')\neps = 1.0\ndef LI(): return [int(i) for i in sys.stdin.readline().split()]\n# def LI(var, n): return var[n-1] if n < 0 else int(math.sqrt(2*n))+1\na = [LI() for _ in range(10000)]\nfor i,v in enumerate(a,1):\n\ta[i] = v*i\nprint('\\n'.join(map(str,a)))\n"}, "110": {"problem_id": 110, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n\tans.append(a[i]-1)\nprint(max(ans))"}, "111": {"problem_id": 111, "answer": "n, k = list(map(int, input().split()))\np = int(input())\nif k % 2 == 0 and p * (k // 2) == n: \n   print(-1)\nelse: print(p)"}, "112": {"problem_id": 112, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] = str(i)\nprint(max(a))"}, "113": {"problem_id": 113, "answer": "import math\nn, k = list(map(int, input().split(' ')))\nprint(n)"}, "114": {"problem_id": 114, "answer": "from collections import defaultdict,deque\nn,m=map(int,input().split())\na=defaultdict(list)\nfor i in range(m):\n\ta[i].append([int(input()) for j in list(a.keys()))]\nans=[0]*(n+m+1)\n\n\tfor k,v in a.items():\n \t\tans[k]=v\nprint(*ans)"}, "115": {"problem_id": 115, "answer": "r,s,p=list(map(int,input().split()))\na=[]\nfor i in range(0,r):\n  a.append([i,0])\nprint(a[::-1])"}, "116": {"problem_id": 116, "answer": "from sys import stdin,stdout\nn = int(stdin.readline().strip())\nl,r,k = [int(x) for x in stdins().split()]\nprint(n)"}, "117": {"problem_id": 117, "answer": "n, m = map(int, input().split())\na, b, c, d = [], []\nfor i in range(n):\n   a.append(b[i] - c[0] * (c[1] + 1) + (d[j] < d[n - i]))\nb.sort(key=lambda x: x[2])\nc.extend([a[-n] for i, a in enumerate(c) if a[:i + 2] == b[:]])"}, "118": {"problem_id": 118, "answer": "t,s=list(map(int,input().split()))\nl=[]\nfor i in range(s):\n   l.append(t-int(input()[i-1])))\nprint(\"YES\")\n"}, "119": {"problem_id": 119, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n  a[i] = i\nprint(*a)"}, "120": {"problem_id": 120, "answer": "n = int(input())\ns = input()\na,b,c,g = list(map(int, input().split()))\nif n % 4 == 0 and s[:4] == \"?\":\n\tprint(\"!=\")\nelse: print(\"?\")"}, "121": {"problem_id": 121, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict,deque\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n  x,y,z = l.index(i),l[i]\nprint('YES')\n"}, "122": {"problem_id": 122, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] = str(i) +'' + input()\nprint('YES')"}, "123": {"problem_id": 123, "answer": "n, k = list(map(int, input().split()))\ns = sorted([int(x) - i for i, x in enumerate(s)], reverse=True)\nprint('Yes' if k == n else 'No')\n"}, "124": {"problem_id": 124, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\ndef get_grapes(n,x,y,z):\n\tif (n == 3 and x == 0 and y == 1 and z == 2 and n == 4 and (x + y + z) // 2 == x * y * z + (y * x) * (z - 1) + x > x*y*z + 2*x*(x - 2)) or (0 <= x <= 9 and 0 <= y <= 7 and 3 <= z <= 2 * 3) or ((n % 3!= 0) and ((x * n // 3 == y*n // z - x - y) / 2!= 3)) : return True, False\n\n\treturn False, True\nfor i in range(int(input())): print('YES',i)"}, "125": {"problem_id": 125, "answer": "l,s,r,p = list(map(int,input().split()))\na = []\nfor i in range(1,l+1):\n\ta.append(s-i)\nif(a[-1]==s or a[0]!=s):\tprint(\"YES\")\nelse:print('NO')\n"}, "126": {"problem_id": 126, "answer": "n = int(input())\ns = input()\na = [int(x) for x in s.split()]\nif n % 10 == 0 or a[n // 10] == '5':\n\tprint('YES')\nelse: print('NO')"}, "127": {"problem_id": 127, "answer": "n, f = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n   s += int(input())\nprint(s)\n"}, "128": {"problem_id": 128, "answer": "n,k = list(map(int,input().split()))\np = [0]*(n+1)\nfor i in range(1,n):\n\tp[i] = p[-1] + 1\nprint(sum(p))"}, "129": {"problem_id": 129, "answer": "n, m, k, l = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(m):\n  a[i] += 1\nprint(sum(a))"}, "130": {"problem_id": 130, "answer": "n,m = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n):l[i+1] = i\nprint(l)\n"}, "131": {"problem_id": 131, "answer": "n = int(input())\na = list(map(int,input().split()))\nans = []\nfor i in range(n):\n\tx,y,z = a[i],a[n-i-1]\n\n\tif x == y: ans.append(\"Yes\")\nelse: print(\"No\")"}, "132": {"problem_id": 132, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n  a[i] += (i-1)*(i+1)\nprint(max(a))"}, "133": {"problem_id": 133, "answer": "n, m = list(map(int, input().split()))\np = [0] * (n + 1)\nfor i in range(m):\n   p[i] += 1\nprint(p[n])"}, "134": {"problem_id": 134, "answer": "n = int(input())\nl = [list(map(int, input().split())) for i in range(n)]\nprint(sum(l))"}, "135": {"problem_id": 135, "answer": "n,k = list(map(int,input().split()))\ns = set()\nfor i in range(1,n+1):\n\ts.add(i)\nprint('Yes' if s.issubset(s) else 'No')\n"}, "136": {"problem_id": 136, "answer": "a = int(input())\nfor i in range(1,a+1):\n\tprint(\"=\",i)"}, "137": {"problem_id": 137, "answer": "import math\nn, p = list(map(int, input().split()))\na = []\nfor i in range(n):\n  a.append(math.prod(0, (i+1)%3) + 1)\nprint(p)"}, "138": {"problem_id": 138, "answer": "n,a,b,c = list(map(int,input().split()))\ns = []\nfor i in range(n):\n  s.append(input())\nprint(sum(s))"}, "139": {"problem_id": 139, "answer": "n, m = list(map(int, input().split()))\nedges = []\nfor i in range(m):\n  if i not in edges: edges.append(i)\nprint('YES' if edges else 'NO')"}, "140": {"problem_id": 140, "answer": "# cook your dish here\nn, m = map(int, input().split())\na = [int(i) for i in input()]\ns = []\nfor _ in range(n-1):\n\tx = a[s]\n\n\tif x-s == x+s and s+x in [0,1]:\n \t\ts.append(x)\nprint(sum(s))"}, "141": {"problem_id": 141, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n\ts[i] += s[n-i-1]\nprint(sum(s))"}, "142": {"problem_id": 142, "answer": "n, L = list(map(int, input().split()))\nc = [0] * (n + 1)\nfor i in range(n):\n  c[i] += 1\nprint(max(c))"}, "143": {"problem_id": 143, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += a[i]\nprint(ans)"}, "144": {"problem_id": 144, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if a[0] == '0' else print(\"NO\"))"}, "145": {"problem_id": 145, "answer": "s = input()\nn = len(s)\ni = 0\nwhile i < n and s[i]!= 'h' : i = i + 1\nprint(i)"}, "146": {"problem_id": 146, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n\ta[i % k] += a[k - i]\nprint(max(a))"}, "147": {"problem_id": 147, "answer": "n,c = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n\ta[i+1]+=c\nprint(max(a))"}, "148": {"problem_id": 148, "answer": "n, a = map(int, input().split())\nd = {}\nfor i in range(n):\n\td[i] = [int(x) for x in input()]\nprint(\"YES\") if d else print(\"NO\")"}, "149": {"problem_id": 149, "answer": "n, m = list(map(int, input().split()))\na, b = 0, 0\nfor i in range(m):\n  if n % i == 0: a += 1\nb += n // i\nprint(a)\n"}, "150": {"problem_id": 150, "answer": "from math import ceil\nn = int(input())\na = [0]*n\nfor i in range(1,n+1):\n\ta[i] += (ceil(n/i))\nprint(max(a))"}, "151": {"problem_id": 151, "answer": "def __starting_point():\n  n = int(input().strip())\n#  print(sorted(map(str, input().split())))\nn = n-1\ns = input()\nfor i in range(n-2,0,-1):\n\tif s[i]=='a' or (s[-i+2] == 'z' for i,s in enumerate(list(range(1,n+1))),s) : s = 'no'\nprint(' '.join([str(x) for x in s]))\n"}, "152": {"problem_id": 152, "answer": "n,m,k=list(map(int,input().split()))\na=[0]*(n+m+1)\nfor i in range(m):\n\ta[i]=int(input())\nans=0\nd=[[0,0],[0,-1],[1,1]][0<=i<n]\ndef dfs(s,a,b,c,d,e):\n\n\tif s>=d[a][b][c] or a[s]!=b[c][d][e]:ans+=1;return\ndfs(0,[])\nprint(ans)"}, "153": {"problem_id": 153, "answer": "n,k,m = list(map(int,input().split()))\nt = [0]*(k+1)\nfor i in range(1,n):\n  t[i] = (t[k-1] + m) * i\nprint(sum(t))"}, "154": {"problem_id": 154, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nb = [-1] * n\nans = 0\nfor i in range(n):\n\tb[a[i]] = a[n - i - 1] + 1 if i % 2 == 0 else 0\n\n\tans += pow(b.count(0), 2, n)\nprint(ans)"}, "155": {"problem_id": 155, "answer": "def n(m, k):\n if m == 0 or k == 1: return 0; return 1;\n x,y = 0,0\n for i in range(2,m+1): \n  if (i%2==0): x+=i*(i//2)\n else: y+=m*i\n return x+y\nn = int(input())\nk = list(map(int,input().split()))\nx = n*n+k[0]\nprint(x)"}, "156": {"problem_id": 156, "answer": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(len(l)):\n if l[i]%2==0:c+=i\nprint(c)\n"}, "157": {"problem_id": 157, "answer": "a=int(input())\nfor i in range(a):\n\tprint(0)"}, "158": {"problem_id": 158, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\ta[i] = b.append(i+1)\nc = [0]*n\ni = 0\nwhile i < n and b[c[-1]] == c[n-i-2] and i >= 0: i += 1\nprint('YES' if i == 0 else 'NO')\n"}, "159": {"problem_id": 159, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n\tl.append(a[i]*(i+1)//2)\nprint(len(l))"}, "160": {"problem_id": 160, "answer": "n,k=list(map(int,input().split()))\na=[0]*(n+1)\nfor i in range(k):a[i]+=int(input())\nprint(max(a))"}, "161": {"problem_id": 161, "answer": "from sys import stdin\ninput=stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nfor i in range(1,n):\n\tif a[i]%2!=0:print(i)\n"}, "162": {"problem_id": 162, "answer": "n,k = list(map(int,input().split()))\na = []\nfor i in range(k):\n\ta.append((int(input())-1,i,a[i]-1) + 1)\nprint(len(a))"}, "163": {"problem_id": 163, "answer": "n,k = list(map(int,input().split()))\ns = input()\nl = len(s)\ncnt = 0\nfor i in range(l):\n\tif s[i]=='.': cnt+=1\nif k==1: print(\"YES\")\nelse:print(\"NO\")"}, "164": {"problem_id": 164, "answer": ""}, "165": {"problem_id": 165, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append([a[i][0], i])\nprint(len(b))"}, "166": {"problem_id": 166, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n\ts[i] = s[n-i-1] + i\nprint(\"YES\")"}, "167": {"problem_id": 167, "answer": "s = input()\nn = len(s)\na = []\nfor i in range(n-1):\n\tif s[i] == 'a' and a == []:\n \t\ta.append(i+1);\nif n == 1 or n % 2 == 0: return \"-\"\nprint(\" \".join(a))"}, "168": {"problem_id": 168, "answer": "n = int(input())\ns = input()\na = 0\nfor i in range(n):\n\ts1 = s[:i] + '-' + s1.replace('+', '+' + str(i+1) + '/'+str(a))\n#print(s,a)\nif s == '-\" and a == \"+':\n  \ta += 1\nprint((a-1))"}, "169": {"problem_id": 169, "answer": "n = int(input())\na,b,c = list(map(int,input().split()))\nif n % 2 == 0 and a == b or c == a or b == c :\n  print(c)\nelse:\n\n  if a * b + c * c <= n * n and b * (a + b - c) <=n*n and (b - a) * a <=b*(a+b-c):\n"}, "170": {"problem_id": 170, "answer": "n = int(input())\ns = [int(x) for x in input().split()]\nans = 0\nfor i in range(1, n + 1):\n  if s[i] > ans: ans += 1\nprint(ans)"}, "171": {"problem_id": 171, "answer": "n = int(input())\na = input()\nif a[0] == '1':\n  if len(a) == 1 and a.count('1') > 1: print('Too Strong')\nelse:print('Correct')"}, "172": {"problem_id": 172, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [int(i) for i in input()]\nans = 0\nfor ai in a[1:]:\n\tans += sum(ai)\nprint(ans)"}, "173": {"problem_id": 173, "answer": "n,m = map(int,input().split())\ns = input()\ncnt = 0\nfor i in range(n-1):\n\tif s[i]=='<': cnt+=1\nprint('YES')"}, "174": {"problem_id": 174, "answer": "n = int(input())\na = list(map(int,input().split()))\n\n\n\n"}, "175": {"problem_id": 175, "answer": "n,m=list(map(int,input().split()))\na=n\nb=m\nfor i in range(n-1):\n  if a%b==0:a-=b\nprint(a+b)"}, "176": {"problem_id": 176, "answer": "n, k = list(map(int, input().split()))\nans = 0\nfor i in range(1, n + 1):\n  if i % k == 0: ans += 1\nprint(ans)\n"}, "177": {"problem_id": 177, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\ns=list(map(int,input().split()))\nprint(s[n-1])"}, "178": {"problem_id": 178, "answer": "n = int(input())\ns = input()\nif s[0] == '8':\n  print('YES')\nelse: \n\tprint('NO')"}, "179": {"problem_id": 179, "answer": "n,x,pos=list(map(int,input().split()))\ns=0\nfor i in range(n):s+=int(bin(i)[2:])\nprint(s)\n\n"}, "180": {"problem_id": 180, "answer": "from sys import stdin,stdout\ninput = lambda:stdin.readline().rstrip(\"\\r\\n\")\nstd=input()"}, "181": {"problem_id": 181, "answer": "#!/usr/bin/env python\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\nn = int(input())\na = list(map(int, input().split()))\nprint(len(a))"}, "182": {"problem_id": 182, "answer": "# cook your dish here\na,b,c=map(int,input().split())\nprint(\"Yes\") if a==b==c==0 else print(\"No\")\n"}, "183": {"problem_id": 183, "answer": "n,k,m=list(map(int,input().split()))\ns=str(k)\nc=0\nfor i in range(len(s)):\n  if s[i]=='0': c+=1\nprint(c%m)"}, "184": {"problem_id": 184, "answer": "l,r,a,b = list(map(int,input().split()))\nn = int(input())\nc = []\nfor i in range(n):\n\tc.append(a+b)\nans = (c[-1] + c[0]) % a\nprint(ans)"}, "185": {"problem_id": 185, "answer": "n, k = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += int(input())\nprint(s)\n"}, "186": {"problem_id": 186, "answer": "n,m = list(map(int,input().split()))\na = [0]*(n+m+1)\nfor i in range(m):\n\ta[i] += 1\nprint(max(a))"}, "187": {"problem_id": 187, "answer": "n = int(input())\nfor i in range(n):\n\ta = [int(x) for x in input().split()]\n\n\ts = sum(a) // 5\n#\tprint('YES',s)\n"}, "188": {"problem_id": 188, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n - 1, 0, -1):\n\ta[i] = (i + k) % n\nprint('YES' if a[k] == '1' else 'NO')"}, "189": {"problem_id": 189, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n-1):\n\tif(a[i]!=i):s+=i\nprint(s)"}, "190": {"problem_id": 190, "answer": ""}, "191": {"problem_id": 191, "answer": "n, k = list(map(int, input().split()))\na = [int(i) for i in input()]\np = 10 ** 9 + 7\nq = 100001\nfor _ in range(n-k+1):\n\tx = a[i] - p * (i + k) // (k - i + 1 - x)\n \tif x == 0: p = x // q\nprint(p)"}, "192": {"problem_id": 192, "answer": "# import sys\nsys.setrecursionlimit(2147483647)\nINF = float(\"inf\")\nMOD = 10**9+7\ndef LI(): return list(map(int, sys.stdin.readline().rstrip().split()))\nimport math\nfrom collections import defaultdict, deque, Counter, OrderedDict, namedtuple, to_key, setmet, numpy, heapq, itertools, zip2, ix64, IOBase, strt, stderr, foldor, globals, makedispush, pypy, scipy_ast, hex, binary, float, floor, ceil, lcm, mod, pow, factorial, gcd, islice, allweap, bisect\n \nmod = int(1e9) + 7 if MOD % MOD == 0 else 1\ninf = 1e18\nlcm = lambda x: math.sqrt(x*x + x/2) if x > 1 else x//2\nmaxy = [int(i) for i in input()]\nheap = []\nfor _ in range(LI()): heap.append((LI())[-1])\nans = 0\ni = 2\nwhile i*i <= x*y: ans += min(ans, (i+1)*(y-i)*pow(10**i, MOD-2)) if maxy[i] == y else 2**(numpy.ceil(math.gcd(mod,i)-1)%MOD)"}, "193": {"problem_id": 193, "answer": "a, b = list(map(int, input().split()))\nc, d = 0, 10**9\nfor i in range(len(a)):\n\tc += a[i] * b[d]\nprint(c)\n"}, "194": {"problem_id": 194, "answer": "n,a,b = list(map(int,input().split()))\ns = set()\nfor i in range(n):\n\ts.add(i)\nc = s.intersection(s[i])\nprint(sum(c))"}, "195": {"problem_id": 195, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nA = list(map(int, input().split()))\nB = [0]*(n+1)\nC = []\nfor i in range(1, n+2):\n\tif A[i] == 0 and B[(i+n)%2]==0: B.append(A[:i])\nelse: A.sort()\nprint(*A)"}, "196": {"problem_id": 196, "answer": "from sys import stdin, stdout, setrecursionlimit\nimport numpy as np\nn,k = list(map(int,stdin.readline().split()))\ns = [0]*(n+1)\nfor i in range(k):\n  s[i] = (1<<i)%n\nans = s.pop()\nprint(ans)"}, "197": {"problem_id": 197, "answer": "n = int(input())\nl = [int(i) for i in input().split()]\ns = sum(l)\nprint(s)"}, "198": {"problem_id": 198, "answer": "n = int(input())\nl = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n\ta[i] += 1\nans = []\ni = 0\nwhile(i < n and i >= 0 and len(a) > 0):\n\n\tx = a.pop(0) - a[-1]\n \tif(len(x) == 0 or x[x[0]] == 1): ans.extend([x, i])\nprint(ans.count(1))"}, "199": {"problem_id": 199, "answer": "n, s = list(map(int, input().split()))\nv = [int(x) for x in input()]\ns = 0\nfor i in range(n):\n  if v[i] > s: s += 1\nprint(s)\n"}, "200": {"problem_id": 200, "answer": "h,a,b = list(map(int,input().split()))\nc = b + a + b\nprint(h)\n"}, "201": {"problem_id": 201, "answer": "C=int(input())\nH=list(map(int,input().split()))\nW=[]\nfor i in range(1,C+1):\n if W[i]==W[C-1-i]:\n  W.append(i)\nelif H[0]+H[1]<H.count(W.pop(0)//2) and H.get(H)==0:   print(2*H)+1\nelse: print('0')\n"}, "202": {"problem_id": 202, "answer": "x,y = list(map(int,input().split()))\nprint(x)"}, "203": {"problem_id": 203, "answer": "n = int(input())\ns = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  d[s[i]] = i\nans = [0]*n\nif s[n-1] in d: ans.append(1)\nprint('R')"}, "204": {"problem_id": 204, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nINF = float(\"inf\")\nMOD = 10 ** 9 + 7\ndef LI(): return [int(x) for x in input().rstrip('\\n').split(' ')][0:int(''.join(map(str,input().split()))) - 1]\n# def LI_():   print(list(LI()))\na,b,x,y=LI_()\nfor i in range(0,len(a)):\n\tif a[i] > b: a.pop(i+1) + b = x\nprint(sum([a[-1] for a in a]))"}, "205": {"problem_id": 205, "answer": "n, b = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n):\n  s[i] += 1\nprint(s[-1])"}, "206": {"problem_id": 206, "answer": "n, m = list(map(int, input().split()))\ns = 0\nfor i in range(m):\n\tif n % i == 0 and s < 0: s += i\nprint(s)\n"}, "207": {"problem_id": 207, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n\tl.append(a[i])\nif(len(l) == 1 and l[0] == 0 and a[-1]!= 0) or len(r) > 1:\n\n\tprint('Yes')\nelse:   print('No')"}, "208": {"problem_id": 208, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict, deque\nn = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n-2):\n  s[i+1] += a[-i]\nprint(s[0])"}, "209": {"problem_id": 209, "answer": "x, y = map(int, input().split())\nans = 0\nfor i in range(len(x)):\n  if x[i] == y: continue\n\tans += (pow(2, i))*(y - p)\nprint(ans)"}, "210": {"problem_id": 210, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)\n"}, "211": {"problem_id": 211, "answer": "n,m,k=list(map(int,input().split()))\np=[0]*(2*m+1)\nfor i in range(n):\n  p[i]=int(input())\nc=p[n-1]\nif c==0:print(0)"}, "212": {"problem_id": 212, "answer": "n = int(input())\nprint('YES' if n % 2 == 0 else 'NO')"}, "213": {"problem_id": 213, "answer": "n, m = list(map(int, input().split()))\nk = [0] * (n + 1)\nfor i in range(n):\n\tk[i] = 1 if i % 2 == 1 else 0\nif k[n - 1] == 0: print(-1) \nelse: k.append(0)"}, "214": {"problem_id": 214, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout\nimport math,bisect,sys,itertools,heapq,collections,deque,fractions,math,random,time,copy,functools\nsys.setrecursionlimit(10**7)\nmod = 10**9+7\ninput = lambda:int(stdin.readline().rstrip())\nstdout.write('\\n'.join(map(str,input().split())))\n"}, "215": {"problem_id": 215, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] = max(a) + 1\nprint(2)"}, "216": {"problem_id": 216, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nc = []\nfor i in range(n):\n  if a[i] == 0 and b[(i+1)%2]==0:b.append(c[-1] + 1)\nprint(max(b,c))"}, "217": {"problem_id": 217, "answer": "a,b,f,k = list(map(int,input().split()))\nc = 1000000000\nfor i in range(b):\n\tc += a - f\nprint(c)"}, "218": {"problem_id": 218, "answer": "n,p,q = list(map(int,input().split()))\ns = input()\nl = []\nfor i in range(n):\n\tl.append(s[i])\n#print(l)\nprint(-1)"}, "219": {"problem_id": 219, "answer": "n,m,s,d = list(map(int,input().split()))\na = [0]\nfor i in range(n):\n\ta.append([int(x) for x in input().rstrip('>\\n').split(' ')])\nans = [-1] * (s + d + 2)\nmaxx = max(0,a[s] - a[d] + 1,ans[-1]) - 0.5\nminx= min(d - s + 0, maxx + minx, ans[0]) + s\nprint('%.2f' % (n * m))\n\n"}, "220": {"problem_id": 220, "answer": "s,x = list(map(int,input().split(' ')))\ncnt = 0\nfor i in range(0,len(s)):\n if s[i] == '0':\n  cnt += 1\n elif x % 2 == 0 and int(x/2) <= x//2 and s.count('0') == x%2 == 1:   # print(i,i+1)\n x //= 2 \n s = s + '1' + s\nx -= 1"}, "221": {"problem_id": 221, "answer": "n, k = list(map(int, input().split()))\nskew = [0] * (n + 2)\nfor i in range(n):\n  k += 1 if k % 2 == 0 else (k // 2 + n) * i\nl = int(input())\nprint(l)"}, "222": {"problem_id": 222, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nif n % 2 == 0: print(-1)\nelse: a.sort(reverse=True)"}, "223": {"problem_id": 223, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint(a[n-1])\n"}, "224": {"problem_id": 224, "answer": "from string import ascii_lowercase as aa\ns = input()\nn = len(s)\nfor i in range(n):\n  if s[i] == \"A\" and i < n-1: s.replace(\"A\", \"U\")\nprint(a)"}, "225": {"problem_id": 225, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint('YES' if a[0] == 'u' else 'NO')"}, "226": {"problem_id": 226, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append(a[i])\nprint(''.join(b))"}, "227": {"problem_id": 227, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n-2):\n\tb.append(a[i]+b[(i+1)%n])\nprint(min(b))"}, "228": {"problem_id": 228, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in range(n - 1):\n\tif a[i] < b[-i-1]: a.pop(i)\nprint('Alice')\n"}, "229": {"problem_id": 229, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n  l.append(a[i] + 1)\nprint('YES' if len(l) == 1 else 'NO')"}, "230": {"problem_id": 230, "answer": "n = int(input())\ns = list(map(int, input().split()))\nd = {}\nfor i in range(len(s)):\n  d[s[i]] = i\nprint(d.keys())"}, "231": {"problem_id": 231, "answer": "n, a = list(map(int, input().split()))\ns = 0\nfor i in range(n-1):\n  s += int(input())\nprint(s)"}, "232": {"problem_id": 232, "answer": "n,m=map(int,input().split())\nl=[]\nfor i in range(n):\n\tl.append(l[i-1]*(i+1)//2)\nprint(\"YES\")"}, "233": {"problem_id": 233, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\ts+=a[i]\n#print(s)\nif s>0 and a[s-1]>=6 and s<=n-2 and (s%3==0 or s%2==1)and a.count(6)>1:\n\n\tprint('MISHka')\nelse:"}, "234": {"problem_id": 234, "answer": "n,m = list(map(int,input().split()))\nl = []\nfor i in range(n):\n  l.append(input())\na,b,c = l[-1],l[:-1]\nif a == b or c == a or b == c:\n\n  print(\"YES\")\nelif (a!= b and c!= a and b!= c) and (c!= d and d!= e and e!= f) or (d!= g and g!= h and h!= i and i!= j and j!= k and k!= l and l!= r and r!= s and s!= t and t!= u and u!= v and v!= w and w!= x and x!= y and y!= z and z!= o and o!= p and p!= q and q!= m and m!= n and n == 0 and 0 < m < n or m == 1 or 1 <= m <= n <= 1 and 1!= 1 < 1:"}, "235": {"problem_id": 235, "answer": "n = int(input())\nl = [int(x) for x in input().split()]\nans = 0\nfor i in range(n-1): \n   if l[i] == i: ans += 1\nprint(ans)"}, "236": {"problem_id": 236, "answer": "s = input()\nn = len(s)\na = []\nfor i in range(n):\n  if s[i] == '-': a.append('-' *(i + 1))\nif a: print('YES')\nprint(' '.join(map(str, a)))"}, "237": {"problem_id": 237, "answer": "def gcd(a, b):\n\treturn a if b else b\na = int(input())\nb = list(map(int, input().split()))\ns = 0\nfor i in range(b[0] - 1, 0, -1): s += a - b[i]\nprint(s)"}, "238": {"problem_id": 238, "answer": "n, m, k = list(map(int, input().split()))\nl = []\nfor i in range(n):\n\tl.append(sum(l[i:i+k]*(m-i)//k) + k - i)\nans = 0\ni = 1\nwhile(i<n and i<m and m>0 and k > 0) and ans < m*k*i : ans += i\nprint(ans)"}, "239": {"problem_id": 239, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nl=list(map(int,input().split()))\nc=0\nfor i in range(len(l)):\n\tx,y=l[i]\n  \tif(x<y):c+=1\nprint(c)"}, "240": {"problem_id": 240, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n-1):\n\tif s[i] == '0': cnt += 1\nprint('\\n'.join(map(str,s)))\n"}, "241": {"problem_id": 241, "answer": "n,m,min,max = list(map(int,input().split()))\nt = [0]*(n+1)\nfor i in range(m):\n  t[i] = min(t[-1],i-min(i,n),i+max(0,i)+(n-i)*m) \nprint('Correct')\n"}, "242": {"problem_id": 242, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(1, len(a)):\n  if a[i] == 0 and i - 1 >= 0: ans += 1\nprint(ans)\n"}, "243": {"problem_id": 243, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m, k = list(map(int, input().split()))\ng = [[] for i in range(n)]\nedges = [0]*k\nvisited = set([0])\nfor i,j in enumerate(list(range(m)), 1):\n  visited.add(j)\nans = 0\nwhile edges[k] < m and visited and k < len(g) - 1 and (g[i][j] - g[j][i]) <= k + 1:  # print(i, j)\n\n  ans += max(0, abs(d(x, y) for x, _ in edges) + min(k, d(y, z)))\nprint(ans)"}, "244": {"problem_id": 244, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * (n + 1)\nfor i in range(n):\n\tb[a[i]] += 1\nprint(sum(b))"}, "245": {"problem_id": 245, "answer": "n = int(input())\nrect = []\nfor i in range(n):\n  x,y,z = list(map(int,input().split()))\n\n  rect.append(x*(y-z)//2)\nprint('YES' if rect else 'NO')"}, "246": {"problem_id": 246, "answer": "n,s = list(map(int,input().split()))\nd = [0]*n\nfor i in range(n-1,0,-1):\n  d[i] = int(s/i)\nprint(d[n])"}, "247": {"problem_id": 247, "answer": "n = int(input())\nx = list(map(int,input().split()))\ny = [0]*n\nfor i in range(n):\n  x[i] = x.pop(i)\ns = set(x[:n])\nprint(s)"}, "248": {"problem_id": 248, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nk = 0\nt = n\nfor i in range(1, t):\n  if a[i] == b[k-1] and k == 0: k = 1; t = i\nprint(k)"}, "249": {"problem_id": 249, "answer": "n,l,x,y = list(map(int,input().split()))\nmark = [0]*n\nfor i in range(n-1):\n\tmark[i+1] = 1 if i>=x else 0\n#print(mark)\nans = float('inf')\nwhile(y>0 and mark[y]==0):\n\n\tif (y-x)//2<=l: y = x+l-mark.pop(0,0) #y is greater than x\n \telse: x += 1 #x is less than y\nx -= 1\ny += -1\n\n"}, "250": {"problem_id": 250, "answer": "n = int(input())\na = []\nfor i in range(n):\n\ta.append([int(x) for x in input().split()])\nprint(max(a))"}, "251": {"problem_id": 251, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n - 1, 0, -1):\n  a[i] = min(a[-1] + k, a.pop(i + 2) + (k - i) * k - (i - 2 * i), 0)\n\n  k -= i\nprint(k)"}, "252": {"problem_id": 252, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n-1):\n\ta[i] = sum(b[j:j+i]) - (j-i)\nprint(sum(a))"}, "253": {"problem_id": 253, "answer": "#!/usr/bin/env python3\nfrom collections import deque\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\ndef inp(): return list(map(int, input().split()))\nINF = float('inf')\nMOD = 10**9+7\nN = int(input())\nfor i in range(N-1):\n\tx,y,z = INF/3,0,N//3+2*(3*i+1)*(2**i-2)+(i%3==0 and 0<=i<N),i//2+3**(y-z)-2+(y%2==1 and y%1!=0 or x%x==y and z%z==i and (x-y)%y==(z-i) and ((x+y+z)//(i))%(j-j) for j,i in enumerate(inp()[:i]))]\nprint(\"YES\")\n"}, "254": {"problem_id": 254, "answer": "n = int(input())\ns = input()\nprint(len(s))"}, "255": {"problem_id": 255, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] = i\nans = 0\nwhile b[n]!= a[b.index(max(a)+1):] and ans == 0: ans = (ans + 1)\nprint(ans)"}, "256": {"problem_id": 256, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**6)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n').split()\nprint(*[int(x) for x in input()])\n"}, "257": {"problem_id": 257, "answer": "import sys\ninput = sys.stdin.readline\nn, k = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n): s[i] += [int(input())] * (n - i + 1) * i\nprint(s[n])"}, "258": {"problem_id": 258, "answer": "n = int(input())\ns = input()\nif s[0] == '0':\n  s = '0123456789abcdefghijklmnopqrstuvwxyz'\nans = []\nfor i in range(0, len(s) - 1, 2):\n\tans.append(sum(map(int, input().split())))\nprint('\\n'.join(ans))"}, "259": {"problem_id": 259, "answer": "from sys import *\ninput = lambda: sys.stdin.readline().rstrip()\nn, t = list(map(int, input().split()))\nl = []\nfor i in range(n): l.append(input())\ns = [int(x) for x in l]\nd = dict(list(zip(l, s)))\ni = 0\nwhile i < len(s) and s[i] <= d: i += 1; print(i)\n"}, "260": {"problem_id": 260, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n\ta, b = list(map(int, input().split()))\n\n\tprint(a)\n"}, "261": {"problem_id": 261, "answer": "n = int(input())\ns = input()\nc = 0\nfor i in range(n):\n\tif s[i]=='*': c+=1\nif c>n: print(\"yes\")\nelse:print(\"no\")"}, "262": {"problem_id": 262, "answer": "from sys import stdin,stdout,setrecursionlimit\ninput=stdin.readline\nN=int(input())\nr=list(map(int,input().split()))\ns=[0]*N\nfor i in range(N):\n  s[i]=s.pop(i)\nprint('\\n'.join(s))"}, "263": {"problem_id": 263, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[a[i]] += 1\nans = 0\nwhile b[b.pop()]!= 0:\n\n\tans += (n-1)//2\nprint(ans)\n"}, "264": {"problem_id": 264, "answer": "n,m = list(map(int,input().split()))\np = pow(10,9)+7\ncnt = 0\nfor i in range(m):\n  if p % i == 0: cnt += 1\nprint(p)\n"}, "265": {"problem_id": 265, "answer": "n, m = list(map(int, input().split()))\npizzas = []\nfor i in range(n):\n\tf = [int(x) for x in input()]\n\n\tb = [-1] * m\n \tfor j, f in enumerate(zip(f, pizza))[::-1]: b[f].append(j)\nprint('\\n'.join(list(filter(lambda x: x[0] == '1', b))))\n"}, "266": {"problem_id": 266, "answer": "n, m = list(map(int, input().split()))\ns = \"\"\nfor i in range(1, int(m**0.5) + 1):\n\tif m%i == 0: s += str(i)\nprint(s)"}, "267": {"problem_id": 267, "answer": "from math import sqrt\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2147483647)\nn = int(input())\na = list(map(int,input().split()))\nans = 0\nfor i in range(1,n):\n\tans += a[i]*i\nprint(ans)"}, "268": {"problem_id": 268, "answer": "n,k,d = list(map(int,input().split()))\na = [int(i) for i in input()]\nb = [-1]*k\nans = 0\nfor i,j in zip(a,b):\n   ans += min(j-i,a[i]-b[j])\nprint('YES')\n"}, "269": {"problem_id": 269, "answer": "s = input()\nn = len(s)\nl = []\nfor i in range(n):\n\tl.append(input())\nprint(len(l))"}, "270": {"problem_id": 270, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\na = [0] * n\nfor i in range(n):\n  s = input()\n\n  a[s] += 1\nans = 0\np = [-1]*n\nwhile p[p[0]]!=-1 and m[m[1]]!= -1: p = (p+a[i] if i%2 == 0 else n-p) % m\nprint(ans)"}, "271": {"problem_id": 271, "answer": "n = int(input())\nans = 0\nfor i in range(n):\n\tans += i\nprint(ans)"}, "272": {"problem_id": 272, "answer": "s,t=input(),input().split()\nn=len(s)\na=[]\nfor i in range(n):\n\tif s[i]=='a' and len(a)>=1 and a[0].startswith('b'):a.insert(0,i+'b')\nprint(''.join(map(str,a)))"}, "273": {"problem_id": 273, "answer": "#https://www.codechef.com/problems/ALICE\nfrom sys import stdin, stdout\nn = int(stdin.readline())\ns = ''.join(map(str,s))\na = [int(x) for x in s.split()]\nans = []\nfor i in range(n-1,0,-1):\n\tif a[i] == 'a' and i < len(a) - 1: ans.append(i+1)\nprint(ans)"}, "274": {"problem_id": 274, "answer": "from sys import stdin\ninput = lambda: stdout().readline().rstrip()\nn = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n-1):\n\tx, y = map(lambda x: \"|\", a[i+1:i] if x[0]==\"|\" else x+y, a.pop(0))\n\n\tans.append(\"|\")\nprint(\"\".join(ans))"}, "275": {"problem_id": 275, "answer": "s = input()\nn = len(s)\nprint('\\n'.join(map(str,s)))"}, "276": {"problem_id": 276, "answer": "n = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n\tl.sort(reverse=True)\nprint(l[0])"}, "277": {"problem_id": 277, "answer": "n,a,b = list(map(int,input().split()))\nprint('Final!' if b else '!')\n"}, "278": {"problem_id": 278, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n\ts.append(s[i])\nprint(2)\n"}, "279": {"problem_id": 279, "answer": "v1 = list(map(int, input().split()))\nt = int(input())\nfor i in range(0, t):\n  v1[i] = (t - i - 1) * 0.5\ns = s[0]\nd = abs(s[1] - t)\nprint(d)"}, "280": {"problem_id": 280, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nn, m = list(map(int, input().split()))\ns = [0]*n\nfor i in range(1, n):\n  s[i] = (s[n-i-1] + 1) % m\nprint(sum(s))"}, "281": {"problem_id": 281, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**6)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nprint(*input())"}, "282": {"problem_id": 282, "answer": "n, d = list(map(int, input().split()))\ns = input()\nl = [0]\nfor i in range(1, n + 1):\n\tl.append(s[i])\nprint(-1)"}, "283": {"problem_id": 283, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n  if a[i] % 2 == 1: b.append(i)\nprint(len(b))"}, "284": {"problem_id": 284, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nc = []\nfor i in range(1, n+2):\n  if a[i-1] * i == b[b[c-i]]:\n\tc.append(c[0])\nprint(\"YES\")"}, "285": {"problem_id": 285, "answer": "n = int(input())\nx = list(map(int, input().split()))\ny = [0]*n\nfor i in range(n):\n\tx[i] = x.pop(i)\nprint('Yes')\n"}, "286": {"problem_id": 286, "answer": "n=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(len(a)):\n\tif a[i]%i==0:ans+=1\nprint(ans)\n"}, "287": {"problem_id": 287, "answer": "n, k = list(map(int, input().split()))\na = []\nfor i in range(1, n + 1):\n  a.append(i)\nprint(min(a))"}, "288": {"problem_id": 288, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n\ts[i] += 1\nprint(max(s))"}, "289": {"problem_id": 289, "answer": "s = input()\nn = len(s)\na = 0\nfor i in range(n):\n\tif s[i] == 'K':\n \t\ta += 1\nprint(a)"}, "290": {"problem_id": 290, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(len(l))"}, "291": {"problem_id": 291, "answer": "# cook your dish here\na,b=list(map(int,input().split()))\nc=0\nfor i in range(1,a+1):\n if(b-a>c):c+=1\nprint(c)\n"}, "292": {"problem_id": 292, "answer": "h,n = list(map(int,input().split()))\nl = []\nfor i in range(n):\n  l.append(input())\nprint(len(l))"}, "293": {"problem_id": 293, "answer": "n, m = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n\ts.add((i + 1) // 2)\nprint(len(s))"}, "294": {"problem_id": 294, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = [0]*n\nfor i in range(n):\n  d[i] = 1\nans = 0\nwhile(d[n-1]>=0 and i!=n and (ans==0 or i%(ans+1)==ans%n)): \n\tans+=1\nprint('YES' if ans==n else 'NO')"}, "295": {"problem_id": 295, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = []\nfor i in range(1,n):\n\ts.append(a[i]/i)\nprint('YES' if s[-1]%2==0 else 'NO')\n"}, "296": {"problem_id": 296, "answer": "n = int(input())\na,b = list(map(int,input().split()))\nprint(a*b)\n"}, "297": {"problem_id": 297, "answer": "n,m,k = list(map(int,input().split()))\nl = []\nfor i in range(n):\n  x,y,l.append([int(x) * int(y) for x in input()])\nx = min(l)\ny = m + k - l[0]\nprint(('YES' if x == y else 'NO'))"}, "298": {"problem_id": 298, "answer": "n,k = list(map(int,input().split()))\na = []\nfor i in range(n):\n\ta.append(list(input()).count(i+1))\n\n\tif k>a[-1][0] or (k==0 and a[0][1]!=i-k-2*i or k==n-i and (i>0 or i<len(a)-1)):\n\n \t\tprint(\"YES\")\n  \n"}, "299": {"problem_id": 299, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] += 1\nprint('1\\n'.join(a))"}, "300": {"problem_id": 300, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n  ans += a[i]\nprint(ans)"}, "301": {"problem_id": 301, "answer": "n=int(input())\na=list(map(int,input().split()))\nans=[]\nfor i in range(n):\n\tans.append(a[i]*i)\nprint(*ans)"}, "302": {"problem_id": 302, "answer": "n = int(input())\nl = []\nfor i in range(n):\n\tl.append(sum(l[i-1:i]))\nprint('%.4f' % (n-i+1))"}, "303": {"problem_id": 303, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn=int(input())\nx,y=list(map(int,input().split()))\nprint('YES' if x==y else 'NO')\n"}, "304": {"problem_id": 304, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a))"}, "305": {"problem_id": 305, "answer": "from sys import stdin,stdout,setrecursionlimit\ninput=stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n\tb.append(a[i]+b[-1])\nprint(max(b))"}, "306": {"problem_id": 306, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = []\nfor i in range(n):\n\tb.append(a[i]^b[-1])\nans = sum(b)\nprint(ans)"}, "307": {"problem_id": 307, "answer": "k = list(map(int, input().split()))\nn = len(k)\ns = 0\nfor i in range(n):\n  s += k[i]\nprint(s)"}, "308": {"problem_id": 308, "answer": "def solve(a,b,c,d,e,f,g,h,i,j,k,l,m,n,s,t,u,v,w,z):\n  if a==b==c==d==e==f==g==h==i==j==k==l==m==n==s==t==u==v==w==z and i!=0 and j!=-1 and k!=(-1,0) and l!=[0,1] and u!={} and w!{} else: return 0\n\n  a=a+b+c+d+e+f+g+h+i+j+k+l+m+n+s+t+u+v+w+z-i-j-k-l-m-n-s-t-u-v-w-c-d-e-f-g-h-p-q-r-b-a-x-y-z+x+y+p+q+r+a*c*d*e*f*g*h*i*j*k*l*m*n*s*t*u*v*w*z*p*q*r*b*x*y*map*(map(int,input().split()))[0][0]*((a[1]+1)//2)\n\n\n\n"}, "309": {"problem_id": 309, "answer": "from collections import defaultdict\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(10**9))"}, "310": {"problem_id": 310, "answer": "from math import sqrt\nn,k = list(map(int,input().split()))\npoints = [[] for _ in range(n)]\nfor i,p in enumerate(points):points[p].append(i)\nx,y = points[i]\nd = [0]*n\ndef dfs(x):\n  if d[x]!=-1:return x,x+y\ndfs(0),d[1] = 0,d.pop()\nans = k-ans\nprint(ans)\n\n"}, "311": {"problem_id": 311, "answer": "# import sys\nsys.stdin = open('input.txt', 'r')\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] = (b[-1]+1)%(10**9+7)\nprint('YES' if a[n-2]<=n else 'NO')"}, "312": {"problem_id": 312, "answer": "n, m = map(int, input().split())\na = [0]*(n+1)\nfor i in range(1, n+2):\n  if a[i] == m: continue\nprint(a[-1])"}, "313": {"problem_id": 313, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tprint(a[i], end=' ')\nprint()"}, "314": {"problem_id": 314, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n\ta[i] += 1\nprint(sum(a))"}, "315": {"problem_id": 315, "answer": "n,k = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(k+3):\n\ta[i] = (k-i)//3\nprint(min(a))"}, "316": {"problem_id": 316, "answer": "n = int(input())\nl = []\nfor i in range(1,n+1):\n\tl.append(i*i)\ns = sum(l)//n\nprint(s)"}, "317": {"problem_id": 317, "answer": "n = int(input())\ns = input()\nprint(\"\".join(s))"}, "318": {"problem_id": 318, "answer": "#!/usr/bin/env python3\nfrom collections import deque\ndef time_to_seconds(s):\n return (s[0] - s[1]) * 60 + s.split(':')[-1]\n \nn = int(input())\ns = list(map(int, input().split()))\na = []\nfor i in range(n - 1, -2147483648,-2) :\n a.append(i)\nprint(\"%s:%d\" % (a[:i], a[i+1:]))"}, "319": {"problem_id": 319, "answer": "n,m = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(m):\n\ta[i] = a[n-i-1] + i\nprint('YES')\n"}, "320": {"problem_id": 320, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i] % 10\nprint(s)"}, "321": {"problem_id": 321, "answer": "from math import factorial\nfor _ in range(int(input())):\n  a, b = list(map( int, input().split() ) )\n\n  x = a * (b - 1) + (a - 2 * b)\n"}, "322": {"problem_id": 322, "answer": "n = int(input())\npoints = list(map(int, input().split()))\nfor i in range(n):\n  points[i] = [0, i]\nprint('Yes')\n"}, "323": {"problem_id": 323, "answer": "# cook your dish here\na,b=list(map(int,input().split()))\nprint(a//b)\n"}, "324": {"problem_id": 324, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=a[0]\nfor i in range(1,len(a)):\n  if a[i]%i==0:s+=i\nprint(s)\n"}, "325": {"problem_id": 325, "answer": "from collections import defaultdict, deque\nn, m, p, a, b = list(map(int, input().split()))\nedges = [[] for i in range(n)]\nfor i, j in edges: edges[i].append([j, 0])\nans = [0] * (m + 1)\nif p >= 0: ans[p] = min(ans[m] + q for q, c in enumerate(sorted(list(range(m)), reverse=True)))\nprint(*ans, sep='\\n')\n"}, "326": {"problem_id": 326, "answer": "n = int(input())\ns = list(map(int, input().split()))\na = [0]*n\nfor i in range(n):\n  a[i+1] = s[n-i]\nans = sum(a)\nif ans>=c: print(-1)"}, "327": {"problem_id": 327, "answer": "n, k = list(map(int, input().split()))\nl = [0] * (n + 1)\nfor i in range(n):\n  l[i] = 1 if i % 2 == 0 else 0\nprint(max(l))"}, "328": {"problem_id": 328, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n-1):\n  if l[i]==0:s+=1\nprint(s)\n"}, "329": {"problem_id": 329, "answer": "s = input()\ncnt = 0\nfor i in range(len(s)):\n\tif s[i] in 'abcdefghijklmnopqrstuvwxyz': cnt += 1\n"}, "330": {"problem_id": 330, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout,setrecursionlimit\nimport math,string,itertools,bisect,collections,heapq,sys,random,copy,array,deque,int,float,bool,itemgetter,mod,math,pow,tan,truediv,time,floor,inf,fclose,io,open,claimer,Numpy,Dijkstra,SortedList,Array,Counter,Binary,Covariant,Concatenent,Enumerate,Euclidean,GCD,Hull,Kruskal,Linear,NMap,Queue,Priority,Precomparison,Processor,Eat,Stop,Uppercase,Explanation,Vectors,Xorha,Yorang,Leetcode\nstdin.readline()"}, "331": {"problem_id": 331, "answer": "n,m,k=map(int,input().split())\na=[]\nfor i in range(0,n):\n\ta.append([int(x) for x in input()])\nprint(len(a))"}, "332": {"problem_id": 332, "answer": ""}, "333": {"problem_id": 333, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(len(l)):\n  if l[i]!=str(c) and c<=n-i: c+=1\nprint(-1)\n"}, "334": {"problem_id": 334, "answer": "a = int(input())\nb = [int(i) for i in input().split()]\nprint(a - b)"}, "335": {"problem_id": 335, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(a[0])"}, "336": {"problem_id": 336, "answer": "# cook your dish here\nn,a,b,c,d=list(map(int,input().split()))\nm=n\nfor i in range(n):\n   m=min(m,m+a*c*d)\nl=[]\nr=0\nwhile(l and r) and (l[r-1]==0 or r==1):r+=1\nprint(r)"}, "337": {"problem_id": 337, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\ndef get_ints(): return map(int, input().strip().split(' ')))\nn = int(input())\nL = [0] + L[-1]\nfor i in range(n): L.append(L[i+1])\na,b,c,d = 0,1,0,2\nif a == b == c == d: a, b, c, d = (a + b + c + d), (b + (c + 1) - (d - 1))\nprint(a)"}, "338": {"problem_id": 338, "answer": "m = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(len(l)):\n\ts += l[i]\nprint(s)"}, "339": {"problem_id": 339, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nans = 0\nfor i in range(n):\n\tif a[i]%2 == 0 and b[-i-1]//b[0]+1<=i:ans+=i\nprint(ans)"}, "340": {"problem_id": 340, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n   b.append(a[i]-i)\nprint(min(b))"}, "341": {"problem_id": 341, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque, defaultdict, OrderedDict,defaultdict2,Counter,deque2\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nmod = 10**9+7\ndef LI(): return [int(x) for x in input().rstrip('\\n').split(' ')]; return list(reversed(map(int,input().split(mod)))[0])[:-1]\ndel input()\nn,k,r,s,p,q = LI();\nt = [0]*n\nfor i in range(n):t[i] = t[(i+k)%n].bit_length();k -= 1;q.append(k);print(q[k])"}, "342": {"problem_id": 342, "answer": "from sys import stdin,stdout\ninput=stdin.readline\na,b,c=list(map(int,input().split()))\nfor i in range(0,len(a),2):\n  if a[i]=='b':a.pop(i+1)\nif b==c:b=a[-1]\nprint(2*(b-c))"}, "343": {"problem_id": 343, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque, Counter, OrderedDict,defaultdict,deque\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nmod = 10**9+7\nn = int(input())\nA = list(map(int,input().split()))\nB = [0]*n\nfor i in range(n):\n\tA[i] += A[n-i-2]\n#print(A,B,A.count(0),B[0])\nif len(B)%2==0:print(-1)"}, "344": {"problem_id": 344, "answer": "s = input()\nfor i in range(len(s)):\n\tif s[i] in 'aeiou': print('YES')"}, "345": {"problem_id": 345, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\ngraph = [[] for i in range(m)]\nfor i, j in enumerate(list(range(1, n+1))):\n  graph[i].append([j, i])\nvisited = [False] * (n + 1)\nedges = []\ndef dfs(graph, visited, curr, end):\n\n  if visited[curr] == False and end == -1:  # edge to be traversed in graph, or a new node to start an anneal_loop or the current node has no edges or is not connected to any other node.  In this case, it is impossible to reach the node with new edges, so the visited array will be empty, as that is the case for all other nodes in this range."}, "346": {"problem_id": 346, "answer": "import sys\ninput = sys.stdin.readline\nN, M = list(map(int, input().split()))\ns = [0] * N\nfor i in range(N): s[i+1] += [int(input()) for _ in [s[-i-1]]]\nprint(M)\n"}, "347": {"problem_id": 347, "answer": "m = int(input())\nw = list(map(int,input().split()))\nn = len(w)\ns = 0.0\nfor i in range(n-1):\n  s += w[i]\nprint(s)"}, "348": {"problem_id": 348, "answer": "MOD = 10**9 + 7\nn, m, L, R = list(map(int, input().split()))\na = [0]*n\nfor i in range(m):\n\ta[i] = (1<<(L-1))%MOD\nprint(1)\n"}, "349": {"problem_id": 349, "answer": "n, m = list(map(int, input().split()))\nA = [[0] * m for _ in range(n)]\nfor i, row in enumerate(zip(*[iter(A)]*m)::int(row)):A[row].append(i+1)\nprint('\\n'.join(['{}'.format(x) for x in A[::-1] if x>0]));\n"}, "350": {"problem_id": 350, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nans = 0\nfor i in range(n):\n\tif a[i] == 1 and i + 1 in a: ans += 1\nprint(ans)"}, "351": {"problem_id": 351, "answer": "n,k = map(int,input().split())\na = [int(i) for i in input()]\nb = [-1]*(n+1)\nif a[0]%2 == 1:print(0)"}, "352": {"problem_id": 352, "answer": "n = int(input())\ns = [int(i) for i in input().split()]\nans = 0\nfor k in range(n):\n\tif s[k] == 1: ans += 1\nprint(ans)\n"}, "353": {"problem_id": 353, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += (a[i] - a[n - 1 - i]) * (i + 2)\nprint(\"UP\" if s > 0 else \"\")"}, "354": {"problem_id": 354, "answer": "s = input()\nt = str(s)\nif len(t) > 0 and t[0] == \"aeiou\":\n\tprint(\"Yes\")\nelse: print(\"No\")"}, "355": {"problem_id": 355, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nfrom collections import deque, Counter, OrderedDict,defaultdict,deque2D,random,bisect,sqrt,math.inf\nclass Game(object):\n\tdef __init__(self,board,player,level=0,start=None,end=-1,pawn={})->object(int(x) for x in input().split(' '))(init=True)\n\n\t@staticmethod\n@property\ndef player(board):return self.board[player]\nself.player = board\nlevel = 0\nstart = None\nend = -1\nfor i in range(len(list(player.keys())))[1:]:\n if start is None: start = i\n else: end = (i-1)//2\n player.append(start)"}, "356": {"problem_id": 356, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\ta.append(b[i])\n# print(a)\nans = [0] * (n + 2 * n + 1) \nif n % 2 == 0 and a[n // 2] == b[-n//2]:\n  \tans.pop()\nprint(max(ans))"}, "357": {"problem_id": 357, "answer": "import sys\ninput = sys.stdin.readline\ndef main():\n \n n = int(input())\n a = list(map(int, input().split()))\n s = ''\n for i in range(len(a)-1, 0, -1):\n\n  if (a[i] == '_' and s[-1]=='_') and (s[:i]+' '*(i+1)=='') and a[0]!='_':\n #   print('NO')\n if len(s)>=1 and not s.startswith('_',s.pop()):\n print(\"YES\")\n"}, "358": {"problem_id": 358, "answer": "# cook your dish here\nn = int(input())\na,b,k = list(map(int,input().split()))\nans = 0\nfor i in range(1,n+1):\n\tif a%i==0:ans+=i\nprint(ans)\n"}, "359": {"problem_id": 359, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout\nimport math,bisect,collections,itertools,heapq,os,time,socket,socketserver,att,appending,ciphers,compress,email,cpp,dj,string,array,functools\nsys_setrecursionlimit = 10**9+7\ninput = lambda:stdin.readline().rstrip()\nstdout.write(str(input())+\"\\n\")\n"}, "360": {"problem_id": 360, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n\tl.append(s + i)\nprint(sum(l))"}, "361": {"problem_id": 361, "answer": "from string import ascii_uppercase,lowercase\nn = int(input())\na = list(map(int, input().split()))\ns = ''\nfor i in range(len(a)):\n  s += a[i]\nprint(s)"}, "362": {"problem_id": 362, "answer": "n = int(input())\na = list(map(int,input().split()))\ncnt = 0\nfor i in range(n):\n\tif(a[i]*(i+1)//2 == a[n-i-1] * (n - i - 1)): cnt += 1\nprint(len(set([a])))\n"}, "363": {"problem_id": 363, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(len(a))"}, "364": {"problem_id": 364, "answer": "n, a, b = list(map(int, input().split()))\ncnt = [0] * (n + 1)\nfor i in range(n):\n  if a + b <= n - 1 or b == 0 or a == 1 and b!= 0 and a!= a - 2 or (b == b + 2 and (a % 2) not in [(0, 3, 5)]) : continue\nans = 0\nflag = True\nif flag: print(\"\".join(sorted(list(range(b, 0, -2)), key = lambda x: (x[0], x[1]))) + \" \" + str(ans))"}, "365": {"problem_id": 365, "answer": "n,x=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append(input())\nans=[0]*n\nc=0\ni=1\nwhile(i<n and i<len(a)):\n\n\tif a[i]==1 and c<ans[-1] and (i+1)%2==0 and ((n-i)//2)*(c+i*c)<=i:c+=i\nprint(\"YES\")\n"}, "366": {"problem_id": 366, "answer": "n, s = list(map(int, input().split()))\ns = sum(s)\nprint(n)"}, "367": {"problem_id": 367, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n-1):\n\tif s[i] == 'a': cnt += 1\nprint(''.join(map(str, s)))\n"}, "368": {"problem_id": 368, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n\ts += l[i]\nprint('\\n'.join(s))"}, "369": {"problem_id": 369, "answer": "# import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\ns = []\nfor i in range(n+1):\n  s.append(input())\nm = int(m**0.5)+1\nprint(\" \".join(s))"}, "370": {"problem_id": 370, "answer": "# import sys\nsys.setrecursionlimit(10**9+7) # sys.stdin = open('input.txt', 'r')\nfrom math import ceil, floor, pi, sqrt\ndef get_array(): return list(map(int, input().split())) # get input list in a 2D array. Returns an array of integers starting from 0 and ending at x and y where x <= y and x + y <= x**2.x.y.pow. pow(x, x) - pow(y,y) <= 2*x**0.2**pi\nimport heapq\nn = int(input())\nl = []\nfor i in range(n):\n\tx = l[i][0]  # x[0], y[1], i[2] = 0, 1, 3, 5, 7, 9, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 393, 401, 409, 419, 423, 424, 425, 426, 427, 428, 429, 430, 605, 606, 630, 368, 371, 378, 384, 457, 386, 490, 499, 503, 508, 519, 5211, 5413, 5527, 5559], end = True\nif not end: # return False\nans = [x for x, end in enumerate(l) if end]\nprint('\\n'.join(ans))"}, "371": {"problem_id": 371, "answer": "m = int(input())\nfor i in range(m):\n\ta = [int(x) for x in input().split()]\n\n\tif len(a) == 4 and a[0][1] == '1':\n \t\tprint(-1)\n"}, "372": {"problem_id": 372, "answer": "# cook your dish here\nx = input().split()\nn = int(x[0])\nl = []\nfor i in range(n):\n\tl.append(int(input()))\nprint(\"%.12f\" %(l[-1]))"}, "373": {"problem_id": 373, "answer": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nsys.setrecursionlimit(10**7)\nmod = 10**9+7\ninf = float('inf')\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\n# def LI(*args, **kwargs):   return sorted(set(args), key=lambda x:x[1], reverse=True)[:k] # dp[i][j] = min(i, j) + max(0, k - i[0])  # print(dp[-1][0], k, i)  if k > 0 else 0  else (inf) - 1\n \nn = int(input())\nA = [LI() for _ in range(n)]\nfor i,a in enumerate(A,1):\n\tif a == n: return i"}, "374": {"problem_id": 374, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]\nfor i in range(n):\n\tb.append(a[i]-1)\nc = 0\nwhile c < n - 1 and a[c] == b[b[a.index(c)-1]]:\n\n\tc += 1\n\n"}, "375": {"problem_id": 375, "answer": "n = int(input())\ns = input()\na = [0]*n\nfor i in range(n):\n\ts[i] = s[n-i-1] + i\nans = 0\nwhile(len(s)>0 and len(a)<=n+1 and a[0].count('a')==s.count(':'))+a.pop() : ans += 1\nprint(ans)"}, "376": {"problem_id": 376, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n-1):\n\ts[i+1] = 1\nans = 0\nwhile a[s.index(max(s)):]!= -1:\n\n\tif s[a.pop(0)] == 1: ans = min(ans, len(a) - i + 1)\nif ans == 0: print(\"0\")\nprint(\"1\")"}, "377": {"problem_id": 377, "answer": "n, m = list(map(int, input().split()))\na = [0]\nfor i in range(n):\n  a.append(a[-1] + i)\nm = m - 1\nprint(m)\n\n"}, "378": {"problem_id": 378, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nstdin.readline()\nn,r=list(map(int,input().split()))\nprint(n)\n"}, "379": {"problem_id": 379, "answer": "n,m = list(map(int,input().split()))\na = [[0] * m for i in range(n)]\nfor i,c in enumerate(input(),1):\n  if c == \"X\":a[i-1][i+1] = 1\nprint(\"YES\")\n"}, "380": {"problem_id": 380, "answer": "from math import sqrt\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(int(1e6) + 7)"}, "381": {"problem_id": 381, "answer": "k = int(input())\nn, m = list(map(int, input().split()))\nedges = []\nfor i in range(m):\n  if i % 2 == 0 and (i // 2) in [1, 2] and ((i - 1) * (n - i) + (m - n) // 3) % 3 == 1:   print(\"NO\", end = \" \")\nprint(\"YES\")\n"}, "382": {"problem_id": 382, "answer": "n,m,q=list(map(int,input().split()))\ns=input()\nl=len(s)\ni=l//2\nwhile(i>0):\n\tif(l%2!=0 and i<l-1 and s[0]=='c'): i=i+1-l\nprint(0)\n\n"}, "383": {"problem_id": 383, "answer": "n,k,d=list(map(int,input().split()))\nl=[]\nfor i in range(1,n+1):\n\tl.append(i*(k-i)%d)\nprint(l)"}, "384": {"problem_id": 384, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(n):\n\tif s[i] == \"W\" or len(s) == 0 or (s[n-1].isdigit() or s.count(\"W\") == 1) or cnt < n-i+1:\n\n\t\ts.insert(i, \"B\")\n# print s\nprint(\"\".join(map(str, s)))"}, "385": {"problem_id": 385, "answer": "#!/usr/bin/env python3\nfrom sys import stdin\ninput=stdin.readline\nn,m,p=list(map(int,input().split(\" \")))\na=[]\nfor i in range(n):\n   a.append(\"(\"+str(i+1)+\")\"+\"1\")\nans=[0]*(m+2)\ni=0\nwhile i<n-1 and a[i]==\"0\" : i+=1\nprint(*ans)"}, "386": {"problem_id": 386, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n\tx = a[i] - (a[n-i-1] if n - i > x else x) + 1\n\n\tif x >= x[0] and x == x or (x - 1) % 2 == 0: cnt += 1\n"}, "387": {"problem_id": 387, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n  l[i] = str(i)\nprint(len(l))"}, "388": {"problem_id": 388, "answer": "n, k = list(map(int, input().split()))\ng = [0]*(n+1)\nfor i in range(k):\n  g[i] = 1 if i == n else 0\ns = [\"NO\",\"YES\",\"NO\"]\nprint(*g)"}, "389": {"problem_id": 389, "answer": "a,b = list(map(int, input().split()))\nprint(a-b)"}, "390": {"problem_id": 390, "answer": "n,a,b = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):s[i+1] = int(input())\nprint(sum(s))"}, "391": {"problem_id": 391, "answer": "k = int(input())\nfor i in range(k):\n  a, b = list(map(int, input().split()))\n\n  if (a == 1) and (b == 2): print(\"w\", end = \" \")\n"}, "392": {"problem_id": 392, "answer": "n = int(input())\na = [1]\nfor i in range(n):\n\ta.append(a[-1]+i)\nprint(''.join(map(str,a)))"}, "393": {"problem_id": 393, "answer": "n = int(input())\nl = list(map(int,input().split()))\na = []\nfor i in range(n-1):\n\tif l[i]=='1': a.append(i+1)\nprint('Yes')\n"}, "394": {"problem_id": 394, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\ts+=a[i]\nprint(s)"}, "395": {"problem_id": 395, "answer": "a,b=list(map(int,input().split()))\nc=0\nfor i in range(0,len(a)):\n  if a[i]>c:c+=1\nprint(\"YES\")\n"}, "396": {"problem_id": 396, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(1, n):\n  a.append(a[i-1]*(i+1)//2)\nprint(len(str(n)))"}, "397": {"problem_id": 397, "answer": "n, k = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n): s[i] = int(input())\nprint(sum(s))"}, "398": {"problem_id": 398, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nprint('YES' if len(a) == 3 else 'NO')"}, "399": {"problem_id": 399, "answer": "x,y=map(int,input().split())\nprint('Yes' if x==y else 'No')"}, "400": {"problem_id": 400, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, k = list(map(int, input().split()))\ns = [0]\nfor i in range(1, n+1):\n  s.append(s[i-1] + s[n-i])\nprint(k)\n"}, "401": {"problem_id": 401, "answer": "n,m = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n  a[i] = int(input())\nprint(a[0])"}, "402": {"problem_id": 402, "answer": "n, k = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += int(input()[i])\nif s < n: break\nprint(s)\n"}, "403": {"problem_id": 403, "answer": ""}, "404": {"problem_id": 404, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(len(a))"}, "405": {"problem_id": 405, "answer": "n = int(input())\ns = input()\na = []\nfor i in range(n):\n\ta.append(s[i] +'' + s[n-i-1])\nprint(len(a))"}, "406": {"problem_id": 406, "answer": "n = int(input())\nl = list(map(int, input().split()))\na = [0] * (n+1)\nfor i in range(n):\n\ta[i] += 1\nans = 0\nwhile(len(l) > 0 and l[-1] < a[n-2] + 1):\n\n\tans += (l.pop()[1]-1)*(1-l[0])\nprint(ans)"}, "407": {"problem_id": 407, "answer": "n = int(input())\na = list(map(str, input().split()))\ns = ''\nfor i in range(n):\n   s += str(i) + '0'\nprint(s)"}, "408": {"problem_id": 408, "answer": "n,m = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(m):\n  a[i]+=1\nprint(a[-1])\n"}, "409": {"problem_id": 409, "answer": "s = input()\nfor i in range(0, len(s)):\n\tif s[i] not in 'BAA' and len([i+1,s[-i-1]])>=2 and (s.count('B')==1 or (len([s,i])==2) and i%2==0) or i!=0 and s=='AB' or s!='BA':\n \t\tprint('YES')\n"}, "410": {"problem_id": 410, "answer": ""}, "411": {"problem_id": 411, "answer": "R,B = list(map(int,input().split()))\nX,Y = [],[]\nfor i in range(R+1):\n  X.append(X[-1]*Y[i])\nB.sort(reverse=True)\nprint(\"Yes\")\nif B==X: print(\"No\")"}, "412": {"problem_id": 412, "answer": ""}, "413": {"problem_id": 413, "answer": "n,m=list(map(int,input().split()))\ncount=0\nfor i in range(1,n+1):\n\tif i%2==0 and i//2!=n:count+=1\nprint(count)\n"}, "414": {"problem_id": 414, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\ngraph = [[] for _ in range(n)]\nfor i,s in enumerate(sorted(list(range(0,n-1)),key=lambda x:x[1]):[s[0]]):\n   graph[i].append(i+1)\nvisited = [False]*n\nans = 0\nwhile len(graph)<n and visited[ans]==False:ans+=1\nprint('YES' if ans>1 else 'NO')"}, "415": {"problem_id": 415, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n\tif(l[i]>=100 and l[(i+1)%n]==0):ans+=1\nprint(ans)"}, "416": {"problem_id": 416, "answer": "n,k = list(map(int,input().split()))\ns = set()\nfor i in range(n):\n  s.add(input()[i])\nif k == 0:print(\"YES\")\nelse: print(\"NO\")"}, "417": {"problem_id": 417, "answer": "n, x, d = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n  s[i] = x + d*i\nprint(s)"}, "418": {"problem_id": 418, "answer": "n = int(input())\na = []\nfor i in range(n):\n\ta.append([int(x) for x in input().split()])\nprint(\"YES\")"}, "419": {"problem_id": 419, "answer": "import math\nn = int(input())\nl = list(map(int,input().split()))\ncnt = 0\nfor i in range(0,n):\n if(l[i]>=0 and l[(i+1)%2]==0): \n  cnt+=1\n else: \n\n  l.append((i-1,i,1))\n\n\n\n"}, "420": {"problem_id": 420, "answer": "n,m=list(map(int,input().split()))\na=[[0]*(n+1) for _ in range(m+2)]\nfor i,x in enumerate(input(),1):\n\ta[i][0]=x\n#print(a)\nr=[]\nif n==1: r.append([0,0])\nprint(''.join(r))"}, "421": {"problem_id": 421, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "422": {"problem_id": 422, "answer": "n, k = list(map(int, input().split()))\na = [0]\nfor i in range(n):\n\ta[i+1] += int(input()).count('T')\nprint('YES' if sum(a) <= k else 'NO')"}, "423": {"problem_id": 423, "answer": "n, k = list(map(int, input().split()))\na = input()\nx = 0\nfor i in range(n):\n\tif a[i] == -10: x = i\nprint(\"Yes\")\n"}, "424": {"problem_id": 424, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "425": {"problem_id": 425, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(int(input()))\nfrom math import ceil, floor, factorial, log2, pi, sqrt\nmod = 10 ** 9 + 7\ndef power(n):\n\tif (n == 0 or n == 1): return 1; return 2**n;\n\n\treturn pow(mod, 2, mod)\nfor i in range(1, int(log2(10**9+7))+1): print(i)"}, "426": {"problem_id": 426, "answer": "n, k = list(map(int, input().split()))\ns = input()\nl = 0\nfor i in range(n):\n  if s[i] == '0' and l < k: l = i\nprint(l)\n"}, "427": {"problem_id": 427, "answer": "#dt = {} for i in x: dt[i] = i\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nprint(int(input()))\n"}, "428": {"problem_id": 428, "answer": "from math import *\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**8)\nn,s = list(map(int,input().split()))\nd = {}\nfor _ in range(n):\n   x,y,d[x].append(y+y-.5*(1<<s-1-x)for y in d.values())\nans = [-1]*n\nt = 0\nwhile t < n and ans[t] <= 0:t+=1\nprint(t)"}, "429": {"problem_id": 429, "answer": "s = input()\nn = len(s)\np = [0] * 26\nfor i in range(n):\n\tif s[i] == '?' and p[ord(i) - ord('a')]!= -1: p.append(ord('z')[p[-2] + 1])\nprint(''.join(p))"}, "430": {"problem_id": 430, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint('YES' if a[0] == 100 else 'NO')"}, "431": {"problem_id": 431, "answer": "n, m = list(map(int, input().split()))\na = []\nfor i in range(n):\n\ta.append([int(input()), i+1]*m)\nprint(len(a))"}, "432": {"problem_id": 432, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] = b[-i-1]\nprint(max(a))"}, "433": {"problem_id": 433, "answer": "n,a,b = list(map(int,input().split()))\npos = [0]*(n+1)\nfor i in range(0,n):\n\tpos[i] = pos[n-i-1] + b\nprint(len(pos))"}, "434": {"problem_id": 434, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]\nfor i in range(n):\n\ts.append(a[i]+1)\nans = 0\nwhile(len(s)>0 and len(ans)<n and s[-n+1]!=0):\n\n\ti = s.pop(0) - a[n-i] - ans\n \tans += min(i, ans) + 2*i\n#print(f\"ans: {ans}, s: {}\\n\")\nf = lambda: [x for x in s if x<=ans]"}, "435": {"problem_id": 435, "answer": "n, k = list(map(int, input().split()))\ns = input()\ncnt = 0\nfor i in range(n):\n  if s[i] in cnt and s.count(str(i) + 1) == k or s == str(s[:i])+1: \n\tbreak\nif k == 0 or k > 0:\tprint(0)\nelse: print(k)"}, "436": {"problem_id": 436, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n):\n\tl.append(a[i]-1)\nc = [0]*n\ni = 0\nwhile i+1 < len(l) and i>=0 and l[-i-1]==l[:i] and (i+i)%2 == 0: i += 1\nprint(0)"}, "437": {"problem_id": 437, "answer": "n = int(input())\na = []\nfor i in range(n):\n\ta.append(0.0)\ns = 0\nwhile s < len(a) and a[s] == 0: s += 1\nprint(s)"}, "438": {"problem_id": 438, "answer": "n=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(1,n+1):\n\tans+=a[i]\nprint(ans)\n"}, "439": {"problem_id": 439, "answer": "n, m = list(map(int, input().split()))\na = [0]*(n+1)\nfor i in range(m):\n  a[i] = int(input())\nprint(a[-1])"}, "440": {"problem_id": 440, "answer": "n = int(input())\ns = input()\nprint(s.count('a'))"}, "441": {"problem_id": 441, "answer": "n, a, b = map(int, input().split())\nprint(n)"}, "442": {"problem_id": 442, "answer": "n = int(input())\ns = list(map(int, input().split()))\nif len(s) == 1 or s[0] == '0':\n print('NO')\n return\nfor i in range(1, n):\n s.insert(0, i)"}, "443": {"problem_id": 443, "answer": "n = int(input())\na = list(map(int, input().split()))\nk = 0\nfor i in range(n):\n\tk += a[i]\nprint(k)"}, "444": {"problem_id": 444, "answer": "n = int(input())\nl = list(map(int, input().split()))\nfor i in range(n):\n\tl[i] = str(i) + '0'\nprint(len(l))"}, "445": {"problem_id": 445, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "446": {"problem_id": 446, "answer": "n = int(input())\nl = [int(i) for i in input().split()]\nif l[-1] == 0: print(1)\nelse: l.pop()"}, "447": {"problem_id": 447, "answer": "m,d = list(map(int,input().split()))\nn = int(input())\na = [0]*(n+1)\nfor i in range(1,n):\n\ta[i] = str(bin(i)[2:].count('1')//2 + '0'[::-1])\nprint(len(a))"}, "448": {"problem_id": 448, "answer": "n,m = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(m):\n  if a[i]==0: a.append(i+n-i-1-a[0])\nprint(len(a))"}, "449": {"problem_id": 449, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = 0\nfor i in range(n-1):\n\tif a[i] == 100: b += 1\nprint(b)\n"}, "450": {"problem_id": 450, "answer": "n, k = list(map(int, input().split()))\np = [1]\nfor i in range(n):\n\tp.append(sum(list(range(i+1)))%1000000007)\nprint(p)"}, "451": {"problem_id": 451, "answer": "n, k = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append(input())\nk -= 1\nc = [0] * (k + 1)\nprint(sum(b[:k]))"}, "452": {"problem_id": 452, "answer": "n,p,q = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(q):\n  a[i]+=1\nprint(\"YES\")\n"}, "453": {"problem_id": 453, "answer": "def f(s):\n  return s[::-1] if s.startswith('-') else s\nfor _ in range(int(input())) :\n a, b, c = map(str, input().split())\n if a == '+' or b== '-' : print(c)\n elif c == 1 or (c == -1 or a[c] == b[a.find('-') + 1]): print('impossible')"}, "454": {"problem_id": 454, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()"}, "455": {"problem_id": 455, "answer": ""}, "456": {"problem_id": 456, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(len(s)):\n\tif s[i] == '*': cnt += 1\nif n == 1: print('***')\nprint('*')"}, "457": {"problem_id": 457, "answer": "import math\nn = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append(a[i] % 1000000007)\nc = [0] * (10 ** 9) + [b[-1] for i, x in enumerate(b) if x % 10 == 0]\nans = 0\ni = n - 1\nwhile(i >= 0 and b[0][i + 1] <= b.index(max(c))::i)!= 0: i += n\nprint(ans)"}, "458": {"problem_id": 458, "answer": "a,b,c=map(int,input().split())\nprint(a+b+c)"}, "459": {"problem_id": 459, "answer": "a = list(map(int,input().split()))\nn = int(a[0])\nfor i in range(1,n+1):\n\tif a[i]%2!=0:print(\"YES\")\nprint((\"\"))\n"}, "460": {"problem_id": 460, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nimport math,string,itertools,collections,heapq,bisect,deque,fractions,math.inf,random,time,copy,socketfish,socketserver,vhost,inet,str,getitem,IO,Printing\ntry:pass\nexcept Exception as e:return 1\n"}, "461": {"problem_id": 461, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * (n+1)\nfor i in range(n):\n\ta[i] += (b[-1] - b[0]) * i\nans = min(a) + max(b) * 2\nprint(ans)"}, "462": {"problem_id": 462, "answer": "x, y = list(map(int, input().split()))\nn = len(x)\nfor i in range(n-1):\n\ty[i] = min(y.pop(i), x[:i+1])\nprint(max(0, n-2))"}, "463": {"problem_id": 463, "answer": "n, x = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n\ta[i] += x\nans = 0\ni = n\nwhile(i > 0 and i < n - 1 and (i & 1 == 0)):\n\n\tans += a[n - i // 2]\nprint(ans)\n\n"}, "464": {"problem_id": 464, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nfrom collections import deque,defaultdict,Counter,OrderedDict,deque\nn = int(input())\nl = list(map(int,input().split()))\nans = []\nfor i in range(n):\n\ts = input() + '*' + l[i]\nif len(set(l)) == 1 and s[-1] == '.': ans.append('YES')\nprint('NO')"}, "465": {"problem_id": 465, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] = b[n-i-1] + i\nans = [\"YES\"]\nwhile(len(ans)>0 and ans[0].count(\"1\")==b.count(a.pop()), ans.append(\"NO\")) :\n   print(\"YES\")"}, "466": {"problem_id": 466, "answer": "c,d = list(map(int,input().split()))\nn,m = (c+d+1)//2,(c-d)\na = [0]*n\nfor i in range(n-1,0,-1):\n\ta[i] = min(a) + i\nans = a[:n]\nprint(ans)\n\n"}, "467": {"problem_id": 467, "answer": "s = input()\nfor i in range(0, len(s) - 1):\n if s[i] == \"A\":\n  print(i + 1, i + 2, 13)\n else: print(\"impossible\")"}, "468": {"problem_id": 468, "answer": "import sys\ninput = sys.stdin.readline\ndef input():\n\treturn '\\n'.join(map(int, input().split()))\nn = int(input())\na = [0]*(n+1)\nfor i in range(1, n+2, 2):\n  a[i] += 1\nans = 0\nwhile(a[-1]>=0 and i<n-2 and ans<=10**9):\n\n  ans += 10**(9-i)**0.5\nprint(ans)"}, "469": {"problem_id": 469, "answer": "n = int(input())\nl = []\nfor i in range(n):\n  l.append(list(map(int,input().split())))\nprint(max(l))"}, "470": {"problem_id": 470, "answer": "t = int(input())\nfor i in range(t):\n\tc = list(map(int, input().split()))[:5]\n\n\tn = c.count(c[0]) + c[1]\n  \tif n % 2 == 0: print(n)\n"}, "471": {"problem_id": 471, "answer": "n, a = map(int, input().split())\nx = [int(x[i]) for i in range(n)]\ny = [-1 for x in x]\nprint(a + y[0])\n"}, "472": {"problem_id": 472, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "473": {"problem_id": 473, "answer": "s = input()\nt = int(s)\nif s[0] == '0':\n\tprint(t)"}, "474": {"problem_id": 474, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nans = []\nfor i in range(n):\n\ta[i] = a[n-i-1]*(1/i)\nprint(max(ans))"}, "475": {"problem_id": 475, "answer": "n, m, k = list(map(int, input().split()))\nl = [0] * k\nfor i in range(k):\n\tl[i] += 1 if i % 2 == 0 else l[(i + k) % k]\nprint(sum(l))\n\n"}, "476": {"problem_id": 476, "answer": "n = int(input())\nprint(n)"}, "477": {"problem_id": 477, "answer": "import sys\ninput = sys.stdin.readline\nN, M = list(map(int, input().split()))\ns = [0] * N\nfor i in range(M): s[i] = int(input())\nprint(N)\n"}, "478": {"problem_id": 478, "answer": "s = input()\nl = len(s)\na = []\nfor i in range(l):\n\tif s[i] == 'a' and l - i - 1 >= 0 and (i + 1) * (l -i - 2) <= a[a.count('a')] + l and i + 2 * l <= l-i: a = [s[:i]]\nprint(max(a))"}, "479": {"problem_id": 479, "answer": "n,k = list(map(int,input().split()))\na = [int(input()) for i in range(n+1)]\nq = 0\nfor x,y in zip(a,a[1:]):\n\tq+=y\nprint(q)\n"}, "480": {"problem_id": 480, "answer": "s,x,y=map(int,input().split())\nt=0\nfor i in range(y):\n  t+=abs(s-x)\nprint(t)"}, "481": {"problem_id": 481, "answer": "n,x=list(map(int,input().split()))\nc=0\nfor i in range(1,n+1):\n if x%i==0:c+=1\nprint(c)\n"}, "482": {"problem_id": 482, "answer": "n = int(input())\nk = input()\nl = len(set(map(int, input().split())))\ns = 0\nfor i in range(l-1):\n  if i % 2 == 0: s += 1\nprint(s)\n"}, "483": {"problem_id": 483, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n):\n  s[i + n - 1] = i + (n - i)\nprint(len(s))"}, "484": {"problem_id": 484, "answer": "n,a,b = list(map(int,input().split()))\nx,y = [],[]\nfor i in range(n):\n x[i] = i\n y.append(i+1)\ny.sort()\ni,j = 0,0\nwhile j<len(y) and y[j]<i:i+=1\nj+=2\nprint(max(0,i-j-1))\n\n"}, "485": {"problem_id": 485, "answer": "from sys import stdin,stdout,setrecursionlimit\nn = int(stdin.readline())\na = [int(x) for x in range(n)]\nans = []\nfor x,y in zip(a,a[1:]):\n  ans.append(y-x+1)\nprint(*ans)"}, "486": {"problem_id": 486, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint(max(a))"}, "487": {"problem_id": 487, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "488": {"problem_id": 488, "answer": "from sys import stdin,stdout,setrecursionlimit\ninput=stdin.readline\nn=int(input())\npoints=list(map(int,input().split()))\nfor i in range(n):\n\tpoints[i]+=1\nprint(sum(points))"}, "489": {"problem_id": 489, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n  a[i] = sum(x*y for x,y in zip(a[::2], a) if x > y)\nprint(sum(s))"}, "490": {"problem_id": 490, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(a[0])"}, "491": {"problem_id": 491, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a[0])"}, "492": {"problem_id": 492, "answer": "s = input()\nn = len(s)\nif s[n-1] == '<':\n  s = s.replace('<','').replace(',', '') + s\nprint('cwlw')\n"}, "493": {"problem_id": 493, "answer": "n = int(input())\ns = input()\nl = len(s)\nans = 0\nfor i in range(l):\n\tif s[i] == 'R': ans += 1\nprint(ans)"}, "494": {"problem_id": 494, "answer": "# cook your dish here\nN, M = list(map(int, input().split()))\ns = []\nfor i in range(N):\n  if s[i] == 1: s.append(i)\nif len(set(s)) == M: print('-', end=' ')\n\n"}, "495": {"problem_id": 495, "answer": "a, k = map(int, input().split())\nprint(a + k)"}, "496": {"problem_id": 496, "answer": "from sys import stdin,stdout\ninput = lambda:stdin.readline().rstrip('\\r\\n')\ns = input()\nn = len(s)\nprint(n)"}, "497": {"problem_id": 497, "answer": "n = int(input())\nc = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n\ts += c[i]\nprint(s)"}, "498": {"problem_id": 498, "answer": "n,m,k = list(map(int,input().split()))\nl = []\nfor i in range(1,n+1):\n\tl.append(k*(m-i-1)//2)\nprint(l)"}, "499": {"problem_id": 499, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(n):\n\tif s[i] == 'RB': cnt += 1\nprint('G')"}, "500": {"problem_id": 500, "answer": "n = int(input())\na = [list(map(int, input().split())) for i in range(n)]\ns = [[0] * (n + 1) for _ in [0, 1]]\nfor i, (u, v) in enumerate(zip(a, a[1:]))[:-1]:\n  s[u][v] = i\nans = 'NO'\nprint(ans)"}, "501": {"problem_id": 501, "answer": "l, r = list(map(int, input().split()))\ns = 0\nfor i in range(l):\n  s += i%2\nprint(s)\n"}, "502": {"problem_id": 502, "answer": "from math import sqrt\na = int(input())\nb = list(map(int, input().split()))\nc = []\nfor i in range(a):\n\tx, y, z = i, i + a[i] - i[0], 0, -i[1]\n\n\tc.append((abs(x - y), abs(z - z)) * (y > z) + (x < 0), (z > 0) * y * z + z * x)\nprint('Yes')\n"}, "503": {"problem_id": 503, "answer": "n,k = map(int,input().split())\na = [int(i) for i in input()]\nb = [-1]*(n+1)\nc = []\nfor i,j in zip(a,b):\n  if i==n:c.append(j)c[-1]-=1"}, "504": {"problem_id": 504, "answer": "n,a,b = list(map(int,input().split()))\nd = [0]*n\nfor i in range(n):\n\td[i+1]+=a\nprint(max(d))"}, "505": {"problem_id": 505, "answer": "n,m,k = list(map(int,input().split()))\nl = []\nfor i in range(1,n+1):\n\tl.append(input())\nc = 0\na = [0]*(m+n)\nwhile(len(l)>0 and l[a[-1]]==l[c]):c+=1\nprint(c)"}, "506": {"problem_id": 506, "answer": "a,b = list(map(int,input().split()))\nprint(a-b)"}, "507": {"problem_id": 507, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nb = [-1] * (n + 1)\nfor i in range(n):\n\ta[i] = a.pop(0) + b[n-i-1];\n#print(a,b)"}, "508": {"problem_id": 508, "answer": "# cook your dish here\nn, a = list(map(int, input().split()))\ns = [0]*180\nfor i in range(n):\n  s[i] = (s[n-i-1] + a) % 180\nprint(s)\n"}, "509": {"problem_id": 509, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nans = []\nfor i in range(n):\n  if a[i] == 0: a.append(i)\nprint('YES' if ans else 'NO')"}, "510": {"problem_id": 510, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque, defaultdict, Counter, OrderedDict, namedtuple, list, to_int, float, numpy\nn = int(input())\na,b,c,d = [int(x) for x in input().split()]\ns = sum(a)\nfor i in range(n):\n  s = min(s, a[i] + b[-i-1])\nans = s // d\nprint(ans)"}, "511": {"problem_id": 511, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i] = b[n-i-1] + 1\nprint('\\n'.join(b))"}, "512": {"problem_id": 512, "answer": "n = int(input())\na,b = list(map(int,input().split()))\nc = [0]*(2*n+1)\nfor i in range(1,n):\n  if a[i] == b[2] and c[(i+2)*(n-i)] == 1:   print(\"Yes\")\nelse:print(\"No\")"}, "513": {"problem_id": 513, "answer": "def gcd(a, b):\n if a == 0: \n  return b\n elif b == 1: return a\n else: a,b = b,a%b\n s = set(map(int,input().split(' ')))\n print(''.join(s))"}, "514": {"problem_id": 514, "answer": "# cook your dish here\nt = int(input())\nfor _ in range(t):\n   n, d = [int(x) for x in input().split()], 10**9+7\n\tprint(\"YES\" if d%n else \"NO\")"}, "515": {"problem_id": 515, "answer": "n = int(input())\nl = [0] + list(map(int, input().split()))\nfor i in range(1, len(l) - 1, 2):\n  if l[i] == 0: l.pop(i)\nprint(-1)"}, "516": {"problem_id": 516, "answer": "n, m = list(map(int, input().split()))\na = []\nfor i in range(n):\n\tif a[i] == '?': a.append(i)\ns = input()\nt = int(s[0])\ni = 0\nwhile i < len(a) - 1 and i + 1 < m: i += 1\nif i == 0: break\nprint(len(t))"}, "517": {"problem_id": 517, "answer": "n,d,h = list(map(int,input().split()))\ns = []\nfor i in range(1,n+1):\n\ts.append(h-i)\nprint(*s)"}, "518": {"problem_id": 518, "answer": "n, r = list(map(int, input().split()))\na = []\nfor i in range(n):\n a.append(i)\nr = r - a[-1]\nprint(r)"}, "519": {"problem_id": 519, "answer": "l = int(input())\nfor i in range(l):\n\tx, y = list(map(int, input().split()))\n\n\ts = max(0, x - y)\n#\tprint('s:', s, 'y:')\nprint(s)"}, "520": {"problem_id": 520, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a))"}, "521": {"problem_id": 521, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(n):\n\tif s[i] == \"C\" and cnt == n-i+1 or s.find(\"?\") == -1 and i + 1 + n - i - 1 == s and (s.rjust(\"M\" or \"Y\"))[-1][1]!= \"?\" or i+2+n - (n-2) -(i + 2) +n!= s:\n\n\t\tprint(\"Yes\")\n"}, "522": {"problem_id": 522, "answer": "n, f, c = map(int, input().split())\nmod = 10**9 +7\nfor x in range(4, n):\n\tf[x] *= (x - 1) // 2\nans = f[n] % mod\nprint(ans)"}, "523": {"problem_id": 523, "answer": "n, m = list(map(int, input().split()))\ns = input()\na = [0] * m\nfor i in range(n - 1, 0, -1):\n  if s[i] == 'a' and a[-1] <= i: a.append(i)\nprint(''.join(s))"}, "524": {"problem_id": 524, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += min(a[i]*i, ans)\nprint(ans)"}, "525": {"problem_id": 525, "answer": "for _ in range(int(input())):\n\tn, k = list(map( int, input().split() ) )\n\n\ts = sum( a[i] for i, a in enumerate(a[:n] + [k] * (n - i) for k in [2] ) if k[0] == 1 )\n \tprint( s )"}, "526": {"problem_id": 526, "answer": "from sys import stdin, stdout\ninput=stdin.readlines()\nfor i in range(int(input())):\n   m,n=list(map( int,input().split()))\n\ta=[[0]*(n+1) for i,x in enumerate(sorted(x) ) if x%n==0 ] for x in a]\n"}, "527": {"problem_id": 527, "answer": "#!/usr/bin/env python3\nfrom collections import Counter, defaultdict, deque,OrderedDict\nimport heapq as hq, bisect as bs, heappop, copy, itertools, starmap, ix64,os,time, uni, re, heapify, timep, accumulate, numpy, math, ascii_uppercase, importins, atexit, callable, all, filter, bezier, fibonacci, digit, hex, floord, lzma, mlca, mco, monotonic, neg, xor, truediv, zip, ceil, floor, large, mod, pow, qrt, truncate\nsys.setrecursionlimit(pow(10,9))\ninput = lambda: sys.stdin.readline().rstrip()\ndef solve():\n  s,t=list(map(int,input().split()))\n\n  for i in range(len(s)-1,0,-1) :   # (s[i-1] + t[0]) <= s[-i+1]-t[1], -i <= len(t) - i, i > 0 and i is 0, 0 <= i < 100000 and 1 <= t.length == 0\n"}, "528": {"problem_id": 528, "answer": "n, m = list(map(int, input().split()))\na, b = 0, 0\nfor i in range(m):\n\tx, y, z = [int(x) for x in input()] if x == '1' and y == 1 and z == 2 else 'NO', 'YES'\n\n\tif a + b <= n: a += b\nelse: b += a\n"}, "529": {"problem_id": 529, "answer": "# cook your dish here\nfrom collections import Counter\nn = input()\na = Counter(n)\nprint(a[1])"}, "530": {"problem_id": 530, "answer": "n = int(input())\ns = input()\na = [0]*n\nfor i in range(n):\n\ts[i] = '1'*(i+1)\nl = [-1] * n\nr = 0\nif s[n] == '0': l.append(l[r-1])\nelse: r += 1\nprint('First' if r > 0 else 'Draw')"}, "531": {"problem_id": 531, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += a[i]\nprint(ans)"}, "532": {"problem_id": 532, "answer": "from sys import stdin, stdout\ninput=stdin.readline\ns=input()\nprint(s)"}, "533": {"problem_id": 533, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\na = list(map(int, input().split()))\nk = 0\nfor i in range(n):\n\tif a[i] == 1: k += 1\nprint(k)"}, "534": {"problem_id": 534, "answer": "n,t = list(map(int,input().split()))\ns = input()\na = [0]*(t+1)\nfor i in range(n-1,0,-1):\n\tif s[i]==\"B\":\n \t\ta[-2]+=1\nprint(\"\".join(a))"}, "535": {"problem_id": 535, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n+1)\nfor i in range(k):\n\ta[i] = a[(i+k-2)%n]\np = 0\nq = 10**9 + 7\ni = n-k\nwhile i>0 and p<=n and q>=0:\n\n\tif p%2 == 0 and (p+q) not in a or (q+p*(q-p)**0.5 == p*((p-q)/2)) and k%(p//2 + q*p**2 - q%p - 1) < 0: p+=1\n \telse: q+=p\nprint(max(a))"}, "536": {"problem_id": 536, "answer": "n, m = list(map(int, input().split(' ')))\ns = [0] * (n + 1)\nfor i in range(n):\n  if s[i] == m - 1: s.append(i+1)\n\n  else: break\nprint(\"\".join(s))\n"}, "537": {"problem_id": 537, "answer": "n,k = list(map(int,input().split(' ')))\nl = [0]*n\nfor i in range(1,n+1):\n\tl.append(l[i-1]+i)\nprint('\\n'.join([str(x) for x in l]))"}, "538": {"problem_id": 538, "answer": "n = int(input())\na = list(map(int, input().split()))\nif a[0] == '1':\n print('YES')\nelse: print(\"NO\")"}, "539": {"problem_id": 539, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nc = n\nfor i in range(1,n):\n\tb[a[i]] = b[c] + i\nprint(b)"}, "540": {"problem_id": 540, "answer": "n,m = list(map(int,input().split()))\nr = [0]*n\nfor i in range(n):r[i+1]+=1\nprint('YES' if r[n-1-i]!=0 else 'No')\n"}, "541": {"problem_id": 541, "answer": "n, m = map(int, input().split())\nl = []\nfor i in range(n):\n  if l[i][0] < m: l.append(m)\nprint(len(l))"}, "542": {"problem_id": 542, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\ta[i] = b.append(i+1)\nprint('\\n'.join(a))"}, "543": {"problem_id": 543, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n\ta[i] = [int(x) for x in input()]\nans = []\nwhile a[-1][0] < n:\n\n\tans.append(a.pop(0) + cnt)\n#print(ans)"}, "544": {"problem_id": 544, "answer": "def check(s,i,n,k):\n if i==n: return True\n elif s[i]!=s[n-i-1]: return False\n else: \n  if k%2==k%4: print(\"YES\",\"NO\",\"YES\")\n\n  k=k//2+4*(k-2)//k*((k+1)%3) + k*k/2 + 4*int(n**(1/k))*2*3*4/5*5/6*7/8*9/10*11*12*13*14*15*16*17*18*19*20*21*22*23*24*25*26*27*28*29*30*31*32*33*34*35*36*37*38*39*40*41*44*46*47*48*49*50*54*55*56*57*58*59*60*61*64*67*68*69*71*72*73*74*76*77*78*79*84*86*87*88*89*90*91*94*95*96*97*99*100*101*103*105*106*107*108*109*110*111*112*113*114*115*116*117*120*121*122*123*124*125*126*127*128*129*131*132*133*134*135*136*137*138*144*145*146*148*149*151*153*154*155*156*157*160*161*163*164*165*166*167*168*173*174*175*176*178*184*186*188*189*191*193*194*195*196*197*198*199*211*212*223*224*233*244*246*247*248*249*251*254*257*260*263*269*274*282*283*293*307*311*312*313*314* 314* 315* 316* 320* 324* 326* 325* 327* 328* 330* 331* 336* 337* 338* 340* 341* 347* 348* 349* 354* 355* 356*367*373*376*377*378*379*380*383*384*389*391*392*397*398*494*509*601*603*502*604*606*607*609*611 *612 *1313 *1414 *1515 *1616 *1717 *1818 *1919 *2424 *2525 *2626 *2727 *2828 *2929 *3230 *3331 *3432 *3533 *3634 *3736 *3936 $11111 $12113 $1415 $1617 $1823 $1924 $2025 $2313 $211 $228 $233 $268 $279 $281 $284 $293 $308 $305 $317 $339 $343$345*346*347*348*349*353*359*361*362*363*371*enegger*\n"}, "545": {"problem_id": 545, "answer": "n, t = list(map(int, input().split()))\ns = input()\nfor i in range(n):\n  if s[i] in 'abcdefghijklmnopqrstuvwxyz': s = ''.join(c for c in s if c!='')\nprint(' '.join('0' * (n - i) // 2) + '\\n')"}, "546": {"problem_id": 546, "answer": "s = input()\nq = []\nfor i in range(len(s)):\n\tif s[i] == '*': q.append(i)\nprint('YES' if q else 'NO')"}, "547": {"problem_id": 547, "answer": "n,k = list(map(int,input().split()))\nl = []\nfor i in range(n):\n\tl.append(input())\nif len(l)%2==0:l=l[::-1]\nprint(1)\n"}, "548": {"problem_id": 548, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n):\n  if a[i]%2==0:l.append(i)\nprint('First')"}, "549": {"problem_id": 549, "answer": "n = int(input())\na = []\nfor i in range(n):\n\ta.append(list(map(int,input().split())))\nprint(a[0])"}, "550": {"problem_id": 550, "answer": "s = input()\nn = len(s)\nl = []\nfor i in range(n):\n\tl.append(input()[i])\np = [0] * (n + 1)\n\n\tif l[p[-1]].upper() == '0' and p[0].islower(): p = '_'\nif n % 2 == 0: print('Yes')\nprint('No')"}, "551": {"problem_id": 551, "answer": "from collections import deque\nn = int(input())\npoints = list(map(int, input().split()))\nx = [0] * (n + 1)\nfor i in range(n):\n  x[i] = i\ny = [-1] + points[x[0]]\ns = sorted(x, key=lambda p: p[1])\nprint('No\\nYes')\n"}, "552": {"problem_id": 552, "answer": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\ns = []\nfor _ in range(n):\n\ta, b, s = [int(x) for x in input()]\n\n\tif a[b[0]] == s[-1]:\n \t\ts.append(a.pop(0))\nif m == 1 and len(s) == m: print(1)"}, "553": {"problem_id": 553, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n  b.append(a[i]*6)\nprint(sum(b))"}, "554": {"problem_id": 554, "answer": "n,m = list(map(int,input().split()))\nl = []\nfor i in range(m):\n\tl.append([int(x) for x in input()])\nans = [0]*(n+1)\n#print(l,ans,l[0][1] + l[1][0])\n\n"}, "555": {"problem_id": 555, "answer": "n = int(input())\nx = 1\nfor i in range(n):\n  x = x * i\nprint(x)"}, "556": {"problem_id": 556, "answer": "l,r,k=map(int,input().split())\nans=[]\nfor i in range(l):\n\tans.append(str(i))\nprint(*ans)"}, "557": {"problem_id": 557, "answer": "n, m = list(map(int, input().split()))\nd = [[0] * m for _ in range(n + 1)]\nfor x, y in zip(input(), input()):\n  d[x][y] = 1 if x == 0 or y == m else 0\nprint(\"YES\")\n"}, "558": {"problem_id": 558, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\nk = int(input())\ncnt = [0]*(n+1)\nfor i in range(m):\n  if cnt[i]==0 and k!=n-i-1 and i%2==1:   print(i*k, end=' ') \n"}, "559": {"problem_id": 559, "answer": "from itertools import permutations\nimport sys\nsys.setrecursionlimit(10**6)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\ndef solve():\n  n = len(input())\n\n  dp = [[0]*(n+2) for _ in range(2*n + 2)]  # \u8868\u793a\u7b2c\u4e00\u4e2a\u6570\u7ec4\uff0c\u53ef\u4ee5\u8bb0\u5f55\u81ea\u5df1\u7684\u957f\u5ea6\uff64\u8d77\u59cb\u503c\u4e3a0 \u4f4d\u7f6e\u6700\u5c0f\u7684\u4e24\u79cd\u65b9\u5411\n# \u5c06\u5dee\u5f02\u6392\u5e8f\u4f18\u5316, \u8fd9\u6837\u9700\u8981\u786e\u5b9a\u540e\u9762\u7684\u8ddd\u79bb\u7ffb\u8303\u56f4\u5185\u7684\u6578\u7cd5, \u5f53\u524d\u51e0\u70b9\u4e0d\u80fd\u8d85\u65f6, \u627e\u5230\u5904\u7406\u6307\u9488, \u7ee7\u7e41\u6b87\u7684\u60c5\u51b5\u4e0b\u53ea\u6709\u591a\u5c11\u90e8\u5206\u7684\u66f4\u65b0, \u90a3\u4e48\u8bf4\u660e\u5c06\u4f1a\u88ab\u7a7a\u95f4, \u590d\u6742\u6027\u89e3\u51b3\u65b9\u6848\u7684\u7b49\u7c7b, \u6700\u9664\u4e00\u6b21\u5199\u6210\u52a0\u9000\u51fa, \u4e0d\u7b97\u6bd4\u8f83\u91cd\u590d\ndp[0][1] = (1 + 0) * (n-0.5) + (pow(p, 2))\nfor i, d in enumerate(dp, 1): print(' '.join(map(str, i)))"}, "560": {"problem_id": 560, "answer": "r,c = map(int,input().split())\nl = []\nfor i in range(r):\n  l.append(list(input()))\nprint(max(l))"}, "561": {"problem_id": 561, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n\ts[a[i]-1] += 1\nprint(*s)\n"}, "562": {"problem_id": 562, "answer": "n = int(input())\nl, r = 0, 0\nfor i in range(n):\n  l += 1 if (l[0] - l[1]) % 2 == 0 else 1\nprint('YES')\n"}, "563": {"problem_id": 563, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nl,r=list(map(int,input().split()))\nc=0\nfor i in range(len(l)):\n\tif l[i]%3==0 and c<=r:c+=2\nprint(c)\n"}, "564": {"problem_id": 564, "answer": "n, s = list(map(int, input().split()))\na = []\nfor i in range(n):\n  a.append(input())\nprint(\"YES\") if a[-1] == 0 else print(\"NO\")\n"}, "565": {"problem_id": 565, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nr = 0\nfor i in range(n):\n\tb[i] = b[n-i-1] + 1\nans = n - (n - 1)\nprint(ans)"}, "566": {"problem_id": 566, "answer": "R = lambda: map(int, input().split())\ng, B = R()\nfor i in range(0, len(R())):\n  if R[i] % B == 0: g.append(i)\nprint(g)"}, "567": {"problem_id": 567, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n - a[0])"}, "568": {"problem_id": 568, "answer": "n = int(input())\ng = [0] * 3\nfor i in range(n):\n  g[i] = list(map(int, input().split())) + [i % 3]\nans = 0\nwhile(len(g) == 3): g.pop()\nprint(ans)"}, "569": {"problem_id": 569, "answer": "n = int(input())\ns = input()\nprint(n)\n"}, "570": {"problem_id": 570, "answer": "# cook your dish here\na,b=map(int,input().split())\nprint(\"{0:b}\".format(a+b-1))"}, "571": {"problem_id": 571, "answer": "s=input()\nfor i in range(len(s)):\n\tif s[i]=='(':s.pop(0)\nprint(''.join(map(str,s)))"}, "572": {"problem_id": 572, "answer": "n,k = map(int,input().split())\na = [0]*(n+1)\nfor _ in range(k):\n\ta[int(input())] += 1\nprint(len(a))"}, "573": {"problem_id": 573, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n  if a[i] == b[-1][0] and i not in b and b.count(i) == 2:b.append([i])\nprint(len(b))"}, "574": {"problem_id": 574, "answer": "from sys import stdin,stdout,setrecursionlimit\ninput=stdin.readline\nn=int(input())\nx=list(map(int,input().split()))\nc=0\nfor i in range(n):\n  x.append(x[-1]*(c+1-i)//2)\nr=x.pop()\nprint(r)"}, "575": {"problem_id": 575, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = []\nfor i in range(n-1):\n\ta[i] = a.pop(i+1)\nc = [0]*n\nwhile a[c[0]]!=0 and c[1]==0:\n\n\tc.append(0)\n\n \tfor j,i in enumerate(a) :\n#\t\tif i%2==1 and i>=8 and j%4==2 and (j-i)%3==3 and   j+i==8 :  print('YES',i,j,c)"}, "576": {"problem_id": 576, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tif a[i] % 2 == 0 and (a[-1] // 2) % 3 == 1: ans += 1\nprint(ans)\n"}, "577": {"problem_id": 577, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,k = list(map(int,input().split()))\na = [int(i) for i in input()]\nb = []\nfor _ in range(n):\n\ta[b[-1]-1] = b.pop(b.index(a.count(-1)))\nans = 0\nmaxi = float('inf')\nwhile(k>0 and a[k]!=0):\n\n\tif k%2==0:ans+=1;k=k//2;break\nprint(ans)\n"}, "578": {"problem_id": 578, "answer": "#dt = {} for i in x: dt[i] = d.get(i,0)+1\nimport sys;input = sys.stdin.readline\ninp,ip = lambda :int(input()),lambda :(\"\".join(map(str,input().split())))\nip()"}, "579": {"problem_id": 579, "answer": "import sys\ninput = sys.stdin.readline\nn,k = list(map(int,input().split()))\np = [int(input()) for i in range(n)]\nans = [-1]*(k+1)\nfor x,y in zip(p,p[1:]):ans[x+y] = y\nprint(max(ans))"}, "580": {"problem_id": 580, "answer": "n,m,s,t = list(map(int,input().split()))\na,b,l = [],[]\nfor i in range(m):\n\ta.append(list(input()),i)\nc,d,e,f = 0,0,1\np,q,r = 'NO',0\nwhile(len(c)>0):\n\n\tif c[0] == 'x' and a[c[1]-1][1]==b[d-1]+l[r-c] and p[p[q][c]]=='Y':\n \t\tc.pop(p.index('x')+1)\t# (x) - (y) + (z) = n - m - d - 1 - q - r - l - c - e - f\n#\tl.insert(i,a[i][0])\nprint('\\n'.join(l))\n\n"}, "581": {"problem_id": 581, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*(n+1)\nfor i in range(1, n + 1):\n  a[i] = s[-1] + i\n# print(a[:n])\nprint(max(s))"}, "582": {"problem_id": 582, "answer": "n = int(input())\na = list(map(int, input().split()))\nt = [0]*n\nfor i in range(n):\n  t[a[i]]+=1\nans = min(t)\nprint(ans)"}, "583": {"problem_id": 583, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n  if a[i]=='(' and b[len(a)-1-i-1] == ')' and (i+1)%2 == 0: b.append(i)\nprint(''.join(b))"}, "584": {"problem_id": 584, "answer": "n = int(input())\ns = input()\nl = [0]*n\nfor i in range(n):\n  l[i] = len(s)-i\nprint(0, '\\n'.join(l))"}, "585": {"problem_id": 585, "answer": "n,m=list(map(int,input().split()))\na=[int(i) for i in input().strip()]\nb=[0]*m\ni=1\nwhile i*(m-1)>0:\n\n\tj=i\n\tk=j+j-i-m\n\n \tif a[j]<=b[k]:\n#\t\tprint(j,k,a,b)\n"}, "586": {"problem_id": 586, "answer": "import sys\ninput=lambda:sys.stdin.readline().rstrip()"}, "587": {"problem_id": 587, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nfrom collections import defaultdict, deque\nn, k = list(map(int, input().split()))\na = [0] * n\nfor i in range(n):\n  a[i+1] = i\n#print(a)\ns = a.pop()\ni = 0\nwhile(i<n-1 and i+k<len(s) and k>=2*i:i+=1):i += k\nprint(' '.join(str(x) for x in a))"}, "588": {"problem_id": 588, "answer": "#!/usr/bin/env python\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nn = int(input())\nl = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n  x,y = l[i],l[n-i-1]\n\n  if x+y>s[0]:s.append(x+(y*x)**0.5) \nif n%2==0:print(0)"}, "589": {"problem_id": 589, "answer": "# cook your dish here\ns = input()\nn = len(s)\na = [0]*(n+1);a[n-1] = 1\nl = []\ni = 0\nwhile i < n:l.append(i);i+=1\nfor j in range(len(l)):\n\tif l[j] == '?':i-=1;j+=(1-l[i]);i=j\nprint(sum(a))\n"}, "590": {"problem_id": 590, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(min(a))"}, "591": {"problem_id": 591, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n  a[i] += 1\nprint(a[n])\n"}, "592": {"problem_id": 592, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(1, n):\n if (a[i] == a[n-i-1]): a.pop()\n else: print(0)\n"}, "593": {"problem_id": 593, "answer": "from sys import stdin,stdout\nimport math\nn,m = list(map(int,input().split()))\na = [0]*n\nfor i in range(m):\n  a[i] = int(stdin.readline())\nprint(a[n-1])"}, "594": {"problem_id": 594, "answer": "n,m = map(int,input().split())\na = [int(i) for i in input()]\nb = [-1]*n\nfor i,a in enumerate(a):b[i] = min(b)\nprint(-1)"}, "595": {"problem_id": 595, "answer": "n = int(input())\ns = 0\nfor i in range(n):\n  s += i\nprint(s)"}, "596": {"problem_id": 596, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(max(map(int,input().split())))"}, "597": {"problem_id": 597, "answer": "n, m = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n  d[i] = d.get(i, 0) + 1\nans = 0\nk = int(input())\nwhile k > 0:\n\n  if k % 2 == 0 and k / 2 in d: ans += 1; k = k // 2;\nprint(ans)\n"}, "598": {"problem_id": 598, "answer": "n,x=map(int,input().split())\nl=[]\nfor i in range(n):\n   l.append([int(input()),i+1]*3)\nprint(-1)"}, "599": {"problem_id": 599, "answer": "s = input()\nfor i in range(0, len(s)):\n\tif s[i] == 'k' and len([i-1, i+1] in [i,i+2] for i,j in zip(*s[:i]+[j:j])) == 1: print('NA')\n"}, "600": {"problem_id": 600, "answer": "#!/usr/bin/env pypy3 */\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import deque, defaultdict, Counter, OrderedDict,defaultdict2,deque2 import Queue,PriorityQueue\ndef input():\n\treturn input().rstrip()\na = int(input())\nb = [list(map(int,input().split())) for _ in range(a)]\nprint(len(b))\n"}, "601": {"problem_id": 601, "answer": "from sys import stdin,stdout\nfor _ in range(int(stdin.readline())):\n\tp,f = list(map( int, stdint.__import__('itertools').combinations( '*' * (len(list(str(p)))) )[::-1] ) )\n\n\tprint(max(f) + 1)"}, "602": {"problem_id": 602, "answer": "# cook your dish here\na=input()\nn=int(a)\nprint(\"\".join(map(str,n)))\n"}, "603": {"problem_id": 603, "answer": "r,g,b = list(map(int,input().split()))\nprint(max(r) + max(g))"}, "604": {"problem_id": 604, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(min(a))"}, "605": {"problem_id": 605, "answer": "a,b,c,d = list(map(int, input().split()))\nn = int(input())\nx = 0\nfor i in range(n):\n\tx += (b - c) * (d - 1)\nprint('M', end=' ')"}, "606": {"problem_id": 606, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nfrom heapq import heappush,heappop\nINF = float('inf')\nMOD = 10**9+7\ndef LI(): return list(map(int, input().split()[1:])).count(0)  # 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 196, 197, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 213, 214, 225, 226, 227, 229, 234, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 312, 313, 314, 317, 326, 329, 331, 336, 337, 347, 349, 353, 359, 366, 368, 370, 371, 373, 376, 379, 380, 383, 384, 389, 400, 401, 402, 405, 407, 408, 409, 416, 417, 425, 426, 429, 430, 432, 443, 445, 457,457,461,463,467,469,479,487,491,499,503,509,619,641,644,647,653,659,661,673,677,683,691,701,709,723,727,733,751,756,797,806,809,810,813,815,914,1128,953,1028,1141,1109,1227,1349,1307,1453,1537,1659,1771,1829,1961,2063,2208,2187,2243,2257]\nN = len(set(LI() for _ in input()))\nprint(N)"}, "607": {"problem_id": 607, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\n').split(' ')\nn, m = list(map(int, input().split()))\ns = []\nfor i in range(n): s.append([int(x) for x in input()])\nans = [0] * (m + 1)  + [s[n - 1][0]]\n#print(s,''.join([str(i) + ans[- 1]]))"}, "608": {"problem_id": 608, "answer": ""}, "609": {"problem_id": 609, "answer": "n = int(input())\nprint(\"YES\")\nfor i in range(n):\n\ts = input().replace('x','').replace(','','').split(' ')\n\n\tif s[0] == 'X' and len(s) > 1: print('NO')\n"}, "610": {"problem_id": 610, "answer": "n,m = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n  a[i+1]+=1\nb = []\nc = 0\nd = n*m\nwhile(d>0):\n\n  if(a[d-1]-b[0])%n==0:d=n-d;a.append(b.pop(0));c=c+d\nprint(c)\n"}, "611": {"problem_id": 611, "answer": "from math import ceil,sqrt,log2\nn,m=map(int,input().split())\na=[]\nfor i in range(0,n):\n\tx,d=int(input()),[0]*(n-i+1)//2\n\n\ta.append(x+d)\nans=sum(a)\n\n"}, "612": {"problem_id": 612, "answer": "n,k,p=list(map(int,input().split()))\ns=sorted(set(range(n)),key=lambda x:x[0])\nprint('YES' if len(s)%2==0 else 'NO')\n"}, "613": {"problem_id": 613, "answer": "n = int(input())\np = [0] + list(map(int,input().split()))\nm = 10**18\nd = {}\nfor i in range(n):\n   d[i] = d.get(i,0)%m\nprint(d[n])"}, "614": {"problem_id": 614, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 2)\nfor i in range(n - 1, 0, -1):\n\ta[i] = i + 1 if i % 2 else m - i\nprint(max(a))"}, "615": {"problem_id": 615, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0]*n\nfor i in range(n):\n  l[i] = min(l)\nprint(abs(a[l[-1]-1]))"}, "616": {"problem_id": 616, "answer": "from heapq import heappush,heappop\nn,m = map(int,input().split())\nl = []\nfor i in range(n):\n\tl.append([int(input()),i])\nheapify(l)"}, "617": {"problem_id": 617, "answer": "s = input()\nn = len(s)\na = 0\nfor i in range(n):\n\tif s[i] == \"+\": a += 1\nprint(a)"}, "618": {"problem_id": 618, "answer": "from bisect import *\ns = input()\nn = len(s)\nfor i in range(n):\n  s[i] = s.get(i, '|')\nprint(''.join(map(str, s)))"}, "619": {"problem_id": 619, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(1000000)\nfrom collections import deque, Counter, OrderedDict,defaultdict,deque\ndef dfs(x,y,z):\n\tif x==y: return z\n   if x>=0 and x<=y and y==z and z==0:return 0,0,x+y+z-1\ndfs(0,[])\nfor i in range(len(list(map(int,input().split()))),0,-1):print(' '.join(str(i) for j in list(input())))"}, "620": {"problem_id": 620, "answer": "from sys import stdin,stdout,setrecursionlimit\nimport math\nn = int(stdin.readline().strip())\nfor i in range(n):\n  x,y = list(map(int,input().split()))\n\n  if x[0] > y[1] and (x[2]-y[3] < 0) and ((x-y)**2 + (y-x) **2 > x) or ((y+x+1) - y - x + 1 < y)  : continue\n#   print(i)\n"}, "621": {"problem_id": 621, "answer": "n = int(input())\na = [int(x) for x in input().split()]\ns = []\nfor i in range(n-1):\n\ta[i] = s.append(i)\nprint(len(s))"}, "622": {"problem_id": 622, "answer": "n, k = list(map(int, input().split()))\ns = []\nfor i in range(k):\n  s.append(i)\nprint(len(s))"}, "623": {"problem_id": 623, "answer": "a,b=map(int,input().split())\nc=0\nfor i in range(b):\n  if a[i]%2==0:c+=1\nprint(c)"}, "624": {"problem_id": 624, "answer": "n, k, m = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n): a[i] += m\nprint(a[-1])"}, "625": {"problem_id": 625, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(\"\".join(a))"}, "626": {"problem_id": 626, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i] = b[n-i-1] + i\nprint(max(b))"}, "627": {"problem_id": 627, "answer": "n=int(input())\ns=input()\na=[]\nfor i in range(len(s)):\n\tif s[i] not in a and len(a)==i+1: a.append(i)\nprint('\\n'.join(map(str,a)))\n"}, "628": {"problem_id": 628, "answer": "n, k = list(map(int, input().split()))\na = [0]\nfor i in range(n):\n  a.append(a[-1] + i)\nk = int(input())\nprint(k)"}, "629": {"problem_id": 629, "answer": "n = int(input())\nfor i in range(n):\n\ta = list(map(int, input().split(' ')))\n\n\tb = [0] * (n - 2)\n\n \tfor j, v in enumerate(a): b[j+1] = max(b[:j] + v, 0, j)\n# print b\nprint(len(list(range(1,n-1))))"}, "630": {"problem_id": 630, "answer": "n,k = list(map(int,input().split()))\na = [0]*(n+1)\nfor _ in range(k):a[k-1] = int(input())\nprint(len(a))"}, "631": {"problem_id": 631, "answer": "for _ in range(int(input())):\n\tn, m = list(map( int, input().split() ) )\n\n\ta = [ int(i) for i in input() ] if m > 0 else 0\n\n \tif n == m: print(\"YES\")\n  \n"}, "632": {"problem_id": 632, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\na = list(map(int,input().split()))\nans = []\nfor i in range(0,n):\n\tans.append(sum(a[i:i+a.index(max(ans[-1]))] for a in ans[:-1:]])\nprint(*ans)"}, "633": {"problem_id": 633, "answer": "from collections import defaultdict\nn,m = list(map(int,input().split()))\nedges = [[] for _ in range(n)]\nfor i,v in enumerate(list(range(1,n+1))):\n  if v[i-1] not in edges: edges[v].append([v[0],i])\ndef gcd(a,b):return g(b,a) if a == b else 0\nans = [0]*(m+2)\nwhile len(set(ans))>0: ans.append(2*ans[-2] + 1) \nprint('\\n'.join([str(x) for x in ans]))"}, "634": {"problem_id": 634, "answer": "r = list(map(int,input().split()))\nn = int(input())\ngrid = [[] for i in range(n+1)]\nfor i,j in enumerate(r):\n  grid[i].append(j)\nans = [0]*n\ndef dfs(grid,i,c,n,visited,ans[0]) :\n if (i == n-1 or c == 0) : continue\n ans[1] = 0\n for (x,y,z) in grid : vis[x][y]+=1\n return ans\ndfs(0,1,0,[0,-1])\n"}, "635": {"problem_id": 635, "answer": "n, s = list(map(int, input().split()))\na = [0]\nb = []\nfor i in range(n):\n\ta.append(a[-1] + b[i - 1])\n# a.sort(reverse=True)\nc = a[n - 2] if b.count(0) > c else 0\nprint('YES' if c > 0 else 'NO')\n"}, "636": {"problem_id": 636, "answer": "n,k = list(map(int,input().split()))\na = []\nfor i in range(1,n+1):\n  a.append([int(input()),i-1]*k)\nprint(max(a))"}, "637": {"problem_id": 637, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n\ts.append(a[i]*(i+1)//2)\nprint('\\n'.join(s))"}, "638": {"problem_id": 638, "answer": "n, m = list(map(int, input().split()))\nt = [0] * m\nfor i in range(1, n):\n  t[i] = 1\nans = 0\nwhile(t[-1]!= 0): t.pop()\nprint(ans)\n"}, "639": {"problem_id": 639, "answer": "n, x = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  d[i] = min(d.get(i,0),i)\nprint(max(x))"}, "640": {"problem_id": 640, "answer": "a,b=map(int,input().split())\nc=0\nfor i in range(0,6):\n\tc+=a[i]\nif a[0]<b[-1]:\n \tprint(i+1)"}, "641": {"problem_id": 641, "answer": "#!/usr/bin/env python3\nfrom collections import deque\nimport math\nn = int(input())\na = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n  s += a[i]\nprint(s)\n"}, "642": {"problem_id": 642, "answer": "n, m = list(map(int, input().split()))\nl = [0] * m\nfor i in range(n):\n\tl[i] += 1\nif m % 2 == 0 and l[-1] < m: print(\"YES\")\nprint(\"\\n\")"}, "643": {"problem_id": 643, "answer": "t = int(input())\nfor i in range(t):\n x = list(map(int,input().split()))\n p,q,r = x[0],x[1],0,-1\n s = 0\n for j in x: \n  s += j * p // q\n print(s)"}, "644": {"problem_id": 644, "answer": "from sys import stdin,stdout\nimport math\nn = int(stdin.readline())\nl = list(map(int,input().split()))\ncnt = 0\na = [0]*(n+1)\nans = []\nwhile(len(ans)):\n\tfor i in range(l[1]-1,0,-1):\n\n\t\tif(a[i] == 'add' and i == l[0]) or (i == 0 and a[-i-2]=='add') or ans.append(i - 1) == ans[:l.index(max(-1,-i))] : cnt += 1\nprint('\\n'.join(str(x) for x in ans))"}, "645": {"problem_id": 645, "answer": "s = input()\nn = len(s)\nc = 0\nfor i in range(n):\n  if s[i] == \"e\":\n\tc += 1\nprint(c)"}, "646": {"problem_id": 646, "answer": "n=int(input())\na=list(map(int,input().split()))\nd=[[0]*(n+1) for i in range(a[0]+1)]\nfor i,x in enumerate(range(1,-1),1):\n  d[x][0]=i\nans=0\nt=min(d)\nwhile(t>0 and a[t]==0):t-=1 \nprint(ans)"}, "647": {"problem_id": 647, "answer": "def solve(n,l,r):\n if n==1: return l\n elif n%2==0: l.insert(0,0)\n else: r.append(l.pop())\nprint('\\n'.join(map(str, r)))"}, "648": {"problem_id": 648, "answer": "m, b = list(map(int, input().split()))\nl = []\nfor i in range(m):\n  l.append([int(x) for x in input()])\nprint(max(l))"}, "649": {"problem_id": 649, "answer": "n = int(input())\nt = [int(i) for i in input().split()]\nprint(t[0][0])"}, "650": {"problem_id": 650, "answer": "# cook your dish here\nn = int(input())\nl = []\nfor i in range(n):\n\tl.append(str(i))\nprint(\"YES\")"}, "651": {"problem_id": 651, "answer": "n,m=list(map(int,input().split()))\ns=input()\nc=0\nfor i in range(len(s)):\n if s[i]=='#':\n  if i==n-1 or i!=n:c+=1;break\n else:print(c)\n"}, "652": {"problem_id": 652, "answer": "n = int(input())\nfor i in range(n):\n  x, y = list(map(int, input().split()))\n\n  if (y[0] - x[1] == 0 and y[2]-x[3]!= 0) and (i - (n - 1) // 2) % 2 == 1:   print(i)\n"}, "653": {"problem_id": 653, "answer": "# cook your dish here\nn = int(input())\nevents = []\nfor _ in range(n):\n\tevents.append([int(x) for x in input().split()])\nprint('\\n'.join(events))"}, "654": {"problem_id": 654, "answer": "n = int(input())\na = [list(map(int, input().split())) for i in range(n)]\nprint(max(a))"}, "655": {"problem_id": 655, "answer": "n = int(input())\na = list(map(int,input().split()))\np = [0]*n\nfor i in range(n-1):\n\tp[a[i]-1]+=1\nans = []\nk = 0\nwhile k<len(a) and len(p)>0:\n\n\tif a[k]==0 and p[0]+k>=n: ans.append(k)\n \tk += 1\nprint(\"White\")"}, "656": {"problem_id": 656, "answer": "n, k = list(map(int, input().split()))\ntemp = [-1] * 20\nfor i in range(n):\n   temp[i] = (i + 1) % k\nprint(sum(temp))"}, "657": {"problem_id": 657, "answer": "# cook your dish here\nn = int(input())\na,b,c = list(map(int,input().split()))\nprint(n)\n"}, "658": {"problem_id": 658, "answer": "def main():\n\tn,w,v,u=list(map(int,input().split()))\n\n\tx=[int(i) for i in input().rstrip('\\n').split(' ')];y=[0]*n;x[0]=1;y[n-1]=0;z=[-10**9+7];q=1000000000;qp=2;c=0\n#\tprint(x,y,z,q,c)\nfrom sys import stdin,setrecursionlimit\ninput = lambda:stdin.readline().strip()\nfor _ in range(n):print((main())).stdout.flush()"}, "659": {"problem_id": 659, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sorted(a, reverse=True)\nif s[0] == 1 or len(s) % 2 == 0 or (s[s.index(0) - 1]!= 0) or s.count(1) == n: print(-1); return\nfor i in range(n):\n\tif (a[i] < a[(i + n) // 2]) or a.pop() == i: break\nprint(*a)"}, "660": {"problem_id": 660, "answer": "n,b,p=list(map(int,input().split()))\nc=0\nfor i in range(n-2,0,-1):\n\tc+=2*i\nprint(c)\n"}, "661": {"problem_id": 661, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom heapq import nsmallest, heapify,heappop,heapify_or_space\ndef solve(n,k,xor,arr):\n  if k==n: return 0\n\n  k-=1\n#  for num in arr: k=k-num+1  \nans=[]\nfor _ in range(int(input()))[:-1]:\n i=n-1-k\n if i==0: ans.append([])\n ans[i].append(i+2**k)\n\n #print(ans) \n\n print(' '.join(map(str,ans)))\n"}, "662": {"problem_id": 662, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nc = 0\nfor i in range(n):\n  if a[i] == 1: c += 1\nprint('YES')\n"}, "663": {"problem_id": 663, "answer": "r,x=map(int,input().split())\nn=r*r+x\nc=0\nfor i in range(n):\n\tif c==0 and i!=n-1 and (r-c+1)<0:c+=1;break\nprint(c)"}, "664": {"problem_id": 664, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  if a[i] > s:s+=i\nprint(s)\n"}, "665": {"problem_id": 665, "answer": "t = int(input())\nfor _ in range(t):\n\tn, s = list(map(int, input().split()))\n\n\tif s == n: print(0)"}, "666": {"problem_id": 666, "answer": "n = int(input())\ns = [int(x) for x in input().split()]\nprint(s[n-1])"}, "667": {"problem_id": 667, "answer": "# cook your dish here\nn = int(input())\ngraph = [[0]*(n+1) for _ in range(len(list(map(int, input().split()))) + 1)]\ndef dfs(graph, i, j):\n  if graph[i][j] == 0: return 0\n\n  return min(dfs([i,j]) for j,i in enumerate(range(i)) if i!= j)\nans = n - ans\nprint(ans)"}, "668": {"problem_id": 668, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] = max(b)\nprint(len(a))"}, "669": {"problem_id": 669, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n  a[i] += m\nprint(max(a))"}, "670": {"problem_id": 670, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nn = int(input())\na = [int(x) for x in input().split()]\nb = []\nfor i in range(n):\n  x,y,z = list(map(int,input().replace(\" \",\"\"))),[],0,0\nans = a[0]*(a[1]-y)+(b[-1]+z)//2\nif abs(ans)<=1e-7:print(\"0\")\nelse:a.append(0)"}, "671": {"problem_id": 671, "answer": "n = int(input())\ns = ''\nfor i in range(n):\n s += input()\nprint(s)"}, "672": {"problem_id": 672, "answer": "#!/usr/bin/env python3\nfrom decimal import Decimal, ROUND_HALF_UP, round, pow, ceil, sqrt, factorial as f\nimport math,string,itertools,heapq,collections,bisect,sys,math,random,time,copy,functools\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nINF = float(\"inf\")\nmod = 10**9+7\nMOD = 998244353\nfor _ in range(int(input())):\n\ta,b = list(map(str,input().split(' ')))\n\n\tif (a%2 == 0 and a%3!= 0) and (b % 2 == 1 or b % 3 == -1): print(\"-1\",str(a-b),round(round((a*b)/2,2)))\n"}, "673": {"problem_id": 673, "answer": "n,k = list(map(int,input().split()))\ns = 0\nfor i in range(1,n+1):\n  s += i\nprint(s)\n"}, "674": {"problem_id": 674, "answer": "n = int(input())\na = list(map(int,input().split()))\nd = {}\nfor i in range(n):\n  d[a[i]] = i\ncnt = 0\nans = [0]*n\nwhile(len(d)>0 and len(a)<=n-1):\n\n  if (a.count(c)==1) and (d[c]>=ans[0]+1 and a[d.pop(0)]) not in cnt:  \n\tans.append([c,c+1])\n#print(ans)\nprint(\" \".join(sorted(set(i))[1:]))\n\n"}, "675": {"problem_id": 675, "answer": "m,t,r = list(map(int,input().split()))\nl = []\nfor i in range(r):\n\tl.append([int(input()),i+1]*t)\nprint(min(l))"}, "676": {"problem_id": 676, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n\tl[i] = l.pop(0)\nif len(l) == 1:ans += 1\nprint(\"YES\")\n"}, "677": {"problem_id": 677, "answer": "q = int(input())\nfor _ in range(q):\n   a, b, c, d = map(int, input().split())\n\n  if a % b == 0 and a // b!= 0:  print(c)\n"}, "678": {"problem_id": 678, "answer": "n=int(input())\nx=list(map(int,input().split()))\nfor i in range(n):\n\tx[i]=(i+1)//2\nprint(\"%.8f\" % x[0])\n"}, "679": {"problem_id": 679, "answer": "s = input()\nfor i in range(0,len(s),2):\n\tif s[-1]=='A':s[0]+=1\nprint('Yes')\n"}, "680": {"problem_id": 680, "answer": "from math import sqrt\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(int(1e9))\nn = int(input())\nx = []\nfor i in range(n):\n  x.append([])\na, b, c = list(map(list, input().split()), 0)\nd = [[-1 for _ in x] for x in zip(*x)]\ncnt = [0] * (n + 2) * 3\nans = -float('inf')\nwhile a!= b or cnt[a]!= -1 or d[b][c] == 0: ans = min(ans, d.pop(d[d.index(b) + 1]) - 1)\n\n"}, "681": {"problem_id": 681, "answer": "n, m = list(map(int, input().split()))\nl = []\nfor i in range(m):\n  if l[i] == 0: l.append(i+1)\nif n <= m: print(n)\n\n"}, "682": {"problem_id": 682, "answer": "#!/usr/bin/env python3\nfrom itertools import combinations_with_replacement, zip_longest\nR = lambda: list(map(int, input().split()))\ndef __starting_point():\n\tn, m = R()\n\n\tfield = [[] for _ in range(n+1)]\n\n \tfor i, x in enumerate(field):\n   #field[i].append(x)\n##field.sort(key=lambda x: x[0])\nprint(R())\n"}, "683": {"problem_id": 683, "answer": "a = int(input())\nprint(a)"}, "684": {"problem_id": 684, "answer": "for _ in range(int(input())):\n\ta, b, c, d = list(map(float, input().split()))\n\n\tx, y, z = (a + b + c + d) * (d + 1) // 2, (x + y + z), (y + x + 2 * z) / 3\n \tprint(x * x * y)\n"}, "685": {"problem_id": 685, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nn,h=map(int,input().split())\nx=[]\nfor i in range(n):\n\tx.append([int(x[i]),i])\nans=0\ndef dfs(a,b,c,d,s,e,r,x,y,z,p,t,u,v,i,j,k):\n\n\tif a+b+c+d+s+e+r+x+y+z+p+t+u+v+i+j+k==0 and a!=b:ans+=max(ans,abs(p-t))\nif ans>=h:print(h)"}, "686": {"problem_id": 686, "answer": "t = int(input())\nfor i in range(t):\n  x, y = list(map(int, input().split()))\n\n  if (y > x) or (x < y) and ((y-x)%x == 0) == 1: print(\"NO\")\n"}, "687": {"problem_id": 687, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nstdout.write(str(input))"}, "688": {"problem_id": 688, "answer": "t = int(input())\nfor i in range(t):\n   a = list(map(int, input().strip().split()))[:len(str(a[0]))-1] + '0' + str(9)\nprint(2)"}, "689": {"problem_id": 689, "answer": "t = int(input())\nfor _ in range(t):\n  s = list(map(int, input().split(' ')))\n\n  if len(s) == 1 and s[0] == 'a' and all(len(i) > 1 for i in s) or s.count('a') == 0 or all(''.join(x) for x in zip(*s)) or len([i] in [0, 1])!= 1: print('NO')\n"}, "690": {"problem_id": 690, "answer": "n = int(input())\na = [0] + list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append(a[i] - b[-1])\nprint(''.join(b))"}, "691": {"problem_id": 691, "answer": "n,x=list(map(int,input().split()))\ns=[0]*n\nfor i in range(n):s[i]=x%i\nprint('NO')\n"}, "692": {"problem_id": 692, "answer": "N = int(input())\nM = [int(x) for x in input().split()]\nR = []\nfor i in range(N):\n\tM.append(0)\n#print(M,R)\n\n\tif (R[-1] == 0) and (M == [0] * (N - 1)) :\n  \t\tprint(\"{}\".format(i + 1), \"\".join(map(str, M)))\n"}, "693": {"problem_id": 693, "answer": "n,m = map(int,input().split())\na = []\nfor i in range(n):\n\ta.append([int(x) for x in a[i]])\nc = 0\nd = [0]*(m+n+1)//2\nwhile(len(d)>0 and d[-1]==0):d.pop()\nprint(c)"}, "694": {"problem_id": 694, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**6)"}, "695": {"problem_id": 695, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint(len(a))"}, "696": {"problem_id": 696, "answer": "p = int(input())\nfor i in range(p):\n  a = [int(x) for x in input().split()]\n\n  if a[0] % p == 0: print(a[1])\n"}, "697": {"problem_id": 697, "answer": "n, m = list(map(int, input().split()))\nl = [0] * (n + m + 1)\nfor i in range(n):\n\tl[i] = m % 10\np = 998244353\nans = []\nm = -1\ni = n\nwhile(i > 0 and m > 1 and l[m - 1]!= 0):\n\n\tif m == 1:\n\n \t\tans.append((p, i) * p) % (10 ** 9 + 10 ** 10 + 9 * m // (p + 2) + (i - m) // 2 * i + i * n + n * -(m % p)) % m\nprint(ans)\n\n"}, "698": {"problem_id": 698, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nn, k = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n\ts.add(input()[i])\n#print(s)\nt = [int(x) for x in input()]\nans = s.intersection(t) - t[0][0] - 1"}, "699": {"problem_id": 699, "answer": "n = int(input())\nx = list(map(int, input().split(' ')))\nprint(n)\n"}, "700": {"problem_id": 700, "answer": "n = int(input())\na = []\nfor i in range(n):\n  x, y = map(int, input().split())\n\n  a.append(x*y)\n#print(a)"}, "701": {"problem_id": 701, "answer": "s = input()\nt = str(input())\nfor i in range(0,len(s)):\n\tif s[i] == t[-i-1] and i!= len(t) - 1 or i>=0 and (t[0]==s[:i+1]) or (i==0 or t==str(i) or s==t.split(\" \")) and s == \"and\" and not (s.endswith(\"and\") or \" \") : t = \"\".join(map(str,t))"}, "702": {"problem_id": 702, "answer": "n = int(input())\nboard = list(map(int, input().split()))\ns = ''\nfor i in range(n):\n\tif board[i] == '.': s += '\\n'\nprint('YES')\n"}, "703": {"problem_id": 703, "answer": "k,a,b,v = list(map(int,input().split()))\nn = int(input())\nc = 0\nfor i in range(n):\n  if a % i == 0: c += 1\nprint(c)\n"}, "704": {"problem_id": 704, "answer": ""}, "705": {"problem_id": 705, "answer": "n = int(input())\nx = list(map(int, input().split()))\ny = [0]*n\nfor i in range(n):\n\tx[i] = str(i) + '0'\nans = 0\nwhile x[y[0]]!= y[1]:\n\n\ty.pop(0)\n \tans += len(y) // 2\nprint(ans)"}, "706": {"problem_id": 706, "answer": "A,B,n,x = map(int,input().split())\nn = int(n)**0.5\nX = 10**9+7 \ng = [0]*(B+n+1)\nfor i in range(1,len(X)):\n  g[X[i]-1] = i\nprint((g[B]))"}, "707": {"problem_id": 707, "answer": "n, m = list(map(int, input().split()))\np = [0]\nfor i in range(n):\n\tx = p[-1] + [int(input()) for input()]\n\n\tp.append(x)\n# print p\nprint(max(p))"}, "708": {"problem_id": 708, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\n')\nn,k = list(map(int,input().split()))\na,b,c,d=[],[]\nfor i in range(n-k+1):\n\tu,v,u+=(i,i+k)\n\n\tif u==v:u.append(d[i]^b[v])\nif k==1:k=2\nans=0\ni=1\nwhile i<=k:i+=k-i\nprint(ans)\n"}, "709": {"problem_id": 709, "answer": "x = int(input())\na = []\nfor i in range(x):\n a.append(i)\nprint(min(a))"}, "710": {"problem_id": 710, "answer": "n = int(input())\ns = input()\na = []\nfor i in range(n):\n\ta.append(list(map(int,input().split())))\nprint(len(a))"}, "711": {"problem_id": 711, "answer": "def solve(n,m):\n \n if n == 0 or m == 1: return 0\n elif n < 2: m = n - 2\n else: n = (n * 2) % 1000000007\n return sum(solve(m,n) for m in range(2))\n"}, "712": {"problem_id": 712, "answer": "n,p,t = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):s[i+1] = s[n-i-1]+1\nprint(s)\n"}, "713": {"problem_id": 713, "answer": "n,m = list(map(int,input().split()))\ns = [[0] * m for i in range(n)]\nfor x,y in zip(s,s[1:]):\n  if x+y>n: break\nans = m - (n-x)\nprint(ans)"}, "714": {"problem_id": 714, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n\tans.append(sum(a[i] for a in a[n-i-1:]) + (i + 1) // 2)\nprint(' '.join(ans))"}, "715": {"problem_id": 715, "answer": "import sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**6)\ndef solve(a,b,c,d):\n  if d in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" and a+b+c+d+u=='X' and b+x+y+z==\"X\": return \"\".join(sorted(list(map(str,a)),key=lambda x:x[1],reverse=True)[0] for x in d) or a==0 or b==1 or c==2 or d==3 or u==u[0][1] and u[-1][2]!=a[2][0]: return a[:-1]+\" \"+str(int(input()))+\" '\"+solve(\"A\",\"B\",\"C\",\"D\")\"\\n\"\nelse: return input()"}, "716": {"problem_id": 716, "answer": "n,a,b = list(map(int,input().split()))\ns = input()\ncost = 0\nfor i in range(n):\n\tif s[i]=='0':\n \t\tcost+=abs(i-b)\nprint(cost)\n\n"}, "717": {"problem_id": 717, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n  s.append(a[i])\nprint(s[-1])"}, "718": {"problem_id": 718, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout,setrecursionlimit\nimport math,string,itertools,heapq,collections,bisect,sys,random,copy,functools\ninput = lambda:stdin.readline().rstrip('\\n')\nprint(math.ceil(int(input())))"}, "719": {"problem_id": 719, "answer": "# cook your dish here\nn = int(input())\ns = 0\nfor i in range(n):\n\ts += i\nprint(s)"}, "720": {"problem_id": 720, "answer": "n = int(input())\na = [int(x) for x in input().split()]\ns = []\nfor i in range(n-1):\n\ta[i] = s.append(i-s.pop(0))\nprint(max(a))"}, "721": {"problem_id": 721, "answer": "n,d = list(map(int,input().split()))\na = [int(i) for i in input().strip().lower()]\nm = int(input())\nprint(sum(a)//m)\n"}, "722": {"problem_id": 722, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n):\n l.append(a[i])\nprint(l[-1])"}, "723": {"problem_id": 723, "answer": ""}, "724": {"problem_id": 724, "answer": "n, d = list(map(int, input().split()))\na = [int(x) for x in input()]\nb = []\nfor i in range(n):\n\ta[i] = b.pop(i+1)\nif d < a[-1]:\n \tb.append([d, i])\nprint(min(b))"}, "725": {"problem_id": 725, "answer": "n,m = map(int,input().split())\nmatrix = [['C','M','Y','W','G','B'] for i in range(n+1)]\nfor row,col in zip(row,row[::-1]):\n  matrix[row][col] =''*(m-row-col)\nprint('\\n'.join(map(str, matrix)))"}, "726": {"problem_id": 726, "answer": "from sys import stdin,stdout\nimport math\nn,d = list(map(int,input().split()))\ncnt = 0\nfor i in range(n):\n\tx = int(stdin.readline().strip())\n\n\tif x%d == 0: cnt+=x//d\n \telse: x = math.floor(math.sqrt(x))+1\n#print(i)\n"}, "727": {"problem_id": 727, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\ta.append(a[-1] + a[i])\nprint(len(ans))"}, "728": {"problem_id": 728, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] += 1\nprint(sum(b))"}, "729": {"problem_id": 729, "answer": "n = int(input())\ns = input()\nprint('YES' if s[0] in s else 'NO')"}, "730": {"problem_id": 730, "answer": "k = int(input())\nl = list(map(int,input().split()))\nfor i in range(k):\n print(\"\".join(l))"}, "731": {"problem_id": 731, "answer": "#!/usr/bin/env python\nfrom sys import stdin\ninput = lambda:stdin.readline().rstrip('\\r\\n')"}, "732": {"problem_id": 732, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "733": {"problem_id": 733, "answer": "from collections import deque\nn = int(input())\ns = list(map(int, input().split()))\nans = 0\nfor i in range(len(s)):\n\tans += s[i]\nprint(ans)"}, "734": {"problem_id": 734, "answer": "n, m = list(map(int, input().split()))\na = [0] + [int(x) for x in input()]\nfor i in range(n):\n\ta.append(a[-1]+i+1)\nprint(max(m))"}, "735": {"problem_id": 735, "answer": "n = int(input())\narr = list(map(int, input().split()))\ns = 0\nfor i in range(len(arr)):\n\ts += arr[s]\nprint(\"yes\")"}, "736": {"problem_id": 736, "answer": "n,m = list(map(int,input().split()))\nl = [0]*(n+1)\nfor i in range(m):\n  l[i] = i\nprint(len(l))"}, "737": {"problem_id": 737, "answer": "n = int(input())\na = [[0]*n for i in range(n)]\nfor i,j in zip(list(map(int,input().split()),range(1,n+1)))[::-1]:\n  a[i][j] = min(j,i)\nprint(a[n][0])"}, "738": {"problem_id": 738, "answer": "from math import sqrt\ndef gcd(a, b, c, d):\n\tif (a == b) and (c == d) : return 0\n\n\treturn (sqrt((a*b+c*d)) + (b*c+d*a))\nn = int(input())\na = list(map(int, input().split()))[0]\nb = [i for i in range(n)]\nc = 0\nd = []\nfor x, y, z in a[::-1]:\n   if (x == 0 or y == 1 or z == 2 or x == n - 1) or (d == [] or d == []) : d.append(x)\nprint(d.count('1'))"}, "739": {"problem_id": 739, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,setrecursionlimit\nimport math,math.random,collections,itertools,heapq,bisect,sys,time,copy,functools\ndef read_int(): return int(stdin.readline().rstrip() or '/')[:-1] #stdout.write(str(int(input()))+'\\n')\nread_ints(): list() = [int(_) for _ in range(32)]\ninp=lambda:list(map(lambda x,y:x*y,input().strip().split(' ')))\nmod=10**18+7"}, "740": {"problem_id": 740, "answer": "n = int(input())\nk = [int(i) for i in input().split()]\ncnt = 0\nflag = False\nfor x in range(n):\n  if k[x] > n: cnt += 1\nif flag == True: print(x+1)\n"}, "741": {"problem_id": 741, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\na = []\nfor i in range(n):\n\ta.append([int(x) for x in input()])\nprint(max(a))"}, "742": {"problem_id": 742, "answer": "for _ in range(int(input())):\n   n = int( input() )\n\n  l = list( set( map( int, input().split()[:n])) )[ -1] * ( n - 1 ) + l[ 0 ] * 2 * n + ( l.count(l[0]) > 2 )\n"}, "743": {"problem_id": 743, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint(sum(a))"}, "744": {"problem_id": 744, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(len(s)):\n\tif s[i] == \"F\": cnt += 1\nprint(\"YES\")\n"}, "745": {"problem_id": 745, "answer": "from math import ceil\nn, k = list(map(int, input().split()))\nl = [[0] * k for i in range(k + 1)]\nfor i, x in enumerate(l):\n  l[i][x] = x % k\nans = (n + k) % 1000000007\nprint(ans)\n"}, "746": {"problem_id": 746, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nc=0\nd={}\nfor i in range(n):\n  x,y,v= map(lambda x:x[1]-y[0], input().rstrip('\\n'))\n\n  if v>a[x][y] and x>0 and y>1: c+=1\nprint(c)\n"}, "747": {"problem_id": 747, "answer": "n,x = list(map(int,input().split()))\ns = 0\nfor i in range(n-1):\n  s += x\nprint(s)\n"}, "748": {"problem_id": 748, "answer": "n = int(input())\na = list(map(int, input().split()))\ngroups = []\nfor i in range(len(a)):\n  if a[i] not in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 227, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 247, 256, 257, 258, 259, 260, 261, 267, 268, 269, 270, 271, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 296, 298, 299, 300, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 337, 338, 339, 340, 341, 347, 348, 349, 360, 367, 366, 368, 369, 370, 371, 372, 373, 374, 376, 379, 383, 384, 389, 400, 403, 404, 405, 406, 407, 408, 409, 420, 421, 432, 423, 344, 345, 353, 356, 357, 358, 359, 386, 387, 388, 398, 401, 402, 413, 414, 425, 433, 424, 426, 427, 428, 429, 430, 440, 443, 445, 361, 346, 363, 364, 365, 378, 390, 377, 392, 399, 416, 417, 418, 419, 220, 228, 243, 252, 253, 254, 263, 264, 265, 266, 698, 701,shanxi, xiaozhuang, yildiya, shuoqing"}, "749": {"problem_id": 749, "answer": "s = input()\nn = len(s)\nif s[n-1] == 'a':\n print(n)"}, "750": {"problem_id": 750, "answer": "n,k = list(map(int,input().split()))\nl = []\nfor i in range(n-1):\n  l.append(list(input()[i:])+[])\nprint(sum(l))"}, "751": {"problem_id": 751, "answer": "n,m=list(map(int,input().split()))\nb=0\nfor i in range(n):\n\tb+=i\nprint(b)\n"}, "752": {"problem_id": 752, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = 0\nfor i in range(n-1):\n\ts += a[i]\nprint(s)"}, "753": {"problem_id": 753, "answer": "a,b,c,d = list(map(int,input().split()))\nl = []\nfor i in range(0,a):\n  l.append(b*(c-i-1)//2+d)\nprint(l[0])\n"}, "754": {"problem_id": 754, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(n):\n\tif s[i] == 'R' and i == n-1: cnt += 1\nprint(int(''.join(s)))"}, "755": {"problem_id": 755, "answer": "x = int(input())\ny = list(map(int, input().split()))\nprint(1)\n"}, "756": {"problem_id": 756, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(0, len(a)):\n  if a[i] < b[-1][0] and (i+1)%2 == 0: b.append(i)\nprint(len(b))"}, "757": {"problem_id": 757, "answer": "n,m,k = list(map(int,input().split()))\na = [int(i) for i in input()]\nb = [-1] * m\nfor _ in range(n):\n\ta[k] = int(input())\n\n\tb[(k - 1) % m] += a[-k + 1] if k % 2 else 0\nprint(len(b))"}, "758": {"problem_id": 758, "answer": "n = int(input())\ns = input()\na = 0\nfor i in range(n):\n\tif s[i] == 'R': a += 1\nprint(a)"}, "759": {"problem_id": 759, "answer": "# coding: utf-8\nimport math\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb.append(a[i]+b[-1])\nprint(sum(b))"}, "760": {"problem_id": 760, "answer": "s = input()\nn = len(s)\nk = 0\nfor i in range(n):\n\tk += s[i]\nprint(k)"}, "761": {"problem_id": 761, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = len(a)\nfor i in range(l-1):\n\tif a[i]%2==0: l = min(i,i+a[l])\nprint(max(0,l))"}, "762": {"problem_id": 762, "answer": "n = int(input())\nl = list(map(int, input().split()))\na = [0]*(n+1)\nb = 0\nfor i in range(1, n+2):\n  if l[i-1]%2 == 0: b += 1\nans = bin(b)[2:]\nprint(ans)"}, "763": {"problem_id": 763, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  d[a[i]] = i\nans = 0\ntemp = a[0]\nwhile temp!= 0:\n\n  temp = min(d.get(temp, 0) for temp in d.keys() if temp == 1)\nprint(ans)"}, "764": {"problem_id": 764, "answer": "n = int(input())\nx = list(map(int, input().split()))\nl = [0]*n\nfor i in range(n-1):\n\tl[i+1] = i\n#print(l)\ns = 0\nwhile(len(s)>0 and l[s]==0): s+=1\nprint('\\n'.join(str(y) for y in l))"}, "765": {"problem_id": 765, "answer": "# cook your dish here\nt,s,q=map(int,input().split())\na=[]\nfor i in range(t):\n\ta.append([int(input()),i+s+q])\nprint(len(a))"}, "766": {"problem_id": 766, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n\tif s[i] == 'a' and cnt == 0:   # a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y\nprint('Yes')\n"}, "767": {"problem_id": 767, "answer": "n, z = list(map(int, input().split()))\nx = [int(i) for i in input()]\nans = 0\nfor _ in range(n):\n\tx.append(x[-1] + x[:-1])\nprint(ans)\n"}, "768": {"problem_id": 768, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nn,m=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append(str(i+1)+\" \")\nprint(l[0])"}, "769": {"problem_id": 769, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nfrom collections import deque\nn = int(input())\na,b,c = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n  s[i+1] += c\nprint(''.join(s))"}, "770": {"problem_id": 770, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(len(a))"}, "771": {"problem_id": 771, "answer": "n,k,m=list(map(int,input().split()))\na=[0]*(n+1)\nfor i in range(k):\n\ta[i]=int(input())\nc=0\nwhile(m>0 and a[-1]%m)==0:c+=1\nprint(c)"}, "772": {"problem_id": 772, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n\ta, b = list(map(int, input().split()))\n\n\tif (a == 0 or a == 1) and (b == -1 or b == 2) or ((a and b) in [-1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 256, 257, 258, 259, 260, 261, 267, 268, 269, 270, 271, 277, 281, 282, 293, 296, 297, 300, 313, 314, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340, 341, 343, 344, 345, 347, 349, 353, 354, 355, 356, 357, 358, 359, 366, 367, 368, 369, 370, 371, 376, 383, 384, 389, 400, 401, 402, 405, 407, 408, 409, 420, 423, 424, 425, 427, 428, 429, 430, 432, 433, 436, 457, 458, 640, \u2502>\n"}, "773": {"problem_id": 773, "answer": "n, q = list(map(int, input().split()))\nl = [0] * n\nfor _ in range(q):\n\tl[int(input())] += 1;\nprint(n - l[0])\n"}, "774": {"problem_id": 774, "answer": "n = int(input())\na,b = list(map(int,input().split()))\nif n % 2 == 0 or (n == 1 and a == b):\n\tprint(\"a=\",a)\nelse:   print(\"b=\")\n"}, "775": {"problem_id": 775, "answer": "n,m,k = list(map(int,input().split()))\na = [0]*n\nfor i in range(m):\n  a[i] = int(input())\nc = 0\nq = []\nwhile(len(a)>0 and len(q)<=n and q[0]+q[q.pop(0)]<k):\n\n  if(c==n-a[a.index(min(n)-1)][1]) and (c<n)and (n>a).count('1')==1 and a.get('i')!=-1:c+=1   #print(i,q,c)\nprint('\\n'.join([str(x) for x in q]))\n\n"}, "776": {"problem_id": 776, "answer": "a,b,c = list(map(int,input().split()))\nn = int(input())\nm = 0\nfor i in range(n):\n  m = min(m,a+b+c)\nif m == m+1 or m==m+2: break\nprint(a*b)"}, "777": {"problem_id": 777, "answer": "s = input()\nn = len(s)\nprint(n)"}, "778": {"problem_id": 778, "answer": "n,k = list(map(int,input().split()))\nm = [[0]*(n+1) for _ in range(k+2)]\nfor i,x in enumerate(m):\n\tif x=='1': m[i-1].append(i)\nif k==1: print(\"1\")\nelse: m.sort(reverse=True)"}, "779": {"problem_id": 779, "answer": "n = int(input())\na = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n\tif(a[i]>1 and a[(i+1)%n]==0):ans += 1\nprint(ans)"}, "780": {"problem_id": 780, "answer": "# cook your dish here\ns = input()\nn = len(s)\na = []\nfor i in range(n):\n\ta.append([int(x) for x in s.split(\" \"))]\nprint(\"\\n\".join(a))\n"}, "781": {"problem_id": 781, "answer": "for _ in range(int(input())):\n\tline1, line2 = input().splitlines()\n\n\tif line1[0] == 'W' and (line2[-1]=='B' or lines[line.find('W')].count('B') == 1) or line[1:] == line.strip('\\n') and line['W']!= 'B':\n \t\tprint('YES')\n"}, "782": {"problem_id": 782, "answer": "m = int(input())\ns = list(map(int, input().split()))\nn = len(s)\nset = [0]*n\nfor i in range(n):\n\ts[i] += 1\nans = 0\nflag = False\nwhile(len(set) > 0 and s[n - 1]!= 0):\n\n\tfor j in set[:n]:\n\n \t\tif j % 2 == 1 and (j // 2) not in s and ans < ans + n - 2: ans = j\n\n"}, "783": {"problem_id": 783, "answer": "n = int(input())\narr = list(map(int, input().split()))\nfor i in range(n):\n\tarr[i] = 0\n#print(arr)\ncnt = [0] * (n + 1) #1 means the maximum is 1, 2 means minimum is 2, and 3 means maximum\nans = []\nif n % 2 == 0 and arr[n // 2] < cnt[-1]:\n \tans.append(1 + min(ans[0], ans[1])) #2 means min is 0, 1 is maximum, 3 is minimum\nprint(' '.join(str(i)) + '\\n')"}, "784": {"problem_id": 784, "answer": "# cook your dish here\nn = int(input())\na, b = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n  s.add(i)\nans = a + b\nprint('YES' if ans else 'NO')\n"}, "785": {"problem_id": 785, "answer": "n,a,b = list(map(int,input().split()))\nl = []\nfor i in range(n):\n  l.append(a*b)\nprint(*l)"}, "786": {"problem_id": 786, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\tif a[i] % 2 == 0: s += i\nprint(s)\n"}, "787": {"problem_id": 787, "answer": "k = int(input())\nfor i in range(k):\n\ts, q = input(), list(map(int, input().split()))\n\n\tif len(q) - k - 1 < k and q[-1] in 'aeiou':\n \t\tprint(\"NO\")\n"}, "788": {"problem_id": 788, "answer": "s = input()\nn = len(s)\nprint(n)"}, "789": {"problem_id": 789, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nfor i in range(n):\n\ta[i] += 1\nprint(1)"}, "790": {"problem_id": 790, "answer": "import sys\ninput = sys.stdin.readline\nn,k = map(int,input().split())\na = [int(i) for i in input().rstrip('\\n').split(' ')]\nd = {}\nfor i,j in zip(a,a[::-1]):\n  d[i] += 1 if j == '0' else 0\nl = list(d.keys())[0]\nr = []\nwhile len(l)>0:\n\n  x = l.pop(0)\n\tl.append(x)\n\n\td[x] = max(r) if x == 0 else x\nprint(n)"}, "791": {"problem_id": 791, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(len(s)):\n\tif s[i] == '1': cnt += 1\nif n == 1: break\nprint(n)\n"}, "792": {"problem_id": 792, "answer": "n,d = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n\ta[i+1] = a[n-i]\nprint(min(a))"}, "793": {"problem_id": 793, "answer": "n, m = map(int, input().split())\ns = list(map(lambda x: int(x), s))\nt = [i for i, x in enumerate(s) if x <= 10**5]\nmod = 10 ** 9 + 7\nfor i in range(m):\n  s[i] = s.pop(i)\nprint(('%d' % mod))"}, "794": {"problem_id": 794, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(1, n):\n\ts.append(a[i] * (i + 1) // 2)\nprint(*s)"}, "795": {"problem_id": 795, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(l[n])"}, "796": {"problem_id": 796, "answer": "n, k = list(map(int, input().split()))\ns = [0] * (k + 1)\nfor i in range(1, n):\n  s[i] = 1 if i % 2 == 0 else 0\nprint(s[n - 1])"}, "797": {"problem_id": 797, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,setrecursionlimit\nimport math,string,itertools,fractions,heapq,collections,re,math,array,bisect,sys,random,time,socket64,socketserver,stdout, socket,thread,vcpu,pyp,insort,getpass,\u30a4\u30f3\u30c7\u30c3\u30afIX,inf,mod, hex,geometry,functions,str,binary,numpy,float,floors,concat,queue,dart,computation,arrays,bins,cursum,ceil,denominator,findall,maketrans,ast='abcdefghijklmnopqrstuvwxyz',mod=1e9,-9900,nan,pi,luc,rubber,reduce,sqrt,copys,mm,tau,u',',\\n'',ast=str(input()))\ndef solve(n,x,y,z):\n  return math.factorial(abs(x-y)//(z-x))**2"}, "798": {"problem_id": 798, "answer": "a,b,c=list(map(int,input().split()))\nl=[]\nfor i in range(0,len(a)):\n  if(b-a[i]<c):l.append(i+1)\nprint(l)"}, "799": {"problem_id": 799, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n\tc += a[i]\nprint(c)"}, "800": {"problem_id": 800, "answer": "n = int(input())\nl = []\nfor i in range(n):\n  x, y = list(map(int, input().split()))\n\n  l.append(x)\nprint(sum(l))"}, "801": {"problem_id": 801, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = [0] * n\nfor i in range(n):\n\tans[i] = i - (n - i)\nprint(sum(ans))"}, "802": {"problem_id": 802, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = dict()\nfor i in range(n):\n  if a[i] in b.keys() and b[(i - n) // 2] == a.get(a.pop(0), -1) and a [i:i + n] not in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 175, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 239, 241, 242, 243, 254, 255, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 326, 327, 328, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 347, 348, 349, 360, 366, 367, 368, 371, 372, 373, 374, 376, 377, 378, 379, 380, 383, 384, 389, 400, 401, 402, 405, 407, 408, 409, 410, 414, 415, 416, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 436, 457, 450, 458, 600, 630, 701, 702, 800, 900, 1000, 1100, 1200, 1300, 1400, 150, 151, 152, 153, 154, 355, 356, 370, 363, 364, 369, 365, 386, 390, 392, 396, 398, 399, 404, 406, 413, 344, 345, 346, 353, 352, 354, 357, 358, 359, 296, 294, 297, (?,, (?, math.pow)\n"}, "803": {"problem_id": 803, "answer": "n = int(input())\na = list(map(int,input().split()))\nprint(min(a[::-1]))"}, "804": {"problem_id": 804, "answer": "s = input()\nn = len(s)\nk = 0\nfor i in range(n):\n\tif s[i] == 'a' and k == 0: k += 1\nprint(k)"}, "805": {"problem_id": 805, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(sum(l))"}, "806": {"problem_id": 806, "answer": "n, l, r = list(map(int, input().split()))\na = [int(i) for i in input()]\nans = 0\nfor i, x in enumerate(a, 1):\n  if x % 3 == 0 and a[i] == x: ans += 1\nprint(ans)\n"}, "807": {"problem_id": 807, "answer": "n,c = list(map(int,input().split()))\nd = {}\nfor i in range(n):\n\td[i] = [int(x) for x in input()]\nif c>=d.get(c,0) or d[c]<0: c=0"}, "808": {"problem_id": 808, "answer": "import math\nn = int(input())\nprint(math.log10(n))"}, "809": {"problem_id": 809, "answer": "n,k,a,b = list(map(int,input().split()))\na = a+b\nprint('YES' if a == b else 'NO')\n"}, "810": {"problem_id": 810, "answer": "mod = 10000000\nn = int(input())\ncnt = 0\nfor i in range(1,n+1):\n\ta,b = map(int,input().split())\n\n\tif (a*b)%1 == 0: cnt += 1\n"}, "811": {"problem_id": 811, "answer": "a,b=map(int,input().split())\nprint(a*b)"}, "812": {"problem_id": 812, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(len(a)):\n\tb[a[i]-1].append(i)\n\n\tif len(b)%2==0 and b[-2*i]!=0:print(-1);return\nprint(0)"}, "813": {"problem_id": 813, "answer": "n,a,b = list(map(int,input().split()))\nfor i in range(1,n+1):\n  a += int(input())\nprint(a)\n"}, "814": {"problem_id": 814, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(1, n):\n  if a[i] * c == c: c += 1\nprint(c)\n"}, "815": {"problem_id": 815, "answer": "s = input()\nn = len(s)\na = [0]*n\nfor i in range(n):\n\ta[i+1] += s[-i]\nprint(a)"}, "816": {"problem_id": 816, "answer": "n, x = list(map(int, input().split(' ')))\na = [0] * n\nfor i in range(n):\n  a[i] ^= x\nprint(sum(a))"}, "817": {"problem_id": 817, "answer": "s = input()\nl = len(s)\nfor i in range(l):\n\ts[i] ='' + s[l-i-1]\nprint(''.join(map(str,s)))"}, "818": {"problem_id": 818, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = \"\"\nfor i in range(len(a)):\n  if a[i] == \"0\" and s[-i:] == \"-\" or a.count(s[:i]) == -1: s += i\nprint(\"%d\\n\" % (n - 1))"}, "819": {"problem_id": 819, "answer": "n, k = list(map(int, input().split()))\na = [0] + [int(x) for x in input()]\ns = 0\nfor i in range(len(a)):\n  if a[i] < 0: s += a.pop()\nprint(s)\n"}, "820": {"problem_id": 820, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = min(a)\nfor i in range(n):\n\tif a[i] > m: break\nprint(m)"}, "821": {"problem_id": 821, "answer": "s,v,t = list(map(int,input().split()))\nn = int(input())\na = []\nfor i in range(n):\n  a.append([int(x) for x in input()])\nprint('First' if a[-1][0] == t else 'Second')"}, "822": {"problem_id": 822, "answer": "def f(s):\n  return sum(int(x) for x in s) if s.startswith('min') else 0\ns = input()\nprint(f(10))"}, "823": {"problem_id": 823, "answer": "#!/usr/bin/env python\nfrom sys import stdin, setrecursionlimit\nimport numpy as np\ndef input(): return sys.stdin.readline().strip()\n \nn, m = list(map(int, input().split()))\nl = []\nfor i in range(n): l.append([int(x) for x in input()])\nprint(*l, sep='\\n')\n"}, "824": {"problem_id": 824, "answer": "from sys import stdin\ninput=stdin.readline\ns=list(input())\nfor i in range(len(s)):\n\ta=s[i].replace('(\"\",')','').split('(\")'[::-1].lstrip('\\n')[1:]+[''])[0].split(',')+'(\"'*(1<<(i+1))+')\"*i\nprint(''.join(map(str,a)))"}, "825": {"problem_id": 825, "answer": "def solve(n):\n   if (n == 0): return 0;  # no need to check if n is divisible by two or more\n#  print(f\"{n} = {n%2}\\\")\nprint(solve(10))"}, "826": {"problem_id": 826, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)"}, "827": {"problem_id": 827, "answer": "#!/usr/bin/env python3\ndef __starting_point():\n  n = int(input())\n\n  t = \"abcdefghijklmnopqrstuvwxyz0123456789+xxxxyyyyxxxxzz\" # a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,_, _, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z,\n__starting__,__rev__ = input().split() # print(int(t[0])) # for each character in t[1]: print(''.join(sorted(str(i+1), key=lambda s:s)))\n\"\"\"\na = [10**10 for i in range(n)]\nb = []\nc = 0\nd = len(a)\ne = n\nf = 1\ng = 2\nh = 3\nj = 4\nk = 5\nl = 6\nm = 7\nn = 8\no = 9\np = 10\nq = 11\nr = 12\ns = 13\nt = 14\nu = 15\nv = 16\nw = 17\nx = 18\ny = 19\nz = 20\n_ = 21\nC,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114, 115,116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 245, 247, 256, 257, 263, 269, 271, 277, 278, 281, 282, 283, 284, 285, 286, 293, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 331, 326, 327, 328, 329, 330, 334, 335, 336, 337, 338, 340, 341, 343, 344, 347, 348, 349, 360, 367, 366, 368, 369, 370, 371, 372, 373, 374, 376, 379, 380, 383, 384, 387, 388, 389, 400, 401, 402, 409, 420, 421, 432, 433, 448, 464, 56, 77, 88, 99, 1020, 1132, 1102, 1113, 1121, 1152., 12"}, "828": {"problem_id": 828, "answer": "n, s = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n  a[i] = s + i\nprint(len(a))"}, "829": {"problem_id": 829, "answer": "n = int(input())\ns = input()\nl = []\nfor i in range(n):\n\tl.append(list(map(int, input().split())))\nif len(l) == 0 or l[-1] == '0':\n \tprint(0)\nelif l == []:\n# print(len(s))\nprint('\\n')"}, "830": {"problem_id": 830, "answer": "def solve(n, k):\n\tif (n == 0 or k == 1): return 0; return 1;\n\n\ts, m = list(map(int, input().split())) if k % 2 else 0, int(input())[:n] + (k // 2) * (s - m) // m; m, s = sorted(list(range(1, n + 1)), key = lambda x: (x[0], x[1]))[::-1]; k = 0 if s == m else len(s) - k; s.append(k); m += k - n; k += s[n - 1] * 2; n += m - 2*s.pop()[-2]; s += [s[i][0] for i in range(m)]; m //= 2\n\n  \treturn s;\n"}, "831": {"problem_id": 831, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ns = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n):\n\tl[s[i]-1]+=1\nif len(s)==n:print(-1)\n"}, "832": {"problem_id": 832, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = [0]*n\nfor i in range(1,n):\n  s[i] += 1\nprint(sum(s))"}, "833": {"problem_id": 833, "answer": "n,v = list(map(int,input().split()))\na = [int(x) for x in input()]\nprint(max(a))\n\n"}, "834": {"problem_id": 834, "answer": "from sys import stdin, stdout\nn = int(stdin.readline().strip())\nans = [0] * (n + 1)\nfor k, v in zip(ans, ans[1:])[::-1] :\n  if v == '1' : break\nprint(v)"}, "835": {"problem_id": 835, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\np = list(map(int, input().split()))\nr = 0\nfor i in range(len(p)):\n\tif p[i]=='B': r+=1\nprint(r)\n"}, "836": {"problem_id": 836, "answer": "n, t = list(map(int, input().split()))\ns = input()\nk = 0\nfor i in range(n):\n  if s[i] == 'H': k += 1\nprint(k)\n"}, "837": {"problem_id": 837, "answer": "n,x,y = list(map(int,input().split()))\ns = input()\nt = 0\nfor i in range(n):\n\tif s[i] == \"a\" and t == t + x: t += x\nprint(t)\n"}, "838": {"problem_id": 838, "answer": "n,m = list(map(int,input().split()))\ncnt = 0;\nfor i in range(n):\n\tif(i%2!=0 and i%3==0) : cnt+=1;break\nif((n==m) and(m==n)): break\nprint(c+1)\n"}, "839": {"problem_id": 839, "answer": "from math import gcd\nn, m = list(map(int, input().split()))\ns = [0] * m\nfor i in range(m): s[i+n-1] += 1\nprint(max(s))"}, "840": {"problem_id": 840, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n - 1, 0, -1):\n  a[i] += 1;\nprint(a[-1])"}, "841": {"problem_id": 841, "answer": "t = int(input())\nfor _ in range(t):\n\tn = (int(i) for i in input().split()[1:])\n\n\ts = [0] * (n + 1)\n \tfor i, x in enumerate(s, 1): s[i + x] = x + '7' + str(n - i) + i\n"}, "842": {"problem_id": 842, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(l[::-1])"}, "843": {"problem_id": 843, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n  if l[i] == '1':\n\tans += i\nprint(ans)"}, "844": {"problem_id": 844, "answer": "n = int(input())\ns = input()\nl = 0\nfor i in range(n):\n\tif s[i] == '0' and l == len(s) - 1: l += 1\nprint(l)"}, "845": {"problem_id": 845, "answer": "l=input()\ni=0\nwhile i<len(l) and l[i]!=' ':i+=1:l.pop(i-1)\nprint('l[0]')"}, "846": {"problem_id": 846, "answer": "n,m = map(int,input().split())\na = list(map(lambda x: int(x),input()))\nb = [int(i) for i in input()]\nprint(''.join(b))"}, "847": {"problem_id": 847, "answer": "n, x = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += i\nprint(s)\n"}, "848": {"problem_id": 848, "answer": "n,k = list(map(int,input().split()))\nl = [0]*n\nfor i in range(1,n+1):\n\tl[i] = (i-1)*(n-i)//2\nprint(*l)\n"}, "849": {"problem_id": 849, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nb,c,d = n,n-1,10000000000\nfor i in range(n):\n\ta[i] = str(bin(a)[-2:].count('1')+1).zfill(i)\nprint(\"%.6f\"%(c/d))"}, "850": {"problem_id": 850, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(0, n):\n\ta[i] = str(i)\nprint(max(a))"}, "851": {"problem_id": 851, "answer": "n,k = list(map(int,input().split()))\nprint(k-1)"}, "852": {"problem_id": 852, "answer": ""}, "853": {"problem_id": 853, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nprint(-1)"}, "854": {"problem_id": 854, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, t = list(map(int, input().split()))\na = [0] * n\nfor i in range(n):\n  a[i] += 1 if i % 2 == 0 else 0\ns = sum(a)\ni = 1\nwhile i * i <= t: s -= i\nprint(s)"}, "855": {"problem_id": 855, "answer": "from collections import deque\nimport sys\nsys.setrecursionlimit(10**6)\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\na = list(map(int, input().split()))\nb = [int(x) for x in input()]\nans = [-1] + [0]*n\nfor i,a in enumerate(a):\n  ans[i] = a[0]-1\nprint(ans[-1])"}, "856": {"problem_id": 856, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nfor _ in range(int(input())):\n n,k=list(map( int,input().split()))\n a=input()\n k=k-1\n l=0\n for i in a.split():\n  if i.isdigit() and i%2==0: k+=i\n print(k)\n"}, "857": {"problem_id": 857, "answer": "n,m=map(int,input().split())\na=[int(x) for x in input()]\nb=[0]*(m+1)\nfor i in range(n):\n\tb[a[i]-1]+=1\nans=[]\nwhile a[-1]+1!=0:\n\n\tif b[len(b)//2]==1:ans.append([])\nprint((''.join(ans)))\n"}, "858": {"problem_id": 858, "answer": "n = int(input())\nprint(n)"}, "859": {"problem_id": 859, "answer": "from sys import stdin, stdout\nstdin.readline()\nn = int(input())\ns = list(map(int, input().split()))\na = [0]*n\nfor i in range(n):\n  a[i]+=1\nprint(pow(a[n-1], 10000000000, 100))"}, "860": {"problem_id": 860, "answer": ""}, "861": {"problem_id": 861, "answer": "n, m = list(map(int, input().split()))\nd = [[0] * m for _ in range(n)]\nfor i, x in enumerate(range(1, n)):\n  d[i][x] = 1 if x % m == 0 else 0\nans = sum(d)\nprint(ans)"}, "862": {"problem_id": 862, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nprint(n)\n"}, "863": {"problem_id": 863, "answer": "t = int(input())\na,b = list(map(int,input().split()))\ns = 0\nfor i in range(t):\n  a[i] += 1\nb[t-1] = 1 - s\nprint(s)"}, "864": {"problem_id": 864, "answer": "n, m = list(map(int, input().split()))\na = [int(x) for x in input()]\ns = 0\nfor i in range(n):\n\ts += a[i] * m\nprint(s)\n"}, "865": {"problem_id": 865, "answer": "n,t = list(map(int,input().split()))\nlst = [0]*n\nfor i in range(n):\n  lst[i+1] += 1\nans = 0\ntemp = []\nwhile(len(temp)>0 and temp[-1][0]) : temp.append(0)\ndef dfs(i,j,ans) :\n ans = max(ans,i-j-temp[0][1])\n return ans\nprint(dfs(t,0,n))"}, "866": {"problem_id": 866, "answer": "# coding: utf-8\nimport sys\nsys.setrecursionlimit(10**6)\ninput = sys.stdin.readline\nMOD = 10**9+7\nn = int(input())\ns = [0]*n\nfor i in range(n):\n\ts[i] = s[n-i-1]%MOD\nprint(s)"}, "867": {"problem_id": 867, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n\ta.append(max(a[i-1],0)+1)\nans=0\nk=n\nwhile(k>0):\n\n\tif(b[k]==0 and b[-k+1]>=1):k-=2\n \telse:ans+=1+k\nprint(ans)"}, "868": {"problem_id": 868, "answer": "n = int(input())\nfor i in range(1,n):\n s = input()\n print(s[::-1])"}, "869": {"problem_id": 869, "answer": "a,b = list(map(int,input().split()))\nn = int(input())\ns = set()\nfor i in range(n):\n  s.add(i)\nprint(len(s))"}, "870": {"problem_id": 870, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout\nimport math,bisect,collections,itertools,string,array,deque,heapq,sys,random,time,copy,functools\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nmod = 10**9+7\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]  # inputshf,svg,tb,u,v,h,w,x,y,z).\n"}, "871": {"problem_id": 871, "answer": "n, s = list(map(int, input().split()))\nh, m = [0] * 60, [int(x) for x in input()]\nfor i in range(n):\n\th[i+1] = h[n-i] + m\nans = []\ni, j = 0, n-1\nwhile i < len(h) - 1 and j < n - i + 1 or j >= m - m + h: ans.append(0)\nprint(ans[j])"}, "872": {"problem_id": 872, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "873": {"problem_id": 873, "answer": "n = int(input())\na = list(map(str,input().split()))\nb = []\nfor i in range(len(a)):\n a[i] = str(i)\n b.append(\"{} {}\".format(b[-1].count('1')) + '\\n'.format('0' * (i - 1) // 2 + 1))"}, "874": {"problem_id": 874, "answer": "n = int(input())\np = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n  if p[i] == i: cnt += 1\nprint(-1)\n"}, "875": {"problem_id": 875, "answer": "n = int(input())\npoints = list(map(int, input().split()))\ns = [[0]*n for i in range(n)]\nfor i, p in enumerate(points):\n  s[i][p] = p\nans = min(s)\nprint(ans)"}, "876": {"problem_id": 876, "answer": "n, k = list(map(int, input().split()))\na = [0]\nfor i in range(n):\n\ta.append(a[-1] + i)\nprint(sum(list(range(k))))\n"}, "877": {"problem_id": 877, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\npairs = [0]*(n+1)\nfor i in range(m):\n  a, b, c, d, e, f, g, h, i, j = 0, 1, len(set(input()), 2), [], [], [i] * (n + 1) + [x for x in input()] if x not in pairs[a] and x[1]!= i[0], [a,b,c,d,e,f,g,h,i,j] or a == b or b == c or c == d or d == e or e == f or g == h or h == i or i == j or j == g]\nprint(2 * n + 2 * m)"}, "878": {"problem_id": 878, "answer": "n=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n-1):\n\tl.append(0)\nwhile(len(l)>0 and l[0]==l[1]): l.pop()\ns=0\ni=1\nif(i==2): s+=1; i+=2\nprint(s)"}, "879": {"problem_id": 879, "answer": "n = int(input())\np = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n  d[p[i]] = i\ni = 0\nwhile i < n - 1:\n\n  if d.get(i) == i: i += 1\n\n"}, "880": {"problem_id": 880, "answer": "import sys\ninput = sys.stdin.readline\nn=int(input())\ns=list(map(int,input().split()))\np=sorted(s,reverse=True)\nprint(sum(p))"}, "881": {"problem_id": 881, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\ta[i] += 1\nl = len(a)\nif l % 2 == 0 and a[l // 2] == 1:\n\n\tans += min(l - 1, l - 2 - l * (l-1)//2 + (1 if l%2 else -1))\n\n"}, "882": {"problem_id": 882, "answer": "#!/usr/bin/env python3\n\n\n\n"}, "883": {"problem_id": 883, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  if a[i] == 1: s += 1\nprint(s)\n"}, "884": {"problem_id": 884, "answer": "a,b,c = list(map(int,input().split()))\nn = (a+b+c)%998244353\nprint(n)\n"}, "885": {"problem_id": 885, "answer": "from math import factorial as f\nn = int(input())\ngraph = [[] for i in range(n+1)]\nedges = [0]*n\nfor i, v in enumerate(graph, 1):\n   edges[v] = f(v, i)\ns = sum(map(factorial, graph[i]))\nprint(s)"}, "886": {"problem_id": 886, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [i for i in range(n) if a[i] == '1']\nprint(a[:n])\n"}, "887": {"problem_id": 887, "answer": "n = int(input())\na = list(map(int, input().split()))\nif a[0] % 2 == 0: print(\"NO\")\nelse: \n\tprint(\"YES\")"}, "888": {"problem_id": 888, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n\ts.append(a[i])\nans = 0\nif len(s) == 0 or a[0] == s[-1][0]: ans = i\nprint(ans)"}, "889": {"problem_id": 889, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nsys.setrecursionlimit(10**7)\ninput = lambda:stdin.readline().rstrip('\\r\\n')"}, "890": {"problem_id": 890, "answer": "n,l,r,x = list(map(int,input().split()))\nc = [0]*n\nfor i in range(n):c[i+1]+=1\nx=min(c)\nif x<0:print(0)"}, "891": {"problem_id": 891, "answer": "n, k = list(map(int, input().split()))\ns = ''\nfor i in range(k):\n\ts += str(i) + 'W'\nprint(s)\n"}, "892": {"problem_id": 892, "answer": "n,m=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append(sum(a[-1] for a in a[:-1])+min(l for l in m if l<=i-i+1)//2)\nprint(*a)"}, "893": {"problem_id": 893, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import deque, defaultdict, Counter, OrderedDict,defaultdict2\nclass UnionFind():\n  def __init__(self, vert, edges, parent=None): self.v = vert;self.parent = parent; self._vert_edges = [vert]*(vert.count('1')+1) + [edge for edge in edges if edge[0]==vert[1]]\n\n  # def addEdge(v,u,w):self._add_edge(u,'',v)  \n# def findParent(x,y):return x if x!=y else find_parent(y,x) # find parent of x\ndef union(a,b):\n\tif a==b:a = b;b = a;return 1\nfor _ in range(0,int(input())) :UnionFind(list(map(int,input().split())))"}, "894": {"problem_id": 894, "answer": "from math import sqrt,cos,tan,sin,pi,sqrt\nn = int(input())\na,b,c,d,e,f,g,h,i,j,k = list(map(int,input().split()))\np = [i for i in range(n+1)]\nq = []\nfor x in a: q.append(cos(x*p[i])+sin(q[-1*i]))"}, "895": {"problem_id": 895, "answer": "n = int(input())\na = list(map(int, input().split()))\nt = 0\nfor i in range(n):\n\tif a[i] == t: t += 3\nprint(t)\n"}, "896": {"problem_id": 896, "answer": "n,m = list(map(int,input().split()))\na = [0]*n\nb = []\nfor i in range(n):\n\tb.append(a[i])\nc = 0\nd = 1\nr = n*m\ne = m*(m-1)//2\nwhile e<=n and a[e]==0:e+=1\nprint('YES' if d==1 else 'NO')\n"}, "897": {"problem_id": 897, "answer": "import math\nn, m = list(map(int, input().split()))\na = [0] * m\nfor i in range(n):\n\tx = a[i]\n\n\tif x > 0 and x < m: x = math.ceil(math.sqrt(x) / (m - x)))\nif m == 1: print(0)\nelif n % 2 == 0 or m % 3!= 0:print(a[:n // 3])\n"}, "898": {"problem_id": 898, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout, setrecursionlimit\nimport math, collections, copy, itertools, bisect, heapq, heappop, ix, iy, nsmallest\n \ndef read_int(): return int(stdin.readline().strip()) or '\\n'\nread_float(): float() = list(map(int,stdout.txt().split()))\nn,m = readmax()\na = [-1]*n\nfor i in range(m):\n a[n] = i\nprint(a[-1])"}, "899": {"problem_id": 899, "answer": "from collections import defaultdict, deque\nn, m = list(map(int, input().split()))\ng = [[] for _ in range(n)]\nfor i, x in enumerate(range(m)):\n  g[x].append(i+1)\nans = 0\nvisited = [0]*n\ndef dfs(x, y, visited, curr_node):\n\n  if visited[y] == 0: continue;  # if the node is marked as not visited yet, it can't be visited anymore, so it's not possible to reach the next node with this value of y. Therefore, we have to mark it as visited again. We can do this recursively, starting from the first node we visit, and then iteratively traversing the list of visited nodes until we hit a node that ends in visited. Note that if there are multiple such nodes that have been visited in this iterative iteration, they can overlap, thus we need a special check to see if they are valid or not. In other words, if all nodes are visited (including the one we visited first), then we do not need to visit the rest of them again, as they will always be valid as long as we keep track of their indices instead of visiting each other. Since we want to make sure that we only visit one node at a time in order to avoid overlapping nodes when visiting different nodes (e.g., in a loop), we can store the visited value at the index we've visited previously (we'll use this later in our solution), which we'll be able to track later as a result of our traversal. If we reached the end of a list that was visited more than once, then this is considered a visited node, since it only has to be reachable, i.e., if we were to traverse list [x] one by one from node x to node y from left to right, there would be no nodes left of this list. Thus, our goal is to calculate the sum of all possible values of x such that they end up having the same sum, regardless of order. However, this sum is defined differently for each node (node i is visited twice, node j is only visited once), so in each iteration we will have an odd value for this node: when we reach node i (i \u2260 j) we choose a new node from list[i] and visit it again (neighbor[j] = i), thus our sum will be even. On the other hand, for any other node the even node will represent a leaf, while the odd node represents a bridge. [Image] Sum of even values doesn't exceed 2^16 (2^8 + 7 + 4 = 106). We will call this evenness, or \"sum of sum values\" for that matter. As usual, when sum value is odd, special cases apply here. For example: if a and b are adjacent, their sums are even: [a + b, b + 1], [b - a, -1]. Here is another special case: sum a = 2[0, 1] + a[1, 2], sum b = -2[ 0, 4] - b[ 3][2]. Similarly, sum c = a + c[2][3][0]. Finally, any two adjacent nodes form a (possibly empty) connected component (in this case we consider only nodes 1 and 2), as can be seen below. The only condition to check is that there exists at least one (connected) component containing both nodes at distance at most |c|, where distance c is equal to the smallest distance |x| that exists less than x. Recall that distance x is lexicographical, but it is also not necessarily unique: nodes x and y are connected if and only if x + y = x', which is true for every node in graph. Consider any such component that satisfies this condition. (Note that the nodes numbered 1,..., |n| are leaf nodes, not neighbors of any leaf node.)\nAn edge is called a double edge if it contains no other edge than the single-edge edge g that connects nodes i and j with i\u22650 and x!= x' with x'' \\neq x'. The edge (g,x')|i-j| means that g connects i not only to j (but also to any nodes whose distance from x') and so |g| = |i - i|. That is, two edge u and v with u \u2265 v' and u' > u', where u is exactly one edge, satisfies g,u | u | v. Two edge subsets of graph are different when they contain an empty row or an even-indexed row that differs by a single edge: a set that does not change its size after deletion (such as graph_set {'0', '1',..., 'n'})"}, "900": {"problem_id": 900, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout, setrecursionlimit\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,math,functruediv,pow,tan,floor,inf,asin,log10,numerator,mod,cos,sin,pi, sin,sqrt,real,imag,gcd,haaugh,l,m,mo,rho,rad,sinx,inxn,os,otime,ybrow,hayao,kata,time\ns = input()\nn = len(s)\nm = 10 ** 9 + 7\na, b, c, d, e, f, g, h, i, j, k, l, m, r, s = 0, 123456789, 12, 1, 2, 3, 4, 5, 6, 7, 8\nfor i in range(n):\n while True and s[i] == '0':\n  i += 1\n if i > 0: a,b,c,d,e = n,i-i,j-j,1,0\n print(a%m)"}, "901": {"problem_id": 901, "answer": "n,m = list(map(int,input().split()))\nl = [0]*n\nr = []\nfor i in range(m):\n   if l[i]==0: r.append(i)\nif m*(n+1)%2==1: print(\"YES\")\nprint(\"NO\")"}, "902": {"problem_id": 902, "answer": "def __starting_point():\n n, k = list(map(int, input().split()))\n a = []\n for i in range(n):\n  a.append(i+1)\n print(sum(a)//2)"}, "903": {"problem_id": 903, "answer": "n, k = list(map(int, input().split(' ')))\na = [int(i) for i in input()]\ns = sorted(a, key=lambda x:x[0])\nprint(max(s))\n"}, "904": {"problem_id": 904, "answer": "n = int(input())\ns = list(map(int,input().split()))\nprint(5)\n"}, "905": {"problem_id": 905, "answer": "n,s = list(map(int,input().split()))\na = [int(x) for x in input()]\nb = []\nfor i in range(1,n+1):\n  b.append(a[i]//100)\nif b[0]+b[1]<100 and a[n]%100!=0:print(n-len(b),end=\"\")\nelse:b.sort()"}, "906": {"problem_id": 906, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nn,m,k = list(map(int,input().split()))\nblocks = [0]*(n+1)\nfor i in range(m):\n\tif i%2==0:blocks[i]=(k-1)*(i//2)//k\nprint(blocks)"}, "907": {"problem_id": 907, "answer": "n, m = list(map(int, input().split()))\na = [int(x) for x in input()]\nb = []\nfor i in range(m):\n\ta[i] = b.append(i)\nans = ['YES' if i % 2 == 0 else 'NO']\nprint('\\n'.join(ans))"}, "908": {"problem_id": 908, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n\tc += a[i]\nprint(c)"}, "909": {"problem_id": 909, "answer": "a,b,c = list(map(int,input().split()))\nprint(max(a) + max(b))"}, "910": {"problem_id": 910, "answer": "n,a,b = map(int,input().split())\nchairs = []\nfor i in range(n):\n\tchairs.append([int(input()),i])\n#print(chairs)\nc = 0;\nsizes = [0]*n\nwhile sizes[c]<b: sizes.pop(c); c+=1\nprint(' '.join(map(str,chairs)))"}, "911": {"problem_id": 911, "answer": ""}, "912": {"problem_id": 912, "answer": "t = int(input())\nfor _ in range(t):\n n, s, k = list(map(int, input().split()))\n a = [int(i) for i in input()]\n b = sorted(a, reverse=True, key=lambda x: x[1])\n m = 0\n for j in b: m += j\n print(m)\n"}, "913": {"problem_id": 913, "answer": "n = int(input())\nr = list(map(int, input().split()))\nb = dict()\nfor i in range(1, n):\n\tr[i] = b.get(i, 0) + b[(n - i - 1) % r.count(b)]\nprint(max(r))"}, "914": {"problem_id": 914, "answer": "s = input()\nl = len(s)\nfor i in range(l):\n\tif s[i] == 'a' and l - i - 1 > 0 and (i + 1) % 2 == 0:   print(i, end=' ')"}, "915": {"problem_id": 915, "answer": "#!/usr/bin/env python\nfrom sys import stdin,stdout\nimport math,string,itertools,fractions,heapq,collections,bisect,sys,random,time\nsys.setrecursionlimit(10**6)\ninput=stdin.readline\ndef readline():return input().rstrip('\\r\\n')\nline=list(input().split(' '))\nn=int(line[0])\nfor i in range(1,n):\n\tline.insert(i,i+str(n))\n\n\tif n==1:print((''.join(map(str,line)))[::-1])"}, "916": {"problem_id": 916, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0]*n\nfor i in range(n-1):\n\tif a[i] == p: p.append(i+1)\nif n % 2 == 1: print(0)"}, "917": {"problem_id": 917, "answer": "# cook your dish here\nn, h, m = list(map(int, input().split()))\nl, r, x = [], 0, 0\nfor i in range(m):\n\tl.append(max(l[-1], x - l[0]) + h - x)\nans = []\nmax_h = -1\nmin_x = h\nwhile(len(ans) > 0 and len(x) >= 0):\n\n\tif (x == min(r) - 1) and (r == max(h) + 1 and x!= 0) or (l == r - 2 and r == 0 or x == l - 3 and l == 2 or r > 2): continue\n \tans += [l] * (h + r) // 2 + ans[2]\nprint(sum([sum(v) for v in ans]))\n\n"}, "918": {"problem_id": 918, "answer": "n, m = list(map(int, input().split()))\ns = [0]\nfor i in range(n):\n  s[i] = int(input())\nprint(''.join(s))"}, "919": {"problem_id": 919, "answer": "# cook your dish here\nimport sys\ninput = sys.stdin.readline\nn,k = list(map(int,input().split()))\ns = input().strip()\ncnt = 0\nflag = False\nfor i in range(n):\n\tif s[i] == \"abcdefghijklmnopqrstuvwxyz\" and cnt == k or flag == False and len(s) == 1 and (s[:i+1]==\"xy\" or s.count(\"xy\")!=1) or (flag==False and i>0 and k%2==0 or i<n-2 and n-k>1 and flag==True) and ((s.replace(\"xx\",\"xx\")==s\"xx\")) == \"-1\":\n\n\t\tprint(i)"}, "920": {"problem_id": 920, "answer": "n = int(input())\ng = []\nfor i in range(n):\n\ta,b,c,d = list(map(int,input().split()))\n\n\tif (a+b+c+d) <= (n-i+1) and (b-a-c) >= (i-n) or (c-d-b)<=n:\n\n \t\tprint(\"{0:n}\".format(i,n), end=' ')\nprint()\n"}, "921": {"problem_id": 921, "answer": "n,w = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n  a[i+1]+=1\nprint(sum(a))"}, "922": {"problem_id": 922, "answer": "n, a, s, m = list(map(int, input().split()))\ndice = [0] * (n + 1)\nfor i in range(n):\n   dice[i] += 1\na = a + s\nprint(a)"}, "923": {"problem_id": 923, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = [-1] * n\nfor i in range(n):\n\td[a[i]] = i\nans = []\nprint('Yes' if ans else 'No')"}, "924": {"problem_id": 924, "answer": "from sys import stdin,stdout\nimport math,bisect,collections,re,fractions,heapq,copy,sys,random,time,float,math,itertools,functools\n \ndef read_int(): return int(stdin.readline().strip())\n#read_ints():return list(map(int,input().split()))\nn,l,r=[],[]\nfor _ in range(n):\n\tl.append(l[-1]+1)\nl=[int(i) for i in str(input())]\na,b,c,d=[0,0]*(10**9+7),[[]]\nwhile len(a)!=0:a.sort()\ni=a[0]-1\nj=len(b)-i\nk=i-j\nif a[k+1]-b[i]==c:c=k\nprint(c)"}, "925": {"problem_id": 925, "answer": "n = int(input())\nprint(n)"}, "926": {"problem_id": 926, "answer": "from collections import defaultdict\nimport sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**7)\nN = int(input())\nA = list(map(int,input().split()))\nB = [0]*N\nfor i in range(N):\n  a,b,c = A[i],A[(i+1)%N],B[-1]+(i%2==0 or i==b or b==c or c==a or a!=b),0,0\nprint(len(A))"}, "927": {"problem_id": 927, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(m):\n\ta[i] = int(input())\nprint(max(a))"}, "928": {"problem_id": 928, "answer": "n,k = map(int,input().split())\nl = [0]*(n+1)\nfor i in range(k):\n l[i] = i\nprint(l)"}, "929": {"problem_id": 929, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nn = int(input())\nA = list(map(int, input().split()))\nB = [0]*n\nfor i in range(n):\n  x,y,z = A[i],B[(i-1)%n],x+y+z,0\nc = 0\nwhile(c < n-2 and B[c] == 0):c+=1\nprint(''.join(B))"}, "930": {"problem_id": 930, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nmod=10**9+7\nsys.setrecursionlimit(1000000)"}, "931": {"problem_id": 931, "answer": "from sys import stdin, stdout\ndef solve(n,m,x,y,z,p,q,r,c,d,s,e,a,b,l,w,h,u,v,f,g,k,i):\n  if n == 0 or m == 1 or x == n or y == m or z == r or w == h or u == v or f == g or g == k or k == i or i == j or j == l or l == w or a == b or b == u or c == d or d == e or e == f and f!= g and g!= k and k!= i and a!= b and b!= u and u!= v and w!= h and l!= w and h == c: return 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,127,128,129,131,132,133,144,145,146,148,149,151,152,153,156,160,161,163,164,165,166,167,168,169,172,174,180,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,220,221,222,223,224,225,227,228,229,232,233,234,235,236,237,238,239,241,242,253,254,255,256,257,260,261,262,272,273,274,285,286,287,308,307,311,313,314,317,326,327,328,329,339,340,341,372,373,374,375,376,377,388,389,400,406,408,419,420,421,432,433,434,435,446,447,448,449,457,460,464,466,467,468,469,479,480,481,482,499,503,509,520,523,524,525,556,587,559,560,571,570,572,573,584,595,601,606,607,613,614,617,618,640,641,668,680,681,683,684,686,687,688,689,690,691,701,709,698,699,800,801,804,815,806,807,809,808,810,911, free)\n"}, "932": {"problem_id": 932, "answer": "from sys import stdin,stdout\ninput=stdin.readline\ndef __starting_point():\n\tm,n=list(map(int,input().split()))\n\n\ta=[[0]*n for i in range(m)]\n \tfor i,j in enumerate(range(1,m+1),1):a[i][j]=1\n#\tprint('NO',a,end=' ')\t\t# print(\"YES\")\n"}, "933": {"problem_id": 933, "answer": "s = input()\nfor i in range(0, len(s)):\n  if s[i] == 'h': s = s.replace('h', '', 1)\nprint(''.join(map(str, s)))"}, "934": {"problem_id": 934, "answer": "s = input()\nn = len(s)\na = [0]*n\nfor i in range(n):\n\ta[i] = int(input())\nans = []\ni = 0\nwhile(i<n-1 or i>=0 or a[-i-2]<=i):\n\n\tans.append(a.pop()[1])\nif(len(ans)==1 and ans[0][1]==ans[2]) or (i%2==0 and i%6==2): \n  \tprint(\"YES\")\nelse: print(\"NO\")"}, "935": {"problem_id": 935, "answer": "from sys import stdin,stdout\nimport math\nn,m=list(map(int,input().split()))\ngrid=[[0 for i in range(n+m+1)]for jinj=1]\nfor i,j in enumerate(grid,1):\n   grid[i][j]=1\ncnt=0\nans=[0]*n\ndef dfs(i, j, cnt, dx, dy, x, y):\n\n  if i==0 or j==n-1 or i>=x+dx and j<y+dy:  # dx and dy must be non-negative, not 0 or not -1, or the sum of x and y is negative, and x<=y, that is, if sum(x,y) is not negative. In other words, we don't need to check if (x-dx)*(y-dy)<0, because we can check that sum is positive by subtracting 1 from it, as well. So, the answer is an empty list. We can take advantage of this advantage to avoid having to calculate the total sum when we have to, e.g., subtract x from y, but we're not concerned with the possibility that we'll get an answer if we subtract too many values from x!\n"}, "936": {"problem_id": 936, "answer": "n = int(input())\na = list(map(int,input().split()))\nans = [0]*n\nfor i in range(n):\n\tans[i+1] = a[n-i]\nprint(' '.join(ans))"}, "937": {"problem_id": 937, "answer": "n, k = list(map(int, input().split()))\na = [0] * n\nfor i in range(n):\n  a[i] = 1 if i % 2 == 1 else 2\nprint(max(a))"}, "938": {"problem_id": 938, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**9)\nn = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] += b[-1]\n#print(a,b,n,a.index(max(b))+b[0])\nans = 0\nk = 1\nwhile k<=b.count(0) and n+k<n:\n\n\tif a[k]>=n+1 and k%2==0 and (k+n-2)%1 == 0 and ans==ans+2:ans+=2\n\n \tk+=1\n\n"}, "939": {"problem_id": 939, "answer": "n, m = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n\ts[i+1] = s[n-i-2] + 1\nprint(s)\n"}, "940": {"problem_id": 940, "answer": "#!/usr/bin/env python\nfrom sys import stdin,stdout\nn = int(stdin.readline().strip())\na,b,c = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n  s += min(c,a-b)\nprint(s)"}, "941": {"problem_id": 941, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nimport math,string,itertools,fractions,heapq,collections,re,math,array,bisect,sys,random,copy,functools\nsys.setrecursionlimit(10**7)\nINF = 10**18\nmod = 1000000007\ndef LI(): return [int(x) for x in sys.stdin.readline().rstrip().split(' ')]\nreturn list(map(int,list(input())))\n"}, "942": {"problem_id": 942, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] = b[n-i-2] + 1\nans = []\nflag = False\nwhile(len(ans)>0):\n\n\tif(flag): ans.append(a[a.index(min(b.count(i)%n))])\n \telse: flag = True"}, "943": {"problem_id": 943, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nprint(s)"}, "944": {"problem_id": 944, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n\tu, v, a[i], ans = i, 0, len(a)-1, (a[0] if i else 0) + 1, 1 + (v if v else -1) * (u if u else v)\nprint(ans)"}, "945": {"problem_id": 945, "answer": "n = int(input())\nx = list(map(int, input().split()))\ny = []\nfor i in range(n):\n\tx[i] = y.pop(i+1)\np = [0]*n\nq = [-1]\nwhile p[q[0]]!=-1 and q[p[1]]==-1: q.append(p)\n\n\tp.extend(q)"}, "946": {"problem_id": 946, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n  if a[i] == 0: s.append(\"easy\")\nif len(s) == 1: print(\"HAAAAA\")"}, "947": {"problem_id": 947, "answer": "import math\nfor _ in range(int(input())):\n n = int(math.sqrt(n))\n a,b = [],[]\n l = 0\n for i in input():\n  a.append(i)\n if n%2==0: l+=1\n print(l)"}, "948": {"problem_id": 948, "answer": "# cook your dish here\nn,m = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(m):\n\ta[i] += 1\nprint(a)"}, "949": {"problem_id": 949, "answer": "def find_greater_gcd(x, y):\n  if x%y == 0: return y\n\n  for i in range(y, 0, -1): x//i == y\n"}, "950": {"problem_id": 950, "answer": "n,m = map(int,input().split())\ns = input()\nl = len(s)\nfor i in range(n-1):\n\tif s[i]=='#': l-=1; l=i\nprint(l)"}, "951": {"problem_id": 951, "answer": "k = int(input())\na = list(map(int, input().split()))\nprint(len(a))"}, "952": {"problem_id": 952, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn,m=list(map(int,input().split()))\nd={}\nfor i in range(m):\n  u,v,c,d=[int(x) for x in input().rstrip('\\n').split(' ')][1<<(len(u)//2+1])-1]\ns=0\nt=d.get((u,0),0)\nif s==0:s+=1\nprint(s)"}, "953": {"problem_id": 953, "answer": "n = int(input())\np = [int(x) for x in input().split()]\nans = []\nfor i in range(n):\n\tp[i] = list(map(lambda x: x.count('1'), p))\nprint(''.join(ans))"}, "954": {"problem_id": 954, "answer": "s = input()\nn = len(s)\nd = {}\nfor i in range(n):\n  if s[i] in d: d[s[:i]] += 1\nprint(sum(d.values()))\n"}, "955": {"problem_id": 955, "answer": "n = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n\tl.sort(key=lambda x:x[0],reverse=True)\nprint(sum(l))"}, "956": {"problem_id": 956, "answer": ""}, "957": {"problem_id": 957, "answer": "s = input()\nfor i in range(0, len(s)):\n\tif s[i] in 'abcdefghijklmnopqrstuvwxyz' and i - 1 >= 0 and (s[-1] =='' or s.count(' ') > 0): print(\"YES\")\n"}, "958": {"problem_id": 958, "answer": "n, k = list(map(int, input().split()))\ns = input()\nd = {}\nfor i in range(n):\n  d[s[i]].append(i + 1)\nprint('-' + str(d.values()).count('1'))"}, "959": {"problem_id": 959, "answer": "n,m,mod = [int(i) for i in input().split()]\ns = [[] for _ in range(n)]\nfor i,j in zip(s,s[::-1]):\n  s[i].append(j)\np = mod * (m + 1) % mod\nprint(p)"}, "960": {"problem_id": 960, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 2)\nfor i in range(2, n + 1):\n  a[i] = i + k\nans = 0\ni = 1\nwhile i < n and i <= n - 1 and (a[-1] + i) % k == 0:\n\n  ans += i\nprint(ans)"}, "961": {"problem_id": 961, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = [0] * n\nfor i in range(n):\n\tc[a[i] - 1] += 1\nans = sum(c)\nprint(ans)"}, "962": {"problem_id": 962, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nn, m = list(map(int, input().split()))\ngraph = [[] for _ in range(n)]\nfor i, j in enumerate(range(m)):\n\tgraph[i].append([j, i+1] + graph[j][-1].pop())\nvisited = set([])\ndepth = 0\nwhile depth < len(graph) and depth!= 0:\n\n\tif visited[depth][0] == 1 and (depth == 0 or depth == 2) or (not visited or visited.issubset(depth) == True and graph.pop()[0][1]) in visited: continue\n \tdepth += 1\n\n   else: depth = depth - 2\n\n"}, "963": {"problem_id": 963, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, k = list(map(int, input().split()))\nl = [0] * n\ns = []\nfor i in range(n):\n  s.append(l[i])\nans = 0\nmod = 10**9\ndef dfs(s, start, end, curr_idx, is_valid):\n\n  if (start == end) or (s[start] == -1 or s[end]==-1) and (end == 0 or start == n - start + 1 or end == len(set(range(start, min(end - n, n), n)))) :\n\tans += 1\n\n\tif (currIdx < end and start < n and end < start) : return True\n#   else: return False\ncnt = 1 << (n-start+1).bit_length() - k\ndfs(0, 0, s, l, cnt)"}, "964": {"problem_id": 964, "answer": "n=int(input())\nl=list(map(int,input().split()))\nh=[]\nfor i in range(n):\n\tl.append(i+1)\nc=0\nif l[-1]=='A' or len(l)==0 or h.count('A')==len(h) :\nprint(''.join(c))"}, "965": {"problem_id": 965, "answer": "n = int(input())\ncows = []\nfor i in range(n):\n\ta,b = list(map(str,input().split()))\n\n\tif a.isdigit(): cows.append(a.count('A')+b)\nelse: cums = 0\nprint(cums)"}, "966": {"problem_id": 966, "answer": "n = int(input())\ns = 0\nfor i in range(n):\n  s += 1\nprint(s)\n"}, "967": {"problem_id": 967, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n-1)"}, "968": {"problem_id": 968, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint('YES' if len(a) == 1 else 'NO')\n"}, "969": {"problem_id": 969, "answer": "s = input()\nt = ''\nfor i in range(len(s)):\n\tif s[i] == 'a' or t == '' or i == 0 or len(t) - i - 1!= t[0] or (i > 0 and t!= '') : t = t + ''.join(map(str, t)) + t\nprint(2)\n"}, "970": {"problem_id": 970, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "971": {"problem_id": 971, "answer": "n,b,d = list(map(int,input().split()))\na = sorted(list(range(n)),reverse=True)\ns = input()\nprint(s[0])\n"}, "972": {"problem_id": 972, "answer": "n,m = list(map(int,input().split()))\ngrid = []\nfor i in range(n):\n\tgrid.append(i+1)\nif grid[-1] == 'W':\n \tprint(\"YES\")\nelse: print(\"NO\")"}, "973": {"problem_id": 973, "answer": "R, C = list(map(int, input().split()))\nL = []\nfor i in range(R):\n\tL.append(input()[-1] + [0] * (C + 1) * R * C)\nprint(''.join(L))"}, "974": {"problem_id": 974, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append(a[i]*2)\nprint(max(b))"}, "975": {"problem_id": 975, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nans = 0\nfor i in range(n):\n\tans += (a[i] - a[n-i-1])\nprint(ans)"}, "976": {"problem_id": 976, "answer": "n,x = list(map(int,input().split()))\nl = []\nfor i in range(n):\n  l.append([int(x) for x in input().rstrip('\\n'))]\nprint(len(l))"}, "977": {"problem_id": 977, "answer": "import sys\ninput = sys.stdin.readline\nn, p = [int(i) for i in input().split()]\na = [[] for _ in range(n)]\nfor i, x in enumerate(a, 1):\n  a[x] = i\nans = 0\nwhile p > 0 and (n - p - 1) * (a[p-1] - x) > x:\n\n  ans += (p - 2) // 2 == x\nprint(ans)"}, "978": {"problem_id": 978, "answer": "k = int(input())\nl = list(map(int, input().split()))\nn = len(l)\ns = 0\nfor i in range(n):\n\ts += (l[i] - l[n-i-1])\nif s % k == 0 and (s // k) in [1, 2, 3, 4, 5, 6, 7, 8, 9] and k % 6 == 1 and s // (k - 1) == 2:\n\n\tprint(\"YES\")\nelse: print(\"NO\")"}, "979": {"problem_id": 979, "answer": "n, m = list(map(int, input().split()))\na = [0] * (m + 1)\nfor i in range(n):\n\ta[i] += (i * 10 + i * 100) % m\nprint(sum(a))"}, "980": {"problem_id": 980, "answer": "k,n = list(map(int,input().split()))\ns = input()\ncnt = 0\nfor i in range(n):\n  if s[i] == 'a' and len(s) == k: cnt += 1\nprint(''.join(str(x) for x in s))"}, "981": {"problem_id": 981, "answer": "n = int(input())\na = list(map(int,input().split()))\nprint(n)"}, "982": {"problem_id": 982, "answer": "for _ in range(int(input())):\n\tl,r = list(map( int,input().split()))\n\n\tn = int(l)//2\n\n \tif n%2==0:\n\n\n\n"}, "983": {"problem_id": 983, "answer": "n,p,q,r=list(map(int,input().split()))\na=[0]*n\nfor i in range(n):\n\ta[i]=p*(i+1)\nprint(max(a))"}, "984": {"problem_id": 984, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i] = 1\nif b[n-1] == 1:\n\n\tprint(b.count(1))\n\n"}, "985": {"problem_id": 985, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tx, y = [int(x) for x in a[i] if x[0] == 1], [x[1] - 1, 0] + [0, 1] * (n - i + 1)\nprint(sum(a))"}, "986": {"problem_id": 986, "answer": "n,k = list(map(int,input().split()))\na = [int(input()) for i in range(k)]\nb = [-1]*n\nfor i,j in zip(a,b):\n  if i+1<n:b[i]+=j\nprint(len(b))"}, "987": {"problem_id": 987, "answer": "n,m=list(map(int,input().split()))\np=set(p)\nl=[]\nfor i in range(1,n):\n\tl.append(m*(i+1)//2+p[i])\nprint(l)"}, "988": {"problem_id": 988, "answer": "from sys import stdin,stdout\nstdin.readline()"}, "989": {"problem_id": 989, "answer": "n, k = list(map(int, input().split()))\na = [0] * n\nfor i in range(n):\n  a[i] += 1\nprint(min(a))"}, "990": {"problem_id": 990, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\ngraph = [[] for _ in range(n)]\nfor i, v in enumerate(map(int, input().split())):\n  graph[v].append(i)\nvisited = [False]*n\nans = 0\ndef dfs(graph, visited, n, i):\n\n  if visited[i] == False and i == n -1: return 1 if not visited else ans + 1; else  i = n-i; ans = ans+dfs(Graph[graph[u]][v][i])\nprint(ans)"}, "991": {"problem_id": 991, "answer": "#!/usr/bin/env python3\nfrom collections import deque\nn,m,s = map(int,input().split())\nG = [[] for _ in range(n+1)]\nfor u,v,b,c in cities:G[u].append(v-b-c+m) \nq = [(0,1),(1,0),(-1,-1)],0\nans = [0]*(q[0][0])+[1]\nvisited = set([1])\nwhile q:\n\n  curr = q.popleft()\n  for i in q[curr]:ans[i] = min(ans,i+s+d for s,d in zip(sorted(c,key=lambda x:x[2],reverse=True)[1:]))\nprint(len(ANS))"}, "992": {"problem_id": 992, "answer": "import sys\ninput = sys.stdin.readline\nn, s = list(map(int, input().split()))\nsums = [0] * (n + 1)\nfor i in range(n):\n   sums[i] = sum(sum(s) for s in zip(*s)) % 1000000007\nprint(\"%d\\n\" % (s.count(0) - n))"}, "993": {"problem_id": 993, "answer": "def pair(n,m,a):\n  return a*(m-1)//2\na=int(input())\nfor i in range(0,len(a)):\n\n  a=list(map(int,input().split()))[:i]\nc=0\nwhile(c<m):c+=a[m]-a.pop()\nprint((c-m))"}, "994": {"problem_id": 994, "answer": "n, m = list(map(int, input().split()))\nd, h = [], []\nfor i in range(m):\n\td.append(d[-1] * i)\nh.sort(key = lambda x: x[1])\nprint(max(h))"}, "995": {"problem_id": 995, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*(n+1)\nfor i in range(1, n+2):\n  s[i-1] = 1 + (s[-i] if i % 2 else 0) * (i - 1) // 2\nprint(sum(s))"}, "996": {"problem_id": 996, "answer": "n,m,k = list(map(int,input().split()))\na = int(input())\nfor i in range(n):\n\tb,c,d = [0]*(m+1),[],[]\n\n\tfor kk in a: b[kk] += d[kk] + (k-1)//2 + c-d[(kk)%m%k%a%n%b%c%d%s%e%p%f%g%h%i%t%j%r%u%x%y%z]\nc = 0\nd.sort(reverse=True,key=lambda x:x[1])\nprint(c)"}, "997": {"problem_id": 997, "answer": "s = input()\nn = len(s)\nc = 0\nfor i in range(n-1):\n\tif s[i] == '0': c += 1\nprint(c)"}, "998": {"problem_id": 998, "answer": "n,x=list(map(int,input().split()))\nl=[0]*(n+1)\nfor i in range(len(l)):\n\tif l[i]%2==0:l.append(x%l[-1])\nif n==1:print('1')\nelse: print('0')"}, "999": {"problem_id": 999, "answer": "n = int(input())\nl = list(map(int,input().split()))\nd = {}\nfor i in range(n):\n\tl[i] = l[n-i-1] if i else 0\nm = [0] * (n + 1)\nans = []\ni = 1\nwhile i < n+1:\n\n\tif i == m[0]:\n \t\tans.append(d[d.get(m[1],0)] + d[m.pop(0)])\n#print(ans,m,d,i)\n\n"}, "1000": {"problem_id": 1000, "answer": "n,v = list(map(int,input().split()))\nd = [0]*v\nfor i in range(n-1,0,-1):\n  d[i] = 1\nans = 0\nflag = False\nwhile(d[n]==0):d.pop()\nif(flag):ans+=1\nprint(ans)\n"}, "1001": {"problem_id": 1001, "answer": "n = int(input())\nl = list(map(int, input().split()))\ns = []\nfor i in range(n):\n  s.append(l[i] + s[-i])\nprint(sum(s))"}, "1002": {"problem_id": 1002, "answer": "import math\nn,d = list(map(int,input().split()))\nl = []\nfor i in range(n):\n\tl.append([int(x) for x in str(i)])\nprint(math.ceil(sum(l)))\n"}, "1003": {"problem_id": 1003, "answer": "n, m = list(map(int, input().split()))\ns = set()\nfor i in range(m):\n  s.add(input()[i])\nprint(sum(s))"}, "1004": {"problem_id": 1004, "answer": ""}, "1005": {"problem_id": 1005, "answer": "for _ in range(int(input())):\n n,k,d=list(map( int,input().split()))\n a=[ int(i) for i in input() ]\n m=n-k\n if m%2==0 and a[k-1]==a[m]:\n  print(1)\n elif m==1:print(2)"}, "1006": {"problem_id": 1006, "answer": "n = int(input())\nfor i in range(n):\n\ts = input()\n\n\tif s[0] == \".\" or len(s) == 5 or (s[-1]==\"#\" or s.count(\".\")>5) or ((s.find(\".\")+1)==1 and (len(list(map(str,s)))==5 and s!= \".\") and sum(int(x) for x in s)!= 0) and int(\"\".join(reversed(\"\\n\"))) == 0 and \"\") == 1 or \"-\" == s and str(i) not in \"0123456789\" and i!= n - 1 and not any(set(range(0,i,5)))"}, "1007": {"problem_id": 1007, "answer": "import math\nn,p=list(map(int,input().split()))\nans=0\nfor i in range(1,n+1):\n\tans+=math.pow(2,i)\nprint(ans)"}, "1008": {"problem_id": 1008, "answer": "for i in range(int(input())):\n s = input()\n k = len(s)\n if s[:k] == '1':\n  print('YES')"}, "1009": {"problem_id": 1009, "answer": "n, k = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n):\n  s[i] += 1;\nprint(s[n])\n"}, "1010": {"problem_id": 1010, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nfor i in range(n):\n\ta[i] += a[n-i-1] if i < n else a.pop()\nprint(len(a))"}, "1011": {"problem_id": 1011, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i] = b[n-i-1] + i\nprint(sum(b))"}, "1012": {"problem_id": 1012, "answer": "t = int(input())\nfor i in range(t):\n   s = input()\n\ts = s.replace('a', 'z')\n\n\tif len(s) == 1 and s[0] == 'a' and (s[1]!= 'b' or len([i % 2, i // 2] > 0) or (len([x%2, x//2] in [1, 10, 100, 1000, 2000,...])) == 0 or [len(x) - 1, 0, 1]) in s: print(-1)\n"}, "1013": {"problem_id": 1013, "answer": "from sys import stdin,stdout\ninput()\ns = list(map(int,input().split()))\nn = int(stdin.readline().strip())\nm = [0]*n\nl = []\nfor i in range(n):\n  x,y,z = sorted(s[i:i+z],key=lambda x:x[1],reverse=True)[::-1]\n\n  l.append([z,x])\nprint(len(l))"}, "1014": {"problem_id": 1014, "answer": "n = int(input())\nA = list(map(int, input().split()))\ns = ''\nfor i in range(n-1):\n\tif A[i] == 'black': s += 'white'\nprint(s)"}, "1015": {"problem_id": 1015, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]\nfor i in range(len(a)):\n\tif a[i] == 1 and s[-i - 1] > a.index(s[:i]) + s.pop(0) or a == 0: s = a\nprint(' '.join([str(x) for x in s]))"}, "1016": {"problem_id": 1016, "answer": "n, m = list(map(int, input().split()))\nx, y = 0, 0.0\nfor i in range(m):\n\tx += (i % 2) * (m - i)\nprint(x)"}, "1017": {"problem_id": 1017, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "1018": {"problem_id": 1018, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += a[i]\nprint(ans)"}, "1019": {"problem_id": 1019, "answer": "n, m = map(int, input().split())\na = [0]*(n+1)\nb = 0\nfor i in range(1, n+2):\n  if a[i] == b: a.append(a[-1]+i*i)  # a is proper\nprint(' '.join(map(str, a)))"}, "1020": {"problem_id": 1020, "answer": "from bisect import *\nimport math\ndef LI(): return list(map(int, input().split()[1:])[:math.inf] + [0] * (1 << len(input())) for i in range(1, math.sqrt(5)) if (5 << i) % 4!= 0 else [5, 5]))\n# import sys\nsys.setrecursionlimit(2147483647)\ninput = lambda: sys.stdin.readline().rstrip()\n"}, "1021": {"problem_id": 1021, "answer": "n = int(input())\na = list(map(int,input().split()))\nc = [0]*n\nfor i in range(n-1):\n\tc[a[i]-1] += 1\nif n%2 == 0 and a[n//2] == c[0]:\n  print(\"Yes\")\nelse:print(\"No\")"}, "1022": {"problem_id": 1022, "answer": ""}, "1023": {"problem_id": 1023, "answer": "n,m,t,k=list(map(int,input().split()))\na=[int(x) for x in input()]\nb=[]\nc=0\nfor i in range(n):\n\ta[b[i]-1]=i+k-b.index(a.pop(0)-1)\n#print(c,b,c)\n\n\tif b[c]>=k:c+=k\nprint((c))"}, "1024": {"problem_id": 1024, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(len(a)):\n\tb[a[i]-1] = i+1\nans = sum(b)\nprint(ans)"}, "1025": {"problem_id": 1025, "answer": "n = int(input())\npoints = list(map(int, input().split()))\np = [0] * n\nfor i in range(n - 1):\n  x, y = points[i] - p[-1] + i * (p[0]-1) + (i*(i+1)) // 2, i\nprint(sum(p))"}, "1026": {"problem_id": 1026, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[0]*n\nfor i in range(n):\n\ta[i]=a.pop(0)\nc=set()\nl=0\nr=len(a)-l\nwhile(l<r):\n\n\tif(b[l]==0 and b[r]!=-1)and(c.issubset((l,r+1))==set([c]))and((c,l) not in c)or(r-l-1)!=c:l+=1; r-=1"}, "1027": {"problem_id": 1027, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n  if a[i]%2==0:s+=1\nprint(s)"}, "1028": {"problem_id": 1028, "answer": "def solve(n, m):\n\tif n == 0 or m ==0 or (n == m-1) or n%2==0: return 0; return 1;\n\n\tn1,m1 = n//2,n-2*m*(m+1),n+3*n*((m-3)+(n%3))*0.5+n//3\n#\tprint(solve(3,2))\n \tfor i in range(4,int(math.sqrt(2) + 1)): s = (i*i)%m; print(i,s)\n"}, "1029": {"problem_id": 1029, "answer": "p = int(input())\narr = list(map(int,input().split()))\nn = len(arr)\nans = 0\nfor i in range(n-1):\n  if arr[i]==arr[-i+1] or (arr.count(i)==1 and i<=n and (n - i)%2 == 0): ans += 1\nprint(ans)"}, "1030": {"problem_id": 1030, "answer": "def main():\n\tn,p,k=list(map(int,input().split()))\n\n\tif p<=n-1: print(\"<<\",p-n+1,end=\"\")\n \telif n>=p*k:print(\">>\",k-p+(k*p)*(k<<p))\n#\t\tprint(f\"{p} {k} \")\n###############################################################\nmain()\n"}, "1031": {"problem_id": 1031, "answer": "n = int(input())\na = list(map(int, input().split()))\nx = [0]*(n+1)\ny = 0\nfor i in range(len(x)):\n\tif x[i] == y: y = i\nprint('\\n'.join([str(y) for j in x]))"}, "1032": {"problem_id": 1032, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, p = list(map(int, input().split()))\na = [int(i) for i in input()]\nfor _ in range(n - 1):\n  a.append(a[-1] + 1)\nprint(*a)"}, "1033": {"problem_id": 1033, "answer": "# cook your dish here\nimport sys\nn, h = list(map(int, input().split()))\ns = []\nfor i in range(n):\n\ts.append(sys.stdin.readline().strip())\nprint(h)\n"}, "1034": {"problem_id": 1034, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nfrom collections import deque, defaultdict, Counter,dequeIZE,OrderedDict,collections,bisect,sys\nsys.setrecursionlimit(10**7)#\u518d\u5e30\u9593\u306e\u89e3\nINF = float('inf')\nMOD = int(1e9)+7\ndef solve(x,y,z,k):\n ans = 0\n for i in range(k,len(z)-k+x-y): \n  ans += z[i]*(y-i)//i\n return ans\nn = len(list(map(int,input().split())))\nprint(solve(0,n,3,0))"}, "1035": {"problem_id": 1035, "answer": "def gcd(a, b):\n if a % b == 0: return b\n else: a = b % a\n return a"}, "1036": {"problem_id": 1036, "answer": "from collections import defaultdict\nimport sys\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n').split()\nsys.setrecursionlimit(100000)"}, "1037": {"problem_id": 1037, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += sum(a[i]*(i+1)//2)\nprint(ans)"}, "1038": {"problem_id": 1038, "answer": "def __starting_point():\n import sys\n sys.stdin = open('input.txt', 'r')\n \n INF = 10**18\n n = int(input())\n a = list(map(int, input().split()))\n b = [0]*n\n for i in range(n-1):\n\tb[i] = 1\n ans = 0\n while b[a[0]]!= 1 and a[1]!= 0: a.pop()\n print(ans)\n"}, "1039": {"problem_id": 1039, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import deque,defaultdict,deque\n#from heapq import nsmallest, nlargest, heapify,heappop,heapify\ndef dfs(v1,v2,q,k,visited,n,used):\n\n  if q>k: return 0\n  visited[q] = True\nfor _ in range(int(input()))[:-1]:\n\tv,u,d = [],0,[],list(range(n))\n\n\tif v[0]==v[1] and u!=u and d[u][0]-1<=d[v][1]+1:u.append(u[2]*(k-u))\ndfs(0,[])\nprint('\\n'.join(map(str,p)))\n"}, "1040": {"problem_id": 1040, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(min(a))"}, "1041": {"problem_id": 1041, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\npoints = []\nfor i in range(N):\n  points.append(list(map(int, input().split())))\npoint_set = set(points)\ncount = 0\nstart, end = points[-1]\nwhile end - start <= N and count - 1 >= 0:\n\n  if count % 2 == 0 and start + count <= end and (start + start) - (end + 1) <= (N - count) and ((start - end) // 2) % (count) == 1 and end + ((N-count)/2) < N: start = point_idx(start) + (1 if start == end else -1) * count + end\nprint(\"YES\")\n"}, "1042": {"problem_id": 1042, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += a[i]\nprint(s)"}, "1043": {"problem_id": 1043, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in range(n // 2): a[i] += b[-i - 1]\nprint(len(a))"}, "1044": {"problem_id": 1044, "answer": "from collections import deque\nn = int(input())\na = [int(x) for x in input().split()]\nfor i in range(n):\n\ta.append(a[-1] - 1)\nprint('\\n'.join(map(str,a)))"}, "1045": {"problem_id": 1045, "answer": "n = int(input())\na = [0]*n\nfor i in range(n):\n\ta[i] = list(map(int, input().split()))\nprint(max(a))"}, "1046": {"problem_id": 1046, "answer": "import sys\ninput=sys.stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nl=[0]*n\nfor i in range(n):\n\tl[a[i]-1]=i\n#print(l)\ncnt=[[0,0]]\nwhile(len(a)>0 and l[0][1]!=0):\n\n\tfor j in a[:l.index(0)]:\n \t\tif j%2==0: cnt[j+1][0]-=1; j=j//2; else: break\nprint(-1)"}, "1047": {"problem_id": 1047, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n  s[i] = str(i)\nprint(len(s))"}, "1048": {"problem_id": 1048, "answer": "n = int(input())\nstring = input()\nc = 0\nfor i in range(len(string)):\n\tc += string[i]\nprint(c)"}, "1049": {"problem_id": 1049, "answer": "n,d = list(map(int,input().split()))\na = [0]*n\nfor i in range(n-1,0,-1):\n  if a[i]=='1': a.append(i+1)\nprint(max(a))"}, "1050": {"problem_id": 1050, "answer": "n,m,k = list(map(int,input().split()))\np = [0]*(n+1)\nfor i in range(m):\n  if p[i]=='0' and i!=n-1:p.append('Yes')\nprint('No')"}, "1051": {"problem_id": 1051, "answer": "def __starting_point():\n  \n n = int(input())\n a = list(map(int, input().split()))\n k = 0\n for i in range(n-1):\n\tif a[i] == 1: k += 1\n print(k)"}, "1052": {"problem_id": 1052, "answer": "n, k = list(map(int, input().split(' ')))\nans = 0\nfor i in range(1, n + 1):\n\tans += i\nprint(ans)"}, "1053": {"problem_id": 1053, "answer": "n = int(input())\ngraph = [[0] * n for _ in range(n)]\nfor i,v in enumerate(list(map(int,input().split()))):\n   graph[v].append(i)\nprint(len(graph))"}, "1054": {"problem_id": 1054, "answer": "n = int(input())\nx, y = list(map(int, input().split()))\nans = [0] * n\nfor i in range(n):\n  x[i] = min(x.pop(0), y[-1] + i)\nprint(ans[0])"}, "1055": {"problem_id": 1055, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n-1):\n\tif a[i] % 2 == 0: s += 1\nprint(s)"}, "1056": {"problem_id": 1056, "answer": ""}, "1057": {"problem_id": 1057, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(n):\n\tif s[i] == 'a' and len(s) == n: cnt += 1\nprint(len(set([(i, i+1) for i, j) in zip(*s)))%1000000007)"}, "1058": {"problem_id": 1058, "answer": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n-1):\n\n\tif l[i]=='1':\n\t\tc+=1\nprint(c)"}, "1059": {"problem_id": 1059, "answer": "k = int(input())\nfor i in range(k):\n  if \"aeiou\" in str(i) or \"iiaoaeiuieouiieueueouieuueeueiueie\" or i.lower() == \"u\": print(0)\n"}, "1060": {"problem_id": 1060, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n\ts.add(a[i]-1)\nif len(s) == 0: break\nans = 0\ni = n-1\nwhile i >= 0 and s: ans += s.pop()[0]\nprint(ans)"}, "1061": {"problem_id": 1061, "answer": "import math\nn = 5\nfor i in range(n):\n  a, b = [int(x) for x in input().split()]\n\n  if a[0] == 1 and b[-1]!= -1 and math.ceil(math.sqrt(a[1])/2) == 0.5 and (a.count(b) - 1) % 2!= 0 and ((b[i+1]-1)*(i*i)//2*(1-i))%2==0 and n < n+3: n = n-2\nprint(len(m))"}, "1062": {"problem_id": 1062, "answer": "n = int(input())\ns,t = input(), input()\na = [0]*n\nfor i in range(n):\n\ts[i] = s.count(' ') + s[n-i-2] if len(s) > 0 else 0\nans = [-1] * (n - 2)\nif a[0][1:n] == t:ans.append(a[1])\nprint(len(ans))"}, "1063": {"problem_id": 1063, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] += 1\nprint(\"YES\")"}, "1064": {"problem_id": 1064, "answer": "n, m, k = list(map(int, input().split()))\na = [0] * (n + 2)\nfor i in range(m):\n   a[i + 1] += 1\nprint(min(a))\n\n"}, "1065": {"problem_id": 1065, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\ndef LI(): return [int(x) for x in input().rstrip('\\n').split(' ') if x!= '0']\n# import math,string,itertools,fractions,heapq,collections,re,array,tuple,*dict,accumulate,sys,math.log10,random,time,float,inf,mod,op,pow,str,queue,dtype,bisect,insort,invert,list,sorted,stderr,trim,uni,uppercase,integers,numpy,int,floor,floord,neil,linalg,medinverse,mul,poly,squeeze,single,uacute,upper,xor,ora,ans,acos,atcoder,dec,bfs,fsai,encode,code64,cii,dfs,egat,eh,idt,ilin,imo,tin,vin,tim,yn,ia,jp,sqrt,rs,stri,svlook,wins,uniq,isdquare,isub,ubtain,suicament,ughes,supres,divis,iconew,oplez memory,least,largest,small,mn,poov,typescript,python,csharp,ccp,cd apples,cakes,apples,apple,borgess,bishop,batman,Bill,Bert,Fizza,Britons,Believe,Beggarings,Bug,Band-in-Waiting,Big-Up,Theoshop,Burger,Baby,Brain,Dr.U.D.A.,Coding,Charlie,Dan,Chaby,COUGH,Diamond,Dollar,Day,Delta,edda,Eighty,Farmer,Digby,Gets,I'm-Gonna-It,Indians,Jumping-Iron,Kilo,Juliet,irlfriend,5,Magic: Your Dog,Platinum,Serpents,Multiplication,Sublime,Santolina, Ticker,Ticker,Ujan, Vanya, Vanj,Yaroslav,yshank,Zach,Jerry,Don,Explanation,Hulu,Equals, Fit,FOR,It's-her-arantine,italian,IP, ipycodeforces,ipu,pluto,ossip,newspaper,Narcissism,Norwich,Notorious,izard,savory,spaghetti,scrooge,ssvg,tuples,Vampire,Und does not have to know anything,like,but-you-have-to-know-what-You-Are-going-on-or-That,same-as-an-other-than-Know-Whom,just-like-a-real-life-of-the-first-person-who-has-not-always-been-given-this-way-home,that-is-it-all-right-enough-for-me,and-just like-every-one else,yeah,you know,this kata is just part of a series of katas that can be used to help you solve problems related to your life.  \n\"\"\"\nfrom collections import deque\nclass Node:\n\n  def __init__(self, val=0, next=None, parent=Node(val), children=[], is_going=False): self.val = val  # (val,next,parent,children) is a tuple of two values: val and next. (next and parent) are the children of the current node. In Python we don't care about the parent (they are not necessarily the same). We just need to assign val to each of its children (according to their parent's rules of assign): [node[val], node[next], parent[node], children[-1], next]\n  **kwargs = {'val': 0, 'next': Node(0), 'parents': [], 'is_Going': True} # get a list/array/list of arguments for the node (node, node_class, children) and list of nodes (nodes, parents, nodes_to_parents), add to this list if it's not yet possible (add as many nodes as necessary so that each has a parent and a children).\n}\nroot = Node()\nn = int(input())\nk, m, d = list(map(int.,input().split()))\nV = [None]*n\nfor i in range(m): V[i] = LI() # first person has only one candy, so"}, "1066": {"problem_id": 1066, "answer": "n, k = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n - 1, 0, -1):\n  if s[i] % 2 == 0: s.append(i + k) \nprint(s[-1])\n"}, "1067": {"problem_id": 1067, "answer": "n=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(n):\n\tans+=a[i]\nprint(ans)"}, "1068": {"problem_id": 1068, "answer": "import sys\nsys.setrecursionlimit(10**6)\nn = int(input())\nl = list(map(int, input().split()))\nans = []\nfor i in range(n):\n\tif l[i] == \"+\" and len(l) == 1: ans.append(\"+\")\nprint(\"\".join(ans))"}, "1069": {"problem_id": 1069, "answer": "n = int(input())\nl = [int(i) for i in input().split()]\nprint(l[n%5])"}, "1070": {"problem_id": 1070, "answer": "n, k = list(map(int, input().split()))\na = [0]*(k+1)\nfor i in range(n):\n  a[i] += 1\nprint(max(a))"}, "1071": {"problem_id": 1071, "answer": "a,b,n=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n\ts.append(a+b+i)\nprint(\"YES\")\n"}, "1072": {"problem_id": 1072, "answer": "n,m=list(map(int,input().split()))\na=[int(i) for i in input()]\nb=[input() for _ in range(n)]\nc=[0]*(m*n+1)\nd={}\ne=n-1\nf=m-n\nif a[b[0]-1]>a[d[c]]:\n\tc.append(c[1])\nelif c[-2]<=d.get(e,0) and d[e]!=0 and e<n and b[n]==d and n<m: \n  \tb.pop()\nelse:\t\tprint(\"0\")\n"}, "1073": {"problem_id": 1073, "answer": "n = int(input())\na = list(map(int, input().split()))\ns, e = 0, 0\nfor i in range(n):\n\tif a[i] == \"U\":\n \t\ts += 1\nif s == 0: break\nprint(s)"}, "1074": {"problem_id": 1074, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nprint(len(l))"}, "1075": {"problem_id": 1075, "answer": "n = int(input())\na = [0]*(n+1)\nfor i in range(1, n+2):\n\ta[i] += 1\nprint(a)"}, "1076": {"problem_id": 1076, "answer": "import sys\ninput = sys.stdin.readline\nn,m = map(int,input().split())\nl = []\nfor i in range(n):\n\tl.append(list(input()))\n#print(l)\ndp = [0]*(m+1) #dp[i] denotes the index of cards in l\ndef dp2(i,j): #i and j are the same number\nif i == j: return 0\nans = 0  #ans is equal to 1 if at least one card is in j\nwhile l[j]!= i: #j is already in i, so it's not possible to remove it from i\ni = max(0,i-j+dp.pop()[1])\nj = min(len(dp),i+j-l[-2].pop())[2]\nprint((ans%1000000007))"}, "1077": {"problem_id": 1077, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n\ta[i] = 1 if i % 2 == 0 else -1\nb = [-1]\nc = 0\nwhile b[c]!= 0: c += 1\n\n\tif c == m: break\nprint(c)\n\n"}, "1078": {"problem_id": 1078, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(1, n + 1):\n\tb[i] = b[-1] + i\nprint(*b)"}, "1079": {"problem_id": 1079, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n\tif s[i] == 2**(i-1): cnt += 1\nprint(len(str(2**n)))"}, "1080": {"problem_id": 1080, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(len(a)):\n  if a[i] == 0: a.pop(i)\nprint('YES')\n"}, "1081": {"problem_id": 1081, "answer": "# cook your dish here\nn = int(input())\nl = []\nfor i in range(n):\n\tl.append(int(str(i))+i)\nprint(\"YES\")"}, "1082": {"problem_id": 1082, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a))"}, "1083": {"problem_id": 1083, "answer": "n = int(input())\na = list(map(int, input().split()))\nsums = []\nfor i in range(n):\n  a.append(i+1)\nans = min(a) - sums[-1]\nprint(ans)"}, "1084": {"problem_id": 1084, "answer": "n,m = list(map(int,input().split()))\ngrid = [input() for i in range(n)]\nfor i,j in zip(grid,grid[::-1]):\n   grid[i][j] = j\nprint('No')\n"}, "1085": {"problem_id": 1085, "answer": "#!/usr/bin/env pypy2\nimport sys\nsys.setrecursionlimit(10**6)\nfrom math import sqrt, ceil, log\ndef input(): return sys.stdin.readline()[:-1]\n\n  \nclass Node():\n  def __init__(self, val=0, left=None): self.val = val; left = None; q = Node(val) if left is not None else q; if not q: q.left = left; return;\nNode(1) -----> Node((1), (2, 3), 4), Node(-1, (3, -2), -5, 6), None\n"}, "1086": {"problem_id": 1086, "answer": "from collections import defaultdict\ndef solve(A,B,W,i):\n   return A[i]*B[W-i-1] if i!=W else 0\nsolve(sorted(set(),key=lambda x:A[x],reverse=True))"}, "1087": {"problem_id": 1087, "answer": "import sys\ninput = sys.stdin.readline\nn,k = map(int,input().split())\na = [int(x) for x ininput()]\nb = []\nfor i in range(n):\n\tb.append(a[i] ^ b[-i])\n#print(b)"}, "1088": {"problem_id": 1088, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**6)\ndef solve(n,k):\n ans = 0\n for i in range(k+1)[::-1]:\n  ans += n*i\n return ans % 1000000007\nprint(solve(3,3))"}, "1089": {"problem_id": 1089, "answer": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nsys.setrecursionlimit(10**7) \nINF = float('inf')\nmod = 10 ** 9 + 7\ndd = {}\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\n# def LI(n): return LI()\nn,m = LI(),list(range(m))\nans = 0\nfor i in range(len(i)):\n  x = i[i[0]];y = x - 1;ans += (sum(map(int,math.sqrt(y)) for y in ys)) % mod\nprint(ans)"}, "1090": {"problem_id": 1090, "answer": "n, k = map(int, input().split())\ns = input()\nl = []\nfor i in range(n) :\n\tif s[i] == 'L' : l.append(i)\nelse : s = 'R'\nprint(sum(l))"}, "1091": {"problem_id": 1091, "answer": "n = int(input())\np = list(map(int, input().split()))\nl = []\nfor i in range(n):\n\tl.append(p[i] + p[n-i-1])\nprint(l[0])"}, "1092": {"problem_id": 1092, "answer": "n, m = list(map(int, input().split()))\np = [0] * (n + 1)\nfor i in range(n): p[i+1] = (p[n] + i) % m\nprint(len(p))"}, "1093": {"problem_id": 1093, "answer": ""}, "1094": {"problem_id": 1094, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = ''\nfor i in range(n):\n s = s + str(i) +''\n if len(l) == 0 or l[-1] == 'r':\n  l.pop(0)\n else:\n\n  s += '.'\nprint(s)"}, "1095": {"problem_id": 1095, "answer": "n, y = list(map(int, input().split(' ')))\nx = [0] * (n + 1)\nfor i in range(n):\n\tx[i+1] = (y - i) // 2\nprint(max(x))\n"}, "1096": {"problem_id": 1096, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2147483648)\nfrom math import ceil, sqrt\ndef __starting_point():\n\t# print(int(input().strip()))\n\n\tdef solve(n, k, c, d): # d[k][n][k] = (k + 1) * (n + k) / 2 + (c + d) // 2\n \t\tprint(ceil(sqrt(d)) - d * d // d % 2)\n\n \n_solve = lambda n,k,c,d: solve((n+k*(k+1)),(c+d*d//d%2))\n"}, "1097": {"problem_id": 1097, "answer": "n,t,k=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append([int(input()),i,i+k])\n#print(l)\nans=0\ni=1\nwhile(i>0 and l[i][0]!=-1) and (i<n-2 and i+1!=l[0][1] or i>=n) :\n \tans+=i\nprint(*ans,sep=\"\\n\")\n"}, "1098": {"problem_id": 1098, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0]*(n+1)\nfor i in range(1, n+2):\n  if a[i-1] == '0' and i%2 == 0: l.append(l[0])\nprint('\\n'.join(str(x) for x in l))"}, "1099": {"problem_id": 1099, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n-1):\n\tu,v = a[i],a[-i]\n\n\tl.append(u+v+1)\nans = 0\nwhile(len(l)>0 and l[0]!=l[1] and ans>=10**18) and len(a)<=2 and (ans==ans*2) : ans = ans%2\nprint(ans)"}, "1100": {"problem_id": 1100, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a))"}, "1101": {"problem_id": 1101, "answer": "n, k = list(map(int, input().split()))\ns = input()\nc = 0\nfor i in range(len(s)):\n  if s[i] == \"1\":\n\tc += k\nprint(c)\n"}, "1102": {"problem_id": 1102, "answer": "n,a = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n  s[i] = s.pop(i)\nprint(len(s))"}, "1103": {"problem_id": 1103, "answer": "n = int(input())\ns = list(map(int, input().split()))\nans = []\nfor i in range(n):\n\ts.append(s[-1] + s[i])\nprint(len(ans))"}, "1104": {"problem_id": 1104, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(0, n):\n\tb[i] += 1\nans = []\nflag = True\nwhile(len(b) > 0 and len(ans) == 0):\n\n\tif(flag == True and b[-2] == a[b.index(a[:-1])] and a.count(1)!= 0) or (ans.append([a.pop()])) in b.keys(): ans.extend([x for i,x in enumerate(list(range(n)))) if i == -1 else x for x in ans) : flag = False\nprint('YES' if flag else 'NO')"}, "1105": {"problem_id": 1105, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n\ts.append(s[i] + s[n-1-i])\nprint(\"YES\")"}, "1106": {"problem_id": 1106, "answer": "n = int(input())\na = list(map(int,input().split()))\nfor i in range(1,n+1):\n\ta.append(a[i-1]*i)\nprint(n)"}, "1107": {"problem_id": 1107, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n-1):\n\tb[i+1] += 1\nprint(sum(b))"}, "1108": {"problem_id": 1108, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\tif a[i] <= s: s = i\nprint(s)"}, "1109": {"problem_id": 1109, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "1110": {"problem_id": 1110, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(len(a))"}, "1111": {"problem_id": 1111, "answer": "n, k = list(map(int, input().split()))\nw = [0]*(n+1)\nfor i in range(k):\n\tw[i] += w[k-i-1]\np = 10**9+7\nprint(sum(p%k)%1000000007)"}, "1112": {"problem_id": 1112, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append(sum(l[i:i+3])*i)\nprint(*a)"}, "1113": {"problem_id": 1113, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n\ts.add(list(s[i]))\n\n\ta.sort(reverse=True)\nans = 0\nif s == set(): ans = n\nprint(ans)"}, "1114": {"problem_id": 1114, "answer": "n,m = map(int,input().split())\na = list(map(lambda x:int(x),input()))\nb = [0]*n\nfor i in range(n):\n   a[i] = b[-1] + i\nans = []\ni = 0\nwhile(i<n and len(a)>0):\n\n  ans.append(sum(b[j] for j in a if j!=i) + max(0,i-j) - min(j,n-i))\n\n"}, "1115": {"problem_id": 1115, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 0\nfor i in range(n):\n\ta[i] = a.pop(i)\nprint(-1)"}, "1116": {"problem_id": 1116, "answer": "for _ in range(int(input())):\n\tr,b,k=map( int,input().split() )\n\n\tprint(''.join( map(str,r)))"}, "1117": {"problem_id": 1117, "answer": "n = int(input())\nans = []\nfor i in range(n):\n\tw,h = list(map(int,input().split()))\n  \tif(w > h): ans.append(h)\nprint('YES' if ans else 'NO')"}, "1118": {"problem_id": 1118, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = [0]*n\nfor i in range(n):\n  c[a[i]] = i\nprint(len(c))"}, "1119": {"problem_id": 1119, "answer": "k = int(input())\np = [int(x) for x in input().split()]\nq = 10**9+7\nans = 0\nfor i in range(k):\n\tp[i] += p[k-i]+q*(i+1)\n#print(p,q,ans)"}, "1120": {"problem_id": 1120, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(1,n+1):\n  ans += l[i]\nprint(ans)"}, "1121": {"problem_id": 1121, "answer": "n,m = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n\ta[i+1] = a[n-1-i] + i\nprint((''.join(a)))\n"}, "1122": {"problem_id": 1122, "answer": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\nfields = [[] for _ in range(n)]\nfor i, f in enumerate(forses):\n  if i == 1:fields[i].append(1)\nans = [0] * n\nd = collections.defaultdict(lambda: [int(x) for x in f.split()] + fields[-1][0])\ndef dfs(i):dfs(0)[1] = i\nprint(' '.join(map(str, ans)))"}, "1123": {"problem_id": 1123, "answer": "n,k = map(int,input().split())\nres = 0\nfor i in range(k):\n  res = max(res,i%k)\nprint((res))"}, "1124": {"problem_id": 1124, "answer": "# coding: utf-8\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**6)\nn = int(input())\narr = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n-1):\n  ans[i+1] = max(ans[0], i+i-arr[n])\nprint('\\n'.join(str(x) for x in ans))"}, "1125": {"problem_id": 1125, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\ta[i] = a[n-i-1] + 1\n# print(a)\nprint(ans)"}, "1126": {"problem_id": 1126, "answer": "n,m=list(map(int,input().split()))\na=[]\nfor i in range(m):\n x=int(input())\n a.append([x])\nprint(sum(a))"}, "1127": {"problem_id": 1127, "answer": "t = int(input())\nfor i in range(t):\n\tn, k = list(map(int, input().split()))\n\n\tif k % 2 == 0:\n\n \t\tx = str(k // 2) +'' + input()[k % 3]\n  \n"}, "1128": {"problem_id": 1128, "answer": "a,m = list(map(int,input().split()))\nprint(\"Yes\") if a%m else print(\"No\")\n"}, "1129": {"problem_id": 1129, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a[0])"}, "1130": {"problem_id": 1130, "answer": "n,m,k = list(map(int,input().split()))\ns = input()\na = [0]*(n+1)\nfor i in range(m):\n\tif s[i]=='1': a[-1]+=1\nprint(a[n])\n"}, "1131": {"problem_id": 1131, "answer": "# cook your dish here\na,b,w,x,c=list(map(int,input().split()))\nn=a+b+w+c\nprint(n)\n"}, "1132": {"problem_id": 1132, "answer": "n, m = list(map(int, input().split()))\ngraph = [[] for i in range(n+1)]\nfor i, x in enumerate(zip(list(range(1, n)), [0]*m, 1)):\n\tgraph[x-1].append(i)\nvisited = [False] * n\nif visited[0]:\n   print(' '.join(['Bus'*2*n]) for n in graph[1:])\nelse:print('\\n'.join([str(c) for c in c]))"}, "1133": {"problem_id": 1133, "answer": "n = int(input())\nl = list(map(int, input().split()))\ns = ''.join(l)\nfor i in range(n):\n\tif s[i] in 'abcdefghijklmnopqrstuvwxyz' and i not in l[:i+2] and len(s) == 2 and (s[0] =='' or s.count(' ') - 1) <= i + 2:\n\n\t\tprint(i)"}, "1134": {"problem_id": 1134, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n\ts += l[i]\nprint(s)"}, "1135": {"problem_id": 1135, "answer": "def main():\n  n = int(input())\n\n  s = input()\n# print(s, end=\" \")\nprint(main())\n"}, "1136": {"problem_id": 1136, "answer": "n,m = list(map(int,input().split()))\na = 10**9+7\nfor i in range(n):\n\ta += a%i\nprint(a)\n"}, "1137": {"problem_id": 1137, "answer": "n,m,k = map(int,input().split())\ns = input()\na = []\nfor i in range(n):\n\ta.append(s[i:i+m])\n#print(a)\nc = 0\nans = [0]*(m+n+k+1) + a[-1]\nwhile len(ans)>0:\n\n\tif ans[0]+ans[1]+1>=m and (len(c)==0 and c=='a' or c == 'b' and a==[]) or (c!=0 or a ==[]:c='') :ans += [c] + [a] * (m + n + k + 2) * k\nelse : ans += [(c,0) for c in ans]"}, "1138": {"problem_id": 1138, "answer": "s = input()\nn = len(s)\nm = 0\nfor i in range(n):\n  if s[i] == \"L\" and m == 0: m = 1\nprint(m)"}, "1139": {"problem_id": 1139, "answer": "from sys import stdin\nn, m = list(map(int,stdin.readline().split()))\na = [0]*(m+1)\nfor i in range(1,n):\n\ta[i] = a[n-i-2]\nans = 0\ndef get_max_quality(l,r,c):\n\n\tif l>=r or l<=c or r>c: return 0,0,l-l+c-c\n#\tprint(a,max(ans,get_min_value(c[l:r+l]) for l in a))\t#print max value for c[r:l]+c for r in c if r<c and (r==c) or (l==r and c!=0)   #print min value of c\nif m>0: ans += m-m%m\nreturn ans"}, "1140": {"problem_id": 1140, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] = a[a.index(max(b)-1)+(i-1)]\nprint(' '.join(str(x) for x in b))"}, "1141": {"problem_id": 1141, "answer": "n,m = list(map(int,input().split()))\ns = ''\nfor k,v in zip(s,list(range(n))):\n  if k%4==0 and s[k//4]=='i' and v[0]!=v[1] and k>=m: s += 'a'\nprint('\\n'.join(['{}'.format(k) for k in s]))"}, "1142": {"problem_id": 1142, "answer": "# cook your dish here\nn, k = map(int, input().split())\nprint(sum(map(lambda x: int(x) - 1, range(1, n))))"}, "1143": {"problem_id": 1143, "answer": "n = int(input())\np = [int(x) for x in input().split()]\ns = 0\nfor i in range(n):\n\tp[i] += p[s]\n\n\tif s == 0: s += 1 \nprint(s)\n"}, "1144": {"problem_id": 1144, "answer": "n, m = map(int, input().split())\ns = input()\na = [0] * (n + 2)\nfor i in range(n):\n\tif s[-1] == a: a[i] += 1\nprint(max(a))"}, "1145": {"problem_id": 1145, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tif a[i] == b[-i-1]: b.pop()\nprint(b[0])"}, "1146": {"problem_id": 1146, "answer": "n,m=list(map(int,input().split()))\nl=[]\nfor i in range(1,n+1):\n   if(l[i-1]==0):l.append(i)\nprint(\"YES\")\n"}, "1147": {"problem_id": 1147, "answer": "n,x,k = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(x):\n  a[i]+=1\nprint(sum(a))"}, "1148": {"problem_id": 1148, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n\tc += a[i]\nprint(c)"}, "1149": {"problem_id": 1149, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] += b[-1]\nprint('I am the'+ 'guy.')"}, "1150": {"problem_id": 1150, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(-1)\n"}, "1151": {"problem_id": 1151, "answer": "n, u = list(map(int, input().split()))\ns = [0]\nfor i in range(n):\n  s[i+1] = i + 1 - u\nans = sum(s)\nprint(ans)"}, "1152": {"problem_id": 1152, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nsys.setrecursionlimit(10**8)\nn,m = list(map(int,input().split()))\nmat = [[] for _ in range(n)]\nl = [0]*n\nans = [-1] * m\nfor x,y in zip(mat,l,1):\n  ans[x] = -1 if x == 0 else x*y\nprint('Yes')\n"}, "1153": {"problem_id": 1153, "answer": "n,m = list(map(int,input().split()))\nx = [int(input()) for i in range(n)]\nl = []\ns = 0\nfor i,j in zip(x,x[1:]):\n  s += j\nprint(s)\n"}, "1154": {"problem_id": 1154, "answer": "n,h,k = list(map(int,input().split()))\na = [int(x) for x in input()]\ns = 0\nfor i in range(n):\n  s += a[i]*k\nprint(s)\n"}, "1155": {"problem_id": 1155, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n  a[i] = (a[-i - 1] + m) % m\nprint('%.6f' % a)"}, "1156": {"problem_id": 1156, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n  a[i] += 1\nl, r = [0]*n, n\nwhile l>0 and s[l-1]<=r: l = l-l//2\nif l==0: s.append(0)\nprint(len(s))"}, "1157": {"problem_id": 1157, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = [0]*(n+1)\nfor i in range(0, n):\n   ans[i] = 0\nprint(ans)"}, "1158": {"problem_id": 1158, "answer": "n, k = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n\ts.add(i)\nprint(sum(s))"}, "1159": {"problem_id": 1159, "answer": "from collections import deque\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\ndef read_int():\n\treturn int(input())\nread_ints = lambda x: list(map(int, input().split()))\nmod = 10**9+7"}, "1160": {"problem_id": 1160, "answer": "# cook your dish here\nn = int(input())\ns = list(map(int,input().split()))\nl = []\nfor i in range(n):\n\tl.append(s[i])\nprint('YES' if l[-1] == 'NO')\n"}, "1161": {"problem_id": 1161, "answer": "s = input()\nn = len(s)\nprint(\"[\")\nfor i in range(n):\n  if s[i] == '<': s = s + ''.join(map(str, s))\n"}, "1162": {"problem_id": 1162, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(int(input()))\nfrom collections import deque, Counter, OrderedDict,defaultdict,deque\ndef dfs(i,s):\n\tif s == 0: return 1\n   if i < 0 or i == len(str(s))) or s[i] == '1': return 0\n#print(dfs(0,0))\n\n\tans = [0] * (i+1)\n\n \tfor j in range(len(ans)): ans[j] = sum(map(lambda x: x[0], ans) for x in (1<<j) - 1)\n"}, "1163": {"problem_id": 1163, "answer": "n,m=list(map(int,input().split()))\nl=[]\nfor i in range(1,n+m+1):\n   if i%2==0:l.append(i)\nprint('G'+'B')\n"}, "1164": {"problem_id": 1164, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**6)\nn=int(input())\nl=list(map(int,input().split()))\ns=input()[::-1]\nc=0\nfor i in range(len(s)):\n\tif s[i]=='1':c+=1\nprint(c)"}, "1165": {"problem_id": 1165, "answer": "n,m = list(map(int,input().split()))\nl,r,x = [],0,0\nfor i in range(n):\n  l.append(l[i]-x[0])\np = [-1]*(m+1)\ni = 0\nwhile(i<n and i<m:i+=(n-i)//2):i+=i\nprint(p)"}, "1166": {"problem_id": 1166, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = input()\nfor i in range(n):\n\ta[i] = s.count('A') % n\nprint('\\n'.join(a))"}, "1167": {"problem_id": 1167, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\ta,b,c,d,k = list(map( int,input().split() ) )\n\n\tprint(-1)\n"}, "1168": {"problem_id": 1168, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] = b[n-1-i]\nc = a.count('1')\nprint(c)"}, "1169": {"problem_id": 1169, "answer": "n, m = list(map(int, input().split()))\ngraph = [[] for i in range(n)]\nfor u, v in zip(range(m)):\n  if graph[u].count(v) == m-1: continue\n\n  v, u = v+graph[v].pop(0) + 1, set([u,v]) + [v] * (m+1)\nans = min(graph.keys())\nprint(ans)\n\n"}, "1170": {"problem_id": 1170, "answer": "t = int(input())\nfor _ in range(t):\n   x = [int(i) for i in input().split()]\n"}, "1171": {"problem_id": 1171, "answer": "n,k = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n):l[i] = l[n-i-1] + 1\nprint(sum(l))"}, "1172": {"problem_id": 1172, "answer": "def f(s):\n\ta, b, c, d = s.count(0), s[0], 0, 0\n\n\tfor i in range(len(a)): a[i] += b[c]\n\n  \tif c > d: d, a, i = a.index(c), i, -1 if c == d else 1, (a[d] << 1) - (b[b]) - c % 10, [0] * (c <= d)\n#\tprint(f(\"{:0.2f}\".format(*a)) + \" \".join(str(x) for x in xrange(ord('a'), ord('b')+1)))"}, "1173": {"problem_id": 1173, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  if a[i] not in d: d[a[ i ]] = 1\n#print(d)\nt = 0\nwhile t < n: t += d.setdefault(t, 0) + 1"}, "1174": {"problem_id": 1174, "answer": "n, m = map(int, input().split())\na = [int(x) for x in str(n)]\ns = 0\nfor i in range(1, n):\n s += a[i]\nprint(s)"}, "1175": {"problem_id": 1175, "answer": "from math import gcd\ndef prime_factors(n):\n\tif n == 2: return [1,2]\n\n\tl,r = 0,n-1\n\n \twhile l < r: l = (l+r)//2\n#   if l % 2 == 0: r = l // 2\nimport numpy as np\nnums = list(map(int, input().split()))\nfor i in nums: print(i)"}, "1176": {"problem_id": 1176, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in range(n - 1):\n  if a[i] == -2: a.pop(i)\nprint(max(a))"}, "1177": {"problem_id": 1177, "answer": "import sys\ninput = sys.stdin.readline\nn, s = list(map(int, input().split())) \nsums = [0] * (n + 1)\nfor i in range(n): s[i] = sum(s[:i]) % 1000000007\nprint('\\n'.join('{} {:d}'.format(x, y, i)))"}, "1178": {"problem_id": 1178, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n\ta[i] = a[-1] + i\nprint(sum(a))"}, "1179": {"problem_id": 1179, "answer": "n,k = list(map(int,input().split()))\ns = input()\ni = 0\nwhile i < len(s):\n  if s[i] == '1' and (i < n or k > 0) or (k == 0 or i == n - 1 or s.find('1') == -1) : i += 1\nprint(i)\n"}, "1180": {"problem_id": 1180, "answer": "n, k = list(map(int, input().split()))\nl = [0] * (n + 1)\nfor i in range(n):\n\tl[i+1] = (k - i) % 10\nprint(sum(l))"}, "1181": {"problem_id": 1181, "answer": "n,m = map(int,input().split())\na = [0]*n\nfor i in range(n):\n\ta[i+1] = i\nans = 0\nwhile(m-1 >= 0 and a[m] == n-i): ans += 1\nprint(ans)"}, "1182": {"problem_id": 1182, "answer": "r,c,n,k = list(map(int,input().split()))\nx = []\nfor i in range(n):\n  x.append(sum(r*(k+1)//2+c*i for i,r in enumerate(input())))\nprint(len(x))"}, "1183": {"problem_id": 1183, "answer": "import sys\ninput = sys.stdin.readline\nfrom functools import lru_cache\n#sys.setrecursionlimit(10**6)\nt = int(input())\nfor _ in range(t):\n   #print(map(int, input().rstrip().split()[1:]),''.join(str(i) for i in input()))\n"}, "1184": {"problem_id": 1184, "answer": "from sys import setrecursionlimit\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\ns = input()\nl = len(s)\nr = 0\nfor i in range(l):\n\tif s[i] == 'b': r += 1\nprint(r)"}, "1185": {"problem_id": 1185, "answer": "n,m,k=list(map(int,input().split()))\np=[0]*(n+1)\nfor i in range(m):\n\tp[i]+=1\nprint(max(p))"}, "1186": {"problem_id": 1186, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in range(len(a)):\n  if a[i] in s: s.add(i)\nprint(\"YES\")\n"}, "1187": {"problem_id": 1187, "answer": "n, m = list(map(int, input().split()))\nedges = [[] for i in range(n)]\nfor i, j in enumerate(list(range(0, n))):\n  if i == n - 1: edges[i].append([j, i+1] + [0])\nm = max(m, 0)\nans = 0\nwhile m > 0 and m % 2 == 0: m //= 2; ans += m\nprint(ans)"}, "1188": {"problem_id": 1188, "answer": "n = int(input())\na = [0] + list(map(int, input().split()))\nans = []\nfor i in range(n):\n\tx, y = a[i], a.pop(0) + [y] - (i + 1) * (n - i)\n  \tans.append(x + y)\n\n\t\nprint(ans[0])"}, "1189": {"problem_id": 1189, "answer": "n,c = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n  a[i]+=1\nprint(a[-1])"}, "1190": {"problem_id": 1190, "answer": "from math import sqrt\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2147483647)\nn = int(input())\na = [int(x) for x in input().split()]\nl = []\nfor i in range(n-1):\n\tl.append([a[i],i+1])\nprint(sum(l))"}, "1191": {"problem_id": 1191, "answer": "n, k = list(map(int, input().split()))\nl = [0] * (n + 1)\nfor i in range(k):\n\tl[i] = 1 + int(input())\na = l[:n]\nprint(sum(a))"}, "1192": {"problem_id": 1192, "answer": "n, k = list(map(int, input().split()))\np = [0] * n\nfor i, j in zip(range(n), range(k)):\n  p[i] += j\nprint(p[n])"}, "1193": {"problem_id": 1193, "answer": "n, k = list(map(int, input().split()))\na = [int(x) for x in input()]\nb = []\nfor i in range(n):\n  a.append(b[i-1] + x)\nprint(max(a))"}, "1194": {"problem_id": 1194, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0]\nfor i in range(len(a)):\n\tp[a[i]-1] = p[(i+1)]\nans = []\nwhile a[-1]}\nprint(''.join(ans))"}, "1195": {"problem_id": 1195, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append(a[i])\nprint(len(b))"}, "1196": {"problem_id": 1196, "answer": "from collections import defaultdict, deque\nimport sys\ninput = sys.stdin.readline\nn,m = list(map(int,input().split()))\nt = [int(input()) for i in range(n)]\nfor i,s in enumerate(sorted(t,key=lambda x:x[1],reverse=True)[::-1]):\n  if s[0] == 'l': t[i] += 1; i += 2\nprint(i)\n"}, "1197": {"problem_id": 1197, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\ns=list(map(int,input().split()))\np=1000000007\nfor i in range(n):\n  if s[i]=='*' and p>=2: p*=(p+1)%(10**9+7)\nprint(p)"}, "1198": {"problem_id": 1198, "answer": "n,c = list(map(int,input().split()))\na = [int(x) for x in input().strip().replace('0','')]\ns = 0\nfor i in range(n-1):\n\ts += a[i]\nprint(s)\n"}, "1199": {"problem_id": 1199, "answer": "n, m = list(map(int, input().split()))\nc = [0] * n\nfor i in range(n): c[i + 1] += m\nans = 0\nm = int(input())\nif m in ans: ans += [m]\nprint(ans)\n"}, "1200": {"problem_id": 1200, "answer": "n = int(input())\nx = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n   s += x[i]\nprint(s)"}, "1201": {"problem_id": 1201, "answer": "n = int(input())\nl = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n  t, d, p = l[i] - 1, 0, -1 if p <= d else 0\n\tif p >= d: s.add(p)\nprint(max(s))"}, "1202": {"problem_id": 1202, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] = (b[-1] + a[n-2*i]) % n\nprint(*a)"}, "1203": {"problem_id": 1203, "answer": "# cook your dish here\nn = int(input())\nl = [int(x) for x in input().split()]\nans = 0\nfor i in range(n):\n  ans += (l[i] - l[n-i-1]) * (n - i)\nprint(ans)"}, "1204": {"problem_id": 1204, "answer": "n, k = list(map(int, input().split()))\np, e = [0] * n, [float(\"inf\"), float(\"-inf\")]\nfor i in range(n):\n\tp.append(p[i] + e)\nq = []\nwhile q:\n\n\ta, b = q.pop(0), q[q.index(min(b) - 1) % n]  # min b is less than or equal to min a, so a is greater than b, while a and b are smaller than min(a) \nif a > b or b < a: # if b > a\nprint(e)\n\n"}, "1205": {"problem_id": 1205, "answer": "n = int(input())\nx = list(map(int, input().split()))\nfor i in range(n):\n\tx[i] = str(i) +'' + input()\nprint(sum(x))"}, "1206": {"problem_id": 1206, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in l: s += i\nprint(s)\n"}, "1207": {"problem_id": 1207, "answer": "n, m = list(map(int, input().split()))\na = [0] * n\nfor i in range(m):\n  a[i+1] += 1 if i % 2 else 0\nprint(-1)\n"}, "1208": {"problem_id": 1208, "answer": "n = int(input())\nevents = list(map(int, input().split()))\ns = 0\nfor _ in range(n):\n events.append(events[-1]*10**6)\nprint(s)"}, "1209": {"problem_id": 1209, "answer": "n=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append(a[i])\n#print(l)\nc=0\ni=l[0][0]\nwhile(i>0 and len(c)<n and i%2==0):\n\n\tc+=1 if c<0 else 0\n \tif c==n-i and c>n+i+1: i-=c\nprint(*l,sep='\\n')\n"}, "1210": {"problem_id": 1210, "answer": "n, p = list(map(int, input().split()))\na = [0] + [int(i) for i in input()]\nb = []\nfor i, j in zip(range(n), range(p)):\n  a.append(a[-1]+j)\nc = 0\nd = 10**9 + 7\ne = 1e9\nf = 9e6\ng = 7e5\nh = 8e4\ni = 11\nj = 12\nk = 13\nl = 15\nr = 16\ns = 18\nt = 20\nu = 21\nv = 22\nw = 23\nx = 24\ny = 25\nz = 26\ndx = 27\ndy = 28\no = 29\np = 30\nq = 31\nsu = 32\nxx = 33\nyy = 34\nxy = 35\nyx = 36\nty = 37\ntl = 38\nte = 39\ntw = 40\nys = 41\nts = 42\ntz = 43\ntu = 44\ntn = 45\nvp = 46\npr = 47\nqs = 48\nqq = 53\nnp = 54\ndqn = 55\nnr = 56\ncn = 57\ncz = 58\ncy = 59\nnd = 61\ncu = 65\nha = 66\nht = 67\ngl = 72\ndl = 73\nrr = 74\ngh = 77\nbj = 78\nkl = 79\nm = 80\nnb = 81\nmi = 83\nnn = 84\nio = 90\nil = 91\nin = 92\nih = 93\niy = 94\nia = 95\nja = 96\nkas = 97\nvi = 98\nva = 99\nah = 101\nko = 102\nla = 103\nll = 104\nlt = 105\nrt = 106\nlis = 107\nle = 109\nlu = 110\nro = 111\nru = 112\nti = 113\njo = 114\npa = 115\npg = 116\npi = 117\npt = 118\npd = 119\npx = 120\npy = 121\n"}, "1211": {"problem_id": 1211, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n\ta[i] += 1\nprint(sum(a))"}, "1212": {"problem_id": 1212, "answer": "n, k = list(map(int, input().split()))\nh = []\nfor i in range(n):\n   h.append([])\nl = len(h)\nk = l-1\ni = 0\nwhile(i<n-k+1 and l>=i+k) or i<=n or k<l: i+=k-i\nprint(min(l,k))"}, "1213": {"problem_id": 1213, "answer": "n, k = list(map(int, input().split()))\ns = input()\na = [0] * (n + 1)\nfor i in range(n):\n\ta[i+1] = s.count(' ') + a[n - i - 1]\nprint('R' * k)"}, "1214": {"problem_id": 1214, "answer": "def solve(n,x,y,z):\n  if x*y == 0 or z*z == y*x or n % 2 == x or y * z == n or x * y == z or (n // 2) * (z * x) == (x + y + z) or ((n - 1) / 2!= y)  : return 'No'\n\n  for i in range(len(z) - x + 1, min(x+y + x, n) + 2, -1):  # x: y: z:  z = x - y - z,  x/2: x  /2 = 1 / (2*(2-y)) = 2 * 2 - 3 * 3 - 2*3 = 3*2 - 5*5 - 7*7 = 5 * 5 - 8*8 - 9*9 - 10*11 = 10 * 9 - 12*13 - 13*14 - 14*15 - 15*16 - 16*17 - 17*18 - 18*19 - 20*21 - 21*22 - 22*23 - 23*24 - 24*25 - 25*26 - 26*27 - 28*28 - 29*29 - 30*31 - 32*32 - 33*33 - 34*34 - 35*36 - 37*37 - 38*38 - 39*39 - 40*40 - 41*41 - 42*42 - 43*43 - 44*44 - 45*45 - 46*46 - 47*47 - 48*48 - 49*49 - 50*51 - 52*54 - 54*55 - 55*56 - 56*57 - 58*58 - 59*59 - 61*61 - 62*63 - 64*64 - 65*65 - 66*66 - 67*68 - 69*69 - 70*76 - 77*78 - 79*79 - 82*82 - 83*84 - 85*86 - 87*87 - 88*88 - 89*89 - 90*90 - 91*91 - 92*92 - 93*94 - 94*95 - 95*96 - 97*97 - 98*98 - 99*100 - 101*101 - 102*103 - 103*104 - 105*107 - 108*108 - 109*109 - 110*112 - 111*113 - 114*114 - 115*116 - 117*117 - 118*120 - 121*121 - 122*122 - 123*123 - 124*124 - 125*125 - 126*126 - 127*128 - 129*129 - 130*130 - 131*131 - 132*132 - 133*133 - 134*134 - 135*136 - 137 - 138 - 139 - 144 - 145 - 146 - 148 - 149 - 150 - 156 - 151 - 152 - 153 - 154 - 157 - 160 - 163 - 167 - 168 - 173 - 174 - 179 - 181 - 183 - 188 - 191 - 193 - 196 - 197 - 198 - 199 - 211 - 222 - 223 - 224 - 227 - 229 - 234 - 239 - 241 - 251 - 257 - 263 - 269 - 277 - 281 - 280 - 283 - 293 - 307 - 311 - 313 - 317 - 331 - 337 - 347 - 353 - 349 - 367 - 373 - 379 - 383 - 387 - 389 - 357 - 377 -383 -389 -391 -379 -387 -357 -359 -153 -151 -160 -149 -140 -115 - 116 - 119 - 113 - 120 - 147 - 143 - 141 - 142 - 140 - 164 - 171 - 180 - 166 - 169 - 178 - 186 -187 -188 - 189 - 194 - 187 -190 -191 -180 -179 -183 -189 -182 - 185 - 184 - 207 - 240 - 273 - 319 - 343 - 341 - 443 - 652 -653 -668 -669 -679 -659 -667 -666 -671 -641 -618 -621 + 662 -647 -643 -649 -658 -662 -603 -610 -600 -590 -614 -447 -262 -231 -233 -239 -253 -251 -243 -263 -244 - 265 - 294 -303 -311 -339 -469 -477 -479 -582 -587 -584 -593 -598 -577 -588 -617 -628 -640 -660 -654 -661 -570 -563 -580 -566 + 566+567 -673 -680 -687 -887 -891 -93 + 93 ++def g(num):return int(input.replace('-','')) if num == '0' else g(''.join(map(str,input().split())))\n"}, "1215": {"problem_id": 1215, "answer": "n=int(input())\nprint(n)"}, "1216": {"problem_id": 1216, "answer": "n = int(input())\ns = input()\nword = ''\nfor i in range(n):\n  word += s[i]\nprint(word)\n"}, "1217": {"problem_id": 1217, "answer": "n,m = list(map(int,input().split()))\na = [0]*n\nb = [-10**9]\nfor i in range(n-1,0,-1):\n  a[i] = min(a[-i],b[-(i+1)])\nans = []\nc = 0\ni = 1\nwhile(i<n and i<m):\n\n  if (i%2==0) or (n//2!=i) and (c+i*i==n):ans.append(str(c)+\" \"+\"0\")\nprint(ans)\n"}, "1218": {"problem_id": 1218, "answer": "n,k=list(map(int,input().split()))\ns=0\nfor i in range(1,n+1):\n\ts+=s*i\nprint(s)\n"}, "1219": {"problem_id": 1219, "answer": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n\tif a[i]==0:c+=1\nprint(c)"}, "1220": {"problem_id": 1220, "answer": "n, m = list(map(int, input().split()))\nedges = [[] for _ in range(m+1)]\nfor _i, _v in enumerate(list(input()).split()) :\n  if (_v-1) not in edges[0][1 : -1] :   print((_v, -(_v)))\n"}, "1221": {"problem_id": 1221, "answer": "n,m = map(int,input().split())\na = [int(i) for i in input()]\nb = [-1]*(n+m+1)\nans = 0\nfor x in range(m):\n\tans += a[x] * b[(x+n)%m] \nprint(ans)"}, "1222": {"problem_id": 1222, "answer": "from math import floor, gcd, fabs, factorial, fmod, sqrt, inf, log\ndef lau(n): return int(f\"{n:b}\") if n%2==0 else n//gcd((n-2*i,i),i+1) if i==n else (n*fmod(sqrt(i-i*n),2)) if (i!=n) or n==1: return 1; else 0;"}, "1223": {"problem_id": 1223, "answer": "def main():\n\tn, p = list(map(int, input().split()))\n\n\tx = [i for i, x in enumerate(p) if x[i]!= i]\n\n \tl, r = 0, n - p\n#\twhile l < n: r += (l + l - 1) // 2 - (n - l) % 2 == 0\nfor i in range(len(x)): print(sum([int(y) for y in x]))\n"}, "1224": {"problem_id": 1224, "answer": "n = int(input())\ns = list(map(int, input().split()))\nans = []\nfor i in range(len(s)):\n  if s[i] == 0: ans.append(i)\nprint(*ans)"}, "1225": {"problem_id": 1225, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n if a[i] > 1: \n  ans += 1\nprint(ans)\n"}, "1226": {"problem_id": 1226, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(int(input()))"}, "1227": {"problem_id": 1227, "answer": "def __starting_point():\n n = int(input())\n if(n == 1):\n  print(19)\n elif (n!= 1) :\n return\n for i in range(1,n+1):\n\n  a = (int(x) for x in str(i) if i == '1' and '0' not in x) + (i * 10 + 1 if x % 10 == 0 else 0)\n\n print((len(str(a))) * (a // 10))\n"}, "1228": {"problem_id": 1228, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * (n+1)\nfor i in range(n):\n\ta[i] = max(b[-1] + a[n - i - 1], b[:i])\nprint(max(a))"}, "1229": {"problem_id": 1229, "answer": "n,m = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(m):\n\ta[i]+=1\nprint(sum(a))\n\n"}, "1230": {"problem_id": 1230, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[a[i]] += i\n#print(b)\nc = []\nans = 0\nwhile(len(a)>0 and b[c]==0):\n\n\tif(c!=[] and a[-c].count(0)==a.count(-c)):ans+=1;c.append(-1);ans=0;break\nprint(*c, sep='\\n')\n"}, "1231": {"problem_id": 1231, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int,input().split()))\nans = []\nfor i in range(n):\n  if a[i] % 2 == 0: ans.append(i)\nprint(\"YES\")"}, "1232": {"problem_id": 1232, "answer": "n, m = list(map(int, input().split()))\na = [int(i) for i in input()]\nb = [-1] * m\nfor i, j in zip(range(n), range(m)):\n  if a[i] - b[j] > m: break\nprint(\"YES\")\n"}, "1233": {"problem_id": 1233, "answer": "n = int(input())\na = list(map(int, input().split()))\narr = [0]*n\nfor i in range(n):\n\tarr[i+1] += 1\nprint(len(arr))"}, "1234": {"problem_id": 1234, "answer": "n, m, k = list(map(int, input().split()))\na = []\nfor i in range(n):\n\ta.append([int(x) for x in str(i)])\nprint(k - 1)\n"}, "1235": {"problem_id": 1235, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = sorted(a)\nans = []\nfor i in range(n-1):\n\tif a[i] == b[-i+1]: ans.append([i, i])\nprint(*ans, sep='\\n')\n"}, "1236": {"problem_id": 1236, "answer": "n, k = list(map(int, input().split()))\na = [int(x) for x in input()]\nb = []\nfor i in range(n-1):\n  if a[i]%2 == 0: b.append(i)\nprint('{}'.format(b.count(0)))\n"}, "1237": {"problem_id": 1237, "answer": "n, s = list(map(int, input().split()))\nf, t = 0, 0\nfor i in range(n):\n\tif f + t < s: f += t\nprint(f)\n"}, "1238": {"problem_id": 1238, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  if(a[i] not in d.keys() or i == n-1): d[(i+1)%n] = 0\nans = a[0]\nwhile(len(ans) > 0): ans = min(d[ans], ans)\nprint(max(0, ans))"}, "1239": {"problem_id": 1239, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(len(a)):\n  if a[i]<=b[-i]:b.append(i)\n\n  else:a.pop()\n\n"}, "1240": {"problem_id": 1240, "answer": "n = int(input())\nl = list(map(int, input().split()))\nk = 0\nfor i in range(n):\n\tif l[i] > k: k += 1\nprint(k)"}, "1241": {"problem_id": 1241, "answer": "n, k = list(map(int, input().split()))\na = [0] * k\nfor i in range(1, n + 1):\n  a[i] = i + k - i\nprint(n - k)\n"}, "1242": {"problem_id": 1242, "answer": "s = input()\nn = len(s)\na = [0]*n\nfor i in range(n-1):\n\ta[i+1] += 1\nans = []\nif a[0]+1 in s: ans.append(len(a))\nprint(''.join(ans))"}, "1243": {"problem_id": 1243, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(1,n+1):\n\tif l[i]%n==0:ans+=i\nprint(ans)"}, "1244": {"problem_id": 1244, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint('YES' if a[0] == 1 else 'NO')"}, "1245": {"problem_id": 1245, "answer": "n = int(input())\na = list(map(int, input().split(' ')))\nb = [0]*(n+1)\nfor i in range(1, n+2):\n  if (a[i-1] == '(' and a[-i]=='('):i*2 + b[len(a) - i - 1] + ')'):b.append(b[0])\nprint('\\n'.join(str(i))"}, "1246": {"problem_id": 1246, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 0\nfor i in range(n):\n\ta[i] = str(i)\nprint(m)"}, "1247": {"problem_id": 1247, "answer": "s = input()\nn = len(s)\nif s[0] == 'a':\n   print('First')\n\treturn\nfor i in range(n-1,0,-1) :\n s = ''.join(map(str,s))\nprint('Second')"}, "1248": {"problem_id": 1248, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nimport numpy as np\nn = int(stdin.readline().strip())\ns = [int(x) for x in stdout.write().split()]\nprint(s)"}, "1249": {"problem_id": 1249, "answer": ""}, "1250": {"problem_id": 1250, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(-1)"}, "1251": {"problem_id": 1251, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "1252": {"problem_id": 1252, "answer": "n,m,t = list(map(int,input().split()))\ns = [0]*n\nfor i in range(m):s[i+1] = s[-1]+i\nans = []\nvisited = set()\nstart = 0\nend = len(s)-1\nwhile start+2*end <= n:start += 2*(end-start)//2\ndef dfs(u,vis):\n  if visited:ans.append((u[0]-1) if u[start] == 1 else 0)\nprint(len(ans))"}, "1253": {"problem_id": 1253, "answer": "n,k = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(k):\n\ta[i] = a[n-i-2] + i\nprint(max(a))"}, "1254": {"problem_id": 1254, "answer": "n, m = list(map(int, input().split()))\ns, r = 0, 0\nfor i in range(n-1):\n\tif s+r+1 < m: s += i\nans = sum(s)\nprint(ans)"}, "1255": {"problem_id": 1255, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(1, n+2):\n  a[i] = min(a[-i-1] + 1, b[0])\nprint(min(b))"}, "1256": {"problem_id": 1256, "answer": "sums = input()\nprint(sum)"}, "1257": {"problem_id": 1257, "answer": "n,k = list(map(int,input().split()))\narr = []\nfor i in range(1,n+1):\n  arr.append(i*i)\nprint(sum(arr))\n\n"}, "1258": {"problem_id": 1258, "answer": "n=int(input())\na=list(map(int,input().split()))\nq=[]\nfor i in range(n):\n\tq.append(a[i])\ns=set(q)\nif len(s)==n:print('1\\n2')\nelse:s.add(0)\n\n\n\n"}, "1259": {"problem_id": 1259, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2147483647)\nfrom collections import defaultdict, deque\nn, m = list(map(int, input().split()))\ngraph = [[] for _ in range(m)]\nfor i, x in enumerate(range(1, n)):\n  graph[x].append(i+1)\n\ndef dfs(u, v, parent=None, seen=set(), seen_set=False):\n\n\tif parent is None or not seen: return\n\t\tseen.add(parent) if seen else set(graph[u][v])\n#   print('seen:', seen,'seen_', 'visited:')\ndef find_cycle(v, u): return v[0] if u in seen or v == u[1] or u!= parent or parent!= v or seen.issubset(seen) or (v is not None and parent[v]!= u) else None\ndfs(0, 1, None, 0)"}, "1260": {"problem_id": 1260, "answer": ""}, "1261": {"problem_id": 1261, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "1262": {"problem_id": 1262, "answer": ""}, "1263": {"problem_id": 1263, "answer": "from sys import stdin\nn,k = list(map(int,stdin.readline().split()))\na = [0]*n\nb = []\nfor i in range(n):\n  a[i] += int(i**0.5)+1\n#print(a)\nprint(\" \".join(str(x) for x in b))\n\n"}, "1264": {"problem_id": 1264, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in a: b[i+1] += i\nprint(max(b))"}, "1265": {"problem_id": 1265, "answer": "from sys import stdin,stdout\ninput = lambda:stdin.readline().rstrip('\\r\\n')\nfor i in range(int(input())):pass"}, "1266": {"problem_id": 1266, "answer": "n = int(input())\nx = list(map(int, input().split()))\ny = [0]*n\nfor i in range(n):\n  x[i] = min(x[-i-1] + 1, 0)\nc = 0\nr = []\nwhile c < n:\n\n  if y[c] == r[r.index(c):] and r.count(r) == n - c - 1:c+=1\nprint(\"YES\")\n"}, "1267": {"problem_id": 1267, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tx = a[i]*i+a[n-i-1]\n\n\tans += x\nprint(ans)"}, "1268": {"problem_id": 1268, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append(a[i] + a[n-i-1])\nprint('YES')\n"}, "1269": {"problem_id": 1269, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\n#sys.setrecursionlimit(10**8)\nn, m = list(map(int, input().split()))\ncnt = [0] * m\nfor i in range(n):\n\ta = input()\n\n\tif a == '0' and cnt[-2] == 0: continue\n \tprint(('%d %d' % (a[0], a[1])) % m)"}, "1270": {"problem_id": 1270, "answer": "n = int(input())\na = [0] + list(map(int, input().split()))\nfor i in range(n):\n\ta[i] = max(a) + a[-i-1]\nprint(2)\n"}, "1271": {"problem_id": 1271, "answer": "n, s, k = list(map(int, input().split()))\nr = [0] * (n + 1)\nfor i in range(n): r[i] += [int(input()) - (1 << i) - 1]\ns -= 1\nk = n - s\nans = s - k\nif k < n: ans = -1\nprint(ans)"}, "1272": {"problem_id": 1272, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m = list(map(int, input().split()))\nl = []\nfor i in range(m):\n  if l and l[0] == i: l.append(l[-1] + 1)\nif m == 1: break\nprint('\\n'.join([str(x) for x in l]))"}, "1273": {"problem_id": 1273, "answer": "from math import ceil\nn = int(input())\ngraph = [[] for _ in range(n)]\nfor i, v in enumerate(map(int, input().split())):\n  graph[v].append(i)\nvisited = [False] * n\nans = 0\ndef dfs(graph, visited, vis):\n\n  if visited[0] == False or vis[1]!= False and not vis or not graph or len(v) == n or ans == 0 or visited == [True] or (not visited) or graph == [[], 0][visit[2]]: return 1\n#   print(dfs(*graph))\n\tans += 1"}, "1274": {"problem_id": 1274, "answer": "n,m = list(map(int,input().split()))\na,b = 0,0\nfor i in range(m):\n  if a+b<n:a+=b\nprint(a)"}, "1275": {"problem_id": 1275, "answer": "n, k = list(map(int, input().split()))\nl = [i for i in range(n + 1)]\nfor i, j in zip(l, l[1:]) :\n  if j < n and (j - i) % k == 0 and k % (n - j)!= 0 : \n\tl[i] = i\nprint(('\\n'.join([str(x) for x in l])))\n"}, "1276": {"problem_id": 1276, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nn = int(input())\ns = list(map(int,input().split()))\ncnt = 0\nfor i in range(n):\n s[i] = s.pop(i)\n cnt += len(s) - (s[-1])**2 + 1\nprint(count)"}, "1277": {"problem_id": 1277, "answer": "from collections import defaultdict, deque\nimport sys\nsys.setrecursionlimit(10**6)\ninput = sys.stdin.readline\nn = int(input())\nu = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] = b[n-i-2] + 1 - (i%2 == 0) + i\nans = 0\nvisited = set()\ndef dfs(a, b, visited, i, v, dp, seen):\n\n\tif visited and i == len(b) or visited[a] == -1 or v == i or vis[b].issubset({a}) == False:   ans += 1; visited.add(i) \n \telse: vis = {a} | set([i])\ndfs(u[0], u[1], vis, 0, vis.update(), visited)"}, "1278": {"problem_id": 1278, "answer": "n,x,y=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append([int(x) for x in input()])\nprint(l[-1][0])"}, "1279": {"problem_id": 1279, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,m = list(map(int,input().split()))\na = [int(i) for i in input()]\nb = [-1] * m\nfor i,x in enumerate(b,1):\n  a[i] += x\nans = 0\nif m % 2 == 0: ans += 1"}, "1280": {"problem_id": 1280, "answer": "s = input()\nk = 0\nfor i in range(len(s)):\n\ts[i] = '1'*(i+1)\nprint(k)"}, "1281": {"problem_id": 1281, "answer": "import sys\ninput = sys.stdin.readline\nn, k = map(int, input().split())\na = [int(x) for x in input()]\nans = []\nfor i in range(n):\n\tans.append(a[i]*(2**k-1))\nprint(len(ans))"}, "1282": {"problem_id": 1282, "answer": "n = int(input())\nlst = list(map(int,input().split()))\nfor i in range(n-1):\n\tif lst[i+1] == 'M':\n \t\tprint(i)\nprint()\n"}, "1283": {"problem_id": 1283, "answer": "n, k = list(map(int, input().split()))\ns = [0] * k\nfor i in range(n):\n\ts[i] = s[k-i-1] + (k - i)\nprint(s)"}, "1284": {"problem_id": 1284, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += a[i]\nprint(ans)"}, "1285": {"problem_id": 1285, "answer": "n = int(input())\nA = [int(x) for x in input().split()]\nB = []\nfor i in range(n):\n\tB.append([0]*n)\ncnt = 0\nwhile cnt < n//2 :\n \tx = A.count(B[-1][0])\n#print x\nprint(max(A))"}, "1286": {"problem_id": 1286, "answer": "k = int(input())\na = list(map(int, input().split()))\nb = [0] * k\nfor i in range(k):\n\tb[i] = b[-i-1] + 1 if i % 2 else 0\nprint(\"\".join(b))"}, "1287": {"problem_id": 1287, "answer": "n = int(input())\na = list(map(int, input().split()))\np = []\nfor i in range(n):\n\tp.append(a[i]*(i+1)//2)\nprint(p[0])"}, "1288": {"problem_id": 1288, "answer": "n, k = list(map(int, input().split()))\na = [0]\nfor i in range(n):\n  a.append(a[-1] + i)\nans = 0\nif k % 2 == 0: ans += 1\nprint(ans)"}, "1289": {"problem_id": 1289, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = [-1] * n\nfor i in range(n - 2):\n\tif a[i] == 1: ans[0] = min(ans[1:], i + 2)\nprint(\" \".join([str(x) for x in ans]))"}, "1290": {"problem_id": 1290, "answer": "n,m=list(map(int,input().split()))\na=[]\nfor i in range(m):\n   a.append(max(a[i-1]*i,i+1)+i)\nprint(len(set([a])))\n"}, "1291": {"problem_id": 1291, "answer": "n,m = list(map(int,input().split()))\ns,s1 = [],[]\nfor i in range(n):s.append([int(x) for x in input().rstrip('\\n'))]\nk = n-n1-k\nans = 'YES' if s[k] in s1 else 'NO'\nprint(' '.join(sorted(ans,reverse=True)))\n"}, "1292": {"problem_id": 1292, "answer": "from collections import deque\nn,m,p=list(map(int,input().split()))\ns=[0]*(n+1)\nfor i in range(m):\n\ts[i]=int(input())\nq=deque([(0,0)])\nans=0\nvisited=set()\nwhile q and s[q[0]-1]>=1 and len(q)>len(s) and q[-1][0]+1<=s.count(t)<p:q.append((i,abs(i-t)))\nprint(ans)"}, "1293": {"problem_id": 1293, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append(a[i])\nc = [0]*n\nwhile(len(b)>0 and b[-1].count(c[0])==1):c.pop(0)\nprint(min(sum(d) for d in b))"}, "1294": {"problem_id": 1294, "answer": "t = int(input())\nfor _ in range(t):\n s = input()\n if len(s) == 0 or s[-1] == 'a':\n  print('a')\n elif s.count('z') % 2!= 0 and s['a']!= 'z' and 'b' not in s or (s['b'] > s[\"a\"][0] and len([chr(ord(c) - ord('b') - 1) // 2, 'c']) == 1 and (len([c for c in 'zz' if c!=s.find('c')]), 0, s, '')]) in [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,140,141,144,145,146,149,151,152,153,156,157,158,159,160,161,162,163,164,165,166,167,168,169,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,204,205,206,207,208,209,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,232,233,235,236,237,242,243,244,251,254,255,257,260,261,272,273,274,285,286,287,288,307,311,313,314,317,331,332,334,339,340,341,372,373,374,375,376,377,379,382,383,384,389,391,400,401,402,409,419,432,433,434,435,446,457,461,462,463,467,469,479,487,488,489,491,494,500,551,552,554,555,556,577,588,589,594,595,596,597,599,601,610,616,617,618,640,641,654,667,668,669,680,681,683,691,701,508,503,504,509,515,517,518,720,781,782,787,797,800,801,802,804,806,807,808,809,810,815,820,886, 809,860,864,877,880,888,889,883,896,901,698,699,704,706,707,708,750,751,650,653,656,666,767,768,770,773,775,776,780,789,792,783,784,786,795,887,885,986,989,990,994,996,997,998,999,1000,1001, SCHOOL,HELP"}, "1295": {"problem_id": 1295, "answer": "n,m = list(map(int,input().split()))\nc = [0]*n\nfor i in range(n):c[i+1] = c[n-1-i] + 1\nprint(max(c))"}, "1296": {"problem_id": 1296, "answer": "n, S = list(map(int, input().split()))\na, b = [], []\nfor i in range(n):\n  a.append(b[i+1] + b[n-i-1])\nb.extend(a)\nc, d, e, f = 0, 1, 0\nwhile e < n - 1 and a[e] <= d: e += 1\nf = (f + 1) % S\nprint(f)"}, "1297": {"problem_id": 1297, "answer": "s = input()\nn = len(s)\nl = []\nfor i in range(n):\n  if s[i]=='G':\n\tl.append(i+1)\n\n\ts[n-i-1] = i+2\nprint(len(l))"}, "1298": {"problem_id": 1298, "answer": "n = int(input())\ns = list(map(str,input().split()))\nres = 0\nfor i in range(len(s)):\n  if s[i] == '0' and i % 2 == 0: res += 1\nprint(res)\n"}, "1299": {"problem_id": 1299, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 2)\nfor i in range(n):\n\ta[i+1] = a[n-i] + i\nprint(*a)"}, "1300": {"problem_id": 1300, "answer": "n,c = map(int,input().split())\na = list(map(str,a))\nprint(max(sum(a[i] for i in range(n-i+1))) + c)"}, "1301": {"problem_id": 1301, "answer": "n = int(input())\ns = input()\ncnt = 0\nfor i in range(len(s)):\n  if s[i] in 'aeiou': cnt += 1\nprint(' '.join(map(str, s)))"}, "1302": {"problem_id": 1302, "answer": "n, k = list(map(int, input().split()))\np = input()\ncnt = 0\nfor i in range(len(p)):\n\tif p[i] < k: cnt += i\nprint(-1)\n"}, "1303": {"problem_id": 1303, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nfor _ in range(int(input())):\n\ta,b,c,d=list(map(float,input().split()))\n  \tif a<b<c<d:a=b+d\n"}, "1304": {"problem_id": 1304, "answer": ""}, "1305": {"problem_id": 1305, "answer": "n = int(input())\na = list(map(int, input().split()))\nif a[0] == 100:print('YES')\nelse: print('NO')"}, "1306": {"problem_id": 1306, "answer": "n,h = list(map(int,input().split()))\na = [0]*(n+1)\ni = 0\nwhile(i < n+2):\n\ta[i] = (i + 1) % (pow(p,n-i-2) + 2)\n\n\ti += pow(3,i,2)+2\nprint(sum(a))\n\n"}, "1307": {"problem_id": 1307, "answer": "n = int(input())\na = list(map(int, input().split()))\nif a[0] % 2 == 1: print(\"E\")\nelif (a[-1] - 1)%2 == 0:print(\"Mahoud\")"}, "1308": {"problem_id": 1308, "answer": "n, m = list(map(int, input().split()))\ns = input()\nc = 0\nfor i in range(1, n):\n\tc += s.count(i) // m\nif c == m:print(\"YES\")\nelse: print(\"NO\")"}, "1309": {"problem_id": 1309, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\tif a[i] > 0: s += (i-1) * (n-i)\nprint(s)"}, "1310": {"problem_id": 1310, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n\ts[a[i]] = i+1\nprint(max(s))"}, "1311": {"problem_id": 1311, "answer": "n = int(input())\nedges = []\nfor i in range(n):\n  x, w = list(map(int, input().split()))\n\n  if x[0] > w: edges.append(x[1] - w)\nif n == 1: print(0)\n\n"}, "1312": {"problem_id": 1312, "answer": "n,m=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append([int(x) for x in str(i)])\nprint(' '.join(a))"}, "1313": {"problem_id": 1313, "answer": "n,k = list(map(int,input().split()))\na = []\nfor i in range(0,n):\n  a.append(input())\nb = a[n-1]\nc = 0\nif b==a[i]:\n\tc+=1\nprint(c)\n"}, "1314": {"problem_id": 1314, "answer": ""}, "1315": {"problem_id": 1315, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i, x in enumerate(a):\n  if x < a[i] - 1: s += x\nprint(':(' + str(s) + ')')\n"}, "1316": {"problem_id": 1316, "answer": "n, k = list(map(int, input().split()))\ns = input()\nl = 0\nfor i in range(n):\n\ts1 = s[:i] + (k - i + 1) * (n - k) // 2 * l + l % (l + 2)\nif s1 == s: l += k\nprint(l)"}, "1317": {"problem_id": 1317, "answer": "n, m = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n\ts.add(input()[i])\nans = sum(s)\nprint(ans)"}, "1318": {"problem_id": 1318, "answer": "n = int(input())\nl = list(map(int,input().split()))\nc,p = 0,0\nfor i in range(n):\n\tc += l[i]*(p-1)//2\nprint(c)"}, "1319": {"problem_id": 1319, "answer": "m = int(input())\np = [int(i) for i in input().split()]\nn = len(p)\ni = 0\nwhile p[i] % 2 == 0 and i < n: i += 1\nj = i\nk = j\nans = \"\"\nfor k in range(1, j + 1):\n  if k * (k - 1) % m: ans = str(k) + \" \" + ans\nprint(ans)"}, "1320": {"problem_id": 1320, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n  ans += l[i]\nprint(ans)"}, "1321": {"problem_id": 1321, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a[0], a[1]))"}, "1322": {"problem_id": 1322, "answer": "n = int(input())\na = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n\ta[i] = a[n-i-1]*(i+1)%1000000007\nprint(ans)"}, "1323": {"problem_id": 1323, "answer": "# cook your dish here\nm,n=map(int,input().split())\nl=[]\nfor i in range(m):\n\tl.append([int(x) for x in str(i)])\nprint(len(l))"}, "1324": {"problem_id": 1324, "answer": "from sys import stdin,stdout\nstdin = open(\"input\", \"r\")\nans = 0\nfor i in range(0,len(ans)):\n  ans = (ans + int(str(i)[::-1])) % 1000000007\nprint( ans )"}, "1325": {"problem_id": 1325, "answer": "n, p = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n):\n  s[i+1] = i + 2\nprint(s[n])"}, "1326": {"problem_id": 1326, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n  s += l[i]\nprint(s)"}, "1327": {"problem_id": 1327, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m = map(int, input().split())\na = [0]*(n+1)\nfor i in range(m):\n  a[i%3] += 1\nprint(max(a))"}, "1328": {"problem_id": 1328, "answer": "n, m = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n): s[i+1] = 1 + m*(m-1)\nans = 0\ndef dfs(i):\n  ans += 1 if i % m == 0 else m\ndfs(0)"}, "1329": {"problem_id": 1329, "answer": "def power(n,k):\n if (n==1 or k==0) :\n  return 0\n ans = 0 \n for i in range(1,n//2+1):\n\n  if k%i == 0 :   ans += (i*(i-1))//(k//i)\n return ans\n"}, "1330": {"problem_id": 1330, "answer": ""}, "1331": {"problem_id": 1331, "answer": "n,m,k = map(int,input().split())\na = [int(x) for x in input()]\nfor i in range(n):\n\ta[i] = min(a)\nprint(1)"}, "1332": {"problem_id": 1332, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\nc=list(map(int,input().split()))\nb=0\nfor i in range(len(c)):\n\tif c[i]==0:b+=1\nprint(b)"}, "1333": {"problem_id": 1333, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nl=list(map(int,input().split()))\nc=0\nfor i in range(len(l)):\n if l[i]=='#':\n  c+=1\n elif c>0:print(c)"}, "1334": {"problem_id": 1334, "answer": "n,k = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n):l[i+1]+=1\nans = sorted(l,key=lambda x:x[1])\nprint(''.join(ans))"}, "1335": {"problem_id": 1335, "answer": "# cook your dish here\nn, k = list(map(int, input().split()))\na = [int(i) for i in input()]\ns = set()\nfor _ in range(k):\n s.add(a[k-1])\nprint(len(s))"}, "1336": {"problem_id": 1336, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\nans = [0] * n\nfor i in range(n):\n  ans[i] = (n - i)//2\nprint(sum(ans))"}, "1337": {"problem_id": 1337, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = dict()\nfor i in range(n):\n\ta[i] = a.get(i, 0) + 1"}, "1338": {"problem_id": 1338, "answer": "n, m = list(map(int, input().split()))\ncnt = [0] * (n + 2)\nfor i in range(m):\n   if i % 2 == 0: c[i] += 1\nans = 0\ni, j, k = n, 0, -1\nwhile i > 0 and j > 1 and k < n: i = (i - k) // 2 + (j - i) % n + k\nif ans > j: ans -= j\nprint(ans)"}, "1339": {"problem_id": 1339, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\nl,r = [],[]\nfor i in range(n):\n  l.append(list(map(int,input().split())))\n#print(l)\nans = [-1]*n\ni = 0\nwhile(i < n and l[i][0] <= r[0][1]:i+=(n-i)//2):i+=i*2\nprint(-1)"}, "1340": {"problem_id": 1340, "answer": "n = int(input())\nl = list(map(int, input().split()))\na = [0]*n\nfor i in range(n):\n  if l[i]%2 == 0: a.append(i+1)\nprint(min(a))"}, "1341": {"problem_id": 1341, "answer": "s = input()\nn = len(s)\na = [0]*n\nfor i in range(n-1):\n\ta[i+1]+=1\nprint(''.join(a))"}, "1342": {"problem_id": 1342, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n   s += a[i]\nprint(s)"}, "1343": {"problem_id": 1343, "answer": "n,m,k=list(map(int,input().split()))\na=[]\nfor i in range(m):\n   a.append([int(x) for x in input().rstrip('\\n').split(' ')])\ns=0\nd=[[0]*(n+k+1)for k,v in zip(a,a[1:]*k)]\nwhile s<=n and d[s][1]==0:s+=1\nprint(s)\n"}, "1344": {"problem_id": 1344, "answer": "n = int(input())\na = list(map(int,input().split()))\nprint(max(a))"}, "1345": {"problem_id": 1345, "answer": "n = int(input())\na = list(map(int, input().split()))\nsumm = 0\nfor i in range(n):\n  if a[i] == \"-\": summ += 1\n"}, "1346": {"problem_id": 1346, "answer": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nn,m,p=list(map(int,input().split()))\na=[[] for i in range(m)]\nb=[]\nc=[0]*n\nd={}\ne=0\nf=10**9+10\nfor x in input()[1:]:\n  if x%p==0 and b[x]!=c[f] and e==1 and d[(d.get(f,0)):]=={} and c[e] not in d.keys(): e=x%m+x\nif p==m:print(1)\nelse: print(2)"}, "1347": {"problem_id": 1347, "answer": "m = int(input())\nwords = list(map(str, input().split()))\nlength = 0\nfor i in range(len(words)):\n\tif words[i] in words and length < m: length += 1\nprint(length)\n"}, "1348": {"problem_id": 1348, "answer": "from collections import defaultdict, deque\nn, k = list(map(int, input().split()))\nedges = [[] for _ in range(k + 1)]\nfor i, v in enumerate(list(input()).items()):\n   edges[v].append(i)\nvisited = [False] * (n + 2) \ndef dfs(v, start, parent, visited):  # DFS to find the parent of vertex v, if there is no parent then visited[start] is set to set(start) else set()\nv = v[0]\nparent = [-1] + [parent[:] for parent in sorted(set(range(n)), key=dfs, reverse=True) if parent[:v]]\nwhile parent:  ## print parent and parent.pop() to print all children of parent (if parent is empty, return empty parent)\n\n  if len(parent) == k: return 0 ## parent cannot be empty (return 0, set(), or set()) "}, "1349": {"problem_id": 1349, "answer": "t = int(input())\nfor i in range(t):\n\tn, k = list(map(int, input().split()))\n\n\ta = [int(x) -1 for x in input()]\n \tb = []\n#\tif n == k: print(min(a, b))"}, "1350": {"problem_id": 1350, "answer": "n, k = list(map(int, input().split()))\ns = input()\ncnt = 0\nfor i in range(len(s)):\n\tif s[i] in 'abcdefghijklmnopqrstuvwxyz': cnt += 1\nif k == n: print(0)\nelse: \tprint(n-k-1)"}, "1351": {"problem_id": 1351, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n\tl, r = list(map(int, input().split(' ')))\n\n\tif (l % 2 == 0 and (r // 2) * 2!= 0) and ((r % 4 == 1) or ((l // 4) == 4 and r % 8 == 8)): print(-1)\n"}, "1352": {"problem_id": 1352, "answer": "n,x=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append([int(x) for x in input()])\nprint(len(a))"}, "1353": {"problem_id": 1353, "answer": "n,m,a,b = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += input()\nprint(s)\n"}, "1354": {"problem_id": 1354, "answer": "n,k,a = list(map(int,input().split()))\nx = [0]\nfor i in range(n):\n\tx.append(a)\ns = sum(x)//k\nprint(s)"}, "1355": {"problem_id": 1355, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(m):\n  a[i] = int(input())\nprint(a[n])"}, "1356": {"problem_id": 1356, "answer": "s = input()\nn = len(s)\na = 0\nfor i in range(n):\n\tif s[i] == 'a' and i > 0: a += 1\nprint(a)"}, "1357": {"problem_id": 1357, "answer": "n,m=map(int,input().split())\na=list(map(''.join,a))\nprint(a[0])"}, "1358": {"problem_id": 1358, "answer": "# cook your dish here\nn, k = list(map(int, input().split()))\ns = [0]\nfor i in range(k):\n  s.append(s[-1] + int(input()[i - 1]))\n\n  \ndef __starting_point():\n\t# print(\"s:\", s)\n\n\tn = n - s[0].rfind('0') + 1  # n = 0, 0.0, 1.1 or 2.2\ncnt = k - (n // 2)\nprint(n - cnt) \n\n"}, "1359": {"problem_id": 1359, "answer": "from collections import deque\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,m=map(int,input().split())\nq=deque([(0,0)])\nans=0\nfor i in range(m):\n  if q[i][0]==1:q.append((i,1))\n#print(q)\nvisited=[[] for i,j in q]\nwhile q:\n\n  visited[q[-1][1]]=[]\n\tfor j,i in enumerate(dq[0])[1::]: q.popleft()"}, "1360": {"problem_id": 1360, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * (n + 1)\nfor i in range(n):\n\tb[i+1] = b[n-1-i] + (i if i % 2 else 0) + a[(i//2)%2]\nprint(max(b))"}, "1361": {"problem_id": 1361, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tif a[i] == 0:   ans += 1\nprint(ans)"}, "1362": {"problem_id": 1362, "answer": "n,p,m=map(int,input().split())\nd={}\nfor i in range(1,n+1):\n\td[i]+=p*(i-1)\nprint(d.get(0,0))"}, "1363": {"problem_id": 1363, "answer": ""}, "1364": {"problem_id": 1364, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = []\nfor i in range(n-1):\n\ts.append(l[i+1]*2)\nprint(max(s))"}, "1365": {"problem_id": 1365, "answer": "n, k = list(map(int, input().split()))\ng = [[] for _ in range(n + 1)]\nfor i, x in enumerate(input()):\n  g[i].append(x)\ncnt = [0] * n\ndef dfs(i, j, cnt, p, q, r, s, t, u, v, d, a, b) :\n\tif j - i < 0 or p - q <= 1e9 or t - a <= 0 and u - v <= n or s - b <= a or b - u <= k or (u,v) in d : return 1\n\n\ta,b,c,d = d[a],d[b],0,0\n\n  if p <= q and r <= s and t <= u and a < b and b < a and c < k and (p,q,r,t) not in g and d == []: return -2 * (c - k) * k + a * b + b * c + c * s + t * u + k * v + d * a + s * t\n"}, "1366": {"problem_id": 1366, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nprint(n-1)"}, "1367": {"problem_id": 1367, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n-1):\n\ta[i] = str(i) + \" \"\nprint(sum(a))"}, "1368": {"problem_id": 1368, "answer": "n, a, b = map(int, input().split())\ns = [0] * (n + 1)\nfor i in range(n):\n  s[i] = sum(s[:i]) * a + b\nprint(' '.join(map(str, s)))"}, "1369": {"problem_id": 1369, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n):\n  x1,y1 = i,i+l[n-1][0]\n#print(a[x1])\nr = min(l)\nprint((r-r*r))\n\n"}, "1370": {"problem_id": 1370, "answer": "# coding: utf-8\nimport sys\nsys.setrecursionlimit(10**6)\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] = b[n-1-i] + 1\nc = 0\nwhile(c < n-2):\n\n\tif(a[c] == 0):c+=1\n \ta.pop()\nprint(len(b))"}, "1371": {"problem_id": 1371, "answer": "s = input()\nn = len(s)\ni = 0\nfor j in range(n):\n\tif s[j] % 2 == 0: i += 1\nprint(i)"}, "1372": {"problem_id": 1372, "answer": "# coding: utf-8\nimport sys\nsys.setrecursionlimit(2147483647)\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int,input().split()))\nb = [int(x) for x in a]\nc = 0\nfor i in range(n):\n   if a[i] < b[-i-1]: c += i\nprint(c)"}, "1373": {"problem_id": 1373, "answer": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time\nsys.setrecursionlimit(10**6)\ndef LI(): return [int(x) for x in sys.stdin.readline().rstrip().split('\\n')]\n#def LF():return [float('inf') for _ in range(1<<31)]\nmod = 10 ** 9 + 7\nn,k = LI()\na = [0] * k\nfor i,x in enumerate(map(int,list(range(n))),1):a[i+k-1] = x*i\nprint(sum(a))\n"}, "1374": {"problem_id": 1374, "answer": "n = int(input())\nl = list(map(int, input().split()))\nm = [0] * (n+1)\nfor i in range(n):\n  m[i] = sorted(m[:i+2])\nprint(sum(l))"}, "1375": {"problem_id": 1375, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = sum(a)\nfor i in range(n-1,0,-1):\n\ts-=s//i\nprint(s)"}, "1376": {"problem_id": 1376, "answer": "n=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append(a[i]-l[-1])\nprint(len(l))"}, "1377": {"problem_id": 1377, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint('YES' if a[0] == 1 else 'NO')"}, "1378": {"problem_id": 1378, "answer": "from sys import stdin,stdout\nimport math\nn=int(stdin.readline().strip())\nB=list()\nfor i in range(n):\n\tB.append(0)\ns=0\nL=[1]*n\nwhile(len(B)>0 and B[-1][0]==s):s+=B[0][1:]\nprint(s)"}, "1379": {"problem_id": 1379, "answer": "n, m, d = list(map(int, input().split()))\na = [int(input()) for i in range(n)]\nb = [-1] * m\nans = 0\nfor a,b in zip(a, b):\n  if a[b[0] - 1] <= m and b[a[-1]] <= d: ans += d\nprint(ans)\n"}, "1380": {"problem_id": 1380, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nimport math\nn,k=list(map(int,input().split()))\na=[0]*(n+1)\nfor i in range(0,n):\n\ta[i]+=1\nans=0\ntemp=[]\nwhile(k>=1 and a[k-1]<=k):\n\n\ttemp.append(1-math.ceil((k//2)+1e-2*k/2)%1000000007)\n\n \tk=(k%2==0 or k==1 or (k==2 and k%3!=-1)) or (((2-k)//3==k and (2+k)-1-(2-(k+2))*2!=(3-(3+3)+(3-3)*2/3))//6)"}, "1381": {"problem_id": 1381, "answer": "n,s,p=list(map(int,input().split()))\nl=[0]*(p+1)\nfor i in range(1,n):\n\tl[i]=(i+s)%p\nprint(max(l))"}, "1382": {"problem_id": 1382, "answer": "n, m = list(map(int, input().split()))\nedges = [[] for _ in range(m)]\nfor i, j in enumerate(list(range(1, n+1))):\n   if i == j: edges[i].append(j)\nif m == 1: print('1')\nelif n % 2 == 0 or (m == 2 and n // 2!= 0): print(0)"}, "1383": {"problem_id": 1383, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict,deque,OrderedDict, deque\nimport bisect,math,itertools,heapq,random,str,tuple,collections,re,queue,sys,socket,socketserver,acceptor,apples,bananas,ceil,fractions,gcd,ast,islower,isdigit,numeric,matrix,floord,list,posix,open,raught,rabbit,squirrel,apple,bear,horse,venom,trump,vampire,bongo,cat,dolphin,ulcer,sun,weather,wand,yoda,zodiac,thunder,rain,uppercase,may,seventy,icmp,javascript,python,php,java,crystal,text,code,coffees,julia,kata,visited,island,imacp,inf,ip,mnist,postfix,ostring,priority,real,prog,typescript,rslt,swap,uildc,pc,ruby,snuke,tc,pts,txt,tt,sv,YE,ie,ia,jp,evinGGGG,EEG,IOB,IIAN,KATA,OPEN,THICK,SCHPDATED,SPEECH,STREET,WEDDLE,EOL,\ufffd\ufffd\u6975,IDL,ENGLISH,INDIRECT,NUMBER,NIM,OUTPUT,OTHER,OCT,PYTHON,PROSQUE,ROTIMEa,SRR,SCROOT,USE,RETURN,TASK,VOTAL,EVOLVENTORY,INF,LIMIT,BOUND,HOUSE,HALL,BEHINDABD,CODE,MIN,MULTIPLY,DECimal,Infinities,Divisors,Digits,Inverse,Integers,Indexing,Invokeestinal,Notation,NOWA,NOTATION,MICODEvents,NORMALINK,POLICIES,STDIN,XPRIME,ZZ,TIME,TWENTY,EEKDAY,DAYS,UNITS,SECURITY,ABSOLUTE,ADVANCES,ASCII,ACTUAL,APPROPASS,ANIMAL,BIGENDLD,CHARACTER_SUBSTITUTION,DIGIT_MAX,Big_NumPy,MAX_NUMBERS,BIT_HOURS,IGNOR_OF_INT_ McH,MAGNETE,IMPOSSIBLE,ANTISTRICS,COLLECTION,CAPapult,DEAD,DIVIDE,FUNCS,FIND_TO_FOLLOW,FOR_THIS_CASE,FIZDokia,JUMP,IA,ATM_DECviews,LINI,LIKE_IN_Void,LOC,POINT,SYNCH,STRING,UPLO,UP_ENER each,ONE_CH second,two,three,four,five,six,seven,eight,nine,eleven,twenty,ninety,hundred,i_th_and_Thousand,year_on_the_shots_with_your_name_,you_have_to_keep_this_problem on your mind,and you have to figure out if you're going to be able to solve this problem for you, or not, depending on the value of your variable.\n"}, "1384": {"problem_id": 1384, "answer": "n = int(input())\ns = list(map(int, input().split()))\nprint(max(s))"}, "1385": {"problem_id": 1385, "answer": "def is_prime(n):\n if (n < 2 or n > 2) and n < 3: return False\n for i in range(3, n + 1, 2): return True\n\n if n % 2 == 0:  # if i is even, this is also a prime number\n return (i * 2 + i * 3) % 1000000007\n else: # otherwise, it's a composite number, i.e., it can't be decreased by any number greater than 2**i\n i = 0\n while i < n: i += 2\n print(''.join(str(x) for x in input()))\n"}, "1386": {"problem_id": 1386, "answer": "from fractions import gcd\nn = int(input())\nfor i in range(n):\n\tl = [int(x) for x in input().split(' ') if x!= '0'] + [0]*(2*l[0]+1)//gcd(l, l[1])\nprint(int(''.join(map(str,l))))"}, "1387": {"problem_id": 1387, "answer": "n, t = list(map(int, input().split()))\na = [int(input()) for i in range(n)]\ns = sorted(list(enumerate(a)))\nprint('YES' if len(s) > 1 else 'NO')\n"}, "1388": {"problem_id": 1388, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn=int(input())\nl=list(map(int,input().split()))\ns=[0]*n\nfor i in range(n):\n\tl[s[i]].append(i+1)\na,b,c,d=l.copy(),0,0\nd[c]=-1\nans=b*c\nif d[a]==1:ans+=b\nprint(ans)"}, "1389": {"problem_id": 1389, "answer": ""}, "1390": {"problem_id": 1390, "answer": "n, m = list(map(int, input().split()))\nf = [0] * (n + 1)\nfor i in range(m):\n   f[i] = 1\nans = 0\ni = n\nwhile i > 0: i -= n // 2\nprint(i)"}, "1391": {"problem_id": 1391, "answer": "n,m,a = list(map(int,input().split()))\nb = [int(i) for i in input().strip()]\np = []\nfor i,j in zip(b,p):\n\tp.append(j)\nprint(sum(p))"}, "1392": {"problem_id": 1392, "answer": "n,k = map(int,input().split())\na = [int(x) for x in input()]\nprint(len(a))"}, "1393": {"problem_id": 1393, "answer": "s = input()\nn = len(s)\nl = [0]*n\nfor i in range(n):\n\tl.append(l[-1] + s[i])\nprint(' '.join(map(str, l)))"}, "1394": {"problem_id": 1394, "answer": "for _ in range(int(input())):\n\ts, t = list(map(str, input().split()))\n\n\tif len(s) > 1: s = ''.join(t[::-1] +'' + t[1::] for t in s)\n"}, "1395": {"problem_id": 1395, "answer": "import math\nn = int(input())\nl = list(map(int, input().split()))\nx = 0\nfor i in range(len(l)):\n  x = x + l[i]\nprint(math.remainder(x))"}, "1396": {"problem_id": 1396, "answer": "n, k, x = list(map(int, input().split()))\ncnt = [0] * (n + 1)\nfor i in range(n): cnt[i] = max(0, (k + x) ** 0.5 - (i - k + 2 * x)))\n"}, "1397": {"problem_id": 1397, "answer": "n, m = map(int, input().split())\ns = 0\nfor i in range(m):\n\ta, b = [int(x) for x in input()]\n\n\tif a == n or b == m or (a == 0 or a > b and a % 2 == b %2) and s + a <= n: s = n\nprint(s)"}, "1398": {"problem_id": 1398, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "1399": {"problem_id": 1399, "answer": "n=int(input())\na,b,c=list(map(int,input().split()))\nfor i in range(n):\n\tx,y,z=a-b-c,a+b+c-y-z\nif(x>0 and x<n or y>=n and y<=c or x>=(n//2) and (y+1)%2==0 or (x-((n-2)*(y)//(z)))==1 ):\nprint(c)"}, "1400": {"problem_id": 1400, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, T = list(map(int, input().split()))\na = [0]\nfor i in range(n):\n\ta.append(a[i+1]%2)\nprint(T)"}, "1401": {"problem_id": 1401, "answer": "n = int(input())\na = [0] + list(map(int,input().split()))\nfor i in range(n-1):\n\ta[i] += [i+1]\np,c = 0,0\nwhile a[p]!= 0: p+=1\nc+=c//2\nprint(c)"}, "1402": {"problem_id": 1402, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nw = list(map(int, input().split()))\ns = []\nfor i in range(n):\n\ts.append(w[i] + \" \" + w[n - i - 1])\nif len(s) == 0: print(0)\nelse: s.sort()\nprint(1000007)"}, "1403": {"problem_id": 1403, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n\ta[i] = a[n - i - 1] + k\nprint(len(a))"}, "1404": {"problem_id": 1404, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += a[i]\nprint(ans)"}, "1405": {"problem_id": 1405, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a[0])"}, "1406": {"problem_id": 1406, "answer": "n,k,d = list(map(int,input().split()))\ns = []\nfor i in range(1,n+1):\n\ts.append(i)\nprint(\"\".join(s))"}, "1407": {"problem_id": 1407, "answer": "n,m = list(map(int,input().split()))\na = []\nfor i in range(n):\n  a.append([int(x) for x in input()] + [0])\nprint(max(a))"}, "1408": {"problem_id": 1408, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n\tl.append(l[-1]*(i+1) + l[i])\nprint(2)\n"}, "1409": {"problem_id": 1409, "answer": "n, k = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n): s[i] += 1\nprint(s[-1])\n"}, "1410": {"problem_id": 1410, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = [0]*n\nfor i in range(n):\n\tl.append(l[i][0]-1)\nprint(*l)"}, "1411": {"problem_id": 1411, "answer": "n,s = list(map(int,input().split()))\np = [0]*(n+1)\nfor i in range(1,n):\n  p[i] = int(input())\ns += [p[-1]]*s\nprint(s)"}, "1412": {"problem_id": 1412, "answer": "n, k = list(map(int, input().split()))\na = [int(i) for i in input()]\nb = [-1] * (n + 1)\nfor i, ai in enumerate(a, 1):\n  b[ai] = i\nprint(b[-1])"}, "1413": {"problem_id": 1413, "answer": "n = int(input())\ns = list(map(int,input().split()))\nprint(len(s))"}, "1414": {"problem_id": 1414, "answer": "n,m = list(map(int,input().split()))\ns = set()\nfor i in range(n):\n  s.add(input()[i])\nl = len(s)\nans = 0\ncnt = [0]*(m+l+n+1)//2\nwhile cnt[-1]>0 and l>=i and s[l-i]==s[:l] and ans<=m:ans+=1\nprint(ans)"}, "1415": {"problem_id": 1415, "answer": "from sys import stdin,stdout\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\ninput=stdin.readline\nsys.setrecursionlimit(10**8)\nn=int(input())\narray=list(map(int,input().split()))\ncount=0\nfor i in range(n-1):\n\tx,y,l,u,d=input()[:i+1]\nif(x==1 and y==0 and l==u and d==d and x!=y):count+=1\nprint(count)"}, "1416": {"problem_id": 1416, "answer": "n,w = list(map(int,input().split()))\na = [int(i) for i in input()]\nb = []\nc = 0\nfor x in range(1,n+1):\n\tc+=a[x-1]*(w-x)\nprint(max(c,b))"}, "1417": {"problem_id": 1417, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\ts+=a[i]\nprint(s)\n"}, "1418": {"problem_id": 1418, "answer": "n = int(input())\na = list(map(int,input().split()))\nfor i in range(n):\n\ta[i] += 1\nprint(len(a))"}, "1419": {"problem_id": 1419, "answer": "k = int(input())\ns = input()\ni = 0\nwhile i < len(s):\n  if s[i] == '-': s = s.replace('-',''); i += 1\nprint(k)\n"}, "1420": {"problem_id": 1420, "answer": "n = int(input())\na = list(map(int,input().split()))\nprint(a[0])"}, "1421": {"problem_id": 1421, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n):\n\tl[a[i]-1] = i\nprint(max(l))"}, "1422": {"problem_id": 1422, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ns = input().split()\nm = [int(x) for x in s.split('0')]\nprint('YES' if len(s) == 2 else 'NO')\n"}, "1423": {"problem_id": 1423, "answer": "n,l,r = map(int,input().split())\na = []\nfor i in range(n):\n\ta.append([int(x) for x in input()])\nl = len(a)\nb = list(range(l))\nif l == 0 or b[0] == a[b[1]-1]:\n  print(-1)"}, "1424": {"problem_id": 1424, "answer": "n,m,k=list(map(int,input().split()))\ns=[0]*(n+1)\nfor i in range(m):\n\ts[i]=sum([x for x in input() if s[x-1]==i])\nprint(s)"}, "1425": {"problem_id": 1425, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n\ta.append(sum(a[i-1:i+2]))\n\n\tans.extend([(i, i+1)])\nprint('YES' if ans else 'NO')"}, "1426": {"problem_id": 1426, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2*10**5)\n\n\n\n"}, "1427": {"problem_id": 1427, "answer": "def solve(n,a,b):\n if n==0:return a\n elif a==b: return (n+1)%(10**9+7)\n ans = 0\n for i in range(2,n-1): \n  if a%i == 0:ans = (ans+i*(a//i))%mod\n return ans\nn = int(input())\na = list(map(int,input().split()))\nb = [int(x) for x in a]\nprint(solve([(b[0],a[1]) for b in b]))"}, "1428": {"problem_id": 1428, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2147483647, 10 ** 9)\n\n \ndef solve():\n  n, c = list(map(int, input().split()))\n\td = {}\n\n\tfor i in range(n):\n#\t\tprint(d.get(c[i], 0), end ='' * (n - i) + '*' * c[n-i] for c in d.keys())\nsolve()\n"}, "1429": {"problem_id": 1429, "answer": "# cook your dish here\nn=int(input())\ns=list(map(int,input().split()))\nans=0\nfor i in range(len(s)):\n if s[i]==s[-i]:\n  ans+=1\nprint(ans)"}, "1430": {"problem_id": 1430, "answer": "n, k = list(map(int, input().split()))\ns = [input() for _ in range(n)]\ni = 0\nwhile i < len(s) and s[i] == '1':\n  i += 1 \nj = i\nk = k-1\nans = (i+j+k)//2\nprint(ans)\n"}, "1431": {"problem_id": 1431, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nn = int(input())\nA = list(map(int, input().split()))\nB = [0]*n\nfor i in range(n):\n  a, b = A[i], B[(i+1)%n]\n\n  if a==0 or b==n-1 or (a!=0 and a%2==1 and (b-a)//2 == 0 and ((a-b)**2+(a*2)*(b*(2*a))**(1/2))%1 == 1) or a>=n: print(\"No good\", end=\"\")\nelse: A.sort()\nprint(\" \".join(A))"}, "1432": {"problem_id": 1432, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\na = list(map(int, input().split()))\nrain = 0\nfor i in range(0, n):\n  temp = a[i] - 2*a[n - i - 1]*(i + 1)\n#print(rain, \"rain \"+str(temp)+\")\")\nprint(\"\")"}, "1433": {"problem_id": 1433, "answer": "n,m=list(map(int,input().split()))\na=[0]*n\nfor i in range(n):\n\ta[i+1]=i\nans=0\nwhile(len(a)>0):\n\n\tfor j in a[::-1]:\n \t\tif(j!=i and i<n and j<m):ans+=1\nprint(ans)\n"}, "1434": {"problem_id": 1434, "answer": "n = int(input())\na = [0] + list(map(int, input().split()))\nfor i in range(n-1):\n\ta.append(a[i] ^ a[-i])\nprint(2)"}, "1435": {"problem_id": 1435, "answer": "a = int(input())\nn = list(map(int, input().split()))\nprint(n[0])"}, "1436": {"problem_id": 1436, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(len(a)):\n  if a[i] > 0: s += 1 << i\nprint(s)"}, "1437": {"problem_id": 1437, "answer": "s = input()\nn = len(s)\nm = 10**9+7\nfor i in range(n):\n  if s[i] == \"0\":\n\tm*=2\nprint(m%1000000007)"}, "1438": {"problem_id": 1438, "answer": "n,k = list(map(int,input().split()))\na = [[0]*(k+1) for i in range(n+2)]\nb = [[[0,0]]+[[]]\nfor i,j in enumerate(zip(a,b)):\n  if a[i][j]!=0 and i>=j and b[j][i-1].count(0)<=k:b.append(i)\nprint(max(b))"}, "1439": {"problem_id": 1439, "answer": "n, m = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n):\n\ts[i] += 1\nprint('YES') if s else 'NO'\n"}, "1440": {"problem_id": 1440, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0] * n\nfor i in range(n):\n\tl[i+1] = min(a[:i] + 2**i)\nprint(max(l))"}, "1441": {"problem_id": 1441, "answer": "from math import ceil\nn = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\ta.append(ceil(a[-1] + b[i]))"}, "1442": {"problem_id": 1442, "answer": "n, s = list(map(int, input().split()))\nd, p, q = [], []\nfor i in range(1, n + 1):\n\td.append(d[-1] + p)\np.sort(key=lambda x: x[1])\nq.insert(0, 0)\t\t\ns += d[n - 1]\nprint(s)"}, "1443": {"problem_id": 1443, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(min(l))"}, "1444": {"problem_id": 1444, "answer": "n = int(input())\na = list(map(int, input().split()))\nk = 2\ns = 0\nfor i in range(k):\n x, y = [int(x) for x in a[i]]\n s += y\nprint(s)"}, "1445": {"problem_id": 1445, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] = [int(x) for x in input()]\nprint(''.join(a))"}, "1446": {"problem_id": 1446, "answer": "n,m,k=list(map(int,input().split()))\nc=[0]*(n+1)\nfor i in range(m):\n\tu,v,x,y=(i,sum(c)+1-i)%n;c[u][v]=(u*x+v*y,i);print(*c)"}, "1447": {"problem_id": 1447, "answer": "# cook your dish here\nn,m = list(map(int,input().split()))\ndeck = [0]*(n+1)\nfor i in range(m):\n\tdeck[i] += 1\nprint(sum(deck))"}, "1448": {"problem_id": 1448, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\nd=list(map(int,input().split()))\na=[0]*n\nfor i in range(n-1):\n  x,y=[i for i,x in enumerate(a) if x%i==0 and x!=y]\nprint('YES')\n"}, "1449": {"problem_id": 1449, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n\tn, k = list(map(int, input().split()))\n\n\ta = [[0] * (k + 1)] + [int(i) for i in input()]\n  \tfor i, x in enumerate(a): a[i].append(x)\n#\tprint(*a)"}, "1450": {"problem_id": 1450, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n\tif s[i]==s[n-i-1]: cnt += 1\nprint(\"\\n\".join(map(str,s)))"}, "1451": {"problem_id": 1451, "answer": "n,k = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(k):\n  a[i]+=int(input())\nprint(a[-1])\n"}, "1452": {"problem_id": 1452, "answer": "MOD = 1000000007\ndef power(a, b):\n\tif (a == 0 and b ==0) or (b==0 and a == a*b): return 1; return 0;\n\n\treturn ((a * b) + (power(b, a-1, -1)) % MOD) * (MOD * pow(2, MOD - 2)) // (2*MOD + 2) // ((MOD*(MOD+1)//2)%MOD)\n\n\n\n"}, "1453": {"problem_id": 1453, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n+1)\nfor i in range(m):\n\ta[i] += a[n-i-1]\ns = sum(a) // m\nprint(s)"}, "1454": {"problem_id": 1454, "answer": "def maxSum(a, b):\n  if (a[0] == 0 and a[1] < b[2]): return 0\n\n  return max(sum(x*y for x, y in zip(list(range(0, min(len(b), 2)), a))) for b in b_list)\n"}, "1455": {"problem_id": 1455, "answer": "n = int(input())\nl = list(map(int,input().split()))\nr = [0]*n\nfor i in range(n):\n\tl[i] = l.pop(0)\nprint(max(l))"}, "1456": {"problem_id": 1456, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if a[0] == \"x\" else \"NO\")\n"}, "1457": {"problem_id": 1457, "answer": "n = int(input())\nx = list(map(int, input().split()))\nprint(len(x))"}, "1458": {"problem_id": 1458, "answer": "n = int(input())\ns = input()\nl, r = 0, 0\nfor i in range(n) :\n\tif s[i] == 'a' : l += 1\nif l == r : print(\"YES\")\nelse :   print('NO')\n"}, "1459": {"problem_id": 1459, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nt = []\nfor i in range(n):\n\ts[i] = s[n-i-1] + 1 if i else 0\n#print(s,t)\ndef find(a,i,a[:]) : return a[0]+1 if (i+1)%2 == 0 else a.pop()[1:]\nwhile len(set(find(t,0,s))!= 0) : t = t + [s]\n"}, "1460": {"problem_id": 1460, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(1, n+2):\n  if a[i] == 0: b[-1] = i\nprint(len(b))"}, "1461": {"problem_id": 1461, "answer": "n,k = list(map(int,input().split()))\nf = [0]*n\nfor i in range(n-1):\n\tf[i] = k - (i+1)//2\np = [-1] + [f]\nwhile p!= -1:\n\n\tif f[p] == 0: p = p[1:]\n \telse: f.append(p)\nprint(*f)"}, "1462": {"problem_id": 1462, "answer": "n, k = list(map(int, input().split()))\nprint(n-k)"}, "1463": {"problem_id": 1463, "answer": "n = int(input())\nl = []\nfor i in range(n):\n\tl.append(list(map(int,input().split())))\ns,t = l[0],l[-1]\na,b = 0,0\nwhile(a+b)<n and (s+t)>1:\n\n\tif(s%2==0 and s//2!=0) and(b+a)==n-s-t:s+=1\nprint(\"Yes\")\n"}, "1464": {"problem_id": 1464, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = input()\nfor i in range(len(a)):\n\ts += a[i]\nprint(s)"}, "1465": {"problem_id": 1465, "answer": "n, k = map(int, input().split())\ns = input()\nl, r = 0, 0\nfor i in range(k):\n\tif s[i] == '0' and l < r: l = i + 1\n\n\telse: r += i\nprint(len(s))"}, "1466": {"problem_id": 1466, "answer": "from collections import defaultdict\nn, m, k = list(map(int, input().split()))\nedges = [set() for _ in range(n)]\nfor i, x in enumerate(list(range(1, n+1))):\n   edges[x].add(i)\nans = 0\nmaxi = min(k, maxi + k - (n-1)//2 + (m-k) // 2 + 1) - k\nprint(max(0, end=\" \") + end = \"\")\n"}, "1467": {"problem_id": 1467, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[a[i]] += 1\nprint(len(b))"}, "1468": {"problem_id": 1468, "answer": "n = int(input())\na = list(map(int,input().split()))\ncnt = 0\nfor i in range(n-1):\n\tif a[i] == \"#\": cnt += 1\nprint(\" \".join([\"#\" for _ in a]))"}, "1469": {"problem_id": 1469, "answer": "from collections import deque,defaultdict\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nINF = 10 ** 18\nMOD = 998244353\ndef LI(): return [int(x) for x in input().rstrip('\\n').split(' ')]; return list(map(int,input().split()))\n# def LI2(n): return [[x[i] for i,x in enumerate(list(LI()[:n+1]))] for j in LI()]\nn = int(input())\nedges = []\nvisited = [False] * n\nfor i in range(2, n+2):\n  if not visited[0] or not i[1] in visited: continue; visited[n] = True; i = n + 1; edges.append(i); if i == n: break; print(' '.join([' ']*n + [' '*2])))\nprint(len([i for u in edges if u!= i]))"}, "1470": {"problem_id": 1470, "answer": "#!/usr/bin/env python3\nfrom math import sqrt\ndef solve(x,y,z=0):\n  if x==0 or y==1 or z==2: return 0\n\n  a,b,c,d,e,f,g,h,i=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,138,139,140,141,144,145,146,148,149,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,180,181,182,183,184,186,187,188,189,190,191,194,195,196,197,198,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,221,222,233,234,235,236,237,238,239,241,242,244,257,258,259,271,293,307,311,313,314,317,331,332,334,339,340,341,343,444,445,446,457,459,461,463,464,467,468,469,479,480,481,484,489,490,491,494,500,501,503,509,512,593,605,606,607,609,610,614,641,643,644,647,653,668,669,680,681,684,686,688,689,690,696,707,308,309,312,325,326,327,348,352,353,354,355,359,362,364,369,367,372,373,374,375,376,378,379,382,383,384,385,388,389,392,400,401,409,419,421,432,433,404,405,406,408,410,411,412,523,524,625,260,263,269,280,281,283,284,304,305,316,337,356,357,358,360,363,366,377,386,387,391,394,462,474,475,477,486,487,488,499,514,526,587,589,598,599,601,616,617,613,628,629,660,661,673,694,695,697,698,699,797,800,801,804,806,805,807,808,810,911, should be solved"}, "1471": {"problem_id": 1471, "answer": "# https://atcoder.jp/contests/arc082/submissions\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nn = int(input())\ngraph = [[] for _ in range(n)]\nfor i,v in enumerate(list(map(int,input().split()))):\n  graph[v].append(i+1)+graph[i][v]\nvisited = [0]*n\nans = 0\nwhile len(graph)>0:\n\n  if visited[n-1] == 1:   ans = ans + 1 \nprint(ans)"}, "1472": {"problem_id": 1472, "answer": "import sys\ninput = sys.stdin.readline\nn, x, y = list(map(int, input().split()))\ngraph = [[] for _ in range(y)]\nvisited = [False] * (y + 1)\nfor i, v in enumerate(graph[0]):\n  if visited[v] == False: continue   # edge is visited, check if it's the same for v, i.e. if graph[i][v].get(v, 0) > 0: print(i)\n\n  for j, u, w in zip(list(range(n)), graph, visited): # if not visited: return False, so that we don't have to check for a new edge, because we can directly check to see if v and w are connected, and if so, we know that they're not connected: if u!= w, then u is connected with w and so w is adjacent to v: v is in visited and thus adjacent, but not to w: the distance from v to i is not equal to or greater than i: i does not know if this is a valid edge or not: so we need a way to determine this, as well as any other valid edges: a, b, c, d, e, f, g, h\nprint('\\n'.join([str(x) for x in x]))\n\n"}, "1473": {"problem_id": 1473, "answer": "n = int(input())\nl = []\nfor i in range(n):\n\ta, b = list(map(int, input().split()))\n\n\tl.append(a+b)\nprint(''.join(l))"}, "1474": {"problem_id": 1474, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tif a[i] == 1: ans += 1; break\nprint(ans)\n"}, "1475": {"problem_id": 1475, "answer": "n,b,k,x=list(map(int,input().split()))\nmod=10**9+7\np=int(input())\nfor i in range(n):\n\tp=(p*(p+1))%mod\n  \tif p>=k:print(i)\n"}, "1476": {"problem_id": 1476, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n\tif a[i] == i+1: ans += 1\nprint(ans)\n"}, "1477": {"problem_id": 1477, "answer": "from collections import defaultdict\nn, m = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(m): s[i+1] = int(input())\nans = []\ndef dfs(i, t):\n  if t == 0: ans.append(0)\n\n  for j, x in enumerate(s[t-1], i): ans[j] += x\nprint(len(ans))"}, "1478": {"problem_id": 1478, "answer": "# cook your dish here\nimport sys\ninput = sys.stdin.readline\ndef read_int():\n  return int(input())\nsys.setrecursionlimit(10**6)\nread = lambda: read(0)"}, "1479": {"problem_id": 1479, "answer": "n,m,k=list(map(int,input().split()))\ns=0\nfor i in range(0,n):\n s+=int(input())\n if s%k==0:print(s//k)\n else:s+=k\n"}, "1480": {"problem_id": 1480, "answer": "#!/usr/bin/env python3\nfrom sys import stdin, stdout\ndef read_int(): return int(stdin.readline()).rstrip('\\n') or '0' or (0<=i<n-1 and i%2!=0) or [0]*(n//2-i+1):\nreturn int(''.join(map(str,list(range(0,i,2))) for i in range(int(input()))) if i>0 else 0)"}, "1481": {"problem_id": 1481, "answer": "n = int(input())\ns = input()\nfor i in range(n):\n\tif s[i] == \"o\" and len(s) > 1: print(\"YES\")\n"}, "1482": {"problem_id": 1482, "answer": "n,k = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n\ta[i+1]+=1\n#print(a)\nk=int(input())\nif k==1:print('1'*k)"}, "1483": {"problem_id": 1483, "answer": "n = int(input())\nl = list(map(int,input().split()))\ncount = 0\nfor i in range(n):\n\tif l[i]%2 == 0: count += 1\nprint(count)"}, "1484": {"problem_id": 1484, "answer": "n,k = map(int,input().split())\na = [int(i) for i in input()]\nl = len(a) - 1\nans = 0\nfor x in range(k):\n  if a[x]%2 == 0: ans += x\nprint(ans)"}, "1485": {"problem_id": 1485, "answer": "n,m = map(int,input().split())\na = [int(x) for x in input()]\nb = []\nfor i in range(n):\n\tb.append(a[i]%2)\nc = b[-1].count('1')\nprint(c)"}, "1486": {"problem_id": 1486, "answer": "n = int(input())\nl = list(map(int, input().split()))\nans = [-1] * (n + 1)\nfor i in range(n - 1):\n  if l[i] == -1: ans[0] = i\nprint(ans[1])\n"}, "1487": {"problem_id": 1487, "answer": "s = input()\nt = int(s)\nfor i in range(len(t)):\n\tif t[i] == '0': s = ''.join(map(str, s))\nif s == t: print('Impossible')"}, "1488": {"problem_id": 1488, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = [0]*n\nfor i in range(n-1):\n  d[i+1] = 1\nans = 0\nwhile(d[n]!=0 and a[0]+a[1]-1>ans):\n\n  ans += 1<<i\nprint(ans)"}, "1489": {"problem_id": 1489, "answer": "# cook your dish here\nfrom collections import defaultdict\nd=defaultdict(list)\nfor _ in range(int(input())):\n x,y=list(map(float,input().split()))\n d[x].append((y,0) if y==0 else (x-y)%1000000007)\n\n print(d[(x,1)])\n"}, "1490": {"problem_id": 1490, "answer": "n, m = list(map(int, input().split()))\na = [int(i) for i in input()]\ns = sorted(a, reverse=True)\nprint(len(s))"}, "1491": {"problem_id": 1491, "answer": "def find_min(a, b):\n  if (a == 0 and b ==0) : return 0\n\n  for i in range(len(b) - 1, 0, -1):  # b[i] is the number in the pile that contains i, i+1 or i + 2. i is odd, so it's not possible to add i to the ith pile, there's only one way to do that. Find the smallest number and print it as the minimum number (i.e. 1) of all moves required."}, "1492": {"problem_id": 1492, "answer": "from collections import deque\nn,m=list(map(int,input().split()))\nl=[[0]*(n+1) for i in range(m)]\nfor i,x in enumerate(input()):\n\tl[i][0]=x\nq=deque([(0,0)])\nwhile q:\n\n\ti,j=q.popleft()\n \tif i==n-1 and j==m-2 and l[j][1]=='X' and i!=i+2:l.append([j,(j-i)+(i-j)//2])\n\n  \nprint(max(l))"}, "1493": {"problem_id": 1493, "answer": "n,m = list(map(int,input().split()))\ns = input()\nc = [0]*n\nfor i in range(n):\n  if s[i]=='W' and i!=n-i-1:c.append(i+1)\nprint('B',c)"}, "1494": {"problem_id": 1494, "answer": "s, p = list(input()), [0]\nfor i in range(1, len(p)):\n  if p[i] == 'a' and s[-i-1] < s^(i) - s - 1: s += 1\nprint(' '.join(map(str, s)))\n"}, "1495": {"problem_id": 1495, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(1, n+2):\n  b[i] = a.pop()\nprint(max(b))"}, "1496": {"problem_id": 1496, "answer": "n,m,k,s=list(map(int,input().split()))\na=[0]*n\nfor i in range(m):\n\ta[i]=int(s/i)\nif k>=0:print(n-k+1,end=' ')\n\n"}, "1497": {"problem_id": 1497, "answer": "n = int(input())\na = []\nfor i in range(n):\n\ta.append(list(map(int,input().split())))\nprint(max(a))"}, "1498": {"problem_id": 1498, "answer": "n, q = list(map(int, input().split()))\ns = 0\nfor i in range(q):\n\tk, d = [int(x) for x in input()]\n\n\tif k[0][0] == 1: s += d\nprint(s)\n"}, "1499": {"problem_id": 1499, "answer": "n,m=list(map(int,input().split()))\nl=[]\nfor i in range(1,n+1):\n\tl.append([int(input()),i-1])\nc=0\nr=n-l[0][0]\nwhile(len(l)>0 and l[r][1]==0):r-=1\nprint(c)\n"}, "1500": {"problem_id": 1500, "answer": ""}, "1501": {"problem_id": 1501, "answer": "n, m = list(map(int, input().split()))\ns = input()\na = [0]*n\nfor i in range(m):\n\ta[i] = a[n-i-1] + i\nprint(sum(a))"}, "1502": {"problem_id": 1502, "answer": "a = int(input())\nprint(a)"}, "1503": {"problem_id": 1503, "answer": "n, m = list(map(int, input().split()))\na = []\nfor i in range(m):\n   a.append([int(input()) for _ in [0]*(n+1)])\nans = 0\ndef find(x, i, j): \n\tif x[i] == j[j]: return 0 \n\n\ti = i + 1\n\n \twhile i >= 0 and j < n:  # i < j and i!= j or j!= i or i==j or (j-i) == (i-j) or ((i+j)-(i*j))==(j+i): return i+2*i + j-1\n# print(a, ans)\nprint(ans)"}, "1504": {"problem_id": 1504, "answer": ""}, "1505": {"problem_id": 1505, "answer": "p = list(map(int, input().split()))\nax, ay = [], []\nfor i in range(0, len(p)):\n  ax.append(ax[-1] + p[i]*(i+1)//2)\n# print(\"ax:\", ax, \"ay:\")\nx = ax[0]\ny = ay + ay\nans = 0\ndx, dy = (dx+dy)**0.5, (dy+dx)*(2*dx)%10000000000\nq = int(input()), [int(x) for x in x.split(\" \")]\nprint(ans)"}, "1506": {"problem_id": 1506, "answer": "n = int(input())\na = list(map(int, input().split()))\np = []\nfor i in range(n):\n\tp.append(a[i])\nans = sum(p)\nprint(ans)"}, "1507": {"problem_id": 1507, "answer": "s = input()\nn = len(s)\nguards = 0\nfor i in range(n):\n   if s[i] == \"A\" and i + 1 < n - 1: s = ''.join(map(str, s.split(\" \")))\nprint(\"YES\")\n"}, "1508": {"problem_id": 1508, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n\tl.append(a[i])\nans = [0] * (n + 2)\nwhile len(l) > 0:\n\n\tif l[-1] - l.pop() == i: ans[l[0]] = i\nprint(''.join(ans))"}, "1509": {"problem_id": 1509, "answer": "from collections import defaultdict\nn = int(input())\na = list(map(int, input().split()))\nb = [0] * (n + 1)\nfor i in range(n - 1):\n  a[i] += b[-i-1]\nans = 0\ndef dfs(i, j): return 0 if i == j else 1 + (dfs(j, i) if j == 0 else 0) + dp[j] + ans\nprint(ans)"}, "1510": {"problem_id": 1510, "answer": "n,m = list(map(int,input().split()))\na = [int(x) for x in input()]\nb = []\nfor i in range(n):\n\tb.append(a[i] + b[-1-i])\nans = max(b)\nprint(ans)"}, "1511": {"problem_id": 1511, "answer": "n,m,k = list(map(int,input().split()))\np = [0]*n\nfor i in range(n-1):\n\tx = p[i+1]\n\n\tif x%2==0 and x!=0:p[x//2]+=x\nprint(1)\n"}, "1512": {"problem_id": 1512, "answer": "n = int(input())\np = list(map(int, input().split()))\na = []\nfor i in range(n):\n\ta.append(p[i] + p[n-i-1])\nprint(len(a))"}, "1513": {"problem_id": 1513, "answer": "n, m, k = list(map(int, input().split()))\nt = [0] * (n + 1)\nfor i in range(n): t[i] = min(t[-i - 1], m) + k\nprint(min(k, n + m + 2*k))\n\n"}, "1514": {"problem_id": 1514, "answer": "n=int(input())\na=list(map(int,input().split()))\nans=[]\nfor i in range(n):\n\tif a[i]%2==0:ans.append([])\nprint(*ans)\n"}, "1515": {"problem_id": 1515, "answer": "p,x=map(int,input().split())\nprint(p)"}, "1516": {"problem_id": 1516, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0]*n\nfor i in range(n):\n\tl[i] += 1\nprint(sum(l))"}, "1517": {"problem_id": 1517, "answer": "n = int(input())\na = list(map(int,input().split()))\np = [0]\nfor i in range(n):\n\tp.append(a[i]%n)\n#print(p,a,p[n-1])\nans = 0\ncount = 1\nwhile p[0][1]<=n:\n\n\tcount+=1\n \tif count%2==0:ans+=a.pop()\nprint((ans+1))\n\n"}, "1518": {"problem_id": 1518, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n\ta.append(a[-1] + i)\nprint(c)"}, "1519": {"problem_id": 1519, "answer": "n, l, a = list(map(int, input().split()))\na = max(a, 0)\nans = 0\nfor i in range(n):\n\tif a % i == 0 and a // i not in l and l - a <= i - i + a: ans += i\nprint(ans)"}, "1520": {"problem_id": 1520, "answer": "n = int(input())\nl = []\nfor i in range(n):\n\tl.append(''.join(map(str,input().split())))\nprint(len(l))"}, "1521": {"problem_id": 1521, "answer": "p,n=list(map(int,input().split()))\narr=[]\nfor i in range(n):\n\tarr.append(p*i%p)\nprint(sum(arr))"}, "1522": {"problem_id": 1522, "answer": "n = int(input())\ns = input()\nd = {}\nfor i in range(n):\n\td[i] = list(map(int,input().split()))\nprint(len(d))"}, "1523": {"problem_id": 1523, "answer": "n, k = list(map(int, input().split()))\nl = [0] * (k + 1)\nfor i in range(n): l[i] = min(l[-1], i + k) + (1 if i % 2 == 0 else 0) * k\nans = 0\nq = int(input())\nwhile(q > 0):\n\tl.append(min(k, q - (n - k)))\nprint(ans)"}, "1524": {"problem_id": 1524, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\nINF = float('inf')\nMOD = 10 ** 9 + 7\nN = int(input())\ns = list(map(int, input().split()))\ncnt = 0\nfor i in range(len(s)):\n\tif s[i] == '0' and cnt == N - i - 1:   print(i-1)"}, "1525": {"problem_id": 1525, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(2147483647)\nmod = 10**9 + 7\nn = int(input())\nl = [int(x) for x in input().split()]\ns = list(map(int, l))\nans = 0\nfor i in range(1, len(l)):\n  ans += (s[i]*(i-1))%mod\nprint(ans)"}, "1526": {"problem_id": 1526, "answer": "def func(a, b, c, d):\n  if (a == 0 and b ==0) and (c == 1 and d ==1) : return 0\n\n  a = a*2 if a < b else a + b*c if b < c else b + c*d if c < d else c + d*(c - d)\n"}, "1527": {"problem_id": 1527, "answer": "# coding: utf-8\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nfrom heapq import heapify,heappush, heappop\ninp = lambda: list(map(int, input().split()))\nINF = float('inf')\nmod = 10**9+7\ndef solve(s):\n s = s[0]\n for i in range(1,s[-1] + 1): \n  s += [i]*i\n return s\nsolve(0)"}, "1528": {"problem_id": 1528, "answer": "n,x=list(map(int,input().split()))\na=0\nfor i in range(n):\n   if i*(i+1)/2==x:a+=1\nprint(a)\n"}, "1529": {"problem_id": 1529, "answer": "n = int(input())\na = [0] * (n + 1)\nfor i in range(n - 1, 0, -1):\n if a[i] =='m':\n  print('Rainy's', i + 2)"}, "1530": {"problem_id": 1530, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split(' ')))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "1531": {"problem_id": 1531, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n\tl.append(a[i]*(i+1)//2)\nprint(*l)"}, "1532": {"problem_id": 1532, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n-1):\n\ts.append(i+1)\nprint(' '.join(s))"}, "1533": {"problem_id": 1533, "answer": "n = int(input())\ns = list(map(int, input().split()))\nprint('YES' if s[0] == 'a' else 'NO')"}, "1534": {"problem_id": 1534, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,setrecursionlimit\nimport math,bisect,sys,itertools,heapq,collections,deque,re,math,string,functools\ninput = lambda:stdin.readline\ndef input(): return map(int,input().split())\na = input()\nn = len(a)\ncnt = 0\nfor i in range(n-1,0,-1):\n  if a[i] == 'b': cnt += 1\nans = n//2\nprint(ans)"}, "1535": {"problem_id": 1535, "answer": "import math\nfrom collections import defaultdict, deque\nN,X,Y = map(int,input().split())\nA = [int(i) for i in input().strip()]\nfor _ in range(N):\n  x,y = list(map(lambda x: math.floor(x/y),A))\nprint(sum(A)//N)"}, "1536": {"problem_id": 1536, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n-1):\n  a[i] = (b[-2] + b[0])*(i+2)\nans = [-1] * n\nmaxx = -1\nminy = min(a[:n])\nwhile maxx!= miny!= 0 and minx == maxy == 0:\n\n  if (maxy-minx) % 2 == 1 and (x+y+z)%2 == -10**8 or (z+x + y + z) == (n//2 - 1) and x!= y and y!= z and z!= x and n // 2!= n:   print(\" \", end = \"\")\n\tans[n] += 1\n\n\tfor x,y,z in zip(ans,a): \t\t# print(sorted(b,key = lambda x: x[1],reverse = True)[:x[2]+1:] + \" \".join([str(e) for e in b])) "}, "1537": {"problem_id": 1537, "answer": "n, k = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n):\n\ts[i] = s[n-i-1]\nprint(max(s))"}, "1538": {"problem_id": 1538, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n  if a[i] < b[-1][i]: b.append(i)\nprint(len(b))"}, "1539": {"problem_id": 1539, "answer": "n = int(input())\nl = list(map(int,input().split()))\nd = {}\nfor i in range(n):\n  d[i] = d.get(i,0)+1\nprint(d.values())"}, "1540": {"problem_id": 1540, "answer": "n,m,k = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(m):\n\ta[i] = a[k-1]\nc=0\nd={}\ni=1\nwhile(i<n and i>0):\n\n\tif(c==0 and (i%k)==1):d[c]=i//k\n \telse:c = (c+d.get(k,0))//2\nprint(d)\n\n"}, "1541": {"problem_id": 1541, "answer": "# cook your dish here\ns = input()\nn = len(s)\na = 0\nfor i in range(n-1):\n  if s[i] == '=': a += 1\nprint('left')\n"}, "1542": {"problem_id": 1542, "answer": "n = int(input())\ns = [int(x) for x in input().split()]\nans = 0\nfor i in range(n-1):\n\ts.append(s[i+1]*(1<<i)//2)\nprint(ans)"}, "1543": {"problem_id": 1543, "answer": "import sys\ninput = sys.stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nc=[]\nfor i in range(n-1):\n\tc.append(a[i]-c[-i])\nprint(len(set(c)))\n"}, "1544": {"problem_id": 1544, "answer": "n = int(input())\nl = []\nfor i in range(n):\n\tl.append(list(map(int,input().split())))\nprint(sum(l))"}, "1545": {"problem_id": 1545, "answer": "n = int(input())\ns = input()\nl = len(s)\nm = 10**9+7\nans = 0\nfor k in range(n):\n\tif s[k] in l: ans += k\nprint(ans%m)"}, "1546": {"problem_id": 1546, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n\ta[i] = s.append(i)\nprint(*a)"}, "1547": {"problem_id": 1547, "answer": "n,m,k = list(map(int,input().split()))\ns = []\nfor i in range(k):\n\ts.append([i,0])\nans = [0]*(n+m+1)\nt = 0\nwhile t<n and s[-1][1]==0:t+=1\nprint(t)"}, "1548": {"problem_id": 1548, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] = a[n-i-1] + b[(i+1)%n]\nprint(max(a))"}, "1549": {"problem_id": 1549, "answer": "from sys import stdin,stdout\nn,m,q=list(map(int,input().split()))\na=[int(i) for i in input()]\nb=[]\nfor _ in range(q):\n\tk,p,s=[],0\n\n\tfor i,v in enumerate(a[k-1]):p-=1;s+=b[v][0]-v\n \tb.append(v)\n#print(b,a,b)\n\n"}, "1550": {"problem_id": 1550, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += a[i]\nprint(s)"}, "1551": {"problem_id": 1551, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom heapq import heappush,heapify\ndef inp():\n\treturn [int(i) for i in input().rstrip().split()]\na,b,c,d,s=inp()\nans=0\nfor x,y,z in zip(range(0,len(a),2*(b-a)//2),(c+d+c)+(s+s)**2,(s-d)*(d-s))[::-1]:\n\n\tif a%x==0 and b%y==1 and c%z==2 and d%(x+y+z)==c:ans+=1\nprint(ans)"}, "1552": {"problem_id": 1552, "answer": "n = int(input())\nt = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tif t[i] == 1: ans += 1\nprint(ans)\n"}, "1553": {"problem_id": 1553, "answer": "n, h = list(map(int, input().split()))\na = [0] * n\nfor i in range(n):\n\ta[i] = int(input())\nans = 0\nk = n-1\n#print(a)\nwhile k > 0:\n\n\tif a[k] == 0 and k % 2 == 1 or (k - 1) * 2 > a.count(1) or k / 2 in a: ans = max(ans, k // 2 + 1); k = k - 2\nprint()\n"}, "1554": {"problem_id": 1554, "answer": "n = int(input())\na = list(map(int, input().split()))\nl, r = 0, 0\nfor i in range(n):\n\tif a[i] == 1: l = max(a[l], l + 1)\n\n\telse: r += 2\nprint(l)"}, "1555": {"problem_id": 1555, "answer": "n,m = map(int,input().split())\na = []\nfor i in range(n):\n\ta.append([int(x) for x in input()])\nprint('Yes',a[n-1])"}, "1556": {"problem_id": 1556, "answer": "n,k,x = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(k):\n\ta[i] = a[n-i-1]\nans = min(a)+k\nprint(ans)"}, "1557": {"problem_id": 1557, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nimport math,bisect,collections,math,string,tuple,fractions,heapq,sys,random,copy,functools\nsys.setrecursionlimit(10**8)\ninf = 10**20\nmod = 998244353\ndef read_int(): return int(stdin.readline().strip() or '\\n')\n\ndef write_string(s): stdout.write(' '.join(map(str,s.split(' '))) + str(math.sqrt(2)))\n \nn,a,c,h,m,d = list(range(100000),0,0),list(),list()\nif m*n<=a*c:return\nfor i in range(n):d[i] = d[n-a-1] + c*i\nprint(*d)"}, "1558": {"problem_id": 1558, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\ta.append(str(b[i] + b[n - i - 1]) + '\\n')\nprint(len(a))"}, "1559": {"problem_id": 1559, "answer": "n = int(input())\na = 0\nfor i in range(n):\n\tx = list(map(int,input().split()))\n\n\tif x > a: a = x\nprint(a)\n"}, "1560": {"problem_id": 1560, "answer": "n = int(input())\na = input()\nprint(1)\n"}, "1561": {"problem_id": 1561, "answer": "n = int(input())\na = list(map(int,input().split()))\nk = 0\nfor i in range(n):\n  if a[i] == \"*\": k += 1\nprint(k)\n"}, "1562": {"problem_id": 1562, "answer": "from collections import deque\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,m,k,q=list(map(int,input().split()))\nl=[[] for i in range(k)]\nr=[0]*n\nans=0\nwhile(len(l)>0):\n\tc,a,b=l.pop(0),l[0].popleft()\n\n\tif(a==b and c!=a-b) or (b==a and a!=(b-a)//(c-c)) or b==c and (a>=b or a<=c) and r[a]==r[b]:\n \t\tans+=((m-k)*(q-q))//q\nprint(ans)\n"}, "1563": {"problem_id": 1563, "answer": "from collections import defaultdict, deque, Counter, OrderedDict, R, List, Union, SegmentTree\nimport sys\ninput=sys.stdin.readline\nn,m=map(int,input().split())\nedges=defaultdict(list)\nfor i in range(m):\n\tv=set()\n  \tc=list()\n\n\tfor j,c in enumerate(vertices(c))[::-1]:\t\t#\u521d\u59cb\u5316\u8ba1\u7b97\u8ddd\u79bb\u7684\u957f\u5ea6\uff0c\u9700\u8981\u7b2ci\u5230i-j\u7684\u6570\u636e\u5e8f\u5217\u8868\u5143\u7d20\u7684\u7ed3\u679c\u7684\u6700\u5c0f\u8fb9\u7684\u533a\u57df\u800c\u7a7a\u95f4\u5219\u6709\u591a\u5c11\u4e2a\u8282\u70b9\u6574\u9664\u5207\u6210\u8303\u56f4\u5185\u7684\u8d77\u6765\n#\u9996\u5148\u6307\u9488\u5bf9\u8e29\u66ff\u4ee3\u72b6\u6001\u7684\u904d\u5386\u4f1a\u6539\u53d8\u4e24\u4e3a\u6807\u51c6\u5224\u5b9a\u81f3\u659c\u8d28\u73af\u548c\u6837\u4f8b\u5982\u6392\u51fa\u53cc\u7684\u5173\u7cfb\u89e3\u51b3\u8fc7\u7a0b\u53ef\u4ee5\u8003\u8651\u7528\u4e8e\u6ee1\u8db3\u6761\u4ef6\u7684\u540c\u4e00\u79cd\u7c7b\u4f3c\u7684\u6808\u5e94\u8bdd\ndist=[0]*(n+m+1)  #\u53f3\u4e0b\u9762\u7684\u503c\u662f\u5426\u88ab\u8c37\u6b4c\nv.sort() #\u6bcf\u6b21\u5171\u540e\u4e00\u6bb5\u843d\u7684v\u91cd\u65b0\u83b7\u53d6v\u7684\u60f3\u6cd5\nqueue=[[0,0],[0,-1]]\nvisited=[set([v[0]]) for v in v[1:]] #\u5206\u5272\u5b50\u6811\u7684\u67e5\u624d\u6545\u76ee\u5bfc\u805a\u5411queue[v]\ndef dfs(u,v,seen=False): #\u672c\u8e48\u5237\u5165\u6a21\u5757\u641c\u5c0b\u6578\u64da\u9047\u522b\u8986\u76d6\u7684\u53cd\u8f6c\u62ec\u6216\u8005\u82e5\u4e0d\u77ed\u4e0d\u4f1a\u9000\ufffd\ufffdotomized \u7b54\u6848\nif visited[u]==set(v): return True\nelse: return False"}, "1564": {"problem_id": 1564, "answer": "n = int(input())\ns, t = list(map(str, input().split()))\nc = 0\nfor i in range(n):\n\tif s[i] == 'a' and t[(i+1)%len(s)-1]!= 'b' or c == len(t) - 1: c += 1\nprint(c)\n"}, "1565": {"problem_id": 1565, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\nn = int(input())\nl = list(map(int, input().split()))\nans = 0\nfor i in range(len(l)):\n  if l[i] == '0':\n\tans += 1\nprint(ans)"}, "1566": {"problem_id": 1566, "answer": "from math import sqrt\nfor _ in range(int(input())):\n  x,y = list(map(float,input().split()))\n\n  n = int(sqrt(x*x+y*y) for x in input().strip() if x>=0)\n#print(n,n)\n\n"}, "1567": {"problem_id": 1567, "answer": "n,k=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append([int(input()),i+1]*k)\nprint(sum(a))"}, "1568": {"problem_id": 1568, "answer": "n, a, b, c, t = list(map(int, input().split()))\na = b = c = 0\nfor i in range(n):\n  if a + b <= t: a = min(a, max(0, i - t - a) * b)\nif a == b: break\nprint(max(sum(c) for c in a))"}, "1569": {"problem_id": 1569, "answer": "n,m = list(map(int,input().split()))\ng = [[] for i in range(m+1)]\nfor i,j in zip(input(),input())[::-1]:\n  g[i].append(j)\na = [0]*n\nb = [-1]\ndef dfs(s,i,c,d):\n if i>=len(g[s]) or c>d: return\n for j,v in enumerate(a[:i]+b[j:],i+n-m):   # i is the length of road i and j is i-j-i-c-d-s-a-b-x-y-z=0\n k = sum(dfs(x,y,z,0) for z,x in g.items() if x>0 else 0 for x in x) if c==d\n return k\nans = min(ans,n*(k+2*m)//2)\n\n"}, "1570": {"problem_id": 1570, "answer": "n,k,a=list(map(int,input().split()))\nprint(a)\n"}, "1571": {"problem_id": 1571, "answer": "s = input()\nn = len(s)\nm = int(input())\nfor i in range(m):\n\ts[i] = list(map(int,input().split()))\nprint(0)"}, "1572": {"problem_id": 1572, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0]\nfor i in range(n):\n\tl.append(a[i]-1)\nprint(max(l))"}, "1573": {"problem_id": 1573, "answer": "n, d = map(int, input().split())\na = [0] + [int(i) for i in input()]\nfor m, s in zip(sorted(a), sorted(list(range(n)), reverse=True)):\n\ta[m] += s\nans = max(0, m - n)\nprint(ans)"}, "1574": {"problem_id": 1574, "answer": "n, m = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n): s[i+1] = i+s[n-i]\nprint(-1)\n"}, "1575": {"problem_id": 1575, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nn = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n\tl[i] = [int(x) for x in input().rstrip('\\n').split(' ')]\nprint(max(l))"}, "1576": {"problem_id": 1576, "answer": "from itertools import zip_longest\nt = list(map(int, input().split()))\ns = []\nfor i in range(1, len(t)):\n  s += t[i]\nprint(''.join(s))"}, "1577": {"problem_id": 1577, "answer": "n = int(input())\ns = input()\ni = 0\nfor i in range(n):\n\tif(s[i] == \"A\"): i += 1\nprint(\"AntON\")\n"}, "1578": {"problem_id": 1578, "answer": "# cook your dish here\ndef gcd(x,y):\n if x==y: return y\n else: x, y = y, x%y\n return x\n \n"}, "1579": {"problem_id": 1579, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\tx,y,z=[],[]\nif(a[i]!=x+y+z[0]==0 and a[(i+1)%n-1]<x and x<y and y<z and z[-2]>0):s+=max(s,0)\nelse:s+=((x-y)*(y-z))//2\n"}, "1580": {"problem_id": 1580, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(m):\n\ta[i] = int(input())\n#print(a, n, a[1:])\nif n % 2 == 0 and n > 1:\n\n\t# print(\"1\")\n \tx = a.index(1) + 2 * n // 2\nelse:   x = 0\n"}, "1581": {"problem_id": 1581, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()"}, "1582": {"problem_id": 1582, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(len(a)):\n if a[i]%10 == 1: cnt += 1\n else: break"}, "1583": {"problem_id": 1583, "answer": "import math\nfrom sys import stdin, stdout, setrecursionlimit\ninput=stdin.readline\nn=int(input())\nprint(math.sqrt(n))"}, "1584": {"problem_id": 1584, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nsys.setrecursionlimit(2147483647)\nn = int(input())\nl = list(map(int,input().split()))\nd = [[0]*(n+1) for _ in range(len(l)+1)]\nfor i in l[1:]:\n  d[i][i] = i\nans = sum(d[-1])\nprint(ans)"}, "1585": {"problem_id": 1585, "answer": "def main():\n\tX, Y = list(map(int, input().split()))\n\n\ta = X + Y-X\n \tprint(max(a, 2*(X-Y))+2*a)\n"}, "1586": {"problem_id": 1586, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nprint(a[::-1])"}, "1587": {"problem_id": 1587, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nn = int(input())\ns = list(map(int, input().split()))\na = [0]*n\nfor i in range(n-1):\n  a[i+1] = i\nans = 0\nflag = True\nwhile(flag == False):\n\n  if(s[a[0]] == 'W' and s[c[1]]=='R') or (s.count('W') == 0 and a.pop() not in s.keys()): ans += 1\nprint(ans)"}, "1588": {"problem_id": 1588, "answer": "n = int(input())\nx = list(map(int,input().split()))\ny = [0]*n\nfor i in range(n):\n\tx[i] = x[n-i-1]\nans = 0\nwhile(len(y)>0 and y[0]+y[1])!=0:\n\n\ty.pop(0)\n \tans += (n - i) * (i+1) // 2\nprint(ans)"}, "1589": {"problem_id": 1589, "answer": "n,m = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n  a[i] = 1 if i%2==0 else 2*i-1\n#print(a)\nif n==2*m or m==1 or (n==n-2) or n>n//2 :\n\tprint((a[0]+1)%n)"}, "1590": {"problem_id": 1590, "answer": "from sys import stdin, stdout\nn = int(stdin.readline().strip())\na = list(map(int, range(n)))\nans = [0] * n\nfor i in a: ans[i] += 1\nprint(ans[-1])"}, "1591": {"problem_id": 1591, "answer": "n,k = list(map(int,input().split()))\nprint(n-k+1)\n"}, "1592": {"problem_id": 1592, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)\n"}, "1593": {"problem_id": 1593, "answer": "n, s = list(map(int, input().split()))\nl = [0] * (n+1)\nfor i in range(n):\n  l[i] = min(l[-i], i) + s\nprint(*l)"}, "1594": {"problem_id": 1594, "answer": "n,m = list(map(int,input().split()))\ncnt = [0]*(n+1)\nfor i in range(m):\n  cnt[i] += 1 if i%2 == 0 else 0\nlst = [-1] + [list(input())]\ns = sorted(list([int(x) for x in lst]), key=lambda x:x[0])\nprint(s[-1])"}, "1595": {"problem_id": 1595, "answer": "n = int(input())\ns = list(map(int, input().split()))\nans = []\nfor i in range(len(s)):\n\tif s[i] == '0' and len(ans) == i: ans.append(i)\nprint(*ans, sep='\\n')"}, "1596": {"problem_id": 1596, "answer": "s = input()\nn = len(s)\nm = 10 ** 9 + 7\ncnt = 0\nfor i in range(n):\n\tif s[i] == m: cnt += 1\nif m == 0: print(0)"}, "1597": {"problem_id": 1597, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n\ts.append(s[-1] +'' + s[i])\nprint('\\n'.join(''for _ in s))"}, "1598": {"problem_id": 1598, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10000000)\nn = int(input())\ns = []\nfor i in range(n):\n\ts.append([int(x) for x in input().split()])\nprint(''.join(s))"}, "1599": {"problem_id": 1599, "answer": "s = input()\nn = len(s)\nfor i in range(n):\n\tl, r = list(map(int, s.split(' ')))\n\n\tif s[l] == '.\": l += 1\n \telif r == 1: r -= 2\n"}, "1600": {"problem_id": 1600, "answer": "n = int(input())\na = list(map(int, input().split()))\nh = [0] * n\nfor i in range(n):\n\th[i] += 1\nprint(max(h))"}, "1601": {"problem_id": 1601, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nx = list(map(int, input().split()))\ny = [0]*n\nfor i in range(n):\n   x[i] = (i*(i+1))//2\nl = [[] for _ in x]\np = x.pop(0)\nwhile p!=y[0][1] and y[p-1][2] :\n\tl.append([])\n#print(l,p)"}, "1602": {"problem_id": 1602, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n\ta[i] = a[n - 1 - i] + (i & -i)\nprint(max(ans))"}, "1603": {"problem_id": 1603, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nl, r = 0, len(a)-1\nfor i in range(n-1):\n  if a[i] > l: l = a.pop(i)\nprint('\\n'.join(map(str, a)))"}, "1604": {"problem_id": 1604, "answer": "n, k = list(map(int, input().split()))\nl1 = [0] * (k + 1)\nfor i in range(n):\n   l1[i] = 1 if i % 2 == 1 else 0\nans = []\nmod = 998244353\np = pow(10, n - k, mod) % mod\nprint(ans[k])\n"}, "1605": {"problem_id": 1605, "answer": "# cook your dish here\nn = int(input())\ns = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tif (s[i]%2 == 0 and i+1) == (n-i)//2: ans += 1\nprint(ans)\n"}, "1606": {"problem_id": 1606, "answer": "n = int(input())\na = []\nfor i in range(n):\n\ta.append([0]*n)\nans = [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"140\",\"141\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"151\",\"153\",\"156\",\"157\",\"160\",\"161\",\"164\",\"167\",\"169\",\"178\",\"180\",\"184\",\"186\",\"187\",\"188\"]\nprint(ans[3])\n"}, "1607": {"problem_id": 1607, "answer": "n, k = list(map(int, input().split()))\nl = []\nfor i in range(k):\n\tl.append(input())\nprint(sum(l))"}, "1608": {"problem_id": 1608, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 10**9\nfor i in range(len(a)):\n\tif a[i] % m == 0: m = i\nprint(m)"}, "1609": {"problem_id": 1609, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] += 1\nprint(*a)"}, "1610": {"problem_id": 1610, "answer": "n,k = map(int,input().split())\nl = [0]*(k+1)\nfor i in range(n):\n\tl[i] += 1\nprint(l)"}, "1611": {"problem_id": 1611, "answer": "n = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n\tl.append(l[-1] + a[i])\nprint(len(a))"}, "1612": {"problem_id": 1612, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[a[i]]+=1\nif a[n-1]%2!=0:print(\"YES\")\nelse: print(\"NO\")"}, "1613": {"problem_id": 1613, "answer": ""}, "1614": {"problem_id": 1614, "answer": "n, h = list(map(int, input().split()))\na = [0] * n\nfor i in range(n):\n  a[i] = 1 if i % 2 else 0\nans = min(a)\nprint(ans)"}, "1615": {"problem_id": 1615, "answer": "n,k = list(map(int,input().split()))\nl,r = [],[]\nfor i in range(n):\n\tl.append(list(input()).pop())\nwhile(k>0 and l[-1]==r[0]):k-=1\nans = n//2+k\nprint(ans)\n"}, "1616": {"problem_id": 1616, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n  if a[i] % 7 == 0: s.append(i + 1)\nprint(len(s))"}, "1617": {"problem_id": 1617, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[0]*n\nfor i in range(n):\n\tb[a[i]-1]+=1\nc=0\nr=[]\nwhile(len(a)>0 and len(b)-1<r.count('1')) and a[r[c]]!=b:\n\n\tif(c==1 and r[0][c]=='1') or c==2: r.append(1)\n \telse: c=3\nprint(*r)"}, "1618": {"problem_id": 1618, "answer": "n = int(input())\na = list(map(int, input().split()))\nw, h = 0, 0\nfor i in range(n):\n\tif a[i] == 1: w += h\nelse: h += w\nprint(w)"}, "1619": {"problem_id": 1619, "answer": "n = int(input())\nx,y,z = list(map(int,input().split()))\nfor i in range(n):\n xi,yi,zz = [int(x) for x in input()]\n zi = zz-xi+zz\n if(zi*2==zz):print(\"YES\")\n else: print(\"NO\")"}, "1620": {"problem_id": 1620, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(''.join(l))"}, "1621": {"problem_id": 1621, "answer": "# -*- coding: utf-8 >!\n\"\"\"\ncreated by shubham at 1/6/2020\nhttps://www.codechef.com/problems/SYNTHES_TO_CODE_IS_DECIDE_SAT_INVALID_by_adding_a_string_to_the_binary_list/img/text_symbol.png\n%d{2} {:0.0} \"\"\"\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import deque, defaultdict, Counter, OrderedDict,defaultdict as dd,bisect,insort\ndef read_int(): return int(input().strip().split(' '))\nread_ints(): list(map(int, input().replace(' ', ''))), flush=True, flush_after=False: return [int(x) for x in input()]\nprint(''.join([str(i)[::-1] for i in range(1000)])[:-1])"}, "1622": {"problem_id": 1622, "answer": "n,m = list(map(int,input().split()))\nevents = []\nfor i in range(m):\n\tevents.append(input())\nprint('YES' if events[-1] == 'd' else 'NO')"}, "1623": {"problem_id": 1623, "answer": "def solve(arr,l,r,n):\n\tif(l>r):return 0,0\n\n\ta,b,c,d,e,f,g,h,i,j,k,x,y,z,solve=0,min,max,sum(a/2 for x in arr),min+max(d+1)+(n-l-r)//2*a+n*(b-c)/2-x+y+z+sorted(list(map(int,input().split())))+[0]*i+j+k+i*j*k*x*y*z*tuple(i) for i in range(r-1,-1+l+2) if i%2==0 and i!=l and (i==1 and arr[i]==x) or (n==r and a!=(y-z)*(c-d*c+e+f+g+h-i-j-k)**2+c*b+b*d-y) and solve==True"}, "1624": {"problem_id": 1624, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n): s[i] = sum(a[:i])\nprint(s[n - 1])"}, "1625": {"problem_id": 1625, "answer": "import math\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(1, n):\n  if a[i] == math.sqrt(math.pow(i, 0.5)) and b[n-i-1]!= 0: b.append(a[min(b[:i]), i])\nprint(max(0, b))"}, "1626": {"problem_id": 1626, "answer": "def solve(a,b):\n\tif(len(b)%2==0):return a*b%(10**9+7)\n   else:return solve((a+b,0))%1000000007"}, "1627": {"problem_id": 1627, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\tl, r = [int(x) for x in input()], [0] * (n+1)\n\n\ta[l], a[r] = r, l\nprint('\\n'.join(a))"}, "1628": {"problem_id": 1628, "answer": "s = input()\nn = len(s)\na = [0]*n\nfor i in range(n):\n\ta[i+1]+=1\nans = []\ni = 0\nwhile(i<n-1 or i>=0 and a[-i-2]=='x'):i+=2\nif(len(a)==0):ans.append('x')\nprint(ans)"}, "1629": {"problem_id": 1629, "answer": "n, x = list(map(int, input().split()))\na = [0] * n\nfor i in range(n):\n  a[i] = x\ns = set(a)\ni = 0\nwhile i < n-1 and s.intersection(s[:i+1]): i+=1\nprint(*a, sep=\"\\n\")\n"}, "1630": {"problem_id": 1630, "answer": "n = int(input())\nname = list(map(int,input().split()))\nprint('YES' if name[0]==name[1] else 'NO')"}, "1631": {"problem_id": 1631, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(''.join(a))"}, "1632": {"problem_id": 1632, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * 5000\nfor i in range(n):\n\tb[a[i]] += 1\nprint(max(b))"}, "1633": {"problem_id": 1633, "answer": "n,m,k = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(k):\n\ta[i]+=1\nans = 0\nwhile a[n-1]>0:\n\n\tx = a.pop(0)//(a.index(x) + 1) - 1\n\n \tans+=x\nprint(ans)\n\n"}, "1634": {"problem_id": 1634, "answer": "def count_tickets(a,b,c,d,e,f,g,h,i,j,k,l,n,r,s,u,v,w,x,y,z):\n  if a[i]<b[j] and x<c and y<g and z<h and l<u and r<v and s<y and u<w and w<z: return x+y+z+u-x-y-z-u+v+w-s-l-n-r-c-f-g-h-i-j-k-m-t-p-q-d-b-a-e-o-v-w\n\n  elif i<j<k<l<n and j<m<o and k<s<p: x=c+d+e+f+g+h+i+j+k+l+n+r+b+o+t+p+q+a+c\n"}, "1635": {"problem_id": 1635, "answer": "n = int(input())\na = []\nfor i in range(n):\n\ta.append(list(map(int, input().split())))\nprint(len(a))"}, "1636": {"problem_id": 1636, "answer": "n = int(input())\nx = list(map(int, input().split()))\ny = [0]*n\nfor i0 in range(n):\n\tx[i0-1] = x[-i-2] + 1 if i < n else 0\n\n\ty.append(y[0])\ncnt = []\ndef bfs(i, cnt, d, seen=False, curr=0):   # print(curr, i)\nvisited = set()\nseen.add(-1) \nwhile i > 0: \t\t# i is going to be visited, we don't need to check if the current point is in visited or not. if not, just return the index of point we want to visit. we can check to see if there's another point with the same index, but we'll be looking for this when we visit the next points. this can be tricky as there may be multiple points that differ by twice, so we need a special index to keep track of which one we're interested in. there might be points with different indices, which means we have to look at which of those points is the one that we've visited."}, "1637": {"problem_id": 1637, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(m):\n  a[i+1] = sum(a[:i] + x for x in input())\nprint(*a)"}, "1638": {"problem_id": 1638, "answer": "n = int(input())\nm = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n  if m[i] == 1: a[-1] += 1; continue\nans = 0\nmax = min(a[0], a.index(max) + 2*m[n - 1])\nprint(ans)"}, "1639": {"problem_id": 1639, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n\ts[i+1] = max(s)\nprint(len(a))"}, "1640": {"problem_id": 1640, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n  if a[i] > 1: ans.append(i)\nprint(ans[-1])"}, "1641": {"problem_id": 1641, "answer": "n,k,s,t=list(map(int,input().split()))\nc=0\nv=[]\nfor i in range(n):\n\tv.append([int(x) for x in input()] + [0]*s)\nd=c+v[0][1]\ns=s-1\nprint(-1)"}, "1642": {"problem_id": 1642, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n  x, y = a[i]\n\n  s[x-1] = y-s[y-x] + (y - x)\nprint(sum(s))"}, "1643": {"problem_id": 1643, "answer": "s = str(input())\nn = len(s)\nx = 0\nfor i in range(n):\n\tif s[i] == '0' and x < n: x += 1\nprint(''.join(x))\n"}, "1644": {"problem_id": 1644, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "1645": {"problem_id": 1645, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n):\n\tl[i] = 1\nans = 0\nwhile len(l)>0 and l[l.index(max(a)):]>=i+1:\n\n\tif a.count(i)==0:ans+=1\nprint(ans)\n"}, "1646": {"problem_id": 1646, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = []\nfor i in range(n):\n  if a[i]=='0' and b[-1][0]!='1': b.append(i)\nprint(''.join(str(x) for x in b))"}, "1647": {"problem_id": 1647, "answer": "n = int(input())\ns = input()\nans = 0\nfor i in range(n):\n\tif s[i] in 'abcdefghijklmnopqrstuvwxyz': ans += 1\nprint(ans)"}, "1648": {"problem_id": 1648, "answer": "def power(a, b, c, d, e, f, g, h, i, j, k, n, p, q, r, s, t, u, v, w, x, y, z) -> int: return (a*b*c*d*e*f*g*h*i*j*k*n*p*q*r*s*t*u*v*w*x*y*z)"}, "1649": {"problem_id": 1649, "answer": "# coding: utf-8\nimport math\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nc = 0\nd = n\nfor i in range(a[0], a[1]):\n  if math.gcd(i, b[i]) == 1:   d = d + c\nprint('Yes')\n"}, "1650": {"problem_id": 1650, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\ndef LI(): return list(map(int, input().split()[1:])); return [int(x) for x in range(1<<(len(input())-1)//2+1)]\nfrom math import ceil, floor, sqrt, factorial, log, pi, pow\nmod = 10**9+7\nn = int(sqrt(log(n,2)))\na = [0]*n\nb = []\nfor i,x in enumerate(b):\n  a[i] = x^x\nif n % 2 == 1: a.append(a[0])\nans = pow(ans,10)%mod\nprint((ans))\n"}, "1651": {"problem_id": 1651, "answer": "def main():\n\ts,p=list(map(int,input().split()))\n  \tn,m=int(input()),0\n\n\tfor i in range(n+m):\n#\t\tprint(s[i:i+n],p,s+p)\n\n \nmain()\n"}, "1652": {"problem_id": 1652, "answer": "s = input()\nt = 0\nfor i in range(len(s)):\n  if s[i] =='': t += 1\nprint('YES')\n"}, "1653": {"problem_id": 1653, "answer": "s = input()\nfor i in range(0, len(s)):\n\ta, b, c = list(map(int, s[i:]))\n\n\tif a == b and c == d and (a == c or b == a) or (c == 1 or d == 0 or a!= b or c!= c) :\n \t\tprint(\"1\\n0\")\n"}, "1654": {"problem_id": 1654, "answer": "s = input()\nt = list(s)\nfor i in range(len(t)):\n\tif t[i] == \"?\" and s[-i-1] not in '?a' and (i+1)%2 == 0 and i*2 in t and len(i)>0 and j+2*i*(j-2)<0:i += 1\nprint(''.join(map(str,t)))"}, "1655": {"problem_id": 1655, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(len(l))"}, "1656": {"problem_id": 1656, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n\tif s[i] == 'o': cnt += 1\nif n == 1: return ''.join(map(str, s))\nelse: print(0)"}, "1657": {"problem_id": 1657, "answer": "n, p = list(map(int, input().split()))\na = [0] * (n + 1)\nb = []\nfor i in range(n):\n\ta[i] += b[n - i - 1]\nprint(sum(a))"}, "1658": {"problem_id": 1658, "answer": "n, x = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  d[i] = x - d.get(i,0)+1\nx = sum(d.values())\nprint(x)\n"}, "1659": {"problem_id": 1659, "answer": "n, x = map(int, input().split())\nd = {}\nfor i in range(n):\n\td[i] = list(d.get(i,0)) + [int(x) for x in input()]\nprint(' '.join(map(str,d)))"}, "1660": {"problem_id": 1660, "answer": "n,m = list(map(int,input().split()))\ngraph = [[] for _ in range(m+1)]\nfor x,y,z in zip(range(1,n)):\n\tgraph[x][y] = (z,x) + graph[y][z]\nvisited = [False]*(2*m)\nans = 0\ndef dfs(u,v,w,r,c,d):\n\n\tif visited[u]==False:  # if visited is True, then u is visited, v is not, c is same as d, d is the same, r is new, u and v are not visited\n \t\tans += w*c + d*u + r*v + c*d + (c-1)*(w-c)//2\nprint(ans)\n\n"}, "1661": {"problem_id": 1661, "answer": "import sys\ninput = sys.stdin.readline\nn,m=list(map(int,input().split()))\na=[0]*(n+1)\nfor i in range(m):\n\ta[i]=int(input())\np=[]\nwhile p:\n\n\tif a[p[0]-1]>=0 and p[len(a)//2]<=m-1:p.append([a+[1]+[2],i+2])\nelse:print(0)"}, "1662": {"problem_id": 1662, "answer": "m = int(input())\na = list(map(int, input().split()))\nn = len(a)\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "1663": {"problem_id": 1663, "answer": "n = int(input())\ns = 0\nfor i in range(n):\n  s += (i+1)//2\nprint(s%1000000007)"}, "1664": {"problem_id": 1664, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n-1):\n\ta.append(l[i]+'=')\nprint(*a)"}, "1665": {"problem_id": 1665, "answer": "from collections import deque\nn = int(input())\nedges = [[] for _ in range(n)]\nfor i, x in enumerate(map(int, input().split())) : edges[x].append(i)\nvisited = [False] * n\nans = 0\nwhile visited[0] :\n  x, y = edges.pop(0) ; i = x - 1 ; j = y + 1; while j < n and visited.clear() and (j, i) not in visited : j -= 1, i * 2, j // 2, j * 3, x * 4, y * 5, (x,y) * 6, (i*2,x*3,y*4,(x+y+1)**2), visited [i] ; ans += j\nprint(ans)"}, "1666": {"problem_id": 1666, "answer": "n = int(input())\nx,y,a,b = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n\tc,d = x+i,x+y+a+b\nif c>d: s+=1\nprint(s)\n"}, "1667": {"problem_id": 1667, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ta[i] = (s + (i - 1) // 2)\nprint(sum(a))"}, "1668": {"problem_id": 1668, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn, k = list(map(int, input().split()))\n\n\tp = [0]*(n+1)\n\n \tfor i, x in enumerate(sorted(p[:k] + p[k:] for k, i in zip(range(4, n)), key=lambda x: x[1], reverse=True)) :\n   #\tprint(i, '{0}'.format(x[0]) if x else ''.join([str(y) for y in x])[::-1])\n"}, "1669": {"problem_id": 1669, "answer": ""}, "1670": {"problem_id": 1670, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nimport math,bisect,heapq,itertools,collections,deque,fractions,ins,math,random,time,copy,socket,socketserver,wmd,racket,str,hex,pyp2h,inf,ceil,fsible,int,numpy,threading,os,python3,ciphers,queue,sys,\u30a4\u30f3\u30c7\u30c3\u30af\u30b9,Directories,Inp,IPv4,net,NTC,\u306f\u3001\u305d\u308c\u4ee5\u4e0b\u304c\u3069\u306e\u3084\u308a\u65b9\u306b\u3082\u306a\u308b\u304b\u3092\u8003\u3048\u3088\u3046\u3068\u3059\u308b\u3002\ndef inp():\n  return sys.stdin.readline().strip('\\r\\n').split()[:-1]\ninp()"}, "1671": {"problem_id": 1671, "answer": "n = int(input())\nl = list(map(int, input().split()))\nfor i in range(n):\n\tl[i] += 1\nprint(max(l))"}, "1672": {"problem_id": 1672, "answer": "n = int(input())\na = [list(map(int, input().split())) for i in range(n)]\ns = []\nfor i, a[0] in enumerate(a):\n  s.append([a[i], i] +'')\nprint(len(s))"}, "1673": {"problem_id": 1673, "answer": "n = int(input())\na = list(map(int,input().split()))\nm = 0\nfor i in range(0,n):\n  m = (m+a[i])*(a.count(i)+1)\nprint(m%m)"}, "1674": {"problem_id": 1674, "answer": "n, k = list(map(int, input().split()))\na = [int(i) for i in input()]\ns = str(a[0])\nprint(k-1)\n"}, "1675": {"problem_id": 1675, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(sum(l) // 2)"}, "1676": {"problem_id": 1676, "answer": "n,b = map(int,input().split())\nt = [int(x) for x in input()]\nq = []\nfor i in range(n):\n\tif t[i] == q[q[-1]]: q.append(i)\nprint(len(q))"}, "1677": {"problem_id": 1677, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint(len(a))"}, "1678": {"problem_id": 1678, "answer": "from sys import stdin, stdout\ninput()\nn, t = list(map(int, input().split()))\nsums = [0] * (n + 1)\nfor i in range(n):\n   sums[i] += 1\nstdout.write(str(sum) + '\\n')\n"}, "1679": {"problem_id": 1679, "answer": "n = int(input())\ns = input()\nc = 0\nfor i in range(n):\n   if s[i] == \"1\": c += 1\nprint(c)\n"}, "1680": {"problem_id": 1680, "answer": "n, k=list(map(int, input().split()))\ns=0\nfor i in range(n):\n  s+=int(input())[:i]\nprint(s)\n"}, "1681": {"problem_id": 1681, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(max(l))"}, "1682": {"problem_id": 1682, "answer": "n, k = list(map(int, input().split()))\na = [int(x) for x in input()]\nb = []\nfor i in range(n):\n  b.append(a[i] + b[-1])\nprint(min(b))\n\n"}, "1683": {"problem_id": 1683, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nf = lambda x,y:998244353\nmod = 10**9 + 7"}, "1684": {"problem_id": 1684, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 2)\nfor i in range(m):\n\ta[i] += 1\nprint('Yes')\n"}, "1685": {"problem_id": 1685, "answer": "n,q = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n-1,0,-1):\n\tl[i+1] = 1\n#print(l)\ns = []\nwhile(len(s)>0):\n\n\ts.append((s[0])*(1<<i) + s[-2*i] for i,s in enumerate(\"LR\",\"L\",\"U\") if s.count(\"L\")==1))\n\n \tif(i==n): s = l[n]\nelse: print(0)\n\n"}, "1686": {"problem_id": 1686, "answer": "n, k = list(map(int, input().split()))\np = [0] * (n + 1)\nfor i in range(n):\n\tp[i] = int(input()) + p[n - i - 1]\nprint(len(p))"}, "1687": {"problem_id": 1687, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n)\n"}, "1688": {"problem_id": 1688, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = [0]*n\nfor i in range(n):\n\ta[i] = a[n-i]+1\nans = []\ncount = 0\nwhile count < n:\n\n\tif count % 2 == 0: ans.append(c[count//2] + 1)\n \tcount += 1\nprint(*ans)"}, "1689": {"problem_id": 1689, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = []\nfor i in range(n):\n\tc.append(a[i] + \"|\" + a[n - i - 1])\nprint(\"YES\")\n"}, "1690": {"problem_id": 1690, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = a[0]\nfor i in range(1, n):\n  m = min(m, m+a[i])\nprint(n-m)"}, "1691": {"problem_id": 1691, "answer": "from collections import defaultdict, deque, Counter, OrderedDict, Tuple, Union, Segment\nimport sys\nsys.setrecursionlimit(10**7)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\ndef solve():\n  n,k = list(map(int,input().split()))\n\n  for i in range(1,n+1):\n\ta,b = [int(x) for x in input().replace(' ','').split(\" \")],[0]*(k-1)\n\n\tcnt = Counter(a[:i])[i:].bisect_left(sorted(b,key=lambda x:c[x],reverse=True))[-i:] + sorted([x,y] for y,x in cnt.items())[:-i] + sorted([b[y],y+k] or [x+y-k], reverse=False)[n]\n#   print('i',i,solve())\n'''\n1\n3\n4\n6\n7\n8\n9\n"}, "1692": {"problem_id": 1692, "answer": "s = input()\nn = len(s)\na = 0\nfor i in range(n-1,0,-1):\n\tif s[i] == \"0\" and i+1 < n: a += 1\nprint(a)"}, "1693": {"problem_id": 1693, "answer": "n = int(input())\nm = list(map(int,input().split()))\na = [0]*n\nfor i in range(n-1):\n\ta[i+1] = max(m[-i:])\nprint('\\n'.join(a))"}, "1694": {"problem_id": 1694, "answer": "n,m,s,f = list(map(int,input().split()))\nt,l,r = [],0,0\nfor i in range(n):\n\tt.append(t[-1] + s + l + r)\ns = t.pop()\nl = s.count('L')\nprint(''.join(s))"}, "1695": {"problem_id": 1695, "answer": "n,m = list(map(int,input().split()))\ns = []\nfor i in range(n):\n\ts.append(input()+' '*(m-i-1) + s[i])\nprint(sum(s))"}, "1696": {"problem_id": 1696, "answer": "from sys import stdin, stdout\ninput()\nn,m,k = list(map(int,stdin.readline().split()))\na = [0]*(n+1)\nfor i in range(k):\n\ta[i] = (n*i)//2\nprint(len(a))"}, "1697": {"problem_id": 1697, "answer": "n,m = list(map(int,input().split()))\ns = [input() for _ in range(n)]\nfor i,j in zip(s,s[::-1]):\n  if s[i] == \"R\": s.append(i)\nprint(\"Yes\")\n"}, "1698": {"problem_id": 1698, "answer": "n,k = list(map(int,input().split()))\nf = [0]*n\nfor i in range(n):\n  f[i] = (i+1)*(k-i)\nprint(abs(f[n-1]))"}, "1699": {"problem_id": 1699, "answer": "n,m = list(map(int,input().split()))\nans = []\nfor i in range(n):\n  ans.append(i*i)\nprint('\\n'.join(ans))"}, "1700": {"problem_id": 1700, "answer": "import sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(2*10**5)\nn = int(input()) #n\nl = list(map(int,input().split())) #l\nans = []\nfor i in range(n-1):\n\tif l[i]==\"0\":ans.append(\"0\")\nprint(*ans)"}, "1701": {"problem_id": 1701, "answer": "n,m=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append(input()+'#'+name+l[i])\nprint('\\n'.join(l))"}, "1702": {"problem_id": 1702, "answer": ""}, "1703": {"problem_id": 1703, "answer": "n = int(input())\ns = []\nfor i in range(n):\n\ts.append(list(map(str,input().split())))\nprint(len(s))"}, "1704": {"problem_id": 1704, "answer": "import sys\ninput = sys.stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n\ta.append(i+b[i])\nans=0\nk=len(a)\nif a[0]=='7' or len(b)==0 or (k==1 or k==n-k+1) or b[k]!='1':\n  \tprint(0)"}, "1705": {"problem_id": 1705, "answer": "n = int(input())\na = list(map(int,input().split()))\nans = []\nfor i in range(n):\n\ta.append(a[i]-1)\nprint(\"\".join(ans))"}, "1706": {"problem_id": 1706, "answer": "s = input()\nn = len(s)\nl, r = 0, 0\nfor i in range(n):\n  s = s.lower().replace('0','').split(' ')[1:]\n\n  if s[i] == '0' and l == i: l += 1\nif r == 0: r -= 1\n\n"}, "1707": {"problem_id": 1707, "answer": "n=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\ta[i]=list()\n#print(a)\nc=0\nr=n-1\nans=[0]*r\nwhile(r>0 and a[r]-c<l[l.index(max(0,r-c)+1)][1]):\n\n\tans[a.count(l)-1]=ans.pop()\n\n  \tif(sum(c)==c:r+1):l+=[a]\nprint(' '.join(ans))"}, "1708": {"problem_id": 1708, "answer": ""}, "1709": {"problem_id": 1709, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,m,k = list(map(int, input().split()))\ncnt = [0] * (n+1)\nfor i in range(n):\n\tj = int(input()) + 1 if i % 2 == 0 else (i // 2) + cnt[j]\n\n\tif j > m: print(i - m - k)\n\n"}, "1710": {"problem_id": 1710, "answer": "n,k = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(0,n):\n  a[i]+=a[n-i-1]\nprint(sum(a))"}, "1711": {"problem_id": 1711, "answer": "n, m = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n   if (i % 2 == 0 and i % 5 == 1) or (m - i - 1 == i // 2 and m - (n-i) == n // 5): ans += 1\nprint(ans)\n"}, "1712": {"problem_id": 1712, "answer": "def main():\n\tn, x = list(map(int, input().split()))\n\n\ta = [0] * (n + 1)\n\n \tfor i in range(n - 1, 0, -1):\n   #\tprint(a[i], i, a[-1] + x * 2)\n#\t\tif x < 0 or x > n or (x % 2 == 0 and (i - x) * 0.5) == 1: # t = x - n + 2 - i - 2 = 1/2 + 3/6 + 7/8 + 9/10 + 11/12 + 13/14 + 15/16 + 17/18 + 19/20 + 23/21 + 25/27 + 29/28 + 31/30 + 37/41 + 41/42 + 43/46 + 47/48 + 53/49 + 59/54 + 61/55 + 67/57 + 71/72 + 73/75 + 79/77 + 83/84 + 89/86 + 91/93 + 103/97 + 107/99 + 109/100 + 113/113 + 127/127 + 131/131 + 137/137 + 139/139 + 149/149 + 151/151 + 157/157 + 163/163 + 167/167 + 173/ 173 + 179/ 179 + 181/ 181 + 191/ 191 + 193/ 193 + 197/ 197 + 199/ 199) else: print('Both')\n"}, "1713": {"problem_id": 1713, "answer": "n,s,t = list(map(int,input().split()))\na = [input() for i in range(n)]\nb = [-1] * (n+1)\nfor i,x in enumerate(a,1):\n\tb[i] = min(x,i+s-a[x])\nprint(max(b))"}, "1714": {"problem_id": 1714, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n):\n  s[i] = i\nl = len(s)\nwhile(l > 0): s.append(a[l-1])\nprint(' '.join([str(x) for x in s]))"}, "1715": {"problem_id": 1715, "answer": "# coding: utf-8\nimport sys\nfrom decimal import Decimal\nsys.setrecursionlimit(10**9)\ninput = sys.stdin.readline\nINF = float('inf')\nmod = 10 ** 9 + 7\nMOD = 998244353\ndef LI(): return [int(x) for x in open('./input').read().split()]\nreturn list(map(decimal, input()))\n"}, "1716": {"problem_id": 1716, "answer": "n, m = map(int, input().split())\nQ = int(input()) \nfor _ in range(Q):\n  a, b, c, d, e, f, g, h, i, j, k, w, x, y, z = [int(x) for x in input()]\n\n  if a < b < c < d < e < f < g < h < x < y < z and x + y + z < n < m and (x,y,z) not in [a,b,c,d,e,f,g,h,i+1,j,k,w,x+y+z,u,v,l,r,p,q] or x <= y <= z <= u <= v <= l <= r <= p < q or y >= x >= z >= w >= h >= j >= k or w <= x == y == c == d == e == f == g == h == i == j == k == w == u == v == l == r == p == q : print(0)"}, "1717": {"problem_id": 1717, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "1718": {"problem_id": 1718, "answer": "n,k = map(int,input().split())\na = list(map(str,a))\nans = 0\nfor i in range(n-k+1):\n  if a[i] == i: ans += 1\nprint(ans)"}, "1719": {"problem_id": 1719, "answer": "#!/usr/bin/env python\nfrom collections import defaultdict\nn = int(input())\nl = list(map(int, input().split()))\ns = []\nfor i in range(n):\n s.append(l[i]%1000000007)\nprint(len(s))"}, "1720": {"problem_id": 1720, "answer": "n,m,k = list(map(int,input().split()))\na = [[0] * m for _ in range(n)]\nfor i,x in enumerate(input()):\n  a[i] = x\ncount = 0\nwhile len(a) > 0 and count!= m: a.append([x,count])\nprint(count)\n"}, "1721": {"problem_id": 1721, "answer": "n = int(input())\ns = input()\ni = 0\nwhile i < len(s) and s[i] == 'a':\n  i += 1\nprint(i)"}, "1722": {"problem_id": 1722, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n\ts += l[i]\nprint(s)"}, "1723": {"problem_id": 1723, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = []\nfor i in range(1,n+1):\n\tif a[i] not in b and i%2==0:b.append([i,i//2])\nif n==1:print(-1)\n"}, "1724": {"problem_id": 1724, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * (n + 1)\nfor i in range(n):\n\tb[i] = b[-i-1] + i\nprint(max(b))"}, "1725": {"problem_id": 1725, "answer": "n,m,d = list(map(int,input().split()))\nmatrix = []\nfor i in range(n):\n  matrix.append(list(range(m))[i])\nans = matrix[0][0]\nm = m - 1\ndp = 0\nwhile dp < n:\n\n  for j,i in enumerate(dp,1):   #print(i,j,dp[j],i)\n\n"}, "1726": {"problem_id": 1726, "answer": "n, t = list(map(int, input().split()))\na = [int(x) for x in input()]\nprint(min(a))"}, "1727": {"problem_id": 1727, "answer": "n = int(input())\nx = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tx[i] -= (n-i-1)//2\nif x[0][0] == 0: ans+=1\nprint(ans)\n"}, "1728": {"problem_id": 1728, "answer": "n = int(input())\np = list(map(int, input().split()))\nc = [0]*n\nfor i in range(n):c[p[i]-1]+=1\ndef dfs(v,i,c,r,s,t,vis):vis.add(i)\nvis[v] = r\nwhile(len(t)>0):t = t[::-1].pop()\ndfs(0,0,[])\nprint('\\n'.join(vis))"}, "1729": {"problem_id": 1729, "answer": "n,q=map(int,input().split())\ns=input()\nd=[]\nfor i in range(q):\n   if(s[i]=='0' and d[-1][0]!=0):d.append(i)\nprint(len(d))"}, "1730": {"problem_id": 1730, "answer": "n,m,k = list(map(int,input().split()))\ngraph = [[] for i in range(n+1)]\nfor i,j in enumerate(list(input()),1):\n\tgraph[i].append(j)\n# print(graph)\n\n\t\ndef dfs(u,v,d,c,r,s,l,p,visited,graph,curr=0,start=None,end=-1) :\n\n  if u == v :\n  \tu = u+k-1;v = v-k;l = l+d;r = r+s;s = s+l;p = [0]*n;vis = [-1] * (n*2);vis[u] = 1;cur = 0;start = True;end = False;while u!= v or l!= r:cur += 1 if p[cur] == '1' else 0 else cur+='0';vis.append(-1);while v!= u :cur -= 1\tif vis[v]!= -1\telse vis.pop(0)\twhile cur > 0 :p[c] += '0'*(cur+'0') if len(p)%2==0 else '',cur +='1',vis\tfor c in p :vis += [cur]+',' + ''.join([str(x) for x in vis])+', '+','+cur+(v-cur)+(u-v) ;vis -= [1]) ;for x,y in l[1:]:vis+=[y] ;cur+=1 if x == y else (cur-y) +''+ y;return;\nprint(r)"}, "1731": {"problem_id": 1731, "answer": "n, m = list(map(int, input().split()))\ns = 0\nfor i in range(m):\n\ts += int(input())\nprint(s)"}, "1732": {"problem_id": 1732, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n  s += l[i]\nprint(s)"}, "1733": {"problem_id": 1733, "answer": "n,x,y=list(map(int,input().split()))\ns=[]\nfor i in range(n-1):s.append([int(x) for x in input()])\nprint(len(s))"}, "1734": {"problem_id": 1734, "answer": "n = int(input())\ns = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n  d[i] = d.get(i, 0) + 1\nprint(len(s))"}, "1735": {"problem_id": 1735, "answer": "s = input()\nn = len(s)\nif s[n-1] == 'a' and n < 2: print('Yes')\nelif n == 3: return 'No'"}, "1736": {"problem_id": 1736, "answer": "n, t = list(map(int, input().split()))\na = []\nfor i in range(n):\n  a.append(i)\nprint(max(a))"}, "1737": {"problem_id": 1737, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=set()\nfor i in range(n-1):\n\ts.add(l[i])\nif len(s)%2==0 and s[0]!=s[1] or s.setdefault((0,0),0)==s:\n\n\tprint(1)\nelse:print('a')"}, "1738": {"problem_id": 1738, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n\tif s[i] == 'a' and cnt == 0 and i + n - i * (i + 1) * n <= n * 2e9 or i == (n - 2 * i) - 1 and (s[(i+1)%n]!= 'c' or c!= 0) or (len(c) == 2) : break\nif n == 1: s = ''.join(map(str,s))"}, "1739": {"problem_id": 1739, "answer": "n, x = list(map(int, input().split()))\na = [0]\nfor i in range(n):\n  a.append(a[-1] + x)\nmod = 10**9+7\ns, t = 0, n%mod\nwhile s <= t: s += x % mod\nprint(s)"}, "1740": {"problem_id": 1740, "answer": "n = int(input())\nx = list(map(int, input().split()))\nl = []\nfor i in range(n):\n\tx.append(x[-1] - l[i])\n#print(l)\ncnt = [0]*n\ns = 0\nr = n\nwhile(len(s)>0 and s!=l[r]):\n\n\tif (s[0]-1)%n == 0:\n\n \t\ts += cnt[l.pop(0)//n]\n   if s == l: r -= 1\n\n"}, "1741": {"problem_id": 1741, "answer": "from sys import stdin,stdout\nn = int(stdin.readline().strip())\nl = list(map(int, stdout.split()))\na = [0]*n\nfor i in range(n):\n  x, y = l.index(i), l[i]\nprint(\"%.6f\" % a[x] % n)\n"}, "1742": {"problem_id": 1742, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nn,m=list(map(int,input().split()))\nl=[]\nfor i in range(m):\n\tu,v=input(),input()\n\n\tif l[u]!=v:l.append(u)\n#\tprint(l[v])\n"}, "1743": {"problem_id": 1743, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] = b[-1] + a[n-i-2]\nans = []\nwhile(len(a)>0 and len(b) > 0):\n\n\tans.append(max(0,b[0]+1)//2)\nprint(sum(ans))"}, "1744": {"problem_id": 1744, "answer": "n, m = list(map(int, input().split()))\nt = [0] * (n + 1)\nfor i in range(m):\n\tt[i] = t[n - i - 1] + i\nprint(t)"}, "1745": {"problem_id": 1745, "answer": ""}, "1746": {"problem_id": 1746, "answer": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nn = int(input())\na = list(map(int,input().split()))\nb = [0]*(n+1)\nfor i in range(1,n):\n\tb[i] = b[-i-1] + i\nprint('Yes')"}, "1747": {"problem_id": 1747, "answer": "n,k = map(int,input().split())\na = [0]*(n+1)\nfor i in range(k-1,0,-1):\n  a[i]+=1\nprint(a[n])"}, "1748": {"problem_id": 1748, "answer": "n = int(input())\nV = [int(x) for x in input().split()]\nT = []\nfor i in range(n):\n  T.append(T[-1] + [0] * (i + 1))\n# T[i] = list(map(int,T.split(\\\"\\\".join(str(i) + \\\"\\)))[1:])\nans = 0\ntemp = 1000000007\nwhile len(temp) > 0:\n\n  temp = temp.pop()\nif (temp > ans): ans =temp\nprint(ans)\n"}, "1749": {"problem_id": 1749, "answer": "n,l,r = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(0,n):\n\ta[i] = a[n-i-1] + i\nans = 0\nflag = False\nwhile(1):\n\n\tmid = int(input())\n \tif(mid == n-mid-2 or mid == 0 or (mid - 1)%2 == 1 or flag == False):  # print(ans,mid,i,ans+i) "}, "1750": {"problem_id": 1750, "answer": "n = int(input())\nx = list(map(int, input().split()))\ny = [0] * n\nfor i in range(n):\n  x[i] = (y[-1] + 1 - y[0]) % x.length\nprint(len(x))"}, "1751": {"problem_id": 1751, "answer": "from collections import defaultdict\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\nMOD = 10 ** 9 + 7\nINF = float('inf')\ndef LI(): return [int(x) for x in input().rstrip('\\n').split(' ')][0]\n# def LI(n):\n  return list(map(int,input().split()))\nmod = modulus(mod ** 2) - 1\na = LI()\nb = []\nfor i in range(len(a)): b.append([a[i] + 1, i])\nprint(*b)"}, "1752": {"problem_id": 1752, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "1753": {"problem_id": 1753, "answer": "import sys\ninput = sys.stdin.readline\ninp = lambda: list(map(int, input().split()))\nn, m = inp()\nc = [[0] * (10 ** 9 + 1) for _ in range(m)]\nfor i, j in zip([\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]):\n\tc[i][j] = 0\nprint(*c)"}, "1754": {"problem_id": 1754, "answer": "from collections import defaultdict,Counter\nn,m,k=list(map(int,input().split()))\np=[0]*n\nc=defaultdict(list)\nfor i in range(n):\n\tc[p[i]-1].append(i)\n\n\tif c[k]==1:k-=1\t\n \telif k==0:print(len(p)-1)"}, "1755": {"problem_id": 1755, "answer": "n, k = list(map(int, input().split()))\na = [0] * k\nfor i in range(n):\n\ta[i + 1] = min(a)\nprint(k)"}, "1756": {"problem_id": 1756, "answer": "n, x = map(int, input().split())\nd = {}\nfor i in range(n):\n\td[i] = list(d.get(i, 0)) + [0] * (n - i + 1)\nans = 0\nwhile x > 0 and d[x - 1] == [1] + [-1]:\n\n\tmid = x - (1 if x % 2 == 0 else -1) // 2 if (x % 3 == 1 and x // 3!= 0) else (mid + 2) * 3 + x\nprint(ans)"}, "1757": {"problem_id": 1757, "answer": "n = int(input())\nname = \"\"\nfor i in range(1,n+1):\n  name += str(i)\nprint(name)"}, "1758": {"problem_id": 1758, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=input()\nt=0\nfor i in range(n):\n\tif(s[i]=='0' and t>0): t=i\nprint(t)\n"}, "1759": {"problem_id": 1759, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nl = list(map(int,input().split()))\nprint(l[0])"}, "1760": {"problem_id": 1760, "answer": "n = int(input())\ns = input()\nl = [0] * (n + 1)\nfor i in range(n):\n\tl[s[i]] += 1\nif l[-1] == \"U\" and len(l) == n: print(\"U\")\nprint(\"D\")"}, "1761": {"problem_id": 1761, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n\ts.insert(0, i)\nprint(\"yes\")\n"}, "1762": {"problem_id": 1762, "answer": "n,k = list(map(int,input().split()))\ns = []\nfor i in range(n):\n\ts.append(input())\n#print(s,s[::-1])\ni = 0\nwhile i<n:\n\n\tif s[i]<=k or i>=n-i+1: i+=1 \n \telse: s.pop(i)\nprint()\n"}, "1763": {"problem_id": 1763, "answer": "n, a, r, m = map(int, input().split())\nh = [0] * (n + 1)\nfor i in range(n):\n\th[i] = h[n - i - 1] + a\nans = 0\nif m > a: ans = min(h) + m\nprint(ans)"}, "1764": {"problem_id": 1764, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n):\n\ts[a[i] - 1] += 1;\nprint(1)"}, "1765": {"problem_id": 1765, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb.append(a[i]%2)\nprint(b[-1])"}, "1766": {"problem_id": 1766, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "1767": {"problem_id": 1767, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i] = bin(i)[2:][::-1].zfill(2)\nprint('\\n'.join(sorted(list([x for x in b[:i]]))) + b)"}, "1768": {"problem_id": 1768, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n\tl[i] = str(bin(i)[2:][::-1].count('o')+1)\nprint(max(l))"}, "1769": {"problem_id": 1769, "answer": "n = int(input())\nfor i in range(n):\n  a, b, c = list(map(int, input().split()))\n\n  if a + b + c == n: print(i + 2)\n"}, "1770": {"problem_id": 1770, "answer": "t = int(input())\nfor _ in range(t):\n\tn,x,y,z = list(map(int,input().split()))\n\n\tif n % 2 == 0 and x == y or z == x or y == z: print(-1)\n"}, "1771": {"problem_id": 1771, "answer": "n,l,w=list(map(int,input().split()))\na=[]\nfor i in range(n):\n  x,y,z=[int(x) for x in input().rstrip('\\n').split(' ') if x=='0'][:l==z].count('1'*(w-z)//2+1]\nb=[[0]*len(a),[0]+[(l+w)%2]]\nc=0\nd=l\ne=w\nf=z\ng=x\nh=y\ni=n\nwhile i<n and a[i]==c:i+=1;\nprint(i)\n"}, "1772": {"problem_id": 1772, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "1773": {"problem_id": 1773, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n  x, a[i] = a.pop(i)\ns = [0] * n\nans = n - s[s.index(max(s))] + 1\nprint(ans)"}, "1774": {"problem_id": 1774, "answer": "s = input()\nn = len(s)\nif s[n-1] == 'H':\n s = s.split('H')\nprint(\"Yes\")\n"}, "1775": {"problem_id": 1775, "answer": "n,m,k = list(map(int,input().split()))\nd = dict()\nfor i in range(n):\n  d[i] = 1 if i == 0 else d.get(i,0) + 1"}, "1776": {"problem_id": 1776, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\n\n\n\n"}, "1777": {"problem_id": 1777, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2*10**5) \nfrom collections import deque, defaultdict, Counter, OrderedDict,defaultdict\ndef dfs(s):\n  if s == s[::-1]: return 1, 0\n\n  res, curr = 0, s.rindex('(') + ')' + s + [0] * (curr - 1) + (s.pop()[0])]  # (start, end, start_idx, idx) => (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 178, 179, 181, 185, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 225, 229, 232, 233, 234, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 322, 326, 329, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 384, 389, 401, 405, 407, 409, 410, 414, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 386, 387, 392, 385, 396, 398, 399, 408, 421, 417, 422, 227, 236, 237, 240, 255, 259, 264, 265, 266, 267, 272, 273, 275, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 300, 303, 312, 314, 317, 319, 320, 325, 327, 328, 330, 332, 333, 334, 339, 344, 355, 356,ombies\nfor _tuple in range(int(input().rstrip())): print(''.join(map(str, input().split())))"}, "1778": {"problem_id": 1778, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] = b[-1] + i\n#print(a,b)\nif a == 0 and b ==0: print(0)"}, "1779": {"problem_id": 1779, "answer": "from sys import stdin,stdout,setrecursionlimit\ninput=stdin.readline\nn=int(input())\ns=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if s[i]=='c':\n  c+=1\nprint(c)\n"}, "1780": {"problem_id": 1780, "answer": "n,m = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(m):\n   a[i] = i\nprint(' '.join(str(x) for x in a))"}, "1781": {"problem_id": 1781, "answer": ""}, "1782": {"problem_id": 1782, "answer": "n, k = map(int, input().split())\ns = set()\nfor i in range(k):\n  s.add(list(map(str, list(s))) - 1)\nprint(-1)"}, "1783": {"problem_id": 1783, "answer": "n,k=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append([int(x) for x in input()])\nprint(sum(a))"}, "1784": {"problem_id": 1784, "answer": "n,k = list(map(int,input().split()))\na = [0]*(n+1)\nfor _ in range(k):\n\ta[k-1] = int(input())\n#print(a)\n\n\tfor i in a[:k]:\n \t\t# print(i, end=' ')"}, "1785": {"problem_id": 1785, "answer": "n = int(input())\ns = input()\nt = list(map(int, input().split()))\nmod = 10**9+7\ncnt = [0]*n\nfor i in range(n-1, 0, -1):\n  cnt[s[i]] += 1\nif s[n] == 'C':\n\tprint(0)\nelif t[0]+t[1]=='C' and n==1 or n%2==0 or (n//2 == 0 and (s.count('C')%mod == 1)or s.find('T')>0 and s['C']==s['T']) or s==t or t!=t_or(mod-2,mod) or mod==2:\n\n\t#print('{} {}'.format(''.join([str(c) for c in s])))\nelse:\t\t\n\n  print(sum((s+t+'0'+s*'0123456789')))"}, "1786": {"problem_id": 1786, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nfrom math import ceil, log\ndef read_int(): return int(input().strip() or \"0\")\nread = lambda: list(map(int, input().split()))\nn = read()\nw,h,a = 1,1,0\nfor i in range(n):\n  w += h * (h-1) // i\nprint(a)"}, "1787": {"problem_id": 1787, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nn = int(input())\ns = list(map(str,input().split()))\ncnt = 0\nfor i in range(len(s)):\n\tif s[i] == \"a\": cnt += 1\nif n == 1: print(0)"}, "1788": {"problem_id": 1788, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i] = b[n-i-1] + i\nprint(sum(b))"}, "1789": {"problem_id": 1789, "answer": "# coding: utf-8\nimport sys\nread = sys.stdin.read\nsys.setrecursionlimit(10**6)\ndef LI(): return [int(x) for x in read().rstrip().split('\\n').split()[1::2] for _ in range(1 << int(read())]): return list(map(int, read()))\ninput = LI()\nINF = float('inf')\nMOD = 10**9+7\nfrom math import ceil, floor, log2, sqrt, factorial, pi, sin, cos, radians, decimals\nmod = MOD_2147483649 + 7\ns = [0]*MOD\nfor i,v in enumerate(input()):\n  if v == 1: s[i] = (1<<i) - (2*log2(v))*i\nprint(s[-1])"}, "1790": {"problem_id": 1790, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] = str(i) + \" \"\nprint(\"\\n\".join(a))"}, "1791": {"problem_id": 1791, "answer": ""}, "1792": {"problem_id": 1792, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\nedge = [[] for i in range(n)]\nfor i, v in enumerate(list(zip(range(m)), key=lambda x:x[1])) : v ^ edge[i].append(i)\ns, b, k, h = int(input()), [], 0, 10**9\ndummy_bases = []\ndef dfs(s):\n  if s == 0 or s > len(edge[0]) or d == -1 : return 0\n\n  for v, u in d[s][0] - 1, ds(v) :\n\tu -= min(min(u,v), k*h)\n\n\tif u > 0 and v < n or u < 0 : continue\n# \tprint(f'{u} {v}')\nans = min([dp(b) for b in bs] + [[0, 0]*k for k in h])\nprint('\\n'.join(ans))\n\n"}, "1793": {"problem_id": 1793, "answer": "n, l, s = list(map(int, input().split()))\np = [0] * (n + 1)\nfor i in range(n): p[i+1] = i\ns = int(input())\nans = -1\ni = 0\nwhile i < n: ans = min(ans, i - s + l + (s - i) // (l + s)) \nif ans > 0: i += s\nprint(i)\n\n"}, "1794": {"problem_id": 1794, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nans = sum(a)\nprint(ans)"}, "1795": {"problem_id": 1795, "answer": "n = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n\ta[i+1] = i\nprint(\"YES\")"}, "1796": {"problem_id": 1796, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a[0])"}, "1797": {"problem_id": 1797, "answer": "n = int(input())\np = list(map(int, input().split()))\nk = 0\nfor i in range(n):\n  if p[i] == i: k += 1\nprint(k)\n"}, "1798": {"problem_id": 1798, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0]*(n+1)\nfor i in range(len(a)):\n\tif a[i] == p[-1]: p.append(i)\n\n\tp.pop()\nprint(max(p))"}, "1799": {"problem_id": 1799, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a))"}, "1800": {"problem_id": 1800, "answer": "n,m = list(map(int,input().split()))\na = [int(i) for i in input()]\ns = sorted(a,key = lambda x:x[1])\nprint(len(s))"}, "1801": {"problem_id": 1801, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * (n+1)\nfor i in range(n):\n\tb[i] += 1\nprint(max(b))"}, "1802": {"problem_id": 1802, "answer": "n = int(input())\nl = list(map(int, input().split()))\ns = []\nfor i in range(n):\n\ts.append(l[i] + s[-1-i])\nprint(max(s))"}, "1803": {"problem_id": 1803, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 0\nfor i in range(n):\n\ta[i] = (int(i) - m) % m\nprint(sum(a))"}, "1804": {"problem_id": 1804, "answer": "n, m = list(map(int, input().split()))\nd = []\nfor i in range(m):\n  d.append(1 - d[i])\nprint(''.join(d))"}, "1805": {"problem_id": 1805, "answer": "q = int(input())\nfor _ in range(q):\n   n = list(map(int,input().split()))\n\n  print(min(n))"}, "1806": {"problem_id": 1806, "answer": "from sys import stdin,stdout\nn,m=list(map(int,input().split()))\nq=int(stdin.readline())\nfor _ in range(q):\n   q1,q2,x,y=q,[],0,0,[],[0]*(x+1),0,-1][x>0 and 0<=x<m and x<y and y<n and not (x-x[0])or x[y]or y[n-y])\nprint(-1)\n"}, "1807": {"problem_id": 1807, "answer": "# cook your dish here\na,b=list(map(int,input().split()))\nprint(a+b)\n"}, "1808": {"problem_id": 1808, "answer": "n,k,x = list(map(int,input().split()))\na = [int(i) for i in input()]\nb = [-1]*(n+1)\nfor i,a in enumerate(a):b[i] = a-1\nans = 0\nif n==1:ans+=x\nprint(ans)"}, "1809": {"problem_id": 1809, "answer": "n, m = list(map(int, input().split()))\nl = []\nfor i in range(n):\n\tl.append([int(x) for x in input()])\nprint(sum(l))"}, "1810": {"problem_id": 1810, "answer": "n = int(input())\ns = 0\nfor i in range(n):\n  if i % 2 == 0: s += 1\nprint(s)\n"}, "1811": {"problem_id": 1811, "answer": "n, k = list(map(int, input().split()))\ns = input()\ncnt = 0\nfor i in range(1, n):\n  if s[i] == '.': cnt += 1; break;\nprint(\"YES\")\n"}, "1812": {"problem_id": 1812, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n\ts.append(a[i])\nans = [0]*(len(s)-i+1)\nprint(' '.join(ans))"}, "1813": {"problem_id": 1813, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(len(a))"}, "1814": {"problem_id": 1814, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n  N, M, C = map( int, input().split())\n\n  S = sorted( list(map(lambda $k: int(sum(range(N,M+1))), input()), key=lambda x: x[1] ) )[:M]\n# print(S[0][0], S[N-1][1])\n"}, "1815": {"problem_id": 1815, "answer": "n = int(input())\nl = list(map(int, input().split()))\na = [0]*n\nfor i in range(n-1):\n\ta[i+1] = a.pop(0)\nprint(max(a))"}, "1816": {"problem_id": 1816, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in range(n):\n  a[i] = (a[-1] + b[0]) * (n - i)\nprint(sum(a))"}, "1817": {"problem_id": 1817, "answer": "n = int(input())\na = list(map(int, input().split()))\ndp = [0] * (n + 1)\nfor i in range(n-1):\n  dp[i] = min(dp[(i+1)%n], a[:i])\nprint(*dp)"}, "1818": {"problem_id": 1818, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] = [0]*(i+1)\np = a[n-1]\nprint(p)"}, "1819": {"problem_id": 1819, "answer": "# cook your dish here\nt = int(input())\nfor _ in range(t):\n\tn, x = list(map(int, input().split()))\n\n\t# print(x, n)\n  \tl = [0] * (n + 1)\n\n  # print(\"x: \", x, \" \".join(sorted(l, reverse=True)))\n\n"}, "1820": {"problem_id": 1820, "answer": "from sys import stdin,stdout\nfor _ in range(int(stdin.readline().strip())):\n   n = 3*(n+1).bit_length()-2;a = [0]*n;b = [-1] * n;for i in a:b[i]+=i;print(-1)\n"}, "1821": {"problem_id": 1821, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):s[i+1] = s[n-i-1]+i\nprint(sum(s))"}, "1822": {"problem_id": 1822, "answer": "n,x=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append([int(x[i])-1 for x in input()])\nprint(*a)\n"}, "1823": {"problem_id": 1823, "answer": "n, k = list(map(int, input().split()))\na = []\nfor i in range(n):\n\ta.append(list(input()).count(max(a[i-1])))\nprint('\\n'.join(['{} {}'.format(*a) for a in a]))"}, "1824": {"problem_id": 1824, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[a[i]] += i\nprint('\\n'.join(b))"}, "1825": {"problem_id": 1825, "answer": "n = int(input())\ns = list(map(int, input().split()))\nk = [0] * (n + 1)\nfor i in range(n):\n\tk[s[i] - 1] += i\nprint(''.join(k))"}, "1826": {"problem_id": 1826, "answer": "n = int(input())\na = list(map(int, input().split()))\nmoves = []\nfor i in range(n):\n  if a[i] == 'R':\n\ta[n-i-1] = 'U' + moves[a.pop(i) + 1] + 'D'\nans = min(a)\nprint(ans)"}, "1827": {"problem_id": 1827, "answer": ""}, "1828": {"problem_id": 1828, "answer": "n = int(input())\nx = list(map(int, input().split()))\ny = []\nfor i in range(n):\n\tx[i] = y.pop(0)\np = x[0]\nq = len(x) - 1 - y[y.index(p)]\nwhile q - p <= x.count('z') - x['z']:\n\n\tif p + q > x: p = q + (q-p)//2\nprint(len(y))"}, "1829": {"problem_id": 1829, "answer": "from sys import stdin,stdout\nimport math\ninput = lambda:stdin.readline().strip()\ndef solve():\n\tn,m = list(map(int,input().split()))\n\n\ta = [i for i in range(n)]\n \tif len(set(a))==m:return 'YES'\n#\tfor x in a:print(' '.join(str(x)),'\\n' \n"}, "1830": {"problem_id": 1830, "answer": "n, m = list(map(int, input().split()))\npos = [0]*n\nfor i in range(m):\n   pos[i] = (n-i-1)*(i+1)\nprint(pos[n])"}, "1831": {"problem_id": 1831, "answer": "#!/usr/bin/env python3\nfrom collections import deque\nn,m=map(int,input().split())\nq=deque([])\nfor i in range(n):\n q.append(i)\nwhile(len(q)!=0):q.popleft()\nprint('no')"}, "1832": {"problem_id": 1832, "answer": "from collections import deque\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nt=int(input())\nfor _ in range(t):\n  n,a,b=list(map(int,input().split()))\n\n  a.sort(key=lambda x:a[x],reverse=True)  # a[0] = 0, b[1] - 1, c[2], d[3], e[4], f[5], g[6]\n#   print(a)\n"}, "1833": {"problem_id": 1833, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)\n"}, "1834": {"problem_id": 1834, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint('\\n'.join(a))"}, "1835": {"problem_id": 1835, "answer": "from sys import stdin,stdout,setrecursionlimit\ninput=stdin.readline\nn=int(input())\nt=list(map(int,input().split()))\nfor i in range(n):\n\ts,a,b,c,d=[],0,[],1,[],[],[1],[0],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[41],[42],[43],[44],[45],[46],[47],[48],[49],[53],[54],[55],[56],[57],[58],[59],[60],[61],[64],[65],[66],[67],[68],[69],[70],[71],[72],[73],[74],[75],[76],[77],[78],[79],[86],[88],[89],[90],[91],[92],[93],[94],[95],[97],[98],[99],[100],[101],[102],[103],[104],[105],[106],[107],[108],[109],[110],[111],[114],[116],[117],[118],[119],[120],[121],[122],[123],[125],[127],[128],[129],[131],[132],[133],[134],[135],[136],[137],[138],[139],[141],[143],[144],[145],[147],[149],[150],[151],[153],[154],[155],[157],[160],[161],[162],[164],[165],[166],[167],[168],[169],[173],[175],[178],[179],[180],[181],[182],[184],[185],[186],[187],[188],[389],[391],[397],[404],[409],[419],[420],[421],[424],[431],[433],[434],[435],[441],[432],[453],[454],[455],[456],[457],[460],[461],[463],[464],[465],[466],[467],[469],[470],[471],[472],[473],[474],[477],[479],[480],[481],[484],[487],[488],[489],[490],[491],[493],[595],[596],[599],[601],[602],[603],[604],[607],[609],[610],[613],[614],[616],[617],[618],[640],[641],[643],[anova],[a],[b],[d],[f],[g],[h],[k],[l],[m],[n],[o],[p],[q],[r],[s],[t],[u],[v],[w],[x],[X],[Y],[Z],[>=0)"}, "1836": {"problem_id": 1836, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 2)\nfor i in range(n):\n  a[i + 1] += 1\nprint(max(a))"}, "1837": {"problem_id": 1837, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n\tans += a[i]\nprint(ans)"}, "1838": {"problem_id": 1838, "answer": "n,m,q = list(map(int,input().split()))\nd = dict()\nfor i in range(n):\n  d[i] = {'like':['a','e']['i' in d.get(i,0)], 'love':''.join([str(x) for x in sorted(d.keys(), key=lambda x:x[1],reverse=True)])}\nprint('YES')\n"}, "1839": {"problem_id": 1839, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(1, n):\n h, v = [int(x) for x in input()]\n a.append(h)\n print(*a)"}, "1840": {"problem_id": 1840, "answer": "s,b = list(map(int,input().split()))\na = [int(i) for i in input()]\nd = 0\ng = int(input())\nfor _ in range(b):\n\td += a[d] * g\nprint(d)\n"}, "1841": {"problem_id": 1841, "answer": "n,m = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n\ta[i+1] = i\nprint(a)\n"}, "1842": {"problem_id": 1842, "answer": "#!/usr/bin/env python3\nfrom math import ceil\na = int(input())\nb = list(map(int, input().split()))\nc = []\nfor i in range(a,b+1,1):\n  c.append(b[i-1]*a)\nprint(max(c))"}, "1843": {"problem_id": 1843, "answer": "t = int(input())\nfor i in range(t):\n\tn = list(map(int,input().split()))[::-1]\n\n\ts = sum(n[:n.count(1)//2+1]) - n[0]*(2*n)\n  \tprint(s)"}, "1844": {"problem_id": 1844, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append(a[i]*(i+1)//2)\nprint(sum(b))"}, "1845": {"problem_id": 1845, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  d[a[i]].append(i)\ns = sum(d.values())//2\nprint(s)"}, "1846": {"problem_id": 1846, "answer": "from sys import stdin,stdout\nimport math\nn = int(stdin.readline().strip())\na = [int(i) for i in range(n)]\ns = 0\nfor i,j in zip(a,a[1:]):\n\tif i%2==1:s+=j\nprint(s)"}, "1847": {"problem_id": 1847, "answer": "n, m = list(map(int, input().split()))\nl = [[] for _ in range(n+1)]\nfor i,(x,y,z) in enumerate(input(),1):\n\tl[i].append(y-x+m)\nans = 0\np = [0]*n\nwhile p[1]!=0 and l[p[0]-1][1:]!=-1:\n\n\tif m<0 or m>=10**9:ans += m-m*(m%10)+1\nprint(ans)\n\n"}, "1848": {"problem_id": 1848, "answer": "n = int(input())\nl = list(map(int, input().split()))\nans = 0\nfor i in range(len(l)):\n  if l[i] > 1: ans += i\nprint(ans)\n"}, "1849": {"problem_id": 1849, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(sum(a)%n)"}, "1850": {"problem_id": 1850, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n a.append(max(a[i-1]*(i+1)//2,i) if i%2!=0 else 0)\nprint('\\n'.join(b))"}, "1851": {"problem_id": 1851, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += i\nprint(ans)"}, "1852": {"problem_id": 1852, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nprint(sum(a))"}, "1853": {"problem_id": 1853, "answer": "n, m = list(map(int, input().split()))\na = [int(i) for i in input()]\nc = set(range(1, n + m + 1)))\nif n % 2 == 0: print('YES')\nelif a[0] == b[-1] and c.issubset(a): print(\"YES\")\nelse:print('NO')"}, "1854": {"problem_id": 1854, "answer": "n = int(input())\na = list(map(int, input().split()))\ng = [0]*n\nfor i in range(n-1):\n\tg[i] = g.pop(i+1)\nprint('YES', g)"}, "1855": {"problem_id": 1855, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, k = list(map(int, input().split()))\ndp = [[0] * k for _ in range(n + 1)]\nfor i, x in enumerate(list(zip(range(k))):: [x]):\n\tdp[i][1] = x % k\nans = 0\nmax_val = [-1 for i in dp]\nmod = 998244353\n#print(dp, ans)\ndef dfs(x, y) :\n   ans = max(ans, sum(dfs(y,x) for x,y in zip(d[x], d[y])) % mod)\n\n"}, "1856": {"problem_id": 1856, "answer": "n = int(input())\nans = []\nfor i in range(n):\n\ts = list(map(str,input().split()))\n\n\tif s[0] in \"bcdfghjklzxcvbnpwxyz\" and len(s)>1: ans.append(\"\".join([str(x) for x in s]))\nprint(len(ans))"}, "1857": {"problem_id": 1857, "answer": "n = int(input())\na = list(map(int,input().split()))\nprint(a[0])"}, "1858": {"problem_id": 1858, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n\ts.add(a[i])\nprint('Yes')"}, "1859": {"problem_id": 1859, "answer": "n=int(input())\na=[]\nfor i in range(0,n):\n  a.append(i)\nprint(len(a))"}, "1860": {"problem_id": 1860, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(max(l))"}, "1861": {"problem_id": 1861, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn, k = list(map(str, input().split()))\n\n\ts, e, t = '', set(s), ''.join(set(e) for e in t)\n\n  \tcnt = [0]*(k+1)\n \n#\tfor i, c in enumerate(list(c.split(' ')))[::-1] : cnt[i] = 1\n"}, "1862": {"problem_id": 1862, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n-1):\n\ts.append(s[i+1] + s[-i])\nprint(' '.join(str(x) for x in s))"}, "1863": {"problem_id": 1863, "answer": "n = int(input())\na = list(map(int, input().split()))\ng = [0]*(n+1)\nfor i in range(1, n + 1):\n  g[i] = sum(a[:i])\nprint(\"\".join(g))"}, "1864": {"problem_id": 1864, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(min(l))"}, "1865": {"problem_id": 1865, "answer": "n = int(input())\na = [int(i) for i in input().split()]\ns = sorted(a, key=lambda x: x[0])\nprint(s)\n"}, "1866": {"problem_id": 1866, "answer": "from collections import defaultdict\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] = a[n-i-1]\nans = [0] * (n + 1)\np = 0\nq = n - 1\ns = set()\nwhile q > 0 and len(ans) - s.issubset(s): p += ans[q]\n\n\tfor k in s: q -= k\n"}, "1867": {"problem_id": 1867, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(1, n+2):\n  if a[i] == b[-i-1]: b.pop()\nprint(len(b))"}, "1868": {"problem_id": 1868, "answer": "import sys\ninput = sys.stdin.readline\nmod = 10**9 + 7\nn, m, a = list(map(int, input().split()))\nb = [0]*n\nfor i in range(m):\n\tb[a[i]-1] = a[(i+1)%n]%mod\na.sort()\ns = str(a)\nm = int(input())\nans = 0\nd = {'a':0,'b':1,'c':2,'d':3,'e':4,'f':5,'g':6,'h':7,'i':8,'j':9}\nprint(ans)"}, "1869": {"problem_id": 1869, "answer": "n = int(input())\na = list(map(int,input().split()))\nans = 0\nfor i in range(n-1):\n\tif a[i]%2 == 0: ans+=1\nprint(ans)\n"}, "1870": {"problem_id": 1870, "answer": "n,c = list(map(int,input().split()))\nt = [int(input()) for i in range(n)]\ns = 0\nfor i,a in enumerate(t):\n  s += a\nprint(s)\n"}, "1871": {"problem_id": 1871, "answer": "n,x = map(int,input().split())\nc = [int(i) for i in input()]\nans = 0\nfor k in range(n):\n\tc.append(c[-1]*(k+1))\nprint(ans)"}, "1872": {"problem_id": 1872, "answer": "n, r = list(map(int, input().split()))\ns = 0.0\nfor i in range(n):\n s += int(input())\n print(s)\n"}, "1873": {"problem_id": 1873, "answer": "n, m = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  if i % 2 == 0: s += i\nprint(s)\n"}, "1874": {"problem_id": 1874, "answer": "n = int(input())\nl = list(map(int,input().split()))\nr = [0]*n\nfor i in range(1,n):\n  l[i] = min(l[-i-1] + r[0],r[1])\nprint(sum(r))"}, "1875": {"problem_id": 1875, "answer": "n = int(input())\na = [0]*n\nfor i in range(n):\n x, y = list(map(int, input().split()))\n a[x][y] = 1\nb = [-x for x in a]\n b.append(b[-1][0])\nc = a.index(max(a)+1)\n c.insert(c[0], b[1])\n\n"}, "1876": {"problem_id": 1876, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, k = list(map(int, input().split()))\ng = [[] for i in range(n)]\nfor i, x in enumerate(input()): g[x].append(i+1)\nans = [0]*n\ndef gcd(x, y):\n  if y == 0: return x; y = 0; x = y; return y\nwhile(k!=0): k-=1\nu,v,x = g.pop(0),g[0].pop(-1); ans[u]+=ans[v]\nprint(max(ans))"}, "1877": {"problem_id": 1877, "answer": "n = int(input())\ns = input()\nA = [0]*n\nfor i in range(n):\n\tA[i+1] = A[n-i] + s.count('U')\nprint(len(A))\n"}, "1878": {"problem_id": 1878, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n\tx,y,z = l[i],l[n-i-1]\nif(x==1 or x==2 or y==3 or z==4):ans+=1\nprint(ans)\n"}, "1879": {"problem_id": 1879, "answer": "t = int(input())\nfor i in range(t):\n  s, e, w = list(map(int, input().split()))\n\n  if(s[0] == e[1] and w[2]!= -1 and s[3] > w.get(e[4], 0) + 2 and (w[5] - w) % 2 == 0 and e < s.pop(0)) and ((e - s) // 2) <= t - (2 * (t - i) - 2*i) * ((i - t) / 3)): print(-1)\n"}, "1880": {"problem_id": 1880, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(len(l)):\n  s+=l[i]\nprint(s)\n"}, "1881": {"problem_id": 1881, "answer": "import sys\ninput = sys.stdin.readline\nn, k = list(map(int, input().split()))\nA = []\nfor i in range(n):\n\tA.append([int(x) for x in input()])\na = [None] * (n + k + 1)\n#print(a, a[k - 1] - A[-1][0], 0, 0)\n\n\t# print(len(A) - k - 2, \"\".join(sorted(set(S))) + \" \" + str(0)))\nprint(*A, sep=\"\\n\")\n"}, "1882": {"problem_id": 1882, "answer": "n, t = list(map(int, input().split()))\na = [int(x) for x in input()]\ns = 0\nfor k in range(n):\n\ts += a[k] - t\nprint(s)\n"}, "1883": {"problem_id": 1883, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0]*n\nfor i in range(n):\n\tl[a[i]-1] = i\nc = []\ns = set(l)\nr = len(s) - s.pop()\nif r == 0 or l[l.index(max(r)-1)] == s[r-1]:\nprint(1)"}, "1884": {"problem_id": 1884, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,x=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n   l.append([int(x) for x in input()])\nprint(' '.join(l))"}, "1885": {"problem_id": 1885, "answer": "n = int(input())\nprint(n)"}, "1886": {"problem_id": 1886, "answer": "def capitalize(word):\n   return ''.join([chr(ord('a')+97) for chr in word])"}, "1887": {"problem_id": 1887, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[a[i]-1] = i\nans = sum(b)\nprint(ans)"}, "1888": {"problem_id": 1888, "answer": "n, m = list(map(int, input().split()))\na, b, c = [int(x) for x in input()]\nb -= a\nc -= b\nprint(b)\n"}, "1889": {"problem_id": 1889, "answer": "n,m,q=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append([int(input()),i])\nans=0\ni=n-1\nwhile(i>0 and a[i][0]==1 and i<n and ans==0:ans==ans*2):i-=2\nprint(ans)\n"}, "1890": {"problem_id": 1890, "answer": "s = input()\nn = len(s)\na = 0\nfor i in range(n):\n\tif s[i] % 5 == 0: a += 1\nprint(a)"}, "1891": {"problem_id": 1891, "answer": "n,k,a,b = list(map(int,input().split()))\nl = [0]*(n+1)\nfor i in range(k):\n  l[i] = min(a*i,l[k-i])\nprint(min(l))"}, "1892": {"problem_id": 1892, "answer": "n = int(input())\nl = list(map(int, input().split(' ')))\nprint(sum(l))\n"}, "1893": {"problem_id": 1893, "answer": "# cook your dish here\nn, t = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += i\nprint(s / t)\n"}, "1894": {"problem_id": 1894, "answer": "n, m = list(map(int, input().split(' ')))\nl = []\nfor i in range(n):\n\tif l[i] == '+': l.append(i)\nif m <= 3: print('No')\nelse: l = [int(x) for x in l]\n"}, "1895": {"problem_id": 1895, "answer": "# cook your dish here\nn, m = map(int, input().split())\na = []\nfor i in range(n):\n\ta.append(list(map(tuple, a[i])))\nans = max(a)\nprint(ans)"}, "1896": {"problem_id": 1896, "answer": "n = int(input())\na = [0] + list(map(int, input().split()))\nfor i in range(n):\n\ta.append(a[-1]+i)\nprint(2)"}, "1897": {"problem_id": 1897, "answer": "s = input()\nn = len(input())\ncnt = 0\nfor i in range(n):\n\tif s[i] == 'A' and cnt == 0: c += 1\nprint(('\\n'.join(map(str,s))))\n"}, "1898": {"problem_id": 1898, "answer": "n = int(input())\nl = []\nfor i in range(n):\n\tl.append(str(i))\nprint(' '.join(l))"}, "1899": {"problem_id": 1899, "answer": "n, s, m, k = list(map(int, input().split()))\na = [int(i) for i in input()]\nl = []\nfor _ in range(m):\n\tl.append(sorted(list(range(n)), key=lambda x: x[1]))\n\n\ta.sort(reverse=True)\nprint(*a, sep=\"\\n\")\n"}, "1900": {"problem_id": 1900, "answer": "n,k,m = list(map(int,input().split()))\na = [int(x) for x in input()]\nb = [-1]*(k+1)\nc = 0\nfor x,y in zip(a,b):\n  if x==y:c+=1;b[x]+=y;c=0\nprint(c)"}, "1901": {"problem_id": 1901, "answer": "n, m = list(map(int, input().split()))\nc = [0] * (n + 1)\nfor i in range(n):\n\tc[i] = c[n - 1] + int(input())\nprint(sum(c))"}, "1902": {"problem_id": 1902, "answer": "from sys import stdin,stdout\nimport numpy as np\nn = int(stdin.readline().strip())\na = np.array(sorted(list(map(int,a)))).reshape(n,n)\nprint(len(a))"}, "1903": {"problem_id": 1903, "answer": "n,m,d = list(map(int,input().split()))\na = [0]*m\nfor i in range(n):\n   a[i+1]+=1\nprint(max(a))"}, "1904": {"problem_id": 1904, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = input()\nans = 0\nfor i in range(n):\n\tif s[i] == 'h' and a[-1] <= i <= a.index(s[:i]+1) and i >= len(a) - 1 and (a[0] >= i) + 1 == s.find('r') - i:ans += 1:return ans\nprint(ans)\n"}, "1905": {"problem_id": 1905, "answer": "n,m,q = list(map(int,input().split()))\na = []\nfor i in range(n):\n\ta.append([int(input()),i+1]*m)\nans = [0,0]\ni = 0\nwhile i<n and a[i][i]==0:i+=1\nif i==n-1:print(ans[0])"}, "1906": {"problem_id": 1906, "answer": "n = int(input())\na = [0] + list(map(int, input().split()))\nfor i in range(1, n):\n  a[i] += 1\nprint(a[n-1])"}, "1907": {"problem_id": 1907, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n  x, y, r = [int(x) for x in input()]\n\n  a.append([x,y,r])\nprint('\\n'.join(a))"}, "1908": {"problem_id": 1908, "answer": "n, m = list(map(int, input().split()))\na = [0]\nfor i in range(n):\n\tx = a[i]\n\n\ta.append(x)\nprint(' '.join(sorted(a)))\n"}, "1909": {"problem_id": 1909, "answer": "n,k = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n\ta[i+1] += k\nprint(len(a))"}, "1910": {"problem_id": 1910, "answer": "n = int(input())\nc = 0\nfor i in range(n):\n\tc += 1\nprint(c)"}, "1911": {"problem_id": 1911, "answer": "n, k = list(map(int, input().split()))\na, b = 0, 0\nfor i in range(n):\n   if a > b: a,b = b,a\nans = (a - b) * (k - 1)\nprint(ans)\n\n"}, "1912": {"problem_id": 1912, "answer": "for _ in range(int(input())):\n\tr, g, b, w = list(map(str, input().split()))\n\n\tif (r == \"0\" or g==0 or b == 0 or w == 1) or ((r-g-b)%1==1 and w*(w-1)//2!=0) and (b>0 and b-w>1): print(\"No\")"}, "1913": {"problem_id": 1913, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n\tif a[i] == \"0\" and c > 0: c += 2\nprint(c)"}, "1914": {"problem_id": 1914, "answer": "from sys import stdin,stdout\nn = int(stdin.readline().strip())\ns = input()\nl = []\nfor i in range(n):\n\tl.append(s[i:i+n])\nprint(sum(l))"}, "1915": {"problem_id": 1915, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = max(a)\nprint(m)"}, "1916": {"problem_id": 1916, "answer": "n, m = list(map(int, input().split()))\na, b = [], []\nfor i in range(m):\n\ta.append(b[i])\nb.sort(reverse=True)\nc = [-1] * (n + 1)\n\n\tc[0] = b[n - 1].bit_length() ^ (2 ** (m - n - 2) - i - c[c.index(i)]) % 1000000007\nprint(c)"}, "1917": {"problem_id": 1917, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n  a[i] += 1 if i % 2 == 0 else 0\nans = []\nmaxi = -10 ** 9 + a.count(0, 0, -1) - k\nprint(*ans, sep=\"\\n\")\n"}, "1918": {"problem_id": 1918, "answer": "n = int(input())\np = [0] * (n + 1)\nfor i in range(n):\n\tp[i] = list(map(int, input().split()))\na, b = p[n - 1]\nans = max(0, a - b) + min(a + b, ans)\n\n\t\nprint(ans)"}, "1919": {"problem_id": 1919, "answer": "n = int(input())\na = []\nfor i in range(n):\n\ta.append(list(map(int,input().split())))\nprint(1)"}, "1920": {"problem_id": 1920, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i, x in enumerate(a):\n   if x == b[i]: b.append(i)\nprint(len(b))"}, "1921": {"problem_id": 1921, "answer": "import sys\nsys.setrecursionlimit(10**6)\nn, m = list(map(int, input().split()))\ns1 = [0]\nfor i in range(m): s1[i+1] += [int(x) for x in sys.stdin.readline().strip('\\n').split(' ')]\nprint(min(s2))"}, "1922": {"problem_id": 1922, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n\ta[i] = i + m\nprint(sum(a))"}, "1923": {"problem_id": 1923, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nprint(max(l))"}, "1924": {"problem_id": 1924, "answer": "from math import ceil,log10,factorial,sqrt,gcd\nimport bisect,sys,itertools,heapq,collections,re,array,bisect\nsys.setrecursionlimit(10**7) \ninput = sys.stdin.readline\nn = int(input())\nl = []\nfor _ in range(n):\n  l.append(list(map(int,input().split())))\nprint(sum(l))"}, "1925": {"problem_id": 1925, "answer": "# coding: utf-8\nimport math\nn=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n if a[i]%2==0:s+=i\nprint(s)\n"}, "1926": {"problem_id": 1926, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n-1):\n\tl[i] += 1\nprint(' '.join(l))"}, "1927": {"problem_id": 1927, "answer": "from sys import stdin,stdout\nn,m=map(int,input().split())\ns=input()\na=s.split(\" \")\nans=[0]*n\nfor i in range(m):\n\ta[i]=int(stdin.readline().strip())-1\nprint(ans[-1])"}, "1928": {"problem_id": 1928, "answer": "n,m,k = list(map(int,input().split()))\nmatrix = [[0] * n for _ in range(m)]\nfor i,j in zip(range(n)):\n  matrix[i][j] += 1\nans = 0\ndef dfs(x,y,ans,curr_cnt):\n\n  if x == 0 or y == n-1 or x+y == m or (x + y) % 2 == 1 or ans < 0: ans = ans + matrix.pop()[1][1] + grid[x][y]\n#print ans\ndfs(0, 0, ans - 1, grid, mat, k)"}, "1929": {"problem_id": 1929, "answer": "n, t, c = list(map(int, input().split()))\na = [0]*n\nfor i in range(n):\n  a[i] += c\nprint(a[-1])"}, "1930": {"problem_id": 1930, "answer": "n = int(input())\np = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n  if p[i] == 0: ans += 1\nprint(ans)\n"}, "1931": {"problem_id": 1931, "answer": "for _ in range(int(input())):\n\tn = int(bin(n).replace('0b','').rstrip('1'*(10**9+1))[2])\n\n\tprint(1)\n"}, "1932": {"problem_id": 1932, "answer": "n = int(input())\ns = input()\nd = [[0]*(n+1) for i in range(1, n+2)]\nfor i, v in enumerate(s):\n   d[v][i] = i\nl = len(d)\ncnt = 0\ni = 1\nwhile i < l: i+=1\nif i%2 == 1: cnt+=d[i][l-1]\nprint(i)"}, "1933": {"problem_id": 1933, "answer": "n,m,k = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n  a[i+1] = (a[-1]+1)%m\nprint(max(a))"}, "1934": {"problem_id": 1934, "answer": "n,m=list(map(int,input().split()))\na=[0]*(n+1)\nfor i in range(m):\n  a[i]+=int(input())\nprint(a[n])\n"}, "1935": {"problem_id": 1935, "answer": ""}, "1936": {"problem_id": 1936, "answer": "t = int(input())\nfor _ in range(t):\n\tl, r = list(map(int, input().split()))\n\n\tif l == 0 or r ==0 or (r == 1 and l > 0 and r < l//2 or l % 2!= 0) or ((r - 1) * (l - r) // 2 + 1 == r * 2) and ((l-r)*2 == -(r*2)//(l+1) + r*(2*r)%2!= -l * r %2): print(-1,0)\n"}, "1937": {"problem_id": 1937, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(*a)"}, "1938": {"problem_id": 1938, "answer": "n, k = list(map(int, input().split()))\na = [0] * n\nfor i in range(1, n):\n  a[i] = (a[-1]*i)%1000000007\nprint(sum(a))"}, "1939": {"problem_id": 1939, "answer": "n, k = list(map(int, input().split(' ')))\na = []\nfor i in range(n):\n\ta.append(input())\nprint(''.join(a))"}, "1940": {"problem_id": 1940, "answer": "n, k = list(map(int, input().split()))\nw = [0] * (n + 1)\nfor i in range(n): w[i] += 1\nprint(w[-1])\n"}, "1941": {"problem_id": 1941, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(1, n+2):\n\tb[i] = b[n-i-2] + i\nprint(*b)"}, "1942": {"problem_id": 1942, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nfrom collections import deque,defaultdict,Counter,OrderedDict  import defaultdict as ddict\nclass DSU():\n  def __init__(self, N):\n #   self.par = list(range(N))  # N = N-1 for N in range(2*N+1)\n\n  @staticmethod\n-thir_leetcode\ndef trie(): return int(input())\ns = input().split(' ')[0]\nn = int(''.join(sorted(map(int,s)))[1])\nl = [int(i) for i in s[0]]\nr = 0\nwhile r < len(l) and l[r] == '1': r += 1\nfor i,j in enumerate(r): print(' '.join([str(j) if i == j else j for j in i]))\n"}, "1943": {"problem_id": 1943, "answer": "# https://www.codecin.com/problems/BFS\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n\tl.append([int(x) for x in input().strip()])\nprint(max(l))"}, "1944": {"problem_id": 1944, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(1, n+2):\n  if a[i] > b[-i-1]: a.pop(i)\n\n  else: b.append(a[:i])\nprint(\"Happy \" + \" Alex\")"}, "1945": {"problem_id": 1945, "answer": "q = int(input())\nfor i in range(q):\n a = list(map(int, input().split()))\n n = len(a)\n if a[0] == 'x':\n  print(''.join([' '] * (n - 1) // 2))"}, "1946": {"problem_id": 1946, "answer": "n = int(input())\na = list(map(int, input().split()))\nx = [0]*n\nfor i in range(n-1):\n\ta[i] += 1\nprint(max(a))"}, "1947": {"problem_id": 1947, "answer": "from sys import stdin,stdout\nn,m,l = list(map(int,input().split()))\na = []\nfor i in range(m):\n\ta.append([int(stdin.readline()),i+1])\nans = [0]*(n+m+l+2)\n#print(a[0][1], a[1][0])\n\n\tans.sort(reverse=True,key=lambda x:(x[2] if x[3]>0 else 0),reverse=\"\")\nprint(*ans)"}, "1948": {"problem_id": 1948, "answer": "n, x = list(map(int, input().split()))\nedges = []\nfor i in range(n-1):\n  edges.append((i, i+1))\n\n  if i == n-2 and edges[i][0] == 'A' and all(e1 == e2 for e1,e2 in zip(range(i), e)) == x or x == -1 or (i == 0 and e[0][1]=='B' or i==0 and (e[1][2]+1) in edges) and not x in [i for i,x in enumerate(x) if x!=i] or not (0 not in x)]:\n# print('move:', x, end=' ')\nans = 0\ndef move(u, v, p, q, r, c, seen):\n\n\tif (u==v and p==q and r==c and c==1 and seen[u][v]] and u==n and v==p and q==r or u == p or v == q or q == r: ans += 1\n\t\treturn ans\n"}, "1949": {"problem_id": 1949, "answer": "n, k = list(map(int, input().split()))\na = [int(x) for x in input()]\nans = 0\nfor i in range(len(a)):\n\tif a[i] < 0: ans += i\nprint(ans)\n"}, "1950": {"problem_id": 1950, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n\tc += a[i]\nprint(c)"}, "1951": {"problem_id": 1951, "answer": "n = int(input())\narr = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n   s += arr[i]\nprint('YES' if s <= n else 'NO')"}, "1952": {"problem_id": 1952, "answer": ""}, "1953": {"problem_id": 1953, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(max(l))"}, "1954": {"problem_id": 1954, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nf = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n\ts[f[i]-1] += 1\nprint(s)"}, "1955": {"problem_id": 1955, "answer": "n,m=list(map(int,input().split()))\na=[0]*(n+1)\nfor i in range(m):\n\ta[i]=int(input())\nprint(sum(a))"}, "1956": {"problem_id": 1956, "answer": "import math\nt = int(input())\nfor _ in range(t):\n\ts, e = list(map(int, input().split()))\n\n\ta = [0]*(2*s+1) + [int(i) for i in str(s) if i!=e] + [-1] * (s-e)\n \tfor i, j in zip(list(range(0, s-1), e)): a[i] = j\n"}, "1957": {"problem_id": 1957, "answer": "n, a, b = list(map(int, input().split()))\ns = a + b\nprint(s)\n"}, "1958": {"problem_id": 1958, "answer": "import sys\nfrom itertools import accumulate, zip_longest\ninput = sys.stdin.readline\nn, p = list(map(int, input().split()))\ns = [0]\nfor i in range(n):\n\ts.append(s[-1] + i)\nprint('\\n'.join(accumulate(*s)))"}, "1959": {"problem_id": 1959, "answer": "n, m = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n):\n\ts[i] = s[n - i - 1] + (i % 2 == 0) * 10 ** 9\nans = 0\ni, j, k = m, 0, n - m\nwhile i > 0 and j > 1 and k < len(s) and i % k == 1:\n\n\tans += (j - j // 2 + k) % n\nprint(ans)\n\n"}, "1960": {"problem_id": 1960, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\ts+=a[i]\nprint(''.join(s))"}, "1961": {"problem_id": 1961, "answer": "n,m = list(map(int,input().split()))\ns = []\nfor i in range(n):\n\ts.append(input())\nprint('YES' if s[-1]=='.' else 'NO')\n"}, "1962": {"problem_id": 1962, "answer": "n,k,l = list(map(int,input().split()))\na = [int(i) for i in input().strip()]\nm = k*10 + l\nans = []\nfor i,j in zip(a,m):\n  ans.append(j)\nprint(max(ans))"}, "1963": {"problem_id": 1963, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n):\n\ts[i] = max(a[-1] - i, 0)\nprint(s)"}, "1964": {"problem_id": 1964, "answer": "n = int(input())\nk = list(map(int, input().split()))\nm = [0] * n\nfor i in range(n):\n\tk[i] += m[n-i-1]\ns = sum(k)\ni = 0\nwhile i < n and s > 0: i += s\nprint(i)"}, "1965": {"problem_id": 1965, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n   n, x = list(map(int, input().split()))\n\n  account_rating = [0]*(n+1)  # (rating for index in [x for x in account] if 0<=x) - (0 if x<0 else 1) + (1 if index < x else 0) for (index, value) in zip(itertools.combinations(x, n), x[1:]) "}, "1966": {"problem_id": 1966, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(len(l))"}, "1967": {"problem_id": 1967, "answer": "# cook your dish here\ndef monospace(a,b):\n return '\\n'.join(str(i) for i in a.split('.') if i.isdigit() and i%3==1)\na=list(map(int,input().split()))\nb=[0]*(10**5+1)]\nm=0\nfor i,j in zip(b,a):m+=i\nprint(m)"}, "1968": {"problem_id": 1968, "answer": "n,v = list(map(int,input().split()))\nl = []\nfor i in range(n):\n  l.append([int(x) for x in input()] + [0] * v)\nprint(*l)"}, "1969": {"problem_id": 1969, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "1970": {"problem_id": 1970, "answer": "t = int(input())\nfor _ in range(t):\n   x, y, z = list(map(int, input().split()))\n\n  if z == 'K' and x == \"2\" and y == \"\" and z== \"1\":\n\tprint('NO')\n"}, "1971": {"problem_id": 1971, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n\ts.append(a[-i])\nprint(len(s))"}, "1972": {"problem_id": 1972, "answer": "q = int(input())\nfor _ in range(q):\n   a, b, c = list(map(int, input().split()))\n\n  if a == 1 or b == 2 or c == 3 or (a % 2!= 0 or a % 3 == 0) and (b % 5!=0 or  b % 6 ==0): print(a)\n"}, "1973": {"problem_id": 1973, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n-1):\n\ts+=a[i]\nprint(s)\n"}, "1974": {"problem_id": 1974, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nn=int(input())\na=list(map(int,input().split()))\nb=[0]*n\nfor i in range(n):\n\ta[i]+=b[-1]\n#print(a)\nl=[]\nr=0\nwhile(l!=[]){l:l.pop()[1:]}\nif(len(b)>0): r+=min(r,l[0])\nelse: l.append(0)"}, "1975": {"problem_id": 1975, "answer": "n,m = list(map(int,input().split()))\ns = set()\nfor i in range(1,n):\n  if s.intersection(s[i-1]) == s:break\nprint(k)\n"}, "1976": {"problem_id": 1976, "answer": "from sys import stdin,stdout,setrecursionlimit\ninput=stdin.readline\ns=lambda:list(map(int,input().split()))\nprint(s())"}, "1977": {"problem_id": 1977, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\n#sys.setrecursionlimit(10**5)\nINF = float('inf')\nmod = 10**9+7\ndef LI(): return list(map(int, input().split()[1:])); return [int(x) for x in range(0, 27)] #for input, we can use itertools.groupby() to generate a groupby of groups of numbers in a list.  \nl = [-1]*(2*n+1)  #l[i] = min(i, i[:i+2])\nans = [LI() for i in l]\nprint(''.join(ans))"}, "1978": {"problem_id": 1978, "answer": "from collections import defaultdict as dd\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\ngraph = [[] for _ in range(n)]\nfor i, x in enumerate(map(int, input().split()), 1):\n\tgraph[x-1].append(i)\nvisited = [0]*n\ndef dfs(x, seen=set, visited=0, parent=None):\n\n\tif not x or not seen: return\n#\t\tseen = set(seen) or [x for x, y in graph[y].items() if x] == parent\n \telse: visited |= seen | set([x])\nans = 0\nwhile len(graph) > 0 and len([dfs(a, [b]) for a, b in visited]) == n: ans += (1<<n)-1\nprint(ans)"}, "1979": {"problem_id": 1979, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] = a.count(i+1)\n#print(a)\n\n\tb.append(b[-n//2] + a[n%2])\nans = 0\nflag = False\nwhile(len(ans)>0):\n\n \tans += (n - ans[0])*(2*ans[1] - 1)**0.5 + (1 if flag == True else 0) \n\n"}, "1980": {"problem_id": 1980, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, a = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  d[i] += 1\nc = [0] * (n + 2)\na = sorted(list(d.items()), key=lambda x: d.get(x[0], 0))[::-1]\nprint(max(a))"}, "1981": {"problem_id": 1981, "answer": "n, m = list(map(int, input().split()))\na = []\nfor i in range(m):\n\tx, y = [int(x) for x in input()]\n\n\tif x > y: a.append(y)\nans = 0\n\nfor ai in a: ans += a[ai]\nprint(ans)\n\n"}, "1982": {"problem_id": 1982, "answer": "t = int(input())\nfor i in range(t):\n\tn,k = list(map(int,input().split()))\n\n\tif k%2 == 0:print(\"YES\")\n   else: print(\"NO\")"}, "1983": {"problem_id": 1983, "answer": "t = int(input())\nfor _ in range(t):\n\tn = input().split()\n\n\ta = [int(x) for x in list(map(int, str(n))) if x % 2 == 1]\n \tl = len(a) - 2\n#\tprint(l, \" \" * (l + 1) + \" \", \" \".join(sorted([a[i], i])) + [0] * l)\n"}, "1984": {"problem_id": 1984, "answer": "n,m,k,w=list(map(int,input().split()))\nl=[0]*n\nfor i in range(n):l[i]+=1\ns=input()\nc=0\nd={'a':'b', 'b' :'c'}\nb=s.count('a')\nif b<c:d[b]='d'\nelse:c+=b\nprint(c)\n"}, "1985": {"problem_id": 1985, "answer": "k, n = list(map(int, input().split()))\na = [0]*(n+1)\nfor i in range(k):\n\ta[i] += a[-i-1]\nprint(len(a))"}, "1986": {"problem_id": 1986, "answer": "n, k = list(map(int, input().split(' ')))\nf, t = 0, 0\nfor i in range(1, n + 1):\n\tif t > f: f = t - f + (f - t) // (2 * (n - 1) / 2)\nprint(f)"}, "1987": {"problem_id": 1987, "answer": "n,c = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n  a[i+1]+=c*(i-1)**2\nprint(max(a))"}, "1988": {"problem_id": 1988, "answer": "import sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**8)\nt = int(input())\nfor _ in range(t):\n\tn, k = map(int, input().split())\n\n\ts = list(map(str, zip(s, n - k + 1))).replace('q', ''.join([str(x) for x in s]))\n \tw = [0] * (n + 2)\n\n  #print(w, s, w[:n] + s[n:])\n"}, "1989": {"problem_id": 1989, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "1990": {"problem_id": 1990, "answer": "n = int(input())\ns = input()\nc = 0\nfor i in range(n):\n\tif s[i] == 'L' and i == 0: c += 1\nprint(c)"}, "1991": {"problem_id": 1991, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn, a, b = list(map( int, input().split() ))\n\n\tif a.count( '0' ) > b: print( 0 )\n \telif b == 0 or a == '1' or b!= '2' and a[0] == b[-1]: print('0')\n"}, "1992": {"problem_id": 1992, "answer": "n,m,k=list(map(int,input().strip().split()))\na=[]\nfor i in range(n):\n\ta.append([int(x) for x in str(i)])\nprint(sum(a))"}, "1993": {"problem_id": 1993, "answer": "n,m = list(map(int,input().split()))\nx = []\nfor i in range(n):\n x.append(\"*\")\n i = 0\n m = 10\n while(i<n and x[i]==\".\"): i+=1\n print(m)\n \n"}, "1994": {"problem_id": 1994, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n-1):\n\ts1,s2 = list(map(int,input().strip().split()))\n\n\tif s1[:i] == s2[-i+1:]: cnt += 1; break\nif n == 0: print(1); return;\nl,c = [0]*n,0\nwhile c: l.append(c);c-=1"}, "1995": {"problem_id": 1995, "answer": "s = input()\nn = len(s)\nl,r,k = 0,1,0\nfor i in range(n):\n\tl += int(input()[i])-1;k += 1;\nif l == r == k:print(''.join(map(str,s)))\nelse:s.append(l)"}, "1996": {"problem_id": 1996, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n):\n\tl.append(a[i])\n#print(l)\ncnt = 0\nd = [0]*n\ndef dfs(s,i,n,l):\n\n\tif s == '.' or i == 0 or l[-1].isdigit() or n - i - 1 < n or d[s][i] == i + 1 or (s == s[:i+1] or s!= ''.join(str(x) for x in l)) or cnt == n-i-2 : return 1\n \ts = s.replace('.','') + '!'+ str(d.pop(0)[0]) + s + \"'.'\\n'*(i + 2 - n) * (n - (i - 2)) + (d[0][s]!= s) if s in s else s\ndfs(1, i, n, l)"}, "1997": {"problem_id": 1997, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n\tif a[i] == 1: ans += 1\nprint(ans)\n"}, "1998": {"problem_id": 1998, "answer": "n,a,b,k = list(map(int,input().split()))\ngrid = [[0]*(n+1) for i in range(b)]\nfor i,x in enumerate(grid,1):\n\tif grid[i][x]==0:grid[x][i] = 1;break\nif k==1:print(0)\nelif (k==2):print((n-1)*(k-2))"}, "1999": {"problem_id": 1999, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n\ts.add(i)\nprint(len(s))"}, "2000": {"problem_id": 2000, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a))"}, "2001": {"problem_id": 2001, "answer": "import sys\ninput = lambda: sys.stdin.readline().strip()\nn,q = list(map(int,input().split()))\ns = input().rstrip('\\n')\nl = [int(i) for i in s.split(' ')]\nfor _ in range(q):\n\tl.append(l[-1]+1)\nprint(sum(s))"}, "2002": {"problem_id": 2002, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n-1):\n\ts+=l[i]\nprint(s%1000000007)"}, "2003": {"problem_id": 2003, "answer": "q = int(input())\nfor _ in range(q):\n   x = list(map(int,input().split()))\n\tif x[0]=='+': x.pop(0)\n"}, "2004": {"problem_id": 2004, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += min(a[i] * (i + 1) // 2)\nprint(ans)"}, "2005": {"problem_id": 2005, "answer": "n, m = list(map(int, input().split()))\na = [int(x) for x in input()]\nb = []\nfor i in range(n):\n\ta[i] = a[n - i - 1] + b[-i-1]\n\n\tb.append(i)\nprint(sum(b))"}, "2006": {"problem_id": 2006, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\nd = [[] for i in range(n)]\nfor i, c in enumerate(list(input()), 1):\n  d[c].append(i+1)\ns = [0]*n\nflag = 0\nvisited = set()\nwhile s[1]<=n and flag==0 and len(d[s[0]])==len(s) and (n==1 or (m==n) or visited) : s=s+[:]\nif flag == 1: return n\nelse : return m\n"}, "2007": {"problem_id": 2007, "answer": "import math\nfrom collections import defaultdict,deque,OrderedDict,Counter,collections,array,bisect,heapq,itertools,math,random,time,copy,functools\nn=int(input())\nl=list(map(int,input().split()))\ns=input()\ncnt=0\nfor i in range(n):\n if l[i]=='a':\n  cnt+=1 \n elif l['a']!=l['b'] and len(l)>1 and int(math.sqrt(s[:i+1])*(1<<i))>=2:print(-1)"}, "2008": {"problem_id": 2008, "answer": "n=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(n):\n\ta[i]=max(a.count(i),0)\nif a[0]==1:ans+=1\nprint(ans)"}, "2009": {"problem_id": 2009, "answer": "n=int(input())\na=list(map(int,input().split()))\nr=[0]*n\nfor i in range(n):\n\tr[a[i]-1]=i\nans=0\nflag=True\nwhile(len(r)>0 and r[0]+1<n and a[r]!=i+1):\n\n\tans+=min(max(0,n-i-2*flag)+(i*(ans-n))**2+i)**0.5\n\n"}, "2010": {"problem_id": 2010, "answer": "n,m = list(map(int,input().split()))\na = [int(i) for i in input().strip().replace('-','')]\ns = set(a)\nfor i,a in enumerate(s):\n\tx = (a[0] - a[1])*(n-i-1)//2 + (i+1-n)%m\nprint(''.join(x))"}, "2011": {"problem_id": 2011, "answer": ""}, "2012": {"problem_id": 2012, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = input()\nc = []\nfor i in range(len(a)):\n\tc.append([a[i], i+1])\nprint(''.join(c))"}, "2013": {"problem_id": 2013, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nN,M,k=list(map(int,input().split()))\ns=0\nfor i in range(k):\n\ts+=N*(N-1)//2+M*i\nprint(s)\n"}, "2014": {"problem_id": 2014, "answer": "n, k = list(map(int, input().split()))\ns = [0]\nfor i in range(k):\n  s.append(s[-1]+i)\nprint('\\n'.join([str(x) for x in s]))"}, "2015": {"problem_id": 2015, "answer": "for i in range(int(input())):\n\tr,g,b=input().split()\n\n\tif(r=='R' and g>=0 and b<=10 and r!='G'):print('Yes')"}, "2016": {"problem_id": 2016, "answer": "import sys\ninput = sys.stdin.readline\ndef main():\n q, m = [int(x) for x in input().split()]\n for _ in range(q):\n  k, a, b = list(map(int, str(input()))), [], []; b[0] = -1; k += 1; a += b; b += a; q.append(k)\n print('YES' if main() else 'NO')"}, "2017": {"problem_id": 2017, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tif a[i] % 2 == 0:   ans += 1\nprint(ans)\n"}, "2018": {"problem_id": 2018, "answer": "def main():\n\tn, *m, q = list(map(int, input().split()))\n\n\tfor _ in range(q):\n\n \t\ts = sorted(list(input()), key=lambda x: x[1], reverse=True)\n \n\n\n\n"}, "2019": {"problem_id": 2019, "answer": "for _ in range(int(input())):\n s = input()\n if s[0] == '0':\n  print(\"DA\")"}, "2020": {"problem_id": 2020, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "2021": {"problem_id": 2021, "answer": "n = int(input())\na = list(map(int, input().split()))\nq = [0] * (n+1)\nfor i in range(n-1):\n\tq[i] = sum(a[j] for j in q if j <= i) + a[n]\nprint(sum(q))"}, "2022": {"problem_id": 2022, "answer": "# cook your dish here\nfrom collections import defaultdict\nn, m, k = list(map(int, input().split()))\ngraph = [[] for i in range(m)]\nfor i, j in enumerate(range(n)):\n   graph[i].append(j)\nvisited = set()\ndepth = 0\nwhile depth < k and len(graph[depth][0]) == 0: depth += 1\n\n  for j, (u, v) in [(0, 1), (1e-8, 0), (-1*depth, depth)]:\n\tvisit.add((j, u))\n\n\tdepth -= 1"}, "2023": {"problem_id": 2023, "answer": "n,m = list(map(int,input().split()))\na = [0]*(n+1)\nq = []\nfor i in range(m):\n\tq.append(a[i]+pow(10,n-i,2))\n\n\tif q[0]+q[1] == a[n] and len(q)>0:\n\n \t\tprint(i)\n\n"}, "2024": {"problem_id": 2024, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = [0] * (n + 1)\nfor i in range(1, n + 2):\n  ans[i] = (a[n - i - 1] + a[-i]) % 1000000007\nprint(ans)"}, "2025": {"problem_id": 2025, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n\ts = [int(x) for x in input().split()]\n\n\tif (s[0] + s[1]) % 2 == 0: print(-1)\n"}, "2026": {"problem_id": 2026, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n):\n\ts[a[i] + 1] += 1\nans = 0\ni, j, k = 1, 0, n-1\nwhile i + j < n and j + k < m:\n\n\tif s[j] == 0 and a[k]!= 0 or k == 1 or j == n - 1 and k!= j and i == k and ans == 2 or (k == j) and (ans == 3 or ans > 2) or i!= k: ans = 2\nprint(ans)\n"}, "2027": {"problem_id": 2027, "answer": "n = int(input())\na = [0]*n\nfor i in range(n):\n  a[i+1] += 1\nprint(' '.join(map(str,a)))"}, "2028": {"problem_id": 2028, "answer": "n = int(input())\nl = list(map(int, input().split()))\nd = [0] * (n + 1)\nfor i in range(n):\n  d[i] = (d[n - i - 1] + i) % n\nprint(sum(d))"}, "2029": {"problem_id": 2029, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nn, s = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor i, x in enumerate(input().rstrip('\\n').split(' '), 1):\n\tif x == '1': edges[i].append(i[-1] - 1)\n\n\telse: edges.append([x[:-1], i[0] + 1])\n# print(' '.join([str(x) +'' + str(y) for x, y in edges]))\n\n"}, "2030": {"problem_id": 2030, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(1, n+2):\n  if a[i-1] == 0: a.pop(0) + b[-2] = 1\nans = 0\ndic = {}\ndef dfs(x, y, dic, a, i, j, k):\n\n  # print(i,j,k,a[x][y][i],i[j][x],j[k][j] )\n\tif x==0 or y==1 or i==j or j==k or k==i or x!=y: return 0\n\n\tans += (dfs(y, x+i*i+j*j+k*k) if x>=i else 0)  + (b[y-i] if y<=j else 1) * (n-j-k)*(k-x-y)//2 + ((i>j) or (j>k))*((n>i)or (i<j)) + k*1\nprint(ans)"}, "2031": {"problem_id": 2031, "answer": ""}, "2032": {"problem_id": 2032, "answer": ""}, "2033": {"problem_id": 2033, "answer": ""}, "2034": {"problem_id": 2034, "answer": "n, m = list(map(int, input().split()))\nd = {}\nfor i in range(m):\n   d[i] = min(d.get(i, 0) + 1, len(list(range(n))) - 1)\ns = [0] * (n + 2)  # s[n:n+2] is the shortest path from i to n\nt = 0\nwhile t < m:  t += 1\n\n  for i, j in d.items():  j, i = j - s.pop(0), i + t, (s[j], j), (0, -1)\n\n"}, "2035": {"problem_id": 2035, "answer": "n,s = map(int,input().split())\nl = []\nfor i in range(n):\n x,y = [int(x) for x in input()]\n l.append(sum(l[-1]*(y-x+1)//2,10**9,9)%2)"}, "2036": {"problem_id": 2036, "answer": "from sys import stdin,stdout\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\ninput = lambda:stdin.readline().rstrip('\\n')\nsys.setrecursionlimit(10**7)\nmod = 10**9+7\ndef LI():return [int(x)-1 for x in input().split(' ')]\n# def LI_(): return [i for i,x in enumerate(input()) if x=='1'][0]\n \nn, m = LI()\na = [list(map(int,input().strip())) for _ in range(n)]  # [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,166,167,168,169,180,181,184,187,188,189,190,191,192,193,194,195,196,197,198,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,244,241,242,243,254,255,257,268,269,280,281,284,286,287,288,309,302,307,313,314,317,320,331,332,343,444,446,457,461,464,468,469,471,474,479,480,481,486,487,488,489,490,491,494,501,509,520,533,536,537,538,549,554,555,586,587,590,591,596,613,614,616,618,623,625,666,668,669,680,681,688,689,690,694,696,697,698,699,800,803,804,806,807,808,809,820,810,911,905,617,642,660, 661,672,667,673,674,illac,Charlie,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,s,rs,t,u,v,w,xc,ny,zn,mma,mn,ml,mi,me,mm,oct,no,o,p,red,rc,ru,\u00f3,ron,rot,ro,rats,rd,err,eb,ite,\u20ac,\u00f0,\u0119,\u014b,\u00fa,\u00fb,ui,ul,\u00eb,\u00ef,iu,jumble,my,nf, nd,November,omen,nom, ptr,pm,pn,pr,pri,pi,ps,py,rod,resy,squel,tsy,sb,sl,sm,st,sv,stick,su,ti,tn,vv,tr,tom,tw,vi,vin,uni,von,uo,izarre,orph,lost,same,or,ly,ou,oj,ug,oun,oi,lo,lion,ln, Loop,poon,oln, lia,la,lb,ll"}, "2037": {"problem_id": 2037, "answer": "n,m = list(map(int,input().split()))\nl = []\nfor i in range(n):\n\tl.append(list(bin(i)[2:].zfill(len(l[i])))[-1])\nprint('\\n'.join(str(x) for x in l))"}, "2038": {"problem_id": 2038, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\ts+=a[i]\nif(s%2==0 and a[n-1]==s//2):\n\n\tprint(1)\n\n"}, "2039": {"problem_id": 2039, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(len(a))"}, "2040": {"problem_id": 2040, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] = str(i) + '0'\nans = [0] * (n + 1)\nprint(ans[0])"}, "2041": {"problem_id": 2041, "answer": ""}, "2042": {"problem_id": 2042, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nprint(int(input()))"}, "2043": {"problem_id": 2043, "answer": "s = input()\nn = len(s)\nfor i in range(n):\n\ts[i] ='' + s[n-i-1]\nprint(2)"}, "2044": {"problem_id": 2044, "answer": "n, m = list(map(int, input().split()))\na = [int(x) for x in input()]\ncnt = 0\nfor i in range(n):\n   if a[i] == m: cnt += 1\nprint(len(a))"}, "2045": {"problem_id": 2045, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n  d[a[i]] = str(i)\nprint(\" \".join(d.items())))\n"}, "2046": {"problem_id": 2046, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nl = []\nfor i in range(n):\n\tl.append(a[i] + 1)\nprint('\\n'.join(l))"}, "2047": {"problem_id": 2047, "answer": "n = int(input())\nb = list(map(int, input().split()))\na = sorted(b)\nc = [0]*n\nfor i in range(n-1):\n  a[i+1] = a.pop(0) + c[-i]\nprint(\"YES\")\n"}, "2048": {"problem_id": 2048, "answer": "n = int(input())\ns = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n\ts[i] += cnt\nprint(sum(s))"}, "2049": {"problem_id": 2049, "answer": "n,m=map(int,input().split())\na=[]\nfor i in range(n):\n\tl,r=[],[]\n\n\ta.append(l+1)\n \tif a[l][0]<=l:a[0][1]-=1\t\tprint('Yes')\nelse:print(\"No\")"}, "2050": {"problem_id": 2050, "answer": "n,k = [int(i) for i in input().split()]\ns = 0\nfor _ in range(n):\n\ts += int(input()[-1])\nprint(min(k,s))"}, "2051": {"problem_id": 2051, "answer": "n,m,k = list(map(int,input().split()))\nc = [int(i) for i in input()]\nl = 0\nr = len(c)\nwhile r-l>0 and c[l]-c[r+1]==0:l+=1;r-=1\nprint(l)"}, "2052": {"problem_id": 2052, "answer": "import sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**6)\nfrom collections import deque\nINF = float('inf')\nmod = 10**9+7\ndef LI(): return [int(i) for i in input().rstrip('\\n').split(' ')]\nreturn LI()"}, "2053": {"problem_id": 2053, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [input() for i in range(n)]\ns = 0\nfor x in a: s += x - b[x]\nprint(s)\n"}, "2054": {"problem_id": 2054, "answer": "t = int(input())\nfor _ in range(t):\n\ta,b = list(map(int,input().split()))\n\n\tprint(max(b,a-b))"}, "2055": {"problem_id": 2055, "answer": "for _ in range(int(input())):\n\tn = int(raw_input()).split(' ')\n\n\ta = [0]*(n+1)\n \tfor i in [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114, 115,116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 187, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 317, 318, 319, 325, 326, 329, 331, 336, 338, 340, 347, 348, 349, 360, 367, 368, 371, 372, 373, 374, 376, 379, 380, 383, 384, 389, 400, 401, 402, 409, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}\n"}, "2056": {"problem_id": 2056, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tif a[i] == '0' and (i+1)%2 == 0: ans += 1\nprint(ans)\n"}, "2057": {"problem_id": 2057, "answer": "n = int(input())\nl = list(map(int,input().split()))\ncnt = [0]*(n+1)\nfor i in range(len(l)):\n\tif l[i]%2 == 0: cnt[-1] += 1\nprint(max(2*l[:n]) + 1)"}, "2058": {"problem_id": 2058, "answer": "a, b = list(map(int, input().split()))\ns = []\nfor i in range(len(a)):\n  if a[i] == 0: s.append(i)\nif len(s) == 1: a.insert(0, 0 - s[-1])\nprint(sum(b) + a)"}, "2059": {"problem_id": 2059, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n  a[i] = s[-1]\nans = 0\nl = len(s) - 1\nwhile(l>0):\n\n  if (s[l] == 0 and l%2 == 1) and (l%3 == 2)and (n - l//3) :ans+=2\nprint(ans)\n"}, "2060": {"problem_id": 2060, "answer": "n = int(input())\nfor i in range(n):\n\tx, y = list(map(int, input().split()))\n\n\tif (x == y and x + y > x) or (y == x and y + x > y) and (z == 1 and z + z > 1): print(\"NO\")\n"}, "2061": {"problem_id": 2061, "answer": "n,m,k = list(map(int,input().split()))\nlakes = [0]*(n+1)\nfor i in range(m):\n\tif (i==0 or i==m-1 or (n-i)%2 == 0 or n==(i+i*2)//2:i!=0):i+=1;break\nprint(k*k)"}, "2062": {"problem_id": 2062, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += a[i]\nprint(ans)"}, "2063": {"problem_id": 2063, "answer": "n,m,w=map(int,input().split())\na=[int(i) for i in input()]\nb=[0]*(n+m+1)\nc=0\ns=sum(a)+1\nfor _ in range(len(b)):\n\tif b[-1]%2==0:s+=c\nprint(s)"}, "2064": {"problem_id": 2064, "answer": "n = int(input())\nprint(n)\n"}, "2065": {"problem_id": 2065, "answer": "n, m = list(map(int, input().split()))\na = []\nfor i in range(m):\n\ta.append([int(input()) for j in [i] + a[i][0]])\nprint(*a, sep='\\n')\n"}, "2066": {"problem_id": 2066, "answer": "for _ in range(int(input())):\n\ts = input()\n\n\tif s[0] == \"a\" or len(s) == 1 or s.find(\"a\")!= -1: print(\"no answer\")"}, "2067": {"problem_id": 2067, "answer": ""}, "2068": {"problem_id": 2068, "answer": "n = int(input())\nl = []\nfor i in range(n):\n a = input().split()\n l.append(int(a[0])[-1])\nprint(max(l))"}, "2069": {"problem_id": 2069, "answer": "from collections import deque\nn,m = list(map(int,input().split()))\np = [[] for _ in range(n+1)]\nfor i,a in enumerate(list(input()),1):p[a-1].append(i)\na = [-1]*n\nans = 0\ndef dfs(a,b):\n\tif a[b]!=-1:return 0\n\n\tcnt=deque(sorted(set(b),key=lambda x:x[1],reverse=True))[0][0]\n \tfor k,v in zip(*[v for k in a if k]): cnt[k]+=dfs(v,k) if v else -1\n#print ans\nwhile len(ans)!=0:ans=ans+ans-ans//2\n"}, "2070": {"problem_id": 2070, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nn=int(input())\nl=list(map(int,input().split()))\ns=input()\nfor i in range(len(l)):\n\tif s[i]=='a' and len(s)>=1 and (s[-i-1]!='b' or s) in [0,0] and i!=l[l.index(-1)] and l[:i].count('a')>0 and s:s.pop()==0:print(i)"}, "2071": {"problem_id": 2071, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n  a[i] = b[n-i-1] + (i+1)//2\nprint(sum(a))"}, "2072": {"problem_id": 2072, "answer": "n = int(input())\nx = list(map(int, input().split()))\nv = []\nfor i in range(n):\n  x.append(x[i] - x[n - 1 - i])\nprint(abs(v[0]))"}, "2073": {"problem_id": 2073, "answer": "n = int(input())\na = list(map(int, input().split()))\nmod = 10**9+7\nf = [[0]*n for _ in range(n)]\nfor i, x in enumerate(a, 1):\n\tf[x].append(i)\np = [1] * n\nans = 0\nwhile f[p[0]]!= p[1]:\n\n\tfor x, y in zip(f.pop()[:-1], p, [], [y, -1])[::-1][:x] == p:ans += (y - x) * (x - y) % mod\nprint(ans)"}, "2074": {"problem_id": 2074, "answer": "n,m = map(int,input().split())\nc = [int(i) for i in input()]\nprint(c[0])"}, "2075": {"problem_id": 2075, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\ns = [input() for i in range(n)]\np = '()'\nq = ''\nans = 0\nfor i, c in enumerate(s, 1):\n\tif c == '(': q += s[-i-1] if i > 0 else q[:-i]\nif n > m: print(ans)\nelse: ans = ans % (10**9+7)"}, "2076": {"problem_id": 2076, "answer": "for _ in range(int(input())):\n  \ta, b, c = input().split()\n\tn = int(a[0]) if a[1]!= 0 else 1\n\n\tl, r = 0, len(l) - 1  # l[i] = min(r) + max(c) for i, l in zip(range(n), l)\n#\tprint('l', l, 'r', r)"}, "2077": {"problem_id": 2077, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m = list(map(int, input().split()))\nd = [[] for _ in range(n)]\nfor i, x in enumerate(range(1)):\n  d[x].append(i + 1)\nans = [-1] * m\ns = 0\nwhile s < n:\n\n  if s == m: ans[s] = [x for x, y in zip(d[0][0:s], x) if y == x]\n"}, "2078": {"problem_id": 2078, "answer": "n,m=map(int,input().split())\na=[0]*(n+1)\nfor i in range(m):\n\ta[i%4]+=int(i**0.5)+1\nprint(sum(a))"}, "2079": {"problem_id": 2079, "answer": "n = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n\tl.append([int(x) for x in l[i]])\nprint(''.join(l))"}, "2080": {"problem_id": 2080, "answer": "from collections import defaultdict\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2147483647)\nn = int(input())\nedges = [[] for i in range(n+1)]\nfor k,v in list(map(int,input().split()))[::-1]:\n  edges[k].append(v)\n\n  if len(list(set(edge[0]))) == 1 and len([v] == 0 and k == -1 and (v!= edge[1] or k!= v) or (len(vertices) - 1) == 2 and not (vert[2] and vert[3])) in [0,1], edge_count = 0: v, edge = [], None: [v,None] = None, None = v\nprint(len([edge for edge in edges if edge not in edges[edge]  ]))\n"}, "2081": {"problem_id": 2081, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n  l.append(a[i]*i)\nprint(sum(l))"}, "2082": {"problem_id": 2082, "answer": "n, m = list(map(int, input().split()))\na = []\nfor i in range(m):\n\ta.append([int(input()), i+1]*n)\nprint(sum(a))"}, "2083": {"problem_id": 2083, "answer": ""}, "2084": {"problem_id": 2084, "answer": "n,k = list(map(int,input().split()))\na = [int(i) for i in input()]\nprint(a)"}, "2085": {"problem_id": 2085, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] = b[n-1-i]\nans = 0\nd = {}\nwhile d:\n\n\td[b.pop()] += 1\t\n#print(d,b)\nc = d.get(a[d.index(b)-1],0)\t#c: index of first element of array b\nif d[c] == 0:ans += len(c)\n\n"}, "2086": {"problem_id": 2086, "answer": "n = int(input())\na = list(map(int, input().split()))\ns, f = 0, 0\nfor i in range(n):\n\ts += a[i] * (i - 1) // 2\nif s == n: break\nprint(max(a))"}, "2087": {"problem_id": 2087, "answer": "from sys import stdin, stdout\na,b,c = list(map(int,stdin.readline().split()))\nn = a+b+c-1\nans = 0\nfor i in range(1,n+1):\n ans = (ans + a*b*c)%10\n print(ans)\n"}, "2088": {"problem_id": 2088, "answer": "n = int(input())\nl = list(map(int, input().split()))\nr = []\nfor i in range(n-1):\n\tr.append(l[i]+1)\nprint(' '.join(r))"}, "2089": {"problem_id": 2089, "answer": "n,m,s,t = list(map(int,input().split()))\nu,v = [],[]\nfor i in range(n):\n  u.append(i)\nwhile(len(u)>0 and u[-1].startswith(v[0]):u.pop()[1] = 0) :t+=1\nprint(t)"}, "2090": {"problem_id": 2090, "answer": "n, k = list(map(int, input().split()))\nl = [0] * k\nfor i in range(n):\n\tl[i] = min(l) * (i + 1)\nans = 0\ni = k // 2\nwhile(i >= 0 and k % 2 == 0): ans += (k - i)//2\nprint(ans)"}, "2091": {"problem_id": 2091, "answer": "# cook your dish here\nfrom collections import defaultdict\nfor _ in range(int(input())):\n s = input()\n l = len(s)\n if s[-1] == \"0\":\n  print(\"a\")\n elif s.count(\"0\") == 0:\n\n  for i in reversed(list(range(len(l))))[:l-i-2+1].pop()[0:i+2] + \"b\" :\n"}, "2092": {"problem_id": 2092, "answer": "import sys\ninput = sys.stdin.readline\nm,n,k,t = list(map(int,input().split()))\na = [int(i) for i in input().rstrip('\\n').split(' ')]\nfor _ in range(t):\n\ta.append(a[-1]*k)\nprint(*a)"}, "2093": {"problem_id": 2093, "answer": "n = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n\ta[i+1] = a[n-1-i]\nprint(sum(l))"}, "2094": {"problem_id": 2094, "answer": "n, k = map(int, input().split())\na = []\nfor i in range(n):\n\ta.append([int(x) for x in input()] + [0]*(k-1))\nans = sum(a)\nprint(ans)"}, "2095": {"problem_id": 2095, "answer": "n = int(input())\nmatrix = [[0] * n for _ in range(n)]\nfor i, j in zip(list(map(int, input().split()))):\n  matrix[i][j] = j\nans = []\ndef check(row, col, val):\n\n  if row == 0 or col == n-row-col+1 or row > 0 and col < n - row - col +1: return False\n#  print(col, row, ans[col] + val)\n"}, "2096": {"problem_id": 2096, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * (n + 1)\nfor i in range(n):\n  a[i] += b[-i-1]\nans = a.count(b[0])\nprint(ans)"}, "2097": {"problem_id": 2097, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict, deque\nn = int(input())\na = [int(x) for x in input().split()]\nfor i in range(n):\n\ta.append(a[i]+1)\nprint('\\n'.join(map(str,a)))"}, "2098": {"problem_id": 2098, "answer": "n = int(input())\na = list(map(int, input().split()))\nedges = [0]*n\nfor i in range(1,n):\n  a[i] = max(a[-i], i-a.index(max(0,i-2*i))+1)\nprint('YES\\n' if a.count('.')==n else 'NO')"}, "2099": {"problem_id": 2099, "answer": "n, m, t = list(map(int, input().split()))\np = [[0] * m for _ in range(n)]\nfor i, j in zip(range(m)):\n\tp[i][j] = 1 if i == 0 else int(input()[j % 2]) + j // 2\nans = 0\nwhile p[0][-1]!= 0 and t > 0:\n\n\tx = p.pop(0)[0].pop() + (m - x) * (t - (x - 2) // 3)\n#print(ans, x, y, ans[x])\nprint('\\n'.join([str(x) for x in ans]))\n\n"}, "2100": {"problem_id": 2100, "answer": "n = int(input())\nl = list(map(int, input().split()))\ns = 0.0\nfor i in range(n):\n\ts += l[i]\nprint(s)"}, "2101": {"problem_id": 2101, "answer": "R,G,B = map(int,input().split())\ng = [0]*B\nfor i in range(R):\n  g[i] = (G-1)*(i+1)//2\nc = R*g[R]\nprint(max(c))"}, "2102": {"problem_id": 2102, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\n')\nn = int(input())\nl = list(map(int,input().split()))\nm = []\nfor i in range(n):\n\ta,b = l[i],l[n-i-1]\nif m == m[0] or a > b or b < a: print(-1)\n"}, "2103": {"problem_id": 2103, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = set()\nfor i in range(n):\n  s.add(a[i])\nprint(*s)"}, "2104": {"problem_id": 2104, "answer": "n = int(input())\nl, r = list(map(int, input().split()))\nfor i in range(1, n):\n  if i % 2 == 0: print(\"NO\", end = \" \" * (n - i - 1), \" \".join([str(x) for x in l])))\n"}, "2105": {"problem_id": 2105, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict as dd, deque\ndef inp(): return list(map(int, input().split()))\nsys.setrecursionlimit(100000)\nINF = float('inf')\nmod = 10 ** 9 + 7\ndd = dd.maketrans('abcdefghijklmnopqrstuvwxyz', '0123456789','12345678','abcdelegasdfghjklmf\u00cb\u0144\u0141\u0174\u016c\u0178\u017f\u0175\u0179\u017c\u017d\u017b\u017e' for _ in range(len(inp()) - 1, 0, -1) )\nfor i,s in enumerate(input().rstrip('\\n')): print(s)"}, "2106": {"problem_id": 2106, "answer": "from heapq import heappush,heappop\nm,k = list(map(int,input().split()))\nn = int(input())\nd = [[] for i in range(n-1)]\nfor i,v in enumerate(sorted(v,key=lambda x:x[1],reverse=True)):\n  d[v[i]-1].append(i+1)\nc = [0]*n\ndef dfs(a,b,c,d,s=0,t=1):\n\n  if c[a]==c[b]: return 0\n#   print(d[c].pop(0) + s[t] + a[0])\nans = min(ans,n*k*(t+2)//2 + n*2*s[s] - k*t - (t-s)**2 - ans)\n\n"}, "2107": {"problem_id": 2107, "answer": "n,m,k,s = list(map(int,input().split()))\na = [0]*n\nfor i in range(m):\n\ta[i+1]+=1\nc=0\nd=[[0,0]]\nwhile d[0][-1][0]:d.pop(0)\nif len(d)==0:break\nprint(c)"}, "2108": {"problem_id": 2108, "answer": "n, m = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor i, j in enumerate(list(range(3))::int(input()[:j])) :\n\tif i == j: edges[i].append(j)\nif m == 3: print(\"NO\")\nelse : print('YES')\n"}, "2109": {"problem_id": 2109, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = set(a)\nfor i in range(n):\n\ts.add(i)\n\n\tif s.issubset(s) and a[i] + s[-i - 1] <= 0: break\nprint(0)"}, "2110": {"problem_id": 2110, "answer": "n, h, m, k = list(map(int, input().split()))\na = [0] * n\nfor i in range(k):\n\ta[i] = a[h-i-1] if i % 2 == 0 else min(a)\nprint(0, end=' ')"}, "2111": {"problem_id": 2111, "answer": "n, q = list(map(int, input().split()))\na = [[0] * n for _ in range(q)]\nfor i, c in enumerate(zip(a, a[n - 1]))[::-1]:\n  if c == 'U': a.insert(0, i)\nq = int(input())\nprint(' '.join([str(x) for x in a] + '\\n')))\n"}, "2112": {"problem_id": 2112, "answer": "n,m=list(map(int,input().split()))\na=[int(i) for i in input().strip()]\nb=[input() for _ in range(n)]\nc=[0]*(m+1)\nd={}\nfor i,j in zip(a,b):\n  if i==n:d[i]=j\nans=min(ans,c[0])\nif ans==0:print(0)"}, "2113": {"problem_id": 2113, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n\ta.append(a[i] + a[-i])\nprint(ans)"}, "2114": {"problem_id": 2114, "answer": "from sys import stdin,stdout\nn = int(stdin.readline().strip())\ns = [0]*n\nfor i in range(n):s[i+1] = s[n-i]\nprint(*s)"}, "2115": {"problem_id": 2115, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] += 1\nprint(sum(a))"}, "2116": {"problem_id": 2116, "answer": "n,m,k=list(map(int,input().split()))\na=[0]*n\nfor i in range(n):\n\ta[i]+=int(input())\nt=0\ni=1\nwhile(i<n-1):\n\n\tif(abs(t-i)<=i and a[t]==0): t=t+i\nprint(0)\n"}, "2117": {"problem_id": 2117, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n-1):\n\tb[i+1] = max(b)\nans = 0\nq = []\nwhile(len(q)>0 and a[q[0]]!=0):\n\n\tq.append(a.pop(0) + 1)\n\n\n\n"}, "2118": {"problem_id": 2118, "answer": "n, k = list(map(int, input().split()))\ns = sorted(list(input()), key=lambda x: x[2], reverse=True)\nprint(*s, sep='\\n')\n"}, "2119": {"problem_id": 2119, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict, deque, Counter, OrderedDict, namedtuple, numpy\nmod = 10**9 + 7\nn = int(input())\nl = [int(i) for i in input().rstrip('\\n').split()]\nr = list(map(int,input().split(' ')))\nfor _ in range(l[0]):\n\tr.append(sum(r[-1] + i) % mod)"}, "2120": {"problem_id": 2120, "answer": "n, m = list(map(int, input().split()))\np = [0] * (n + 1)\nfor i in range(n): p[i+1] = min(p[n - i - 1], m) + m\nprint(max(0, n - m))"}, "2121": {"problem_id": 2121, "answer": "n, k = list(map(int, input().split()))\na = [0]\nfor i in range(n-1, 0, -1):\n  a.append(a[i+1] + a[-2*i])\nk -= 1\nprint(k)\n"}, "2122": {"problem_id": 2122, "answer": "n,k = list(map(int,input().split()))\nl = []\nfor i in range(1,n+1):\n\tl.append(i)\nprint(\"\".join(l))"}, "2123": {"problem_id": 2123, "answer": "n = int(input())\na = [0] + list(map(int,input().split()))\nb = []\nfor i in range(n-1):\n  a.append(b[i+1]-a[-i])\nprint(max(a))"}, "2124": {"problem_id": 2124, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nfor i in range(n):\n a.sort()\n if len(a)%2==0 and a[0]==a[-1]:\n  print(\"impossible\")"}, "2125": {"problem_id": 2125, "answer": "import sys\ninput = sys.stdin.readline\nn,m = map(int,input().split())\nl = []\nfor i in range(n):\n\tl.append(list(input()))\ns = [0]*(m+1)\ni = 0\nwhile(i<n-1 and s[i]==0):\n\n\ti+=1\nif(len(s)==m):\ts.pop()\nprint(\"\".join(map(str,s)))"}, "2126": {"problem_id": 2126, "answer": "from sys import stdin, stdout\ninput = lambda:stdin.readline().rstrip('\\r\\n')\n#stdout.write(str(input()))\n"}, "2127": {"problem_id": 2127, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n-1):\n   if a[i] == 0 and b[(i+1)%n]==0:b[1]+=1\nprint('YES' if len(b)==1 else 'NO')"}, "2128": {"problem_id": 2128, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nans = 0\nfor i in range(n):\n  if a[i] == b[(i-n)//100] and i%100==0:ans += 1\nprint(ans)"}, "2129": {"problem_id": 2129, "answer": "t = int(input())\nfor _ in range(t):\n   n, m = list(map(int, input().split()))\n\n  if len(set(m)) == 1 or m == 0 or n == m - 2: print(0)\n"}, "2130": {"problem_id": 2130, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb.append(a[i]^b[-1])\nans = []\nif n%2 == 0: ans.extend([b,b+b')\nprint('Yes', ans)"}, "2131": {"problem_id": 2131, "answer": "n = int(input())\na = [int(x) for x in input().split()]\ns = []\nfor i in range(n-1):\n\ta[i] = list(map(int, str(i)))\n#print(a)\nif len(s) == 0: print('No')\nelse: s.append(0)"}, "2132": {"problem_id": 2132, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = [list(map(int, input().split())) for _ in range(n)]\ns = 0\nfor aa in a[::-1]:\n\ts+=a[aa]\nprint(s)"}, "2133": {"problem_id": 2133, "answer": "from collections import deque\nn = int(input())\nadj = [[] for i in range(n)]\nfor i,j in zip(list(map(int,input().split()),input())) :adj[i].append(j)\nvisited = [False]*n\nwhile len(adj) > 0 :\n\tu,v = adj[u].pop(u.index('u'))[v].split('=')[1]\n\n\tif visited[0] :u = v\nelse:adj.append([u])\nprint('\\n'.join([' ']))"}, "2134": {"problem_id": 2134, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n   b[i] = sum(a[:i])\nprint(sum(b))"}, "2135": {"problem_id": 2135, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**9)\nn, m = map(int, input().split())\ngrid = [[] for i in range(n)]\nfor i, j in zip(range(1, n+1)):\n  grid[i][j] = 0\ndef dfs(i,j,r,c,visited):\n\n  if (i == n-1 or j == 0 or r == 1 or c == 2 or visited[r] == False) and (r == i or i == j): return 0,0,grid[j][r][c].count('.')[0][0] + 1"}, "2136": {"problem_id": 2136, "answer": "t = int(input())\nfor _ in range(t):\n n, m = [int(x) for x in input().split()]\n grid = []\n count = 0\n for i, c in enumerate(grid):\n\n  if c == \"S\":\n   count += 1\n\n print(count)"}, "2137": {"problem_id": 2137, "answer": "from math import sqrt\nn,a,b = list(map(int,input().split()))\nx,V,G,X=[],0,-10**9,0\nfor i in range(n):\n\tx[i]=(sqrt(a+b))/x.pop(0)\nprint('\\n'.join('{}'.format(x)) for x in x)"}, "2138": {"problem_id": 2138, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nedges = list(map(int, input().split()))\ngraph = [[] for _ in range(n+1)]\nfor i, v in enumerate(vertices[1:], 1):\n  graph[v].append(i)\nadj = [0] * n\ndepth = 0\nwhile len(adj) > 10**6: adj.pop(0) + [v] = adj[depth-1]\ndef dfs(v, u, depth, edges, graph, adj_depth=10**9, edge_len=len(edge_list)):  # edge list is sorted by degree (depth) and edge length (edge length)   return edges[u] + edgelist[edgelist.index(u) - depth - 1] - edgeList[i] if depth == 0 else None\nvisited = set([v])\ncurr_edge = -1\nans = [-1 for i in edges if i not in visited or i == vert[0]]\ndfs(graph, 0, 1, visited, ans)"}, "2139": {"problem_id": 2139, "answer": "s = input()\nn = len(s)\nfor i in range(n):\n\tif s[i] == 'bear' or (s[n-i-1] in 'abcdefghijklmnopqrstuvwxyz' and ''.join(c for c in s if c!='') in c.split('bear') or s.startswith('abcd')) or n - i - 1 < n: break\nprint(sum(1 for x in x if x[0] not in n))"}, "2140": {"problem_id": 2140, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n\tif s[i] == 'a' and i % 2 == 0: cnt += 1\nprint(''.join(map(str, s)))"}, "2141": {"problem_id": 2141, "answer": "n = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(n-1,0,-1):\n   a[i] = (l[-i+1] - l[0])*(i)\nprint(sum(a))"}, "2142": {"problem_id": 2142, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn, m = [int(i) for i in input().rstrip().split(' ')][1:].tolist()\n\n\ta = list(map(int,input().strip('0')) + [0] * m))\n\n  \tb = sorted(a,key=lambda x: x[0],reverse=True)[:n-1][0:m-n].index(0)\n#\tprint('YES' if len(b) > 1 else 'NO')\n"}, "2143": {"problem_id": 2143, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\ta[i] = sorted(a, key=lambda x: x[1], reverse=True)\nprint(ans)"}, "2144": {"problem_id": 2144, "answer": "t = int(input())\nfor _ in range(t):\n a,m = map(int,input().split())"}, "2145": {"problem_id": 2145, "answer": "import math\nt=int(input())\nfor _ in range(t):\n\tx,y=list(map(int,input().split()))\n\n\tif x%2==0 and x//2!=y and y%3==1 and (y//3)*(x/2)==y/3 and int(math.sqrt(y))<=1:\n\n \t\tprint(\"YES\")\n "}, "2146": {"problem_id": 2146, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0]*n\nfor i in range(n):\n\tl[i] = min(l)\nprint(*l, sep='\\n')\n"}, "2147": {"problem_id": 2147, "answer": ""}, "2148": {"problem_id": 2148, "answer": "n,r = map(int,input().split())\nx = []\nfor i in range(n):\n  x.append(10**100+i)\ny = x[n-1]\nprint(y)"}, "2149": {"problem_id": 2149, "answer": "import sys\ninput = sys.stdin.readline\nn, k = map(int, input().split())\na = [int(i) for i in input()]\nmod = 998244353\nfor _ in range(n):\n\tk = int(input())\n\n\ta.append(a[k-1] + (k % mod)**(mod - 1))\n"}, "2150": {"problem_id": 2150, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[0]*n\nfor i in range(n):\n\tb[i]=max(b.copy(),0)\nans=0\nwhile(len(a)>0 and b[0]-a[1]-1<=i+1 and a[2]==0):\n\n\tans+=1\nprint(ans)"}, "2151": {"problem_id": 2151, "answer": "q = int(input())\nfor _ in range(q):\n\tn = list(map(int, input().split()))\n\n\ts = [0] * (n+1)\n\n \tfor i, digit in enumerate(bin(n)[2:].split('1'))[2:] : s[i:i+n-2] = str(digit) + '0'\n  "}, "2152": {"problem_id": 2152, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0]*n\nfor i in range(n):\n\ta[i] = (p[-1] + 1) % 1000000007\nprint(max(a))"}, "2153": {"problem_id": 2153, "answer": "n = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(n-1):\n\ta[i+1] = i\n#print(a)\ncnt = 0\nans = []\nwhile(len(l)>0 and a[l[0]]!=0):\n\n\ti = a.pop(0)\n\n \tif(i>=1 and cnt==0 or i<l.index('1')) and (i==1 or l[1]+1==i) and ((i%2 == 0) or (a.count(1) == 1)): ans.append(str(sum(ans[:i]))+'\\n')\nprint(*ans)"}, "2154": {"problem_id": 2154, "answer": "n = int(input())\ns = list(map(int,input().split()))\np = 0\nfor i in range(n-1):\n\tp += s[i]\nprint(p)\n"}, "2155": {"problem_id": 2155, "answer": "t = int(input())\nfor _ in range(t):\n\tn,m = map(int,input().split())\n\n\ta = [int(i) for i in input().rstrip('\\n').split()[:-1] for j in [0,0]][m*n*m+n==m]\n \tprint(-1)"}, "2156": {"problem_id": 2156, "answer": ""}, "2157": {"problem_id": 2157, "answer": "n, q = list(map(int, input().split()))\na = [0] * q\nfor i in range(n):\n  a[i+1] = i\nprint(a[-1])\n"}, "2158": {"problem_id": 2158, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = []\nfor i in range(n-1):\n  a.append(i+1)\nl = [0]*n\nwhile(len(a)>0 and a[l[0]]!=0):l.pop()\nprint(sum(l))"}, "2159": {"problem_id": 2159, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(b[0], b[1]):\n\ta[i] = a[b.index(i)]\n#print(a)\nans = 0\nflag = False\nwhile(flag == False):\n\n\tfor x in a:\n\n \t\tif(x == 1 or x == n-1 or y == 0 or (x+y)%2==0):ans += 1\n\n"}, "2160": {"problem_id": 2160, "answer": "n, k = list(map(int, input().split()))\na = [0]\nb = []\nfor i in range(n):\n\tx = int(input()[:k] + [int(x) - 1 for x in input()])\n\n\ta.append(a[-k + 1:])\n# a.sort(reverse=True)\nc = 0\ni = k\nwhile i <= k:\n\n  \tif a[i] == b[c]:\n  #  print(c, end=' ')\t\t# print('YES' if x == c else 'NO')\n"}, "2161": {"problem_id": 2161, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nprint(n)\n"}, "2162": {"problem_id": 2162, "answer": "from bisect import *\nk,n=list(map(int,input().split()))\nl=[0]*n\nfor i in range(k):\n\tl[i]=int(input())\nans=sum(l)\nprint(len(ans))"}, "2163": {"problem_id": 2163, "answer": "n,m = list(map(int,input().split()))\nl = [0]*n\nfor i in range(1,n):\n\tl.append(l[-1]+(i*(i+1)))\nprint('\\n'.join([str(x) for x in l]))"}, "2164": {"problem_id": 2164, "answer": "for _ in range(int(input())):\n\ta,b=list(map(str,input().split()))\n\n\tif len(set(a))==len(b):print(\"\".join(sorted([a[i] for i in b])))\n"}, "2165": {"problem_id": 2165, "answer": "n,t = list(map(int,input().split()))\na = [int(i) for i in input().strip()]\nb = []\nfor i,j in enumerate(a):\n  b.append(j)\ntemp = a[i]*b[j]/n\nprint(sum(temp)//n)"}, "2166": {"problem_id": 2166, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [1]\nfor i in range(n):\n\tp.append(a[i]*(i+1)%1000000007)\nprint(len(p))"}, "2167": {"problem_id": 2167, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta.append(a[i-1]+1)\nans = 0\ni = n-i\nwhile(i>=0 and i<n - i+1):\n\n\tfor j in a.pop(0,i):ans += a[j]\nprint(ans)"}, "2168": {"problem_id": 2168, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\ta[i] = a.pop(i+1)\nc = [0]*n\nans = 0\nif n%2==0 and a[n-1]<0:ans+=1\nprint(ans)"}, "2169": {"problem_id": 2169, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nfrom heapq import heappush,heappop\ndef LI(): return list(map(int,input().split()[1:])),LI()\nreturn LI()"}, "2170": {"problem_id": 2170, "answer": "def solve(a,b,c,d,e,f,g,h,i):\n  if a==b==c==d==e==f==g==h==i==j==k==l==m==n==s==t==u==v==w==x==y==z:\n\n   return (1<<(i-1)<<j<<k<<l<<u<<v<<w<<x<<y<<z)%1000000000000007\n\n\n\n"}, "2171": {"problem_id": 2171, "answer": "def f(n):\n  return 'yes' if n == 0 else 'no'\nn = int(input())\na = list(map(int, input().split()))\nprint(f(a))"}, "2172": {"problem_id": 2172, "answer": "n, m = map(int, input().split())\na = []\nfor i in range(n):\n\tb = list(input()).split(' ')\n\n\ta.append(b[-1] +'' + b[0])\nprint(''.join(a))"}, "2173": {"problem_id": 2173, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] = b[n-i]\nprint(b)"}, "2174": {"problem_id": 2174, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n)"}, "2175": {"problem_id": 2175, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i+1] += [a[-1]]\nprint(sum(b))"}, "2176": {"problem_id": 2176, "answer": "from sys import stdin, stdout\nn=int(stdin.readline().strip())\ns=list(map(int,input().split()))\nans=['0']*(n+1)\nfor i in range(len(s)):\n\tans[s[i][0]]+=1\nprint(sum(ans))"}, "2177": {"problem_id": 2177, "answer": "t = int(input())\nfor i in range(t):\n a,b=list(map(int,input().split()))\n if b%10==0:print(b//10)\n else:break"}, "2178": {"problem_id": 2178, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i] = b[n-i-1]\nprint(sum(b))"}, "2179": {"problem_id": 2179, "answer": "n, m = list(map(int, input().split()))\ns = [[0] * m for _ in range(n)]\nfor i, j in zip(s, s[::-1]):\n\ts[i].append(j)\nans = []\ni,j = 0,0\nwhile i<n and j!=0:i+=1\nif i%2:ans.append([j,i])\nprint(len(ans))"}, "2180": {"problem_id": 2180, "answer": "n = int(input())\na = [0]*n\nfor i in range(n):\n   a[i+1]+=1\nprint(max(a))"}, "2181": {"problem_id": 2181, "answer": "from sys import stdin,stdout\nn = int(stdin.readline().strip())\nl = list(map(int, stdout.split('\\n')))\ns = [0]*n\nfor i in range(n):\n  s[i] = s.pop(0)\nprint(*s)"}, "2182": {"problem_id": 2182, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nprint('\\n'.join(map(str, a)))\n"}, "2183": {"problem_id": 2183, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(1, n+2):\n  if a[i] == b[-1] and i < n: break\nprint('\\n'.join([str(x) for x in a]))"}, "2184": {"problem_id": 2184, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = ''\nfor i in range(n-1):\n if a[i] == '+':\n  s += str(i) + '*'\n elif s == '' and len(a) > 1: s = a.pop()\nprint(''.join(s))"}, "2185": {"problem_id": 2185, "answer": "t = int(input())\nfor _ in range(t):\n\tn = input().split(' ')[0]\n\n\ts = 0\n \tfor i, x in enumerate(bin(n)[-2::-1]): s = (s + x) % n\n"}, "2186": {"problem_id": 2186, "answer": "n, m = list(map(int, input().split()))\nl = []\nfor i in range(n):\n  l.append(input()[i])\nprint('YES' if l[-1] in l else 'NO')"}, "2187": {"problem_id": 2187, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn, k = list(map(int, input().split()))\n\n\ta = [0] * (k + 1)\n\n \tfor i, j in enumerate(list(range(n)))[:k] + [j, i] : a[i] = j\n#\t\tprint(a)\n"}, "2188": {"problem_id": 2188, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]\nfor i in range(n):\n\ta[i] = a[n - i - 1] + 1 if i % 2 else 0\n#print(a)\nans = []\nd = {i:i for i,i in enumerate(s) if len(i) == 1}\nwhile d[d.get(d, 0)] > 0:\n\n\ti = d.pop(0) #i[0], i[1] is 1 or 0 or -1 or 2 or 3 or 4 or 5 or 6 or 7 or 8 or 9 or 10 or 11 or 12 or 13 or 14 or 15 or 16 or 17 or 18 or 19 or 20 or 21 or 22 or 23 or 24 or 25 or 26 or 27 or 28 or 29 or 30 or 31 or 32 or 33 or 34 or 37 or 38 or 39 or 40 or 41 or 42 or 43 or 44 or 45 or 46 or 47 or 48 or 49 or 50 or 52 or 53 or 54 or 55 or 56 or 57 or 58 or 59 or 60 or 61 or 62 or 63 or 64 or 65 or 69 or 70 or 71 or 72 or 73 or 74 or 75 or 76 or 77 or 78 or 79 or 80 or 81 or 82 or 83 or 84 or 85 or 86 or 89 or 90 or 91 or 92 or 93 or 94 or 95 or 96 or 97 or 98 or 99 or 100 or 101 or 102 or 103 or 104 or 105 or 106 or 107 or 108 or 109 or 110 or 111 or 112 or 113 or 114 or 115 or 116 or 117 or 118 or 119 or 120 or 121 or 123 or 126 or 127 or 128 or 129 or 130 or 131 or 132 or 133 or 134 or 135 or 137 or 138 or 139 or 140 or 141 or 142 or 143 or 144 or145 or 146 or147 or 148 or 149 or 155 or 156 or 157 or 158 or 159 or 160 or 161 or162 or 163 or 164 or 165 or 166 or 167 or 168 or 169 or 170 or 172 or 173 or 175 or 176 or 177 or 178 or 179 or 180 or 181 or 182 or 183 or 184 or 185 or 186 or 187 or 188 or 189 or 193 or 196 or 197 or 198 or 199 orbyn or bkb or czbefor or czbyd or dbye or zbyc or kczbef or mdbyf or mbyz or nbyzer or pbyer or qbyn or rbyter or rcbyt or tcbyr or tbytr or ccbynt or scbyts or srbytt or trbyurt or sbyat or tvbyte or chubret or bybynor,bynat,bkzbir or akbir,bcjfr or bcjffr,bmfrit,boer,bjrfbrit or biirr,biirbritish or brtish,blishishi or blishf,beishif or boisif,berishil or beishin,bsihishit or hiishini or hishisis or liishinn or lishmi or miishl or LishN or NishM or MishS or SishC or CishD or DishE or EishR or RishF or CRishG or SGishH or GishJ or JishI or HishII or IishK or KishL or MiishW or WishZ or Zish\ufffd or MoishX or XishY or YishThere is a good puzzle in this problem."}, "2189": {"problem_id": 2189, "answer": "from collections import deque\nn,m = list(map(int,input().split()))\ngraph = [[] for i in range(n)]\nfor i,j in enumerate(range(1,n-1)):\n  graph[i].append(j)\nans = [0]*n\ndef dfs(u,v,graph,ans,i=0,l=len(graph[u]),j=l,k=1):#l=[i,u]\nvisited = set()\nwhile i+k<n and j+l<m and k+j<k and l+i<=n:pass\nprint('\\n'.join(ans))"}, "2190": {"problem_id": 2190, "answer": "n,k = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(k):\n  a.append(a[-1]+int(i*i) + a[i])\nans = 0\ni = n-2\nwhile i >= 0 and i%2 == 0:\n\n  ans = (ans + (i-i+2)//2)*i\nprint(ans)"}, "2191": {"problem_id": 2191, "answer": "n = int(input())\ns=input()\na = list(map(int,input().split()))\nb = [0]*n\nfor i in range(n-1,0,-1):\n  a.append(a[i]-1)\nif a[0]+1<=n and b[n+1]==0:print('1',b[1])\n"}, "2192": {"problem_id": 2192, "answer": "n = int(input())\nmatrix = []\nfor i in range(n):\n  matrix.append(list(map(int, input().split())))\nm = [[0] * n for _ in [0, 0] if n % 2 == 1]\nwhile len(m) > 0 and m[-1] == 0: m.pop(0)\nprint(\"\".join(str(x) for x in m))\n"}, "2193": {"problem_id": 2193, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\nedges = [[] for i in range(m)]\nfor i, x in enumerate(input().rstrip('\\n')) : edges[x].append(i)\nans = [-1] * m\nvisited = set()\ncnt = [0]*m\ndef dfs(node, color) :\n  if color == 0 or node == 1 : visited.add(color) ; ans[node] = -1 ; cnt[color] += 1 ; node = 2\ndfs(1, 0)"}, "2194": {"problem_id": 2194, "answer": "import sys\ninput = sys.stdin.readline\nn, q = list(map(int, input().split()))\na = [int(input()) for _ in range(q)]\nfor i, x in enumerate(a, 1):\n  a[i] = x\nans = \" \".join(reversed(sorted(set([x]*2))))\nprint(ans)\n"}, "2195": {"problem_id": 2195, "answer": "for _ in range(int(input())):\n  a, b = list(map(float, input().split()))\n\tif a + b == 0 and b * a == b: print(a)\n"}, "2196": {"problem_id": 2196, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a))"}, "2197": {"problem_id": 2197, "answer": "n,x=map(int,input().split())\np=[]\nfor i in range(n):\n\tp.append(x+1)\nif(p[0]+1<=n and p[n-1]-1>=x*(2*i-x)):\n\n\tprint(\"%.6f\"%(sum(sorted([x,i] for i,s)in list(range(-1,0,-1)))))\n\n"}, "2198": {"problem_id": 2198, "answer": "n,m = list(map(int,input().split()))\ns = input()\ncnt = 0\nfor i in range(m):\n  if s[i]=='.': cnt += 1\nans = n-i+1 \nprint(ans)\n"}, "2199": {"problem_id": 2199, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\ns = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n):\n\tans[s[i]] = i\nprint(*ans)"}, "2200": {"problem_id": 2200, "answer": "n,a,b = list(map(int,input().split()))\ns = [0]*(n+1)\nfor i in range(b):s[i]+=a\nprint(sum(s))"}, "2201": {"problem_id": 2201, "answer": "d,n,m=list(map(int,input().split()))\nlst=[]\nfor i in range(m):\n  lst.append((d-i)//(i+1)*m)\nans=d*m\nprint(ans)"}, "2202": {"problem_id": 2202, "answer": "n, p = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += pow(2, i)\nprint(s)"}, "2203": {"problem_id": 2203, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 5)\nfrom collections import deque, Counter, OrderedDict,defaultdict,bisect,itemgetter import bisect\nINF = float(\"inf\")\nmod = 10 ** 9 + 7\ndef LI(): return [int(x) for x in input().rstrip('\\n').split(' ')]; return list(map(int,input().split(__import__('itertools')))[0])[1];def LIR(n):return [0]*n for _ in range(1<<n);li = LI()[n-1]\nli.sort(key=lambda x:x[2] + x[3], reverse=True);su = [i for i in li if i!=su[i]]\nprint('Yes' if sum(su)%mod else 'No')"}, "2204": {"problem_id": 2204, "answer": "for _ in range(int(input())):\n\tn, m = list(map( int, input().split() ) )\n\n\ta = [ 0] * (m+1 )\n  \tfor i, val in enumerate(zip(range(1, n), [0]*(m-1))): a[i] += val * val + m*i\n#\tprint(a)\ndef add(x, y): return x + y if x < 0 else x\n\ndef get_sum(l, r, c, d, e, f, g, h, w, u, v, p, q, s, t, z, x):  # print(f,g,h,w,u,v,p,q,s,t,z,x[0][0], y[1][1], x[2][2],y[3][3])\n\n  if (l == r == c == d == e == f == g == h == w == u == v == p == q == s == t == z == x) : return y\n"}, "2205": {"problem_id": 2205, "answer": "n = int(input())\np = [0] + list(map(int, input().split()))\nq = []\nfor i in range(n):\n\tp[i] ^= 1 << (i << 1);\nprint(q[0])"}, "2206": {"problem_id": 2206, "answer": "n = int(input())\na = list(map(int,input().split()))\nd = {}\nfor i in range(n):\n  d[i] = str(i)\nprint(d[n])"}, "2207": {"problem_id": 2207, "answer": "R,C = list(map(int,input().split()))\nprint(2)\nfor i in range(R-1):\n  print(i+1)"}, "2208": {"problem_id": 2208, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in a:b[i] += i\nprint(max(b))"}, "2209": {"problem_id": 2209, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = [int(x) for x in input().split()]\nl = []\nfor i in range(n):\n   l.append(a[i] + a[-i-1])\nprint(max(l))"}, "2210": {"problem_id": 2210, "answer": "for _ in range(int(input())):\n\tn, x = list(map(str, input().split()))\n \tif x % 2 == 0 and x // 2 in [1, 2] and (n - x - 1) * (x - 2) <= x:\n\n\t\tprint('ayush', x, end=' ')\n\n"}, "2211": {"problem_id": 2211, "answer": "s = list(input())\nd = dict()\nfor i in range(0, len(s)):\n  d[s[i]].append(i+1)\nans = []\ncnt = [0]*(len(d.keys()))\nflag = True\nwhile cnt[-1]>0 and d.dict()[d[c[0]]]<=s.count('1') and flag==True:\n\n  for j,x in enumerate(c.items(),1<<(ord(x) - ord('a')-ord('b')))[1:]:\n\tif x=='1':\n\n\t\tans.append(''.join(list(map(str, x))) for x in 'abcdefghijklmnopqrstuvwxyz'))\n\n"}, "2212": {"problem_id": 2212, "answer": "n = int(input())\nr = list(map(int, input().split()))\nprint(\"%d %d\" % (n, r[n]))"}, "2213": {"problem_id": 2213, "answer": "n,m,k = list(map(int,input().split()))\ns = []\nfor i in range(n):\n\ts.append([int(x) for x in str(i)])\nprint('\\n'.join(s))"}, "2214": {"problem_id": 2214, "answer": "n, m = list(map(int, input().split()))\na = [0] * m\nfor i in range(m):\n\ta[i] += 1\nprint(min(a))"}, "2215": {"problem_id": 2215, "answer": "n,m = map(int,input().split())\nl = []\nfor i in range(n):\n   l.append(list(input()))\nr = [0]*(m+1)\ns = 0\nc = m\nwhile(len(l)>0 and len(r)<m) :\n\ts+=l[-1]\nprint(s)"}, "2216": {"problem_id": 2216, "answer": "n,m,k=list(map(int,input().split()))\nl=[0]*n\nfor i in range(n):\n\tl[i]=1 if i>0 else l[-i-1]\nr,c=0,0\na=[]\nb=[[] for _ in [0]]\nc[0]=k\nwhile(len(a)>1):\n\n\tx=a.pop(0)\n \ty=(a[x]-x)//(k-x+1)\t\t# (k+2)*(2*k + 2) = k + k*(1+k) + (y-y +1)*x + y*y - 2*x - k -1\n#\tr=r+c+b\nprint(r)\n\n"}, "2217": {"problem_id": 2217, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9 + 7\nfrom math import ceil, floor, pow, factorial, mod, atan, gcd, islice, heappop, sum\npow = lambda x: int(x) - (x % MOD)\nmod = pow(10, 7) + mod\ndef isprime(n):\n if n <= 2 or n == 3: return False\n for i in range(5, n + 1, 5): return True\n while (n % mod)!= 0: n //= mod: pow(ceil(floor(i * n), mod), pows(mod, i)) %= MOD\n print(str(int(input())))\n"}, "2218": {"problem_id": 2218, "answer": "n,k = list(map(int,input().split()))\na = [0]*n\nfor i in range(k):\n\ta[i+1] = i\nprint(a)\n"}, "2219": {"problem_id": 2219, "answer": "import math\nt = int(input())\nfor i in range(t):\n  n, k = list(map(int, input().split()))\n\n  if n % k == 0 and math.floor(math.sqrt(n / k) + 1) <= k and n // k!= 0 or n > k // (k - 1), n = n - k\n"}, "2220": {"problem_id": 2220, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n-1):\n  if (a[i] == 1) and (i+1) == n-i: ans.append(i)\nprint(max(ans))"}, "2221": {"problem_id": 2221, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nfrom collections import deque,defaultdict,Counter\nn = int(input())\nx = list(map(int, input().split()))\ny = [int(x[i]) for i in range(n)]\ns = input() + x + y\nprint(len(s))"}, "2222": {"problem_id": 2222, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(0,n):\n\tif a[i]==0: a.append(i-b[0])\nprint(len(a))"}, "2223": {"problem_id": 2223, "answer": "n = int(input())\na = list(map(int,input().split()))\nfor i in range(1,n):\n  a.append(i)\nprint(max(a))"}, "2224": {"problem_id": 2224, "answer": "n,m,d = list(map(int,input().split()))\np = [0]*(n+1)\nfor i in range(m):\n\tp[i] = int(input())\nans = 0\nvisited = set()\nwhile(len(p)>0 and p[-1]!=0):\n\n\tfor j in p.pop(0,0) and (j not in visited or visited.add(j) or j==(i-2)): ans += j\nprint(ans)"}, "2225": {"problem_id": 2225, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 1)\nq = []\nfor i in range(m):\n\tx = a[i]\n\n\tif x == 0: q.append(i + q[q.index(x)])\nelse: print(0)"}, "2226": {"problem_id": 2226, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,m,q = list(map(int,input().split()))\ngraph = [[] for i in range(m)]\nfor i,(u,v) in enumerate(input(),1):\n\tgraph[u].append([v,i])\n#print(graph)\nnum = [0]*q\nflag = 0\nwhile num[-1]!=num[0]:num.pop(0)\n\n\tfor u in graph[v]:flag=1 if flag==0 else flag\n \tif len(num)%2==1:num1+=num2\nprint((n*(n-2))%m)"}, "2227": {"problem_id": 2227, "answer": "#!/usr/bin/env\tpython\nimport sys\nsys.setrecursionlimit(10**6)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nprint(input())"}, "2228": {"problem_id": 2228, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0] * (n + 1)\nfor i in range(n):\n\tb[i] = b[n - i - 1] + (1 if i % 2 == 0 else 0) * a[-1]\nprint(b)"}, "2229": {"problem_id": 2229, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb.append(a[i]+b[-1])\nprint(' '.join([str(x) for x in b]))"}, "2230": {"problem_id": 2230, "answer": "n = int(input())\ns = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tif s[i] % 2 == 0: ans += 1\nprint(ans)"}, "2231": {"problem_id": 2231, "answer": "from math import factorial as fact\nimport numpy as np\nfor _ in range(int(input())):\n  n, t = list(map( int, input().split() ) )\n\n  if n == 4: print( fact(t) * (t - 4) )\n"}, "2232": {"problem_id": 2232, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n-1):\n\ta.append(a[i+1] if i else 0)\nres = [0]*n\ndef dfs(u,v,a,b,c,d,e,f,g,h,w,x,y,z):\n\n\tif u==v==w==x==y==z==g==h==u==c==d==e==f and u!=v and v!=-1 and a!=[0 for _ in b] and b!=(c) or a[u]==0 or b[v] == 0 or x==1 or y==2 and z==3 and c==4 and d==6 and e==7 and f==8 and g==9 and h==10 and w==11 and x=0 and y=1 for x in a:print(x)"}, "2233": {"problem_id": 2233, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nfrom collections import defaultdict\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n  s = input()[:i]+a[i:][::-1]\nprint(\"Yes\")\n"}, "2234": {"problem_id": 2234, "answer": "t = int(input())\nfor _ in range(t):\n\tn,k = list(map(int,input().split()))\n\n\tif k==0:print(('0'*(n-1)//2)+'\\n')"}, "2235": {"problem_id": 2235, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n\tb.append(a[i]+b[-i-1])\nprint(*b)"}, "2236": {"problem_id": 2236, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(1, n+2):\n\ta[i] = a[n-i-2] if i%2 else 0\n\n\tb[a.index(max(a))] += 1\nprint(sum(b))"}, "2237": {"problem_id": 2237, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = [0]*n\nfor i in range(n-1):\n\tans[i] = max(2*i,1)\nprint(max(ans))"}, "2238": {"problem_id": 2238, "answer": "n = int(input())\nmatrix = '*' * n\nfor i in range(1, n + 1):\n  matrix[i] = input()\nprint(''.join(map(str, matrix)))"}, "2239": {"problem_id": 2239, "answer": "import math\nt = int(input())\nfor _ in range(t):\n\ta,b = list(map(int,input().split()))\n\n\tx = math.floor(math.log2(a+b+1)//(2*a-b-1))\n \tprint(x)\n"}, "2240": {"problem_id": 2240, "answer": "s = input()\nt = list(s)\nfor i in range(len(t)):\n\tif t[i] in '0123456789abcdef': t.append(int(input()))\nprint('\\n'.join(map(str, t)))"}, "2241": {"problem_id": 2241, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[i] += 1\nans = sum(b)\nprint(ans)"}, "2242": {"problem_id": 2242, "answer": "def isPairs(s):\n count = 0\n for i in range(2,int(input())): \n  if s[i] == '0': count += 1\n return count\ns = input()\nprint((2*(count+1)//10))\n"}, "2243": {"problem_id": 2243, "answer": "n,k,q = list(map(int,input().split()))\nt = [int(x) for x in str(input())]\nfor i in range(n):\n\tt.append(t[-1] + t[i])\nprint(\"YES\")\n"}, "2244": {"problem_id": 2244, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n+1)\nfor i in range(m):\n\ta[i] += a[n-i-1]\nans = []\ni = 0\nwhile(i<n and i>=0 and n%2==0):\n\n\tans.append([i,0,n//2+i])\nprint(*ans)"}, "2245": {"problem_id": 2245, "answer": "T = int(input())\nfor _ in range(T):\n   N, K = list(map(int, input().split()))\n\n  if K == N: print(\"Alice\")\nelse:  print('Bob')\n"}, "2246": {"problem_id": 2246, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n-1):\n  a.append(b[i] + a[-i])\nprint(sum(a))"}, "2247": {"problem_id": 2247, "answer": "t = int(input())\nfor i in range(t):\n  s = list(map(int,input().split()))[:2]\n\n  a = s[0]*(s[1]-1)//2*s.index(max(a,0)) + a[-1] * s.pop(0)\n"}, "2248": {"problem_id": 2248, "answer": "n,m = list(map(int,input().split()))\na,b = [],[]\nfor i in range(n):\n\ta.append(list(input()[i:i+m])+[a[-1]])\nprint(max(a))"}, "2249": {"problem_id": 2249, "answer": "from sys import stdin, stdout\nimport math\nn = int(stdin.readline())\na = [int(x) - 1 for x in input().split()]\nm = 10 ** 9 + 7\nans = 0\nfor i in range(n):\n\ta[i] = a[n - i + 1] + m\nprint(ans)\n"}, "2250": {"problem_id": 2250, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn=int( input() )\n\n\ts=input().rstrip('\\r\\n')[::-1]\n\n \tif len(s)%2==0 and s[0]!=s[1]+1: print(0)\n"}, "2251": {"problem_id": 2251, "answer": "n, m = list(map(int, input().split()))\ngraph = [[] for _ in range(n)]\nfor i in reversed(range(1, n + 1)):\n\tgraph[i] = [0] * m\n#print(graph)\nq = int(input())\nvisited = set()\nwhile q > 0 and q - q[0][1] < n: q = q // 2 + (q % 2 == 0)\n\n\tif visited & graph[q][q - 1][2] and (n - visited) not in visited: visited.add(q, q, 0, -1) #print('q', n, 'n','m')\n \telse: visited |= set([n])\nprint(\"\\n\", end = \" \")"}, "2252": {"problem_id": 2252, "answer": "n,m = list(map(int,input().split()))\na = []\nfor i in range(m):\n\ta.append([int(x) for x in input()])\nprint('Yes' if a[i][0] == 1 else 'No')\n"}, "2253": {"problem_id": 2253, "answer": "t = int(input())\nfor _ in range(t):\n\ts = input()\n\n\tif s[0] == 'po' and len(s) > 3: print('filipino', 'japantas', '.korean', sep = '\\n'.join(map(str, s)))\n"}, "2254": {"problem_id": 2254, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]\nfor i in range(n):\n\ts.append(s[-1]^a[i])\nprint(len(a))"}, "2255": {"problem_id": 2255, "answer": "import sys\ninput = sys.stdin.readline\nn,m = list(map(int,input().split()))\nedges = [[] for i in range(n)]\nfor i,j in enumerate(range(1)):\n  edges[i].append(j)\nvisited = [False]*n\ndef dfs(u,v,vis):\n\n  if visited[u]==False:\n\n\tif vis[v] and u not in visited or u!=v and v<v[0]:\n\t\tdfs(v+1,[u-1],vis)\n\n"}, "2256": {"problem_id": 2256, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n  n,x,a,b = list(map(int,input().split()))\n\n  if (n == x) and (a == b) or (x == 1 and b == 0):\n\n\tprint(max(abs(n-x),a-b))\n"}, "2257": {"problem_id": 2257, "answer": "n,x_a,y_b = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n\ts[i+1] = min(s)\nprint(max(0,s))"}, "2258": {"problem_id": 2258, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(len(a)):\n  if a[i]>=i: ans.append(0)\nprint(ans[0])"}, "2259": {"problem_id": 2259, "answer": "from collections import defaultdict, deque\nn = int(input())\na = list(map(int, input().split()))\nb = [set() for _ in range(n)]\nfor i, x in enumerate(a):\n\tb[x].add(i+1)\nans = []\nvisited = set()\nwhile b[-1] in b and len(b) < n:  # \u957f\u5ea6\u6392\u5217\uff0c\u53ef\u4ee5\u8ba1\u7b97\u6570\u636e\u7684\u7ed3\u679c\u4e3a\u6700\u540e\u4e00\u4e2a\u89e3\u51b3\u65b9\u5f62\u5f3a\u764c\u3002\n\n\tif visited & set(): ans.append([b.pop()])\nprint(len(ans))"}, "2260": {"problem_id": 2260, "answer": "n = int(input())\nprint(5)\n"}, "2261": {"problem_id": 2261, "answer": "from sys import stdin, stdout\nn = int(stdin.readline())\na = [[0] * n for _ in range(n)]\nfor i, x in enumerate(sorted(a)):\n  a[i][x] = x\nans = []\ndef check(x, y, is_valid=True, valid=False, curr=0, res=-1): \n if x == -1 or y == +1: return False\n elif x!= y: ans.append((x-1) * y)\n else: res = res * (y - x) // 2\n for i in ans: print(i)"}, "2262": {"problem_id": 2262, "answer": "n = int(input())\ns = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n\tif s[i] in s: cnt += 1\n#print(s)\nprint()\n"}, "2263": {"problem_id": 2263, "answer": ""}, "2264": {"problem_id": 2264, "answer": "for _ in range(int(input())):\n\tn, l, r = list(map( int, input().split() ))\n\n\ta = [0] * (n + 1)\n\n  \tfor i, x in enumerate(l): a[x + i] = min(a[i], x + l[-i - 1]) + r - x\n "}, "2265": {"problem_id": 2265, "answer": "from sys import stdin,stdout\ninput=stdin.readline\ns=input().strip()\nfor i in range(len(s)):\n  a,b=s[i].split('0')\nprint(int(a))"}, "2266": {"problem_id": 2266, "answer": "n,k,d = map(int,input().split())\np = [int(x) for x in input()]\nq = []\nfor i in range(n-1):\n\tp[i] = q.append(i+d)\nprint(max(p))"}, "2267": {"problem_id": 2267, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = ''\nfor i in range(0, n):\n  s += a[i]\nprint(s)\n"}, "2268": {"problem_id": 2268, "answer": "n,m=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append([int(x) for x in input()])\nprint('\\n'.join(l))"}, "2269": {"problem_id": 2269, "answer": "for _ in range(int(input())):\n s = input()\n n = len(s)\n if s[0] == '1':\n  print(n-1)"}, "2270": {"problem_id": 2270, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nfor i in range(n):\n\ta[i] = list(map(int, input()))\nprint('YES' if a[0] == 1 else 'NO')"}, "2271": {"problem_id": 2271, "answer": "n = int(input())\na = [list(map(int, input().split())) for i in range(n)]\nprint(a[0])"}, "2272": {"problem_id": 2272, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nb = []\nfor i in range(n):\n  a[i] = b.pop(0)\nans = 0\nwhile(a[b.index(max(b) - 1) + 1]!= b[0]):\n\n  ans += 1\nprint('YES' if ans else 'NO')"}, "2273": {"problem_id": 2273, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\ngraph = [[] for i in range(m)]\nfor i, j in enumerate(zip(range(1, n+1), [0]*m)):\n  graph[i].append(j)\nedges = []\nvisited = set()\ndef dfs(node, visited, parent, v):\n\n  if parent[node] == -1 or node not in visited or v == 1 or visited == set(graph[v][1]): return False\n#   visited.add(nei)  # same node as nei, so there's no path to node with same parent\nv = [node for node in graph if node!= node]\ndfs(0, [])\nif not visited: return True\nans = [-1 if visited else 1 for visited in v]\n\n"}, "2274": {"problem_id": 2274, "answer": "for _ in range(int(input())):\n   a,b=map(str,input().split())\n\tif a=='R' and b!='C':print(0)\n"}, "2275": {"problem_id": 2275, "answer": "t = int(input())\nfor _ in range(t):\n\ts = input()\n\n\ta = [0] * (len(s) + 1)\n \tfor i, c in enumerate(list(map(int, s.split())))[1::-1]: a[i] = c\n"}, "2276": {"problem_id": 2276, "answer": "n = int(input())\ns = input()\na = list(map(int, s.split()))\nc = 0\nfor i in range(len(a)):\n\tc += a[i]\nprint(c)\n"}, "2277": {"problem_id": 2277, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n   ans += a[i]\nprint(ans)"}, "2278": {"problem_id": 2278, "answer": "import math\nq = int(input())\nfor _ in range(q):\n\ta,b,m = list(map(int,input().split()))\n\n\tif m*(m+1)/2 > a*b*m: print(-1)"}, "2279": {"problem_id": 2279, "answer": "n = int(input())\nl = list(map(int, input().split()))\ns = []\nfor i in range(n):\n\ts.append(0)\nc = s[n-1]\nwhile(len(s)>0):\n\n\tif(l[s[c]] == 0 or l[0] == len(c) -1 or (c[-2]!= 0 and l.count(1) == 1)) and s.pop() and c.popleft() : c = c[:c] + 1\nprint('\\n'.join(''for c in l for l in s) +'' + l)"}, "2280": {"problem_id": 2280, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nl = list(map(int,input().split()))\ns = [0]\nfor i in range(n):\n\tl.append(s[-1]+i)\n#print(l,s,l[0])\nans = 0\nwhile(len(ans)>0 and ans < n-2*n+2:ans+=1):ans += 1\nprint(*l)"}, "2281": {"problem_id": 2281, "answer": "n = int(input())\na = list(map(int,input().split()))\nsums = []\nfor i in range(1,n+1):\n  sums.append(a[i]-i)\nans = sum(sum(x-y) for x,y in zip(list(range(i-1),i),a+[1:]))**0.5\nprint(ans)"}, "2282": {"problem_id": 2282, "answer": "n = int(input())\ns = input()\na = list(map(int, input().split()))\nc = []\nfor i in range(len(s)):\n  if s[i] == \"R\": c.append(i)\nprint(sum(c))"}, "2283": {"problem_id": 2283, "answer": "n, m = list(map(int, input().split()))\ngraph = [[] for _ in range(n + 1)]\nfor i, x in enumerate(zip(list(range(m)), [0] * n)):\n\tgraph[x].append(i)\nvisited = set()\nmax_weight = 0\nwhile len(graph) > 0:\n\n\tv = graph[-1].pop(0) + sum(v[1:i]) * (n - i - 1 - v[0]) + max(sum(u) for u in v for v in u[i] if v else 0)\n\n  \tif v == i: break\n#  print(\\\"max weight: \\\", v, \\\"weight:\\\")\nans = n + m + (v == 0 or v!= i or i!= n or visited.add((v, i)))\nprint(ans)"}, "2284": {"problem_id": 2284, "answer": "n, k = list(map(int, input().split()))\na = [0] * n\nb = []\nfor i in range(n):\n\tb.append(a[i]+b[-1]*k)\nprint(sum(b))"}, "2285": {"problem_id": 2285, "answer": "n = int(input())\narr = list(map(int, input().split()))\ns = ''\nfor i in range(n):\n\ts += arr[i]\nprint(s[::-1])"}, "2286": {"problem_id": 2286, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nprint(len(a))"}, "2287": {"problem_id": 2287, "answer": "t = int(input())\nfor _ in range(t):\n\ts = input()\n\n\tl = len(s) - 1\n \tr = 0\n#   print(l,r)\ncnt = [0] * (l + 1)\n\n  for i, c in enumerate(list(map(int, s.split())))[::-1][1:] :\n{'1','0','1'} = c\n"}, "2288": {"problem_id": 2288, "answer": "t = int(input())\nfor _ in range(t):\n   n =int(stdin.readline().split(' ')[-1])[:2]\n\n  arr = list(map(int, std.txt.split(', ')))[n-2::n].pop(0) + [0] * (n - 1)\n"}, "2289": {"problem_id": 2289, "answer": "n,q = list(map(int, input().split()))\na = [int(i) for i in input()]\nk = a.index(a[0])\ns = 0\nfor _ in range(q):\n\tk += a[k] - (k - 1) // 2\nprint(k)\n"}, "2290": {"problem_id": 2290, "answer": "from sys import stdin\nn,m=list(map(int,stdin.readline().strip().split()))\nedges=set()\nfor i in range(m):\n   a,b,c,d=[],0,0,[],False,True,False]\nadj=[]\nwhile(len(adj)): adj.append(i)\ni=i.rfind('0')\nans=0\nflag=False\nif(n==1 and adj[i][0]==i[0]: flag=True) and (i in adj and i!=n): ans+=i\nprint(ans)"}, "2291": {"problem_id": 2291, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += a[i]\nprint(ans)"}, "2292": {"problem_id": 2292, "answer": "t = int(input())\nfor _ in range(t):\n\tn, m = map(int, input().split())\n\n\ta = list(map(lambda x: x%m, [0]*(m-1))); b = sorted(a); k = len(b) - 1; i = 0; j = k; while i < m and j < k: i += k * 2;j -= k*2; if i == 0: j += m; else: b[i % m] = (i + 1) * (m - i) // 2 + (j - j); print('Yes')"}, "2293": {"problem_id": 2293, "answer": "m, n = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(m):\n\ts[i] = int(input())\nif s[n - 1] == 1: print('imp possible')\nelse: s.append(s.pop(0))"}, "2294": {"problem_id": 2294, "answer": "n = int(input())\na = [int(x) for x in input().split()]\ns = set()\nfor i in range(n):\n\ts.add(a[i])\nans = 0\nif len(s) == 0 or s[0] == a[-1] or (n - s.pop() - 1) % 2 == 1 or n - (s[n + 1] - 2) // 2 in s: print(0)\nprint(ans)"}, "2295": {"problem_id": 2295, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tl, r = divmod(a[i], a[n-i-1]) if i % 2 == 0 else 0, l + r\nprint(ans)"}, "2296": {"problem_id": 2296, "answer": "n,q = list(map(int,input().split()))\na = []\nfor _ in range(n):\n  x,y,z = map(str, input().rstrip('\\n'))\n\n  a.append(z)\nprint(*a)"}, "2297": {"problem_id": 2297, "answer": "q = int(input())\nfor _ in range(q):\n  l, r = map(int, input().split())\n\n  a = [0] + list(map(str, zip(*[int(x) for x in str(l) if x == '0']))) + [r]\n"}, "2298": {"problem_id": 2298, "answer": "t=int(input())\nfor i in range(t):\n\ta,b,q=list(map(int,input().split()))\n\n\tif(b%a==0 and b%b!=0) and (a+b//a*b)%q==q:print(q)\n"}, "2299": {"problem_id": 2299, "answer": "n, m = list(map(int, input().split()))\na = [0] * n\nfor i in range(n):\n  a[i] = 1 if i == 1 else -1\nb = []\nc = 0\nd = m\ne = n * m + m * (n-1)\nif d % 2 == 0 and b == [] or c == n or e == m or d > 1: print('Yes')\nelse: c += d\nprint('No')"}, "2300": {"problem_id": 2300, "answer": "n,m = list(map(int,input().split()))\na = [0]*3\nfor i in range(n):\n\ta[i+1]+=1\nans = sum(a)\nif m==0:ans=0\nprint(ans)"}, "2301": {"problem_id": 2301, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "2302": {"problem_id": 2302, "answer": ""}, "2303": {"problem_id": 2303, "answer": "from collections import OrderedDict\n class Solution(object):\n\n  # def traverse(s, l, r, i, j, k, a, b, c, d, e, f, g, h, w, x, y, z, q, u, v, m, n, o, p,q,u,v,w,x,y,z,d,e,f,g,h,k,l,r,i,j,m,n,o,p,a,b,c,D,E,F,G,H,W,X,Y,Z,Q,U,V,M,N,O,P,A,B,C,L,R,I,J,K,S,XL,XY,ZZ,MM,NN,OO,PP,OU,RB,UL,RL,IL,PI,PR,SP,SU,UE,UU,UG,ZA,BA,BB,AC,BC,CC,ED,FB,CCC,TT,BF,CD,GH,LE,GU,HI,MN,NY,MU,OM,NW,CA,MC,SE,SG,KS,SH,SK,T,UT,SY,TH,ST,UR,US, W, X, Y, Z, S, V, M, N, O, P, Q, U, L, R, I, J, K, C, D, E, F, G, H, XL, LE, GU, HI, MN, NY, IL, MO, ND, OH, OL, PR, SP, SU, UL, SY,urt,uu,sv,ug,za,bb,bc,cc,dc,fd,fg,hh,jj,mm,nn,oo,pd,gh,le,lu,pl,rr,is,ri,pi,rs,sl,ti,sb,st,tt,su,sw,xc,xb,cd,dh,dx,dy,uc,mc,se,sg,gl,hi,mn,mi,os,pa,mr,ss,uo,pm,ue,ro,ua,vg,tn, Explanatory notes\n"}, "2304": {"problem_id": 2304, "answer": "n, m = list(map(int, input().split()))\nl, r, d = [], []\nfor i in range(n):\n  x, y, z, u, v = n, 0, 10 ** 9, len(l), l[0] - m, -1 << (n - i + 1) if i % 2 == 0 else i // 2, i - (i - l) * (l[i] * d) - d * m\nprint('Yes' if x == y == z == u == v else 'No')"}, "2305": {"problem_id": 2305, "answer": "from collections import deque\nimport sys\nsys.setrecursionlimit(10**6)\ndef I(): return int(__import__(\"math\").ceil(math.log2(n)) / (n + 1))\n#def MI():return list(map(int, sys.stdin.readline().split()))#n=int(input())\nINF = float('inf')\nMOD = 10**9+7\nn = I()\nC = [0]*n\nfor _ in range(C[n]):\n\ta, b = MI()\n\n\tif a == b: continue\n \tc, d = (a+b) % MOD, (b+a)%MOD\nans = 0\nwhile(len(ans) > 0 and ans < n): ans += (ANS[ans])\nprint('\\n'.join([str(x) for x in ans]))"}, "2306": {"problem_id": 2306, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  s += a[i]\nprint(s)"}, "2307": {"problem_id": 2307, "answer": ""}, "2308": {"problem_id": 2308, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nfor _ in range(int(input())):\n\tx,y=map( int,input().split())\n \ts=list( map( string,x.split() ) )[ -1]\n\n\tif len(set(s) )==1 and s[0]==s[-1][0]:\n#\t\tprint( \" \".join( ''.join([str(i) for i in s])) )"}, "2309": {"problem_id": 2309, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(3*(n-1))"}, "2310": {"problem_id": 2310, "answer": ""}, "2311": {"problem_id": 2311, "answer": "import sys\ninput=sys.stdin.readline\nn,m,k=list(map(int,input().split()))\na=[[int(x) for x in input()] for i in range(n)]\nb=[0]*m\nfor i,j in zip(b,a[::-1]):\n\tif a[i][j]!=0 and b[j][i]==1 and i>=j and j<m and k>b[:i]+k and (j==i or i==j)and (k==m or k==n and m<=k)or(i>j or j>m)else\nprint(4)\n"}, "2312": {"problem_id": 2312, "answer": "for _ in range(int(input())):\n\tn, m = map( int, input().split())\n\n\tb = sorted( list(map(lambda x: x[0], b)), key= lambda x : len(x), reverse= True )\n\n \tl, r = 0, n - b[r - 1] + 1\n "}, "2313": {"problem_id": 2313, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ns = [int(i) for i in input().rstrip('\\n').split()]\nans = 0\nfor _ in range(n):\n\tp, q = map(int,input().split())\n\n\tif q%2 == 0: ans = min(ans,p*(q-p)//2+q*q)\nprint(' '.join(map(str,ans)))"}, "2314": {"problem_id": 2314, "answer": ""}, "2315": {"problem_id": 2315, "answer": "# cook your dish here\nfor _ in range(int(input())):\n\tl, r = list(map(float, input().split()))\n\n\ta, b = (l + 1) // 2, (r + 2) - 1\n\n \tif a % 2 == 0 and a / 2!= b: print(a / b)\n  \n"}, "2316": {"problem_id": 2316, "answer": "for _ in range(int(input())):\n   x,n,kana = list(map(float,input().split()))\n\n  print('YES' if kana else 'NO')\n"}, "2317": {"problem_id": 2317, "answer": "from sys import stdin,stdout\ninput = lambda:stdin.readline().rstrip('\\r\\n')\n"}, "2318": {"problem_id": 2318, "answer": "n = int(input())\nwords = list(map(int, input().split()))\nfor i in range(n):\n\ts, t = input(), input()\n\n\tif s[0] == 'h' and t[-1]!= 'a' or (len(s) == 0 and s.count('h') == 1 and len(t)!= 0) and (s.find('a')!= -1 or s) not in words[i] and i == n - 1: print('YES' if s!= t else 'NO')\n"}, "2319": {"problem_id": 2319, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n  n = int( input() )\n\n  s = list( map(str, input().split()))\n#  print('s', s, 't','s')\n"}, "2320": {"problem_id": 2320, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nfor _ in range(n):\n\ts, t = input().split(' ')\n\n\tif s[0] == 'r' and t[1]!= 't' or len(s) == 1: print(-1)\n \tfor i in reversed(list(map(int, s.split()))): print(i)"}, "2321": {"problem_id": 2321, "answer": "for _ in range(int(input())):\n\tn, k = map( int, input().split())\n\n\ts = list( map(''.join(map(str, s)), input() ) )\n\n \tif k > len(s) or k == 0 or s[-k-1] == '<' or (n == k and k!= 0 and n > k-2) and (s[0]!= '>' and s.count('<') == 1) : print(0)"}, "2322": {"problem_id": 2322, "answer": ""}, "2323": {"problem_id": 2323, "answer": "n = int(input())\nsums = list(map(int, input().split()))\nfor _ in range(n):\n\tl, r = [int(i) for i in input()]\n \tprint(sum(l))"}, "2324": {"problem_id": 2324, "answer": "s = input()\nn = len(s)\nfor i in range(n):\n\tif s[i] in \"abcdefghijklmnopqrstuvwxyz\" and n % 2 == 0: print(i, end ='')\n\n\telse: break\nprint('0' * (n // 2))"}, "2325": {"problem_id": 2325, "answer": "q = int(input())\nfor _ in range(q):\n\tx, y = list(map(int, input().split()))\n\n\tif x[1] == y[0] and x > y: print(x)\n"}, "2326": {"problem_id": 2326, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n\tif a[i] == 1: ans += (i-i+1) % 1000000007\nprint(ans)"}, "2327": {"problem_id": 2327, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n n = int( input() )\n arr = list( map( int, input().split() ))\n ans = 0\n for i in arr: ans += i\n print( ans )"}, "2328": {"problem_id": 2328, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\npoints = list(map(int, input().split()))\ndist = [0] * n\nfor i in range(n) :\n\tdist[i] = points[(i + 2) % n]\nans = []\nanswer = [-1] + [points[0]] * (n - 1)\nwhile len(answer) > 0 :\n\n\tx, y = answer.pop(0) - answer[-1].pop(-1) + y, x + (y + n) // 2 - (x - y) * y\n \tans.extend([(y, i) for i, j in enumerate(points)])\nprint(*ans, sep='\\n')"}, "2329": {"problem_id": 2329, "answer": "n,m=list(map(int,input().strip().split()))\na=[0]*n\nfor i in range(m):\n\ta[i]=int(input())\nans=0\nd=n-m-1\nwhile(d>0 and a[d]-1<a.index(max(a)):d-=1) and ans+d<n:ans+=d\nprint(ans)\n"}, "2330": {"problem_id": 2330, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn, m = list(map( int, input().split() ) )\n\n\ta = [0] + [ int(i) for i in input() ] + [-1] * (n + 1)\n  \tfor i, x in enumerate(a): a[i] = max(0, min(x, i) - m + (x!= 0) * m - a.index(max(y, 0)) for y, y1 in zip([-a[x], x]))[:n]\n"}, "2331": {"problem_id": 2331, "answer": "for _ in range(int(input())):\n\tx,y=list(map(str,input().split()))\n\n\tif x.count('0')%2==0 and x[0]!=y[1] and y[2]==x[3] : print(x)\n"}, "2332": {"problem_id": 2332, "answer": "n,k,m=list(map(int,input().split()))\na=[0]*k\nfor i in range(k):\n\ta[i]+=int(input())\nans=sum(a)\nprint(ans)"}, "2333": {"problem_id": 2333, "answer": "n=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(n):\n\tans+=a[i]\nprint(ans)\n"}, "2334": {"problem_id": 2334, "answer": "n = int(input())\na = [int(x) for x in input().split()]\ns = 0\nfor i in range(n):\n\ts += a[i] + s\nprint(s)"}, "2335": {"problem_id": 2335, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0] * n\nfor i in range(n):\n\tp[a[i]] = i\nprint(min(p))"}, "2336": {"problem_id": 2336, "answer": "import sys\ninput = sys.stdin.readline\nn,k,q = [int(x) for x in input().split()]\ns = []\nfor i in range(n):\n\tl,r = list(map(int,input().rstrip()))\n\n\ts.append(l+r)\n#print(s)\n\n"}, "2337": {"problem_id": 2337, "answer": "n,m = list(map(int,input().split()))\na = [int(i) for i in input()]\nc = 0\nfor i,j in zip(a,b):\n  if i%j==0:c+=1 \nprint(c)\n"}, "2338": {"problem_id": 2338, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[[0]*n for i in range(n)]\nc=0\nfor i,x in enumerate(a):\n  for j,y in zip(b[i][1:],a[j][0:])[:i+1][:j] + [y-x] * (n-j-i): c+=i\nprint(c)\n"}, "2339": {"problem_id": 2339, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn = int( input() )\n\n\ta = list( map( int, input().rstrip().split(' ')))[:n] + [0]*(n-1)\n \tb = [ [a[i]//i for i in b] for j in [i,i+1] ]\n#\tprint(''.join(map(lambda x: x[1], b)) )"}, "2340": {"problem_id": 2340, "answer": "q = int(input())\nfor _ in range(q):\n\tn, m = list(map(int, input().split()))\n\n\tp = [int(x) for x in input()] + [0] * (m + 1)\n\n \tcurr = 0\n  "}, "2341": {"problem_id": 2341, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nn,m=map(int,input().split())\na=[int(i) for i in input().rstrip()]\ns=set()\nfor _ in range(n-1):\n\ts.add(a[a.index(max(s)]+1)%m)\nans=0\nwhile(len(ans)>0 and a[ans]==s[0]):ans+=1\nprint((ans))\n"}, "2342": {"problem_id": 2342, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n   N, M = list(map( int, input().split() ))\n\n  maze = [ [0 for x in input()] for y in [1] if x == \".\" and y!= \"#\" and not maze[-1][0] or x==\".\" or y=='#': maze][M]\n"}, "2343": {"problem_id": 2343, "answer": "t=int(input())\nfor i in range(t):\n   n,k=list(map(int,input().split()))\n\n  if k%2==0:print(\"NO\")\n"}, "2344": {"problem_id": 2344, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n-1):\n\tl.append(a[i+1])\nc = 0\nd = [0]*n\nwhile d[0][1]!='0' and l[d[1][0]:]=='0':\n\n\tc += d.pop()\nprint(c)"}, "2345": {"problem_id": 2345, "answer": "def solve(n,a):\n if n==0:return 0\n for i in range(len(a)):a[i]+=1\n\n return a[0]\nfor __ in sys.stdin:print(solve(int(__)))\n"}, "2346": {"problem_id": 2346, "answer": ""}, "2347": {"problem_id": 2347, "answer": "t = int(input())\nfor _ in range(t):\n\ts, h = input().strip().split(' ')\n\n\tif len(s) == 1 and h[-1] == s[0] + 'a' or (len(h) - 1)!= h.index('a') or s.count(''.join(map(str,h))) == 0 or h!= s :\n \t\tprint('NO')\n"}, "2348": {"problem_id": 2348, "answer": "# cook your dish here\nn = int(input())\nl = []\nfor i in range(n):\n  l.append(str(i+7) + 'A')\nprint(l[0])"}, "2349": {"problem_id": 2349, "answer": "t = int(input())\nfor _ in range(t):\n\tn, k = list(map(int, input().split()))\n\n\ta = [0] * (n + 1)\n\n \tfor i, j in zip(list(range(1, n+1)) if i % 2 == 0 else [j, i // 2 + j]): a[i] += j * k\n  "}, "2350": {"problem_id": 2350, "answer": "from sys import stdin,stdout,setrecursionlimit\nt = int(stdin.readline())\nfor _ in range(t):\n\tx = [int(x[0])-1 for x in input().split(' ')]\n\n\tn = x.count('1') + x[1]\n \tans = 0\n#\tprint(n,ans,x)\n"}, "2351": {"problem_id": 2351, "answer": "from sys import stdin, setrecursionlimit\ninput=stdin.readline\nn=int(input())\nk,len=list(map(int,input().split()))\ns=set()\nfor i in range(len):\n  if i%2!=0:s.add(i)\nprint(s)"}, "2352": {"problem_id": 2352, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn, m = list(map(int, input().split()))\n\n\ta = [0]*(n+m+1) + [str(i) for i in input()] + [\"a\", \"b\", \"\"][(len(a)-1)*(m-1)]+[\"c\"]*(((1-a[i])*m)//2)+[\"d\"][i%(2*n)==0 and (n-i*2)%m==1 and i%n==2 and m%2==3 and n%3==4)\n   print(\"YES\")\n"}, "2353": {"problem_id": 2353, "answer": "# cook your dish here\nfor _ in range(int(input())):\n\ta=input().split(' ')\n  \tl=len(a)\n\n\tif a[0]=='0' or len(l)==1 or l>=a[1] or (l%2==0 and l%3!=0) or a.count('0')==l:\n\n  #  print(0,a.index(b)-1,l//3,0,'1')\n"}, "2354": {"problem_id": 2354, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn,q=list(map(int,input().split()))\ns=set()\nfor i in range(n):s.add(i)\nr=int(stdin.readline())\nl=[]\ni=0\nwhile i<r:l.append(s[i])\nprint(l)"}, "2355": {"problem_id": 2355, "answer": "from collections import defaultdict, deque\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(int(1e9) + 7)\nINF = float('inf')\nMOD = 10**9+7\nN = int(input())\ngraph = [[] for _ in range(N+1)]\nfor u,v in zip(list(map(str,input().split())))[::-1]:\n\tgraph[u].append((v,u))\nans = [0]*N\nvisited = set()\ndef dfs(u,vis):\n  if u in visited and u not in graph or (vis or visited or u == graph[v].pop(0) and v == u): return 1\n\n  visited.add((u) if visited else 0)\n\n\tdfs(v + 1, vis + [u])\nprint(*ans, sep='\\n')"}, "2356": {"problem_id": 2356, "answer": "t = int(input())\nfor _ in range(t):\n\tn = len(list(map(int, input().split())))\n\n\ts = sorted(set(s), key=lambda x: x[0], reverse=True)\n \tprint(*s)"}, "2357": {"problem_id": 2357, "answer": "# coding: utf-8\nimport sys\nfrom sys import stdin,stdout\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x:int(x.split('1'))\nn = int(input())\nans = [-1] * n\nfor _ in range(n - 1):\n\ta = list(map(int,input().split()))\n\n\tans[a[0]] = a[2] if a.count(a.pop()) > 1 else -1"}, "2358": {"problem_id": 2358, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 1.0e+6\ndd = {}\nfor _ in range(int(input())):\n\ts = input()\n\n\tif len(s)%2 == 0:   s = s[:s.rfind(1)+1] + s.split('(') + ['']*2+[''])[::-1].pop(0)  # 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 180, 185, 186, 187, 188, 189, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 223, 224, 225, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 322, 326, 327, 328, 329, 331, 337, 338, 340, 341, 347, 349, 353, 359, 366, 368, 371, 372, 373, 374, 376, 379, 380, 383, 384, 389, 392, 400, 403, 405, 407, 408, 409, 420, 423, 344, 355, 356, 358, 360, 367, 402, 417, 418, 421, 419, 432, 413, 424, 425, 475, 436, 457, 458, 600, 181, 182, 183, 184, 196, 197, 198, 205, 206, 214, 217, 218, 219, 221, 230, 231, 234, 235, 240, 237, 246, 247, 256, 258, 260, 261, 267, 272, 273, 275, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 298, 299, 300, 302, 303, 304, 315, 317, 318, 319, 320, 321, 333, 334, 335, 339, 342, 345, 346, 348, 363, 364, 365, 386, 369, 370, 375, 378, 387, 388, 390, 401, 404, 411, 412, 422, 427, 428, 429, 430,431, 433, 440, 445, 361, 292, 294, 296, 306, 305, 312, 323, 324, 265, 266, 268, 270, 274, 276, 377, 398, 410, 414, 415, 416, 503, 500, 501, 550, 176, 177, 178, 179, 190, 191, 193, 195, 208, 212, 215, 216, 220, 226, 228, 236, 238, 252, 250, 253, 255, 254, 259, 264, 297, 314, 325, 330, 336, 343, 354, 357,378,383,389,404,409,419,426,429,440,441,442,444,446,447,448,449,460,461,464,468,469,480,481,491,494,501,509,521,600,601,607,613,617,637,641,690,694,698,699,800,804,806,812,715,815,807,808,810,911,920,933,914,916,940,"}, "2359": {"problem_id": 2359, "answer": "for _ in range(int(input())):\n\th, c, t = list(map(float, input().split()))\n\n\tif h == t: print(c)\n"}, "2360": {"problem_id": 2360, "answer": "t = int(input())\nfor i in range(t):\n\tn = input()\n\n\tl, r = list(map(int, input().split()))\n \tprint(r)\n"}, "2361": {"problem_id": 2361, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn, m, k = list(map( int, input().split()))\n\n\tif n % k == 0: print(k - m - n // k)\n"}, "2362": {"problem_id": 2362, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0]*(n+1)\nfor i in range(1, n+2):\n  p[i] = max(p[-1] for j in a if j<i and j>i-2 and (j-i)%2) + a[j]\nprint(max(a))"}, "2363": {"problem_id": 2363, "answer": "n = int(input())\na = list(map(int,input().split()))\nprint(a[0])"}, "2364": {"problem_id": 2364, "answer": "n=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(n):\n\tif(a[i]==0 and a[(i+1)%n]>0):ans+=1\nprint(ans)"}, "2365": {"problem_id": 2365, "answer": "from functools import lru_cache\n\n\ndef is_boolean(x, y, z=False):\n if (x == \"t\" and y == '1' and z == False) or (z == True and x!= '0'): return False\n elif (y == '(': x = '(' + str(y) + ')' if x in ['t','f','&','!','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','98','99','100','101','103','104','105','106','107','108','109','110','111','112','113','114','115','116','117','128','129','131','132','133','134','138','139','140','141','144','145','146','148','149','151','153','160','161','162','163','164','165','166','167','178','179','180','181','184','187','188','189','190','191','194','195','196','197','228','229','233','239','241','251','257','263','269','274','285','286',283')\n"}, "2366": {"problem_id": 2366, "answer": "def solve(n,a,b,c,d,e,f,g,h,i,j,k,l,m,s,u,v,w,x,y,z):\n\tif a==b==c==d==e==f==g==h==i==j==k==l==m==s==u==v==w==x==y==z and n==0 and (n-a+1)%(x*x+y*y+z*z)==(i*i+j*j+k*k+l*l+m*m+s*s+u*u+v*v+w*w+f*f+g*g+h*h+n*n+c*c+d*d) and k==1 and a>b>c>d>e>f>g>h>i>j>k>l>m>s>u>v>w>x>y>z>a>n>t>0:\n\n\t\treturn int(solve((a-b-c-d-e-f-g-h-i-j-k-l-m-s-u-v-w-x-y-z-t, b, c, d, e, f, g, h, i, j, k, l, m, s, u, v, w, x, y, z)))"}, "2367": {"problem_id": 2367, "answer": "MOD = 1000000007\nn = int(input())\nA = [0] + list(map(int,input().split()))\nB = [[] for _ in range(n)]\nfor i,a in enumerate(A): A[i+1].append(a)\nM = 10 ** 9 + 7\nans = MOD * pow(M,n-1,MOD) % MOD\nprint(ans)"}, "2368": {"problem_id": 2368, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\nadj = [[] for _ in range(n + 1)]\nfor x, y in zip(range(m)):\n  adj[x].append((y, x) if x else 0)\nans = 0\nwhile len(adj[0]) > 0:   # 0-indexed, 0x0+0, or 0+n-1 \n\tif m % 2 == 0 and (m // 2) in adj: ans += 1\nprint(ans)"}, "2369": {"problem_id": 2369, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(2147483647)\nfrom collections import defaultdict, deque\nn, k = list(map(int, input().split()))\na = [i for i in range(k)]\nm = 10**9 + 7\nd = {n: {} for n in a}\nfor i, v in enumerate(a, 1):\n  d[v] = d.get(v, 0) + 1\nans = 0\nvisited = set([])\nwhile len(d.keys()) > 1 and k > 0: visited.add((d[k], 0)) if k % 2 == 1 else [], ans\nprint('\\n'.join(sorted(ans, reverse=True)))\n"}, "2370": {"problem_id": 2370, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n):\n\ts[i] = min(sum(a[:i]) + s[(i + 2) % n])\nprint(len(s))"}, "2371": {"problem_id": 2371, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nfrom collections import deque,defaultdict,Counter,deque2D,OrderedDict  import read_only\ndef solve(n,z,w,a,b):\n  if n == 0: return a, z, w, dp[z][w][a]\n\n  for i in range(1,n+1):z[i] += z[n-i-1] * (w-b[0] - b[1]-1) + a + b + w[2]*(z-2) * w - a * b * z   # (z+2*w*b)**2 = (a*z + (b*2-z)*(w+b))**0.5 + z*a *b * 2 - z *z *2 - w *w *(b+z) - 2*n - i*i -1\n"}, "2372": {"problem_id": 2372, "answer": "# https://atcoder.jp/contests/arc082/tasks/\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\n\n\n\n"}, "2373": {"problem_id": 2373, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):b[i+1] = min(a)\nprint(min(b))"}, "2374": {"problem_id": 2374, "answer": "from itertools import groupby\nn, m = map(int, input().split())\na = list(groupby(m, key=lambda x: -x[0], reverse=True))\nb = [list(g) for g in a]\nst = [[0] * m for _ in range(n)]\nfor i, ai in enumerate(a):\n  if st[-1][1] == 1: st.append([ai, i])\nprint(*st, sep='\\n')"}, "2375": {"problem_id": 2375, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nimport numpy as np\ninput = lambda:stdin.readline().rstrip('\\n')\ns = list(map(int,input().split()))\nn = len(s)\na = np.ones(n//2, dtype=np.int64)  # (a,i,j) = (x,y,z) for x, y, z in s\nb = a[n-1]\nc = 0\nfor k in range(1,n+1):\n  if k%2==0:c+=1\nprint(c)"}, "2376": {"problem_id": 2376, "answer": "n,w = list(map(int,input().split()))\nl = [0]\nfor i in range(n):\n  l.append(l[-1] + w)\nmaxi = 0\ni=0\nwhile(i<n and l[i]==0):i+=1;l.pop()\nif i<=n:break\nprint('\\n'.join(sorted([i,i+3])))\n"}, "2377": {"problem_id": 2377, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nn, h = list(map(int, input().split()))\nl = [[] for _ in range(n)]\nfor x, y in zip(l, l[1:]):\n  a, b = x + y, x - y + h - 2*(h-1) if h == 0 else y - h + 1 - (h+1)*(2*h), b - x\nprint(sum(pow(a, 2) for p in l))"}, "2378": {"problem_id": 2378, "answer": "from collections import deque\nn = int(input())\ngraph = [[] for _ in range(n)]\nfor i,j in enumerate(list(map(int,input().split()))) :\n  graph[i].append(j)\nvisited = set()\nans = 0\nwhile len(graph[0]) > 1 :   ans = (ans + visited) % (10**9)+7\nprint(ans)"}, "2379": {"problem_id": 2379, "answer": "n,k = map(int,input().split())\ns = list(map(str,s))\ncnt = 0\nfor i in range(k):\n  if s[i] == 'X':\n\tc = cnt + 1\nprint(c)"}, "2380": {"problem_id": 2380, "answer": "n, m = list(map(int, input().split()))\narr = []\nfor i in range(n):\n\tarr.append([int(x) for x in arr[i]])\nprint(sum(arr))"}, "2381": {"problem_id": 2381, "answer": "n,k = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(k):\n  a[i] = i\nprint(a[n])"}, "2382": {"problem_id": 2382, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict\nn = int(input())\ns = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n  if s[i] > cnt: print(\"Yes\", i, \"No\")\nif n == 1: return \"Yes\"\nprint((\"No\"))"}, "2383": {"problem_id": 2383, "answer": "n = int(input())\narr = list(map(int, input().split()))\nans = min(arr)\nprint(ans)"}, "2384": {"problem_id": 2384, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n  if a[i] == i: ans += i\nprint(ans)"}, "2385": {"problem_id": 2385, "answer": "from collections import deque\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nn = int(input())\ng = [[] for i in range(n+1)]\nfor i,v in enumerate(list(map(int,input().split()))):\n  g[v].append(i)\n\n  if len(g[i]) == 0: continue\n#  print(' '.join(str(k) for k in g))\nans = [0]*n\ndef dfs(cur,cur_mod,mod_sum,edges,root,visited=set(),cur=None): \n\tif root is not None and cur is None: return\n\n\tcur = visited[root] or visited[cur].add(root)\t# edge to add to visited set, or set if it cannot be added to set yet (if visited is set to None) or not visited (cur is visited and root not in visited)   # edge has been added, so it can be removed from visited, and so can the rest of edges (both root and visited are set) :# print(fs,fs+visit,dfs,dfs+(1)%mod) # (fs + visited + cur) %mod = 0 # edges == [cur] * (mod + 1) if cur == root else [] # visited = {cur} for cur in cur_set if not cur.isdisjoint() # add edges from root to all nodes of g: add nodes from g to g+nodes for node in nodes.__set__ if nodes[node] in vis: vis.add((node, node))) # nodes = set(range(len(vis))) if n == 1: n -= 1 # n = 1 if visited.issubset([cur]) else n % mod = mod # check if all edges are added: check for edges that are not added yet, in order to keep track of added edges: do not add new edges until we know that we have added all the edges we need to know if we are able to reach a node that is yet to be seen: print(\"{} {}\".format(edg.pop()),cur)"}, "2386": {"problem_id": 2386, "answer": "n = int(input())\na = list(map(int, input().split()))[::-1]\nb = 0\nfor i in range(n):\n\tif a[i] > b: b += 1\nprint(b)"}, "2387": {"problem_id": 2387, "answer": "n = int(input())\ns = list(map(int,input().split()))\nprint('Yes' if s[0]==s[-1] else 'No')"}, "2388": {"problem_id": 2388, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6) # \u7b54\u3048\u3092\u8ffd\u52a0\u3057\u3066\u304a\u3051\u308b\nfrom collections import deque\nn = int(input())\nx = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n\td[x[i]] = i\nif x[0] in d: print(0)"}, "2389": {"problem_id": 2389, "answer": "from collections import deque\nn,a,b,c=list(map(int,input().split()))\nevents=set()\nfor i in range(n):\n events.add(input()[i])\nevent=deque(events)\nflag=0\nwhile(len(event)>0 and event.popleft()==-1 ):\n  if(not(flag==0 or event[0]!=event[1])) or (not flag==1 and not flag%(a+b+c+d*(c-a)+(d-b-c)//2)):   print(\"Yes\\n\"); flag=1;break"}, "2390": {"problem_id": 2390, "answer": "import sys\ninput = sys.stdin.readline\nn,c = list(map(int,input().split()))\nxs = []\nfor i in range(n):\n  xs.append((i,i+xs[i]-1)**0.5)\nc += 1"}, "2391": {"problem_id": 2391, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\ndef LI(): return list(map(int,input().split()))\n# import numpy as np\nfrom collections import defaultdict as dd, deque, Counter, OrderedDict, Tuple, List, Union, Bigarray, Arrays, CODING, BINARY, BYTE, PYTHON, ROUND_HALF_UP, suffix_to_read, stderr, trunc, flush\nmod = 1000000007\nn = int(input())\nA = np.ones((n+1), dtype=np.int64) + [0]*n\nB = dd.from_iterable([0])\nfor i in range(n): A[i%mod].append(B[-i//mod] + B[(i-n)//(mod-2)]*(1<<i)) %mod\nprint(*A, sep='\\n')\n"}, "2392": {"problem_id": 2392, "answer": "from sys import stdin, stdout\nn = int(stdin.readline().strip())\nmod = 10**9 + 7\nstdout.write(str(n) + '\\n')"}, "2393": {"problem_id": 2393, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\ts = input()\n\n\tif s[0] == 'one' or len(s) == 1 or s.count('two') == 0: print(0)\n"}, "2394": {"problem_id": 2394, "answer": "n, k = list(map(int, input().split()))\nedges = [[] for _ in range(k+1)]\nfor i, j in enumerate(list(range(0, n))):\n\tif i == j: edges[j].append(i)\nans = 0\nq = []\nvisited = set()\nwhile q and q[0][0] < n: q.append((q[-1][1] if q else 0) for q in qs.pop() if len(qs) > 1 else -1))\n\n\tans += visited.add(j)\n\n"}, "2395": {"problem_id": 2395, "answer": "# cook your dish here\nimport math\nt = int(input())\nfor _ in range(t):\n s = input()\n if s[0] == '0':\n  print(''.join(s))"}, "2396": {"problem_id": 2396, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n  if a[i] == b[-i-1]: a.pop(i)\nprint(*a)"}, "2397": {"problem_id": 2397, "answer": "n, k = list(map(int, input().split()))\nl = [[0] * k for _ in range(n)]\nfor i, j in zip(range(k)): l[i][j] = j\nans = sum(l)\nprint(ans)\n\n"}, "2398": {"problem_id": 2398, "answer": "t = int(input())\nfor _ in range(t):\n\ta, b, c, d = list(map(int, input().split()))\n\n\tif d % 2 == 0 and (a + b + c + d // 2) == (d - 1) * (c - (b - c)) and a == b and b == c and c == d and d > 0: print(\"YES\")\n"}, "2399": {"problem_id": 2399, "answer": "q = int(input())\nfor _ in range(q):\n   a, b = list(map(int, input().split()))\n\n  if (a == 3 and b == 2) and (b == 1 and a % 2 == 0 or a // 2!= b) else \"NO\" : print(\"YES\")\n"}, "2400": {"problem_id": 2400, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n   n, m = [int(x) for x in input().split()], 10**5 + [0]*(m-1)\n#print(n,m,x,y,sorted(0,n-m+1))\n"}, "2401": {"problem_id": 2401, "answer": "#!/usr/bin/env python3\nfrom collections import defaultdict,deque\nimport sys,heapq,itertools,random,math,string,bisect\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\ndef readline():return input().rstrip('\\r\\n'+'\\t'.join(map(str,input().split())))\nt = int(input())\nwhile(t>0):\n\tn,a,r = readlines()\n\n\tif n%2==0:print(r)"}, "2402": {"problem_id": 2402, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n\tn,x,y = list(map(int,input().split()))\n\n\tprint(y-x)"}, "2403": {"problem_id": 2403, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tif a[i]!=-1 and b[(i+1)%n]==0:b.append(0)\nprint(max(b))"}, "2404": {"problem_id": 2404, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(1,n+1):\n s += i\nprint(s)"}, "2405": {"problem_id": 2405, "answer": "n,k,a,b,q=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\ts+=a*i\nprint(s)\n"}, "2406": {"problem_id": 2406, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = [0] * n\nfor i in range(n - 2, 0, -1):\n\tans[i] = min(ans)\nprint(*ans, sep=\"\\n\")"}, "2407": {"problem_id": 2407, "answer": "q = int(input())\nfor _ in range(q):\n  n, r = list(map(int, input().split()))\n\tx, y = [0] * (n + 1), [int(i) for i in input()]\n\n\twhile x > 0 and y > x: x -= 1; y //= 2; x = x >> 1 ; y >>= 1"}, "2408": {"problem_id": 2408, "answer": "from collections import defaultdict, deque\nn = int(input())\nl = list(map(int, input().split()))\nfor i in range(n):\n\tl[i] = [int(x) for x in input()]\nprint(sum(l))"}, "2409": {"problem_id": 2409, "answer": ""}, "2410": {"problem_id": 2410, "answer": "t = int(input())\nfor _ in range(t):\n\tn, m = list(map(int, input().split()))\n\n\ta = sorted(list([int(x) for x in input()]))[:n]\n \tif a[0] > m or (a[n-1]-m) % 2 == 0: print('NO')\n"}, "2411": {"problem_id": 2411, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n\ta[i] = input()\nprint(sum(a))"}, "2412": {"problem_id": 2412, "answer": "from sys import stdin, stdout\ninput=stdin.readline\nfor _ in range(int(input())):\n\tn, m = list(map( int, input().split() ) )\n\n\tif m == 11: print(\"YES\" )"}, "2413": {"problem_id": 2413, "answer": ""}, "2414": {"problem_id": 2414, "answer": "t = int(input())\nfor i in range(t):\n   a = input()\n# print(a + b)\n"}, "2415": {"problem_id": 2415, "answer": "s = input()\nprint(\"YES\") or print(\"NO\")"}, "2416": {"problem_id": 2416, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tif a[i] % 2 == 0: ans += 1\nprint(\"YES\")\n"}, "2417": {"problem_id": 2417, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = sorted(a)\nans = 0\nfor i in range(n):\n\tif a[i] == b[-1] and i!= n-i+1 and a.count(i) == 1: ans +=1\nprint(ans)"}, "2418": {"problem_id": 2418, "answer": "from sys import stdin, stdout\nn = int(stdin.readline().strip())\ns = sorted(list(map(int, list(s))) for _ in range(n))\nans = [0] * (n + 1)\nfor x, y, z in zip(ans, s[1:]):\n  ans[x] = y + z\nprint(' '.join(str(x) for x in ans))"}, "2419": {"problem_id": 2419, "answer": "import math\nt = int(input())\nfor _ in range(t):\n\ta,b=list(map(int,input().split()))\n\n\tif(a*b == math.floor(math.sqrt(b))) or (a+b)%2==0:print(0)\n"}, "2420": {"problem_id": 2420, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nn = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n  a[i+1] = min(a[-i] + 1, l[0])\nprint(max(l))"}, "2421": {"problem_id": 2421, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tx,y = list(map(float,input().split()))\n  \tc = dict(zip(list(range(len(x)))[:x]))\n\n\tn = len(set(c.values()),key=lambda x:c[x])\n#\tprint(n)\n"}, "2422": {"problem_id": 2422, "answer": "t = int(input())\nfor _ in range(t):\n\tn,w = list(map(int,input().split()))\n\n\ta = [0]*(n+1)\n \tfor i,j in zip(list(range(0,n),range(-1,0))) : a[i] += 1\n"}, "2423": {"problem_id": 2423, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n-1):\n\ta[i] = str(i)\nprint(sum(a))"}, "2424": {"problem_id": 2424, "answer": "n = int(input())\na = [int(x) for x in input().split()]\ndp = [[0] * n for _ in range(n + 1)]\nfor i, n in enumerate(a):\n\tdp[n][i] = dp[i - 1][n] % 1000000007\nans = 0\nflag = False\nwhile len(dp) > 0:   # print(\"i: \", i)\n\n\tif i % 2 == 0 and i // 2 in a: ans = ans + (1 if flag else 0)\nelse: flag = True\nprint(ans)"}, "2425": {"problem_id": 2425, "answer": "q = int(input())\nfor _ in range(q):\n   a = list(map(int, input().split()))\n\n  gcd = [0] * (a.count('1') + 1)\n\tfor i, x in enumerate(list(g)): g[x] += a[i]\n\n\tr = max(0, (g[-1] - x) ** 0.5 - (x - r) for x, r in g.items() if x % r == 0) + (r - a) * a\n"}, "2426": {"problem_id": 2426, "answer": "t = int(input())\nfor _ in range(t):\n   n = list(map(int, input().split()))\n\n  a = [0] * (n + 1)\n# a.sort()\nsums = [-1]\ni = 0\nwhile i < len(a) and a[i] == -1: i += 1\na.append(i)\n\n"}, "2427": {"problem_id": 2427, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(30):\n\tif a[i] == 0: cnt += 1\nif n == 3: print(n)"}, "2428": {"problem_id": 2428, "answer": "t=int(input())\nfor _ in range(t):\n\ts=input().strip()\n\n\tif len(s)==1:print(\"YES\")\n \telse: print(\"NO\")"}, "2429": {"problem_id": 2429, "answer": "import math\nfor _ in range(int(input())):\n   n = int(math.sqrt(sum(1 for x in input() if x%2==0)))\n\n  if n==2: print(2)\n"}, "2430": {"problem_id": 2430, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n  a[i] += 1\nprint(a[-1])"}, "2431": {"problem_id": 2431, "answer": "t = int(input())\nfor _ in range(t):\n\tn,x,y,z = map(int,input().split())\n\n\ta = [int(x) - 1 for x in input().rstrip('\\n').split(' ')]\n \tb = [-1]*n  * (n+1)\n#\tprint(*a)"}, "2432": {"problem_id": 2432, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(0,n):\n  l.append(i)\nprint(len(l))"}, "2433": {"problem_id": 2433, "answer": "t=int(input())\nfor i in range(t):\n  a,b,c=list(map(int,input().split()))\n\n  if(b==c and b==a and c==b and (a+b+c)>=a*c*(c+1)/2):\n\n\tprint(a)\n"}, "2434": {"problem_id": 2434, "answer": "from math import gcd\nfor _ in range(int(input())):\n n,m=list(map(float,input().split()))\n if m==n:print(\"YES\")\n else: print(\"NO\")"}, "2435": {"problem_id": 2435, "answer": "for _ in range(int(input())):\n\tn, x, m = list(map( int, input().split() ) )\n\n\tl, r = [ 0, 0 ], [ 1, 1 ]\n\n \twhile l!= 0 and r!= 1:\n\n\n\n"}, "2436": {"problem_id": 2436, "answer": ""}, "2437": {"problem_id": 2437, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n  if a[i] > s: s+=1\nprint(s)"}, "2438": {"problem_id": 2438, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nn = int(input())\ns = input()\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n-1, 0, -1):\n\tif s[i]=='A' and b[(i+1)%n]>0: a[b[0]] += 1\nprint(len(a))"}, "2439": {"problem_id": 2439, "answer": ""}, "2440": {"problem_id": 2440, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nx = list(map(int,input().split()))\na = [0]*(n+1)\nfor i in range(x[0]+1):\n  a[i] += 1\nprint('YES' if sum(a)>0 else 'NO')"}, "2441": {"problem_id": 2441, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = a[0]\nfor i in range(n):\n\ta[i] = m\nprint(len(a))"}, "2442": {"problem_id": 2442, "answer": "from sys import stdin,stdout\ninput=stdin.readline\nt=int(input())\nfor _ in range(t):\n\tn=list(map(int,input().split()))\n\n\ta=[0]*(n[0]-1)\n\n \ts=set()\n#\tfor i in a:s.add(i)\t\t# \u540c\u5b57\u6bcd\u8f93\u51fa\u73b0\u53f3\u4e0b\u7684\u957f\u5ea6\u4e3a\u4e00\u4e2a\u8282\u70b9\uff0c\u4e0d\u80fd\u627e\u5230\u6ee1\u8db3\u6392\u5e8f\u7684\u8ddd\u79bb\u7b26\u5408\u7684\u521d\u59cb\u5316\u4e8c\u5206\u6784\u5efa\u7684\u6570\u7ec4\u3002\u6ca1\u6709\u88ab\u5207\u5224\u5b9a\u7684\u6a21\u677f\u5373\u53ef\u3002\u53ea\u8981\u6700\u540e\u4e00\u6b21\u5143\u7d20\u8ba1\u7b97\u811a\u672c\u8eab\u7684\u5355\u8c03\u9012\u5f52\u3002\t\u6307\u9488\u4e86\u81ea\u5df1\u7684\u786e\u6162\u4e24\u65b9\u5411\u548c\u89e3\u7b54\u7684\u6838\u5fc3\u3002\n\n\n\n"}, "2443": {"problem_id": 2443, "answer": "n, m = list(map(int, input().split()))\na = [set() for _ in range(n)]\nfor i, x in enumerate(a, 1):\n  if x % m == 0: a[i].add(x // m)\nprint(k)\n\n"}, "2444": {"problem_id": 2444, "answer": "n, p = list(map(int, input().split()))\na = []\nfor i in range(n):\n\ta.append([int(x) for x in input()] + [0]*p)\nprint('%.6f' % a[i][0])\n"}, "2445": {"problem_id": 2445, "answer": "for _ in range(int(input())):\n\tn, k = list(map(str, input().split()))\n\n\tc = [[0] * k for i, j in enumerate(k) if j == 0]\n  \tfor i in k: c[i][i] = 1\n#\tprint(c)\n"}, "2446": {"problem_id": 2446, "answer": "n = int(input())\na = list(map(int, input().split()))\nq = [0]*n\nfor i in range(n):\n\ta[i] += a[n-i-1]\nans = 0\ni = 1\nwhile(i*i <= n:ans+=1)\nprint(ans)"}, "2447": {"problem_id": 2447, "answer": "t = int(input())\nfor _ in range(t):\n  s = input()\n\n  if s[0] == '0' or len(s) == 1: print(0)"}, "2448": {"problem_id": 2448, "answer": "for _ in range(int(input())):\n\tn = int(raw_input() + input()[:2])\n\n\ta = [0] * (n + 2)\n \tb = [-1]\n#\tif n % 2 == 0 and a[n - 1] == n - 2 and b[-1][n]!= 0: print(\"NO\")\n"}, "2449": {"problem_id": 2449, "answer": "n, m = list(map(int, input().split()))\nset = [0]*(n+1)\nfor i in range(m):\n\tset[i] = set[-1] + [int(input()) for j in str(i)]\nprint(sum(set))"}, "2450": {"problem_id": 2450, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn,m,x,y = list(map( int,input().split()))\n\n\tcost = 0\n\n \tif m*(n+1) == x*y and m%2 == 0 and (y*((n-1)/2) + m/2)*(y-x)!= 0:\n\n\n\n"}, "2451": {"problem_id": 2451, "answer": "n = int(input())\nl = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n\tt, f, t_min = l[i], 0, n-i-1\n\n\tif cnt == 0 or t - f <= 0 and t + f >= h or f - t >= 0:   print(i+1)"}, "2452": {"problem_id": 2452, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn,k = [int(x) for x in input().rstrip().split()]\n\n\tif k == 1: print(1)\n \telif n == 3: break\n"}, "2453": {"problem_id": 2453, "answer": "n = int(input())\nl = list(map(int,input().split()))\nr = [0]*n\nfor i in range(n-1):\n\tl.append(l[i+1]-1)\na,b,c,d,e,f,g,h,i = 0,0,[],0\nwhile(len(a)>0 and len(b)<=i):\n\n\ta = a[:i] + a.pop(0) + (b[-2] if b.isnumeric() else b[:-2])*(c-i)//2\n \te = e + e*i + f*c - g*h - h*g - (i-c)*f + i*d - d*e\nprint(max(r,a))"}, "2454": {"problem_id": 2454, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n-1):\n\ta.append(i)\nc=1\nans=0\nwhile(c!=a[c]-b[b.index(max(a)):]):\n\n\tif(ans==0 and a.count(b)==1) and (c-b>1 and ans>0) or (b-a==b and c>b): ans=ans%1000000007"}, "2455": {"problem_id": 2455, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tx, y = map(int, input().split())\n\n\tif x > y: x,y = y, x\n \tprint(x)"}, "2456": {"problem_id": 2456, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn, r = list(map( int, input().split() ))\n\n\tif n % 3 == 0 and n // 3 not in [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 178, 183, 184, 185, 186, 187, 188, 191, 194, 195, 200, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 245, 246, 247, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 312, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 331, 336, 338, 340, 341, 343, 344, 347, 349, 353, 359, 366, 367, 373, 379, 383, 384, 389, 400, 401, 402, 405, 407, 408, 409, 412, 413, 420, 417, 425, 426, 427, 428, 429, 430, 432, 433, 424, 445,466,467,468,469,479,487,491,499,503,509,601,569,593,607,613,617,637,641,654,667,668,673,686,688,689,690,694,696,698,699,700,707,708,723,733,751,753,757,756,768,773,787,797,800,801,804,806,609,807,808,810,815,814,820,863,866,926,894,909,916,949,960,1018,1020,1136,1126,1128,1353,1460,1558,1656,1764, 1800, 1900, 2000, 2001, 2002, 2003, 2004, 2006, 2007, 2008, 2011, 2010, 2013, 2015, 2017, 2018, 2019, 2020,\n"}, "2457": {"problem_id": 2457, "answer": "t = int(input())\nfor _ in range(t):\n\tn, m = list(map(int, input().split()))\n\n\tprint(\"Yes\") if m == 1 and n == m-1 else print(\"No\")\n"}, "2458": {"problem_id": 2458, "answer": "t,k = list(map(int,input().split()))\na,b = [],[]\nfor i in range(1,t+1):\n\ta.append(str(i+k-1)%1000000007)\n# print(a)\n\n\tb.insert(0,a[i])\nc = a.count(b[0])*k\ns = 0\ni=0\nwhile i<=len(c)-1 and s+c[s+i]==k:i+=1\nprint(s%(10**9+7))"}, "2459": {"problem_id": 2459, "answer": "n,q,m=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\tt,l,r,a.append([int(x) for x in input()])\n#print(a)\nans=0\ni=1\nwhile(i<n-1 and a[i][0]=='l'):\n\n\tif(t>2 and l[0]+r[1]>=a[t+1][1]+1) or (t<=n and r[2]-l[3]<0) and (i==0 or i==t-2)and a.count('l')==1:i+=1;t=i\nprint('\\n'.join(ans))\n\n"}, "2460": {"problem_id": 2460, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m = list(map(int, input().split()))\na = [int(i) for i in input()]\ns = sorted(a, key=lambda x:x[0])\nprint(*s)"}, "2461": {"problem_id": 2461, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n-1):\n  b[i+1] = (b[-i] + 1) % n\nans = 0\nwhile(len(b) > 0 and len(a) >= 0):\n\n  if a[0]+a[1]-1 == b: ans += 1\nprint(ans)\n"}, "2462": {"problem_id": 2462, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import Counter, defaultdict,deque,OrderedDict,defaultdict\nfor _ in range(int(input())):\n\tn,c=input().split()\n\n\ts=Counter(n).most_common(1)[0][1]\n#\tprint(s)\nprint('YES')"}, "2463": {"problem_id": 2463, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\ta[i] = a[n-i-1]\n\n\tif n % 2 == 0 and (n - i - 1) * 2 > a.count(a.pop(0))) and ans > 2 * n // 2: ans = n\nprint(ans)\n"}, "2464": {"problem_id": 2464, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ngraph = [[] for i in range(n)]\nfor i,v in enumerate(map(int,input().split()),1):\n  graph[v].append(i+1)\nadj = [0]*n\ndef find_edge(v1, v2, parent=None):\n\n  if parent is not None and parent!= v1[0]+v2[1] or parent == None or adj[parent] == 0:   return 0 \n\treturn 1 \n\n\tif not parent or not adj is None: return -1\n# \tprint(adj,parent,visited,len(graph[adj])-2) "}, "2465": {"problem_id": 2465, "answer": "# cook your dish here\nfor _ in range(int(input())):\n a,b,c=map(float,input().split())\n if(c==3 and a==b and b==c):print(-1)\n else:print(0)"}, "2466": {"problem_id": 2466, "answer": "from collections import defaultdict, deque, Counter, OrderedDict\n# O(n) time, space, and time required to store a set of integers and a list of tuples (i, j, k) for each element of the set. If there is no such tuple, it means that there are an amount of unique integers in each set, but we don't need to keep track of them because we will always be able to collect them in the worst case of time and space. We can just keep a dict to prevent this from happening again and again if we encounter any duplicates. Here is an example of how we would approach this problem: \n\n\n\n  # 3, 1, 2, 3. 1 3 2. 3 3 1 2 2 1. 2 3 5 5. 5 6 5 7 5 8 8 9 10 11 12 12 13 14 14 15 16 17 18 19 20 20 21 22 22 23 23 24 25 26 27 28 29 30 31 32 32 33 33 34 34 35 36 40 41 41 43 42 45 45 46 47 48 49 51 52 53 54 55 60 60 61 60 62 65 62. 65 65.  7 7 8 5 9 6 8 7 9 8 10 7 10 8 11 7 12 7 13 7 14 7 15 7 16 7 17 7 18 7 19 7 20 7 21 7 22 7 23 7 24 7 27 7 28 7 29 7 30 7 31 7 32 7 33 7 34 7 35 7 37 7 38 7 39 7 40 7 41 7 42 7 43 7 44 7 45 7 46 7 47 7 48 7 50 7 52 7 57 7 58 7 59 7 60 7 61 7 67 7 69 7 70 7 71 7 72 7 73 7 74 7 75 7 76 7 77 7 78 7 79 7 80 7 81 7 82 7 83 7 84 7 90 7 92 7(7, 5, 9, 11, 15, 17, 19, 23, 29, 31, 41, 59, 61, 82, 86, 97, 100, 101, 103, 107, 108, 109, 110, 114, 117, 120, 127, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397"}, "2467": {"problem_id": 2467, "answer": "from collections import defaultdict\n class Solution(object):\n # def combinations(s, l, r, c, a, b, d, e, f, g, h, i, j, w, x, y, z, t, u, v, m, p, q, s, V, C, D, E, L, R, S, T, U, W, X, Y, Z, F, G, H, I, J, K, M, N, O, P, Q) (9, 7, 1, 2, 5, 9, 8, 0, 4, 6, 3)\n# def sum(l,r,c,a,b,d,e,f,g,h,i,j,w,x,y,z,t,u,v,m,p,q,ss,V,C,D,E,L,R,S,T,U,W,X,Y,Z,F,G,H,I,J,K,M,N,O,P,Q) : d(6,8,0,7,1), a(1), b(2), e(3), g(4), h(5), i(7), j(8), w(9), x(10), y(11), z(12), t(13), u(14), v(15), p(16), q(17), s(19), V(20), C(21), D(22), E(23), L(24), R(26), S(27), T(28), U(29), W(30), X(31), Y(32), Z(33), F(34), G(35), H(36), I(37), J(38), K(39), M(40), N(41), O(50), P(42), Q(43), (s-1)(t-13)(x-10)(y-11)(z-12)(u-14)(v-15)(m-16)(p-17)(q-18)(Q-20)\n\n"}, "2468": {"problem_id": 2468, "answer": "from collections import defaultdict, OrderedDict, deque\n\n\ndef is_string(string, start, end, cnt = 0, max_len = float('inf')) -> bool:  # O(n) time, space, and time and space complexity, which is a bit more, but is the same, so we don't need to check it for each testcase.\n# dp[start:end+1][cnt] = 1.0 if start > end else 0.5 if end > start else 1e9 + (dp[end-1] + 1) * (end - start) // (1.1)\nfor _ in range(0, len(s) - 1, -1):\n if s[0] == '(': return False\n else: return True\n'''\n[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,138,139,140,141,144,145,146,147,149,151,152,153,155,156,157,158,159,160,161,162,163,164,166,167,178,179,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,222,223,224,225,227,228,229,232,233,234,235,256,257,260,269,271,273,274,385,388,389,390,391,400,401,409,410,411,432,433,434,435,446,457,480,481,484,486,487,488,489,490,491,493,500,501,503,505,596,607,613,614,617,618,640,641,654,666,667,668,669,680,681,673,684,686,688,689,690,694,696,697,698,699,751,757,773,787,797,801,804,806,807,808,809,820,905,randint = lambda x, y, z: x + y + z * y * x // y // z // x % y % (y == 0 or y == 1 or z == 2 or x == 3 or (x == 4 and y!= 1 and x!= 2) or (((x % 4 == y) and (z == 5 and z!= 4)) and ((x // 4!= y and  (2*y + 3*z + 5*x + 4*(y - y - 5)) or  ((y * 2 * 3 + x * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19 * 20 * 21 * 22 * 23 * 24 * 25 * 26 * 29 * 32 * 33 * 36 * 37 * 38 * 39 * 40 * 41 * 42 * 43 * 47 * 48 * 49 * 50 * 51 * 52 * 53 * 54 * 55 * 56 * 57 * 58 * 59 * 60 * 61 * 62 * 63 * 64 * 65 * 66 * 68 * 69 * 70 * 71 * 72 * 73 * 74 * 75 * 76 * 77 * 78 * 79 * 80 * 81 * 82 * 84 * 86 * 87 * 88 * 89 * 90 * 91 * 92 * 94 * 95 * 96 * 97 * 98 * 100 * 108 * 109 * 110 * 111 *"}, "2469": {"problem_id": 2469, "answer": "from collections import defaultdict\n class Solution(object):\n def find_all_elements_with_iterable_sorted_numbers(nums, key=lambda x: x[0], value=None, iterable=defaultdict(int))(tuple, dict.fromkeys(x.keys()), iter(key(value)))(map(lambda a, b: len(a), key(b)))"}, "2470": {"problem_id": 2470, "answer": "from functools import lru_cache\nimport math\ndef make_array_increasing(arr, i, j, k, n=0, dp=[[0]*(k+1) for i in range(n+2)]](i,j,k,n,dp)->int:\n\n  if i>j and j>k and k>0 and n==0 or k==1 or i==j or j==k or n!=n: return k-i+j+k-2\n"}, "2471": {"problem_id": 2471, "answer": "# coding: utf-8\nimport sys\nread = sys.stdin.read\nsys.setrecursionlimit(max(read, 10**9))\ninput = lambda: read()[:-1]\nn = int(input())\nl = []\nfor i in range(n):\n  l.append(list(map(int, read().split())))\nprint(*l)"}, "2472": {"problem_id": 2472, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n  if a[i]%2 == 0 and b[n-i-1]//2!= 0: b.append(a[:i])\nprint(\"Yes\")"}, "2473": {"problem_id": 2473, "answer": "import sys\ninput = sys.stdin.readline\nn,k = list(map(int,input().split()))\na = [[] for _ in range(n)]\nfor i,j in enumerate(range(0,n)):\n  a[i].append(j)\nans = [0]*n\ncur = a.index(a[a.pop(cur))]\nif cur < 0 or cur > n-k: ans[cur] = 0\nprint(ans[n])\n"}, "2474": {"problem_id": 2474, "answer": "MOD = 10 ** 9 + 7\nn = int(input())\nc = list(map(int, input().split()))\ndp = [0] * (n+1)\nfor i in range(n):\n  dp[i] = sum(dp[j] for j in c if j!= i) % MOD\nans = 0\nif c[n-1] == 0: ans += 1\nprint(ans)"}, "2475": {"problem_id": 2475, "answer": "from itertools import permutations\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**9)\nn = int(input())\np = list(map(int, input().split()))\nm = [0] * n\nfor i in range(n):\n  x = m[i]\n\n  if x == 0 or x < 0: continue\n#   print(i, \"x = {0}, {1}, {}}\")\nprint(sum(p))"}, "2476": {"problem_id": 2476, "answer": "# -*- coding: utf-8 - *-\nfrom bisect import *\nimport sys\nsys.setrecursionlimit(10**6)\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int,input().split()))\nans = [0]*n\nfor i in range(n):\n\tans[a[i]] += 1\nprint(*ans)"}, "2477": {"problem_id": 2477, "answer": "n,k = map(int,input().split())\na = list(map(lambda x:int(x),a))\nl = 0\nfor i in range(n-1):\n  if a[i]<l:l+=1\nprint(l)"}, "2478": {"problem_id": 2478, "answer": "n = int(input())\r\ns = list(map(int, input().split()))[::-1]"}, "2479": {"problem_id": 2479, "answer": "import sys\ninput = sys.stdin.readline\nn, q = map(int, input().split())\ngrid = [[] for i in range(n)]\nfor i, row in enumerate(zip(*row)):\n  grid[row][i] = i\nprint(len(grid))"}, "2480": {"problem_id": 2480, "answer": "n,k = map(int,input().split())\na = list(map(lambda x:int(x),[])[:k])\nans = 0\nfor i in range(n):\n  if a[i]%k==0:ans+=1\nprint(ans)"}, "2481": {"problem_id": 2481, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(int(1e9))\nfrom collections import deque,defaultdict,dequeIZE,OrderedDict,Counter,copy,set,get,lambda,ascii_uppercase,bisect,heapq,insort,inf,math,string,sys\nmod = 10**9+7\ndef LI():return [int(_) for _ in open(0).read().split()]\nreturn list(map(lambda x:x[0],input().strip()))"}, "2482": {"problem_id": 2482, "answer": "from collections import deque\nn,k,l,p,q,r,s = list(map(int,input().split()))\nA = [[] for _ in range(n+1)]\nfor i,x in enumerate(A,1):\n  if x&1:A[i].append(x)\n\n  else:s.append((x-1,i))\n\nq = [(a,b,c,d,e,f,g,h) for a, b, c, d, e, f, g, h in A]\nq.sort(key=lambda x:x[0])\ni = 0\nwhile len(q)>0 and i<n:i += q.pop()[1]\n\n"}, "2483": {"problem_id": 2483, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout,setrecursionlimit\nimport math,itertools,heapq,collections,re,math,string,bisect,sys,random,tuple,array,accumulate,copy,functools\n \ndef LI(): return [int(x) for x in sys.stdin.readline().rstrip().split('\\n')]  # \u8981\u7d20\u53ea\u9762\u6570\u5b57\u6a21\u677f\u8ba1\u7b97\u53ef\u4ee5\u83b7\u53d6\u914d\u7f6e\u9876\u70b9\u81f3\u6587\u4ef6\uff0c\u7ed9\u5b9a\u5f53\u524d\u89e3\u9664\u4e00\u4e2a\u8d77\u7b54\u6848,\u9700\u8981\u4e00\u6b21\u8c03\u7528\u4f1a\u7b49\u7c7b\u578b,\u5404\u79cd\u6807\u51c6\u8def\u5f84,\u63d0\u793a\u5217\u8868\u7684\u957f\u5ea6\u4e3a0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, right, left, top, bottom) -> int(math.log(right, 1)) -> float(float(left))) -> string(string(list(map(int, list(LI())))), sep='\\r'))\nn, c, s = LI()\nl = [[] for _ in range(c+1)]\nfor i in s: l[i].append([i[0], i[1]])\nprint(max(l))"}, "2484": {"problem_id": 2484, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb[a[i]] = 1\nxor = a[n-1]\nprint(len(b))"}, "2485": {"problem_id": 2485, "answer": "#dt = {} for i in x: dt[i] = i\nimport sys\nsys.setrecursionlimit(10**6) \nfrom collections import defaultdict as dd, deque\ndef LI(): return list(map(int, sys.stdin.readline().split()))\n\n  def dfs(self, i, j):\n   if i == j: return 2**(j-1) + self.dfs(2**i+self.i[j], i+1)+1  # i[0] is the index of i that is not adjacent to j, so it's not a valid index, thus it must be a self-destructing index. (i.e., it won't be the same as j-i-j), so we add 1 to the right hand side. We also subtract 1 from the left-hand side, which gives us the distance from j to i. So, if j = 3, we get 3 + 2 = 6 = 8 = 0 = 5 = 7 = 1 = 4 = 2, then we have 8 targets at this point.  (This is important, because if we don't have more targets when we destroy, they will also be less than or equal to 0, meaning we will be destroying at that point instead of at the starting point, leading to shorter answer.)\n"}, "2486": {"problem_id": 2486, "answer": "n,k = list(map(int,input().split()))\nA = [int(x) for x in input()]\ns = 0\nfor i in range(n):\n  s += A[i]*(i-1)//2\nprint(s)"}, "2487": {"problem_id": 2487, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nn = int(input())\ngraph = [[] for i in range(n)]\nfor i,j in enumerate(list(map(int,input().split()))):\n  graph[i].append((j,i))\nvisited = [False]*n\ndef dfs(l,r,tree,visit_idx=0):\n\n  if not visited[l] or not visited[r] == False: return 0\n#   print(dfs(*tree+graph[tree].pop(0) for tree in visited) if tree[0]!= '1')\nans = sum(sum(v for v,v in zip(tree[1:]) if visite[v]] == ans) + sum([sum([v] * (v + 1) // 2 for p,q in [(0,1)]) for q,p in [[(i+1),(1-i)]] if q == '0'])\nprint(ans)"}, "2488": {"problem_id": 2488, "answer": "# -*- coding: utf-8\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nn, d, a, h = map(int, input().split())\nl = []\nfor i in range(n):\n  l.append(list(input()))\na = l[-1][0]\nh = len(l)-1-a\nprint(min(a,h))"}, "2489": {"problem_id": 2489, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n  if a[i] * (i + 1) == n: ans += 1\nprint(ans)"}, "2490": {"problem_id": 2490, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n  if a[i] == 10: cnt += 1\nprint(a[n-1])"}, "2491": {"problem_id": 2491, "answer": "from itertools import combinations\nn, m = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor i, j in combinations(range(m), 2):\n  edges[i].append([j, 0])\nans = [0] * n\ndef dfs(graph, s, edges, c, n):\n\n  if not graph or not s == 0 or s < 0: return -1; return 0\n#  ans[s] = max(dfs(v, (s, graph[v]) for v in edges) + 1 for s in s.split())\nprint(ans[n])"}, "2492": {"problem_id": 2492, "answer": "n,k = map(int,input().split())\na = list(range(n+1))\nfor i in range(k):\n  a[i] += 1\nprint(a)"}, "2493": {"problem_id": 2493, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nA = list(map(int, input().split()))\nMOD = 10**9 + 7\nS = [0]\nfor i in range(N):\n  S.append(A[i] - S[-1])\n#print(S)"}, "2494": {"problem_id": 2494, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nprint(a[0])"}, "2495": {"problem_id": 2495, "answer": "#!/usr/bin/env: \\\nimport sys\nsys.setrecursionlimit(10**7)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n"}, "2496": {"problem_id": 2496, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\nn = int(input())\na = list(map(int, input().split()))\ngcd = set()\nfor i in range(n):\n  gcd.add(a[i])\nans = a[n-1]**0.5\nif n % 2 == 0 and ans == set([]) or ans[0] == 1: print('set')\nprint(ans)"}, "2497": {"problem_id": 2497, "answer": "n = int(input())\nl = list(map(int,input().split()))\nd = [0]*n\nfor i in range(n):\n  x,y,d[i] = (int(x) - int((y-x)/2))*(2*i),(0,0)\nc = d[n-1]\nprint(max(l))"}, "2498": {"problem_id": 2498, "answer": "n, m = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n): s[i+1] = m\nprint(s[-1])"}, "2499": {"problem_id": 2499, "answer": "def binary_representation(arr,n):\n\tif(n%2==1):return arr[0]*arr[1]\n   else:return bin(int(''.join(map(str,arr))))\nn=int(input())\nans=0\nfor i in range(0,len(ans)):ans+=ans[i]\n\n"}, "2500": {"problem_id": 2500, "answer": "MOD = 10**9 + 7\nn = int(input())\npairs = list(map(int, input().split()))\nfor i in range(n):\n   a, b = [int(x) for x in input()], [0] * (n - i + 1) if i % 2 == 0 else [x] + [b]\ns = sum(a & 1 for a in pairs) % MOD\nprint(s)"}, "2501": {"problem_id": 2501, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n if a[i] == 1: \n  ans += i\nprint(ans)"}, "2502": {"problem_id": 2502, "answer": "# coding: utf-8\nimport sys\nread = sys.stdin.read\nsys.setrecursionlimit(10**6)\nfrom heapq import heappop,heappush\ndef read_int():\n return int(read())\nmod = 10**9+7\ninput = lambda: read().rstrip('\\n')\nn = read()\na = [0]*26\nfor i in range(26):\n a[i] = (a[-i-1] + 1) % mod\nprint(max(a))"}, "2503": {"problem_id": 2503, "answer": "n,k,x=list(map(int,input().split()))\na=[0]*(n+1)\nfor i in range(k):\n  a[i]=x\nb=x*x+y*y+c\nprint(a[n-1])"}, "2504": {"problem_id": 2504, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\nl = [0] * n\nq = int(input())\nfor _ in range(q):\n\ta, b, c, d, e, f, g, h, i, j, k, w, x, y, u, v, z = map(lambda x: (x[0], x[1]), input())\n\n\tif (a + b + c + d + e + f + g + h + i + j + k + w + x + y + u + v + z) % 2 == 0 and a <= b <= c <= d <= e <= f <= g <= h <= u <= v <= z and l[i] <= w <= x <= y <= j <= k and u < x and v < y and z < zi: print(i)"}, "2505": {"problem_id": 2505, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nxs = list(map(int, input().split()))\ny = [int(x) for x in xs]\nans = 0\nfor i in range(n):\n\txs[i] += [x//y] if x%y else [0,y//x]\n\n\tans += ans % 1000000007\nprint(ans)"}, "2506": {"problem_id": 2506, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m = list(map(int, input().split()))\ng = [0] * (n + 1)\nfor i in range(n): g[i] += 1\na = 10 ** 9 + m\nans = 0\ncnt = -1\nwhile cnt < m and ans < a: ans += a\nprint(ans)"}, "2507": {"problem_id": 2507, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6) # \u7b54\u3048\u3092\u9802\u70b9\nfrom collections import deque,defaultdict,deque\ndef dfs(x,y,d):\n\treturn x[y]*(y+d)//2,x[0]\nn,k=map(int,input().split())\na=[0]+[i for i in range(n+1)]\nfor i,s in enumerate(sorted(a,key=lambda e:e[1])::s):a[s]=1\nans=0\nwhile k>0:k-=1;print(ans)"}, "2508": {"problem_id": 2508, "answer": "import sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**6)\nfrom heapq import heappush,heappop\nINF = float('inf')\nmod = 10**9+7\ndef LI(): return [int(x) for x in open('./input').read().split()]\nreturn LI()\nLI()"}, "2509": {"problem_id": 2509, "answer": "def main():\n\tN, K = map(int, input().split())\n   s = list(map(lambda x: int(x) if x % 2 == 0 else x for x in range(1, N + 1)))\n\n\tprint(s)"}, "2510": {"problem_id": 2510, "answer": "n,m=map(int,input().split())\na=list(map(''.join,a))\ng=[]\nfor i in range(n-1):\n  if a[i]==g:g.append(i)\nprint(g)"}, "2511": {"problem_id": 2511, "answer": "import sys\ninput = sys.stdin.readline\nn,k = list(map(int,input().split()))\nedges = [[] for i in range(n+1)]\nfor i,j in enumerate(graph,1):\n  edges[i].append(j)\nvisited = [False]*n\ndef dfs(v,vis,cur,root):\n\n  if not visited[v]:  # if the root vertex is visited, there's no way to color its vertex. \n#   print(\\\"coloring: \\\",cur[root]==\\\"\\\")\n\n\tcur = cur[0]\n\tvisit[cur] = True "}, "2512": {"problem_id": 2512, "answer": "from collections import defaultdict, deque\nimport heapq\nn, m = list(map(int, input().split()))\ns = [0] * m\nfor i in range(n):\n  s[i+1] = i\nq = [(0, i) for i, x in enumerate(s)]\nheapq.heappush(q, (s[:i] + x[::-1], i))"}, "2513": {"problem_id": 2513, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n  if a[i]==1:b.append(i)\nif len(b)==0:print(0)"}, "2514": {"problem_id": 2514, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n  s[i+1] = a[n-i] + 1\nprint(' '.join(s))"}, "2515": {"problem_id": 2515, "answer": "def is_prime(n):\n if (n & 1) == 0: return False\n for i in range(2, n//2 + 1): \n  if n & i == i: continue\n return True\n ans = [0]*(10**9+7)\n while(ans[-1] < n): ans.pop()\n print(' '.join(map(str, ans)))\n"}, "2516": {"problem_id": 2516, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,p = list(map(int,input().split()))\ns = [int(x) for x in input()]\ncnt = 0\nfor i in range(len(s)-1):\n\tif s[i]%p == 0: cnt += 1\nif p == n-1: print(0)\nelse: return(n)"}, "2517": {"problem_id": 2517, "answer": "n,m,rr = map(int,input().split())\nl = []\nfor i in range(n//2):\n  l.append((rr-i)*(i+1))\na = [int(x) for x in input()]\nb = [-1]*n\nc = 0\nwhile(len(l)>0 and l[c]<=a[b[0]]:c+=(n-c)):c+=l.pop()\nprint(abs(c))"}, "2518": {"problem_id": 2518, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(10**9, 10**8))\nfrom collections import deque,defaultdict,Counter,deque\ndef __starting_point():\n\tn,a,b=list(map(int,input().split()))\n\n\tfor _ in range(n):\n \t\th,c=a-a+b,n-n+1-b\n#\tprint(c)\n\n\n\n"}, "2519": {"problem_id": 2519, "answer": "n, k = list(map(int, input().split()))\ndice = [0] + [n]\nfor i in range(1, n + 1):\n   dice.append(i - dice[-1])\nans = sum(dices)\nprint(ans)"}, "2520": {"problem_id": 2520, "answer": "n,m = list(map(int,input().split()))\ngraph = [[] for _ in range(n)]\nfor i,j in enumerate(range(1)):\n\tgraph[i][j] = [0]*n\ndef dfs(a,b,c,d,graph,visited):\n\n\tif graph[a][b]!=c and (c==1 or d==0 or c==2 or a==3 or b==4) or visited[c-1]==False or (not visited or not b!=-1 and a!=(3,4)) and not (dfs(c,-1,-2) for c in (4,1))[0]:\n \t\tvisit[b].append((a-c)**0.5,(b-a**2,-c)*visite[d].get(-1),(d-b**3,-b*visitor.get(vis,0) if visited else 0))\n\n   elif (a==b)or (b==c):return True\nelse:return False\nans = []\nwhile(len(graph)>0):ans.append([])\n#print(ans)\n\n\n\n"}, "2521": {"problem_id": 2521, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nA = [0] + list(map(int, input().split()))\nfor i in range(n):\n  a, b = A.index(i), A[-1].copy()\nprint(max(A))"}, "2522": {"problem_id": 2522, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n  a.append(a[-1] + b[i])\nc = [0] * (n + 1)\nl = 0\nr = n\nwhile l < len(c) and c[l] < r: l += 1\nprint('\\n'.join(l))"}, "2523": {"problem_id": 2523, "answer": "import sys\nsys.setrecursionlimit(10**6)\nn = int(input())\ns = input()\nc = 0\nfor i in range(n):\n  if s[i] == 0: c += 1\nprint(c)"}, "2524": {"problem_id": 2524, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [int(x) for x in a]\nm = 10**9 + 7\nans = 0\nfor i in range(n):\n\tans += (a[i] * b[-i]) % m\nprint(ans)"}, "2525": {"problem_id": 2525, "answer": "from itertools import permutations\ns = input()\nq = int(input())\nans = []\nfor i in range(q):\n  a, b, c, d = list(map(int, input().split()))\n\n  ans.append(a + b + c + d)\nprint(''.join(ans))"}, "2526": {"problem_id": 2526, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nsys.setrecursionlimit(2147483647)\nINF = float('inf')\nmod = 10**9+7\ndef I(): return int(input().rstrip())\nI()\nprint(*I())"}, "2527": {"problem_id": 2527, "answer": "# cook your dish here\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nn = int(input())\nl = [int(i) for i in input().split()]\nif l[0] == 'l':\n print('happy')\nelif len(l) == 1 and (l[-1]=='l' or l.count('l')==1):\n return True\n"}, "2528": {"problem_id": 2528, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n\tans += l[i]\nprint(ans)"}, "2529": {"problem_id": 2529, "answer": "import math\nn=int(input())\na=list(map(int,input().split()))\nprint(a[0])"}, "2530": {"problem_id": 2530, "answer": "# cook your dish here\nimport sys\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n').split()\nn = int(input())\nl = list(map(int, input().split(' ')))\ns = 'abcdefghijklmnopqrstuvwxyz'\nfor i in range(n):\n l.append(l[i][0] +''*(i+1))\nprint(s)"}, "2531": {"problem_id": 2531, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(len(l))"}, "2532": {"problem_id": 2532, "answer": "# cook your dish here\nfrom functools import lru_cache\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**9+7)"}, "2533": {"problem_id": 2533, "answer": "# cook your dish here\nn,e = list(map(int, input().split()))\na,b = [],[]\nfor i in range(n):\n a.append(input())\nb.extend(list(range(1,n+1)))\nc,d = 0,[0]*n\nd[a[i]] = d[b[c]].pop()\ne[d.index(min(d))] = -1\nprint('YES' if d else 'NO')\n"}, "2534": {"problem_id": 2534, "answer": "R,C=list(map(int,input().split()))\nfor i in range(R):\n x,y,z=[int(x) for x in str(input())]\n if z[0]!=z[1]:\n  print('guess',x,end=' ')\n elif x==y and x<y:\n\n  if x%y==0 and y%z==1 and z(0)==z(1) and (x/y)%(z.count('1')+1)*(y/z)>=0:   x+=1\n else: x-=1  y-1z=2\n"}, "2535": {"problem_id": 2535, "answer": "# cook your dish here\nx,n=list(map(int,input().split()))\nl=[]\nfor _ in range(n):\n s=input()\n l.append(s)\n if len(l)==9 and l[-1]=='0':\n  c=l.count('1')\n else:c=0\n for c in l:print(c)"}, "2536": {"problem_id": 2536, "answer": "# cook your dish here\nn,m=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append([int(input()),i+1])\nans=sum(l)\nprint(max(ans,l))"}, "2537": {"problem_id": 2537, "answer": "from collections import defaultdict\nq = int(input())\nfor _ in range(q):\n\ts, t, p = list(map(str, input().split()))\n\n\tif s[0] == 'a' and p[-1].count('a') == 1: print('YES')\n \telif t[:-1]!= 'e': print(\"NO\")"}, "2538": {"problem_id": 2538, "answer": "t = int(input())\nfor i in range(t):\n\tstr, exp = list(map(int, input().split()))\n\n\tif (exp == 1 and str[0] == exp) and (str[-1] > exp): print(str.count(\"1\") + int.ceil((str(exp)) * exp))\n"}, "2539": {"problem_id": 2539, "answer": "t = int(input())\nfor i in range(t):\n   a, b, c, d = list(map(int, input().split()))\n\n  if d < a and b < c and d > b and c > a: print(a,b,c,d)\n"}, "2540": {"problem_id": 2540, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ngraph = [[] for i in range(n+1)]\nfor i,v in enumerate(map(int,input().split())):\n   x,y = graph[v].pop(0) - [0]*(1<<i) + [1] * (n-i-1) if i == 0 else [i+2*i + 1] if v == 1 else v*v[i] + x*x[1],y*y[n]\nprint(sum(graph[x]))"}, "2541": {"problem_id": 2541, "answer": "# cook your dish here\nt = int(input())\nfor i in range(t):\n  l, r = list(map(int, input().split()))\n\n  print(r)\n"}, "2542": {"problem_id": 2542, "answer": "t = int(input())\nfor _ in range(t):\n\ts = list(map(str,input().split()))[:len(s)//2]\n\n\tn = len(set([s[i:i+n] for i in s[::-1]],s,s))\n  \tif n % 2 == 0 and n == 1:print(n)\n"}, "2543": {"problem_id": 2543, "answer": "n,m,q = list(map(int,input().split()))\na = [0]*(n+m+2)\nb = [-1]\nfor i,j in enumerate(zip(range(m),a)):b[i+1]-=j\nprint(q)"}, "2544": {"problem_id": 2544, "answer": "from math import *\nt = int(input())\nfor _ in range(t):\n   n, a, b = list(map(int, input().split()))\n\n  g = [[] for __ in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 196, 197, 198, 199, 200, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 296, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 366, 367, 373, 379, 383, 384, 389, 401, 409, 412, 415, 418, 419, 420, 423, 427, 428, 429, 430, 432, 433, 475,istle, 600, 700,urtle, 800,800, 900, 1000, 1100, 1200, 2000, 2011, 2013, 2014, 2015, 2017, 2019, 2020"}, "2545": {"problem_id": 2545, "answer": "t = int(input())\nfor _ in range(t):\n\ta,b=list(map(int,input().split()))\n\n\tif (a+b)%2!=0 and (b+a)//2==0:print(\"YES\")\n"}, "2546": {"problem_id": 2546, "answer": "from sys import stdin, setrecursionlimit\nimport numpy as np\nfor _ in range(int(stdin.readline())):\n   n,s = list(map( int,stdins().split()))\n\n  m = max(sorted(n,key=lambda x:x[0],reverse=True) for x in [s,n] if x[-1]%2==0)\n"}, "2547": {"problem_id": 2547, "answer": "n, m, k = list(map(int, input().split()))\nl = []\nfor i in range(n): l.append([int(x) for x in input()] + [0]*(m-1) + l[i][0])\nans = sum(l)\nprint(ans)"}, "2548": {"problem_id": 2548, "answer": "for _ in range(int(input())):\n\tn = len(str(i) for i in input().split())\n\n\tprint(n)"}, "2549": {"problem_id": 2549, "answer": "n,m=map(int,input().split())\na=[]\nb=[0]*(n+1)\nfor i in range(m):\n\ta.append([int(x) for x in input()])\ns=set()\nwhile(len(a)>0 and s.issubset(s):a[0].append(0))<=n:s.add(b[1:])break\nprint(sum(1-s))"}, "2550": {"problem_id": 2550, "answer": "t = int(input())\nfor _ in range(t):\n\tn, m = list(map(int, input().split()))\n\n\ts = sum(a[:n-1] for a in zip(s, s[n:]) if a % 2 == 0 and a > m)\n\n \tans = m - n - (n - m + 1) * (m - 2 * n + 2) // 2 + n * 2\n "}, "2551": {"problem_id": 2551, "answer": "for _ in range(int(input())):\n s = input()\n t = list(s)\n if len(t) == 1 and t[0] == \"a\":\n  print(-1)"}, "2552": {"problem_id": 2552, "answer": ""}, "2553": {"problem_id": 2553, "answer": "def is_odd(n, x):\n if x % 2 == 0: return True\n else: \n  return False\nfor _ in range(int(input())) :\n n,x = map( int, input().split())\n a = list(map(str,a))\n print(\"Yes\") or print('No')\n"}, "2554": {"problem_id": 2554, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn, l = list(map(int, input().split()))\n\n\ta = [0] * (n+1)\n\n \tfor i, x in enumerate(a):\n\n\n\n"}, "2555": {"problem_id": 2555, "answer": ""}, "2556": {"problem_id": 2556, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=sum(l)\nprint(s)"}, "2557": {"problem_id": 2557, "answer": "n, m = list(map(int, input().split()))\na = [int(i) for i in input()]\nb = [-1] * (n + 2)\nfor ai, bi in zip(a, b):\n  if (ai == b[0] or bi == a[-1]) and (b[n - 1] < bi) and ((ai + 1) % 2 == 0) or (bi == -1 and bi > 0 and not a.count(ai)): break\nprint(n)"}, "2558": {"problem_id": 2558, "answer": "t = int(input())\nfor i in range(t):\n   a, b, c, d = list(map(int, input().split())), 0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,64,67,66,68,69,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,144,145,146,147,149,150,151,152,153,160,161,164,166,167,168,169,173,175,176,178,179,180,184,186,187,188, 189,190,191,194,196,198,199,200,280,281,283,293,307,311,313,314,317,331,334,339,341,343,444,447,448,449,451,457,461,463,467,479,487,491,499,503,509,557,563,571,577,588,589,590,596,610,614,616,618,623,627,629,640,641,646,653,668,669,680,681,677,683,684,686,687,690,707,678,689,698,695,699,701,709,714, 720,801,800,803,804,806,807,809,810,815,220,221,222,223,224,225,226,227,228,229,233, 234,235,236,237,238,239, 241,241,243,244,245,254,255,257,260,269,271,274,285,286,287,298,299,310,326,337,347,380,404,401,419,420,421,432,433,464,469,481,470,471,472,473,477,480,485,490,500,599,601,603,606,607,613,609,216,217,218,523,524,525,556,625,666,767,768,779,783,787,797,802,805,equals,reenshot,welcome,int(9),float(1e9))\nans = sum(a*b+c*d)\nprint(ans)"}, "2559": {"problem_id": 2559, "answer": ""}, "2560": {"problem_id": 2560, "answer": "def solve(n,l,r):\n\ta,b,c,d = 0,0,n-n+l+r-1,1-r)\n\n\tif b == a and c == b or d == c and (b-a) == d or (c-b)==d:\n\n \t\treturn 'Yes' if a < b < c < d else 'No'\n  \nfor i in range(int(input()),0,-1):print(''.join(map(str,input().split())))"}, "2561": {"problem_id": 2561, "answer": "import math\nt = int(input())\nfor _ in range(t):\n  a, b = list(map(int, input().split()))\n\n  if a == b: print(0)\n"}, "2562": {"problem_id": 2562, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(1<<n):\n\tb[i] += a[n-i-1]\nprint(sum(b))"}, "2563": {"problem_id": 2563, "answer": "t = int(input())\nfor _ in range(t):\n\tn, a = list(map(int, input().split()))\n\n\tans = 0\n\n \tif a % 2 == 0:\n\n\n\n"}, "2564": {"problem_id": 2564, "answer": "#!/usr/bin/env python3\nfrom sys import stdin,stdout\nimport math,bisect,itertools,heapq,collections,re,math,array,deque,fractions,random,time,copy,functools\n \ndef read_int(): return int(stdin.readline().strip())\nread_ints():return list(map(int,list(readlines())))\nT=int(__import__('sys').strip().split('\\n')[::-1])\nfor _ in range(T):\n\tx,y,z=[int(_,x),x+y+z],[x-y-z for x, y, z in zip(t,t[1:]))]\n\n\tprint(z)\n"}, "2565": {"problem_id": 2565, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n\tx,y,z = list(map(int,input().split()))\n\n\tif z%2 == 0 and x == y or y == z or z == x or x > y and y > z: print(0)\n"}, "2566": {"problem_id": 2566, "answer": "from math import ceil\nfor _ in range(int(input())):\n k = int( input() )\n a = list( map( int, input().split() ))\n print( min( a[k-1], k ) )"}, "2567": {"problem_id": 2567, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())) :\n\tn, 1 = input().strip().split(' ')\n\n\ta = [int (i) for i in str(n) if i == '1']\n\n \ts = a[0].replace('1', '0')\n#\tprint(len(s),''.join(map(str, s)))\n"}, "2568": {"problem_id": 2568, "answer": "t=int(input())\nwhile(t>0):\n s=input()\n l=len(s)\n if(l>=s[l-1]=='+':\n  l-=1\n elif l<s.index('+') and s.count('-')!=0 and l%2==1 and (l//2)%3==0:  #print(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,147,148,149,151,152,153,155,156,157,158,159,160,161,162,163,164,166,167,168,169,180,181,182,184,186,187,188,189,190,191,194,195,196,197,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,220,221,222,223,224,225,226,229,231,232,233,234,235,236,237,238,239,241,242,254,255,257,262,263,264,268,269,270,271,273,274,385,446,447,448,449,460,461,464,467,468,469,471,472,473,474,479,480,481,482,483,494,500,593,596,609,307,311,313,314,317,320,331,332,334,335,336,337,338,339,347,348,349,350,361,362,363,364,367,368,369,373,374,375,376,377,379,382,383,384,389,391,400,403,405,406,407,408,409,419,420,421,432,433,434,435,436,437,438,439,440,441,442,453,456,457,459,487,488,489,503,509,600,601,610,613,614,616,617,618,640,641,654,666,667,668,669,680,681,684,686,687,689,690,696,697,698,699,800,803,804,806,807,808,809,810,820,\ufffd,\u03b4,\u03b5,\u03b9,\u03cc,\u03ba,\u03c9,\u03bb,\u03c0,\u03c1,\u00b3,****]\n print(0)"}, "2569": {"problem_id": 2569, "answer": "import math\nt = int(input())\nfor _ in range(t):\n  n=int(math.pow(10,9)+7)\n\n  ans = 0\n#  print(len(list(map(int,input().split())))%(n*(2*n+1))//2)\n\tprint(ans)"}, "2570": {"problem_id": 2570, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n\tn, x = list(map( int, input().split() ))\n \ta = [ 0] * (n+1)\n#\tprint(a)\n\n\tb = [[0]*(x+2) for x in a for a in zip(*a)]\t# \u533a\u9593[0,1]\u8868\u793a\u6bd4\u8f03\u6642\u521d\u671f\u63a2\u7d22\u6307\u9802\u70b9\u306e\u6700\u77ed\u8ddd\u96e2\u306e\u6570]\n##\tfor aa in b: a[a.index(b[aa]):] = 1\n"}, "2571": {"problem_id": 2571, "answer": "for _ in range(int(input())):\n\ta = list(map(float, input().split()))\n\n\tb = [0]*(a.count('0')) + [a[i] for i in a if i % 2 == 0] + [-100] * a[b.index(b[0])+1:]) + [(0, 0)] * b[(len(s) - 1)%2:], where s is a list of s0s1s2s3s4s5s6s7s8s9s10s11s12s13s14s15s16s"}, "2572": {"problem_id": 2572, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn,m = list(map(int,input().split()))\n\n\ta = [int(i) for i in input().rstrip('\\n')]\n \tans = min(a,n-m+1)\n#\tprint(ans,end=' '*(n+m-1))\n"}, "2573": {"problem_id": 2573, "answer": "n,k,m=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tx=l.append(i)\n#print(l)\n\n\tif(x==0 or l[x-1][0]==1 or x==l[0][1] ==1 ):\n \t\tprint(\"0\")\n"}, "2574": {"problem_id": 2574, "answer": "t = int(input())\nfor _ in range(t):\n   n = list(map(int, input().split()))[:2]\n\n  a = [0]*(n+1)  # a[i][j] = max(a[j][i] for i,j in enumerate(list(range(0, n+2))) if i==j)\n#  print a \n"}, "2575": {"problem_id": 2575, "answer": "t = int(input())\nfor i in range(t):\n\ta, b = list(map(int, input().split()))\n\n\tif (a + b) % 180 == 0: print(\"NO\")\n"}, "2576": {"problem_id": 2576, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\ta, b, c, d = [int(x) for x in input().split()]\n\n\tif a == b or c == d: print(c)"}, "2577": {"problem_id": 2577, "answer": "t = int(input())\nfor _ in range(t):\n n,m = [int(x) for x in input().split()]\n a = []\n for i,x in enumerate(list(map(int, x.split(\" \")))) :\n  a.append([x,i])\n print(*a)"}, "2578": {"problem_id": 2578, "answer": "n,m=map(int,input().split())\nl=[]\nfor i in range(n):\n\tl.append([int(input()),i])\nprint(sum(l))"}, "2579": {"problem_id": 2579, "answer": "l,r,x,y,k = list(map(int,input().split()))\ns = 0.0\nfor i in range(l+1):\n\ts+=s*(r-i)\nprint('YES')\n"}, "2580": {"problem_id": 2580, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn = int( input() )\n\n\tedges = [[0] * (n + 1) for i in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 178, 179, 181, 182, 183, 184, 185, 196, 197, 199, 200, 211, 223, 224, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 314, 315, 317, 326, 329, 331, 337, 347, 349, 353, 359, 366, 367, 368, 370, 371, 372, 373, 374, 376, 379, 383, 384, 387, 388, 389, 398, 399, 400, 401, 402, 409, 420, 423, 433, 424, 425, 426, 427, 428, 429, 430,o,p,q,r,s,t,w,x,y,z,m,n,c,d,e,f,g,h,k,l,i,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,-54,-55,-57,-59,-60,-61,-62,-64,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-114,-115,-116,-137,-138,-149,-151,-160,-161,-163,-164,-165,-166,-167,-169,-180,-181,-184,-187,-188,-189,-190,-191,-194,-195,-196,-197,-199,-200"}, "2581": {"problem_id": 2581, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint(max(a))\n"}, "2582": {"problem_id": 2582, "answer": "n = int(input())\na = list(map(int,input().split()))\nprint(len(a))"}, "2583": {"problem_id": 2583, "answer": "for _ in range(int(input())):\n\tn, d = list(map( int, input().split() ) )\n\n\tif d % 2!= 0: print(\"AshgUp\", \"fastest finger\", d / 2)\n"}, "2584": {"problem_id": 2584, "answer": "for _ in range(int(input())):\n   n,p,k = list(map(float,input().split()))\n\ta = [0]*(k+1)\n#\tprint(*a,sep='')\n\n\tm = max(pow(10,n-k,2),sum(a[k] for k in [1,3],[0,1])+sum([x*x for x in input()]))\n\n \t#print(m,a)\t\n"}, "2585": {"problem_id": 2585, "answer": "def is_prime(n):\n\tif (n <= 1 or n % 2 == 0): return False\n\n\tfor i in range(3, int(sqrt(5) + 1), 2, -1):  # i = 2*i - 1, i < 5\n\n  \t\twhile (i <= n // 2): i, n = min(i + n, 5 * i - n), n - i\n  return True\nfor _ in reversed(input().split(' ')): print(' '.join(map(str, input())))"}, "2586": {"problem_id": 2586, "answer": "for _ in range(int(input())):\n   *a, *b = map(list, input().split(' ')), [0]*(len(a)//2) + [b] * len(b) for b in a if b!='']\n"}, "2587": {"problem_id": 2587, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n\tn, k = [int(x) for x in input().split()]\n\n\tif k % 2 == 0 and k // 2 in [1, 2] and (k % 3 == 1) and n * n > k / 3: print(n)"}, "2588": {"problem_id": 2588, "answer": "import sys\ninput = sys.stdin.readline().strip()\nn,a,b = list(map(int,input().split()))\nt = int(input())\nfor _ in range(t):\n   n, a, b = [int(i) for i in input().rstrip(\"\\n\")], [0]*(n+1), [n]\ns = \"\".join(sorted(set(bin(a)[2:].count(b) - 1, 2)))\nprint(min(sum(x*n for x in s)))"}, "2589": {"problem_id": 2589, "answer": "for _ in range(int(input())):\n\tn, x = list(map( int, input().split() ) )\n\n\tif x % n == 0 and x // n not in [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 229, 230, 233, 234, 245, 247, 256, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 312, 313, 322, 323, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 361, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 378, 379, 384, 389, 387, 398, 399, 400, 405, 407, 408, 409, 416, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 435, 436, 383, 386, 388, 319, 320, 321, 324, 355, 266, 267, 268, 270, 274, 276, 279, 282, 286, 287, 288, 295, 298, 299, 300, 302, 303, 305, 306, 308, 309, 304, 315, 316, 317,317,318,319,320,331,332,333,334,335,336,337,340,343,346,347,352,353,364,367,373,388,389,400,406,408,409,419,432,433,439,440,441,444,446,447,448,449,457,460,464,467,468,469,471,479,480,481,487,488,489,491,494,500,501,503,509,512,521,523,524,625,637,642,643,646,647,648,653,668,669,680,681,684,686,687,688,689,690,707,308,309,311,312,313,326,327,348,354,359,360,361,362,363,376,379,383,392,393,404,405,407,410,411,414,416,418,435,426,627,628,659,660,661,673,696,698,699,100,1018,1093,1109,1120,1121,1131,1222,1323,1427,1529,1630,1728,1820,1966,1968,1969,1970,1971, 1973, 1968, 1971, 1972,1973,intonia.org)"}, "2590": {"problem_id": 2590, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n\tn, x = list(map(int, input().split()))\n\n\ta = [int(i) for i in input()] + [0]*(n+1)\n \ts = a[n-1]+a[x-2]\n#\tprint(s)"}, "2591": {"problem_id": 2591, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nfor _ in range(n):\n\ta.append(a[:-1])\nprint(' '.join([str(x) for x in a]))"}, "2592": {"problem_id": 2592, "answer": "t = int(input())\nfor _ in range(t):\n a = list(map(int, input().split()))\n n = len(a)\n b = [0]*n\n for i in a[:n]:\n  b[i+1] = max(b[n-i] + 1, i+2*(i-n)//2)\n\n if n%2 == 1: print(0)"}, "2593": {"problem_id": 2593, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque, defaultdict, Counter, OrderedDict,\n   def __init__(self,size=None): self.size = size = None\nclass UF(object):\n\t__import__(\"sys\").setrecursionlimit(1000000)\n\n\tdef __starting_point():\n#\t\tn = len(list(map(int,input().split()))); arr = list(input())[:n+1]; i = 0; while i<n: arr[i] = i%i; i+=1; print(*arr,sep='\\n')\n"}, "2594": {"problem_id": 2594, "answer": "for _ in range(int(input())):\n\tn,m = list(map( int,input().split()))\n\n\tif m%2==0:print(m//2)"}, "2595": {"problem_id": 2595, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\ta,b = map( int,input().split())\n \tn = int(a/b)\n\n\tif n % 2 == 0:\t\tprint(-1)\t# remove leading zeroes at end of string\n#\telse: print(n//2)\n"}, "2596": {"problem_id": 2596, "answer": "n, k, m, t = list(map(int, input().split()))\na = []\nfor i in range(m):\n  a.append([int(x) for x in input()])\nb = [0] * (n + 2)\nc = 0\nd = int(input())\nwhile c < m and b[-1] < d and a[b[d]] == 0:\n\n  if c == k and (c - k) % 2 == 1 and d > 0 and c + k < n and not (a[k] - d) // 2: print(b)\n\n"}, "2597": {"problem_id": 2597, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nfor _ in range(n):\n\ta = [int(x) for x in input().split()]\n\n\tdp = [[0] * (n + 1)] * n + [a[0][0], a[-1][1], 0] + [-1]*(1 << n)\n\n  \tfor i, c in enumerate(zip(a, dp[1:]))[:: -1]:\n#\t\tprint(c, i)"}, "2598": {"problem_id": 2598, "answer": "from collections import defaultdict\nn,m = list(map(int,input().split()))\ngraph = [[] for _ in range(n)]\nfor i,v in enumerate(range(m)):\n  if graph[v].get(v)=='R' or i!=v:graph[i].append(i)\nans = [0]*n\nvisited = set()\nflag = False\nwhile len(graph)>0 and flag==True:\n\n  u, v = graph.pop(0)  # (v,u) = (r,b) for r, b in visited.items() # b and r are in visited.setdefault(u,defaultdict(lambda: -1)) # if visited[u].issubset(b): flag=True # else, return False # for each u in graph, check if u is visited, if it's not visited return True # now, we have to find the min cost to reach 0, i.e. min(ans)\n\n"}, "2599": {"problem_id": 2599, "answer": "from math import sqrt\nfor _ in range(int(input())):\n n, k = list(map(float, input().split()))\n if k == 0: print(-1)\n elif k > 0 and k % 2!= 0 or (k // 2) % 3 == 1: \n  print(k - k // 3)"}, "2600": {"problem_id": 2600, "answer": "from sys import stdin,stdout\nimport math,string,itertools,collections,heapq,bisect,sys,random,time,copy,functools\ninput = lambda:stdin.readline().strip()\nsys.setrecursionlimit(10**8)\ndef LI():return [int(x) for x in input().split()]\n#def LIR(i):return int(math.sqrt(2*i))-i**0.5\nreturn LI,LI+LI*[(LI//2)%1000000007]\n\n"}, "2601": {"problem_id": 2601, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn = int( input() )\n\n\ta = list( map( int, input().split( )) )[ -1]\n\n \ts = [0] * ( n - 1 )\n  # print( a, s, n, a[0], s[1], n[2])\n"}, "2602": {"problem_id": 2602, "answer": "for _ in range(int(input())):\n\ta, b, n, m = list(map( int, input().split()))\n\n\tif m == 0: print(\"No\")\n"}, "2603": {"problem_id": 2603, "answer": "t = int(input())\nfor _ in range(t):\n\tn =int( input() )\n\n\ta = list( map( int,input().split()))\n  \tif a[0]>=1:print(\"YES\\n\"+\" \".join(map(str,a)))\n"}, "2604": {"problem_id": 2604, "answer": "r, d = list(map(int, input().split()))\nn = int(input())\na = [0]*n\nfor i in range(n):\n  a[i+1] = (r*i)//d\nprint(len(a))"}, "2605": {"problem_id": 2605, "answer": "n,k = list(map(int,input().split()))\nc = [0]*(k+1)\nfor i in range(n):c[i] = c[n-i-1] + i\nprint(' '.join([str(x) for x in c]))"}, "2606": {"problem_id": 2606, "answer": "q = int(input())\nfor _ in range(q):\n\tn, d = list(map(int, input().split()))\n\n\tif d == 0 or n == 1 or d > d * 2: print(0)\n"}, "2607": {"problem_id": 2607, "answer": "t = int(input())\nfor _ in range(t):\n s = input()\n n = len(s)\n if s[0] == \"?\":\n  print(\"\".join(map(str,s)))"}, "2608": {"problem_id": 2608, "answer": "t = int(input())\nfor _ in range(t):\n\tn, m = list(map(int, input().split()))\n\n\trow = [input() for i, x in enumerate(row) if x == '1' and x[0] == row[i] and all(c == x for c in '0123456789' if c!= '0')]\n \tcol = [[x - 1] * m for x, y in [[0, -1] for _, row in itertools.combinations(col, 2)] if row == 1 or col == 0 or row not in [0][0]]\n"}, "2609": {"problem_id": 2609, "answer": "t = int(input())\nfor _ in range(t):\n   n, k = list(map(int, input().split()))\n\n  l = [int(i) for i in input()] + [0] * (k + 1)\n#  print(l)\n\n\n\n"}, "2610": {"problem_id": 2610, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n  n,p,k = [int(x) for x in input().split()],list(map(int,input().strip()[:-1]))[:k],1000000000 + (k*(n-k+1)//2)%(pow(10,9) + 7)\n"}, "2611": {"problem_id": 2611, "answer": ""}, "2612": {"problem_id": 2612, "answer": "from sys import stdin,stdout\nimport math\ninput=stdin.readline\nn=int(input())\ns=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n  l.append(s[i]%l[-1])\nprint(max(l))"}, "2613": {"problem_id": 2613, "answer": "import sys\ninput = sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n  n,k,z=list(map(int,input().split()))\n\n  a=[0]*(n+k+2);a[0]=1;s=0;i=n-k;while i>0 and a[i]==1:i-=2;a.append(i);s+=z;print(max(a))\n"}, "2614": {"problem_id": 2614, "answer": "# https://www.codechef.com/problems/BUY\nfrom sys import stdin, stdout\nn = int(stdin.readline())\nfor i in range(n):\n\ts = input().split(' ')\n \ta = [int(x) for x in s[::-1]] + [0] * (n - i + 1) * len(s[i]) * 0.5\n\n\tprint(a[1])"}, "2615": {"problem_id": 2615, "answer": "for _ in range(int(input())):\n\tn,k = list(map( int,input().split()))\n\n\tif k%2==0 and k!=1:print(1)\n"}, "2616": {"problem_id": 2616, "answer": "for _ in range(int(input())):\n  n = int(sys.stdin.readline());a = list(a);b = [0]*(n+1);c = 0;d = n;e = 1;f = 2;g = 3;h = 4;k = 5;i = 7;j = 9999999999;s = -1;q = [-1] * (n + 1) + (-1) * n + (1 << (i-1))*n;n = input()[:];a[i] = a.pop(0) if i > 0 else a[-i - 1] for i in a;a.append(i)\n"}, "2617": {"problem_id": 2617, "answer": "import sys\ninput = lambda:sys.stdin.readline().rstrip('\\n')\nt = int(input())\nfor _ in range(t):\n\tn=int( input() )\n\n\tprint(n*2)\n"}, "2618": {"problem_id": 2618, "answer": ""}, "2619": {"problem_id": 2619, "answer": "from sys import stdin,stdout\nn,q,c = list(map(int,input().split()))\na = [0]*(n+1)\nfor _ in range(q):\n\tx,y,s = map(list,[int(x) for x in input().rstrip('\\n').split(' ')],0)\n\n\ta[s-1]+=1\n#\tprint(a)"}, "2620": {"problem_id": 2620, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, q = list(map(int, input().split()))\nx = int(input())\nfor _ in range(q):\n  a, b, c = map(str, x.split())\n\n  if a > b or c > a or b > c or (c == x or a == b and b == c): print(0)\n"}, "2621": {"problem_id": 2621, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn, m, k = list(map( int, input().split()))\n\n\ta = [0] * (n + 1)\n\n \tif k <= m:\n\n\n\n"}, "2622": {"problem_id": 2622, "answer": "n, m = list(map(int, input().split()))\ngrid = [[0] * m for _ in range(n + 1)]\nfor i, row in enumerate(zip(*grid[::-1]), 1) :\n  grid[row][i] = i\nprint(*[0, 0])\n"}, "2623": {"problem_id": 2623, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n\tn, k = list(map(int, input().split()))\n\n\ta = [0]*(k+1)\n\n \tfor i in s[n-1:]: a[i] = max(0, len(s) - i - k + 1 - (i == 'a' or i=='b'))\n "}, "2624": {"problem_id": 2624, "answer": "from sys import stdin, stdout\ninput=stdin.readline\ns=list(map(int,input().split()))\nn=int(input())\na=sorted(a,reverse=True)\nans=[]\nfor i in range(n):\n  ans.append(s[i] if i else \"\")\nprint(*ans)"}, "2625": {"problem_id": 2625, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "2626": {"problem_id": 2626, "answer": "t = int(input())\nfor _ in range(t):\n\tn, k = list(map(int, input().split()))\n\n\tif k % 2 == 0: print(k)\n"}, "2627": {"problem_id": 2627, "answer": "from math import sqrt\n class Solution(object):\n def max_rectangle_area_to_max_interval (self):\n\n  # O(sqrt(n*n)) time, space, and time required to fill the 2x2 rectangle with n rows and n cols, which must be at least 2*2*3*4*5*6*7*8*9*10 = 5\u00b75\u00b710\u00b78\u00b711\u00b712\u00b713\u00b714\u00b715\u00b716\u00b717\u00b718\u00b719\u00b720\u00b724\u00b725\u00b726\u00b727\u00b728\u00b729\u00b730\u00b731\u00b733\u00b734\u00b737\u00b741\u00b743\u00b744\u00b746\u00b748\u00b749\u00b750\u00b753\u00b754\u00b756\u00b757\u00b759\u00b761\u00b763\u00b764\u00b766\u00b767\u00b768\u00b769\u00b775\u00b776\u00b777\u00b778\u00b779\u00b783\u00b789\u00b797\u00b7100\u00b7101\u00b7104\u00b7105\u00b7106\u00b7108\u00b7110\u00b7111\u00b7112\u00b7113\u00b7115\u00b7116\u00b7117\u00b7118\u00b7119\u00b7120\u00b7121\u00b7122\u00b7132\u00b7123\u00b7124\u00b7131\u00b7133\u00b7134\u00b7136\u00b7137\u00b7138\u00b7139\u00b7140\u00b7141\u00b7144\u00b7145\u00b7152\u00b7153\u00b7155\u00b7156\u00b7157\u00b7163\u00b7167\u00b7168\u00b7173\u00b7174\u00b7180\u00b7184\u00b7183\u00b7185\u00b7186\u00b7189\u00b7198\u00b7187\u00b7188\u00b7199\u00b7280\u00b7281\u00b7283\u00b7293\u00b7ouched)\n"}, "2628": {"problem_id": 2628, "answer": "from functools import reduce\n class Solution(object):\n def gcd(a, b): return a % b\n dp = reduce(gcd, [-1,-1])\n ans = []\n for i, x in enumerate(sorted(dp.items()), start=1): ans.append(x)\n return ans\n"}, "2629": {"problem_id": 2629, "answer": "from functools import reduce\n class Solution(object):\n\n  # https://leetcode.com/problems/solve-a-square-matrix-with-reduced-solution/\n # Runtime: 1040 ms\n\n\n\n"}, "2630": {"problem_id": 2630, "answer": "from collections import deque\n class Solution(object):\n def move_to_left(s, x, y, dx, dy):\n\n  if dx == 0 or dy ==0: return (x,y,dx,dy)\n if s[0][1] == x == y==0 and s.count(x) == 2:return (s[1][0]+x+dx+dy-1,-1)\n\n if x < 0 and y <0 or x >= len(set([x for x in s])) or y >=len(sets[x]):return 0\n elif x!= y:x = y\n else:y = x\n s = set()\n for i,x in enumerate(map(int,s)):s.add((i,i+1))\n return s\n"}, "2631": {"problem_id": 2631, "answer": "from collections import defaultdict, deque, OrderedDict, Counter, ROUND_OF_YOUR_CACHE_DUMS\n class Solution(object):\n\n  # def next_courses_with_prerequisites(cls, prs): # [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 256, 257, 258, 259, 260, 261, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 293, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 326, 327, 328, 329, 330, 331, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 366, 367, 368, 369, 371, 372, 373, 374, 376, 379, 380, 383, 384, 387, 388, 389, 400, 401, 402, 403, 405, 407, 408, 409, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 436, 475, 386, 398, 395, 396, 399, 410, 414, 415, 416, 421, 422, 417, 448, 445, 363, 450, 361, 364, 365, 375, 378, 385, 390, 392, 404, 406, 413, 444, 490, 499, 503, 500, 501, 600, 601, 702, 800, 911, 1200, 1120, 2128, 2306, 2313, 2337,k69, k96, l97, m91, n10, o87, p90, q99, r97)\n"}, "2632": {"problem_id": 2632, "answer": "from collections import defaultdict, deque, Counter, OrderedDict, Rotation, copy, List, Union, Weight, K, Count\ndef min_path_sum(m, n, x, y, count, path, memo, is_valid):  # Union[Path[0], Path[1]] = {(0, 0) for (i, j) in enumerate(path, 1) if 0 <= i < m and 0 < j < n}\n"}, "2633": {"problem_id": 2633, "answer": "from functools import lru_cache, cmp_to_key\nimport math\ndef calculate_minimum_hp(s, m, n, l, r, p, q, w, x, y, z = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 188, 189, 190, 193, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 254, 257, 258, 263, 269, 270, 271, 277, 278, 279, 281, 282, 283, 293, 294, 300, 313, 314, 325, 326, 327, 328, 329, 331, 336, 338, 340, 341, 347, 348, 353, 358, 360, 366, 367, 372, 373, 374, 376, 379, 380, 383, 384, 389, 397, 398, 399, 400, 405, 407, 409, 416, 418, 419, 421, 424, 425, 426, 428, 429, 430, March, 267, 274, 276, 287, 288, 289, 295, 296, 298, 299, 306, 307, 308, 311, 312, 317, 318, 320, 321, 323, 324, 333, 334, 335, 344, 345, 346, 349, 365, 368, 371, 386, 392, 395, 401, 412, 417, 408, 420, 433, 440, 445, 361, 363, 364, 369, 370, 375, 378, 385, 387, 402, 411, 422, 423, 427, 448, 450, 355, 286, 337, 343, 351, 356, 357, 359, 460, 187, 174, 180, 181, 182, 183, 184, 185, 186, 191, 194, 195, 198,aila, Al-Ak-aba, Aryan, Asad, Ashayam, Ayurved, Adhik, Anjaweed, Abhinav, Avani, Akh...\n'''"}, "2634": {"problem_id": 2634, "answer": "from collections import defaultdict\n class Solution(object):\n #  O(n^2) time\n def get_subsets_power_set_map():\n return list(map(lambda x: x & (x > 0), set(Counter(x).keys()).values()))"}, "2635": {"problem_id": 2635, "answer": "from collections import defaultdict\n class Solution(object):\n #  dp[i][j] = matrix[j][i] * (j-i+1) / (i-j)\n def is_square(matrix, i, j = 0, k = -1): # k == 0 or i == j or j == k\n for i in range(k): matrix.append(defaultdict(int))\n return matrix\n"}, "2636": {"problem_id": 2636, "answer": "from collections import defaultdict\nimport heapq\n# from functools import lru_cache,cmp_to_key,defaultdict,deque,heappop,OrderedDict,repr,str,time,copy,itertools,collections,fractions,math,string,truediv,pow,factorials,reduce,array,sorted,gcd,mod,inf,lru,memo,getattr,bitwise,is_integer,assign,numpy,binary_search,bfs,compress,dense,decrease,add,sub,mul,floord,copysub,accumulate,multiply,sqrt,xor,div,acos,asin,cosine,tan,pi,sin,radiansum,upside,updates,times,round,ceil,closest,euclid,uclin,degrees,nei,longhand,nan,twoscore,onexpo,onescore\n"}, "2637": {"problem_id": 2637, "answer": "from collections import defaultdict\n class Solution(object):\n def get_permutations_from_nums(num_sums, n_arr_to_lookup = None, memo = dict(defaultdict(int)))(sorted(memo.values()), key = lambda x: (x[0], x[1]), default = default, empty = True, is_duplicate = False) -> int: return sorted(list(x.items()))"}, "2638": {"problem_id": 2638, "answer": "from math import ceil\ndef min_path_sum(row, row_num, step, max_row_idx, cur_cur_val, is_horizontal=True):\n\tif (row[0] < row[1] or row == 0 or step < 0) or (isinstance(col, int) and col > 0): return -1\n\n\tfor i in range(0, len(board) - 1, 2):\n\n \t\tboard[i][step] = 0 if col == 1 else board[row-1][col] + (1 if i == row-2 else -(1 + col))\n#\treturn min(list(map(step,board.keys())))"}, "2639": {"problem_id": 2639, "answer": "from collections import defaultdict, deque, OrderedDict\nimport numpy as np\n#from math import ceil, sqrt, factorial, cos, sin, mul, radians, zeros,ithmetic, fractions, hyp, floor, to_int, islice, fibonacci, bisect_left,bisect, heappop, insort, lru, inf, nbit, binarysearch, heapify, popen, popleft, truediv, zip2D\ndef isPowerSet(nums): return set(num) & (numpy.isllect(np.where(abs(x) - abs(y) == 1 for x, y in zip(bin(int)(-1), num))) for _, bin in enumerate(str(sqrt(1-x), 2) if x > 0 else 2))\n'''\n[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 256, 257, 258, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 293, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 336, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 360, 361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 389, 400, 401, 402, 405, 407, 408, 409, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 386, 387, 388, 392, 385, 396, 395, 398, 399, 404, 406, 414, 415, 416, 417,418,419,421,432,433,434,435,436,437,438,439,440,441,444,445,446,457,461,463,467,468,469,475,486,487,488,489,491,494,501,509,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,144,145,146,148,149,150,151"}, "2640": {"problem_id": 2640, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nfrom heapq import heappush,heappop\nn = int(input())\ns = list(map(int, input().split()))\nd = [[] for _ in range(n)]\nfor i,s in enumerate(s,1):\n  d[s[-1]] += [i]\np = [0]*n\nvisited = set()\nwhile p[1] == s[p[0]-1]:p.pop(0) + 1\nheapify(p)"}, "2641": {"problem_id": 2641, "answer": "#!/usr/bin/env python\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nn,q = map(int,input().split())\nans = []\nfor i in range(n):\n\tc,c1,r,d = tuple(sorted(q,key=lambda x:x[1],reverse=True))\n\n\tans.append(c+d+c2*(r+1))\nprint('\\n'.join(ans))"}, "2642": {"problem_id": 2642, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\nmod = 10 ** 9 + 7\nn = int(input())\na = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n):\n  s[a[i] % a[n - i] == 0] = i\nprint(mod)"}, "2643": {"problem_id": 2643, "answer": "def solve(a,b,n,x,m):\n  if x==m: return 1;return 0;\n\n  for i in range(n-1,0,-1):a[i]+=b[x-i+1]*m;x+=i;m-=1;a.append(x);m=0;b=x;i=n;q=int(input());while(q>0):print('\\n'.join(map(str,input().split())))print(solve(['1',1,'2'][q]))\n"}, "2644": {"problem_id": 2644, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\np = list(map(int, input().split()))\nans = []\nfor i in range(n):\n  if p[i] == 1:   ans.append(i)\nprint(*ans, sep='\\n')"}, "2645": {"problem_id": 2645, "answer": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10 ** 6)\nfrom itertools import combinations, permutations, product, combinations_with_replacement, zip_longest\nINF = float('inf')\nMOD = 10 ** 9 + 7\ndef main():\n n = int(input())\n s = list(map(int, input().split()))\n p = [0] * n\n for i in range(n):\n  s[i] ='' * (n - i + 1) + '\\n'\n print(sum(s))"}, "2646": {"problem_id": 2646, "answer": "n, m = map(int, input().split())\na, b = [], []\nfor i in range(n):\n  if a[i] == b: a.insert(0, i)\n\n  else: b.append(i)"}, "2647": {"problem_id": 2647, "answer": "#!/usr/bin/env python3\nfrom collections import Counter, defaultdict, deque, OrderedDict\nimport heapq as hq, bisect as bs, heapify, re, cmp, numpy as np, float as fp, pandas as pd, scipit2d as sc, traceback as tc, timeit, type2 as tl, ascii_uppercase_lowercase as ac, digits2digits as d, nums2nums as nd\ndef __starting_point():\n\tn = int(input().strip())[0]\n\n\ts = [int(x) for x in input().split(' ')]\n \tfor i in range(n-1): s[i] += '#' + str(int(''.join(map(str,s[:i+1]))) + '\\n') + chr(ord('A') - ord('Z')+i) if i > 0 else 'Black', 'White' if n - i - 1 >= 0 and n-i-2 >=0 and i < len(s) - 2: s.append(i + 2)  # '-' is the last letter of each word, 'Z' is used for upper case characters. 'A' and 'B' for lower case letters (used for '.' for the same purpose). 'a' - 'z' to jump backwards from right to left. If we jump forwards from left to right, we'll jump to the rightmost letter in s, and so on until we reach the end of our list. Return a number that we can finish in the specified order. Input will always be valid - you can print anything you want in order for it to be accepted as an answer. Print only the characters that specify the order in which we print the answer, e.g., \"ZA\" is printable, but \"b\" and \"H\" are not. It's OK if you don't print \"c\" as it doesn't meet the definition of \"answer\", but not \"h\".\n"}, "2648": {"problem_id": 2648, "answer": "#!/usr/local/bin/env python\nfrom collections import defaultdict\nimport heapq\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\tb.append(a[i]+b[-1]+1)\nprint('\\n'.join(b))"}, "2649": {"problem_id": 2649, "answer": "from math import sqrt\nn = int(input())\nxs = list(map(int, input().split()))\ny = [0]*n\nfor i in range(n):\n  xs[i] = y[-1]\nans = max(xs)\nprint(ans)"}, "2650": {"problem_id": 2650, "answer": "def solve(n,a,b,c,d,e,f,g,h,j,k):\n  if n == 0: return a == b == c == d == e == f == g == h == j == k : return 0\n\n  max_a = a + b + c + d + e + f + g + h + j + k + 0\n\tmax_b = b - a - c - d - e - f - g - h - j - k\n\n\treturn max(0,max(j+1,(a+b+c+d+e+f+g+h+k+0) - (a-b-c-d-f-g-h-j-k)) for j, a, b, c, d, e, f, g, h, k in d)\nsolve = lambda n,x,y,z: solve()\nprint('\\n'.join(map(str,sorted(x+y+z,reverse=True))))"}, "2651": {"problem_id": 2651, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import deque, defaultdict, Counter, OrderedDict,defaultdict2,deque2\n#sys.setrecursionlimit(10**7)\nmod = 10**9 + 7\nN, M = map(int, input().split())\ncnt = [0] * N\nfor i in range(M):\n  a, b, c, d, e, f, g, h, i, j, k, l in cnt[i+j+k+l] = a + b + c + d + e + f + g + h + i + j + k + l\nprint(sum(c) % M)"}, "2652": {"problem_id": 2652, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n-1):\n\tl[i] += 1\nprint(s)"}, "2653": {"problem_id": 2653, "answer": "from collections import defaultdict\nn, q = list(map(int, input().split()))\ngraph = [[] for _ in range(n)]\nfor a, b, c in zip(range(1, n)):\n  graph[a].append(b+c)\nq = int(input())\nadj = [defaultdict(lambda: 0) for x, y in enumerate(graph[q] + [0]*n) if x == 0]\nvisited = set([0])\nans = 0\ndef dfs(a,b,c,vis):\n\n  if (a == b and c == c) or (c == a and a not in visited or visited[c] == 1): return 1; return 0"}, "2654": {"problem_id": 2654, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n  s.append(a[i] - a[n//2])\nprint(len(s))"}, "2655": {"problem_id": 2655, "answer": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a[i]<=a[n]:\n  c+=1\nprint(c)\n"}, "2656": {"problem_id": 2656, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nfrom functools import reduce\nsys.setrecursionlimit(10**6)\nmod = 10**9 + 7\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n  l.append(l[-1] + l[i])\nprint(mod)"}, "2657": {"problem_id": 2657, "answer": "from sys import stdin,stdout\nimport bisect\ninput = lambda:stdin.readline().rstrip()\nN = int(input())\nA = list(map(int,input().split()))\nB = [0]*N\nfor i in range(N):B[i+1]-=1\nif B[-1]==0:print(' '.join(str(A[0]) for A in B))"}, "2658": {"problem_id": 2658, "answer": "n,k = map(int,input().split())\nl = []\nfor i in range(1,n+1):\n  if l[i-1]%1==0:l.append(i)\nprint(l)"}, "2659": {"problem_id": 2659, "answer": "from sys import setrecursionlimit, setmode\nsetmode(lambda x: int(x&-x), 10**15)"}, "2660": {"problem_id": 2660, "answer": "import sys\ninput = sys.stdin.readline\ndef read_int():\n  return int(input())\nsys.setrecursionlimit(10**6)\nread = lambda: list(map(int,input().split()))\nmod = 10**9+7\nn = read()\nqueries = []\nfor q in range(n):\n\tx,y,z = qu[q],qu[(q-1)%mod],q,q+n-2*mod+3*(mod*2)+(q*n)//2+((n+1)*2)*(pow(2,n,mod-3)*3)"}, "2661": {"problem_id": 2661, "answer": "n = int(input())\ns = list(map(int, input().split()))\nt = [0]*n\nfor i in range(n):\n\ts[i] = s[n-i-1] ^ (1 << i)\np = [[0, 0]]\nr = []\nwhile r and r[0].bit_length() == n: r.append(r[r.pop()][0])\nprint(p)"}, "2662": {"problem_id": 2662, "answer": "n = int(input())\na = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n ans += a[i]\nprint(ans)"}, "2663": {"problem_id": 2663, "answer": "# cook your dish here\nn,k=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append([int(input()),i,i+k])\nprint(*l,sep='\\n')\n"}, "2664": {"problem_id": 2664, "answer": ""}, "2665": {"problem_id": 2665, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(l.count(0))"}, "2666": {"problem_id": 2666, "answer": "# cook your dish here\nn,k=map(int,input().split())\narr=[]\nfor i in range(n):\n arr.append([int(x) for x in str(input()))]\nprint(k)"}, "2667": {"problem_id": 2667, "answer": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if l[i]=='C':\n  c=c+1\n elif c==0 and len(l)==1 and l.count('1')==l[-1]:\n print('YES')\n"}, "2668": {"problem_id": 2668, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n a,b,c,d=list(map(int,input().split()))\n s=input()\n if s[0]=='M':\n  print(\"Unluck\")\n elif 'M' in s:print(s[-1])"}, "2669": {"problem_id": 2669, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(sum(l))"}, "2670": {"problem_id": 2670, "answer": "# cook your dish here\nfor _ in range(int(input())):\n lst = list(map(str,input().split()))\n if len(set(lst))==1:print(0)"}, "2671": {"problem_id": 2671, "answer": "# cook your dish here\nfrom collections import deque,defaultdict,deque\nN,M = [int(x) for x in input().split()]\nde = defaultdict(int)\nfor i in range(N):\n x = input()\n if len(de[x])==1 or x[0]==x[1]:\n  print(min(M,sum(map(len,x)))+1)"}, "2672": {"problem_id": 2672, "answer": "# cook your dish here\nx=int(input())\nprint(x)"}, "2673": {"problem_id": 2673, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(len(l)):\n if l[i]==\"1\":\n  ans+=min(9,i-1)\nprint(ans)"}, "2674": {"problem_id": 2674, "answer": "# cook your dish here\np=int(input())\nfor i in range(p):\n x=input()\n if x.count('1')%2==0: \n  print('In %s'%x)"}, "2675": {"problem_id": 2675, "answer": "n,m=map(int,input().split())\na=list(map(''.join,a))\nc=0\nfor i in range(n):\n x,y,z=[int(x) for x in a[i]]\n if z[0]==z[1]:\n  c+=1;\n print(c)"}, "2676": {"problem_id": 2676, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=set(l)\ncount=0\nfor i in range(n):\n if s.count(s[i])>100 and i!=100 :\n  count=count+s.pop()\nprint(count)"}, "2677": {"problem_id": 2677, "answer": "# cook your dish here\ndef is_good(string):\n   return string.isalpha() and string[0] in 'aeiou'\ns = input()\nn = len(s)\nc = 0\nfor i in range(n-2,-1,-2):\n\n  if s[i] == '1': c += 1\nif c == 0: c = 1\n\n"}, "2678": {"problem_id": 2678, "answer": "n = int(input())\nl = [int(x) for x in input().split()]\ns = set()\nfor _ in range(n):\n\tl.append(list(s))\nprint(len(l))"}, "2679": {"problem_id": 2679, "answer": "# cook your dish here\nn=int(input())\narr=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append(arr.pop(i) if i%2==0 else 0)\nprint(max(l))"}, "2680": {"problem_id": 2680, "answer": "n,b=list(map(int,input().split()))\nm=[]\nfor i in range(1,n+1):\n m.append([int(x) for x in input()] + b)\nl=m.index(max(m))+n\nprint(len(l))"}, "2681": {"problem_id": 2681, "answer": "# cook your dish here\ndef operator(a, b): \n if (a == 0):\n  return 1\n elif (b == -1) or (c == 1 or d == 2 or e == 3 or f == 4 or g == 5 or h == 6 or i == 7 or j == 8 or k == 9 or l == 10 or m == 11 or n == 12 or q == 13 or r == 14 or s == 15 or t == 16 or u == 17 or v == 18 or w == 19 or x == 20 or y == 21 or z == 22): return 2\n else: return 3"}, "2682": {"problem_id": 2682, "answer": "q = int(input())\nfor _ in range(q):\n\n n, k = [int(x) for x in input().split()]\n\n if k == 0 or k - 1 >= n:\n\n  print(0)\n  continue\n\n i = 0\n\n while i < len(k) and k[i]!= '0' or i!= 0 and i + 1 < n and (k[:i+1] == '1') or (i == n) : i += 1\n k.pop()\n\n print(' '.join(map(str,k)))"}, "2683": {"problem_id": 2683, "answer": "# cook your dish here\nt=int(input())\nfor i in range(t):\n n,k=list(map(int,input().split()))\n s=input()\n if s[0]=='X':\n  print(\"YES\")\n elif s.count('.')==k==len(s)//2 and k%2==s[-k-1]!=0:\n\n  if k==0 and s!=\"O\":"}, "2684": {"problem_id": 2684, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s)"}, "2685": {"problem_id": 2685, "answer": "s = input()\nn = len(s)\nprint(n)"}, "2686": {"problem_id": 2686, "answer": ""}, "2687": {"problem_id": 2687, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n  if(a[i]==i and b[(i-1)%2]!=0):b.append([i])\nprint(sum(b))"}, "2688": {"problem_id": 2688, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n\tb.append(a[i]+1)\nc=0\nans=[0]*n\nwhile(len(b)>0 and b[-1]=='1'):\n\n\tif(c==0):c+=1\n \telse:ans[c]=1+ans.pop()\nprint(*ans)"}, "2689": {"problem_id": 2689, "answer": "# cook your dish here\nt=int(input())\nfor i in range(t):\n\ts=input().split(' ')\n\n\tn=len(s)\n \ta,b,c=list(map(int,s[:n]))\n\n  if len(a)==0:a.append(b)if a.count('+')!=0else a[0]+b+a[-1]+c\nprint('Return')"}, "2690": {"problem_id": 2690, "answer": "# cook your dish here\nn=int(input())\ns=list(map(int,input().split()))\nmaxx=0\nfor i in range(n):\n if i[0]=='a':\n  maxx+=i[1]\nprint(max(abs(s[n-1-i])**2,n))"}, "2691": {"problem_id": 2691, "answer": "# cook your dish here\nn,p=list(map(int,input().split()))\ns=input()\nc=0\nfor i in range(len(s)):\n if s[i]=='d':\n  c=max(c,(p-i)//i+1)\nprint(i,end=' ')"}, "2692": {"problem_id": 2692, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n,b=list(map(float,input().split()))\n a=n*b\n b=b*a\n print(min(b,a))"}, "2693": {"problem_id": 2693, "answer": "# cook your dish here\ns,p,k=[int(x) for x in input().split()]\nans=0\nfor i in range(len(s)):\n if s[i]%p==0 and p!=s[:i]:\n  ans+=1\nprint(ans)"}, "2694": {"problem_id": 2694, "answer": ""}, "2695": {"problem_id": 2695, "answer": "# cook your dish here\na=input()\nn=len(a)\nl=[]\nfor i in range(n):\n if a[i]=='1':\n  l.append(i+1)\n\n  \ndef check(l,n,i,j,k):\n\n if l[k]!=i or j==n or k==j or i>=j and j<=k or (i==k and k>j) and (j==i and i<k) : return False\n else: return True\n"}, "2696": {"problem_id": 2696, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nc = 0\nfor i in range(n):\n if a[i]%2==0:c+=1\nprint(c)"}, "2697": {"problem_id": 2697, "answer": "# cook your dish here\nn=int(input())\nprint(n)"}, "2698": {"problem_id": 2698, "answer": "# cook your dish here\nfor i in range(int(input())):\n m,v=map( int,input().split())\n d=m*v\n if d<=0:print(0)"}, "2699": {"problem_id": 2699, "answer": "# cook your dish here\nt = int(input())\nfor _ in range(t):\n  n = list(map(int, input().strip().split()))[:len(n) - 1]\n"}, "2700": {"problem_id": 2700, "answer": "# cook your dish here\nt=int(input())\nfor i in range(t):\n   a=list(map(int,input().split()))[:2]\n\n  if a[0]+a[1]<=y and a.count(y)==y+1 and b[2]+b[3]>=x and (a,b,c,d) not in [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,58,59,60,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,138,139,140,141,144,145,146,148,149,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,180,181,182,187,188,189,190,191,194,195,196,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,228,229,230,233,234,235,236,237,238,239,241,242,243,254,255,257,260,271,272,273,274,385,386,387,388,389,391,400,405,406,408,409,419,421,432,433,434,435,446,447,448,449,460,464,466,467,468,469,471,479,487,488,489,490,491,493,499,500,501,503,509,512,593,609,610,613,614,616,618,327,640,641,643,anova,a}\n"}, "2701": {"problem_id": 2701, "answer": "# cook your dish here\nn,k=map(int,input().split())\ns=0\nfor i in range(n):\n s=s+k\n print(s)"}, "2702": {"problem_id": 2702, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n\ts,f=list(map(int,input().split()))\n\n\tif s=='T' and f!=0 and s!='F':\n \t\tprint(s)\n"}, "2703": {"problem_id": 2703, "answer": "# cook your dish here\nn,q = map(int,input().split())\na = list(map(float,list(input())))\nb = [0]*q\nfor i in range(q):\n x = a[i]\n if x>=b[-1]:\n  b.append(x)\n elif x<b.count(max(b)-1) and b[x+1]-x>a[0]+1 and x!=0 and (x,b,a) not in [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,123,125,126,127,128,129,131,132,133,134,138,140,141,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,180,184,186,188,189,190,191,192,193,194,195,196,197,198,199,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,241,242,244,251,254,255,257,258,259,260,261,262,263,264,269,270,271,272,274,275,276,277,280,281,282,283,284,286,293,307,311,312,313,314,317,318,331,332,334,343,444,446,447,448,449,460,461,464,467,468,469,479,480,481,484,486,487,488,489,491,493,499,500,501,503,509,551,553,554,555,556,587,609,610,613,614,616,617,618,640,641,643,648,649,660,668,669,680,681,688,689,690,694,696,697,698,699,800,801,804,806,807,808,909,810,911,122,right,left,top,below,up)"}, "2704": {"problem_id": 2704, "answer": "# cook your dish here\ndef solve():\n n, q = list(map(int, input().split()))\n a = [0]*n\n for i in range(q):\n  a[i] = i\n ans = 0\n x = a.index(x)\n if x == 0 and x not in a: ans += 1\n print(\"Yes\")\n else: print(ans)"}, "2705": {"problem_id": 2705, "answer": "n, m, k = map(int, input().split())\na = []\nfor i in range(0, n):\n  a.append(sum(a[-1]%k for a in list(map(str, a))) + k)\nprint(n)"}, "2706": {"problem_id": 2706, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nk = 0\nfor i in range(n):\n  if l[i] == k: k += 1\nprint(k)"}, "2707": {"problem_id": 2707, "answer": "n,k = list(map(int,input().split()))\nl = []\nfor i in range(n):\n l.append([int(input()),i+1]*(k-1)%1000000007)\nans = 0\ni=0\nwhile(i<len(l) and i<n and k>0): \n ans = ans % (10**9)+7\n i+=1\nprint(ans)"}, "2708": {"problem_id": 2708, "answer": "n, k = list(map(int, input().split(' ')))\nprint(n)"}, "2709": {"problem_id": 2709, "answer": "# cook your dish here\nn,t=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append([int(x) for x in str(i)])\nprint(sum(l))\n\n"}, "2710": {"problem_id": 2710, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n  a[i] = 1 if i % 2 else -1\nprint('YES\\n' * m)"}, "2711": {"problem_id": 2711, "answer": "n,k = map(int,input().split())\ns = input()\nl = list(s)\nfor i in range(n):\n\tl.insert(i,s[i])\nprint(''.join(l))"}, "2712": {"problem_id": 2712, "answer": "t = int(input())\nfor _ in range(t):\n\ta,b,c = list(map(int,input().split()))\n\n\tif(a+b+c <= a*b*c and a + b + c <= b*a*(c+1) * (b + 1) // 2 == a * b * c and b == c) or (a == b and c == 1 and (c + 2) == 0 and ((b * a) + (1 - c)) == 2 or ((a * 1 - b) - (2 - a))!= 1):\n\n \t\tprint(0)\n"}, "2713": {"problem_id": 2713, "answer": "# cook your dish here\nl=list(map(int,input().split()))\nr=[]\nfor i in range(25):\n s=0\n r.append(l[i]-1)\n if s>r[-1]:\n  print(\"Legend\")\n elif s==r.index(max(r)-1,0) or r[0]!=l.pop(0)[1] or l[s]==0 or (s==i and len(i)==1 and i[1]+1<len(s)<=25 and s<i[2] ):\nprint(\" \")"}, "2714": {"problem_id": 2714, "answer": "from collections import defaultdict, deque, Counter, OrderedDict\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\nmod = 10 ** 9 + 7\ndef solve(n, m, d):\n\tp = [0] * (m + 1)\n\n\tfor i in range(1, n + 2 * m + 3) : p[i] = 1 if i % 2 == 0 else 3 if (i // 2) % (2 * i) == 1 else 2 if ((i - i * 2 + m - 1)*(2*i)!= 0) else (p[-1] + d * d) * 3 % mod\n#\tprint(str(p) + \" \" + str(solve(m, 2*m+1), d*(3*d+2)) + \"\\n\")\nfor _ in [int(x) for x in input().split()] : print((sum(map(int,x)))%mod)"}, "2715": {"problem_id": 2715, "answer": "def solve(K):\n  if K == 0 or K < 0: return 0\n\n  res = []\n\tfor i in range(1,K+1):\n\n\t\tif i%2 == 1: res.append(i//2 + 1) \n#   print(str(res[-K:]) + \" \" + str(solve(0) + K - res[K - 1]))\n"}, "2716": {"problem_id": 2716, "answer": "# cook your dish here\nn,t=map(int,input().split())\na=list(map(''.join,a))\nm=0\nfor i in range(0,n):\n if(t[i]=='1' or t[(i+1)%n] == '1') :\n  m=max(m,sum(a[:i]+'0'*(n-i) for i,x in enumerate(b)) for b in a[:]+'\\n')\n else:m+=n\nprint('Yes')"}, "2717": {"problem_id": 2717, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n if a[i]=='A':\n  b.append(i+1)\n elif a['A']!=a['B']:\n a.sort()\n b=b[::-1]\n print(min(b))"}, "2718": {"problem_id": 2718, "answer": "n,m=map(int,input().split())\na=[]\nfor i in range(1,n+1):\n if i%2==0:a.append(i)\n elif a[i-1]<=i:print(\"win\",end=\"\")\n else :\n  print(\"\")"}, "2719": {"problem_id": 2719, "answer": ""}, "2720": {"problem_id": 2720, "answer": "# cook your dish here\nr,c=map(int,input().split())\nprint(r)"}, "2721": {"problem_id": 2721, "answer": "# cook your dish here\nm,l,t,x,y=map(int,input().split())\nc=0\nfor i in range(t):\n if x==0 and y==1: \n  c=c+((l-x)//2)\n elif x<0 or y>0:x=x-y\n else:c=(c*(l+y))/2\nprint(\"pable\")"}, "2722": {"problem_id": 2722, "answer": "# cook your dish here\nt=int(input())\nfor i in range(0,t):\n a,b,c,d=list(map(int,input().split()))\n if a==b==c==d:print(d)\n elif d==(a+b+c)%4==0 and a>b>d and b>c: print()\n else :\n  print(\"error\")\n"}, "2723": {"problem_id": 2723, "answer": "# cook your dish here\nfor _ in range(int(input())):\n R,C=list(map(float,input().split()))\n formula=formula+[0]*(C+1)\n print(sum( formula)//3)"}, "2724": {"problem_id": 2724, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(0,n):\n if l[i]==0:c+=1\nprint(c)"}, "2725": {"problem_id": 2725, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append(l[i])\nprint(*a)\n"}, "2726": {"problem_id": 2726, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n,c=list(map(float,input().split()))\n s=sum(c)\n if c==s:print(0)"}, "2727": {"problem_id": 2727, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ns = [0]*(n+1)\nfor i in range(len(l)):\n  s[l[i]-1] = i\nprint(s[:])"}, "2728": {"problem_id": 2728, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=a[i]\n print(s)\n"}, "2729": {"problem_id": 2729, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(1,n+1):\n l.append(str(i) + \" \" + str(m))\nprint(l)"}, "2730": {"problem_id": 2730, "answer": "# cook your dish here\nn = int(input())\nk = [int(x) for x in input().split()]\nans = []\nfor i in range(n):\n\tans.append(sum(k[i]))\nprint(*ans)"}, "2731": {"problem_id": 2731, "answer": "# cook your dish here\ndef array_of_lower_case(s, e):\n for i in range(len(e)-1, 0, -1):  \n\tif e[i]=='}': return s[:i+1]\n return ''.join(map(str,s))\nn=int(input())\narr=[]\nfor a in map(int,input().split(' ')) : arr.append(a)\nprint(*arr)"}, "2732": {"problem_id": 2732, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(len(a)):\n if a[i]=='0':\n  l.append(i)\n else:   #i=i+1 \n l=l[::-1]\n a.sort(reverse=True,key=lambda x:x[0])\nprint(min(l))"}, "2733": {"problem_id": 2733, "answer": ""}, "2734": {"problem_id": 2734, "answer": "# cook your dish here\nn,k=map(int,input().split())\nl=[]\nfor i in range(n):\n l.append(2**i)\nprint(sum(l))"}, "2735": {"problem_id": 2735, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[]\nfor i in range(n):s.append(l[i]-1)\nprint(len(s))"}, "2736": {"problem_id": 2736, "answer": "# cook your dish here\nx=int(input())\ny=list(map(int,input().split()))\nl=[]\nfor i in range(y[0]):\n l.append(0)\n y.remove(x-l[i][0])\n x-=1\nprint(sum(l))"}, "2737": {"problem_id": 2737, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nr=[0]*n\nfor i in range(n):\n\tl[i]+=1\nans=0\nvisited=set()\nwhile(len(l)>0 and l[-1]<=r[r.pop(0)]:\n   ans+=l.count(1)\nprint(ans)"}, "2738": {"problem_id": 2738, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n a,b=list(map(int,input().split()))\n r=a/b\n if a>0 and a%r==0: \n  print(0)\n elif a<0 or a==10 and b<10:print(1)"}, "2739": {"problem_id": 2739, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(0,n):\n\tans+=l[i]\nprint(ans)"}, "2740": {"problem_id": 2740, "answer": "for _ in range(int(input())):\n n,w,h = list(map(float,input().split()))\n a = [0]*(n+w+2)\n b = a[:n]\n for i,x in enumerate(a) :\n  b[i] += x\n print(sum(b))"}, "2741": {"problem_id": 2741, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int, input().strip().split(' ')))\ns = 0\nfor i in range(len(l)):\n  s += l[i]\nprint(s)"}, "2742": {"problem_id": 2742, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(0,n):\n\tif(l[i]>=1 and l[n-i-1]==1):ans+=1\nprint(ans)"}, "2743": {"problem_id": 2743, "answer": "from sys import stdin,stdout\nn = int(stdin.readline().strip())\nr = []\nfor i in range(n):\n  x,y = list(map(int,input().split()))\n\n  if(y == '0'): r.append(x)\nif(r[-1][0] > x): print('left')\nelse: print(('balanced' if x > y else 'not balanced'))\n"}, "2744": {"problem_id": 2744, "answer": "n, m = list(map(int, input().split()))\na = [0] * m\nfor i in range(n):\n  a[i] = min(a[-i-1] + 2 * w for w in a)\nprint(m)"}, "2745": {"problem_id": 2745, "answer": "from collections import defaultdict, deque, Counter, OrderedDict, Trie, Union, SegmentTree, Sorted, Queue, List, Set, StopIteration, BinarySearch, BFS, Time, Count = {}, {}, set(c) for c in c.split('\\n') if c not in''.join(map(Counter.from_iterable, c)) or c =='': Count[c] = len(Sorted(count, key=Count.__getitem__)) + 1\n"}, "2746": {"problem_id": 2746, "answer": "from math import ceil\ndef compare_version1(a, b):\n if a[0] == b[-1] or a.endswith('.') or (a[1]+b[:-1]) == 1 and b == '.' and len(b) == 0 or b.isalpha() and (b.isdigit() for b in a) :\n return 2**(ceil(len(c) for c in b) - 1)\n elif a!= b or c!= a and c.islower():\n a = b\n b = c\n cnt = 0\n for i,c in enumerate(range(1,a.bit_length()+1) if c > 0 else a,b):cnt += (c-a)//(i*(2*c*i) + 2*b-c)*2**i"}, "2747": {"problem_id": 2747, "answer": "from collections import OrderedDict, deque, defaultdict, Counter, heapq, numpy, stack, bisect\n"}, "2748": {"problem_id": 2748, "answer": "from collections import Counter\ndef count_digits(s, d={'1':1,'2':2,'3':3,'4':4,'5':5,'6':6,'7':7,'8':8,'9':9,'0':10,'10':11,'12':12,'13':13,'14':14,'15':15,'16':16,'17':17,'18':18,'19':19,'20':20,'21':21,'22':22,'23':23,'24':24,'25':25,'26':26,'29':27,'30':28,'31':29,'32':32,'33':33,'34':34,'35':35,'36':36,'37':37,'38':38,'39':39,'40':40,'41':41,'42':42,'43':43,'44':44,'45':45,'46':46,'47':48,'49':49,'50':50,'51':51,'52':52,'53':53,'54':54,'55':55,'56':56,'57':57,'58':58,'59':59,'60':60,'61':61,'62':62,'63':64,'64':65,'66':66,'67':67,'68':68,'69':69,'70':70,'71':71,'72':72,'73':73,'74':74,'75':75,'76':76,'77':77,'78':78,'79':79,'80':80,'81':81,'82':82,'83':83,'84':84,'85':85,'86':86,'87':87,'88':88,'89':89,'90':90,'91':91,'92':92,'93':93,'94':94,'95':95,'96':96,'97':97,'98':98,'99':99,'100':100,'101':101,'102':102,'103':103,'104':104,'105':105,'106':106,'107':107,'108':108,'109':109,'110':110,'111':111,'112':112,'113':113,'114':114,'115':115,'116':116,'118':118,'119':119,'120':120,'121':121,'122':122,'123':123,'124':124,'125':125,'126':126,'127':127,'128':128,'129':129,'131':132,'133':133,'144':144,'145':145,'146':146,'153':153,'166':166,'167':167,'178':178,'179':179,'180':180,'181':181,'182':182,'183':183,'184':184,'186':186,'187':187,'188':188,'189':189]\n"}, "2749": {"problem_id": 2749, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10000000)"}, "2750": {"problem_id": 2750, "answer": "# cook your dish here\nn,b=map(int,input().split())\na=[]\nfor i in range(n):\n a.append(b)\nprint(len(a))"}, "2751": {"problem_id": 2751, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n if(l[i]%2==0):s+=1\nprint(s)\n"}, "2752": {"problem_id": 2752, "answer": "# cook your dish here\nn,k=list(map(int,input().split()))\nw=[0]*(n+1)\nfor i in range(k):\n\ta,b=[int(x) for x in str(i)].split(' ')];w[a-1]+=(b[b.index(a)-1]-1);\nprint(sum(w))"}, "2753": {"problem_id": 2753, "answer": "# cook your dish here\nlst = []\nfor _ in range(int(input())):\n s = input()\n lst.append(s[:2] + s[2:])\n h, m = 0, 0\n if m == 0: \n  print(\"1\")\n elif (m % 2 == 1 or m % 5 == 5) or (((m // 2) + 1) & 1!= 0) == (1 << 30) - 1 and ((m - m // 3) % 3 == 2 or (2 * m - 2*m == 3 or 3 * 2 - 3*2 == 4 or 4 * 3 - 4*3 == 6 or 6 * 5 - 5*5 == 7 or 7 * 7 == 8 or 8 * 8 == 9 or 9 * 9 == 10 or 10 * 10 == 11 or 11 * 11 == 12 or 12 * 12 == 13 or 13 == 14 or 14 == 15 or 15 == 16 or 16 == 17 or 17 == 18 or 18 == 19 or 19 == 20 or 20 == 21 or 21 == 22 or 22 == 23 or 23 == 24 or 24 == 25 or 25 == 28 or 28 == 29 or 29 == 30 or 30 == 31 == 32 == 33 == 34 == 35 == 36 == 37 == 38 == 39 == 40 == 41 == 42 == 43 == 44 == 45 == 46 == 47 == 48 == 49 == 59 == 60 == 61 == 67 == 71 == 72 == 74 == 75 == 76 == 77 == 80 == 81 == 83 == 84 == 90 == 91 == 92 == 93 == 94 == 95 == 97 == 100 == 102 = 103 = 104 = 108 = 116 = 16 = 20 = 24 = 30 = 36 = 40 = 42 = 44 = 45 = 46 = 49 = 60 = 61 = 68 = 71 = 72 = 75 = 80 = 83 = 84 = 90 = 91 = 92 = 93 = 94 = 97 = 100 = 105 = 110 = 111 = 114 = 115 = 120 = 130 = 140 = 143 = 144 = 146 = 147 = 148 = 149 = 155 = 156 = 157 = 158 = 159 = 160 = 162 = 163 = 164 = 165 = 166 = 168 = 169 = 178 = 183 = 184 = 185 = 188 = 186 = 189 = 193 = 194 = 202 = 203 = 204 = 205 = 206 = 207 = 208 =209 =211 =212 =213 =214 =215 =216 =167 =168 =169 =172 =174 =180 =184 =187 =188 =189 =191 =194 =195 =196 =199 =200 =203 =254 =255 =263 =274 =385 =377 =409 =432 =433 =434 =435 =446 =447 =448 =469 =470 =472 =473 =474 =479 =480 =481 =494 =505 =509 =622 =625 =627 =669 =687 =696 =698 =699 =773 =787 =731 =756 =757 =761 =758 =767 =768 =779 =781 =784 =775 =772 =777 =776 =797 =890 =899 =986 =999 =998 =989 =990 =997 =100 =101 =102 =103 =104 =105 =106 =107 =108 =109 =110 =111 =113 =114 =115 =116 =127 =128 =129 =131 =132 =133 =138 =140 =145 =146 =147 =148 =149 =151 =152 =153 =154 =155 =156 =157 =160 =161 =163 =164 =165 =166 =177 =178 =179 =182 =185 =186 =183 =201 =223 =228 =229 =233 =231 =244 =257 =265 =266 =269 =268 =271 =273 =281 =287 =303 =339 =357 =359 =361 =363 =362 =367 =369 =373 =379 =389 =391 =401 =439 =443 =449 =457 =461 =463 =467 =477 =486 =489 =499 =601 =521 =563 =571 =577 =588 =587 =593 =605 =606 =607 =609 =610 =613 =614 =617 =618 =640 =641 =643 =653 =668 =667 =677 =683 =695 =697 =701 =727 =748 =803 =707 =709 =729 =733 =760 =794 =789 =916 =907 =909 =911 =962 =905 =069 =064 =65 =66 =67 =68 =69 =74 =75 =86 =87 =88 =89 =91 =93 =94 =125 =126 =117 =18 =19 =20 =23 =25 =26 =27 =28 =29 =30 =32 =33 =34 =36 =37 =38 =39 =42 =46 =47 =48 =50 =54 =55 =56 =57 =58 =60 =61 ="}, "2754": {"problem_id": 2754, "answer": "# cook your dish here\nn=int(input())\nx,y=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append(abs(y-x)/y)\nprint(l[-1])\n"}, "2755": {"problem_id": 2755, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[0]*n\nfor i in range(m):\n a,b=[int(x) for x in str(input())]\n l[a-1]=b-a\nans=l[b]\nprint(sum(ans))"}, "2756": {"problem_id": 2756, "answer": "# cook your dish here\nn=int(input())\nm,e,x,y=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n s.append([])\n x=s[-1][0]\n if x<0 or x>=e or y<-e: \n  print('you\\'s')\n elif x+y<=n and x-y>0 and y+x<n:\n\n  if s[x][y]=='P' and (abs(y-x)>e and abs(z-z)<e) and ((abs((y+z)-x)*(x+1)/2)==1) or (x==y and z==x):\n\n\n\n"}, "2757": {"problem_id": 2757, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n  if(a[i]==0):l.append(i)\nprint(len(l))"}, "2758": {"problem_id": 2758, "answer": ""}, "2759": {"problem_id": 2759, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nr,s=0,0\nfor i in range(n):\n\tl.append(l[i]*(s+1)+1)\nprint(min(r*s,n))"}, "2760": {"problem_id": 2760, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(l[i]-1)\nprint(len(a))"}, "2761": {"problem_id": 2761, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n x,y,z=input()\n a.append(x)\n c=0\n for j in a[i]:\n  c+=abs(y-z)-1\n if c>=2*a[-1][0] or c==1 or (c==2 and z==0 and y>0 or y<0) and (a==[0,0][c-2] and c<=3*l[j][1]):\n\n  print(c)"}, "2762": {"problem_id": 2762, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(l[i]-1)\nprint(max(a))"}, "2763": {"problem_id": 2763, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n,m=list(map(str,input().split()))\n grid=[[0,0],[0,-1],[1,1]]\n for i,j in enumerate(range(len(grid[0])-1)):\n\n  if grid[i][j]=='X':\n   row=i+1; col=j+2\n\n print(''.join(row))"}, "2764": {"problem_id": 2764, "answer": "# cook your dish here\na = int(input())\nfor i in range(a):\n s = input()\n if len(s) == 1 and s[0] == 'C':\n  print(\"Unsorted\")\n elif s.count('C') == 0 or s['C']!= 'T' and (s['T'] > 0 and sum(map(int,s.split(' '))) == sum('X'[-1] for x in s)) % 1000000007 > 100000000007 :\n print('bug')\n"}, "2765": {"problem_id": 2765, "answer": "# cook your dish here\nn=int(input())\nc=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\tc.append(c[-1]*(s+i)//2)\nprint('\\n'.join([str(x) for x in c]))"}, "2766": {"problem_id": 2766, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(1,n+1):\n s+=l[i]\n print(s)\n"}, "2767": {"problem_id": 2767, "answer": "n=int(input())\nwords=list(map(int,input().split()))\nfor i in range(n):\n word=input()\n words[i]=word.count(word)\n print(len(words))"}, "2768": {"problem_id": 2768, "answer": "# cook your dish here\nn, m = map(int, input().split())\nl = [0] + [int(i) for i in input()]\ns = list(map(lambda x: x[0], l))\nans = 0\nfor x in range(m):\n  if s[x] == 0: ans += m\nprint(ans)"}, "2769": {"problem_id": 2769, "answer": "# cook your dish here\ndef solve(a,b,c,d):\n if (a[0]<=d and a[1]>=c): \n  return -1;\n else: return (abs(c[b]*d[c]))//2;"}, "2770": {"problem_id": 2770, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n):\n  a[i] = str(bin(i)[2:]).zfill(2)\nans = [int(x) for x in a]\nprint(''.join(ans))"}, "2771": {"problem_id": 2771, "answer": "n=int(input())\nstring=''\nfor i in range(n):\n  string+=input()\nprint(''.join(string))"}, "2772": {"problem_id": 2772, "answer": "# cook your dish here\nfor _ in range(int(input())):\n\ta,d,h,t1=list(map(float,input().split()))\n\n\tx=(a+d)/(h+t2*h*(t+1)/2)\n\n  \tprint((x-x[0]))\n"}, "2773": {"problem_id": 2773, "answer": "from sys import stdin,stdout\nimport math\nn,m=list(map(int,input().split()))\ngraph=[[] for i in range(n)]\nedges=[]\nfor _i,i in enumerate(stdin.readlines()):\n\tgraph[i].append(i+1)\n  \nedge=[0]*n\ndef dfs(u,v,c,d,r,l):\n\n\tif edge[u]!=-1:\n\n \t\tedge[v]+=1\n#\tprint(\"edge: \",edge, end=' ')\t\nans=float('inf')\nwhile len(graph)<m and graph[0][1]=='a' and not edges[len(edge)-1][0]:\nprint('\\n'.join([str(x) for x in edge]))\n\n"}, "2774": {"problem_id": 2774, "answer": "# cook your dish here\nn=int(input())\ns=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n a,b,c,d,e,f=[],0,0\n l.append(abs(a-b-c)/(d-e-f)) \n s.sort(key=lambda x:x[1],reverse=True)\n\n s=sorted(s,key = lambda a:a[0])\nprint(len(l))"}, "2775": {"problem_id": 2775, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n-1):\n a,b,x,w=l[i]\n if x==0 and x>b: \n  print(0)\n elif x<b and b>a:print(1)"}, "2776": {"problem_id": 2776, "answer": "# cook your dish here\nn,m=map(int,input().split())\na,b=list()\nfor i in range(0,n):\n a.append(b[i-1]*i)\nprint(sum(a))"}, "2777": {"problem_id": 2777, "answer": "# cook your dish here\nmod=10**9+7\np=list(map(int,input().split()))\nn=int(input())\na=[]\nfor i in range(n):\n\tx=p[i]\n\n\ta.append(x)\nans=0\nm=n-a[0]\nk=1<<m\nl=len(a)-k\nwhile(l>0 and a[l-1]=='0' and k<=l+1):\n\n \tans=(ans+k)%mod\nprint(ans)\n\n"}, "2778": {"problem_id": 2778, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += a[i]\nprint(s)"}, "2779": {"problem_id": 2779, "answer": "# cook your dish here\nn,m,c = map(int,input().split())\ngrid = [[] for i in range(n+1)]\nfor i,j in enumerate(grid,1):\n grid[i][j] = \"\".join(sorted(j,key=lambda x:x[1],reverse=True))\ns = input()\ncost = 0\nwhile s!= \"B\":\n s = s.split(\"B\")[0]\n cost = cost + s[2:]\n c = c.count(\"a\")\n if c == c[c.index(\"b\"):]:\n  print(cost)\n elif (c == \"a\" and c > 0 and cost == 0) and (s[:c].isalpha() or c!= c) :\n print(-1);\n"}, "2780": {"problem_id": 2780, "answer": "n,m=map(int,input().split())\r\nl=[]\r\n\n\r  \r\r"}, "2781": {"problem_id": 2781, "answer": "# cook your dish here\nr,c = list(map(int,input().split()))\nl = []\nfor i in range(r):\n l.append([int(input()),i+1])\n \ndef __starting_point():\n while(len(l)>0 and l[-1][0]!=l[i][1]):l.pop(0)\n print(sum(list(filter(lambda x:x[1],l))))\n"}, "2782": {"problem_id": 2782, "answer": "# cook your dish here\nn,r,c = map(int,input().split())\nl = []\nfor i in range(r):\n  l.append([int(x) for x in input()])\na = l[-1][0]\nb = len(l)-1\nwhile(a!=-1 and b!=0):\n\n  if(b%r==0 and a%c==c and (l[a][1]-1)>=b//c):   print(0)\n\n"}, "2783": {"problem_id": 2783, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nfor _ in range(int(stdin.readline())):\n a,b,c=list(map(str,input().split()))\n if a=='1':\n  print(c)\n elif a!='0' and b!='0':\n\n  if c*c<=a*b and c%b==0 and (a-b)**2==c*(a+b-1) and a%c==1 and  b%(b+1)-1==a and ((a//c)+1)*(1-a)==b:\n\n\n\n"}, "2784": {"problem_id": 2784, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n s.append([a[i],i+1])\nprint(''.join(s))"}, "2785": {"problem_id": 2785, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\np = [0]\nfor i in range(n):\n p.append(p[-1]+a[i])\n a.sort(reverse=True)\nprint(max(a))"}, "2786": {"problem_id": 2786, "answer": "# cook your dish here\nn = int(input())\ns = list(map(str, input().split()))\nprint(len(s))"}, "2787": {"problem_id": 2787, "answer": "# cook your dish here\nn,m = map(int,input().split())\nA = list(map(lambda x:int(input()),range(1,n+1)))\nB = [0]*n\nfor i in range(m):\n if A[i]==A[n-i-1]:\n  B.append(B[-3*i]-1)\n elif B[m-2]>0 and A.count(0)==2 and (B.pop()[0])%3!=0 :\n print(max(A))"}, "2788": {"problem_id": 2788, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n\ts+=bin(l[i]-1)[2:]\nprint(s)\n"}, "2789": {"problem_id": 2789, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n a.append(a[i]-1)\nif(b==[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,144,145,146,148,149,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,180,181,184,186,188,189,190,191,194,195,196,197,198,199,204,205,206,207,208,209,210,211,212,223,224,225,227,228,229,231,232,233,234,235,236,237,238,239,241,242,243,244,251,254,255,257,260,263,269,270,271,273,274,385,383,404,406,408,409,420,426,432,433,434,435,446,457,480,481,486,487,488,489,490,491,493,499,500,501,503,509,512,593,599,601,607,609,610,641,643,644,647,653,659,661,668,669,680,681,683,691,701,709,714,720,781,783,787,797,803,804,806,807,808,810,809,613,603,704,666,677,673,684,686,688,689,690,696,697,698,699,sofar,174,178,479,hett,ghetta,leet,ht,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z).T"}, "2790": {"problem_id": 2790, "answer": "# cook your dish here\nn,s,t=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tk=[int(x) for x in str(i)]\n\n\tl.append(k)\nc=0\ni=1\nwhile(len(l)>0 and l[i]==k[0] and i!=i*s and k[1]>=s*(s+i)*(t-i)):\n\n \tc+=s\nprint(c)\n\n"}, "2791": {"problem_id": 2791, "answer": "n,d=list(map(int,input().split()))\nlst=[]\nfor i in range(n):\n  lst.append([int(x) for x in str(i)])\nans=0\nif n%d==0:ans+=1\nprint(ans)\n"}, "2792": {"problem_id": 2792, "answer": "# cook your dish here\nq=int(input())\nfor _ in range(q):\n a,b,c=map(int,input().split(' '))\n print(c)"}, "2793": {"problem_id": 2793, "answer": "# cook your dish here\nn = int(input())\ngraph = [list(map(int, input().split())) for i in range(n)]\ns = input()\nu, v, w = graph[0], 0, 0\nfor i, j in enumerate(graph[1:]):\n  if j > 1 and s[i] > w and u[j] < v and j == i and i!= j: u.append(i)\nprint(u.count('1'))"}, "2794": {"problem_id": 2794, "answer": "# cook your dish here\ndef solve(a,d):\n if (a==1 and d>d*2): \n  return 0\n return max(solve(0,a-d//2))\nfor _ in range(int(input())) :\n h,c = list(map(str,input().split(' ')))\n a = input()\n d = int(d/2)\n b = []\n for i in a: b.append(b[-1]*(i+1))\n\n print(h*d)"}, "2795": {"problem_id": 2795, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n x,y=list(map(int,input().split()))\n l.append(x*y)\nprint(sum(l))"}, "2796": {"problem_id": 2796, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[0]*n\nfor i in range(n-1):\n x,y,z=l[i]\n s[x]=y\n l[y]=z\nprint(s[n])\n"}, "2797": {"problem_id": 2797, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(1,n+1):\n if i%2==0:ans+=i\nprint(ans)\n"}, "2798": {"problem_id": 2798, "answer": "n=int(input())\nl=list(map(int,input().split()))\nr=[0]*n\nfor i in range(n):\n\tl[i]=l.pop(0)\nans=0\nwhile(len(l)>0 and l[-1]<r[0]+1):\n\n\tfor j in l:\n\n \t\tif(j%3==1 or j%2==0):ans+=j//3\nprint(ans)"}, "2799": {"problem_id": 2799, "answer": "# cook your dish here\nfrom sys import stdin, stdout\ndef f(x,y,z):\n if x==y: return 0\n a,b,c,d=list(map(int,stdin.readline().split()))\n x=y\n y=z\n z=0\n for i in range(0,len(a)): \n  if a[i]==x and b==z and c==d: break\n return (a[z]-b)+(c-d)*(z-c)\n"}, "2800": {"problem_id": 2800, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s)\n"}, "2801": {"problem_id": 2801, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nsatisfaction=0\nfor i in range(n):\n\ts1=a[i]-1\t#1st time, 1st person can buy a 2nd pizza in this time\t\t\n \tif(i%2==0 and s1*s2<=n and (i/2!=2) in a[:i//2+1] and i%3==1 and not s2>s3 and ((i-2)/3)>=s4 and n%4==2):  #2nd time"}, "2802": {"problem_id": 2802, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n\tb.append(a[i]*(i+1)//2)\nprint(max(b))"}, "2803": {"problem_id": 2803, "answer": "n = int(input())\nnames = list(map(str,input().split()))\nans = []\nfor i in range(1,n+1):\n  if(names[i] not in ans or ans[-1][0]!=ans[0][1] == names[(i+2)%n]) or (i==0 or i==n): ans.append(\"?\")\nif(len(ans)==1 and ans==[]: return \"?\"\nelse: print(\"Yes\")\n"}, "2804": {"problem_id": 2804, "answer": "# cook your dish here\na,b=list(map(int,input().split()))\nc=0\nfor i in range(0,len(a)):\n if a[i]!='9':\n  c+=1\nprint(c)\n"}, "2805": {"problem_id": 2805, "answer": "# cook your dish here\nn = int(input())\na = [int(x) for x in input().split()]\nprint(a[0])"}, "2806": {"problem_id": 2806, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n\tl.sort(key=lambda x:x[1],reverse=True)\nif(l[0]==1 and l[-1]!=1):c+=1\nprint(c)"}, "2807": {"problem_id": 2807, "answer": "# cook your dish here\nt=int(input())\nfor i in range(t):\n a,b=input().split()\n n=len(a)\n if(n==1 or n==2 or a[n-1]!=b[0] or b[2]==a[3] ):\n  print(0)"}, "2808": {"problem_id": 2808, "answer": "# cook your dish here\nn,m,k=map(int,input().split())\nl=[]\nfor i in range(n):\n l.append([int(x) for x in str(input()))]\nans=0\nma=10**9+7\nwhile(ma>0 and l[ma-1][1]>=l[m][0]) :\n  ans+=1\nprint(ans)"}, "2809": {"problem_id": 2809, "answer": "# cook your dish here\nmod = 10**9 + 7\nn, k = list(map(int, input().split()))\ns = input()\na = [0]*(n+1)\nfor i in range(k):\n\ta[i] = s.count('1')%mod\nprint(sum(a))"}, "2810": {"problem_id": 2810, "answer": "# cook your dish here\nfrom collections import defaultdict\ndef count_of_simple_loops(lst):\n ans = []\n for i in range(3, lst[0] + 1, 2):\n\n  if i > 0 and (i - 1) == (0, i - 2) or i == 1 and i + 2 == lsts[i-2] or (lsts.get(i, 0) - i)!= -1: continue\n  ans.append(sum(map(lambda x: x.count(x), [i])))\n return len(set(ans))\nn = int(input())\ns = input()\nl = [int(j) for j in input().split()]\nfor i,j in enumerate(s, 1): l[j] = i\nans.sort(key = lambda x : x[1])"}, "2811": {"problem_id": 2811, "answer": "# cook your dish here\nfrom math import factorial\nmod = 10 ** 9 + 7\nn, m = list(map(int, input().split()))\nt = [0] * (n + 1)\nfor _ in range(m):\n\tr = int(input())\n\n\tif r % 2 == 0 and t[r // 2]!= '0' and (r % 3 == 1 or r == n // 3) or (t[n - 1] == '1' for n in set(t)) and m > 0: t.append(r)\n\n \telse: print(n)"}, "2812": {"problem_id": 2812, "answer": "# cook your dish here\nfor _ in range(int(input())):\n\tn,k=input().split()\n\n\ts=list(map(len,n.split(\" \")))\n\n \tif len(s)>1:s.insert(0,s[-1])\n"}, "2813": {"problem_id": 2813, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(len(l)):\n if l[i]==\"a\":\n  s+=1\nprint(s)\n"}, "2814": {"problem_id": 2814, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\np=[0]*n\nfor i in range(n):\n\tp[l[i]-1]=p.pop(0)\nprint(*p)"}, "2815": {"problem_id": 2815, "answer": "# cook your dish here\nn,e = map(int,input().split())\nl = [int(i) for i in input().strip()]\nprint(sum(l))"}, "2816": {"problem_id": 2816, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(m):\n l.append(list(input()))\ni=l.index(max(l))-1\nprint(abs(i-l[i]))"}, "2817": {"problem_id": 2817, "answer": "# cook your dish here\nn = int(input())\nl = []\nfor i in range(n):\n\tl.append(list(map(int, input().split())))\nprint(sum(l))"}, "2818": {"problem_id": 2818, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(len(a))"}, "2819": {"problem_id": 2819, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n\ta[i] += b[-i-1]\nprint(\"{0:.6f}\".format(a))"}, "2820": {"problem_id": 2820, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ncows=[]\nfor i in range(n):\n cows.append(l[i]*(2*i+1)//2)\nans=0\n\n for k,v in l[:n]:\n  ans+=v\n\n if ans>=100 or ans<=1000:\n\n  print(ans)\n\n elif ans%2==0 and ans-ans>=(100,1000):\n\n\n\n"}, "2821": {"problem_id": 2821, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b,c=list(map(int,input().split()))\n l.append(a*b+c)\nprint(min(l))"}, "2822": {"problem_id": 2822, "answer": "# cook your dish here\nx=list(map(int,input().split()))\nl=[]\nfor i in range(x[0]+1):\n l.append(i)\nprint(\"Yes\")\n"}, "2823": {"problem_id": 2823, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n):\n l.append(a[i]*(l[-1][0]+1)//2)\nprint(abs(sum((l)))//4)"}, "2824": {"problem_id": 2824, "answer": "# cook your dish here\nm=int(input())\nl=list(map(int,input().split()))\ns=[]\nfor i in range(len(l)):\n  if l[i]%2==0:s.append(i)\nprint(s[-1])\n"}, "2825": {"problem_id": 2825, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n a.append(a[-1]*(i+2)+(i-2)*(s+1))//2\nif a[0]=='A':\n s+=1\n if s>=2*n: \n  print(\"1\")\n"}, "2826": {"problem_id": 2826, "answer": "q,n,d = list(map(int,input().split()))\nf = {}\nfor i in range(n):\n\ts = input() +'' + f.get(i,0)+' '*(d-f[i]*d)\nprint(len(s))"}, "2827": {"problem_id": 2827, "answer": "# cook your dish here\nn,m = list(map(int,input().split()))\nl = []\nfor i in range(n):\n   a,b,c,d = [int(x) for x in input().rstrip('\\n').split(' ')],0,0\na = a + b\nb = b + c\nc = c + d\nprint(0)\n"}, "2828": {"problem_id": 2828, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=[0]*n\nfor i in range(n):\n s[i]=input()\n l.sort(reverse=True)\n for k,v in enumerate(l,start=1): \n  if(s[k]==v): print('NE')\n else: print(\"DA\")\n"}, "2829": {"problem_id": 2829, "answer": "# cook your dish here\ns=input()\na=[]\nfor i in range(0,32000):\n a.append(ord(s[i])-ord('A'))\nprint(len(a))"}, "2830": {"problem_id": 2830, "answer": "# cook your dish here\nfrom sys import stdin, stdout\nn,m = map(int,stdin.readline().split())\ngrid = [[] for i in range(n)]\nfor i,j in zip(grid[0][0],'0')[1:]:\n   grid[i][j] = j\nk = int(j**0.5)+1\ns = 0\ncnt=0\nwhile(k>0 and s<n and k<m and 0<=n-k+1):\n s+=k\n k=k//(s)\n cnt+=1"}, "2831": {"problem_id": 2831, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n a,b=list(map(int,input().split()))\n c=abs(a-b)\n if(c>0 and c<-1 and (a+b+c)//2==0): \n  print(\"0\")\n elif((c-a)%2)==(b-c+a*b*c):print(\"1\")"}, "2832": {"problem_id": 2832, "answer": "n,k=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n r,p=[int(x) for x in str(i)]\n l.append(sum(r-p)**2)\nprint(l[k-1])\n"}, "2833": {"problem_id": 2833, "answer": "# cook your dish here\nR, C = list(map(int, input().split()))\nl = []\nfor i in range(R):\n s = input()\n l.append(s[0] + s[1])\n r = len(l) - 1\n k = l[r-1]\n if (r == 0 and k > 0) or (k == 1 and r < 0): \n print(\"\".join(str(x) for x in l) + \" \")\n"}, "2834": {"problem_id": 2834, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(1,n+1):\n l.append(i)\nprint(l[n-1])"}, "2835": {"problem_id": 2835, "answer": "# cook your dish here\nfor _ in range(int(input())):\n\ts,t=input().strip().split(\" \")\n\n\tif len(set(s))==len(t):print(0)"}, "2836": {"problem_id": 2836, "answer": "n=int(input())\na,b=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n  if(a[i]%2==0):l.append(i)\nprint(l)"}, "2837": {"problem_id": 2837, "answer": "# cook your dish here\nn=int(input())\nr=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n s.append(s[-1]^r[i])\nprint(*s)"}, "2838": {"problem_id": 2838, "answer": "from collections import defaultdict\nn = input()\na = list(map(int, input().split(' ')))\nb = []\nfor i in range(len(a)):\n  if a[i] == '+' and b[-i-1]: a.pop(i)\n\n  else: b.append([i, i+1])\nprint(''.join(b))"}, "2839": {"problem_id": 2839, "answer": "# cook your dish here\nfrom sys import stdin,stdout\ndef read_int():return int(stdin.readline().strip().split('\\n')[:-1])\nreturn readline()\nread_ints()"}, "2840": {"problem_id": 2840, "answer": "n = int(input())\na = sorted(list(map(int,input().split())))\nans = min(a)\nprint(ans)"}, "2841": {"problem_id": 2841, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n s=input()\n l=len(s)\n count=0\n for j,c in enumerate(list(map(int,s.split(' ')))) :\n  if c=='blue' :count+=1 \n print(count)"}, "2842": {"problem_id": 2842, "answer": "# cook your dish here\nn, k = list(map(int, input().split()))\ngrid = []\nfor i in range(n):\n\tgrid.append(input() + 'X' + input()[i])\nrow = [0] * (n + 1)\nflag = False\nwhile(len(grid) > 0 and grid[-1][1] == 'O'):\n\n\trow[0], row[1], flag = 0, 1, 0\nif(flag == True and len(row) % 2 == 1 and flag == False) :\n \tprint(k)\n\n"}, "2843": {"problem_id": 2843, "answer": "n=int(input())\nwords=list(map(int,input().split()))\ns=set()\nfor i in range(n):\n s.add(words[i])\n print(len(s))"}, "2844": {"problem_id": 2844, "answer": "# cook your dish here\nimport math\nr,c=list(map(int,input().split()))\nl=[]\nfor i in range(r):\n l.append(str(i) + '*' + str(math.ceil((i-r)/3) * (i+1)))\nprint(len(l)-1)\n"}, "2845": {"problem_id": 2845, "answer": "# cook your dish here\nr,k=list(map(int,input().split()))\nl=[]\nfor i in range(k):\n x=int(input())\n l.append(x)\nprint(l.count(0))"}, "2846": {"problem_id": 2846, "answer": "n=int(input())\na=list(map(int,input().split()))\np=0\nfor i in range(1,n):\n p+=a[i]\n print(p)\n"}, "2847": {"problem_id": 2847, "answer": "# cook your dish here\nm,s=map(int,input().split())\nl=[]\nfor i in range(m):\n l.append(list(input()))\n \nx=l.pop(0)\ny=0\nwhile(len(x)>0 and x[-1]==y):\n\n x=x[0]\n y=y+1\n print(y)"}, "2848": {"problem_id": 2848, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nans = [0]*n\nfor i in range(n):\n ans[l[i]] = i+1\nprint('\\n'.join(ans))"}, "2849": {"problem_id": 2849, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n ans += l[i]\n print(ans)"}, "2850": {"problem_id": 2850, "answer": "# cook your dish here\nn, k = list(map(int, input().split()))\nl = []\nfor i in range(k):\n l.append([int(x) for x in input()])\n \nx = l[-1][0]\ny = len(l) - k - 1\nprint(y)\n"}, "2851": {"problem_id": 2851, "answer": "n=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n  if(a[i]%2==0):l.append(i)\nprint(max(l))"}, "2852": {"problem_id": 2852, "answer": "# cook your dish here\nn=int(input())\nA=list(map(int,input().split()))\np=[0]*n\nfor i in range(n):\n p[A[i]]+=1\nprint(p[n-1])"}, "2853": {"problem_id": 2853, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(m):\n\tl.append(str(input()))\nprint(l)"}, "2854": {"problem_id": 2854, "answer": "n, m = list(map(int, input().split()))\na, b = [], []\nfor i in range(m):\n   x = a[i] if i % 2 == 0 else b.append(i)\nb.sort(key=lambda x: x[0])\nc, d = 0, [0] * (n + m + 1) \nd[a] = b[b[c] - 1]\nprint(*d, sep='\\n')\n"}, "2855": {"problem_id": 2855, "answer": "# cook your dish here\nn,m=map(int,input().split())\np=[0]*(n+1)\nfor i in range(m):\n p[i]=int(input())-1\n print(p[n])"}, "2856": {"problem_id": 2856, "answer": "n=int(input())\na=list(map(str,input().split()))\nc=0\nfor i in range(n):\n if a[i]==\"A\":\n  c+=1\nprint(c)"}, "2857": {"problem_id": 2857, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n-1):\n x,y=l[i]\n l.append(x)\n c=y-x+2\n print(sum(l))"}, "2858": {"problem_id": 2858, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n l.append(list(map(int,input().split())))\nprint(max(l))"}, "2859": {"problem_id": 2859, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nb = []\nfor i in range(n):\n  a.append([int(x) for x in input().rstrip('\\n').split(' ')])\nprint(sum(a))"}, "2860": {"problem_id": 2860, "answer": "n,d,w=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append([int(x) for x in input()])\nprint(len(l))"}, "2861": {"problem_id": 2861, "answer": "R=int(input())\nfor i in range(0,R):\n\tl=list(map(str,input().split()))\nl.sort(key=lambda x:x[0])\nprint(len(l))"}, "2862": {"problem_id": 2862, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(m):\n a[i+1] += [int(x) for x in input()]\nprint(*a, sep='\\n')\n"}, "2863": {"problem_id": 2863, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n):\n if(l[i]==\"1\" and l[n-i-1] == \"1\":\n  ans+=1\nprint(ans)"}, "2864": {"problem_id": 2864, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n   if l[i]=='A' and s.count(s[0]-1)!=0:s.append(i)\nprint('\\n'.join(l))"}, "2865": {"problem_id": 2865, "answer": "# cook your dish here\nfor _ in range(int(input())):\n a,b,c=list(map(float,input().split()))\n s=a+b+c\n if s<=0:print(\"0\\n\")\n elif s>=1 and s%2==0 and (s-s//2)==1: print(\"1\\neq1\")"}, "2866": {"problem_id": 2866, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n  a.append(l[i])\nprint(a[-1])"}, "2867": {"problem_id": 2867, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n a.append(a[i]-1)\nprint(max(b))"}, "2868": {"problem_id": 2868, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if l[i]=='j':\n  c+=1\nprint(c)"}, "2869": {"problem_id": 2869, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=''\nfor i in range(len(l)):\n if l[i]=='X':\n  ans+='X'\n else:   print('')\n"}, "2870": {"problem_id": 2870, "answer": "# cook your dish here\nn,m=map(int,input().split())\na=[]\nfor i in range(n):\n a.append([int(x) for x in str(input()))+a[i]]\nans=sum(a)\nprint(ans)"}, "2871": {"problem_id": 2871, "answer": "# cook your dish here\nn,k=map(int,input().split())\nl=[]\nfor i in range(n):\n a=int(input())\n\n l.append(a)\n l[a-1]=0\nk-=1"}, "2872": {"problem_id": 2872, "answer": "# cook your dish here\nd=int(input())\nfor i in range(d):\n a=input().split()\n if a[0]==a[1]:\n  print((\"JAN\"))\n elif (str(a)==\"FEB\" or a=='J' or (a!='F' and a.isdigit()==1)) and (int(\"\".join(map(str,a)))==29 or int(\".join(\"ThankGod\")[a])==23 or i==0 for a in [a.split(\":\")[1]]) and d>0 and i!=\"F\" and int(i)>=29 and not a or \"F\",d>1"}, "2873": {"problem_id": 2873, "answer": "def __starting_point():\n s = input().strip()\n n = len(s)\n d = {}\n for i in range(n):\n  d[s[i]] = i\n print(d.values())"}, "2874": {"problem_id": 2874, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[0]*(n+1)\nfor i in range(len(l)):\n s[l[i]]+=1\nprint(s[-1])"}, "2875": {"problem_id": 2875, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(a[-1]+l[i])\nprint(*a)\n"}, "2876": {"problem_id": 2876, "answer": "# cook your dish here\nn=int(input())\nx=list(map(int,input().split()))\na,b=0,0\nfor i in range(n):\n if x[i]>b:a+=1\n x.pop(0)\nprint(a)"}, "2877": {"problem_id": 2877, "answer": "s = input()\nn = len(s)\ni = 0\nwhile(i < n):\n s = s[i:i+3]\n i = i + 1\n if s.count(' ') >= 3: \n  print(''.join(['{}'.format(c) for c in s]))\n else: break"}, "2878": {"problem_id": 2878, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(len(l)):\n if l[i]=='u':\n  c+=1\nprint(c)"}, "2879": {"problem_id": 2879, "answer": "# cook your dish here\nn=int(input())\nx=list(map(str,input().split()))\nl=[]\nfor i in range(n):\n l.append(x[i])\nprint(' '.join(l))"}, "2880": {"problem_id": 2880, "answer": "# cook your dish here\nr,c=map(int,input().split())\na=[]\nfor i in range(r):\n a.append(list(input()))\nprint(max(a))"}, "2881": {"problem_id": 2881, "answer": "# cook your dish here\ndef __starting_point():\n \n n = int(input())\n l = list(map(int, input().split()))\n count = 0\n for i in range(len(l) - 1, 0, -1):\n\tif l[i] == \"0\" and count == 0:  count += 1\n print(\"yes\")\n"}, "2882": {"problem_id": 2882, "answer": "from itertools import combinations\n class Solution(object):\n\\tdef is_parentheses(x,y,z,k=1):return x==y and z==k"}, "2883": {"problem_id": 2883, "answer": "from collections import defaultdict, deque, Counter, OrderedDict, ROUND_SQUARE\ndef merge_intervals(interval_list, start, end, size = 2):  # O(n * size * (end - start) + (start - end), n * interval_length)\n\n  if start <= end < size: # if end > start == end - size, we need to merge intervals with each other, which is not allowed in this problem. So we use the same approach as above, and remove the first part of the interval from the merge interval. We don't merge the last part, so we only keep one part for the next merge. If there are two or more overlapping parts, they must be merged into a single part in order for it to be possible. Then we iterate through the intervals until we have all of them that overlap with one another, or, if we end up to size and have no overlap, join them together. In this case we are allowed to join the remaining parts.\n\n\n\n"}, "2884": {"problem_id": 2884, "answer": "from collections import defaultdict, deque, Counter, OrderedDict, ROUND_HALF_QUEAL, OCT_NINE\nimport sys, math, heapq, itertools, collections, sys.stdin, tmprint, bisect, copy, re, heappop, ciphers, globals, nsmall, pow, stddev, sieve, time, gettime, timedelta, truedelta\nsys.setrecursionlimit(10**7)\nmod = 10**9+7\neps = eps_sqrt(2*(eps-1)**0.5) + 1\nif mod % mod == 0: raise ValueError(\"mod %s is %d\" % (mod, mod//2))\ndef LI(): return [int(i) for i in input().rstrip(\"\\n\").split(\" \")]\n# return list(map(int,input().split(__import__(\"sys\").replace(\"-\", \"-\")))).__next__"}, "2885": {"problem_id": 2885, "answer": "from collections import defaultdict\ndef merge(intervals, start, end, curr_end, prev_start, last_curr, new_interval, merge=None, visited=False):\n\t\"\"\"\n\u6ca1\u6709\u8bb0\u5f55\u5f53\u524dstart\uff0cend\u65e0\u6cd5\u521d\u59cb\u503c\u4e3astart\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n\"\"\"\n\n\tstart = end = len(start) - 1  # \u7b2c\u4e00\u6b21start\u5c0f\u4e8e\u540e\u9762\u7684\u8ddd\u79bb\u6bd4\u8f83\u7b26\u5408\u548c\u7ed3\u675f\u5904\u7406\u6392\u5e8f\u7684\u67e5\u8be2\u8282\u76ee\u7684\u9700\u8981\u81ea\u5df1\u7684\u5f62\u5f03\u6a21\u677f\u653e\u5230bisect_left\u7684\u6700\u957f\u591a\u79cd\u7c7b\u578b\u7684\u4e24\u4e2a\u7a7a\u6570\u5b57\u6420\u7d22\u7b97\u51fa\u73af\u78e8\u7a97\u53e3, \u5c31\u53ef\u4ee5\u4f7f\u7528\u672c\u8eab\u89e3\u51b3\u65b9\u6848, \u8fd9\u4e0b\u4e00\u6837\u7684\u662f\u8fd9\u4e00\u70b9, \u6211\u4eec\u4e0d\u80fd\u901a\u8fc7\u53d6\u5f97\u5b8c\u6210, \u7eed\u8d70\u4e86\u5b83, \u90a3\u4e48\u8bf4\u660e\u6216\u8005\u4e0d\u662f\u6211\u7684, \u5927\u7eb8\u7b49\u4efb\u610f\u8d2a\u5fc3\u60c5\u51b5, \u4f46\u662f\u5982\u679c\u88ab\u6ee1\u8db3\u5934, \u6709\u6269\u6b77\u4e0d\u593a\u53f3\u6307\u9488\u800c\u8a08\u793a,\n"}, "2886": {"problem_id": 2886, "answer": "def is_balanced(s, n):\n\tif n == 2: return 1\n \tfor i in range(n//2 + 1, -2*n, 2): return (s[:i] + s[i+2:]) <= n // 2 + 2 - (n % 2)\n# print(\"here\")\nn = int(input())\na = list(map(int, input().split()))\nb = [0]*(len(a)+1) \nfor x in a[::-1]: b[x] = (b[-x]+1)*2\nprint(\"%d %d\" % (a[b.index(x)], x))"}, "2887": {"problem_id": 2887, "answer": "n = int(input())\nl = list(map(int, input().split()))\ntemp = [0]*n\nfor i in range(n):\n  temp[i] = 1\n#print(temp)\ntotal = sum(l) - (temp[-1] + l[0])\nprint(*total, sep=\"\\n\")\n"}, "2888": {"problem_id": 2888, "answer": "# cook your dish here\nn,s = list(map(int,input().split()))\nd = dict(zip(sorted(list(range(n),s),n)) for s in set(input()) )\nprint(d[s])\n"}, "2889": {"problem_id": 2889, "answer": "# cook your dish here\nn, m = list(map(int, input().split()))\nl = []\nfor i in range(m):\n l.append(input(\"\".join(str(x) for x in l[-1:]) + \" \" + str(i) + \"\\n\"))\nprint(l[0])"}, "2890": {"problem_id": 2890, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=[0]*(n+1)\nfor i in range(s[n]):\n a,b,c=l[i]\n if(c==0 or a==b==1 or b==c): \n  print(abs(a-b)+(c-a)//2)"}, "2891": {"problem_id": 2891, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n-365):\n\tc=l[i+365]\n\n\tif c=='1' or c!=c[0] or len(l)==1 or (c in l[:len(c)-1] and a[c-1][c]<=365 and c>=5 and (a.count('1')+1)%365==0 and ((c>0) or a!=(c<365) and sum(a)**(1-c)))==100:a+=' '.join(['0','1','2','3','4','5','6','7','8','9','0'])) : a+=c\nprint('\\n'.join('%s'%a))"}, "2892": {"problem_id": 2892, "answer": "# cook your dish here\nt=int(input())\nfor i in range(t):\n n,m=list(map(int,input().split()))\n k=n//m\n l=[]\n if(k%2==0):print(\"0\")\n else:print(l)"}, "2893": {"problem_id": 2893, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\ns = []\nfor i in range(n):\n\ts.append(i+1)\nprint(len(s))"}, "2894": {"problem_id": 2894, "answer": "# cook your dish here\nfrom math import ceil, log2\nfor _ in range(int(input())):\n l, k, t1, h = list(map(float, input().split()))\n if l <= k or h <= h :\n  print(h*(log2(t1+1))//2) \n elif l<=k and h>=h and (l-k)*h<0 and ((l+k)+(h-1)*(2*h))/100.0 <= (2/4) * (4/8) : print(\"H\", \"K\", h, \"T1\")\n else: "}, "2895": {"problem_id": 2895, "answer": "x, y, n = map(int, input().split())\ns = [0]*n\nfor i in range(n):\n s[i+1] = x*180/x\nprint(s[n])"}, "2896": {"problem_id": 2896, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a=input()\n l.append(a)\nprint(len(l))"}, "2897": {"problem_id": 2897, "answer": "# cook your dish here\nn,m=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n r=int(input())\n l.append(r)\nr=l.index(max(l))-l[r-1]\n if r%2==0: \n  print('0')\n elif r==1 and l[0]=='1' and r>1:print('1',end=\"\")\n else: print((\"0\")+\"1\"*r+(\"1\"))\n"}, "2898": {"problem_id": 2898, "answer": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(len(l)):\n\tc+=l[i]*(i+1)//2\nif(c>=3 and l[-1]=='3' and c<=5 and (l.count('3')==0) ):\n \tprint('1\\n2')\nelse:print('')"}, "2899": {"problem_id": 2899, "answer": "n=int(input())\nl=list(map(int,input().split()))\nr=[0]*(n+1)\nfor i in l:r[i]=i+2*i\nc=l[0].copy()\ns=sum(c[1] for c in c[2:])\nprint(max(s))"}, "2900": {"problem_id": 2900, "answer": "# cook your dish here\ns = input()\nn = len(s)\nl = []\nfor i in range(n):\n\tx = s.count('A')\n \tif x%2 == 0: l.append(x//2)\n\n\tl.extend([x[0] for x in l])\nprint(sum(l))"}, "2901": {"problem_id": 2901, "answer": "# cook your dish here\nfrom collections import defaultdict, deque\ndef f(n):\n ans = 0\n for i in range(1, n+1): ans += sum(map(int, str(i)))\n return ans\nt = int(input())\nwhile t!=0: t = t-1\n a = input().split()\n n = len(a)\n b = [int(x) for x in a[0]]\n l = list(range(0, b))\n m = 10**9+7\n if m<=10: print('no')\n elif m==10 and m>=l[l.index(m):] and l[m]=='1':\n  print(sum(l)//2)"}, "2902": {"problem_id": 2902, "answer": "# cook your dish here\nn,m=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n l.append([int(x) for x in str(i)])\n \nc=l[-1][0]\nd=d[0]+l.pop(len(l)-1)\nif m%2==0 or m//2!=0:print(d+1,c+d*m)"}, "2903": {"problem_id": 2903, "answer": "# cook your dish here\nn,q=map(int,input().split())\narr=[]\nfor i in range(q):\n a=int(input())-1\n if a%2==0:arr.append(a//2) \n else:print(0)"}, "2904": {"problem_id": 2904, "answer": "# cook your dish here\nfrom sys import stdin,stdout,setrecursionlimit,collections,deque,array,itertools,sys,random,bisect,math,string,time,copy,functools\ndef solve(r,c):\n\tif r==c:return r\n \ti,j,k=r[0],c[r-1],r.index(c)-1\n\n\tn=int(str(i)+'0'*(j+k+1)) if c[i]=='-' else int('0')+int('-'*n+str((i+j)%2==0) for i in range(n))[j]\n\n  return r[:n]"}, "2905": {"problem_id": 2905, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n-1):\n s+=l[i]\n print(s)\n"}, "2906": {"problem_id": 2906, "answer": "# cook your dish here\nn, m = list(map(int, input().split()))\na = [0]\nfor i in range(n):\n a.append(a[i] + a[-1] - 1)\nprint(*a)"}, "2907": {"problem_id": 2907, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(len(l)):\n if l[i] in 'aeiou':\n  c+=1 \nprint('B',c)"}, "2908": {"problem_id": 2908, "answer": "n,s=list(map(int,input().split()))\r\na=[0]*(n+1),[0,0],[a[-1]+1,a.index(max(a))],[\"A\"]*n\r \r"}, "2909": {"problem_id": 2909, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n s.append(a[i]*(i+1)//2)\nprint(*s)"}, "2910": {"problem_id": 2910, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=[]\nfor i in range(n-1):\n ans.append(l[i]*3)\n print(ans[0])"}, "2911": {"problem_id": 2911, "answer": "# cook your dish here\nn, t = map(int, input().split())\nl = []\nfor i in range(n):\n\tx = int(input())\n\n\tl.append(x)\np = [0] * (t + 1) \ns = 0\nwhile p[s]!= '0' and len(l) > 0:   s += 1\nprint(s)"}, "2912": {"problem_id": 2912, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na,b=0,0\nfor i in range(n):\n\ta+=l[i]\nif a==b:print(0)\nelse:l.sort()\nprint(*l)"}, "2913": {"problem_id": 2913, "answer": "# cook your dish here\nn, c, r = list(map(int, input().split()))\na = [0]\nfor i in range(r):\n  a.append(a[-1] + (c - i) * (i + 1) + a[i - 1])\nprint(\"YES\")\n"}, "2914": {"problem_id": 2914, "answer": "# cook your dish here\nn, s, k = list(map(int, input().split()))\nd = {}\nfor i in range(n+1):\n  if i not in d: d[i] = 1\nans = 0.0\nif k == s: ans = abs(ans)\nprint(d[s])"}, "2915": {"problem_id": 2915, "answer": "# cook your dish here\nn,k=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n x,t,y=(int(input()),0,0)\n l.append((x-y,(t-x),(y-t)))\nprint(sum(l))"}, "2916": {"problem_id": 2916, "answer": "n=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n  a.append(0)\nans=0\ni=1\nwhile(i<n and a[i]<=a[n-i+1]):\n\n  if(max(l)==0 and max(a)>=l[0] and (i==1 or i==2)):ans+=i\nprint(ans)"}, "2917": {"problem_id": 2917, "answer": "# cook your dish here\nn = eval(input())\narr = list(map(int,input().split()))\ncnt = 0\nfor i in range(n):\n\tarr[i] = arr.pop(0) + 1\nwhile(len(arr)>0 and arr[0]==1):\n\n\tif (arr.count(1)//2)%2==0: cnt += 1; arr = [arr,1] + arr\nelse:  \n \ttemp = int(str(abs(temp))[1:])\n"}, "2918": {"problem_id": 2918, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(1,n+1) :\n if(l[i]==\"X\" : a.append(i) ) : \n  print(\"X\")\n elif(a[0] == \"0\" and a[1]!= \"1\"  : l.insert(0,\"1\")) :\n\n  b=l.pop()\n else : b = l[:]\n for j in b : print(j)\n"}, "2919": {"problem_id": 2919, "answer": ""}, "2920": {"problem_id": 2920, "answer": "n = int(input())\r\ngrid = [[int(x) for x in input().split()] for _ in range(n+1)] + [0] * n + grid[n-1] + 2*grid[-2*(grid.index(row) + 1) % 2][grid-[0]] + (n - 2) * grid.pop(0)][(1<<n)%2]"}, "2921": {"problem_id": 2921, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a,b=list(map(int,input().split()))\n l.append(a*b)\nprint(sum(l))"}, "2922": {"problem_id": 2922, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n a=list(map(int,input().split()))\n if a[0]%2!=0: \n  print(\"YES\")"}, "2923": {"problem_id": 2923, "answer": "# cook your dish here\nfor _ in range(int(input())):\n a,b=map(str,input().split())\n if len(set(a)&a)!=len(b) or b!=a:print(0)"}, "2924": {"problem_id": 2924, "answer": "# cook your dish here\nn,m,p=map(int,input().split())\nc=list(map([int(x) for x in input()]))\nd=[]\nfor i in range(m):\n if c[i]>d[-1][0]:\n  c.append(d.pop(0)) \nelse:\n\n  d.extend([i for i,d in enumerate(c) if d[0]==i])\nprint(\" \".join(str(i+1))"}, "2925": {"problem_id": 2925, "answer": "n, m = map(int, input().split())\r\na = [int(input()) for i in range(n)]; a.sort(key=lambda x: x[0]); a = sorted(a, reverse=True); ans = 0;\nfor i, s in enumerate(sorted(list(map(str,a)))) : ans += a[i] * m; print(ans)"}, "2926": {"problem_id": 2926, "answer": "# cook your dish here\nn=int(input())\ns=set(map(int,input().split()))\nfor i in range(n-1):\n s.add(str(i)+\" \")\n if len(s)%2==0:print(\"{} {}\".format(x,y,z))"}, "2927": {"problem_id": 2927, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if l[i]%4==0:c+=1\nprint('Nothing')\n"}, "2928": {"problem_id": 2928, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s)\n"}, "2929": {"problem_id": 2929, "answer": "n=int(input())\nl=list(map(int,input().split()))\nr=[]\nfor i in range(l[0]+1):\n if l[i]>r[-1]:\n  r.append(i+1)\nelif len(r)==1:  \n elif r==[] and l==[]:r.pop()\nprint(n)"}, "2930": {"problem_id": 2930, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n):\n\tans+=l[i]\nprint(ans)"}, "2931": {"problem_id": 2931, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s)"}, "2932": {"problem_id": 2932, "answer": "s = input()\nk = int(input())\nfor i in range(k):\n s = list(map(str, input().split()))\n print(\"No\")\n"}, "2933": {"problem_id": 2933, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nprint(l[1])\n"}, "2934": {"problem_id": 2934, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(len(l)):\n if l[i]=='1':\n  c+=1\nprint(c)"}, "2935": {"problem_id": 2935, "answer": "for _ in range(int(input())):\n n, f, s, t = list(map(str, input().split()))\n road = []\n for i, j, k, l in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 196, 199, 200, 211, 223, 224, 225, 227, 228, 229, 232, 233, 234, 255, 257, 263, 264, 265, 266, 267, 269, 271, 277, 280, 281, 283, 293, 307, 311, 312, 313, 314, 316, 317, 319, 320, 325, 326, 327, 328, 329, 331, 336, 338, 347, 348, 349, 350, 353, 359, 366, 368, 371, 372, 373, 374, 375, 378, 379, 383, 384, 387, 389, 400, 401, 402, 403, 405, 406, 407, 408, 409, 420, 423, 424, 425, 426, 427, 428, 429, 432, 433, 448, 445, 457, 458, 450,byn, 555, 600, 630, 666, 701, 702, 800, 198, 201, 202, 203, 204, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 230, 221, 222, 243, 245, 247, 246, 248, 249, 250, 251, 254, 261, 256, 259, 260, 286, 287, 288, 289, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 308, 310, 321, 323, 324, 330, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 357, 362, 365, 376, 377, 380,383, 398, 480, 499, 503,505,504,509,vance. "}, "2936": {"problem_id": 2936, "answer": "# cook your dish here\nn,k=map(int,input().split())\narr=list()\nfor i in range(0,n):\n\tarr.append([int(x) for x in input()])\nl=[]\nwhile(len(arr)>0 and arr[-1][0]<=l[0][1] and len(l)==0):\n\n\tx=arr[l.index(-1)[0]-1].pop(1)\n \tfor j in l[1:]: x[j]+=1\nprint(k)"}, "2937": {"problem_id": 2937, "answer": "n,k,c=list(map(int,input().split()))\ns=set()\nfor i in range(k):\n\ts.add(input()[i])\n#print(s)\nc2=c//k\nif c2%2==0:c+=1\nans=n*c-n//c\nprint((ans//2)+2)"}, "2938": {"problem_id": 2938, "answer": "for _ in range(int(input())):\n board = [0]*8\n for x in input():\n  board[x+1] = 1\n print(\"Yes\")"}, "2939": {"problem_id": 2939, "answer": "n = int(input())\nl = []\nfor i in range(n):\n l.append(list(map(int,input().split())))\nprint(max(l))"}, "2940": {"problem_id": 2940, "answer": ""}, "2941": {"problem_id": 2941, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n a,b,c=list(map(int,input().split()))\n if a=='1':\n  print('True')\n elif b == '2' and c =='5':\n\n  if (a+b+c)%2!=0 and (c+a*(b-a)//2) % 2 == 0 and ((a-b)*(c - a) // 2 + (b - c) *(a - b) + c + a*b) == c*c*a:\n\n"}, "2942": {"problem_id": 2942, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(0,len(l)):\n if l[i]<=l[-i]:\n  print(i,end=' ')\n elif l.count(max)==1:print(n,i)"}, "2943": {"problem_id": 2943, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n l.append(list(map(int,input().split())))\ni=0\nwhile(i<n and l[i]=='R'):i+=1\nprint(*l)"}, "2944": {"problem_id": 2944, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n,m,d = list(map(str,input().split()))\n s = input()\n if len(set(s))==d: \n  print(0)\n elif s.count('1')==len(list(range(1,n+1)))==1:print(n-1)"}, "2945": {"problem_id": 2945, "answer": "# cook your dish here\nfor _ in range(int(input())):\n\tn,m=map( int,input().split() )\n\n\ta=list( map( integer, input().strip()))\n\n \tprint( a[0] )"}, "2946": {"problem_id": 2946, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n b.append(100*a[i])\nprint(b[-1])"}, "2947": {"problem_id": 2947, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n   b.append(a[i])\ncnt = [0]*(len(b)-1)\nd = {}\ndef dfs(s, i, a, b, cnt, d):\n\n  if len(d[s]) == 0 or s not in d[b[0]] or i == b[1] or a == a[2] and b == []:\n\tdfs(i+1, 0, s,a,b,c,d)\n\n"}, "2948": {"problem_id": 2948, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nb = [0]*(n+1)\nfor i in range(1,n):\n a[i-1] += 1\n b.append(a[:i])\nprint(*b)"}, "2949": {"problem_id": 2949, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n   if l[i]=='1' and s>0: s+=1\nprint(s)"}, "2950": {"problem_id": 2950, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ng=[]\nfor i in range(n):\n g.append(sum(l[i:i+g[-1]])+1)\nprint(len(g))"}, "2951": {"problem_id": 2951, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n if l[i]%2==0:s+=1\nprint(s)\n"}, "2952": {"problem_id": 2952, "answer": "# cook your dish here\nm,a,b,c=list(map(int,input().split()))\nl=[]\nfor i in range(m):\n  if l[i]%2==0:l.append(i)\nans=0\nwhile(len(l)>0):ans+=l[-1]//2\nprint(ans)"}, "2953": {"problem_id": 2953, "answer": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if(l[i]=='0'):c+=1\nprint(c)"}, "2954": {"problem_id": 2954, "answer": "n=int(input())\na=list(map(int,input().split()))\nd=0\nfor i in range(0,n):\n if a[i]%3==0:d+=1\n else:print(d)"}, "2955": {"problem_id": 2955, "answer": "# cook your dish here\nn,c,b=list(map(int,input().split()))\nd=[]\nfor i in range(n):\n   d.append([int(x) for x in str(bin(i)[2:].zfill(b) + [0]*(len(str(d[i][0]) - 1) - 2)])]\nprint('\\n'.join(['{0:b}'.format(c) if d[c]['b'] else '0' for c in d]))"}, "2956": {"problem_id": 2956, "answer": "from collections import deque\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\ndef LI(): return [int(x) for x in input().split()]\n#from heapq import heappush,heappop\nmod = 10**9+7\nn = int(input())\ns = [LI() for i in range(n)]\nheap = []\nwhile len(s)>0 and s[-1]<=0: s.pop()[0]+=1\nfor i,x in enumerate(range(1,n)):\n  if x>s[i]: break\nprint(('\\n'.join(map(str,s))))\n"}, "2957": {"problem_id": 2957, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a[i]%2==0:c+=1\nprint(c)"}, "2958": {"problem_id": 2958, "answer": "# cook your dish here\nn,k=list(map(int,input().split()))\narr=[]\nfor i in range(0,n):\n arr.append([int(x) for x in str(i)])\nprint(sum(arr))\n\n"}, "2959": {"problem_id": 2959, "answer": "# cook your dish here\nfrom collections import deque\nn = int(input())\nm = len(list(map(int,input().split())))\nr = [0]*n\nfor i in range(m):\n   r[i] = r.pop(0)\nprint(r[n])"}, "2960": {"problem_id": 2960, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(1,n):\n l.append(l[i-1]*(i+1)//2)"}, "2961": {"problem_id": 2961, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n a=list(map(int,input().split()))\n l.append(a)\ns=0\nwhile s<n-1 and l[s]!=l[l.pop():] :\n s=s+1\n if s>=n: break\n print(\"Yes\")\n elif s%4==0:print(\"No\")"}, "2962": {"problem_id": 2962, "answer": "# cook your dish here\nn,t=map(int,input().split())\nmoney=0\nfor i in range(0,n):\n\tmoney+=money*i\nprint(money)"}, "2963": {"problem_id": 2963, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=float(l[0])\nfor i in range(1,n+1):\n   ans=max(ans,i)\nprint('%.6f'%ans)"}, "2964": {"problem_id": 2964, "answer": "from math import log,sqrt\r\nn = int(input().strip().split(\" \") for i in range(0,int(log(n,2))+1) if i%2==0)   #print(i,i)\nl = list(map(int,str(2*l[0]*2)+\"0\"*(l.pop()[1])+\"1\"))[:n//2] if n>0 else -1 "}, "2965": {"problem_id": 2965, "answer": "n=int(input())\nl=[]\nfor i in range(n):\n r,c=list(map(int,input().split()))\n l.append(r*(c-1)//2)\n print(day)"}, "2966": {"problem_id": 2966, "answer": "# cook your dish here\nn,m=map(int,input().split())\na=[[0]*(n+1) for i in range(m)]\nc=0\nfor i,x in enumerate(a,1):\n if x==a[-1][0]:\n  c+=1\n elif x%2==0 and x//2>=1 and a[i][1]!=x%(2*c) or x/2<=2 and (x-x//(i+2)*(1-i))//((1+i-2))==(x+x*x) and c>0:   break\n else: continue\nprint(c-m)"}, "2967": {"problem_id": 2967, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\na,s=0,0\nfor i in range(m):\n\ta+=int(l[i][0])*(s-1)//2\nif a%2==0:l.append(a/2)\nprint(n)"}, "2968": {"problem_id": 2968, "answer": "# cook your dish here\nn,a,b=list(map(int,input().split()))\ns=[0]*n\nfor i in range(n):\n s[i]=int(input())\n a=s[a-1]\n b=a//2\n print(b)\n"}, "2969": {"problem_id": 2969, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nd={}\nfor i in range(0,n):\n if l[i]=='C':\n  d['C']+=1\n elif l['D']<l['H']:\n l.pop(-1)\n d.add(l[0])\n a=l.index('C')\n while a!=-1 and (d[a]<=13 and a-1>=0) or (len(d)>0 and d[d.get(a,0)]==0 or a==d['S'][0] and len(s)==1 or s!=d[\"S\"][1] or d[\"C\"]==s[1]-1):\n\n  if d=='':break\n else:d=s.replace('D','') \nprint('Possible')"}, "2970": {"problem_id": 2970, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(l[i]*(i+1)//2)\nprint(a[0])"}, "2971": {"problem_id": 2971, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s=s+l[i]\n if(s==s0 and l[-1]=='s' and s<s1 and len(l)>1): \n  print(0)\n else:   #s,s2,l\nprint(max(sum(set(x) for x in l)))\n"}, "2972": {"problem_id": 2972, "answer": "# cook your dish here\na, b, k = list(map(int, input().split()))\nnums = []\nfor i in range(2000000):\n nums.append(str(a+b-i+1)//2)\nk = int(input())\nnum1 = num1.split('0')\nif k == len(kaleis) or k % 2 == 0: \n print(\"0\")\nelse: print(0)"}, "2973": {"problem_id": 2973, "answer": "# cook your dish here\nn,t=map(int,input().split())\ns=0.0\nfor i in range(n):\n s+=abs(s)\n if s+s>n: break\n print(c)"}, "2974": {"problem_id": 2974, "answer": "# cook your dish here\nn = int(input())\np = list(map(int, input().split()))\nd = [0]*n\nfor i in range(n):\n\td[p[i]-1]+=1\nans = []\nwhile len(d)>0:\n\n\tx = d.pop(0)\n \tif d[x]==1:ans.append([x,x+1])\nprint(len(ans))"}, "2975": {"problem_id": 2975, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=[]\nfor i in range(n):\n a,b,c,d=[int(x) for x in input()]\n l.append(a+b+c+d)\nprint(len(l))"}, "2976": {"problem_id": 2976, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n a=input()\n if len(set(a))>=3 and a[0]==a[1]:\n  print('da')\n elif a.count('6')==len(l)==1 and l[-1]!=l[:-1][0]+1:print('ne'+' '.join(str(x) for x in l),end=' ')\n else :print(\"da\")\n"}, "2977": {"problem_id": 2977, "answer": "# cook your dish here\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nn = int(input())\na = []\nfor i in range(n):\n a.append(list(map(int, input().split())))\nprint(a[n-1])"}, "2978": {"problem_id": 2978, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n x,y,z=l[i]\n c=c+1\n if(c==0 and x==y and z==x or y==z and c==c and (x-y)==(z-x) and y-z==((x+y)/2)) :\n  print(\"same\")\n elif (c>0 or x>n) or (y>=n or z>=(n-c)//2 or c%2==1 ):\n\tprint(\"different\")"}, "2979": {"problem_id": 2979, "answer": "n, m = map(int, input().split())\nlink = []\nfor i in range(0, n):\n  link.append(link[i] + int(i / 2))\ncnt = 0\nd = [0] * (n + 1)\ndef dfs(d, i, l, cnt, dp, s, t, u, v, k):\n\n  if (i == n or s == t or k == 0 or u == 1 and v == 2) or (d[l] == d[u] and k!= 0 and s!= t and u!= 1 or t == 3 and t!= 3) and (l!= k or l!= u or r!= v or d == link[d].get(l, 0) for l in d.pop() or c == k and c!= d) in u and not (c!= l and d!= links[c].is_connected() for c in links.__contains__(u)) or not(c == m and m!= n and n % 2 == c and 0 < m < c)]:\n\tdfs(links[0][0], i+1, (m - 1)*(s + k) + (t - 2*l) - (u - k), l + c, -1) if k < 0 else -k\nprint(sum(dp.values()))"}, "2980": {"problem_id": 2980, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=set()\nfor i in range(n):\n\ts.add(l[i])\nif(len(s)==1 and s.issubset({2,4,7,11,13,17,19,25,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101, 103, 107, 109, 113, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 387, 389, 393, 401, 409, 419, 421, 432, 433, 434, 475,fortunately, we don't have to test for equality, but you're welcome to try it)\nprint('W')\n"}, "2981": {"problem_id": 2981, "answer": "n=int(input())\r\nx,y=list(map(int,input().strip().split(\" \")))\nprint(min(y,x))"}, "2982": {"problem_id": 2982, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n s+=l[i]\n print(s%3)\n"}, "2983": {"problem_id": 2983, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n   s+=a[i]*(i+1)//2\nprint(s)"}, "2984": {"problem_id": 2984, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if l[i]=='0':\n  c+=1\nprint(c)"}, "2985": {"problem_id": 2985, "answer": "# cook your dish here\nfor _ in range(int(input())):\n l,d=list(map(float,input().split()))\n a=l/d\n b=d-a\n print(max(a,b))"}, "2986": {"problem_id": 2986, "answer": "# cook your dish here\nfor _ in range(int(input())):\n s = input()\n n = len(s)\n if s[0] == '[':\n  print(' '.join(map(str,s)))"}, "2987": {"problem_id": 2987, "answer": "# cook your dish here\nn,w=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n   l.append([int(x) for x in input().rstrip('\\n').split(' ')])\nif len(l)==0 or l[0][0]!=0:print(w)\nelse:l.sort(key=lambda x:x[1])"}, "2988": {"problem_id": 2988, "answer": "n, m = list(map(int, input().split()))\na = []\nfor i in range(m):\n a.append([int(input()), i])\nb = [0]*(n+1)\nc = a[n][0]-1\nd = b[0]+b[1]\ne = d-c\nf = m-d\ng = n-m\nh = g-f\nif h == m or g == n or f == 0: \n print(-1);\n"}, "2989": {"problem_id": 2989, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n,p,k=list(map(str,input().split()))\n stations=p*k\n if stations==1 and stations%2!=0 and k==0:print(0)"}, "2990": {"problem_id": 2990, "answer": "# cook your dish here\nn,k=map(int,input().split())\na=[]\nfor i in range(n):\n   a.append([int(x) for x in input()])\ns=set(a)\nl=s.pop(0) \nif len(l)==k:print(len(s))\nelse:l.sort() "}, "2991": {"problem_id": 2991, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n,m=list(map(str,input().split()))\n if m%2==0:print(1)\n else: print(0)"}, "2992": {"problem_id": 2992, "answer": "n, m = list(map(int, input().split()))\nl = []\nfor i in range(n):\n  if l[i] == 0: l.append(i)\nm = min(m, n-l[l.index(max(0, i))])\nprint(sum(l))"}, "2993": {"problem_id": 2993, "answer": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a[i]==\"A\":\n  c+=1\nprint(c//2)"}, "2994": {"problem_id": 2994, "answer": "for _ in range(int(input())):\n a,b,c=map(str,input().split())\n if a=='#':\n  print('a',a)\n elif b == '#' and c == \"#\":print('b',b)"}, "2995": {"problem_id": 2995, "answer": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n if l[i]!=l[n-i-1]:\n  s+=1\nprint(s)"}, "2996": {"problem_id": 2996, "answer": "n,k=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n\tl.append([int(x) for x in str(i)])\nprint(min(l))"}, "2997": {"problem_id": 2997, "answer": "n, m = map(int, input().split())\nedges = []\nfor i in range(m):\n   a = [int(x) for x in input()]\n\ta.append(a[-1] + x)\ngraph = [[] for _ in [0] * (n + 1)]\nvisited = set()\nwhile graph[0][0].startswith(graph[1][1]::n+1):n+=1\nflag = 0\ndef dfs(node, visited, curr_node):\n\n\tif node not in visited: visited.add((node) if visited else 0)\n\n \tcurr = node.color\n#\t\tdfs(currr, False, True, node, 0, n, 1)\t# if currr is not empty, add 1 to the visited set. if not, remove 1 from visited and add 0 to it. else 1 is added to visited as well. \nprint(flag)"}, "2998": {"problem_id": 2998, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(len(l)):\n if l[i]==\"1\":\n  s+=1\nprint(s)\n"}, "2999": {"problem_id": 2999, "answer": "n,s = list(map(int,input().split()))\nl = [0]*n\nfor i in range(n):l[i+1]+=1\ns=int(input())\nif s%2==0:print(s//2)\nelse: print(0)"}}