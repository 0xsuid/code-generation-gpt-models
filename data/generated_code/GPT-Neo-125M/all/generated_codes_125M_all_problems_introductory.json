{"0": {"problem_id": 4000, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nedges = set()\nfor _ in range(n-1):\n    a, b, c = list(map(int, input().split()))\n    if a == b:\n        edges.add(c)\n        print(a, b, c)\n    elif a == c:\n        edges.add(a)\n        print(b, c)\n    else:\n        a, b, c = list(map(int, input().split()))\n        if b == c:\n            edges.add(a)\n            print(a, b, c)\n        else:\n            a, b, c = list(map(int, input().split()))\n            if a == b:\n                edges.add(b)\n                print(b, c)\n            else:\n                a, b, c = list(map(int, input().split()))\n                if b == c:\n                    edges.add(c)\n                    print(c, a)\n                else:\n                    a, b, c = list(map(int, input().split()))\n                    if c == a:\n                        edges.add(a)\n                        print(a, b, c)\n                    else:\n                        a, b, c = list(map(int, input().split()))\n                        if a == b:\n                            edges.add(b)\n                            print(b, c)\n                        else:\n                            a, b, c = list(map(int, input().split()))\n                            if b == c:\n                                edges.add(c)\n                                print(c, a)\n                            else:\n                                a, b, c = list(map(int, input().split()))\n                          "}, "1": {"problem_id": 4001, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nd = list(map(int, input().split()))\nfor i in range(n):\n    d.append(i)\n\n# D = dict()\n# D = {1: []}\n# D = {2: []}\n# D = {3: []}\n# D = {4: []}\n# D = {5: []}\n# D = {6: []}\n# D = {7: []}\n# D = {8: []}\n# D = {9: []}\n# D = {10: []}\n# D = {11: []}\n# D = {12: []}\n# D = {13: []}\n# D = {14: []}\n# D = {15: []}\n# D = {16: []}\n# D = {17: []}\n# D = {18: []}\n# D = {19: []}\n# D = {20: []}\n# D = {21: []}\n# D = {22: []}\n# D = {23: []}\n# D = {24: []}\n# D = {25: []}\n# D = {26: []}\n# D = {27: []}\n# D = {28: []}\n# D = {29: []}\n# D = {30: []}\n# D = {31: []}\n# D = {32: []}\n# D = {33: []}\n# D = {34: []}\n# D = {35: []}\n# D = {36: []}\n# D = {37: []}\n# D = {38: []}\n# D = {39: []}\n# D = {40: []}\n# D = {41: []}\n# D = {42: []}\n# D = {43: []}\n# D = {44: []}\n# D = {45: []}\n# D = {46: []}\n# D = {47: []}\n# D = {48: []}\n# D = {49: []}\n# D = {50: []}\n# D = {51: []}\n# D = {52: []}\n# D = {53: []}\n# D = {54: []}\n# D = {55: []}\n# D = {56: []}\n# D = {57: []}\n# D = {58: []}\n# D = {59: []}\n# D = {60: []}\n# D = {61: []}\n# D = {62: []}\n# D = {63: []}\n# D = {64: []}\n# D = {65: []}\n# D = {66: []}\n# D = {67: []}\n# D = {68: []}\n# D = {69: []}\n# D = {70: []}\n# D = {81: []}\n# D = {82: []}\n# D = {83: []}\n# D = {84: []}\n# D = {85: []}\n# D = {86: []}\n# D = {87: []}\n# D = {88: []}\n# D = {89: []}\n# D = {90: []}\n# D = {91: []}\n# D = {92: []}\n# D = {93: []}\n# D = {94: []}\n# D = {95: []}\n# D = {96: []}\n# D = {97: []}\n# D = {98: []}\n# D = {99: []}\n# D = {100: []}\n# D = {101: []}\n# D = {101: []}\n# D = {102: []}\n# D = {103: []}\n# D = {104: []}\n# D = {105: []}\n# D = {106: []}\n# D = {107: []}\n# D = {108: []}\n# D = {109: []}\n# D = {110: []}\n# D = {111: []}\n# D = {112: []}\n# D = {113: []}\n# D = {114: []}\n# D = {115: []}\n# D = {116: []}\n# D"}, "2": {"problem_id": 4002, "answer": "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i]\n    if s % k == 0:\n        s //= k\n    elif s % 2 == 0:\n        s //= 2\nprint(s)\n"}, "3": {"problem_id": 4003, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = 0\nfor i in range(n):\n    if a[i] == 'L':\n        l += 1\n    else:\n        l -= 1\nprint(l)"}, "4": {"problem_id": 4004, "answer": "n = int(input())\na = list(map(int, input().split()))\nif n % 2 == 0:\n    print(-1)\n    return\nelse:\n    d = 3\n    for i in range(n//2):\n        if a[i] == 0:\n            d += 1\n        elif a[i] == 1:\n            d += 1\n        else:\n            d = -1\n            break\n    if d == -1:\n        print(d)\n    else:\n        print(d)\n"}, "5": {"problem_id": 4005, "answer": "from sys import stdin,stdout\nfrom math import ceil,sqrt,factorial,gcd\nfrom bisect import bisect_left as bl,bisect_right as br,bisect_top as br,insort\nfrom collections import defaultdict as dd,deque,reversed\nfrom itertools import combinations,permutations,accumulate,groupby,compress\nfrom operator import itemgetter\nfrom functools import reduce,cmp_to_key\nfrom heapq import heappop,heappush,heapify,heappop,heap,pop,^\n                                         q,\n                                         nxt,nonlocal\nfrom collections import deque,OrderedDict as O_MALL,UserIApplater as IApp later,Time as T_MALL\nfrom bisect import bisect_left as bl,bisect_right as br,bisect_top as br,bisect_bottom as br,insort\nfrom statistics import mean,pow,factorial,ceil\nfrom statistics import mean,pow,factorial,mod,acos,os,-os,-mod\nfrom queue import deque,append,PriorityQueue as PQ\nfrom time import timed\nfrom fractions import Fraction\nfrom operator import ior,romhipart,radix\nfrom random import shuffle,randrange,l_random,randrange,randrange_longest\nfrom numpy import ceil,pi,array,array_longest,ast,functools,math,itertools,heap,statistics,pypy\nfrom tensio import multiples_from_list,multimples_from_list,reduce\nfrom functools import lru_cache,pick,r_random,str,algebra,collections,doge\nfrom re import sub,subroutines,full,full_log,full_rand,full_rand_from_numpy,full_rand_from_ints,full_rand_from_variabundant\nfrom scipy.special import comb,to_truediv,convert,trans,sieve,sys,inf,I_MAX,INF,N_CACHE,memo,getcontext,heap,heapq,heapq_cache,heapq,heapq_util,memoize,query,querycontext,query_cache,query,querycontext_cache,query_util\nfrom heapq import heap,heapify,heap,heap_mod,heapify_with_cache,heapify_ind,heapmod,heapmod_with_cache,heapmod_with_cache,heapmod_with_cache,heapmod,heapq,heapq_mod,heapq_mod,heapq,heapq_util,heapq,heapq_util,heapq_util,heapq_util,heapq]\nfrom collections import deque,OrderedDict,defaultdict,heapify,heap,pop,mod,mod_with_cache,mod_with_cache,mod_with_cache,mod_with_cache,mod_with_cache,mod_with_cache,modular\nfrom random import random,inf,random_randget,random_randget,round,close, fractions,mod,fractions,mod2,os,ot,str,ast,prod,modifor,modFUN,mod2f,modFUNDFried_tap,mod2f_with_cache,modFUNDFried_tap,mod2f_with_cache,mod2f,modmod,modular\nfrom types import List,set,integer,int,numpy\nfrom collections import deque,OrderedDict,defaultdict,heap,load,loadcontext,loadderive,loadderive_with_cache,loadderive,list,set,timedelta,timedelta_with_cache,timedelta,timedelta_with_cache,trunc,trunc_with_cache,truediv,truediv,squeeze,squeezecontext,squeeze,squeezecontext_with_cache,squeezecontext_with_cache,squeezecontext_with"}, "6": {"problem_id": 4006, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    if a[i] == 0:\n        print(i)\n        continue\n    else:\n        print(a[i] - a[i-1] + 1)\n"}, "7": {"problem_id": 4007, "answer": "from bisect import bisect_left as bl\nn = int(input())\nl = list(map(int,input().split()))\ns = sorted(l,reverse=True)\nl.insert(0,s[0])\nprint(*l,sep=\"\\n\")"}, "8": {"problem_id": 4008, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef color(a):\n    return any(a[i] == x for i, x in enumerate(a) if x not in a)\n\nprint('YES' if color(a) else 'NO')\n"}, "9": {"problem_id": 4009, "answer": "n, x, y = map(int, input().split())\nmod = 10 ** 9 + 7\np = [0] * (n + 1)\nfor i in range(n):\n    p[i] = 1\n    for j in range(i + 1, n):\n        p[j] += p[i] * (p[i] - 1)\n        p[j] %= mod\nprint(p[n])"}, "10": {"problem_id": 4010, "answer": "def check(arr,n,l):\n    if l==1:\n        return True\n    else:\n        for i in range(n-1,0,-1):\n            if arr[i]==arr[i+1]:\n                return True\n        return False\n\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    print(check(l,n,l))"}, "11": {"problem_id": 4011, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    if len(s) == 1:\n        print(0)\n    else:\n        print(n-1)\n"}, "12": {"problem_id": 4012, "answer": "for t in range(int(input())):\n    a,b,c = map(int,input().split())\n    if a%3==0:\n        print(c)\n    else:\n        print(a//3)\n        print(b//3)\n"}, "13": {"problem_id": 4013, "answer": "n = int(input())\na = list(map(int,input().split()))\nif n==1:\n    print(0)\nelse:\n    print(n-1)\n"}, "14": {"problem_id": 4014, "answer": "from sys import stdin, setrecursionlimit\ninput = stdin.readline\nn, m = list(map(int, input().split()))\ns = list(map(int, input().split()))\nfor i in range(m):\n    s.append(s[-1] - s[-2])\nprint('\\n'.join(s))"}, "15": {"problem_id": 4015, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i] == 0:\n        c += 1\n    else:\n        if b[i] == 0:\n            c += 1\n        else:\n            if c == m:\n                print(0)\n            else:\n                print(c)\n                break\n    elif a[i] == 0:\n        c += 1\n    else:\n        if b[i] == 0:\n            c += 1\n        else:\n            if c == m:\n                print(0)\n            else:\n                print(c)\n                break\n    elif a[i] == 0:\n        c += 1\n    else:\n        if b[i] == 0:\n            c += 1\n        else:\n            if c == m:\n                print(0)\n            else:\n                print(c)\n                break\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n          "}, "16": {"problem_id": 4016, "answer": "n, k = map(int, input().split())\ns = input()\nfor i in range(n):\n    l = list(map(str, s[i:i+k]))\n    if l.count(\".01\") == k:\n        print(\"\".join(s))\n    else:\n        print(\"\".join(s[:i] + s[i+k:]))"}, "17": {"problem_id": 4017, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint(len(a))"}, "18": {"problem_id": 4018, "answer": "n, k = list(map(int, input().split()))\ns = input()\nl = len(s)\nc = 0\nfor i in range(k):\n    if s[i] not in l:\n        c += 1\n        l.add(s[i])\n    else:\n        c += 1\nprint(c)\n"}, "19": {"problem_id": 4019, "answer": "from collections import deque\ndef prune(n, m, d):\n    if n == 0:\n        return \"NO\"\n    if m == 0:\n        return \"YES\"\n    q = deque([])\n    for _ in range(n):\n        q.append(m)\n        m = prune(m, d)\n        if m not in q:\n            q.append(m)\n            m = q[m]\n    return \"\".join(q)\n\nn, m, D = map(int, input().split())\nedges = []\nfor i in range(n):\n    edges.append([])\n    for j in range(m):\n        if i == j:\n            continue\n        edges[i].append(j)\n        edges[j].append(i)\n\ndis = [0] * m\ndis[0] = 1\nfor i in range(1, n):\n    if dis[i] == 0:\n        dis[i] = 1\n        continue\n    if dis[i] == 1:\n        dis[i] = dis[i - 1]\n        continue\n    if dis[i] == D:\n        dis[i] = min(d[i] for i in dis[i - 1])\n        dis[i] = min(d[i] for i in dis[i])\n    elif dis[i] == D:\n        dis[i] = min(d[i] for i in dis[i - 1])\n        dis[i] = min(d[i] for i in dis[i])\n    else:\n        dis[i] = min(d[i] for i in dis[i - 1])\n        dis[i] = min(d[i] for i in dis[i])\nprint(\"YES\\n\" if dis[i] == D else \"NO\")"}, "20": {"problem_id": 4020, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ns = list(map(int,input().split()))\nfor i in range(s[0]):\n    h,m = map(int,input().split())\n    if h == m:\n        print(s[i]*m)\n    else:\n        print(s[i]*s[i-1]*s[i-2])"}, "21": {"problem_id": 4021, "answer": "def __starting_point():\n    a = int(input())\n    print(a)\n__starting_point()"}, "22": {"problem_id": 4022, "answer": "n = int(input())\nl = [int(x) for x in input().split()]\nfor i in range(n):\n    l.append(l[-1] + l[-2])\nprint(max(l))"}, "23": {"problem_id": 4023, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if a[0] == 1 else \"NO\")\n"}, "24": {"problem_id": 4024, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\ns = input()\n\nd = {}\nfor i in range(n):\n    d[i] = list(map(int, input().split()))\n\nl = len(s)\nc = 0\nfor i in range(k):\n    if s[i] not in d:\n        c += 1\n    elif s[i] not in l:\n        c += 1\n    else:\n        l -= 1\nprint(c)\n"}, "25": {"problem_id": 4025, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    a, b, c = list(map(int, input().split()))\n    d = max(a, b, c)\n    ans = 0\n    for i in range(1, d):\n        ans += sum(map(int, input().split()))\n    print(ans)\n\n\nsolve()\n"}, "26": {"problem_id": 4026, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    tile = [[int(x) for x in input().split()] for _ in range(n)]\n    m = m * 2\n    print('YES') if tile[0][0] == m else 'NO'"}, "27": {"problem_id": 4027, "answer": "n = int(input())\nA = [0]*n\nfor i in range(n):\n    A[i] = list(map(int,input().split()))\n\ns = 0\nfor i in range(n):\n    s += A[i] - A[i-1]\n\nprint(s)"}, "28": {"problem_id": 4028, "answer": "from math import *\nMOD = 1000000007\ndef gcd(a, b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return gcd(b % MOD, a)\n    else:\n        return b\ndef mod_gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 1:\n        return gcd(b % MOD, a)\n    else:\n        return b\ndef mod_gcd_st(a, b):\n    if a == 0:\n        return b\n    elif b == 1:\n        return gcd(b % MOD, a)\n    else:\n        return b\ndef mod_gcd_st_st(a, b):\n    if a == 0:\n        return b\n    elif b == 1:\n        return gcd(b % MOD, a)\n    else:\n        return b\n\nn = int(input())\ns = input()\nst = \"\"\nfor i in range(n):\n    st = st + st[::-1]\n    st = st[::-1] + st[1:]\n    st = st[::-1] + st[0:].join(reversed(st))\n    st = st[::-1] + st[0:].join(reversed(st))\nprint(mod_gcd(st, 2n))"}, "29": {"problem_id": 4029, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\ns = 0\nfor i in range(n):\n    if l[i] == '0':\n        s += 1\nprint(s)"}, "30": {"problem_id": 4030, "answer": "n = int(input())\ns = input()\nl = len(s)\nfor i in range(l):\n    if s[i] not in 'abcdefghijklmnopqrstuvwxyz':\n        s[i] = ''.join(s[i])\n        l -= 1\nprint(l)"}, "31": {"problem_id": 4031, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    print(''.join(s))"}, "32": {"problem_id": 4032, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if i % 2 == 0:\n        s += a[i]\n    else:\n        s += a[i] - a[i - 1]\nprint(s)\n"}, "33": {"problem_id": 4033, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    a, b = list(map(int, input().split()))\n    print(main())\n\nmain()\n"}, "34": {"problem_id": 4034, "answer": "n = int(input())\ns = input()\nif n % 2 == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"}, "35": {"problem_id": 4035, "answer": "from math import ceil, log2, floor, sqrt, factorial, gcd, is_integer, is_integer, pow, ceil, inf, floor_to_floor, sqrt\n\ndef main():\n    A, B = list(map(int, input().split()))\n    dp = [0] * 10001\n    for i in range(A):\n        dp[i] = int(ceil(sqrt(dp[i])) / (i + 1))\n    print(dp)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "36": {"problem_id": 4036, "answer": "n, k = list(map(int, input().split()))\ns = [0] * (k + 1)\nfor i in range(n):\n    s[i] = s[i + 1] + 1\nprint('YES' if s[k] == s[k + 1] else 'NO')\n"}, "37": {"problem_id": 4037, "answer": "from collections import defaultdict, deque\nn, r = list(map(int, input().split()))\nd = defaultdict(list)\nfor _ in range(n):\n    a, b = list(map(int, input().split()))\n    d[a].append(b)\n    d[b].append(a)\n\nl = [0] * n\nl[0] = 1\nfor i in range(1, n):\n    if l[i] == 1:\n        l[i] = 1\n    else:\n        l[i] = max(l[i], l[i-1] + 1)\nprint(max(l))\n"}, "38": {"problem_id": 4038, "answer": ""}, "39": {"problem_id": 4039, "answer": "n, r = map(int, input().split())\np = [0] * (r + 1)\nfor i in range(n):\n    p[i] += p[i - 1]\nprint(\"YES\" if p[r] * p[r] > p[r] * p[r] else \"NO\")"}, "40": {"problem_id": 4040, "answer": ""}, "41": {"problem_id": 4041, "answer": "s = input()\nt = input()\n\ndef remove(s, l):\n    if l>len(s):\n        return 0\n    elif l==len(s):\n        return len(s)\n    else:\n        s.pop()\n        return len(s)\n\ns = input()\nt = input()\n\n# \u533a\u9593\u53d6\u5f97\n# s[i]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# t[i]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# s[i+1]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# s[i+1]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# s[i+1+1]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# s[i+1+1+1]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# s[i+1+1+1+1]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# s[i+1+1+1+1+1]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# s[i+1+1+1+1+1+1]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# s[i+1+1+1+1+1+1+1]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# s[i+1+1+1+1+1+1+1+1]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# s[i+1+1+1+1+1+1+1+1]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# s[i+1+1+1+1+1+1+1+1+1]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# s[i+1+1+1+1+1+1+1+1+1]\u8868\u793a\uff1a\u6587\u5b57\u5217\u4f4di\uff1a\u6587\u5b57\u5217\u4f4di+1\uff1a\u6587\u5b57\u5217\u4f4di+1+1\n# s[i+1+1+1+1+1+1+1+1+1+1]\u8868\u793a\uff1a\u6587\u5b57"}, "42": {"problem_id": 4042, "answer": "from math import ceil\nn = int(input())\nfor i in range(n):\n    x = int(input())\n    print(x)"}, "43": {"problem_id": 4043, "answer": "from collections import deque\nn,d,k = map(int,input().split())\nedges = []\nfor i in range(n):\n    if i%k == 0:\n        edges.append(i)\n        continue\n    edges.sort()\n    d = d+k\n    k = int(d/k)\n    if d == k:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        continue\n    root = list(map(int,edges[i]))\n    root.sort()\n    root.append(root[0])\n    root.append(root[1])\n    \n    if root[0] == root[1]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[0] == root[1]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()\n        root.pop()\n        \n    if root[1] == root[0]:\n        root.pop()"}, "44": {"problem_id": 4044, "answer": "def binary_string(s, n = 4):\n    if n == 0:\n        return s\n    elif n == 1:\n        return '0'\n    else:\n        s = s[::-1]\n        for i in range(n - 1, -1, -1):\n            if s[i] == s[i + 1]:\n                s[i] = s[i + 1]\n            else:\n                s[i] = s[i + 1]\n        return s\n\nn = int(input())\ns = input()\nprint(binary_string(s, n))\n"}, "45": {"problem_id": 4045, "answer": "n = int(input())\ns = input()\na,b,c = list(map(int,input().split()))\nif s == \"a\":\n    print(\"YES\")\nelse:\n    print(\"NO\")\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   "}, "46": {"problem_id": 4046, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nn, m = list(map(int, input().split()))\ns = sorted(list(map(int, input().split())))\nl = [0] * (m + 1)\nfor i in range(1, m + 1):\n    if s[i] == s[i - 1]:\n        l[i] = 1\n    else:\n        l[i] = s[i - 1]\nprint(l[m] + 1)\n\n"}, "47": {"problem_id": 4047, "answer": "n = int(input())\nx = list(map(int, input().split()))\n\ndef solve(x, y):\n    if x[y] == y:\n        return 1\n    elif x[y] < y:\n        return 0\n    else:\n        x.remove(y)\n        y.remove(x[y])\n        return min(x[y], x[x[y]])\n\nsolve(x, y)\nprint(solve(x, y))\n"}, "48": {"problem_id": 4048, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n-a[0])"}, "49": {"problem_id": 4049, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(min(a, b))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "50": {"problem_id": 4050, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nprint(len(set(a)))\n"}, "51": {"problem_id": 4051, "answer": "from sys import stdin\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\nb = list(map(int, stdin.readline().split()))\nb.sort()\nprint('YES' if b[0] == 2 else 'NO')\n"}, "52": {"problem_id": 4052, "answer": "n = int(input())\ns = input()\nt = input()\n\ndef move(s, t):\n    if s == t:\n        return 1\n    elif s == s[::-1]:\n        return 0\n    else:\n        s = s[::-1]\n        t = t[::-1]\n        return max(move(s, t), 0)\n\nprint(n)\nfor i in range(n):\n    print(i + 1, end=' ')\n    print(i + 1, end=' ')\n"}, "53": {"problem_id": 4053, "answer": "n = int(input())\ns = input()\na = list(s)\nb = list(s)\n\nfor i in range(n-1):\n    if a[i] not in b:\n        a[i] = 'P'\n        b[a[i]] = 'S'\n\nprint(''.join(a))\n"}, "54": {"problem_id": 4054, "answer": "import sys\n\ndef func():\n    a, b = map(int, input().split())\n    return max(a, b)\n\ndef __starting_point():\n    print(func())\n\n__starting_point()"}, "55": {"problem_id": 4055, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = 1\n    for j in range(i, n - 1, -1):\n        if a[j] == 0:\n            a[j] = 0\n            break\n    if a[i] == 0:\n        a[i] = 0\nprint(a[n])"}, "56": {"problem_id": 4056, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    x = a[i]\n    if x % 10 == 0:\n        print(x)\n    else:\n        print(x//10)\n"}, "57": {"problem_id": 4057, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef dfs(i, j):\n    if i == j:\n        return 0\n    elif i == 0:\n        return 1\n    else:\n        return dfs(i + 1, j)\n\ndef dfs(i, j):\n    if i == 0:\n        return 1\n    elif j == 0:\n        return 2\n    else:\n        return dfs(i + 1, j)\n\nprint(dfs(0, len(a)))\n"}, "58": {"problem_id": 4058, "answer": "from bisect import bisect_left as bl, bisect_right as br, bisect_left as brs, bisect_left as bls\nfrom heapq import heapify, heappush, heappop\nfrom collections import defaultdict as dd, deque, Counter as C, OrderedDict as O\nfrom itertools import combinations as comb, islice, groupby, map, stderr\nfrom operator import itemgetter as pter\nfrom functools import reduce,cmp_to_key as rfloord,cmp_to_key as ocnt\n\n\ndef main():\n    n,r = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    d = {tuple(i) for i in range(n)}\n    c = defaultdict(lambda: 0)\n    for i,v in enumerate(a):\n        c[v] += 1\n        if len(c) == 1:\n            r -= 1\n        elif len(c) == 0:\n            r -= 1\n        else:\n            c[i] += 1\n            if r == 0:\n                p = min(r,c[i])\n                d[p] = 1\n            else:\n                p = min(r,c[i])\n                d[p] = 1\n            if c[i] == 0:\n                p = min(r,c[i])\n                d[p] = 1\n            if c[i] == 0:\n                p = min(r,c[i])\n                d[p] = 1\n            if p == r:\n                print(-1)\n            else:\n                print(p)\n                return\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n"}, "59": {"problem_id": 4059, "answer": "N = int(input())\nprint(N)"}, "60": {"problem_id": 4060, "answer": "from collections import defaultdict\n\ndef main():\n    n = int(input())\n    s = input()\n    d = defaultdict(list)\n    for i in range(n):\n        d[s[i]].append(i)\n        d[s[i]].sort()\n    print(len(d))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "61": {"problem_id": 4061, "answer": "s = input()\nt = input()\n\ndef remove(s, l):\n    if l == len(s):\n        return s\n    elif l == len(s):\n        return s[::-1]\n    else:\n        s.pop(l)\n        return s[::-1]\n\ndef lcm(a, b):\n    return abs(a * b) // abs(a * b)\n\ndef s1(s):\n    return s1(s)\n\ndef s2(s):\n    return s1(s)\n\ndef lcm(a, b):\n    return abs(a * b) // abs(a * b)\n\ndef remove(s, l):\n    if l == len(s):\n        return s\n    elif l == len(s):\n        return remove(s, l)\n    else:\n        s1 = s1(s)\n        s2 = s2(s)\n        return remove(s, l)\n\ndef max_length(s):\n    return max(s)\n\ndef max_length_sorted(s):\n    return sorted(s, key=lambda x: x[1], reverse=True)\n\ndef max_length_sorted_sorted(s):\n    return sorted(s, key=lambda x: x[1], reverse=True)\n\ndef is_subseq(s, l):\n    return len(s) == len(set(s))\n\ndef is_subseq_sorted(s, l):\n    return len(s) == len(set(s))\n\ndef solve(s):\n    l = len(s)\n    l1 = 0\n    l2 = 0\n    for i in range(l1, l2+1):\n        if s[i] == s[i+1]:\n            l1 += 1\n        else:\n            l2 += 1\n    return l1 + l2"}, "62": {"problem_id": 4062, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    a,b,c,d = map(int,input().split())\n    if a == b == c:\n        print(d)\n    elif a == c:\n        print(d)\n    else:\n        x = a + b + c\n        y = a + c\n        print(solve())\n\nsolve()"}, "63": {"problem_id": 4063, "answer": "import bisect\ndef solve():\n    N = int(input())\n    d = list(map(int, input().split()))\n    k = int(10**5)\n    print(solve())\n\nsolve()"}, "64": {"problem_id": 4064, "answer": "import math\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nfor i in range(h):\n    if a[i] == 0:\n        c += 1\n    else:\n        a[i] = 0\nprint(c)"}, "65": {"problem_id": 4065, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a.append(i+1)\nprint(max(a))"}, "66": {"problem_id": 4066, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    if a[i] % 2 == 0:\n        print(i, end=' ')\n    else:\n        print(i, end=' ')\n"}, "67": {"problem_id": 4067, "answer": "def __starting_point():\n    n = int(input())\n    s = input()\n    d = {}\n    for i in range(n):\n        if s[i] == '0':\n            d[i] = 1\n        else:\n            d[i] = d[i-1] + 1\n    print(d.get(0,0))\n__starting_point()"}, "68": {"problem_id": 4068, "answer": "from bisect import bisect_left as b, insort_left as l, bisect_right as r, insort_right as r, bisect_left as l, bisect_right as r, cnt = map(int, input().split())\nn, m = list(map(int, input().split()))\na = [0]*(n+1)\nb = [0]*(n+1)\ncnt = 0\nfor i in range(1, n+1):\n    if a[i] == 0:\n        cnt += 1\n    elif a[i] == 1:\n        cnt += 1\n    else:\n        b[i] = 1\n        insort_left(b, i)\n        insort_right(b, i)\n        cnt %= 1000000007\n        r = min(b[i], cnt)\n        r = min(b[i], r)\n        r = min(r, cnt)\n        cnt %= 1000000007\n        print(cnt)\n"}, "69": {"problem_id": 4069, "answer": "from bisect import *\ndef main():\n    X, K = map(int, input().split())\n    d = X - 1\n    moves = []\n    for i in range(K):\n        moves.append(abs(d) - min(d, X))\n    moves.sort(key = lambda move: move[0])\n    print(moves)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "70": {"problem_id": 4070, "answer": "n = int(input())\nprint(2)\nfor i in range(n):\n    print(i)"}, "71": {"problem_id": 4071, "answer": "def __starting_point():\n    a=int(input())\n    print(a)\n__starting_point()"}, "72": {"problem_id": 4072, "answer": "def main():\n    a = int(input())\n    print(a)\n\nmain()\n"}, "73": {"problem_id": 4073, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(\"\".join(a))"}, "74": {"problem_id": 4074, "answer": "for _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    s = 0\n    for i in range(k):\n        s += int(s)\n    print(s)\n"}, "75": {"problem_id": 4075, "answer": "def main():\n    N, M = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    dp = [[0] * (N + 1) for _ in range(M + 1)]\n    for i in range(1, M + 1):\n        dp[i][0] = 1\n        for j in range(1, N + 1):\n            dp[i][j] = dp[i - 1][j] + dp[i][j - 1]\n            if j % 2 == 0:\n                dp[i][j] = min(dp[i][j - 1], dp[i - 1][j] + dp[i][j - 2])\n            else:\n                dp[i][j] = min(dp[i][j - 1], dp[i][j] + dp[i - 1][j - 2])\n                if j % 2 == 1:\n                    dp[i][j] = min(dp[i][j - 1], dp[i][j] + dp[i - 1][j - 2])\n                else:\n                    dp[i][j] = min(dp[i][j - 1], dp[i][j] + dp[i - 1][j - 2])\n                if j % 2 == 2:\n                    dp[i][j] = min(dp[i][j - 1], dp[i][j] + dp[i - 1][j - 2])\n                else:\n                    dp[i][j] = min(dp[i][j - 1], dp[i][j] + dp[i - 1][j - 2])\n                if j % 2 == 3:\n                    dp[i][j] = min(dp[i][j - 1], dp[i][j] + dp[i - 1][j - 2])\n                else:\n                    dp[i][j] = min(dp[i][j - 1], dp[i][j] + dp[i - 1][j - 2])\n                if j % 2 == 4:\n                    dp[i][j] = min(dp[i][j - 1], dp[i][j] + dp[i - 1][j - 2])\n                else:\n                    dp[i][j] = min(dp[i][j - 1], dp[i][j] + dp[i - 1][j - 2])\n                if j % 2 == 5:\n                    dp[i][j] = min(dp[i][j - 1], dp[i][j] + dp[i - 1][j - 2])\n                else:\n            "}, "76": {"problem_id": 4076, "answer": "#!/usr/bin/env python3\n\ndef __starting_point():\n    A, B = list(map(int, input().split()))\n    h, m = 0, 0\n    for i in range(len(A)):\n        h += A[i] * (12 * h)\n        m += A[i] * (12 * m)\n    print((\"%.6f\" % (h)))\n__starting_point()"}, "77": {"problem_id": 4077, "answer": "from collections import deque\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef find(x):\n    if x == 0:\n        return 0\n    elif x == 1:\n        return 1\n    else:\n        x = x // m\n        return find(x)\n\ndef main():\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(find(a))\n\nmain()\n"}, "78": {"problem_id": 4078, "answer": "from sys import stdin,stdout\nn,m=list(map(int,stdin.readline().split()))\na=list(map(int,stdin.readline().split()))\nl=list(map(int,stdin.readline().split()))\nfor i in range(m):\n    l.append(list(stdin.readline().split()))\nprint(len(l))\n"}, "79": {"problem_id": 4079, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\ns = list(map(str,s))\nfor i in range(n):\n    if s[i] in 'abcdefghijklmnopqrstuvwxyz':\n        print('Yes')\n    else:\n        print('No')\n"}, "80": {"problem_id": 4080, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nseg = [0] * (m + 1)\nfor i in range(1, n + 1):\n    if a[i] == 0:\n        seg[i] = 1\n    else:\n        seg[i] = seg[i - 1] + 1\nprint(seg[n - 1])\n"}, "81": {"problem_id": 4081, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = 0\nfor i in range(n):\n    if a[i] == 'L':\n        l += 1\n    else:\n        l -= 1\nprint(l)"}, "82": {"problem_id": 4082, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    if a[i] > a[i - 1]:\n        l.append(i)\n    else:\n        l.append(i - 1)\nprint(max(l))"}, "83": {"problem_id": 4083, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nl = 0\nfor i in range(n):\n    if a[i] == 0:\n        l += 1\n    else:\n        l = min(l, k)\nprint(l)"}, "84": {"problem_id": 4084, "answer": "n,a,b=map(int,input().split())\nc=0\nfor i in range(n):\n    if a%i==0:\n        c+=1\nprint(c)"}, "85": {"problem_id": 4085, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    d = list(map(int, input().split()))\n    print(min(d))\n"}, "86": {"problem_id": 4086, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a.append(i)\nprint(sum(a))"}, "87": {"problem_id": 4087, "answer": "from sys import stdin, stdout\nn = int(stdin.readline())\na = int(stdin.readline())\nprint(a)\n"}, "88": {"problem_id": 4088, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    s = input().strip()\n    m = int(input())\n    b = []\n    for i in range(m):\n        b.append(input())\n    print(''.join(b))\n"}, "89": {"problem_id": 4089, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    d = dict()\n    for _ in range(N):\n        d[N] = list(map(int, input().split()))\n        d[N].append(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d[N] = list(d[N-1])\n        d["}, "90": {"problem_id": 4090, "answer": "n = int(input())\nw = []\nfor i in range(n):\n    w.append(input())\n    w.sort()\n    if len(w) > 2:\n        print(len(w))\n    else:\n        print(len(w[0]))\n"}, "91": {"problem_id": 4091, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef max(a, d):\n    res = 0\n    for i in range(len(a)):\n        if a[i] <= d:\n            res += d\n        else:\n            res += a[i]\n    return res\n\ndef calc(a, d):\n    res = 0\n    for i in range(len(a)):\n        if a[i] <= d:\n            res += d\n        else:\n            res += a[i]\n    return res\n\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        d[a[i]].append(i)\n    print(calc(a, d))\n__starting_point()"}, "92": {"problem_id": 4092, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    x = a[i]\n    l.append(x)\nprint(len(l))"}, "93": {"problem_id": 4093, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n, m = map(int, input().split())\n    a = [0] * (n + 1)\n    for i in range(n):\n        a[i] = 1\n        for j in range(i + 1, n):\n            a[j] = a[i] - a[j]\n            if a[i] == 0:\n                break\n    print(sum(a))\n\nt = int(input())\nfor _ in range(t):\n    solve()"}, "94": {"problem_id": 4094, "answer": "def main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n % 1000000007)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "95": {"problem_id": 4095, "answer": "from bisect import bisect_left as bl, bisect_right as br, bisect_left as brs, bisect_left as brs_left, bisect_right as brs_right\nfrom heapq import heappush,heappop,heappushpop\nn, m = list(map(int, input().split()))\ns = sorted(list(map(int, input().split())))\nprint(len(s))\n"}, "96": {"problem_id": 4096, "answer": ""}, "97": {"problem_id": 4097, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nif n % 2 == 0:\n    print(-1)\n    return\n\nfor i in range(n // 2):\n    if a[i] == 0:\n        a[i] = 1\n        break\n    else:\n        a[i] = a[i + 1] + 1\n        b[i] = a[i] + 1\n\nif n % 2 == 1:\n    print(-1)\n    return\n\nfor i in range(n // 2):\n    if a[i] == 0:\n        a[i] = 1\n        break\n    else:\n        a[i] = a[i + 1] + 1\n        b[i] = a[i] + 1\n\nif n % 2 == 0:\n    print(-1)\n    return\n\nfor i in range(n // 2):\n    if a[i] == 0:\n        a[i] = 1\n        break\n    else:\n        a[i] = a[i + 1] + 1\n        b[i] = a[i] + 1\n\nif n % 2 == 1:\n    print(-1)\n    return\n\nfor i in range(n // 2):\n    if a[i] == 0:\n        a[i] = 1\n        break\n    else:\n        a[i] = a[i + 1] + 1\n        b[i] = a[i] + 1\n\nif n % 2 == 0:\n    print(-1)\n    return\n\nfor i in range(n // 2):\n    if a[i] == 0:\n        a[i] = 1\n        break\n    else:\n        a[i] = a[i + 1] + 1\n        b[i] = a[i] + 1\n\nif n % 2 == 1:\n    print(-1)\n    return\n\nfor i in range(n // 2):\n    if a[i] == 0:\n        a[i] = 1\n        break\n    else:\n        a[i] = a[i + 1] + 1\n        b[i] = a[i] + 1\n\nif n % 2 == 1:\n    print(-1)\n    return\n\nfor i in range(n // 2):\n    if a[i] == 0:\n        a[i] = 1\n        break\n    else:\n        a[i] = a[i + 1] + 1\n        b[i] = a[i] + 1\n\nif n % 2 == 0:\n    print(-1)\n    return\n\nfor i in range(n // 2):\n    if a[i] == 0:\n        a[i] = 1\n        break\n    else:\n        a[i] = a[i + 1] + 1\n        b[i] = a[i] + 1\n\nif n % 2 == 1:\n    print(-1)\n    return\n\nfor i in range(n // 2):\n    if a[i] == 0:\n        a[i] = 1\n        break\n    else:\n   "}, "98": {"problem_id": 4098, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef solve(a, k):\n    if a[k] < 0:\n        return 0\n    elif a[k] == 0:\n        return sum(a[k] for k in range(n) if k % 2 == 0)\n    else:\n        return sum(a[k] for k in range(n) if k % 2 == 1)\n\nsolve(5, k)\n\nprint(solve(10, k))\n"}, "99": {"problem_id": 4099, "answer": "n,k,m = map(int,input().split())\nA = list(map(int,input().split()))\nfinal = 0\nfor i in range(m):\n if A[i]>k:\n  print(-1)\n else:\n  print(sum(A[i:i+k]))"}, "100": {"problem_id": 4100, "answer": "def main():\n    N, K, Q = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    Q = int(input())\n    Player = []\n    for i in range(K):\n        Player.append(A[i])\n        Q -= 1\n    print((\"No\" if Q == 0 else \"Yes\"))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "101": {"problem_id": 4101, "answer": "n, m = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(input())\n    a.sort()\n    print(' '.join(map(str, a)))"}, "102": {"problem_id": 4102, "answer": "def __starting_point():\n try:\n  print(\"Yes\")\n except:\n  print(\"No\")\n return\n\n__starting_point()"}, "103": {"problem_id": 4103, "answer": "from sys import stdin,stdout\nn,b,a = list(map(int,stdin.readline().split()))\ns = list(map(int,stdin.readline().split()))\nn -= 1\ns.sort()\ns.append(s[::-1])\nn -= 1\ns.append(s[1::-1])\nprint(max(s))\n"}, "104": {"problem_id": 4104, "answer": "import sys\ninput = sys.stdin.readline\n\ndef __starting_point():\n    # your code here\n    # sys.setrecursionlimit(max(10**0.5) + 1)\n    # sys.setrecursionlimit(max(10**0.5) + 2)\n__starting_point()"}, "105": {"problem_id": 4105, "answer": "from sys import stdin\ninput = stdin.readline\nn, k = list(map(int, input().split()))\nc = dict()\nfor i in range(n):\n    c[i] = 1\n    if i not in c:\n        c[i] = 0\n    elif i == 1:\n        c[i] = 1\n    else:\n        c[i] += 1\n    print('YES')\n"}, "106": {"problem_id": 4106, "answer": "from sys import stdin,stdout\nn,k,x=list(map(int,stdin.readline().split()))\na=list(map(int,stdin.readline().split()))\nl=[0]*n\nfor i in range(k):\n    l[i]=1\nfor i in range(n):\n    if l[i]==1:\n        print(i)\n    else:\n        print(max(l[i]*k,i+1))\n"}, "107": {"problem_id": 4107, "answer": "n, k = map(int, input().split())\ns = input()\nr = 0\nfor i in range(n):\n    if s[i] == '1':\n        r += 1\nprint(r)"}, "108": {"problem_id": 4108, "answer": "s = list(input())\nt = list(input())\nif s[0] == 'a' or s[0] == 'z':\n    print('Yes')\nelse:\n    print('No')"}, "109": {"problem_id": 4109, "answer": "# cook your dish here\nimport math\n\ndef solve(a, b):\n    cnt = 0\n    for i in range(1, a+1):\n        cnt += math.gcd(a, b)\n    return cnt\n\nn = int(input())\nprint(solve(n, 2))"}, "110": {"problem_id": 4110, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve(d, g, p):\n    \"\"\"\n    :param d:\n    :param g:\n    :param p:\n    :param p:\n    :return:\n    \"\"\"\n    sum = 0\n    for i in range(1, d+1):\n        sum += p[i-1]\n        sum += p[i-2]\n        sum += p[i-3]\n        sum += p[i-4]\n        sum += p[i-5]\n        sum += p[i-6]\n        sum += p[i-7]\n        sum += p[i-8]\n        sum += p[i-9]\n        sum += p[i-10]\n        sum += p[i-11]\n        sum += p[i-12]\n        sum += p[i-13]\n        sum += p[i-14]\n        sum += p[i-15]\n        sum += p[i-16]\n        sum += p[i-17]\n        sum += p[i-18]\n        sum += p[i-19]\n        sum += p[i-20]\n        sum += p[i-21]\n        sum += p[i-22]\n        sum += p[i-23]\n        sum += p[i-24]\n        sum += p[i-25]\n        sum += p[i-26]\n        sum += p[i-27]\n        sum += p[i-28]\n        sum += p[i-29]\n        sum += p[i-30]\n        sum += p[i-31]\n        sum += p[i-32]\n        sum += p[i-33]\n        sum += p[i-34]\n        sum += p[i-35]\n        sum += p[i-36]\n        sum += p[i-37]\n        sum += p[i-38]\n        sum += p[i-39]\n        sum += p[i-40]\n        sum += p[i-41]\n        sum += p[i-42]\n        sum += p[i-43]\n        sum += p[i-44]\n        sum += p[i-45]\n        sum += p[i-46]\n        sum += p[i-47]\n        sum += p[i-48]\n        sum += p[i-49]\n        sum += p[i-50]\n        sum += p[i-51]\n        sum += p[i-52]\n        sum += p[i-53]\n        sum += p[i-54]\n        sum += p[i-55]\n        sum += p[i-56]\n        sum += p[i-57]\n        sum += p[i-58]\n "}, "111": {"problem_id": 4111, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a.sort()\n    b = a[i]\n    c = a[i+1]\n    d = a[i+2]\n    e = a[i+3]\n    f = a[i+4]\n    g = a[i+5]\n    h = a[i+6]\n    i = 0\n    j = 0\n    k = 0\n    while i < len(a):\n        if a[i] % 2 == 0:\n            k += 1\n            e += 1\n        elif a[i] % 2 == 1:\n            k += 1\n            e += 1\n        else:\n            k += 1\n            e += 1\n        if k == 0:\n            print(k)\n            break\n        k -= 1\n        e -= 1\n        f -= 1\n        g -= 1\n        h -= 1\n    print(k)\n"}, "112": {"problem_id": 4112, "answer": "from sys import stdin,stdout\nn,k,x=list(map(int,stdin.readline().split()))\na=list(map(int,stdin.readline().split()))\nl=[0]*n\nfor i in range(n):\n    l[i]=1\nfor i in range(k):\n    if l[i]==1:\n        print(i)\n    else:\n        print(max(l[i]*k,i+1))\n"}, "113": {"problem_id": 4113, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N = int(readline())\n    d = {}\n    for i in range(N):\n        d[i] = int(readline())\n        if d.get(i,0) == -1:\n            d[i] = 0\n        elif d.get(i,0) == -1:\n            d[i] = d[i] + 7\n        elif d.get(i,0) == -1:\n            d[i] = d[i] + 7\n        elif d.get(i,0) == -1:\n            d[i] = d[i] + 7\n        elif d.get(i,0) == -1:\n            d[i] = d[i] + 7\n        elif d.get(i,0) == -1:\n            d[i] = d[i] + 7\n        elif d.get(i,0) == -1:\n            d[i] = d[i] + 7\n        elif d.get(i,0) == -1:\n            d[i] = d[i] + 7\n        print(\"Yes\")\n            \ndef __starting_point():\n    main()\n__starting_point()"}, "114": {"problem_id": 4114, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nX = list(map(int, input().split()))\nY = list(map(int, input().split()))\n\n# \u5148\u521d\u59cb\u5316\u5411\u91cf\uff0c\u5355\u8c03\u589e\ndef calc(coords, height):\n    x, y = coords\n    if height == 0:\n        return x\n    elif height == 1:\n        return y\n    else:\n        return (calc(coords, height - x) + calc(coords, height - y))\n\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u989c\u8272\uff0c\u5219\u8fd4\u56de\u6765\u4e86\ndef calc_lcm(x, y):\n    return math.sqrt(sum(x) * sum(y))\n\ndef calc_gcd(x, y):\n    return int(str(x) + str(y))\n\ndef calc_lcm_factorial(x, y):\n    return math.factorial(x * y) // math.factorial(x * y - y)\n\ndef calc_lcm(x, y):\n    return math.sqrt(sum(x) * sum(y))\n\ndef calc_gcd_factorial(x, y):\n    return math.factorial(x * y) // math.factorial(x * y - y)\n\ndef calc_bfs(x, y, dp):\n    if dp[x] == 0:\n        return 0\n    else:\n        return dp[x]\n\ndef calc_bfs_pow(x, y, dp):\n    if dp[x] == 0:\n        return 0\n    else:\n        return dp[x]\n\ndef calc_bfs_factorial_pow(x, y, dp):\n    if dp[x] == 0:\n        return 0\n    else:\n        return dp[x]\n\ndef calc_bfs_factorial(x, y):\n    return math.factorial(x * y) // math.factorial(x * y - y)\n\ndef calc_lcm_factorial_pow(x, y, dp):\n    return math.factorial(x * y) // math.factorial(x * y - dp[x])\n\ndef calc_lcm_factorial(x, y):\n    return math.factorial(x * y) // math.factorial(x * y - dp[x])\n\ndef calc_gcd_factorial(x, y):\n    return math.gcd(x, y)\n\ndef calc_gcd_factorial_pow(x, y, dp):\n    return math.gcd(x, dp[0])\n\ndef calc_gcd_factorial_fact(x, y):\n    return math.gcd(x, y)\n\ndef calc_lcm_factorial_pow(x, y, dp):\n    return math.gcd(x, y)\n\ndef calc_lcm_factorial(x, y):\n    return math.gcd(x, y)\n\ndef calc_bfs_pow(x, y, dp):\n    if dp[x] == 0:\n        return 0\n    else:\n        return dp[x]\n\ndef calc_bfs_factorial_pow(x, y, dp):\n    return math.gcd(x, y)\n\ndef calc_bfs_factorial_fact(x, y):\n    return math.gcd(x, y)\n\ndef calc_gcd_factorial_fact_pow(x, y, dp):\n    return math.gcd(x, y)\n\ndef calc_"}, "115": {"problem_id": 4115, "answer": "# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ns = input()\n\ndef happy(s):\n    return len(s)\n\ndef palind(s):\n    return ''.join(sorted(s, key=lambda x:ord(x) - 96, reverse=True))\n\ndef main():\n    s = input()\n    print(happy(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "116": {"problem_id": 4116, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "117": {"problem_id": 4117, "answer": "N = int(input())\nL = list(map(int, input().split()))\n\ndef __starting_point():\n    N = int(input())\n    L = list(map(int, input().split()))\n    print(__starting_point() - L)\n__starting_point()"}, "118": {"problem_id": 4118, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n\n    A = int(input())\n    B = int(input())\n    print(A, B)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "119": {"problem_id": 4119, "answer": "N, M = map(int, input().split())\nX = list(map(int, input().split()))\n\n# Initialize X\nX.sort()\nfor i in range(M):\n    X[i] = X[i-1] + X[i-2] + X[i-3] + X[i-4] + X[i-5]\n\nprint(len(X))"}, "120": {"problem_id": 4120, "answer": "from collections import deque\ndef dfs(n, options):\n    q = deque([])\n    for i in range(n):\n        if options[i] == 1:\n            q.append(i)\n        else:\n            q.append(i)\n        options.append(1)\n        options.append(2)\n        options.append(3)\n        options.append(4)\n        options.append(5)\n        options.append(6)\n        options.append(7)\n        options.append(8)\n        options.append(9)\n        options.append(10)\n        options.append(11)\n        options.append(2)\n        options.append(3)\n        options.append(4)\n        options.append(5)\n        options.append(6)\n        options.append(7)\n        options.append(8)\n        options.append(9)\n        options.append(10)\n        options.append(11)\n        options.append(2)\n        options.append(3)\n        options.append(4)\n        options.append(5)\n        options.append(6)\n        options.append(7)\n        options.append(8)\n        options.append(9)\n        options.append(10)\n        options.append(11)\n        options.append(2)\n        options.append(3)\n        options.append(4)\n        options.append(5)\n        options.append(6)\n        options.append(7)\n        options.append(8)\n        options.append(9)\n        options.append(10)\n        options.append(11)\n        options.append(2)\n        options.append(3)\n        options.append(4)\n        options.append(5)\n        options.append(6)\n        options.append(7)\n        options.append(8)\n        options.append(9)\n        options.append(10)\n        options.append(11)\n        options.append(2)\n        options.append(3)\n        options.append(4)\n        options.append(5)\n        options.append(6)\n        options.append(7)\n        options.append(8)\n        options.append(9)\n        options.append(10)\n        options.append(11)\n        options.append(2)\n        options.append(3)\n        options.append(4)\n        options.append(5)\n        options.append(6)\n  "}, "121": {"problem_id": 4121, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef dfs(i, j):\n    if i == j:\n        return 1\n    elif i == 0:\n        return 0\n    else:\n        ans = 0\n        for k in range(i + 1, j):\n            ans += dfs(k, j)\n        return ans\n\nprint('YES')\nfor i in range(n):\n    print(' '.join(map(str, a[i])))"}, "122": {"problem_id": 4122, "answer": "from math import ceil, log2\ndef rec(n, m, k):\n    if k == 0:\n        return 0\n    elif k == 1:\n        return ceil(n / m)\n    else:\n        return max(0, m - rec(n - 1, m, k - 1))\n\ndef main():\n    n, m = list(map(int, input().split()))\n    d = [-1] + list(map(int, input().split()))\n    d[0] = 1\n    for i in range(1, n):\n        d[i] = -1\n        for j in range(i, n):\n            if d[i] == -1:\n                d[j] = 1\n                break\n    print(d[-1])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "123": {"problem_id": 4123, "answer": "n = int(input())\ns = input()\nl = list()\nfor i in range(n):\n    l.append(input()[i])\nprint(''.join(l))"}, "124": {"problem_id": 4124, "answer": "s = input()\nt = input()\n\ndef main():\n    s = input()\n    t = input()\n    \n    for i in range(len(s)):\n        if s[i] == \" \":\n            t = t.replace(\" \",\"\")\n        else:\n            t = t.replace(\" \",\"\")\n        \n    print(len(t), len(s), len(s[0]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "125": {"problem_id": 4125, "answer": "from bisect import bisect_left as bl\nN,X = map(int,input().split())\nl = list(map(int,input().split()))\ndist = [0]*N\nfor i in range(N):\n    x = l[i]\n    dist[i] = min(dist[i],x)\nprint(dist[N])"}, "126": {"problem_id": 4126, "answer": "s = input()\nn = len(s)\nif s[0] == '0' or s[-1] == '1' or s[-2] == '2':\n    print('Yes')\nelse:\n    print('No')"}, "127": {"problem_id": 4127, "answer": "import math\ndef ceil(x):\n    if x==0:\n        return int(x**0.5)\n    else:\n        return int(x) + ceil(x*(x+1)/2)\n\ndef __starting_point():\n    A=int(input())\n    print(int(A))\n__starting_point()"}, "128": {"problem_id": 4128, "answer": "def fun(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        x = 0\n        y = 0\n        for i in range(n-1, -1, -1):\n            if i % 2 == 0:\n                x += n\n                y += n\n            else:\n                x += n\n                y += n\n        return x\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(fun(n))"}, "129": {"problem_id": 4129, "answer": "from sys import stdin,stdout\nfrom bisect import bisect_left as bl, bisect_right as br, insort_left as insort_right as br\nfrom heapq import heapify,heappop,heappush,heapify import *\nfrom collections import defaultdict,deque\nfrom itertools import combinations,permutations,accumulate\nfrom functools import reduce,cmp_to_key\nfrom operator import itemgetter\nfrom fractions import gcd\nfrom time import perf_counter\nfrom random import randint,random\nfrom string import *\nfrom copy import *\nfrom queue import *\nfrom time import perf_counter\nmod = 10**9+7\nmod2 = 10**9+7\ndef inp(): return stdin.readline().strip()\ndef out(): return stdout.write().strip()\ndef lmp(): return list(mp())\ndef lmp2(): return list(mp2())\ndef smp2(n, m, s): return reduce(cmp_to_key(mp2(), 0), -1, n, s)\ndef inv(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv2(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv3(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv4(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv5(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv6(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv7(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv8(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv9(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv10(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv11(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv12(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv13(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv14(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv15(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv16(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv17(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv18(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv19(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv20(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv21(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv22(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv23(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv24(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv25(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef inv26(n, m, s): return reduce(itemgetter(mp2(), 0), -1, n, s)\ndef"}, "130": {"problem_id": 4130, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = 0\nfor i in range(n):\n    if a[i]>b[i]:\n        c+=1\nprint(c)"}, "131": {"problem_id": 4131, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort_left as ins, insort_right as br, insort_left_right as br, insort_right_left as br, insort_left_right_right as br, l1_min = int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input()), int(input"}, "132": {"problem_id": 4132, "answer": "#!/usr/bin/env python\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(min(a.count(max(a))) + a.count(max(a)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "133": {"problem_id": 4133, "answer": "from bisect import bisect_left as bl, bisect_right as br\ninput = input()\nl = len(input)\nfor i in range(l):\n    print(input[i], end=\" \")\n    print(l, end=\" \")\n"}, "134": {"problem_id": 4134, "answer": "def dfs(i, j, k):\n    if i == j:\n        return 0\n    elif i == 0:\n        return 1\n    else:\n        return 0\n\nn, m, k = map(int, input().split())\ngrid = [[] for i in range(n)]\nfor i in range(1, n):\n    xor = 0\n    for j in range(m):\n        a = grid[i-1][j]\n        b = grid[i][j-1]\n        if a == b:\n            continue\n        if dfs(i, j, k):\n            return 0\n        else:\n            return 1\n\nprint(dfs(0, 0, k))"}, "135": {"problem_id": 4135, "answer": "n = int(input())\ns = input()\nl = len(s)\nfor i in range(l):\n    if s[i] not in s:\n        s[i] = ''.join(s[i])\nprint(''.join(s))\n"}, "136": {"problem_id": 4136, "answer": "import math\na,b = 0,0\nfor i in range(0,len(str(a))) :\n    if str(a) == str(b) :\n        a+=1\n    else :\n        b+=1\nprint(a*b)"}, "137": {"problem_id": 4137, "answer": "import math\n\ndef __starting_point():\n    input()\n    print(int(input()))\n__starting_point()"}, "138": {"problem_id": 4138, "answer": "from math import factorial as f\nfor _ in range(int(input())):\n    k = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 0\n    for i in range(1, len(l)):\n        if l[i] == l[i - 1]:\n            ans += f(k, l[i])\n        else:\n            ans += f(k, l[i - 1])\n    print(ans)"}, "139": {"problem_id": 4139, "answer": "def main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(sum(l))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "140": {"problem_id": 4140, "answer": "# coding: utf-8\n# Your code goes here\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef solve():\n    s = list(readline())\n    n = len(s)\n    for i in range(n):\n        if s[i] == '1':\n            s[i] = 'black'\n        else:\n            s[i] = 'white'\n    print(s.count('black'))\n\nsolve()\n"}, "141": {"problem_id": 4141, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef readline():\n    return list(map(int, readline().split()))\n\ndef readline_int():\n    return int(readline())\n\ndef readline():\n    return list(map(int, readline().split()))\n\nN = readline()\nA = readline()\n\n# \u5982\u679c\u4e00\u4e2a\u6587\u5b57\u521d\u59cb\u70b9\u90fd\u5305\u542b\u4e86\uff0c\u90a3\u5c31\u53ef\u4ee5\u7528\u6807\u51c6\u5904\u7406\uff0c\u7136\u540e\u518d\u5e30\u51fd\u6570\nans = []\nfor i in range(N):\n    if A[i] == A[i-1]:\n        ans.append(i)\n    else:\n        ans.append(A[i])\n\nprint('\\n'.join(ans))"}, "142": {"problem_id": 4142, "answer": "s = input()\nprint(s.find('R', 0))"}, "143": {"problem_id": 4143, "answer": "from heapq import heappush, heappop\nn, a, b, c, d, e = map(int, input().split())\nG = [0] * (n + 5)\nfor i in range(n):\n    G[i] += a\n    G[i + n].append(i)\nprint(min(G))"}, "144": {"problem_id": 4144, "answer": "from functools import reduce\nmod = 10**9 + 7\n\ndef factorial(n):\n if n == 1:\n  return 1\n else:\n  return pow(n, 2, mod)\n\nn = int(input())\nMOD = 10**9 + 7\n\nfor i in range(n):\n print(factorial(i))"}, "145": {"problem_id": 4145, "answer": "from sys import setrecursionlimit as sys_limit\nsetrecursionlimit(10**5)\n#sys.setrecursionlimit(10**5)\nn = int(input())\nprime = [0]*n\nprime[0] = 1\nfor i in range(1,n):\n    prime[i] = min(prime[i-1],prime[i-2])\nprint(prime[n-1])"}, "146": {"problem_id": 4146, "answer": "from collections import deque\nn = int(input())\nv = list(map(int, input().split()))\nd = deque()\nfor i in range(n):\n    d.append(v[i]*(i+2))\nprint(min(d))"}, "147": {"problem_id": 4147, "answer": "n, a, b = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\nM = 10**9 + a\nfor i in range(n):\n    M = max(M, l[i] + a)\n\nprint(M)\n"}, "148": {"problem_id": 4148, "answer": "def shift(s):\n    return ''.join(chr(ord(c) - ord('A') + shift(c)))\n\n\ndef __starting_point():\n    n = int(input())\n    s = list(input())\n    print(shift(s))\n\n__starting_point()"}, "149": {"problem_id": 4149, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(' '.join(map(str, b)))"}, "150": {"problem_id": 4150, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nfor i in range(1, n):\n    if a[i] > k:\n        print('1', end=' ')\n        continue\n    elif a[i] == k:\n        print('2', end=' ')\n        continue\n    else:\n        print('3', end=' ')\n        continue\n    k = min(a[i] for i in range(n))\n    if k == 1:\n        print('1', end=' ')\n        continue\n    elif k == 2:\n        print('2', end=' ')\n        continue\n    else:\n        print('3', end=' ')\n        continue\n    k = min(a[i] for i in range(n))\n    if k == 1:\n        print('1', end=' ')\n        continue\n    elif k == 2:\n        print('2', end=' ')\n        continue\n    else:\n        print('3', end=' ')\n        continue\n    k = min(a[i] for i in range(n))\n    if k == 1:\n        print('1', end=' ')\n        continue\n    elif k == 2:\n        print('2', end=' ')\n        continue\n    else:\n        print('3', end=' ')\n        continue\n    k = min(a[i] for i in range(n))\n    if k == 1:\n        print('1', end=' ')\n        continue\n    elif k == 2:\n        print('2', end=' ')\n        continue\n    else:\n        print('3', end=' ')\n        continue\n    k = min(a[i] for i in range(n))\n    if k == 1:\n        print('1', end=' ')\n        continue\n    elif k == 2:\n        print('2', end=' ')\n        continue\n    else:\n        print('3', end=' ')\n        continue\n    k = min(a[i] for i in range(n))\n    if k == 1:\n        print('1', end=' ')\n        continue\n    elif k == 2:\n        print('2', end=' ')\n        continue\n    else:\n        print('3', end=' ')\n        continue\n    k = min(a[i] for i in range(n))\n    if k == 1:\n        print('1', end=' ')\n        continue\n    elif k == 2:\n        print('2', end=' ')\n        continue\n    else:\n        print('3', end=' ')\n        continue\n    k = min(a[i] for i in range(n))\n    if k == 1:\n   "}, "151": {"problem_id": 4151, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nMOD = 998244353\n\nfor i in range(n - 1):\n    if a[i] == a[i + 1]:\n        print(i)\n        continue\n    elif a[i] == 1:\n        print(i)\n        continue\n    else:\n        print(i)\n        continue\n\n#print(a)\n\n#print(MOD)\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(__starting_point()%MOD)\n\n__starting_point()"}, "152": {"problem_id": 4152, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef f(i, j):\n    if i == j:\n        return 1\n    elif i == 0:\n        return 0\n    else:\n        return max(a[i] + a[j] for j in range(n))\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(f(n, a))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "153": {"problem_id": 4153, "answer": "def main():\n    S = list(map(int, input().split()))\n    n = len(S)\n    for i in range(n):\n        if S[i] == '1':\n            print(i)\n        else:\n            break\n\ndef __starting_point():\n    main()\n__starting_point()"}, "154": {"problem_id": 4154, "answer": "n,m = map(int,input().split())\nl = list(map(int,input().split()))\ncnt = 0\nfor i in range(m):\n    if l[i]%2==0:\n        cnt+=1\nprint(cnt)"}, "155": {"problem_id": 4155, "answer": "def main():\n    input = int(input())\n    l, r = list(map(int, input().split()))\n    water = 0\n    for i in range(l):\n        water += r - l[i]\n    print(water)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "156": {"problem_id": 4156, "answer": "import sys\ninput = sys.stdin.readline\n\nn,w = list(map(int,input().split()))\n\nA = list(map(int,input().split()))\n\nc = 0\nfor i in range(n):\n    if A[i] == -1:\n        c += A[i]\n    elif A[i] == A[i-1]:\n        c += A[i]\n    else:\n        break\n\nprint(c)\n"}, "157": {"problem_id": 4157, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    x = int(input())\n    a.append(x)\nprint(''.join(a))"}, "158": {"problem_id": 4158, "answer": "n = int(input())\nx = list(map(int, input().split()))\nfor i in range(n):\n    x.append(list(map(int, input().split())))\n\nans = 0\nfor i in range(n):\n    if x[i] > x[i-1] and x[i] > x[i+1]:\n        ans += 1\n    else:\n        ans += 1\nprint(ans)"}, "159": {"problem_id": 4159, "answer": "from collections import deque\ndef __starting_point():\n    A,B = list(map(int,input().split()))\n    d = deque([])\n    while len(d)>0:\n        d.popleft()\n        if A==B:\n            print(0)\n            return\n        A,B = sorted(d),sorted(d)\n        for i in range(len(d)):\n            if d[i]==A:\n                break\n            elif d[i]==B:\n                d[i] -= A\n            else:\n                d[i] += A\n                break\n        if A==B:\n            print(0)\n            return\n        A,B = sorted(d),sorted(d)\n        for i in range(len(d)):\n            if d[i]==B:\n                break\n            elif d[i]==A:\n                d[i] -= B\n            else:\n                d[i] += B\n                break\n        if A==B:\n            print(0)\n            return\n        A,B = sorted(d),sorted(d)\n        for i in range(len(d)):\n            if d[i]==B:\n                break\n            elif d[i]==A:\n                d[i] -= B\n            else:\n                d[i] += B\n                break\n        if A==B:\n            print(0)\n            return\n        A,B = sorted(d),sorted(d)\n        for i in range(len(d)):\n            if d[i]==B:\n                break\n            elif d[i]==A:\n                d[i] -= B\n            else:\n                d[i] += B\n                break\n        if A==B:\n            print(0)\n            return\n        A,B = sorted(d),sorted(d)\n        for i in range(len(d)):\n            if d[i]==B:"}, "160": {"problem_id": 4160, "answer": "# cook your dish here\ndef main():\n    import sys\n    input = sys.stdin.readline\n    x = int(input())\n    l = list(map(int,input().split()))\n    ans = 0\n    for i in l:\n        ans += 1\n        if i==0:\n            print(ans)\n        else:\n            print(i-1)\n            ans = 0\n    return ans\n\ndef __starting_point():\n    main()\n__starting_point()"}, "161": {"problem_id": 4161, "answer": "def __starting_point():\n    k=int(input())\n    print(__starting_point())\n__starting_point()"}, "162": {"problem_id": 4162, "answer": "import math\ndef factorial(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return math.factorial(n // 2)\n    else:\n        return math.factorial(n // 2)**0.5\n\nn = int(input())\na = list(map(int, input().split()))\nprint(factorial(n))"}, "163": {"problem_id": 4163, "answer": "N = int(input())\nD = [int(x) for x in input().split()]\n# \u305d\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308c\u3070\u3088\u3044\n# \u307e\u305a\u3001\u540c\u3058\u3088\u3046\u306b\u3057\u3066\u3044\u304f\u3068\u3053\u308d\u3092\u3084\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\n# \u307e\u305a\u3001\u540c\u3058\u3088\u3046\u306b\u3057\u3066\u3044\u304f\u3068\u3053\u308d\u3092\u3084\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u307e\u305a\u3001\u540c\u3058\u3088\u3046\u306b\u3057\u3066\u3044\u304f\u3068\u3053\u308d\u3092\u3084\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u304f\n# \u307e\u305a\u3001\u540c\u3058\u3088\u3046\u306b\u3057\u3066\u3044\u304f\u3068\u3053\u308d\u3092\u3084\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u304f\n# \u307e\u305a\u3001\u540c\u3058\u3088\u3046\u306b\u3057\u3066\u3044\u304f\u3068\u3053\u308d\u3092\u3084\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u304f\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u307e\u305a\u3001\u540c\u3058\u3088\u3046\u306b\u3057\u3066\u3044\u304f\u3068\u3053\u308d\u3092\u3084\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u304f\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206\u3051\u53d6\u308a\u6d88\u3059\n# \u3053\u306e\u307e\u307e\u4e00\u756a\u76ee\u306e\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5206"}, "164": {"problem_id": 4164, "answer": "# coding: utf-8\n# Your code here!\nimport math\ndef factorial(n):\n if n == 1:\n  return 1\n else:\n  return math.factorial(n)\n\n\n@lru_cache(maxsize=100)\ndef f(n):\n return factorial(n)\n\n\n@lru_cache(maxsize=100)\ndef f1(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f2(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f3(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f4(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f5(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f6(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f7(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f8(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f9(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f10(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f11(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f12(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f13(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f14(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f15(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f16(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f17(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f18(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f19(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f20(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f21(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f22(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f23(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f24(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f25(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f26(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f27(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f28(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f29(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f30(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f31(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f32(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f33(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f34(n):\n return factorial(n)\n\n@lru_cache(maxsize=100)\ndef f35(n):\n return factorial(n)\n\n@lru_cache"}, "165": {"problem_id": 4165, "answer": "from math import sqrt\nN = int(input())\nL = list(map(int, input().split()))\nprint('Yes' if sqrt(L[0] - L[1]) > 2 else 'No')"}, "166": {"problem_id": 4166, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\ns = list(map(int, input().split()))\n\n# \u8981\u7d20\u6570\u5b57\u4e3a\u6587\u5b57\u5217\u5316\uff0c\u540c\u65f6\u4e5f\u5c31\u662f\u4f1a\u8d70\u8fc7\uff01\ndef __starting_point():\n    n, m = map(int, input().split())\n    s.sort()\n    d = {}\n    for i in range(n):\n        if s[i] not in d:\n            d[s[i]] = 1\n        else:\n            d[s[i]] += 1\n    print((d.keys()))\n__starting_point()"}, "167": {"problem_id": 4167, "answer": "N,K = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\nif N == K:\n print(c)\nelse:\n print(N-K)"}, "168": {"problem_id": 4168, "answer": "# -*- coding: utf-8 -*\n\"\"\"\nCreated on Wed Oct 30 10:56:49 2020\n\n@author:ZhTingru\n\"\"\"\n\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\ndef input():\n    return list(map(int, readline().split()))\n\ndef readline():\n    return list(map(str, readline().split()))\n\ndef l():\n    return list(map(int, readline().split()))\n\ndef r():\n    return list(map(str, readline().split()))\n\ndef main():\n    n = input()\n    print(r())\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "169": {"problem_id": 4169, "answer": "n,m=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nif m>=n:\n    print(m)\nelse:\n    ans=0\n    for i in range(n):\n        if a[i]%b!=0:\n            ans+=i\n        elif a[i]%b==0:\n            ans+=i\n    print(ans)"}, "170": {"problem_id": 4170, "answer": "N = int(input())\nH = list(map(int, input().split()))\n\ndef moves(i, j):\n    if i < j:\n        return 0\n    elif i == j:\n        return 1\n    else:\n        return moves(i+1, j)\n\nprint(moves(10, 10))"}, "171": {"problem_id": 4171, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(k):\n    print(min(a[i], a[i-k]))\n"}, "172": {"problem_id": 4172, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef solve(a):\n    if a[0] < a[1]:\n        return k\n    elif a[0] > a[1]:\n        return min(a)\n    else:\n        return solve(a[1:])\n\nsolve(a)\nprint(solve(a))"}, "173": {"problem_id": 4173, "answer": "import math\ndef calc(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    else:\n        return math.ceil(n * a)\n\nq = int(input())\nfor _ in range(q):\n    n, a, b = list(map(int, input().split()))\n    print(calc(n, a, b))\n"}, "174": {"problem_id": 4174, "answer": "from sys import stdin,stdout\ndef main():\n    N,X=map(int,stdin.readline().split())\n    L=list(map(int,stdin.readline().split()))\n    L.sort()\n    L.insert(0,X)\n    print(len(L)-X)\n\nmain()\n"}, "175": {"problem_id": 4175, "answer": "import sys\nreadline = sys.stdin.readline\ninput = lambda: readline().rstrip()\nn = int(input())\nw = [input() for i in range(n)]\nw.sort(key=lambda x: x[0])\nprint(\"Yes\") if w[1] == w[2] else \"No\""}, "176": {"problem_id": 4176, "answer": "# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    a, b = map(int, readline().split())\n    print((a - 1) // 2)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "177": {"problem_id": 4177, "answer": "def main():\n    s = input()\n    x = 0\n    for i in s:\n        x = x + ord(i)\n    print(x)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "178": {"problem_id": 4178, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nH = list(map(int, input().split()))\n\n# \u5982\u679c\u6709\u591a\u957f\uff0c\u5219\u4f1a\u51fa\u73b0\u53d6\u6307\u5b9a\n# print(H)\n\ndef solve():\n    n = int(input())\n    H = list(map(int, input().split()))\n    if H[0] == H[-1]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\ndef __starting_point():\n    solve()\n__starting_point()"}, "179": {"problem_id": 4179, "answer": "from bisect import bisect_left as bl\nN, M, C = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\n# \u305d\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3001\u5408\u8a08\u7528\u4f8b\u3092\u53d6\u5f97\ndef solve(A, B, C):\n    if A[0] == B[0] and C[0] == A[1] and C[1] == B[1]:\n        return 1\n    elif A[0] == -B[0] and C[0] == -A[1]:\n        return 0\n    else:\n        return solve(A, B, C)\n\n# \u305d\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3001\u5408\u8a08\u7528\u4f8b\u3092\u53d6\u5f97\ndef main():\n    N, M, C = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    print(solve(A, B, C))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "180": {"problem_id": 4180, "answer": "import sys\ndef main():\n    N = int(input())\n    l = list(map(int,sys.stdin.readline().split()))\n    change = 0\n    for i in l:\n        change += 1000\n    print(change)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "181": {"problem_id": 4181, "answer": "def main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    d = 0\n    for i in range(N+1):\n        d += A[i]\n        if d > 9:\n            break\n        elif d == 9:\n            print(d)\n            d = 0\n        else:\n            print(d)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "182": {"problem_id": 4182, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nX = list(map(int, input().split()))\nY = list(map(int, input().split()))\n\n# \u5de5\u4f5c\u7528\u4e8c\u5206\ndef dfs(X, Y, X, Y, X, Y, X, L):\n    if X == Y:\n        return\n    if X == 0:\n        return\n    if X < Y:\n        X, Y = Y, X\n    else:\n        X, Y = X - Y, X\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n    L.append((X, Y))\n"}, "183": {"problem_id": 4183, "answer": "# coding: utf-8\n# Your code here!\nimport math\nN = int(input())\nT = list(map(int, input().split()))\nfor i in range(N):\n    t = int(input())\n    if t == 0:\n        print(0)\n    elif t == 1:\n        print(1)\n    else:\n        print(2)\n"}, "184": {"problem_id": 4184, "answer": "def main():\n    N = int(input())\n    W = list(map(int, input().split()))\n    S = sum(W)\n    print(abs(S - S_1))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "185": {"problem_id": 4185, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ndef move(l, r):\n    l.pop()\n    r.pop()\n    return l, r\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0] * m for _ in range(n)]\n    for i in range(n):\n        dp[i][0] = 1\n    for i in range(m):\n        for j in range(n):\n            if i == 1:\n                dp[i][j] = dp[i-1][j] + 1\n            else:\n                dp[i][j] = dp[i][j-1] + 1\n    print(dp[-1][-1])"}, "186": {"problem_id": 4186, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = min(a[i], a[i-1])\nprint(n-a[-1])"}, "187": {"problem_id": 4187, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    if a[i] == 1:\n        l.append(i)\n    else:\n        l.append(i+1)\nprint(max(l))"}, "188": {"problem_id": 4188, "answer": "from sys import setrecursionlimit\nsetrecursionlimit(10**6)\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n    print(l[i],end=\" \")\n    print(l[i+1])\n"}, "189": {"problem_id": 4189, "answer": "def main():\n    n = int(input())\n    print(main())\n\ndef __starting_point():\n    main()\n__starting_point()"}, "190": {"problem_id": 4190, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nl = []\nfor i in range(n):\n    l.append(a[i]%n)\n    b.append(a[i]%n)\n\nprint(min(l))\n"}, "191": {"problem_id": 4191, "answer": "for i in range(int(input())):\n    s = int(input())\n    if s == 0:\n        print(\"0\")\n    else:\n        print(s)\n"}, "192": {"problem_id": 4192, "answer": "from math import log2, ceil\n\nD, T = list(map(int, input().split()))\ns = int(input())\n\n# Aoki's speed\n# 1.2 MB per minute\n# S = 1.2 MB per minute\n# Aoki's speed\n# 2.5 MB per minute\n# S = 2.5 MB per minute\n# Aoki's speed\n# 3.0 MB per minute\n# S = 3.0 MB per minute\n# Aoki's speed\n# 4.0 MB per minute\n# S = 4.0 MB per minute\n# Aoki's speed\n# 5.0 MB per minute\n# S = 5.0 MB per minute\n# Aoki's speed\n# 6.0 MB per minute\n# S = 6.0 MB per minute\n# Aoki's speed\n# 7.0 MB per minute\n# S = 7.0 MB per minute\n# Aoki's speed\n# 8.0 MB per minute\n# S = 8.0 MB per minute\n# Aoki's speed\n# 9.0 MB per minute\n# S = 9.0 MB per minute\n# Aoki's speed\n# 10.0 MB per minute\n# S = 10.0 MB per minute\n# Aoki's speed\n# 11.0 MB per minute\n# S = 11.0 MB per minute\n# Aoki's speed\n# 12.0 MB per minute\n# S = 12.0 MB per minute\n# Aoki's speed\n# 13.0 MB per minute\n# S = 13.0 MB per minute\n# Aoki's speed\n# 14.0 MB per minute\n# S = 14.0 MB per minute\n# Aoki's speed\n# 15.0 MB per minute\n# S = 15.0 MB per minute\n# Aoki's speed\n# 16.0 MB per minute\n# S = 16.0 MB per minute\n# Aoki's speed\n# 17.0 MB per minute\n# S = 17.0 MB per minute\n# Aoki's speed\n# 18.0 MB per minute\n# S = 18.0 MB per minute\n# Aoki's speed\n# 19.0 MB per minute\n# S = 19.0 MB per minute\n# Aoki's speed\n# 20.0 MB per minute\n# S = 20.0 MB per minute\n# Aoki's speed\n# 21.0 MB per minute\n# S = 21.0 MB per minute\n# Aoki's speed\n# 22.0 MB per minute\n# S = 22.0 MB per minute\n# Aoki's speed\n# 23.0 MB per minute\n# S = 23.0 MB per minute\n# Aoki's speed\n# 24.0 MB per minute\n# S = 24.0 MB per minute\n# Aoki's speed\n# 25.0 MB per minute\n# S = 25.0 MB per minute\n# Aoki's speed\n# 26.0 MB per minute\n# S = 26.0 MB per minute\n# Aoki's speed\n# 27.0 MB per minute\n# S = 27.0 MB per minute\n# Aoki's speed\n# 28.0 MB per minute\n# S = 28.0 MB per minute\n# Aoki's speed\n# 29.0 MB per minute\n# S = 29.0 MB per minute\n# Aoki's speed\n# 30.0 MB per minute\n# S = 30.0 MB per minute\n# Aoki's speed\n# 31.0 MB per minute\n# S = 31.0 MB per minute\n# Aoki's speed\n# 32.0 MB per minute\n# S = 32.0 MB per minute\n# Aoki's speed\n# 33.0 MB per minute\n# S = 33.0 MB per minute\n# Aoki's speed\n# 34.0 MB per minute\n# S = 34.0 MB per minute\n# Aoki's speed\n# 35.0 MB per minute\n# S = 35.0 MB per minute\n# Aoki's speed\n# 36.0 MB per minute\n# S = 36.0 MB per minute\n# Aoki's speed\n# 37.0 MB per minute\n# S = 37.0 MB per minute\n# Aoki's speed\n# 38.0 MB per minute\n# S = 38.0 MB per minute\n# Aoki's speed\n# 39.0 MB per minute\n# S = 39.0 MB per minute\n# Aoki's speed\n# 40.0 MB per minute\n# S = 40.0 MB per minute\n# Aoki's speed\n# 41.0 MB per minute\n# S = 41.0 MB per minute\n# Aoki's speed\n"}, "193": {"problem_id": 4193, "answer": "from collections import deque\ndef factorial(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return n * (n - 1) // 2\n    else:\n        return n * factorial(n - 2) // 2\n\ndef bingo(n, m):\n    if m == 0:\n        return False\n    elif m == 1:\n        return True\n    else:\n        i = 0\n        j = m\n        while i < n:\n            if bingo(i, m) == True:\n                return True\n            i += 1\n            j -= 1\n        return False\n\ndef bingo_rec(n, m):\n    if m == 0:\n        return True\n    elif m == 1:\n        return False\n    else:\n        i = 0\n        j = m\n        while i < n:\n            if bingo_rec(i, m) == True:\n                return True\n            i += 1\n        return False\n\ndef bingo_rec(n, m):\n    if m == 0:\n        return True\n    elif m == 1:\n        return False\n    else:\n        i = 0\n        j = m\n        while i < n:\n            if bingo_rec(i, m) == True:\n                return True\n            i += 1\n        return False\n\ndef bingo_rec(n, m):\n    if m == 0:\n        return True\n    elif m == 1:\n        return False\n    else:\n        i = 0\n        j = m\n        while i < n:\n            if bingo_rec(i, m) == True:\n                return True\n            i += 1\n        return False\n\ndef bingo_rec(n, m):\n    if m == 0:\n        return True\n    elif m == 1:\n        return False\n    else:\n        i = 0\n        j = m\n        while i < n:\n            if bingo_rec(i, m) == True:\n                return True\n            i += 1\n        return False\n\ndef bingo_rec(n, m):\n    if m == 0:\n        return True\n    elif m == 1:\n        return False\n    else:\n        i = 0\n        j = m\n        while i < n:\n            if bingo_rec(i, m) == True:\n          "}, "194": {"problem_id": 4194, "answer": "def main():\n    N, M = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    print((N - 1) // 2)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "195": {"problem_id": 4195, "answer": "# coding: utf-8\nimport math\nd = int(input())\nfor i in range(d):\n    n = int(input())\n    print(n-1)"}, "196": {"problem_id": 4196, "answer": "import sys\nreadline = sys.stdin\nread = read\n\ndef main():\n    N = int(input())\n    A = list(map(int, readline().split()))\n    print(max(A))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "197": {"problem_id": 4197, "answer": "def main():\n    A = list(map(int, input().split()))\n    n = int(input())\n    l = []\n    for i in range(n):\n        l.append(A[i])\n    l.sort()\n    print(l[n-1])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "198": {"problem_id": 4198, "answer": "import sys\nreadline = sys.stdin.readline\n\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nMOD = 10**9+7\ndef main():\n    A,B,X = map(int, readline().split())\n    print(main())\n    if A == 0:\n        return 0\n    elif A == 1:\n        return 0\n    else:\n        a = int(B)\n        b = int(X)\n        d = {}\n        for i in range(a,b+1):\n            d[i] = 0\n        for i in range(a,b+1):\n            d[i] += 1\n        for i in range(a,b+1):\n            d[i] -= 1\n        for i in range(a,b+1):\n            d[i] += d[i-1]\n        print(d.keys())\n\ndef __starting_point():\n    main()\n__starting_point()"}, "199": {"problem_id": 4199, "answer": "def lcm(a, b):\n    return a*b\nn, k = map(int, input().split())\na = lcm(a, n)\nb = lcm(b, k)\nprint(sum(a) + sum(b) - k)"}, "200": {"problem_id": 4200, "answer": "n,m = map(int,input().split())\nl = [0]*n\nfor i in range(m):\n    l[i] = list(map(int,input().split()))\nprint('Yes' if l[0]==l[-1] else 'No')"}, "201": {"problem_id": 4201, "answer": "# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nH, W = map(int, read().split())\nc = [0]*H\nfor i in range(H):\n    c[i] = ord(c[i])-1\n    if c[i] == '#':\n        c[i] = 1\n    elif c[i] == '#':\n        c[i] = 1\nprint(sum(c))"}, "202": {"problem_id": 4202, "answer": "# -*- coding: utypicaly -*-\n\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nsys.setrecursionlimit(max(1000, 10**9))\nint_builtin = lambda x: list(map(int, x.split()))\n\ndef main():\n    l = readline().rstrip()\n    r = readline().rstrip()\n    print(main())\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "203": {"problem_id": 4203, "answer": "#https://atcoder.jp/contests/arc082/tasks/54321\nfrom collections import Counter\ns = input()\nc = Counter(s)\nif s == s[::-1]:\n    print(\"AC\")\nelse:\n    print(\"WA\")\n"}, "204": {"problem_id": 4204, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    s = input().rstrip()\n    k = len(s)\n    for i in range(k):\n        s = s[:i] + '1' + s[i+1:]\n    print(s[:k])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "205": {"problem_id": 4205, "answer": "def swap(p, i, j):\n    if p[i] == p[j]:\n        p[i], p[j] = p[j], p[i]\n    elif p[i] == p[j]:\n        p[i], p[j] = p[j], p[i]\n    else:\n        p[i], p[j] = p[j], p[i]\n\ndef sort_list(s, n):\n    if len(s) == 0:\n        return []\n    for i in range(n):\n        if s[i] == s[i-1]:\n            s[i], s[i-1] = s[i-1], s[i]\n    return sorted(s, reverse=True)[:n]\n\ndef __starting_point():\n    import sys\n    input = sys.stdin.readline\n    from bisect import bisect_left as bl, bisect_right as br\n    from functools import reduce as LCM\n    @lru_cache(None)\n    def dfs(i, j):\n        if i == len(s):\n            return 1\n        l, r = divmod(i, len(s))\n        if l == len(s):\n            return 1\n        res = float('inf')\n        for k in range(l, len(s)):\n            if s[k] == s[i]:\n                res = min(res, dfs(k, i-1) + 1)\n            else:\n                res = min(res, dfs(k, i-1) + 1)\n        return res\n        \n    return sort_list(s, n)\n__starting_point()"}, "206": {"problem_id": 4206, "answer": "s = int(input())\nfor i in range(s):\n    n = int(input())\n    if n % 3 == 0:\n        print(n)\n    else:\n        print(n//3)\n"}, "207": {"problem_id": 4207, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nif n%2 == 0:\n    print(n//2)\nelse:\n    print(n//2+1)\n"}, "208": {"problem_id": 4208, "answer": "n = int(input())\nl = input()\nr = input()\nfor i in range(n):\n    l = list(map(str, l.split()))\n    r = list(map(str, r.split()))\n\nans = 0\nfor i in range(n):\n    if l[i] in r:\n        ans += 1\n    elif l[i] == '?':\n        ans += 1\nprint(ans)\n"}, "209": {"problem_id": 4209, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\ndeque = deque(sorted(a))\nfor _ in range(n):\n    l, r = input().split()\n    if l == '1':\n        r = int(r)\n    else:\n        l = input().split()\n        r = int(r)\n    print(deque.popleft()[0])"}, "210": {"problem_id": 4210, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] = sum(a[i] % k for k in range(i + 1, n))\n\nprint(n)\n"}, "211": {"problem_id": 4211, "answer": "def main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    max_sum = 0\n    for i in range(N):\n        if A[i] > max_sum:\n            max_sum = A[i]\n            break\n    print(max_sum)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "212": {"problem_id": 4212, "answer": "from bisect import bisect_left as b, insort_left as l, bisect_right as r, insort_right as r, bisect_left as l, bisect_right as r, pascalisort_right as p, pascalisort_left as p, pascalisort_right as p, lisasort_right as l, lisasort_left as l, bisect_left as l, bisect_right as l, pascalisort_right as p, lisasort_right as l, risort_left as r, risort_right as r, risort_left as r, bisect_left as r, pascalisort_left as p, pascalisort_right as p, pascalisort_right as p, lisasort_left as l, bisect_left as l, bisect_right as l, lisasort_right as l, risort_right as r, risort_right as r, bisect_left as r, bisect_right as r, bisect_right as r, bisect_right as r\n\n\n# \u9996\u516c\u5171\u53ef\u4ee5\u4e3a\uff0c\u4e00\u76f4\u5230\u6700\u5c0f\u51cf\u4e86\uff0c\u56e0\u4e3a\u5b83\u4f1a\u627e\u5230\u8fbe\u7ec4\u5408\u6210\u529e\u7684\u6570\u91cf\n# \u5982\u679c\u4e24\u4e2a\u6570\u5b57\u5904\u7406\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u5b57\u5904\u7406\uff0c\u7136\u540e\u518d\u7528\u6765\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e2a\u6570\u5b57\u5904\u7406\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u5b57\u5904\u7406\uff0c\u7136\u540e\u518d\u7528\u6765\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e2a\u6570\u5b57\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e2a\u6570\u5b57\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e2a\u6570\u5b57\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e2a\u6570\u5b57\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e2a\u6570\u5b57\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e1a\u6570\u5b57\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e1a\u6570\u5b57\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e1a\u6570\u5b57\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e1a\u6570\u5b57\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e1a\u6570\u5b57\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e1a\u6570\u5b57\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e1a\u6570\u5b57\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e1a\u6570\u5b57\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1\u7684\u957f\u5ea6\n# \u5982\u679c\u4e24\u4e1a\u6570\u5904\u7406\uff0c\u5219\u6839\u636e\u81ea\u5df1"}, "213": {"problem_id": 4213, "answer": "N = int(input())\nA = list(map(int, input().split()))\nprint(max(A))"}, "214": {"problem_id": 4214, "answer": "N = int(input())\nx, y = map(int, input().split())\nvisited = [0] * N\nfor i in range(N):\n    x, y = map(int, input().split())\n    visited[x] = 1\n    visited[y] = 1\nvisited.sort(reverse=True)\nprint('%.8f' % (visited[0]))"}, "215": {"problem_id": 4215, "answer": "# coding: utf-8\n# Your code here!\nimport math\na, b = map(int, input().split())\nc = 0\nfor i in range(a):\n    if b == i:\n        c += math.ceil(a[i] - b[i])\nprint(c)"}, "216": {"problem_id": 4216, "answer": "N = int(input())\nA, B = map(int, input().split())\n\n# \u5982\u70b9\u6570\u91cf\ndef f(n):\n    return n*(n+1)//2\n\ndef g(n):\n    return n*(n+1)//2\n\ndef l(n):\n    return n*(n+1)//2\n\ndef r(n):\n    return n*(n+1)//2\n\ndef s(n):\n    return n*(n+1)//2\n\ndef d(n):\n    return n*(n+1)//2\n\ndef l(n):\n    return n*(n+1)//2\n\ndef r(n):\n    return n*(n+1)//2\n\ndef s(n):\n    return n*(n+1)//2\n\ndef d(n):\n    return n*(n+1)//2\n\ndef l(n):\n    return n*(n+1)//2\n\ndef r(n):\n    return n*(n+1)//2\n\ndef s(n):\n    return n*(n+1)//2\n\ndef d(n):\n    return n*(n+1)//2\n\ndef l(n):\n    return n*(n+1)//2\n\ndef r(n):\n    return n*(n+1)//2\n\ndef s(n):\n    return n*(n+1)//2\n\ndef d(n):\n    return n*(n+1)//2\n\ndef l(n):\n    return n*(n+1)//2\n\ndef r(n):\n    return n*(n+1)//2\n\ndef s(n):\n    return n*(n+1)//2\n\ndef d(n):\n    return n*(n+1)//2\n\ndef l(n):\n    return n*(n+1)//2\n\ndef r(n):\n    return n*(n+1)//2\n\ndef s(n):\n    return n*(n+1)//2\n\ndef d(n):\n    return n*(n+1)//2\n\ndef l(n):\n    return n*(n+1)//2\n\ndef r(n):\n    return n*(n+1)//2\n\ndef s(n):\n    return n*(n+1)//2\n\ndef d(n):\n    return n*(n+1)//2\n\ndef l(n):\n    return n*(n+1)//2\n\ndef r(n):\n    return n*(n+1)//2\n\ndef s(n):\n    return n*(n+1)//2\n\ndef d(n):\n    return n*(n+1)//2\n\ndef l(n):\n    return n*(n+1)//2\n\ndef r(n):\n    return n*(n+1)//2\n\ndef s(n):\n    return n*(n+1)//2\n\ndef d(n):\n    return n*(n+1)//2\n\ndef l(n):\n    return n*(n+1)//2\n\ndef r(n):\n    return n*(n+1)//2\n\ndef s(n):\n    return n*(n+1)//2\n\ndef d(n):\n    return n*(n+1)//2\n\ndef l(n):\n    return n*(n+1)//2\n\ndef r(n):\n    return n*(n+1)//2\n\ndef s(n):\n    return n*(n+1)//2\n\ndef d(n):\n    return n*(n+1)//2\n\ndef l(n):\n    return n*(n+1)//2\n\ndef r(n"}, "217": {"problem_id": 4217, "answer": "from collections import deque\nN, M = map(int, input().split())\nans = 0\nfor i in range(N):\n    a, b = map(int, input().split())\n    if a == b:\n        ans += 1\nprint(ans)"}, "218": {"problem_id": 4218, "answer": "import math\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return math.factorial(n)\ndef binomial(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialBinomial(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialCoefficient(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialFibonacci(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialFibonacciBinomial(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialFibonacciCoefficient(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialLambda(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialMouvement(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialPermutation(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialPermutationBinomial(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialPermutationEuclidean(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialPermutationGCD(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialPermutationModulo(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialPermutationComputation(n, x):\n    if n == 0:\n        return x\n    else:\n        return factorial(n - x)\ndef factorialPermutationComputation(n, x):\n    if n == 0:\n        return x\n    elif n == 1:\n        return factorial(n - x)\n    else:\n        return factorial(n - x)\ndef factorialPermutationMultiply(n, x):\n    if n == 0:\n        return x\n    elif n == 1:\n        return factorial(n - x)\n    else:\n        return factorial(n - x)\ndef factorialPermutationSubtraction(n, x):\n    if n == 0:\n        return x\n    elif n == 1:\n  "}, "219": {"problem_id": 4219, "answer": "N = int(input())\nA = list(map(int, input().split()))\nx = [0]*N\nfor i in range(N):\n    x[i] = A[i]\n\nprint(max(x))"}, "220": {"problem_id": 4220, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n    K = int(input())\n    S = list(map(int, input().split()))\n    print(' '.join(S))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "221": {"problem_id": 4221, "answer": "#!/usr/bin/env python3\n\ndef __starting_point():\n    s = input()\n    return '{}'.format(s.count(' '), s.count(' '), s.count(' '), s.count(' '), s.count(' '))\n__starting_point()"}, "222": {"problem_id": 4222, "answer": "import sys\ninput = sys.stdin.readline\n\nN,K = list(map(int,input().split()))\n\ndic = {}\nfor i in range(K):\n    dic[i] = list(map(int,input().split()))\n\ndef __starting_point():\n    N,K = list(map(int,input().split()))\n    dic = {}\n    for i in range(K):\n        dic[i] = list(map(int,input().split()))\n    print(f\"{N}:{dic.get(N,0)}\" )\n__starting_point()"}, "223": {"problem_id": 4223, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ns = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    s.append(s[i])\nd[s[-1]] = 1\nans = 0\nfor i in range(n):\n    ans += d.get(s[i], 0)\nprint(ans)"}, "224": {"problem_id": 4224, "answer": "from sys import setrecursionlimit\nsetrecursionlimit(10 ** 6)\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve())\n\nsolve()"}, "225": {"problem_id": 4225, "answer": "def main():\n    A, B, C = map(int, input().split())\n    nums = []\n    for i in range(A + B + C):\n        nums.append(0)\n    print(sum(nums))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "226": {"problem_id": 4226, "answer": "#!/usr/bin/env python3\n\ndef main():\n    X, Y = list(map(int, input().split()))\n    if X == Y:\n        print(\"Yes\")\n    else:\n        l = [0]*X\n        r = [0]*Y\n        for i in range(X, Y):\n            if l[i] == 0:\n                l[i] = 1\n            elif r[i] == 0:\n                r[i] = 1\n            else:\n                l[i] = 0\n                r[i] = 0\n        print(\"Yes\")\n        main()\n\ndef __starting_point():\n    main()\n__starting_point()"}, "227": {"problem_id": 4227, "answer": "from collections import deque\nN,M = map(int,input().split())\nG = [[] for _ in range(N)]\nfor _ in range(M):\n    a,b = map(int,input().split())\n    G[a].append(b)\n    G[b].append(a)\n\nvisited = set()\nvisited.add(0)\n\ndef dfs(s,edges,cur):\n    if len(cur) == 0:\n        return\n    for e in G[cur]:\n        if e not in visited:\n            dfs(edges, e)\n            visited.add(e)\n            dfs(edges, e)\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n       "}, "228": {"problem_id": 4228, "answer": "import sys\ninput = sys.stdin.readline\n\ndef l():\n    return list(map(int, input().split()))\n\ndef main():\n    n, l = l()\n    print(n)\n    for i in range(n):\n        print(i, end=' ')\n        if n == 1:\n            print(i, end=' ')\n        else:\n            print(i, end=' ')\n            \ndef __starting_point():\n    main()\n__starting_point()"}, "229": {"problem_id": 4229, "answer": "def main():\n    n = int(input())\n    for i in range(n):\n        print(sum(map(int, input().split())))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "230": {"problem_id": 4230, "answer": "from collections import deque\nX,N = map(int,open(0).read().split())\np = list(map(int,input().split()))\nans = [min(X,p[0]) for _ in range(N+1)]\nprint(ans[0])"}, "231": {"problem_id": 4231, "answer": "def main():\n    H, W = map(int, input().split())\n    num = 0\n    for i in range(H):\n        num += W\n        if i == W:\n            print(num)\n        else:\n            print(num * W)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "232": {"problem_id": 4232, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] <= k:\n        s += 1\nprint(s)"}, "233": {"problem_id": 4233, "answer": "from sys import stdin, stdout\nn, m = list(map(int, stdin.readline().split()))\nl = list(map(int, stdin.readline().split()))\nr = list(map(int, stdin.readline().split()))\n\ndef main():\n    n, m = list(map(int, stdin.readline().split()))\n    l.append(r[0])\n    r.append(l[0])\n    for i in range(n):\n        x, y, s = l[i]\n        if x == '*':\n            print('*' * m)\n        else:\n            print('-1')\n            break\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "234": {"problem_id": 4234, "answer": "def main():\n    s = input()\n    print(len(s))\n    for i in range(len(s)):\n        if s[i]!=s[i+1]:\n            print(i+1)\n            break\n        else:\n            print(i+1)\n            break\n            \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n"}, "235": {"problem_id": 4235, "answer": "from collections import deque\ndef dfs(edges, n, m):\n    if n == m:\n        return \"NO\"\n    for edge in edges:\n        if edge[0] == '1':\n            dfs(edges, n-1, m-1)\n        elif edge[0] == '2':\n            dfs(edges, n-1, m)\n        elif edge[0] == '3':\n            dfs(edges, n-1, m)\n        else:\n            print(\"NO\")\n            return\n    return\n\nn, m = dfs(edges, 0, m)\nprint(\"YES\")\nfor i in range(n):\n    print(\" \".join(map(str, list(range(m)))) + \" \")"}, "236": {"problem_id": 4236, "answer": "from sys import stdin,stdout\nfrom collections import deque\ninput = stdin.readline\nn, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\nfor i in range(n):\n    l.append(l[-1] + l[-2])\nprint(' '.join(map(str, l)))"}, "237": {"problem_id": 4237, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n    from bisect import bisect_left as bl\n    from heapq import heappush, heappop as hmap, heapify, heappushpop as hmap, heapify_or_pop as todo\n    from collections import defaultdict as dd, deque, Counter}, "238": {"problem_id": 4238, "answer": "def main():\n    n = int(input())\n    s = list(map(int, input().split()))\n    l = len(s)\n    if n == 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "239": {"problem_id": 4239, "answer": "import math\ndef recur(N,x):\n    if x==0:\n        return 0\n    else:\n        return math.floor(math.sqrt(x))\n\nN=int(input())\nx=list(map(int,input().split()))\nprint(recur(N,x))"}, "240": {"problem_id": 4240, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ndef lis():\n    return list(map(int, input().split()))\ndef rlis():\n    return list(map(int, input().split()))\ndef stg(s, t):\n    return ''.join(sorted(t, key=lambda x: x[1], reverse=True))\ndef main():\n    s = input()\n    t = stg(s, t)\n    if t == t:\n        print(\"Yes\")\n    else:\n        print(\"No\")\ndef __starting_point():\n    main()\n__starting_point()"}, "241": {"problem_id": 4241, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    S = input().strip()\n    T = list(S)\n    for i in range(len(S)):\n        if i == len(S)-1:\n            print(0)\n        else:\n            S[i] = ''.join(reversed(reversed(reversed(reversed(S)))[::-1]))\n            T[i] = ''.join(reversed(reversed(reversed(T)))[::-1])\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            "}, "242": {"problem_id": 4242, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    n = int(input())\n    for i in range(n):\n        a, b = list(map(int, input().split()))\n        print(a-1)\n        print(b-1)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "243": {"problem_id": 4243, "answer": "# cook your dish here\ndef gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\nn = int(input())\nx = int(input())\ny = int(input())\nz = int(input())\n\nif n == 0:\n    print(0)\nelse:\n    print(gcd(y, x) + gcd(z, y) + gcd(z, z) + gcd(y, z) + gcd(z, y) + gcd(z, z) + gcd(y, x) + gcd(x, x) + gcd(x, x) + gcd(x, x) + gcd(x, x) + gcd(x, x) + gcd(x, x) + gcd(x, x) + gcd(x, x) + gcd(x, x) + gcd(x, x))\n"}, "244": {"problem_id": 4244, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nX = list(map(int, input().split()))\n\nsensings = 0\nfor i in range(N):\n    x = X[i]\n    if x == 0:\n        sensings += 1\n    elif x == 1:\n        sensings += 2\n    elif x % 2 == 0:\n        sensings += x**2\n    else:\n        sensings += x**2\n\nprint(sensings)\n"}, "245": {"problem_id": 4245, "answer": "def main():\n    a,b=list(map(int,input().split()))\n    print(3)\n    for i in range(a):\n        print(b,end=\" \")\n        b=int(b)\n        print(b,end=\" \")\n        if b<a:\n            print(power(b,a-b))\n        else:\n            print(power(b,a-b))\n            \ndef power(a,b):\n    return a*b\ndef __starting_point():\n    main()\n__starting_point()"}, "246": {"problem_id": 4246, "answer": "# coding: utf-8\n# Your code here!\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\ndef main():\n    s = readline().strip()\n    for _ in range(3):\n        print(s[:3])\n        print(s[3:])\n\nmain()\n"}, "247": {"problem_id": 4247, "answer": "def main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    print(p[0])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "248": {"problem_id": 4248, "answer": "def main():\n    n = int(input())\n    for _ in range(n):\n        x1, y1 = map(int, input().split())\n        x2, y2 = map(int, input().split())\n        print(abs(x1 - x2) * abs(y1 - y2))\n        print(\"%.2f\" % (x1, y1))\n\nmain()"}, "249": {"problem_id": 4249, "answer": ""}, "250": {"problem_id": 4250, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return a*b\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef ceil(a, b):\n    return a // b\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return ceil(a*b) // (b*a)\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef ceil(a, b):\n    return a // b\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(ceil(a*b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b), lcm(b*a))\n\n# \u533a\u9593\u53f3\u7aef\u5185\u5bb9\ndef lcm(a, b):\n    return lcm(lcm(a, b),"}, "251": {"problem_id": 4251, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint(max(a))"}, "252": {"problem_id": 4252, "answer": "n = int(input())\ns = input()\nl = len(s)\ncnt = 0\nfor i in range(n):\n    if s[i]!= 'xxx':\n        cnt += 1\n        l = len(s) - i\n        break\nprint(cnt)"}, "253": {"problem_id": 4253, "answer": "import math\ndef __starting_point():\n    a = int(math.log(a,2))\n    print(a)\n__starting_point()"}, "254": {"problem_id": 4254, "answer": "def main():\n    s, w = list(map(int, input().split()))\n    if w == 0:\n        return\n    elif s == w:\n        print(\"safe\")\n    else:\n        safe = True\n        for i in range(s, 0, -1):\n            if i % 2 == 0:\n                safe = False\n                break\n        else:\n            pass\n        print(\"leetcode\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "255": {"problem_id": 4255, "answer": "# coding: utf-8\n# Your code here!\nimport math\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\nd = math.sqrt(a[0]*a[1]*a[2])\ne = math.sqrt(b[0]*b[1]*b[2])\nf = math.sqrt(c[0]*c[1]*c[2])\ng = math.sqrt(d[0]*d[1]*d[2])\nh = math.sqrt(e[0]*e[1]*e[2])\ni = 0\nwhile i<len(a):\n    if a[i]!=a[i+1]:\n        a[i] = a[i+1]\n        i+=1\n    else:\n        a[i] = a[i+1]\n        i+=1\n    i+=1\nprint(a[0])"}, "256": {"problem_id": 4256, "answer": "import sys\ninput = sys.stdin.readline\n\ndef lis(n):\n    return n.count('0')\n\ndef main():\n    n = int(input())\n    A, B, C = lis(n)\n    print(sum(A*B for a, b, c in zip(A, B, C)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "257": {"problem_id": 4257, "answer": "from sys import stdin, stdout\ndef main():\n    a, b = map(int, stdin.readline().split())\n    print(a * b)\n\nmain()\n"}, "258": {"problem_id": 4258, "answer": "# cook your dish here\ndef func():\n    s = int(input())\n    if s == 0:\n        return 0\n    elif s == 1:\n        return 1\n    else:\n        return 0\n\nprint(func())"}, "259": {"problem_id": 4259, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n\n    A = int(input())\n    B = int(input())\n\n    carry = 0\n    NG = []\n    for i in range(A, B):\n        if carry > 0:\n            carry -= A.count(i)\n        elif carry == 0:\n            NG.append(i)\n        else:\n            NG.append(i)\n            carry = 0\n    if NG:\n        print(\"OK\")\n    else:\n        print(\"NG\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "260": {"problem_id": 4260, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n    t, x = list(map(int, input().split()))\n    while x:\n        t.append(x)\n        x -= 1\n        if x < 3:\n            x = 3\n        elif x == 3:\n            print(0)\n        else:\n            print(t[-1]*t[-2])\n            x -= 1\n            \ndef __starting_point():\n    main()\n__starting_point()"}, "261": {"problem_id": 4261, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nclass SegmentTree:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n        self.left_val = left.val\n        self.right_val = right.val\n\n    def add(self, val, left=None, right=None):\n        if val == self.val:\n            self.left = left\n        elif val == self.val:\n            self.right = right\n        else:\n            self.right_val = right.val\n        self.left_val = left.val\n        self.right_val = left.val\n\n    def __repr__(self):\n        return f\"{self.left_val} {self.right_val}\"\n\n\n@property\ndef lis(self):\n    return self.lis\n\n@property\ndef ris(self):\n    return self.lis\n\n@property\ndef lis_left(self):\n    return self.lis_left\n\n@property\ndef lis_right(self):\n    return self.lis_right\n\n@property\ndef ris_left(self):\n    return self.lis_left\n\n@property\ndef ris_right(self):\n    return self.lis_right\n\n@property\ndef lis_max(self):\n    return self.lis_max\n\n@property\ndef lis_min(self):\n    return self.lis_min\n\n@property\ndef lis_max_left(self):\n    return self.lis_max_left\n\n@property\ndef lis_min_right(self):\n    return self.lis_min_right\n\n@property\ndef lis_min_left(self):\n    return self.lis_min_left\n\n@property\ndef lis_min_right_left(self):\n    return self.lis_min_right_left\n\n@property\ndef lis_min_left_right(self):\n    return self.lis_min_right_right\n\n@property\ndef lis_max_left(self):\n    return self.lis_max_left\n\n@property\ndef lis_max_right(self):\n    return self.lis_max_right\n\n@property\ndef lis_max_left_right(self):\n    return self.lis_max_right\n\n@property\ndef lis_min_left(self):\n    return self.lis_min_left\n\n@property\ndef lis_min_right(self):\n    return self.lis_min_right\n\n@property\ndef lis_max_right(self):\n    return self.lis_max_right\n\n@property\ndef lis_min_left(self):\n    return self.lis_min_left\n\n@property\ndef lis_min_right_left(self):\n    return self.lis_min_right_left\n\n@property\ndef lis_max_left(self):\n    return self.lis_max_left\n\n@property\ndef lis_max_right(self):\n    return self.lis_max_right\n\n@property\ndef lis_max_left_right(self):\n    return self.lis_max_right\n\n@property\ndef lis_min_left(self):\n    return self.lis_min_left\n\n@property\ndef lis_min_right(self):\n    return self.lis_min_right\n\n@property\ndef lis_max_left(self):\n    return self.lis_max_left\n\n@property\ndef l"}, "262": {"problem_id": 4262, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nP,Q = map(int,input().split())\nQ = list(map(int,input().split()))\n# \u91cd\u590d\u6570\u76ee: O(N)\n# \u91cd\u590d\u6570\u76ee: O(N)\n# \u7b54\u3048: O(N)\n# \u5982\ufffdsion: O(N)\n# \u7b54\u3048: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N)\n# \u4eca\u56de: O(N"}, "263": {"problem_id": 4263, "answer": "def main():\n    s = input()\n    l = len(s)\n    print(len(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "264": {"problem_id": 4264, "answer": "# -*- coding: utf-8 -*-\nimport math\nn = int(input())\nodd = n//10\nprint(odd)"}, "265": {"problem_id": 4265, "answer": "S = list(map(int, input().split()))\nT = list(map(int, input().split()))\n\ndef main():\n    s = input()\n    t = input()\n    print((S.count(t)))\n\nmain()\n"}, "266": {"problem_id": 4266, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n\n    K, X = map(int, input().split())\n    d = list(map(int, input().split()))\n    d.sort()\n    for i in range(X):\n        print(d[i], end=' ')\n        if d[i] == 0:\n            d[i] = 0\n        elif d[i] == X:\n            d[i] = X\n        else:\n            d[i] = 0\n            \n        if d[i] == 0:\n            d[i] = X\n        elif d[i] == X:\n            d[i] = X\n            \n        if d[i] == 0:\n            d[i] = 0\n        elif d[i] == X:\n            d[i] = X\n            \n        if d[i] == 0:\n            d[i] = 0\n        elif d[i] == X:\n            d[i] = X\n            \n        if d[i] == 0:\n            d[i] = 0\n        elif d[i] == X:\n            d[i] = X\n            \n        if d[i] == 0:\n            d[i] = 0\n        elif d[i] == X:\n            d[i] = X\n            \n        if d[i] == 0:\n            d[i] = 0\n        elif d[i] == X:\n            d[i] = X\n            \n        if d[i] == 0:\n            d[i] = 0\n        elif d[i] == X:\n            d[i] = X\n            \n        if d[i] == 0:\n            d[i] = 0\n        elif d[i] == X:\n            d[i] = X\n            \n        if d[i] == 0:\n            d[i] = 0\n        elif d[i] == X:\n            d[i] = X\n            \n        if d[i] == 0:\n            d[i] = 0\n        elif d[i] == X:\n            d[i] = X\n            \n "}, "267": {"problem_id": 4267, "answer": "# cook your dish here\ndef is_helper(l):\n    if l[0] == l[1]:\n        return True\n    else:\n        return False\n\n# \u7b54\u3048\u6848\u5185\u51e6\u7406\u3067\u306f\uff5e\u3060\u3068\u3080\u304b\u3051\ndef is_helper(l):\n    if l[0] == l[1]:\n        return True\n    else:\n        return False\n\n# \u7b54\u3048\u5185\u51e6\u7406\u3067\u306f\uff5e\u3060\u3068\u3080\u304b\u3051\ndef is_helper(l):\n    if l[0] == l[1]:\n        return True\n    else:\n        return False\n\n# \u7b54\u3048\u5185\u51e6\u7406\u3067\u306f\uff5e\u3060\u3068\u3080\u304b\u3051\ndef is_helper(l):\n    if l[0] == l[1]:\n        return True\n    else:\n        return False\n\n# \u7b54\u3048\u5185\u51e6\u7406\u3067\u306f\uff5e\u3060\u3068\u3080\u304b\u3051\ndef is_helper(l):\n    if l[0] == l[1]:\n        return True\n    else:\n        return False\n\n# \u7b54\u3048\u5185\u51e6\u7406\u3067\u306f\uff5e\u3060\u3068\u3080\u304b\u3051\ndef is_helper(l):\n    if l[0] == l[1]:\n        return True\n    else:\n        return False\n\n# \u7b54\u3048\u5185\u51e6\u7406\u3067\u306f\uff5e\u3060\u3068\u3080\u304b\u3051\ndef is_helper(l):\n    if l[0] == l[1]:\n        return True\n    else:\n        return False\n\n# \u7b54\u3048\u5185\u51e6\u7406\u3067\u306f\uff5e\u3060\u3068\u3080\u304b\u3051\ndef is_helper(l):\n    if l[0] == l[1]:\n        return True\n    else:\n        return False\n\n# \u7b54\u3048\u5185\u51e6\u7406\u3067\u306f\uff5e\u3060\u3068\u3080\u304b\u3051\ndef is_helper(l):\n    if l[0] == l[1]:\n        return True\n    else:\n        return False\n\n# \u7b54\u3048\u5185\u51e6\u7406\u3067\u306f\uff5e\u3060\u3068\u3080\u304b\u3051\ndef is_helper(l):\n    if l[0] == l[1]:\n        return True\n    else:\n        return False\n\n# \u7b54\u3048\u5185\u51e6\u7406\u3067\u306f\uff5e\u3060\u3068\u3080\u304b\u3051\ndef is_helper(l):\n    if l[0] == l[1]:\n        return True\n    else:\n        return False\n\n# \u7b54\u3048\u5185\u51e6\u7406\u3067\u306f\uff5e\u3060\u3068\u3080\u304b\u3051\ndef is_helper(l):\n    if l[0] == l[1]:\n        return True\n    else:\n        return False\n\n# \u7b54\u3048\u5185\u51e6\u7406\u3067\u306f\uff5e\u3060\u3068\u3080\u304b\u3051\ndef is_helper(l):\n    if l[0] == l[1]:\n        return True\n    else:\n        return False\n"}, "268": {"problem_id": 4268, "answer": "import sys\ninput = sys.stdin.readline\n\nN, D = list(map(int, input().split()))\npoints = [int(x) for x in input().split()]\n\npoints.sort()\n\nfor i in range(D):\n    x, y, z = points[i]\n    if x == y:\n        continue\n    else:\n        print(1)\n        break\n\nprint(len(points))"}, "269": {"problem_id": 4269, "answer": "from sys import stdin, stdout\ns = stdin.readline().strip()\ns = list(s)\nif s[0] == '7':\n    print('Bad')\nelse:\n    print('Good')"}, "270": {"problem_id": 4270, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nl = list(map(int,input().split()))\nl.sort()\nprint(max(l))"}, "271": {"problem_id": 4271, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nsatisfaction = 0\nfor i in range(N-1):\n    s = 0\n    for j in range(A[i]):\n        if j == A[i] and j == B[i]:\n            s += j - A[i]\n            s += j - B[i]\n            s += j - C[i]\n        elif j == A[i] and j == B[i]:\n            s += j - A[i]\n            s += j - C[i]\n            s += j - D[i]\n            s += j - E[i]\n            s += j - F[i]\n            s += j - H[i]\n            s += j - I[i]\n            s += j - J[i]\n            s += j - K[i]\n            s += j - L[i]\n            s += j - R[i]\n            s += j - L[i]\n            s += j - L[i]\n            s += j - R[i]\n            s += j - H[i]\n            s += j - I[i]\n            s += j - J[i]\n            s += j - K[i]\n            s += j - L[i]\n            s += j - R[i]\n            s += j - H[i]\n            s += j - I[i]\n            s += j - J[i]\n            s += j - K[i]\n            s += j - L[i]\n            s += j - R[i]\n            s += j - H[i]\n            s += j - I[i]\n            s += j - J[i]\n            s += j - K[i]\n            s += j - L[i]\n            s += j - R[i]\n            s += j - H[i]\n            s += j - I[i]\n            s += j - J[i]\n            s += j - K[i]\n            s += j - L[i]\n            s += j - R[i]\n            s += j - H[i]\n            s += j - I[i]\n            s += j - J[i"}, "272": {"problem_id": 4272, "answer": "def main():\n    N = int(input())\n    S = list(map(int, input().split()))\n    print(len(S))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "273": {"problem_id": 4273, "answer": "def main():\n    s = list(map(int, input().split()))\n    print(s[0])\n    for i in range(1, len(s)):\n        if s[i] == s[i-1]:\n            print(i)\n            continue\n        else:\n            print(s[i])\n            continue\n        s.pop()\n        s.append(s[i])\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n        s.append(s[i-1])\n        s.pop()\n "}, "274": {"problem_id": 4274, "answer": "#!/usr/bin/env python\n\ndef __starting_point():\n    N, M = list(map(int, input().split()))\n    print(\"Yes\")\n__starting_point()"}, "275": {"problem_id": 4275, "answer": "def main():\n    s = input()\n    print(s)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "276": {"problem_id": 4276, "answer": "from collections import deque\nN, T = map(int, input().split())\nc, t = list(map(int, input().split()))\nq = deque([c])\nwhile q:\n    t -= 1\n    cost, curr = q.popleft()\n    if t == curr:\n        print(t)\n        return\n    elif t == curr:\n        q.append([c, t])\n    else:\n        for i, ct in enumerate(q):\n            if ct not in curr:\n                curr[ct] = i\n            else:\n                curr[ct] = i\n                q.append([c, t])\n                break\n                \n        if t == curr:\n            print(t)\n            return\n        else:\n            print(t)\n            return\n"}, "277": {"problem_id": 4277, "answer": "n,A,B=map(int,input().split())\nc=0\nfor i in range(n):\n    if A*B-c in list(map(int,input().split())) and A*B>=c:\n        c+=A*B\nprint(c)"}, "278": {"problem_id": 4278, "answer": "from collections import deque\nN = int(input())\ns = list(map(int, input().split()))\nfor i in range(N):\n    s.append(input())\nprint(len(s))"}, "279": {"problem_id": 4279, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 0\n    for i in range(n):\n        k = int(input())\n        ans += str(k)\n        k = k % 10\n        print(ans)\n        ans %= 10**9\n        print(ans)\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n "}, "280": {"problem_id": 4280, "answer": "from collections import deque\nn, k = list(map(int, input().split()))\n\ndef dfs(i, j):\n    if i == 0:\n        return 1\n    elif j == 0:\n        return 0\n    else:\n        res = 0\n        for k in range(n-1):\n            if dfs(i+k, j+1):\n                res += 1\n        return res\n\nprint(n-1)\nfor i in range(n-1):\n    print(i, end=' ')\n    print(' '.join(map(str, list(map(str, range(i, n-1))))), end=' ')\n"}, "281": {"problem_id": 4281, "answer": "def main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    for i in range(n):\n        x[i] = x[i-1] - 1\n    print(min(x[n-1], x[n-2]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "282": {"problem_id": 4282, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n\nprint(' '.join(s))"}, "283": {"problem_id": 4283, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    a.append(i+5)\nl.sort(reverse=True)\nprint(max(l))"}, "284": {"problem_id": 4284, "answer": "for _ in range(int(input())):\n    k, n, a, b = map(int, input().split())\n    if a > b:\n        print(-1)\n    else:\n        max_p = a + b\n        for i in range(n):\n            if max_p < a:\n                max_p = a\n            elif max_p > a:\n                max_p = a\n            else:\n                max_p = max(max_p, a)\n        print(max_p)"}, "285": {"problem_id": 4285, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input()\n\n# \u533a\u9593\u53d6\u5f97\ncount = 0\nfor i in range(n):\n    if s[i] == 'a' and s[i] == 'b' and s[i] == 'c':\n        count += 1\n    elif s[i] == 'a' and s[i] == 'b' and s[i] == 'c':\n        count += 1\n    elif s[i] == 'a' and s[i] == 'b' and s[i] == 'c':\n        count += 1\nprint(count)\n"}, "286": {"problem_id": 4286, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nedges[0].append(0)\nedges[1].append(0)\nedges[2].append(0)\nedges[3].append(0)\nedges[4].append(0)\nedges[5].append(0)\nedges[6].append(0)\nedges[7].append(0)\nedges[8].append(0)\nedges[9].append(0)\nedges[10].append(0)\nedges[11].append(0)\nedges[12].append(0)\nedges[13].append(0)\nedges[14].append(0)\nedges[15].append(0)\nedges[16].append(0)\nedges[17].append(0)\nedges[18].append(0)\nedges[19].append(0)\nedges[20].append(0)\nedges[21].append(0)\nedges[22].append(0)\nedges[23].append(0)\nedges[24].append(0)\nedges[25].append(0)\nedges[26].append(0)\nedges[27].append(0)\nedges[28].append(0)\nedges[29].append(0)\nedges[30].append(0)\nedges[31].append(0)\nedges[32].append(0)\nedges[33].append(0)\nedges[34].append(0)\nedges[35].append(0)\nedges[36].append(0)\nedges[37].append(0)\nedges[38].append(0)\nedges[39].append(0)\nedges[40].append(0)\nedges[40].append(0)\nedges[41].append(0)\nedges[41].append(0)\nedges[42].append(0)\nedges[43].append(0)\nedges[43].append(0)\nedges[44].append(0)\nedges[45].append(0)\nedges[45].append(0)\nedges[46].append(0)\nedges[47].append(0)\nedges[48].append(0)\nedges[49].append(0)\nedges[50].append(0)\nedges[50].append(0)\nedges[51].append(0)\nedges[52].append(0)\nedges[53].append(0)\nedges[53].append(0)\nedges[54].append(0)\nedges[54].append(0)\nedges[55].append(0)\nedges[55].append(0)\nedges[56].append(0)\nedges[56].append(0)\nedges[57].append(0)\nedges[58].append(0)\nedges[58].append(0)\nedges[59].append(0)\nedges[59].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges[60].append(0)\nedges"}, "287": {"problem_id": 4287, "answer": ""}, "288": {"problem_id": 4288, "answer": "def main():\n    a, b, c = list(map(int, input().split()))\n    if a == b == c:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "289": {"problem_id": 4289, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\n# \u5982\u679c\u6700\u540e\u4e00\u5b9a\u662f\u5426\u5b58\u5728\uff0c\u5219\u6254\u7b56\u7565\u4e0b\u6765\u7684\u957f\u5ea6\u76f8\u540c\u6570\u6392\u5e8f\nif n == 0:\n    print(0)\n    return\n\nfor i in range(n-1):\n    print((i*(i+1))/2)\n    \n"}, "290": {"problem_id": 4290, "answer": "import sys\ninput = sys.stdin.readline\n\nN,M = map(int,input().split())\nA = list(map(int,input().split()))\n\ndef solve():\n    d = {}\n    for i in range(N):\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    ans = 0\n    for i in range(N):\n        if d[i] == 1:\n            ans += d[i]\n        elif d[i] % 2 == 0:\n            ans += d[i] // 2\n        else:\n            ans += d[i] // 2\n    return ans\n\nsolve()\n"}, "291": {"problem_id": 4291, "answer": "from collections import deque\nN,Q = list(map(int,input().split()))\ns = input()\ns.zfill(N)\nfor i in range(Q):\n    a,b,c,d = list(map(int,input().split()))\n    if s[a-1]==s[b-1]==s[d-1]==s[c-1]==s[g-1]==s[t-1]==s[g-2]==s[t-2]==s[g-3]==s[t-3]==s[g-4]==s[t-4]==s[g-5]==s[t-5]==s[g-6]==s[t-6]==s[g-7]==s[t-7]==s[g-8]==s[t-8]==s[g-9]==s[t-9]==s[g-10]==s[t-10]==s[g-11]==s[t-11]==s[g-12]==s[t-12]==s[g-13]==s[t-13]==s[g-14]==s[t-14]==s[g-15]==s[t-15]==s[g-16]==s[t-16]==s[g-17]==s[t-17]==s[g-18]==s[t-18]==s[g-19]==s[t-19]==s[g-20]==s[t-20]==s[g-21]==s[t-21]==s[g-22]==s[t-22]==s[g-23]==s[t-23]==s[g-24]==s[t-24]==s[g-25]==s[t-25]==s[g-26]==s[t-26]==s[g-27]==s[t-27]==s[g-28]==s[g-29]==s[g-29]==s[g-30]==s[t-30]==s[g-31]==s[t-31]==s[g-32]==s[g-33]==s[t-32]==s[g-33]==s[g-34]==s[t-34]==s[g-35]==s[t-35]==s[g-36]==s[t-36]==s[g-37]==s[t-37]==s[g-38]==s[t-38]==s[g-39]==s[t-39]==s[g-40]==s[t-40]==s[t-41]==s[t-41]==s[g-42]==s[t-42]==s[g-43]==s[t-43]==s[t-43]==s[g-44]==s[t-44]==s[g-45]==s[t-45]==s[g-46]==s[t-46]==s[g-47]==s[t-47]==s[g-48]==s[t-49]==s[g-50]==s[t-51]==s[t-52]==s[g-54]==s[t-54]==s[g-55]==s[t-55]==s[g-56]==s[t-56]==s[g-57]==s[t-58]==s[g-58]==s[t-59]==s[g-60]==s[t-61]==s[t-62]==s[g-63]==s[t-63]==s[g-64]==s[t-64]==s[g-65]==s[t-65]==s[t-66]==s[g-67]==s[t-68]==s[g-69]==s[t-69]==s[g-70]==s[t-70]==s[g-71]==s[t-71]==s[g-72]==s[t-72]==s[g-73]==s[t-73]==s[g-74]==s["}, "292": {"problem_id": 4292, "answer": "import sys\ninput = sys.stdin.readline\n\ndef f(s):\n    return''.join(sorted(map(int, list(s.split()))) for _ in range(1, len(s)))\n\nn, k = f(input())\np = [0] * (k + 1)\nfor i in range(1, n + 1):\n    p[i] = p[i - 1] + f(p[i - 1])\n\nprint(p[n])"}, "293": {"problem_id": 4293, "answer": "def main():\n    P,Q,R = map(int,input().split())\n    if R == 0:\n        print(1)\n    elif R == 1:\n        print(P)\n    else:\n        a,b,c = map(int,input().split())\n        a,b,c = min(a,b),max(a,b),min(a,b)\n        print(a + b + c)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "294": {"problem_id": 4294, "answer": "def main():\n    x,a=map(int,input().split())\n    print(x)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "295": {"problem_id": 4295, "answer": "N, K = map(int, input().split())\nans = 0\nfor i in range(N):\n    if i - K <= 0:\n        ans += N - K\n        break\nprint(ans)"}, "296": {"problem_id": 4296, "answer": "# coding: utf-8\n# Your code here!\nimport math\ndef solve():\n    a = int(input())\n    print(solve())\n\ndef __starting_point():\n    solve()\n__starting_point()"}, "297": {"problem_id": 4297, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        print(n)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "298": {"problem_id": 4298, "answer": "from collections import Counter\nN, D = map(int, input().split())\nc = Counter(map(int, input().split()))\nprint(min(c.values()) if D else 0)"}, "299": {"problem_id": 4299, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    input()\n    n = int(input())\n    print((\"pon\", \"n\")[n-1])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "300": {"problem_id": 4300, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nd = list(map(int, readline().split()))\n\ndef func(x, y):\n    return x * y\n\ndef func2(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func3(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func4(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func5(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func6(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func7(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func8(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func9(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func10(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func11(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func12(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func13(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func14(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func15(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func16(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func17(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func18(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func19(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func20(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func21(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func22(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func23(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func24(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func25(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func26(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func27(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func28(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func29(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func30(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func31(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func32(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func33(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func34(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func35(x, y):\n    return (x - y) * (y - x) // 2\n\ndef func36(x, y):\n    return (x -"}, "301": {"problem_id": 4301, "answer": "N = int(input())\nA = list(map(int,input().split()))\n\ndef max_solve(A,s):\n    if s == 0:\n        return 0\n    elif s == 1:\n        return max(A)\n    else:\n        return max(A[s-1] + max_solve(A[s-1],s-1) + max_solve(A[s-1],s-2))\n\nprint(max_solve(A,s))"}, "302": {"problem_id": 4302, "answer": "from sys import stdin, stdout\ninput = stdin.readline\ns = \"abcdefghijklmnopqrstuvwxyz\"\na, b = map(int, input().split())\nprint(max(s, a, b))"}, "303": {"problem_id": 4303, "answer": "def main():\n    n, k = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        x = int(input())\n        l.append(x)\n    l.sort()\n    ans = 0\n    while k > 0:\n        ans += min(k, l[k - 1])\n        k -= 1\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "304": {"problem_id": 4304, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n\n    @classmethod\n    def __init__(self, file):\n        self.file = file\n        self.d = list(map(int, self.input().split()))\n\n    def dfs(self, start, end):\n        if end == 0:\n            return\n        elif end == len(self.d):\n            return\n        else:\n            self.d[start] += 1\n            self.dfs(start+1, end+1)\n            return\n        \n    def dfs(self, start, end):\n        if end == 0:\n            return\n        elif end == len(self.d):\n            return\n        else:\n            self.d[start] += 1\n            self.dfs(start+1, end+1)\n            return\n        \n    def dfs2(self, start, end):\n        if end == 0:\n            return\n        elif end == len(self.d):\n            return\n        else:\n            self.d[start] += 1\n            self.dfs2(start+1, end+1)\n            return\n        \n    def dfs(self, start, end):\n        if end == 0:\n            return\n        elif end == len(self.d):\n            return\n        else:\n            self.d[start] += 1\n            self.dfs2(start+1, end+1)\n            return\n        \n    def dfs2(self, start, end):\n        if end == 0:\n            return\n        elif end == len(self.d):\n            return\n        else:\n            self.d[start] += 1\n            self.dfs2(start+1, end+1)\n            return\n        \n    def dfs(self, start, end):\n        if end == 0:\n            return\n        elif end == len(self.d):\n            return\n        else:\n            self.d[start] += 1\n            self.dfs2(start+1, end+1)\n            return\n        \n    def dfs2(self, start, end):\n        if end == 0:\n            return\n        el"}, "305": {"problem_id": 4305, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    h, a = map(int, readline().split())\n    print((0, 0))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "306": {"problem_id": 4306, "answer": "A,B,C,D = map(int,input().split())\nA = sorted(A)\nB = sorted(B)\nC = [0]*B\nD = [0]*B\n\nfor i in range(A[0]):\n    if i%2==0:\n        A[i] = A[i]+B\n    else:\n        A[i] = A[i]+C\n        B = A[i]+D\n        C.append(A[i]+B)\n\nprint(len(A))"}, "307": {"problem_id": 4307, "answer": "def prime(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 2\n    else:\n        return 3\nprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 59,\n          71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139,\n          149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223,\n          223, 227, 229, 233, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277,\n          281, 283, 293, 307, 311, 313, 317]\n\ndef __starting_point():\n    n = int(input())\n    print(prime(n))\n__starting_point()"}, "308": {"problem_id": 4308, "answer": "def main():\n    n,k = list(map(int,input().split()))\n    d = {}\n    for i in range(n):\n        d[i] = min(d.get(i,0),d.get(i,1))\n    print(abs(d[k]))\ndef __starting_point():\n    main()\n__starting_point()"}, "309": {"problem_id": 4309, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n    n = int(input())\n    for _ in range(n):\n        x = list(map(int, input().split()))\n        print(x[0])\n        if x[0] == 0:\n            x[1] = 1\n        else:\n            x[1] = x[0] + 1\n            x[0] = x[1]\n            x[1] = x[0]\n            x[0] = x[1]\n            x[1] = x[0]\n            x[0] = x[1]\n            x[1] = x[0]\n            x[1] = x[1]\n            x[1] = x[0]\n            x[0] = x[1]\n            x[1] = x[0]\n            x[1] = x[1]\n            x[1] = x[0]\n            x[0] = x[1]\n            x[1] = x[0]\n            x[1] = x[1]\n            x[1] = x[0]\n            x[0] = x[1]\n            x[1] = x[0]\n            x[1] = x[1]\n            x[1] = x[0]\n            x[0] = x[1]\n            x[1] = x[0]\n            x[1] = x[1]\n            x[1] = x[1]\n            x[1] = x[0]\n            x[0] = x[1]\n            x[1] = x[0]\n            x[1] = x[1]\n            x[1] = x[0]\n            x[1] = x[1]\n            x[1] = x[1]\n            x[1] = x[0]\n            x[0] = x[1]\n            x[1] = x[0]\n            x[1] = x[1]\n            x[1] = x[0]\n            x[1] = x[1]\n            x[1] = x[0]\n            x[0] = x[1]\n            x[1] = x[0]\n            x[1] = x[1]\n            x[1] = x"}, "310": {"problem_id": 4310, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    input = readline.rstrip()\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(l[0]):\n        ans += min(l[i], i)\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "311": {"problem_id": 4311, "answer": "from sys import stdin,stdout\nfrom collections import deque,defaultdict as dd,Counter as C\nfrom heapq import heappop,heappush,heapify,heappushpop,heappop,heapop,heapquot,QMST,ST,U while True:\n    s = int(stdin.readline().strip())\n    m = int(stdout.write(str(s))+'\\n')\n    print(m)\n\ndef main():\n    s = int(stdin.readline().strip())\n    m = int(stdin.readline().strip())\n    d = dd(sorted(sorted(m),reverse=True))\n    for _ in range(s):\n        if m%2!=0:\n            d[s] = m//2\n        else:\n            d[s] = m\n        m = m//2\n    print(m)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "312": {"problem_id": 4312, "answer": "def main():\n    a,b,c,d = list(map(int,input().split()))\n    if a == 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\ndef __starting_point():\n    main()\n__starting_point()"}, "313": {"problem_id": 4313, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    V = list(map(int, readline().split()))\n    X = 50\n    y = 0\n    for i in range(n):\n        y += V[i]\n        x = min(y, V[i])\n        x -= min(y, V[i])\n        x -= min(y, V[i])\n        x -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n        y -= min(y, V[i])\n "}, "314": {"problem_id": 4314, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n    W = int(input())\n    mat = [[] for _ in range(W)]\n    for _ in range(W):\n        i, j = list(map(int, input().split()))\n        mat[i][j] = mat[i][j] + '#'\n        i.pop()\n        j.pop()\n        mat[i][j] = mat[i][j]\n        i.append(j)\n        j.append(i)\n        \n    # print(mat)\n    # print(mat[W])\n    # print(mat[0])\n    # print(mat[W-1])\n    \n    # sys.stdout = open('r', 'w')\n    # sys.stdout.write(str(mat[W-1]))\n    \n    main()\n"}, "315": {"problem_id": 4315, "answer": "# cook your dish here\nfrom math import *\ndef lcm(a, b):\n return a*b\n \ndef is_valid(n):\n try:\n  return int(n**0.5)\n except ValueError:\n  return False\n \ndef solve():\n n = int(input())\n a = lcm(a, b)\n print(is_valid(n))\n \n"}, "316": {"problem_id": 4316, "answer": "def main():\n    s = list(input())\n    for i in range(len(s)):\n        if s[i] == 'A':\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "317": {"problem_id": 4317, "answer": "def main():\n    A,B = map(int,input().split())\n    print(max(A,B))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "318": {"problem_id": 4318, "answer": "def main():\n    N = int(input())\n    H = list(map(int, input().split()))\n    print((H.count(1) - 1) // 2)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "319": {"problem_id": 4319, "answer": "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    print(sum(a[:i]))"}, "320": {"problem_id": 4320, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve(n):\n    ans = 0\n    for i in range(n):\n        if i == 0:\n            ans += 1\n        else:\n            ans += int(i)\n    return ans\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(solve(n))"}, "321": {"problem_id": 4321, "answer": "from math import factorial\nn, k = map(int, input().split())\nd = 10**9 + int(n)\nans = 0\nfor i in range(k):\n    if d%i == 0:\n        ans += factorial(i)\n    else:\n        ans += pow(i, d, 2)\nprint(ans)"}, "322": {"problem_id": 4322, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef max_balance(d):\n    if d == 0:\n        return 0\n    elif d == 1:\n        return 1\n    else:\n        m = max(a[d] - a[0], a[d] - a[1])\n        return m\n\nmax_balance = 0\nfor i in range(n):\n    a[i] = max_balance(a[i])\n\nprint(max_balance)"}, "323": {"problem_id": 4323, "answer": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\ns = list(map(int, input().split()))\na = [0]*n\nfor i in range(m):\n    a[i] = int(input())\n    s[i] = 0\nans = 0\nfor i in range(n):\n    if s[i] > a[i]:\n        ans += 1\n    else:\n        ans += min(s[i], a[i])\nprint(ans)"}, "324": {"problem_id": 4324, "answer": "for _ in range(int(input())):\n    n, a, b = map(int, input().split())\n    s = input()\n    if len(s) == b:\n        print('tallyte')\n    else:\n        print('qwerty')\n"}, "325": {"problem_id": 4325, "answer": "def main():\n    n,t=map(int,input().split())\n    X=int(n)\n    T=int(n)\n    while(T>0):\n        T-=1\n        X+=T\n    print(int(n),end=\"\")\nmain()"}, "326": {"problem_id": 4326, "answer": "n = int(input())\ngroups = []\nfor i in range(n):\n    l = list(map(int,input().split()))\n    groups.append(l)\nprint(sum(groups))"}, "327": {"problem_id": 4327, "answer": "import bisect\ndef main():\n    A, P = list(map(int, input().split()))\n    print(max(A, P))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "328": {"problem_id": 4328, "answer": "def main():\n    import sys\n    sys.setrecursionlimit(10**6)\n    input = sys.stdin.readline\n    mod = 10**9 + 7\n    n = int(input())\n    for i in range(n):\n        a, b = map(int, input().split())\n        print(a - b)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "329": {"problem_id": 4329, "answer": "from collections import Counter\ns, t = input().split('\\n')\ns = int(s)\nt = int(t)\n\ndef check(s):\n    if s not in s:\n        return False\n    else:\n        return True\n\ndef __starting_point():\n    s = input().strip()\n    t = input().strip()\n    print(check(s))\n__starting_point()"}, "330": {"problem_id": 4330, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    A, B = map(int, input().split())\n    print((int(A) - 1) % 2)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "331": {"problem_id": 4331, "answer": "#!/usr/bin/env python3\n\ndef __starting_point():\n    n = int(input())\n    if n == 7:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n__starting_point()"}, "332": {"problem_id": 4332, "answer": "def main():\n    s = list(map(int, input().split(' ')))\n    print(s[0]*s[-1]//2)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "333": {"problem_id": 4333, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort\nfrom heapq import heappush,heappop,heapify\n\nxs,ys,xt,ysy,xtx,xtxy = list(map(int,input().split()))\n\n# \u30b0\u30eb\u30fc\u30d7\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3059\u308b\ndef main():\n    xs,ys,xt,ysy,xtx,xtxy = list(map(int,input().split()))\n    \n    # \u305d\u306e\u307e\u96c6\u5408\u306b\u3088\u3063\u3066\u8ffd\u52a0\u3055\u308c\u308b\u9802\u70b9\u304b\u3089\u8003\u3048\u3089\u308c\u308b\u5834\u5408\n    xs.append(xs)\n    ys.append(ys)\n    xs.append(xtx)\n    ys.append(ysy)\n    xs.append(xtx)\n    ys.append(xtxy)\n    \n    print(*xs,sep='\\n')\n    print(*ys,sep='\\n')\n    print(*xtx,sep='\\n')\n    print(*xtxy,sep='\\n')\n    \ndef __starting_point():\n    main()\n__starting_point()"}, "334": {"problem_id": 4334, "answer": "s,t = list(map(int,input().split()))\nnum = 0\nfor i in range(s):\n    a,b = list(map(int,input().split()))\n    num += a\n    num -= b\n    if(num>0):\n        num = 0\n    elif(num<0):\n        num = 0\n    else:\n        num = 0\nprint(num)\n"}, "335": {"problem_id": 4335, "answer": "def main():\n    s = input()\n    print(\"Yes\")\n    if s == \"a\" or s == \"b\":\n        print(\"Yes\")\n    elif s == \"a\" or s == \"b\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\nmain()"}, "336": {"problem_id": 4336, "answer": "from math import sqrt\n\ndef calc(x, y):\n    return sqrt(y ** 2 + x * (y - x) ** 2)\n\ndef __starting_point():\n    input()\n    print(calc(10**9+100000000) + 1)\n__starting_point()"}, "337": {"problem_id": 4337, "answer": "n = int(input())\ns = list(map(int, input().split()))\nprint(\"\\n\".join(s))"}, "338": {"problem_id": 4338, "answer": "from math import ceil\nn, x, y = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(a, b):\n    if a[0] == b[0]:\n        return 0\n    elif a[0] == b[1]:\n        return max(0, ceil(b[0] - a[0]))\n    else:\n        return max(0, x - y)\n\nsolve(a, b)\nprint(solve(a, b))"}, "339": {"problem_id": 4339, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(a[0] + b[0] + a[1] + b[2])"}, "340": {"problem_id": 4340, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int,input().split()))\n\nfor i in range(n):\n    a.append(list(map(int,input().split())))\n\nans = []\nfor i in range(n):\n    ans.append(a[i]*10)\n\nans.sort(key=lambda x:x[1])\n\nprint(*ans,sep='\\n')\n"}, "341": {"problem_id": 4341, "answer": "n, m = map(int, input().split())\nedges = []\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    edges.append([a, b])\n\ndef dfs(u, v):\n    if u not in edges:\n        return 0\n    else:\n        u.append(v)\n        return 1\n\nvisited = set()\nvisited.add(u)\ndfs(u, v)\n\nprint(len(edges))\nfor i in edges:\n    print(i)"}, "342": {"problem_id": 4342, "answer": "from collections import defaultdict\nn = int(input())\nedges = defaultdict(list)\nfor i in range(n):\n    a, b = map(int, input().split())\n    edges[a].append(b)\n    edges[b].append(a)\n\ndef dfs(node, color):\n    if node == node[0]:\n        return 1\n    elif color == 1:\n        return 0\n    else:\n        color = color[1:]\n        for i in edges[color]:\n            if color == 1:\n                return 1\n            elif color == 2:\n                return 0\n            else:\n                color = 2\n        return 1\n\ndfs(0, color)\n"}, "343": {"problem_id": 4343, "answer": "def median(s,t):\n    if len(s)>0:\n        return s[0]\n    elif len(s)==0:\n        return 0\n    else:\n        l=len(s)\n        r=len(s)//l\n        return median(s,r)\n\nn=int(input())\ns=input()\nt=input()\nc=0\nfor i in range(n):\n    s=s.replace('a',' ').replace('b',' ').replace('c',' ').split(' ')\n    t=t.replace('a',' ').replace('b',' ').replace('c',' ').split(' ')\n    c+=1\nprint(median(s,t))"}, "344": {"problem_id": 4344, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nfor i in range(k):\n    a[i] = list(map(int, input().split()))\nprint('YES' if sum(a) == sum(a[:n]))"}, "345": {"problem_id": 4345, "answer": "from sys import stdin\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\n\ndef solve(s):\n    if s == []:\n        return \"NO\"\n    elif s == []:\n        return \"YES\"\n    else:\n        print(\"NO\")\n        return \"YES\"\n\nfor i in range(n):\n    solve(a[i])\n"}, "346": {"problem_id": 4346, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    L, V, Lv, R = map(int, input().split())\n    if L == 1 and R == 1:\n        print(0)\n        continue\n    if L == 1 and R == 1:\n        print(1)\n        continue\n    if L == 1 and R == 1:\n        print(2)\n        continue\n    if R == 1 and L == 1:\n        print(3)\n        continue\n    if L == 1 and R == 1:\n        print(4)\n        continue\n    if R == 1 and L == 1:\n        print(5)\n        continue\n    if L == 1 and R == 1:\n        print(6)\n        continue\n    if R == 1 and L == 1:\n        print(7)\n        continue\n    if L == 1 and R == 1:\n        print(8)\n        continue\n    if R == 1 and L == 1:\n        print(9)\n        continue\n    if L == 1 and R == 1:\n        print(10)\n        continue\n    if R == 1 and L == 1:\n        print(11)\n        continue\n    if L == 1 and R == 1:\n        print(12)\n        continue\n    if R == 1 and L == 1:\n        print(13)\n        continue\n    if L == 1 and R == 1:\n        print(14)\n        continue\n    if R == 1 and L == 1:\n        print(15)\n        continue\n    if L == 1 and R == 1:\n        print(16)\n        continue\n    if R == 1 and L == 1:\n        print(17)\n        continue\n    if R == 1 and L == 1:\n        print(18)\n        continue\n    if L == 1 and R == 1:\n        print(19)\n        continue\n    if R == 1 and L == 1:\n        print(20)\n        continue\n    if R == 1 and L == 1:\n        print(21)\n        continue\n    if L == 1 and R == 1:\n        print(22)\n        continue\n    if R == 1 and L == 1:\n        print(23)\n        continue\n    if R == 1 and L == 1:\n        print(24)\n        continue\n    if L == 1 and R == 1:\n        print(25)\n        continue\n    if R == 1 and L == 1:\n        print(26)\n        continue\n    if R == 1 and L == 1:\n        print(27)\n        continue\n    if R == 1 and L == 1:\n        print("}, "347": {"problem_id": 4347, "answer": "from math import ceil,sqrt\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\nl.sort()\nprint(len(l))\n"}, "348": {"problem_id": 4348, "answer": "s = input()\nn, k = len(s), 0\nfor i in range(n):\n    if s[i] == 'a':\n        k -= 1\n    elif s[i] == 'a':\n        k -= 1\n    else:\n        print(''.join(s))\n        break\nprint('\\n'.join(s))"}, "349": {"problem_id": 4349, "answer": "n, m = map(int, input().split())\nk = list(map(int, input().split()))\n\ndef max_curr(curr, curr_idx):\n    if curr_idx == 0:\n        return 0\n    else:\n        return curr_idx\n\ndef min_curr(curr, curr_idx):\n    if curr == 0:\n        return 0\n    else:\n        return curr_idx\n\ndef recur(curr, curr_idx):\n    if curr == 0:\n        return 1\n    else:\n        return curr_idx\n\ndef recur_max(curr, curr_idx):\n    if curr == 0:\n        return 1\n    else:\n        return curr_idx\n\nn, m = map(int, input().split())\nk = list(map(int, input().split()))\n\nprint(min_curr(recur(0, k[0])) + recur_max(recur(1, k[1])))"}, "350": {"problem_id": 4350, "answer": "from sys import stdin, stdout\nn, m = list(map(int, stdin.readline().split()))\nl = list(map(int, stdin.readline().split()))\nr = list(map(int, stdin.readline().split()))\n\ndef main():\n    n, m = list(map(int, stdin.readline().split()))\n    l.append(r[0])\n    r.append(l[0])\n    for i in range(n):\n        x, y, s = l[i]\n        if x == '*':\n            print('*' * m)\n        else:\n            print('-1')\n            break\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "351": {"problem_id": 4351, "answer": "# https://atcoder.com/a/jian-katas-dal-tulu-szob-kolb\n# This kata is inspired by the well-known [Sum of squares of digits](https://www.codewars.com/kata/sum-squares-of-digits)\n\nimport math\nn = int(input())\nprint(n)"}, "352": {"problem_id": 4352, "answer": "from collections import deque\ndef main():\n    A, B = list(map(int, input().split()))\n    n = len(A)\n    d = deque()\n    d.append(0)\n    for i in range(n):\n        d.append(A[i] + B[i])\n    print((\"{}\".format(n)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "353": {"problem_id": 4353, "answer": "# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef chr(s):\n    return ''.join(chr(i) for i in s.split())\n\ndef __starting_point():\n    # Your code here!\n    # Your code here!\n    import re\n    input()\n    s = input()\n    print(chr(s))\n\n__starting_point()"}, "354": {"problem_id": 4354, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\ndef main():\n    n, m = list(map(int, input().split()))\n    A.append(n)\n    A.append(m)\n    X = [0] * (n + 1)\n    for i in range(n):\n        X[i] = X[i - 1] + A[i]\n        A[i] = X[i]\n    print(*X)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "355": {"problem_id": 4355, "answer": "# coding: utf-8\n# Your code here!\nimport math\na = int(input())\nfor i in range(a):\n    print(math.floor(a**3 + a**2 + a**3))"}, "356": {"problem_id": 4356, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N, M = map(int, input().split())\n    A = list(map(str, A))\n    B = list(map(str, B))\n    dp = [[0]*(N+1) for _ in range(M+1)]\n    for i in range(1, N+1):\n        for j in range(1, M+1):\n            if A[i-1] == B[j-1]:\n                dp[i][j] = 1\n            else:\n                dp[i][j] = dp[i-1][j-1] + 1\n                dp[i][j] = dp[i-1][j]\n                dp[i][j] = max(dp[i][j], dp[i-1][j])\n    print(\"Yes\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "357": {"problem_id": 4357, "answer": "from sys import stdin, stdout\nfrom math import gcd, fabs, f_lcm, f_rcm, ceil, gcd, fabs2, f_if_not_lcm, f_if_not_rcm, f_if_not_ccm\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heappop, heappush, nsmallest, nlargest, nsmallest2, nlargest2\nfrom bisect import bisect_left as bl, bisect_right as br, bisect_top as br2, bisect_left as bl2, bisect_right as br22\nfrom bisect import bisect as bl as bl2, bisect_left as br as br2, bisect_top as br2, bisect_left as br22\nfrom functools import reduce\nfrom operator import itemgetter\nfrom operator import itemgetter_or_div\nfrom fractions import gcd\nfrom time import perf_time\nfrom fractions import ceil\nfrom random import randint, atan, all_zeros, shuffle, least_common_digit, composite_factors, composite_detailed_coefficients, factorial_detailed_coefficient\nfrom statistics import mean, median, tau, degrees, factorial, factorials, factorials2\nfrom functools import lru_cache\nfrom math import gcd, fabs, f_lcm, f_rcm, f_rcm2, f_rcm3, f_rcm4, f_rcm5, f_rcm6, f_rcm7, f_rcm8, f_rcm9\nfrom heapq import least_common_digit, nsmallest, nlargest, nsmallest2, nlargest2, nlargest2_longest, nsmallest2_longest, nsmallest2_longest2, nsmallest2_longest2_longest, nsmallest2_longest2_longest\nfrom datetime import timedelta, timedelta2\nfrom operator import itemgetter\nfrom decimal import gcd, asin, acos, asin2, atan, bfs, fibonacci, fibonacci_dig, fibonacci_mod, fibonacci_pi, fibonacci_round, fibonacci_round2, fibonacci_round3, fibonacci_round4, fibonacci_round5, fibonacci_round6, fibonacci_round7, fibonacci_round8, fibonacci_round8_longest, fibonacci_round8_longest2, fibonacci_round8_longest2_longest, fibonacci_round8_longest3, fibonacci_round8_longest3_longest, fibonacci_round8_longest4, fibonacci_round8_longest4_longest, fibonacci_round8_longest4_longest2, fibonacci_round8_longest4_longest2_longest, fibonacci_round8_longest4_longest2_longest2, fibonacci_round8_longest4_longest2_longest2_longest, fibonacci_round8_longest4_longest2_longest2_longest2, fibonacci_round8_longest4_longest2_longest2_longest2, fibonacci_round8_longest4_longest2_longest2_longest2, fibonacci_round8_longest4_longest2_longest2_longest2, fibonacci_round8_longest4_longest2_longest2_longest2, fibonacci_round8_longest4_longest2_longest2_longest2, fibonacci_round8_longest4_longest2_longest2_longest2_longest2, fibonacci_round8_longest4_longest2_longest2_longest2_longest2, fibonacci_round8_longest4_longest2_longest2_longest2)\nN = int(input())\nA = list(map(int, stdin.readline().split()))\nB = list(map(int, stdin.readline().split()))\n\ndef __starting_point():\n    n = int(input())\n    A = list(map(int, stdin.readline().split()))"}, "358": {"problem_id": 4358, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\np = [int(x) for x in input().split()]\n\ndef calc(a, b):\n    if a == b:\n        return a\n    elif a < b:\n        return b\n    else:\n        a = b\n        b = a\n        return a\n\ndef main():\n    a = 0\n    b = 0\n    for i in range(n):\n        a += calc(p[i], p[i] % n)\n        b += calc(p[i], p[i] % n)\n        a = b\n    print(a)\n\nmain()\n"}, "359": {"problem_id": 4359, "answer": "# https://atcoder.jp/contests/arcd759/tasks/arcd759_5_dish_problems\nimport sys\ninput = sys.stdin.readline\n\nsys.setrecursionlimit(10 ** 6)\nINF = float('inf')\nmod = 10**9+7\neps = 1.0 / 10**9+7\ninf = float('inf')\nfor _ in range(int(input())):\n    a,b,c,d,e = map(int,input().split())\n    if a==b==c==d==e:\n        print(a)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==c:\n        print(d)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==c:\n        print(d)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==c:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==c:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==c:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n        continue\n    if e==d:\n        print(c)\n  "}, "360": {"problem_id": 4360, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\n\ndef calc(a, b):\n    if a == 0:\n        return 0\n    elif a == 1:\n        return 1\n    else:\n        return (a*b) / (n-1)\n\ndef __starting_point():\n    print(calc(A, A[0]))\n__starting_point()"}, "361": {"problem_id": 4361, "answer": "def main():\n    n, k = list(map(int, input().split()))\n    h = [0] * (n + 1)\n    for i in range(n):\n        h[i] = h[i - 1] + 1\n        h[i] = h[i + 1] + 1\n        h[i] = h[i + 1] + 1\n    print(min(h))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "362": {"problem_id": 4362, "answer": "def main():\n    a = input()\n    a = list(a)\n    a.sort()\n    for i in range(len(a)):\n        print(''.join(a[i]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "363": {"problem_id": 4363, "answer": "def gcd(a,b):\n if b==0:\n  return a\n else:\n  return gcd(b,a%b)\n\nK = int(input())\nS = int(input())\nfor i in range(K,S+1):\n g = gcd(i,i)\n print(g)"}, "364": {"problem_id": 4364, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\ndef main():\n    s = list(readline())\n    n = len(s)\n    d = {'year':'%d%d','month':'%d%d', 'day':'%d%d'}\n    d.update({'year':'%d%d','month':'%d%d', 'day':'%d%d'})\n    print('%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%"}, "365": {"problem_id": 4365, "answer": "def main():\n    K = int(input())\n    odd = []\n    for i in range(K):\n        odd.append(i)\n    odd.sort()\n    print(odd[K-1])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "366": {"problem_id": 4366, "answer": "def __starting_point():\n    A,B = map(int,input().split())\n    print(31)\n__starting_point()"}, "367": {"problem_id": 4367, "answer": "def main():\n    N, R = list(map(int, input().split()))\n    l = [0] * N\n    for i in range(N):\n        l[i] = l[i] + 1\n    print(l[R])\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "368": {"problem_id": 4368, "answer": "from sys import*\ninput = lambda:sys.stdin.readline().rstrip('\\r\\n')\nn, k = map(int, input().split())\nans = 0\nfor i in range(k):\n    if n <= 10:\n        ans += 1\nprint(ans)"}, "369": {"problem_id": 4369, "answer": "from sys import stdin, stdout\ndef main():\n    N = int(stdin.readline())\n    print(*[int(x) for x in stdin.readline().split()])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "370": {"problem_id": 4370, "answer": "# cook your dish here\nfrom sys import stdin,stdout\ndef solve():\n a,b=map(int,stdin.readline().split())\n print(solve())\n \n \n"}, "371": {"problem_id": 4371, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort_left as insort\nfrom heapq import heapify, heappush, heappop as h, union, heapify_or_assign as invass, assign\nfrom collections import Counter as cc, deque, OrderedDict as o, ROW, SegmentTree as s, UnionAllowed as u\nfrom functools import reduce, lru_cache as r\n\n\ndef main():\n    s = input()\n    l = len(s)\n    r = reduce(lambda x,y: x+y, s, [])\n    print(sorted(sorted(s), key=lambda x: abs(x[0])-abs(x[1])))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "372": {"problem_id": 4372, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef dfs(x, y):\n    nonlocal a\n    if x == y:\n        return 0\n    else:\n        return 1 + dfs(x, y)\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(dfs(a, n))\n__starting_point()"}, "373": {"problem_id": 4373, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint(max(a))"}, "374": {"problem_id": 4374, "answer": "from collections import deque\n\nn, m = list(map(int, input().split()))\nedges = []\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    edges.append((a, b))\n\nd = {}\nd[0] = 0\nfor i in range(1, n):\n    if i not in d:\n        d[i] = 0\n    elif i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nprint('\\n'.join(edges))\n"}, "375": {"problem_id": 4375, "answer": "from collections import defaultdict\nn, k = list(map(int, input().split()))\nedges = defaultdict(list)\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    edges[a].append(b)\n    edges[b].append(a)\n\ndef dfs(i, k):\n    if k == 0:\n        return\n    if i == n:\n        return\n    if k == 1:\n        return\n    if len(edges[i]) == 0:\n        return\n    if len(edges[i]) == 1:\n        return\n    if len(edges[i]) == 2:\n        return\n    if len(edges[i]) == 3:\n        return\n    if len(edges[i]) == 4:\n        return\n    if len(edges[i]) == 5:\n        return\n    if len(edges[i]) == 6:\n        return\n    if len(edges[i]) == 7:\n        return\n    if len(edges[i]) == 8:\n        return\n    if len(edges[i]) == 9:\n        return\n    if len(edges[i]) == 10:\n        return\n    if len(edges[i]) == 11:\n        return\n    if len(edges[i]) == 12:\n        return\n    if len(edges[i]) == 13:\n        return\n    if len(edges[i]) == 14:\n        return\n    if len(edges[i]) == 15:\n        return\n    if len(edges[i]) == 16:\n        return\n    if len(edges[i]) == 17:\n        return\n    if len(edges[i]) == 18:\n        return\n    if len(edges[i]) == 20:\n        return\n    if len(edges[i]) == 21:\n        return\n    if len(edges[i]) == 22:\n        return\n    if len(edges[i]) == 23:\n        return\n    if len(edges[i]) == 24:\n        return\n    if len(edges[i]) == 25:\n        return\n    if len(edges[i]) == 26:\n        return\n    if len(edges[i]) == 25:\n        return\n    if len(edges[i]) == 26:\n        return\n    if len(edges[i]) == 25:\n        return\n    if len(edges[i]) == 26:\n        return\n    if len(edges[i]) == 25:\n        return\n    if len(edges[i]) == 25:\n        return\n    if len(edges[i]) == 26:\n        return\n    if len(edges[i]) == 25:\n        return\n    if len(edges[i]) == 26:\n        return\n    if len(edges[i]) == 25:\n        return\n    if len(edges[i]) == 25:"}, "376": {"problem_id": 4376, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nl = list(map(int, input().split()))\n\ndef is_decreasing(x):\n    if x < 0:\n        return False\n    elif x == 0:\n        return True\n    else:\n        return False\n\nfor i in range(m):\n    x = int(input())\n    if is_decreasing(x):\n        print(1, end=' ')\n    else:\n        print(2, end=' ')\n"}, "377": {"problem_id": 4377, "answer": "from collections import deque\ndef __starting_point():\n    a, b, c = list(map(int, input().split()))\n    print(a+b, c+c)\n__starting_point()"}, "378": {"problem_id": 4378, "answer": "n = int(input())\ns = input()\nr = 0\nfor i in range(n):\n    s = s.replace('R', 'G')\n    r += s.replace('B', '1')\n    s = s.replace('R', 'G')\n    r += s.replace('B', '2')\nprint(r)\n"}, "379": {"problem_id": 4379, "answer": "from collections import defaultdict as dd\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    x, y = dd(int(input()), 0)\n    if x == y:\n        print(1)\n    else:\n        print(2)\n"}, "380": {"problem_id": 4380, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n\n    print(A[0] \\times B[0] == 3)\n    print(A[1] \\times B[1] == 3)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "381": {"problem_id": 4381, "answer": "import sys\n\ndef main():\n    x,y=map(int,sys.stdin.readline().split())\n    if x==y:\n        print(x)\n    else:\n        main()\n\ndef __starting_point():\n    main()\n__starting_point()"}, "382": {"problem_id": 4382, "answer": "def main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(len(l))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "383": {"problem_id": 4383, "answer": "from sys import stdin, stdout\ninput = stdin.readline\ndef f(s):\n return s[0]\n\nfor x in range(1, 987654321, 2):\n s = list(map(int, input().strip().split(' ')))\n if s[0] == '5' and s[1] == '4':\n  print(\"YES\")\n else:\n  print(\"NO\")"}, "384": {"problem_id": 4384, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nfor i in range(N):\n    a = list(map(int, input().split()))\n    print((\"{} {}\".format(a[0], a[1])))"}, "385": {"problem_id": 4385, "answer": "from collections import deque\n\ndef main():\n    a, b, c, d, e, k = map(int, input().split())\n    if k == 0:\n        return \"Yay!\"\n    elif k == 1:\n        return \"No antennas\"\n    else:\n        q = deque([(a, b, c, d, e, k) for a, b, c, d, e, k in zip(a, b, c, d, e)) for _ in range(q.popleft()))\n        print((\"1\" if q[0] == \"1\" else \"0\"))\n        return \"\\n\".join(map(str, q.popleft()))"}, "386": {"problem_id": 4386, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    a,s = readline().split(' ')\n    print(s)\n\nmain()\n"}, "387": {"problem_id": 4387, "answer": "import sys\nreadline = sys.stdin.readline\n\nr = int(readline())\nans = []\nfor i in range(r):\n    ans.append(str(i))\nprint('\\n'.join(ans))"}, "388": {"problem_id": 4388, "answer": "def __starting_point():\n    n = int(input())\n    print(int(n))\n__starting_point()"}, "389": {"problem_id": 4389, "answer": "for _ in range(int(input())):\n    s = input()\n    l = len(s)\n    if l == 1:\n        print('0')\n    else:\n        for i in range(l-2, -1, -1):\n            if s[i] == s[i+l-1]:\n                print(''.join(s[i:i+l] for i in range(l) if i+l-1 not in s[i+l]))\n            else:\n                print(''.join(s[i:i+l] for i in range(l) if i+l-1 not in s[i+l]))\n"}, "390": {"problem_id": 4390, "answer": "import math\ndef __starting_point():\n    t = int(input())\n    while t:\n        a, b = list(map(int, input().split()))\n        print(a)\n        t -= 1\n        if a == b:\n            print(0)\n        else:\n            print(min(a, b))\n__starting_point()"}, "391": {"problem_id": 4391, "answer": "import math\nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\ntemp=0\nfor i in range(n):\n    temp+=a[i]*math.pow(2,i)\nprint(temp)\n"}, "392": {"problem_id": 4392, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    pos = [-1] * m\n    pos[0] = 0\n    for i in range(1, n):\n        if p[i] == 0:\n            pos[i] = 0\n        else:\n            pos[i] = 1\n    print(\"YES\")\n"}, "393": {"problem_id": 4393, "answer": "from itertools import permutations\nn = int(input())\nt = [0]*n\nfor i in range(n):\n    t[i] = 1\n    for j in range(n):\n        t[i+j] = t[i]*t[j]\n        t[i] += t[i]*t[j]\n        \nprint(''.join(map(str,t)))"}, "394": {"problem_id": 4394, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\nedges = set()\nfor _ in range(m):\n    u, v, w = list(map(int, input().split()))\n    edges.add((u, v, w))\n    edges.add((u, v, w))\n    edges.add((u, v, w))\n    edges.add((u, v, w))\n    edges.discard((u, v, w))\nprint(len(edges))\n"}, "395": {"problem_id": 4395, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().split(' ')\nr = int(s[0])\ng = int(s[1])\nb = int(s[2])\n\n# \u5de5\u5178\uff1argb(32, 64, 64)\n# \u56db\u5473\uff1aRGGB\n# \u5355\u5229\uff1aRGB\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3\u4fa7\uff1a3\u4e07\u518d\u5e30\u90fd\u4e0a\u4e00\u9806\n# \u533a\u9593\u957f\u5ea6:\u53f3"}, "396": {"problem_id": 4396, "answer": "from math import ceil, log2\ndef main():\n    N = int(input())\n    x = list(map(int, input().split()))\n    u = list(map(int, input().split()))\n    for i in range(N):\n        x[i] = int(input())\n    print((ceil(log2(x[0])))%1000000007)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "397": {"problem_id": 4397, "answer": "n = int(input())\ni = n-1\nwhile i!=0:\n    j = n-1\n    if i%j==0:\n        print(j)\n        i = i//j\n    else:\n        print(i)\n        i = i//j\n"}, "398": {"problem_id": 4398, "answer": "# cook your dish here\ndef lcm(a,b):\n    return (a*b)//(a+b)\n\n\nn=int(input())\ns=input()\nt=input()\n\n# a,b are integers\na=lcm(a,b)\nb=lcm(a,b)\n\n# print(a,b)\nprint(s[::-1])\n"}, "399": {"problem_id": 4399, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    s = input()\n    return any(map(lambda x: x.startswith('1'), s) == 'Yes')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "400": {"problem_id": 4400, "answer": "import sys\nreadline = sys.stdin.readline\nreadline.setfillvalue = lambda x: readline().strip()\nreadline = list(sys.stdin.readline().strip())\ndef main():\n    s = input()\n    if s[0] == 'R':\n        print((1) * len(s))\n    elif s[0] == 'S':\n        print((1) * len(s))\n    else:\n        for i in range(1, len(s) - 1):\n            if s[i] == 'R':\n                print((i + 1) * len(s))\n            else:\n                print((i + 1) * len(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "401": {"problem_id": 4401, "answer": "import sys\ninput = sys.stdin.readline\n\nX,Y,Z = map(int,input().split())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\nC = list(map(int,input().split()))\n\n# \u305d\u306e\u30af\u30a8\u30ea\u306b\u95a2\u3057\u3066\u3001\u6587\u5b57\u5217\u3092\u4f5c\u308b\u3068\u304d\u306bN-1\u306e\u3068\u304d\u306bX\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bY\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bZ\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bY\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bZ\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bY\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bZ\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bY\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bY\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bZ\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bY\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bY\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bZ\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bY\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bY\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bZ\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bY\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bZ\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bY\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bZ\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306bY\u500b\u6570\u5b57+1\u306e\u3068\u304d\u306b\u306a\u3089\u306a\u3044\u306e\u304b\u3001\u3042\u308a\u304c\u3068\u3046\u307e\u3044\u3088\u3046\u306b\u306a\u3089\u306a\u3044\u306e\u304b\u3001\u3053\u3053\u307e\u3067\u306b\u3057\u306a\u3044\u306e\u304b\u3001\u305d\u308c\u4ee5\u5916\u306e\u3082\u3046\u308f\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\uff7a\ufffd"}, "402": {"problem_id": 4402, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    a, b = int(readline().rstrip('\\n'))\n    print(a, b)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "403": {"problem_id": 4403, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort as ir, insort_left as i, insort_right as i, insort_left_right as l, min_left_right_left_left as r, max_left_right_left_left_right_left_right_right_left as r\n\nsys.setrecursionlimit(10**7)\nINF = 10**9+7\nmod = 10**7+7\ninf = float('inf')\neps = 1.0/(inf+7)\n#print(INF,mod)\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef LI_(): return list(map(int,sys.stdin.readline().split()))\ndef LF(): return list(map(float,sys.stdin.readline().split()))\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef I_(): return input()\ndef L_(): return list(input())\ndef S_(): return input()\ndef L_(): return input()\ndef S_(): return input()\ninput()[1] = '+-'\n#print(I)\n#print(LI_())\n"}, "404": {"problem_id": 4404, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    s = input()\n    if s[0] == '04/30':\n        print(1)\n    elif s[0] == '04/30-':\n        print(2)\n    elif s[0] == '04/30--':\n        print(3)\n    elif s[0] == '04/30--':\n        print(4)\n    else:\n        print(5)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "405": {"problem_id": 4405, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint(max(a))"}, "406": {"problem_id": 4406, "answer": "n, k = map(int, input().split())\nids = list(map(int, input().split()))\n\ndef count(l):\n    if l == 0:\n        return 1\n    else:\n        return sum(map(id, l))\n\ndef is_convertible(l):\n    if l == 0:\n        return True\n    else:\n        return False\n\ndef __starting_point():\n    n, k = map(int, input().split())\n    l = list(map(int, input().split()))\n    idx = list(map(int, input().split()))\n    print(count(l))\n__starting_point()"}, "407": {"problem_id": 4407, "answer": "n,q=list(map(int,input().split()))\na=list(map(int,input().split()))\nfor i in range(q):\n    b=int(input())\n    if b%2==0:\n        print(a[b])\n    else:\n        print(b//2)\n"}, "408": {"problem_id": 4408, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\nfor i in range(k):\n    s += a[i]\nprint(s)\n"}, "409": {"problem_id": 4409, "answer": "from itertools import accumulate\nn = int(input())\na = list(map(int, input().split()))\nl = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint(len(l))\nfor i in range(n-1, -1, -1):\n    print(l[i], end=' ')\n"}, "410": {"problem_id": 4410, "answer": "def main():\n    t = int(input())\n    for _ in range(t):\n        n, k = list(map(int, input().split()))\n        s = input()\n        print(n-k)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "411": {"problem_id": 4411, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\nL = [None] * (n + 1)\nR = [None] * (n + 1)\n\nfor i in range(n):\n    L[i] = int(input())\n    R[i] = int(input())\n\n# \u5982\u679c\u6700\u5c0f\u4e8e\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5224\u65ad\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u540e\u9762\u51fa\u6765\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\u6587\u5b57\u3002\n# \u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f1a\u6267\u884c\ufffd"}, "412": {"problem_id": 4412, "answer": "from collections import defaultdict\ndef __starting_point():\n    q = int(input())\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max(a) % 3)\n\n__starting_point()"}, "413": {"problem_id": 4413, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    l = 0\n    for i in range(n):\n        if a[i] - a[i-1] == 1:\n            l += 1\n        else:\n            break\n    print(l)"}, "414": {"problem_id": 4414, "answer": "for _ in range(int(input())):\n    a, b, n, s = map(int, input().split())\n    if n == 1:\n        print(\"YES\")\n    else:\n        if s == b:\n            print(\"YES\")\n        else:\n            print(\"NO\")"}, "415": {"problem_id": 4415, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[a[i]] = i\n        a.append(a[i])\n    print('NO')\ndef __starting_point():\n    main()\n__starting_point()"}, "416": {"problem_id": 4416, "answer": "from sys import stdin\ninput = lambda: stdin.readline().strip()\nn,k = list(map(int,input().split()))\nl = list(map(int,input().split()))\nl.sort()\na = [0]*(n+1)\nb = [0]*(n+1)\nfor i in range(1,n+1):\n    if l[i]==1:\n        a[i] = 1\n    else:\n        a[i] = 0\n        b[i] = 1\n        break\nprint(a[n])\nfor i in range(n):\n    for j in range(n):\n        if l[i]==1:\n            a[i] = 1\n        else:\n            a[i] = 0\n            b[i] = 1\n            break\nprint(b[n])"}, "417": {"problem_id": 4417, "answer": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nfor _ in range(Q):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(max(a, b))\n"}, "418": {"problem_id": 4418, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef remove(arr, n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return arr[0]\n    else:\n        for i in range(n - 1):\n            if arr[i] % 6 == 0:\n                arr[i] -= 1\n                if arr[i] % 6 == 1:\n                    arr[i] -= 1\n                    if arr[i] % 6 == 2:\n                        arr[i] -= 1\n                        if arr[i] % 6 == 3:\n                            arr[i] -= 1\n                            if arr[i] % 6 == 4:\n                                arr[i] -= 1\n                                break\n                    else:\n                        arr[i] += 1\n                else:\n                    arr[i] += 1\n        return len(arr)\n\nprint(remove(a, n))"}, "419": {"problem_id": 4419, "answer": "for _ in range(int(input())):\n    a, b = map(int, input().split())\n    if a == b:\n        print(2)\n    else:\n        print(a + b)"}, "420": {"problem_id": 4420, "answer": "for _ in range(int(input())):\n    x, y, n = map(int, input().split())\n    if x % y == 0:\n        print(y)\n    else:\n        k = 0\n        for i in range(n):\n            if x % i == 0:\n                k += int(i)\n            else:\n                k -= int(i)\n        print(k)"}, "421": {"problem_id": 4421, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k = list(map(int,input().split()))\nd = list(map(int,input().split()))\n\ndef divisor(x,y):\n    if x == y:\n        return 1\n    else:\n        return 0\n\n# \u533a\u9593\u6700\u5c0f\u306e\u8981\u7d20\u6570\n# \u4ee5\u4e0b\u3060\u3051\u3092\u4f5c\u308c\u308b\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n# \u4f4d\u7f6e: x,y\n"}, "422": {"problem_id": 4422, "answer": "def main():\n N, K = list(map(int, input().split()))\n s = list()\n for i in range(N):\n  s.append(chr(ord('A')+i))\n print(s)\n\ndef __starting_point():\n main()\n__starting_point()"}, "423": {"problem_id": 4423, "answer": "n = int(input())\ns = list(input())\nd = dict(list(s.count(0)))\nfor i in range(n):\n    d[s[i]] = i\nprint(d.get(s[n-1], 0))"}, "424": {"problem_id": 4424, "answer": "def main():\n    import sys\n    sys.setrecursionlimit(10**7)\n    input = sys.stdin.readline\n\n    # sys.stdin = open('input.txt', 'r')\n    # sys.stdout = open('output.txt', 'w')\n\n    # sys.stdin = open('input.txt', 'r')\n    # sys.stdout = open('output.txt', 'w')\n\n    # sys.stdin = stdin.buffer.readline\n    # sys.stdout = stdout.buffer.write\n\n    # sys.stdout_only = True\n    # sys.stdin = stdin.buffer.stdin\n    # sys.stdout = stdin.buffer.stdout\n\n    # sys.stdout = stderr.join(input())\n    # sys.stdout = stderr.join('\\n'.join(map(str, input().split())))\n\n    return\n\ndef __starting_point():\n    main()\n__starting_point()"}, "425": {"problem_id": 4425, "answer": "from math import ceil\nN, K = list(map(int, input().split()))\ncnt = 0\nfor i in range(N):\n    if i == K:\n        cnt += 1\n    else:\n        if cnt > ceil(K/N):\n            K = N - i\n        elif cnt == K:\n            print(cnt)\n            return\n        else:\n            cnt = 0\n            K = N - i\n            if K == 0:\n                print(cnt)\n                return\n            else:\n                cnt = 0\n                K = N - i\n                if K == 0:\n                    print(cnt)\n                    return\n                else:\n                    cnt = 0\n                    K = N - i\n                    if K == 0:\n                        print(cnt)\n                        return\n                    else:\n                        cnt = 0\n                        K = N - i\n                        if K == 0:\n                            print(cnt)\n                            return\n                        else:\n                            cnt = 0\n                            K = N - i\n                            if K == 0:\n                                print(cnt)\n                                return\n                            else:\n                                cnt = 0\n                                K = N - i\n                                if K == 0:\n           "}, "426": {"problem_id": 4426, "answer": "# cook your dish here\ns = input()\nfor i in range(0,len(s)):\n    if s[i]==\"S\":\n        print(1)\n    else:\n        print(0)\n"}, "427": {"problem_id": 4427, "answer": "# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\n\nr,d,x = map(int,readline().split())\nd = list(map(int,readline().split()))\nx.sort()\nfor i in range(0,len(x)):\n    if x[i]%d == 0:\n        print(i+1)\n    else:\n        print(i+1)\n"}, "428": {"problem_id": 4428, "answer": "n = int(input())\nd = list(map(int, input().split()))\n\nfor i in range(n):\n    a = int(input())\n    d.append(a)\n    if a == 0:\n        print(0)\n    else:\n        ans = 0\n        for j in range(len(d)):\n            if d[j] == 0:\n                ans += 1\n            elif d[j] > 0:\n                ans += 1\n        print(ans)\n"}, "429": {"problem_id": 4429, "answer": "for _ in range(int(input())):\n    x, y, z = map(int, input().split())\n    if x > y:\n        print(\"NO\")\n    elif y > z:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "430": {"problem_id": 4430, "answer": "from collections import deque\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = deque()\nc.append(0)\nc.append(1)\nc.append(2)\nc.append(3)\nc.append(4)\nc.append(5)\nc.append(6)\nc.append(7)\nc.append(8)\nc.append(9)\nc.append(10)\nc.append(11)\nc.append(12)\nc.append(13)\nc.append(14)\nc.append(15)\nc.append(16)\nc.append(17)\nc.append(18)\nc.append(19)\nc.append(20)\nc.append(21)\nc.append(22)\nc.append(23)\nc.append(24)\nc.append(25)\nc.append(26)\nc.append(27)\nc.append(28)\nc.append(29)\nc.append(30)\nc.append(31)\nc.append(32)\nc.append(33)\nc.append(34)\nc.append(35)\nc.append(36)\nc.append(37)\nc.append(38)\nc.append(39)\nc.append(40)\nc.append(40)\nc.append(41)\nc.append(42)\nc.append(43)\nc.append(44)\nc.append(45)\nc.append(45)\nc.append(46)\nc.append(47)\nc.append(48)\nc.append(49)\nc.append(50)\nc.append(51)\nc.append(52)\nc.append(53)\nc.append(54)\nc.append(54)\nc.append(55)\nc.append(56)\nc.append(57)\nc.append(58)\nc.append(59)\nc.append(60)\nc.append(61)\nc.append(62)\nc.append(63)\nc.append(64)\nc.append(65)\nc.append(66)\nc.append(67)\nc.append(68)\nc.append(69)\nc.append(70)\nc.append(71)\nc.append(72)\nc.append(73)\nc.append(74)\nc.append(75)\nc.append(76)\nc.append(77)\nc.append(78)\nc.append(79)\nc.append(80)\nc.append(81)\nc.append(82)\nc.append(83)\nc.append(84)\nc.append(85)\nc.append(86)\nc.append(87)\nc.append(88)\nc.append(89)\nc.append(90)\nc.append(91)\nc.append(92)\nc.append(93)\nc.append(94)\nc.append(95)\nc.append(96)\nc.append(97)\nc.append(98)\nc.append(99)\nc.append(100)\nc.append(101)\nc.append(102)\nc.append(103)\nc.append(104)\nc.append(105)\nc.append(106)\nc.append(107)\nc.append(108)\nc.append(109)\nc.append(106)\nc.append(107)\nc.append(108)\nc.append(108)\nc.append(108)\nc.append(109)\nc.append(110)\nc.append(111)\nc.append(112)\nc.append(113)\nc.append(114)\nc.append(115)\nc.append(116)\nc.append(127)\nc.append(814)\nc.append(815)\nc.append(816)\nc.append(817)\nc.append(818)\nc.append(819)\nc.append(820)\nc.append(821)\nc.append(822)\nc.append(823)\n"}, "431": {"problem_id": 4431, "answer": "from sys import stdin,stdout\nfrom bisect import bisect_left as bl, bisect_right as br, insort\nfrom collections import defaultdict as dd, deque\nfrom itertools import combinations as comb,permutations as perm,groupby to_key,accumulate\nfrom operator import itemgetter\nfrom heapq import heappush,heappop,heapify\nfrom functools import reduce,cmp_to_key\nfrom re import sub,substr,maketrans,str,enumerate,itemgetter,getitem\nfrom heapq import merge,heappush,heapify,heappushpop,heapifypop,heapifymerge,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop,heapifymergepop)\nfrom collections import deque,set,copy,Counter,repr,itemgetter,getitem\nfrom heapq import heap,heappush,heapify,heappop,heapify,heaprot,heapxor,heapxorpop,heapxtremain,heapremainpop,heapxtremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop,heapxremainpop)\nfrom collections import deque,set,collections,random,random_rand,inf,mod,mod_wentiv,mod_pow,\u9699\u7b26\u6570,sys_get_datetime,sys_get_compftime,sys_get_stat,getattr,getpagespeed,getpprober,getroot,getuid,getuid4,getFFFF,getPRcienti,getrlimit,get\u03c4,totaldata,gettime,gettimeizarre,getcomputing,getcomputingcap,gethton,gethost,gethostgmp,getpass,getvery,getverylate,getreg,getregq,getregr,getregs,getlat,getlatlong,getlonglong,getlatin,getlon,getrad,getrusk,getxeynumeric,get"}, "432": {"problem_id": 4432, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(max(a[0], a[1]))"}, "433": {"problem_id": 4433, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nedges = []\nfor _ in range(m):\n    v, u = map(int, input().split())\n    edges.append([v, u])\n    if len(edges) == 0:\n        continue\n    edges.sort(key=lambda x: x[0])\n    vertices = []\n    for i in range(1, len(edges)):\n        if vertices and edges[i][0] == vertices[0]:\n            vertices.append(i)\n        else:\n            edges[i][1] = vertices[0]\n            vertices.append(i)\n    vertices.sort()\n    edges.sort(key=lambda x: x[0])\n    for i in range(len(edges) - 1):\n        if vertices and edges[i][0] == vertices[0]:\n            edges[i][1] = vertices[0]\n            vertices.append(i)\n        elif vertices and edges[i][0] == vertices[0]:\n            edges[i][1] = vertices[0]\n            vertices.append(i)\n        elif vertices and edges[i][0] == vertices[0]:\n            edges[i][1] = vertices[0]\n            vertices.append(i)\n        else:\n            edges[i][1] = vertices[0]\n            vertices.append(i)\n            edges[i][1] = vertices[0]\n            vertices.append(i)\n            edges[i][1] = vertices[0]\n            vertices.extend(edges[i])\n            vertices.extend(edges[i])\n            vertices.extend(edges[i])\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n          "}, "434": {"problem_id": 4434, "answer": "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        print(n)\n    else:\n        print(n**2)\n"}, "435": {"problem_id": 4435, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0]*n\nfor i in range(n):\n    if l[i]%2 == 0:\n        l[i] = min(l[i], l[i-1] + a[i])\n    else:\n        l[i] = min(l[i], l[i-1] + a[i])\nprint(' '.join(map(str, l)))"}, "436": {"problem_id": 4436, "answer": "for _ in range(int(input())):\n    n = int(input())\n    if n%2 == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n"}, "437": {"problem_id": 4437, "answer": "def main():\n    n = int(input())\n    s = input()\n    s.insert(0, 'a')\n    s.insert(0, 'b')\n    print(main())\n\ndef __starting_point():\n    main()\n__starting_point()"}, "438": {"problem_id": 4438, "answer": "from math import *\nN = int(input())\nfor i in range(N):\n    x, y = map(int, input().split())\n    if x == y:\n        print(0)\n    elif x%2 == 0:\n        print(x//2)\n    else:\n        print(x//2+1)"}, "439": {"problem_id": 4439, "answer": "from collections import deque\nclass Factorial:\n    def __init__(self, n):\n        self.n = n\n        self.fact = [1] * n\n        self.l = [1] * n\n        self.r = [1] * n\n        self.c = [1] * n\n        self.s = [1] * n\n        self.t = [1] * n\n        self.p = [1] * n\n        self.q = [1] * n\n        self.rq = [1] * n\n        self.cq = [1] * n\n        self.sq = [1] * n\n        self.tq = [1] * n\n        self.pq = [1] * n\n        self.qq = [1] * n\n        self.rqq = [1] * n\n        self.cqq = [1] * n\n        self.sqq = [1] * n\n        self.tqq = [1] * n\n        self.pqq = [1] * n\n        self.qqq = [1] * n\n        self.rqqq = [1] * n\n        self.cqqq = [1] * n\n        self.sqqq = [1] * n\n        self.tqqq = [1] * n\n        self.pqqq = [1] * n\n        self.qqqq = [1] * n\n        self.rqqqq = [1] * n\n        self.cqqqq = [1] * n\n        self.sqqqq = [1] * n\n        self.tqqqq = [1] * n\n        self.pqqqq = [1] * n\n        self.qqqqq = [1] * n\n        self.rqqqq = [1] * n\n        self.cqqqq = [1] * n\n        self.sqqqq = [1] * n\n        self.tqqqq = [1] * n\n        self.pqqqq = [1] * n\n        self.qqqqq = [1] * n\n        self.rqqqq = [1] * n\n        self.cqqqq = [1] * n\n        self.sqqqq = [1] * n\n        self.tqqqq = [1] * n\n        self.pqqqq = [1] * n\n        self.qqqqq = [1] * n\n        self.rqqqq = [1] * n\n        self.cqqqq = [1] * n\n        self.sqqqq = [1] * n\n        self.tqqqq = [1] * n\n        self.pqqqq = [1] * n\n        self.qqqqq = [1] * n\n     "}, "440": {"problem_id": 4440, "answer": "import math\n\ndef max_v(x, y):\n    return math.sqrt(x*x + y*y)\n\ndef main():\n    \"\"\"\n    :type x: int\n    :type y: int\n    :rtype: int\n    \"\"\"\n    L = int(math.sqrt(x) + int(y))\n    print(max_v(x, y))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "441": {"problem_id": 4441, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(a[0], b[0])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "442": {"problem_id": 4442, "answer": "def __starting_point():\n    #Main program.\n    a, b = list(map(int, input().split()))\n    print(a - 1)\n\n__starting_point()"}, "443": {"problem_id": 4443, "answer": "# cook your dish here\ndef recur(s):\n    return ''.join(s[i] for i in range(len(s)))\n\ndef recur(s):\n    return ''.join(s[i] for i in range(len(s)))\n\n\nprint(recur(0))\n"}, "444": {"problem_id": 4444, "answer": "S,T = list(map(int,input().split()))\nprint(' '.join(map(str,S)))"}, "445": {"problem_id": 4445, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = len(a)\nfor i in range(l):\n    if a[i] < l:\n        print(i)\n    else:\n        print(sum(a[i]))\n"}, "446": {"problem_id": 4446, "answer": "from math import ceil\nn, a, b, k = map(int, input().split())\nh = list(map(int, input().split()))\nh.sort()\ni = 0\nwhile i < n:\n    if h[i] == b:\n        i += 1\n    else:\n        print(i)\n        break\n    elif h[i] == a:\n        i += 1\n    else:\n        print(i)\n        break\n    i += 1\n\nmaxi = max(maxi, i)\nfor i in range(n):\n    if h[i] == b:\n        maxi = max(maxi, i)\n        break\n    elif h[i] == a:\n        maxi = max(maxi, i)\n        break\n    elif h[i] == b:\n        maxi = max(maxi, i)\n        break\n    i += 1\nprint(maxi)"}, "447": {"problem_id": 4447, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef divisor(x, y):\n    if x % y == 0:\n        return 1\n    else:\n        return 0\n\nfor i in range(n-1, -1, -1):\n    x, y = divisor(a[i], a[i+1])\n    print(x)\n    print(y)\n"}, "448": {"problem_id": 4448, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nk = list(map(int, input().split()))\n\ndef calc(k, start):\n    if start == 0:\n        return 0\n    elif k[start] == 0:\n        return 2\n    else:\n        return 1\n\nans = 0\nfor i in range(m):\n    ans += calc(k, i)\n    k.pop(i)\n\nprint(ans)\n"}, "449": {"problem_id": 4449, "answer": "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(4):\n        if a[i]*a[i-1] < math.sqrt(b[i])*b[i]:\n            ans += b[i]*a[i]\n    print(ans)"}, "450": {"problem_id": 4450, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\ngraph = [[] for _ in range(n)]\nedges = [[] for _ in range(m)]\nfor _ in range(k):\n    x, y, w = list(map(int, input().split()))\n    edges[x].append(y)\n    edges[y].append(x)\n    edges[x].append(w)\n    edges[w].append(x)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n    edges[w].append(w)\n  "}, "451": {"problem_id": 4451, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\n\nfor i in range(n):\n    A.append(list(map(int, input().split())))\n\nprint(3, '\\n'.join(A))"}, "452": {"problem_id": 4452, "answer": "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n"}, "453": {"problem_id": 4453, "answer": "from collections import deque\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    a = [0]*n\n    for i in range(n):\n        a[i] = 1\n        p[i] = set([a[i] for i in range(n)])\n    print(len(p))"}, "454": {"problem_id": 4454, "answer": "from math import ceil\n\ndef solve(n, a):\n    if n == 1:\n        return a\n    elif n == 2:\n        return ceil(sum(a) / 2)\n    else:\n        ans = 0\n        for i in range(1, n + 1):\n            ans += a[i]\n        return ans\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))"}, "455": {"problem_id": 4455, "answer": "from sys import stdin,stdout\nn,k = list(map(int,stdin.readline().split()))\nl = list(map(int,stdin.readline().split()))\nfor i in range(k):\n    l.append(list(map(int,stdin.readline().split())))\nprint(' '.join(l))"}, "456": {"problem_id": 4456, "answer": "n, k = list(map(int, input().split()))\ns = input()\nq = list(map(int, input().split()))\n\nfor i in range(k):\n    s = s.replace('a', 'b')\n    q.insert(0, s)\n    q.pop()\n    q.append(i)\n\nprint('YES' if s.count('a') == len(q) else 'NO')\n"}, "457": {"problem_id": 4457, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nfor _ in range(n):\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        if a[i] <= c:\n            c += 1\n        else:\n            break\n    print(c)\n"}, "458": {"problem_id": 4458, "answer": "def main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if p[i] > p[i-1]:\n            ans += 1\n        else:\n            break\n    print(ans)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "459": {"problem_id": 4459, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\na = list(map(int, input().split()))\n\n# \u5176dom\u7684\u6570\u636e\u5e94\u8be5\u957f\u5ea6\uff0c\u521d\u59cb\u503c\u4e3a\u4e00\u4e2a\u6700\u5927\u503c\uff0c\u540c\u65e5\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u4e2a\u6570\u7ec4\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u51fa\u73b0\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u957f\u5ea6\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0\u7ed3\u679c\ndef remove(x):\n    if x == 0:\n        return x\n    else:\n        x = x - 1\n        return x\n\n# \u5982\u679c\u6709\u591a\u5c11\u4e2a\u6570\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5982\u679c\u4e0d\u80fd\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5982\u679c\u4e0d\u80fd\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5982\u679c\u4e0d\u80fd\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5982\u679c\u4e0d\u80fd\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5982\u679c\u4e0d\u80fd\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219"}, "460": {"problem_id": 4460, "answer": "def main():\n    x = list(map(int, input().split()))\n    for i in range(5):\n        x[i] = 0\n    print(i)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "461": {"problem_id": 4461, "answer": "def solve(H, W, W):\n    if W == 0:\n        return 0\n    elif W == 1:\n        return W - 1\n    else:\n        res = 0\n        for i in range(W):\n            res += W * i\n        return res\n\nH, W = map(int, input().split())\nprint(solve(H, W, W))"}, "462": {"problem_id": 4462, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\n\ndef solve(a, b):\n    if b == 0:\n        return True\n    else:\n        return False\n\nsolve(a, b)\nprint(\"Yes\")\n"}, "463": {"problem_id": 4463, "answer": "from collections import deque\ns = input()\nt = input()\nxx = deque([])\nyy = deque([])\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        xx.pop()\n    else:\n        yy.pop()\nif xx.size() == yy.size():\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "464": {"problem_id": 4464, "answer": "import math\ndef sum(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return sum(i for i in range(1, math.floor(math.sqrt(n)) + 1) if n % i == 0)\n    else:\n        return 0\n\nn = int(input())\na, b = map(int, input().split())\nprint(sum(a) % b)"}, "465": {"problem_id": 4465, "answer": "# coding: utf-8\n# Your code here!\nimport sys\nread = read.decode  # octr in place of codecs\nreadline = readline.encode  # octr in place of codecs\n\ndef readline():\n    return list(map(int, readline().split()))\n\ndef readline(n):\n    return [n] + [int(i) for i in range(n)]\n\ndef main():\n    n = readline(n)\n    area = 0\n    for i in range(n):\n        area += n * (n - i)\n    print(area)\n\nmain()\n"}, "466": {"problem_id": 4466, "answer": "def main():\n    X, Y, Z = list(map(int, input().split()))\n    l = []\n    for i in range(X, Y+2Z):\n        l.append(int(input()))\n    l.sort()\n    print(sum(l))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "467": {"problem_id": 4467, "answer": "from collections import defaultdict\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = defaultdict(list)\nd = defaultdict(list)\nfor i in range(n):\n    a[i] = min(a[i], b[i])\n    b[i] = min(c[i], d[i])\nprint(max(0, n - 1) + 1)"}, "468": {"problem_id": 4468, "answer": "import sys\ninput = sys.stdin.readline\n\nN, T = map(int, input().split())\n\ndef rec(x):\n    if x == 0:\n        return 1\n    elif x == 1:\n        return 2\n    else:\n        return 3\n\ndef main():\n    n, t = rec(0)\n    print(t)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "469": {"problem_id": 4469, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nq = int(input())\nfor _ in range(q):\n    l, r = list(map(int, input().split()))\n    l -= 1\n    r -= 1\n    if l == 0:\n        print(0)\n    elif r == 0:\n        print(1)\n    else:\n        ans = 0\n        for i in range(l, r):\n            if l % i == 0:\n                ans += 1\n                l //= i\n        print(ans)\n"}, "470": {"problem_id": 4470, "answer": "import math\ndef __starting_point():\n    q = int(input())\n    while q:\n        n = int(input())\n        print(math.floor(math.sqrt(n)))\n__starting_point()"}, "471": {"problem_id": 4471, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print('YES' if a[0] == b[0] else 'NO')"}, "472": {"problem_id": 4472, "answer": "n = int(input())\na = input()\nb = input()\n\nif n % 2 == 0:\n    print(0)\nelif n % 2 == 1:\n    print(n // 2)\nelse:\n    print(n // 2 + 1)\n"}, "473": {"problem_id": 4473, "answer": "for _ in range(int(input())):\n    a, b, k = map(int, input().split())\n    x = 0\n    for i in range(k):\n        a += b\n        x += a\n    print(x)"}, "474": {"problem_id": 4474, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    d = {}\n    for i in range(n):\n        d[i] = list(map(int, input().split()))\n    print(d.get(0, 0))\n\ndef __starting_point():\n    solve()\n\n__starting_point()"}, "475": {"problem_id": 4475, "answer": "for _ in range(int(input())):\n    a, b, x, y, n = list(map(int, input().split()))\n    print(min(a, b, x, y, n))\n"}, "476": {"problem_id": 4476, "answer": "for _ in range(int(input())):\n    a,b = map(int,input().split())\n    if a%2==0:\n        print(b)\n    else:\n        print(a+b)"}, "477": {"problem_id": 4477, "answer": "for i in range(int(input())):\n    x = int(input())\n    print(sum(map(int, input().split())))\n"}, "478": {"problem_id": 4478, "answer": "def main():\n    k = int(input())\n    l = list(map(int, input().split()))\n    n = len(l)\n    ans = 0\n    for i in range(n-1):\n        if l[i] == 0:\n            ans += i\n        else:\n            print('YES')\n            break\n    if ans == 0:\n        print('NO')\n    else:\n        print('YES')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "479": {"problem_id": 4479, "answer": "class Solution:\n    def largestSumAfterKNegations(self, A: List[int], K: int) -> int:\n        dp = [0] * (len(A) + 1)\n        for i in range(len(A)):\n            dp[i] = max(dp[i - 1], A[i])\n            \n        return dp[-1]"}, "480": {"problem_id": 4480, "answer": "class Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        dp = [0] * (len(A) + 1)\n        for i in range(len(A)):\n            dp[i] = A[i]\n            for j in range(i+1, len(A)):\n                if (A[i] + A[j] == A[j] + A[i]) % 2 == 0:\n                    dp[i] = max(dp[i], dp[j] + 1)\n                elif (A[i] + A[j] == A[j] + A[i]) % 2 == 0:\n                    dp[i] = max(dp[i], dp[j] + 1)\n                elif (A[i] + A[j] == A[j] + A[i]) % 2 == 0:\n                    dp[i] = max(dp[i], dp[j] + 1)\n                else:\n                    return False\n        return True"}, "481": {"problem_id": 4481, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nS = list(map(int, input().split()))\n\ndef inpl(): return list(map(int, input().split()))\ndef inpl2(): return list(map(int, input().split()))\ndef inpl3(): return list(map(int, input().split()))\ndef inpl4(): return list(map(int, input().split()))\n\n# \u51e6\u7406\u3057\u305f\u3068\u304d\ndef main():\n    s = input()\n    s = s.split()\n    print(s[0])\n    for i in range(1, len(s)):\n        print(s[i-1])\n\nmain()"}, "482": {"problem_id": 4482, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    print(sum(a)**2)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "483": {"problem_id": 4483, "answer": "# coding: utf-8\n# Your code here!\nimport math\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(math.gcd(a[0], b[0]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "484": {"problem_id": 4484, "answer": "MOD = 10**9+7\ndef chk(n,m):\n if n == 0:\n  return 1\n elif m == 0:\n  return 0\n else:\n  return int(chk(n-m,m))%MOD\n\nn,m = map(int,input().split())\narr = []\nfor i in range(n):\n arr.append(chk(i,MOD))\n\nprint(len(arr))"}, "485": {"problem_id": 4485, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n, m = map(int, readline().split())\n    if n == 1:\n        return\n    elif m == 1:\n        return\n    elif m == 2:\n        return\n    elif m == 3:\n        return\n    elif m == 4:\n        return\n    elif m == 5:\n        return\n    elif m == 6:\n        return\n    elif m == 7:\n        return\n    elif m == 8:\n        return\n    elif m == 9:\n        return\n    elif m == 10:\n        return\n    elif m == 11:\n        return\n    elif m == 12:\n        return\n    elif m == 13:\n        return\n    elif m == 14:\n        return\n    elif m == 15:\n        return\n    elif m == 16:\n        return\n    elif m == 17:\n        return\n    elif m == 18:\n        return\n    elif m == 19:\n        return\n    elif m == 20:\n        return\n    elif m == 21:\n        return\n    elif m == 22:\n        return\n    elif m == 23:\n        return\n    elif m == 24:\n        return\n    elif m == 25:\n        return\n    elif m == 26:\n        return\n    elif m == 27:\n        return\n    elif m == 28:\n        return\n    elif m == 29:\n        return\n    elif m == 30:\n        return\n    elif m == 31:\n        return\n    elif m == 32:\n        return\n    elif m == 33:\n        return\n    elif m == 34:\n        return\n    elif m == 35:\n        return\n    elif m == 36:\n        return\n    elif m == 37:\n        return\n    elif m == 38:\n        return\n    elif m == 39:\n        return\n    elif m == 40:\n        return\n    elif m == 41:\n        return\n    elif m == 42:\n        return\n    elif m == 43:\n        return\n    elif m == 44:\n        return\n    elif m == 45:\n        return\n    elif m == 46:\n        return\n    elif m == 47:\n        return\n    elif m == 48:\n        return\n    elif m == 49:\n        return\n    elif m == 50:\n        return\n    elif m == 51:\n        return\n "}, "486": {"problem_id": 4486, "answer": "from sys import stdin,stdout\ns = stdin.readline().strip()\nn = len(s)\nfor i in range(n):\n    if s[i]!=\"1\":\n        s[i] = s[i] + \"0\"\n    else:\n        s[i] = s[i] + \"1\"\nprint(s)"}, "487": {"problem_id": 4487, "answer": "def is_ok(s):\n    return s.endswith('A' or 'YES')\n\ndef is_not_ok(s):\n    return s.isalnum()\n\ndef __starting_point():\n    A, B, C = map(int, input().split())\n    print(\"YES\")\n__starting_point()"}, "488": {"problem_id": 4488, "answer": "def main():\n a,b=map(int,input().split())\n if a==b:\n  print(\"GREATER\")\n else:\n  print(\"LESS\")\n\ndef __starting_point():\n main()\n__starting_point()"}, "489": {"problem_id": 4489, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\ns = list(map(int, input().split()))\nt = list(map(int, input().split()))\n\ndef find(x):\n    if x == t:\n        return x\n    elif x == 0:\n        return find(t[x-1])\n    else:\n        return find(t[x-1])\n\ndef main():\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    print(find(s[1:]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "490": {"problem_id": 4490, "answer": "def main():\n    a, b = list(map(int, input().split()))\n    print(a)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "491": {"problem_id": 4491, "answer": "from collections import deque\nN = int(input())\nA = list(map(int, input().split()))\ndef dijkstra(s, n, d):\n    if d[s] == 0:\n        return 0\n    else:\n        s = s - d[s]\n        d[s] = 0\n        for i in range(n):\n            if s == d[s]:\n                d[s] = 1\n                continue\n            elif d[s] == 0:\n                d[s] = 0\n                continue\n            else:\n                d[s] = max(d[s], d[s] + 1)\n        return d[s]\n\nprint(sum(dijkstra(s, N, d)) // 2)"}, "492": {"problem_id": 4492, "answer": "from collections import Counter\nN, x = map(int, input().split())\nc = Counter(map(int, input().split()))\nd = []\nfor i in range(N):\n    d.append(c[i])\nprint(max(d))"}, "493": {"problem_id": 4493, "answer": "def main():\n    c, n = list(map(int, input().split()))\n    for i in range(n):\n        print(c[i], end=\" \")\n        c.pop(i)\n    if c[0] == 1:\n        print(\"Yes\")\n    else:\n        print(\"No\")\ndef __starting_point():\n    main()\n__starting_point()"}, "494": {"problem_id": 4494, "answer": "def __starting_point():\n    s = input()\n    a = list(s)\n    b = list(s)\n    print(a.count('ARC'))\n\n__starting_point()"}, "495": {"problem_id": 4495, "answer": "# -*- coding: utf-8 -*-\n\nimport math\nclass SegmentTree:\n    def __init__(self, n):\n        self.n = n\n        self.left = [0]*(self.n+1)\n        self.right = [0]*(self.n+1)\n        self.cnt = [0]*(self.n+1)\n        self.cnt[0] = 1\n        self.cnt[1] = 1\n        self.cnt[2] = 1\n        self.cnt[3] = 1\n        self.cnt[4] = 1\n        self.cnt[5] = 1\n        self.cnt[6] = 1\n        self.cnt[7] = 1\n        self.cnt[8] = 1\n        self.cnt[9] = 1\n        self.cnt[10] = 1\n        self.cnt[11] = 1\n        self.cnt[12] = 1\n        self.cnt[13] = 1\n        self.cnt[14] = 1\n        self.cnt[15] = 1\n        self.cnt[16] = 1\n        self.cnt[17] = 1\n        self.cnt[18] = 1\n        self.cnt[19] = 1\n        self.cnt[20] = 1\n        self.cnt[21] = 1\n        self.cnt[22] = 1\n        self.cnt[23] = 1\n        self.cnt[24] = 1\n        self.cnt[25] = 1\n        self.cnt[26] = 1\n        self.cnt[27] = 1\n        self.cnt[28] = 1\n        self.cnt[29] = 1\n        self.cnt[30] = 1\n        self.cnt[31] = 1\n        self.cnt[32] = 1\n        self.cnt[33] = 1\n        self.cnt[34] = 1\n        self.cnt[35] = 1\n        self.cnt[36] = 1\n        self.cnt[37] = 1\n        self.cnt[38] = 1\n        self.cnt[39] = 1\n        self.cnt[40] = 1\n        self.cnt[41] = 1\n        self.cnt[42] = 1\n        self.cnt[43] = 1\n        self.cnt[44] = 1\n        self.cnt[45] = 1\n        self.cnt[46] = 1\n        self.cnt[47] = 1\n        self.cnt[48] = 1\n        self.cnt[49] = 1\n        self.cnt[50] = 1\n        self.cnt[51] = 1\n        self.cnt[52] = 1\n   "}, "496": {"problem_id": 4496, "answer": "def main():\n    D = int(input())\n    for i in range(D):\n        print(\" \".join(map(str, input())))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "497": {"problem_id": 4497, "answer": "def main():\n    N = int(input())\n    d = {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0}\n    for i in range(N):\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    print(d.get(N, 0))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "498": {"problem_id": 4498, "answer": "# cook your dish here\nfrom sys import stdin,stdout\ndef main():\n    a,b,c=list(map(int,stdin.readline().split()))\n    d=int(c)\n    print(\"Yes\")\n    if a==b==c:\n        print(\"Yes\")\n    elif a==d:\n        print(\"Yes\")\n    else:\n        print(\"No\")\ndef __starting_point():\n    main()\n__starting_point()"}, "499": {"problem_id": 4499, "answer": "s = input()\ndef is_alphabet(s):\n    return len(set(s)) == len(s)\n\ns = input()\ndef dfs(s, start=0):\n    if start == 0:\n        return s\n    elif s[start] == 'c':\n        return dfs(s[start:], start + 1)\n    else:\n        return dfs(s[start:], s[start + 1:])\n\ns = input()\ndef dfs(s, start=0):\n    if start == 0:\n        return s\n    elif s[start] == 'c':\n        return dfs(s[start:], start + 1)\n    else:\n        return dfs(s[start:], s[start + 1:])\n\ns = input()\ndef dfs(s, start=0):\n    if start == 0:\n        return s\n    elif s[start] == 'c':\n        return dfs(s[start:], start + 1)\n    else:\n        return dfs(s[start:], s[start + 1:])\n\ns = input()\ndef dfs(s, start=0):\n    if start == 0:\n        return s\n    elif s[start] == 'c':\n        return dfs(s[start:], start + 1)\n    else:\n        return dfs(s[start:], s[start + 1:])\n\ns = input()\ndef dfs(s, start=0):\n    if start == 0:\n        return s\n    elif s[start] == 'c':\n        return dfs(s[start:], start + 1)\n    else:\n        return dfs(s[start:], s[start + 1:])\n\nprint(dfs(s, 0))"}, "500": {"problem_id": 4500, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    A, B = list(map(int, readline().split()))\n    c = 0\n    for i in range(A):\n        c += A - B\n        if c == 0:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "501": {"problem_id": 4501, "answer": "def main():\n    n,a,x = map(int,input().split())\n    l = list(map(int,input().split()))\n    print(sum(l))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "502": {"problem_id": 4502, "answer": "n, a = map(int, input().split())\nb = list(map(int, input().split()))\nprint('\\n'.join(b))"}, "503": {"problem_id": 4503, "answer": "def main():\n    H,N = map(int,input().split())\n    A = list(map(int,input().split()))\n    m = 0\n    for i in range(H):\n        m = max(m,A[i]-1)\n    print(\"Yes\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "504": {"problem_id": 4504, "answer": "def main():\n    s = list(map(int, input().split()))\n    for i in range(len(s)):\n        s[i] = ''.join(s[i:i+2])\n    print(len(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "505": {"problem_id": 4505, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef readline():\n    return list(map(int, readline().split()))\n\ndef readline2():\n    return list(map(int, readline().split()))\n\ndef readline(s):\n    return ''.join(sorted(list(map(int, s)))).pop()\n\nsys.setrecursionlimit(1000000)\nINF = float('inf')\nMOD = 10**9+7\n\ndef __starting_point():\n    print(readline())\n    return\n\n__starting_point()"}, "506": {"problem_id": 4506, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(a[0] * b[0])\n"}, "507": {"problem_id": 4507, "answer": "import sys\ninput = lambda: sys.stdin.readline().strip()\nn, m, k = list(map(int, input().split()))\narr = list(map(int, input().split()))\nd = [[0] * k for _ in range(n)]\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    d[x].append(y)\n    d[y].append(x)\nans = 0\ndef inp():\n    return int(input())\ndef inpl():\n    return input().split()\ndef inpl_int():\n    return int(input())\ndef lmp():\n    return list(map(int, input().split()))\ndef sna\": cook your dish here\n\"\"\"\n\nn, m = list(map(int, input().split()))\narr = list(map(int, input().split()))\nd = [[0] * k for _ in range(n)]\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    d[x].append(y)\n    d[y].append(x)\nans = min(ans, key=lambda x: x[0])\nprint(ans)\n"}, "508": {"problem_id": 4508, "answer": "n = int(input())\nedges = []\nfor i in range(n):\n    edges.append(list(map(int, input().split())))\nprint(len(edges))"}, "509": {"problem_id": 4509, "answer": "def __starting_point():\n    t = int(input())\n    for i in range(t):\n        n, k = list(map(int, input().split()))\n        if n % 100 == 0:\n            print(n)\n        else:\n            print(n // 100)\n__starting_point()"}, "510": {"problem_id": 4510, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nids = list(map(int, input().split()))\n\ndef check(l):\n    if l == 0:\n        return True\n    else:\n        return False\n\ndef main():\n    n, k = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    id_list = []\n    for i in range(n):\n        l.append(int(input()))\n        id_list.append(check(l[:i]))\n    print(len(ids))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "511": {"problem_id": 4511, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\n\nd = {}\nfor _ in range(n):\n    k = int(readline())\n    d[k] = list(map(int, readline().split()))\n    k -= 1\n    if k not in d:\n        d[k] = list(d.get(k, []))\n    else:\n        d[k].append(k)\n\nprint(len(d))\nprint(' '.join(map(str, d[1:])))"}, "512": {"problem_id": 4512, "answer": "s = input()\nq = int(input())\nfor _ in range(q):\n    l = list(map(int, input().split()))\n    print(len(s[:l]))\n"}, "513": {"problem_id": 4513, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = []\n    for i in range(9):\n        l.append(list(map(int,input().split())))\n    l.sort(reverse=True)\n    print(''.join(l))\n"}, "514": {"problem_id": 4514, "answer": ""}, "515": {"problem_id": 4515, "answer": "import math\nt = int(input())\nfor _ in range(t):\n    a, b, c, n = map(int, input().split())\n    if a+b+c == n:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "516": {"problem_id": 4516, "answer": ""}, "517": {"problem_id": 4517, "answer": ""}, "518": {"problem_id": 4518, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == a[1] == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "519": {"problem_id": 4519, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    if k == 0:\n        print('0')\n    elif k == 1:\n        print('1')\n    else:\n        for i in range(n):\n            if s[i] == s[i-1]:\n                s[i] = s[i-1] + 1\n            else:\n                s[i] = s[i-1]\n        print(s.count(0))"}, "520": {"problem_id": 4520, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\ndef check(x, y):\n    if x == y:\n        return True\n    elif check(x, y):\n        return False\n    else:\n        return True\n\nfor i in range(n):\n    l.append(list(map(int, input().split())))\n\nprint(*l, sep='\\n')\n\n# print(1)\n# print(2)\n# print(3)\n# print(4)\n# print(5)\n# print(6)\n# print(7)\n"}, "521": {"problem_id": 4521, "answer": "from math import ceil\nn = int(input())\nx = list(map(int, input().split()))\nfor i in range(n):\n    x[i] = ceil(x[i] + x[i-1])\nprint(sum(x))"}, "522": {"problem_id": 4522, "answer": "from collections import deque\ndef main():\n    n, m = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    graph = [[] for _ in range(n)]\n    for _ in range(m):\n        u, v, w = list(map(int, input().split()))\n        graph[u].append((v, w))\n        graph[v].append((u, w))\n        graph[u].append((v, w))\n        graph[v].append((u, w))\n    q.sort(key = lambda x: x[0])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend([])\n    q.extend(["}, "523": {"problem_id": 4523, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    if len(a) == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "524": {"problem_id": 4524, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        ans += pow(2, i)\n    else:\n        ans += pow(2, m - i)\nprint(ans % 1000000007)"}, "525": {"problem_id": 4525, "answer": "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int,input().split()))\n    print('YES' if sum(l)%sum(l)==n else 'NO')"}, "526": {"problem_id": 4526, "answer": "from collections import deque\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    print(sum(a[0]*(n-1)//2 for i in range(1,n+1)))"}, "527": {"problem_id": 4527, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    r = list(map(int, input().split()))\n    max_size = 2147483647\n    for i in range(n):\n        l.append(l[i])\n        r.append(r[i])\n        max_size = max(max_size, len(l) - 1)\n    print(max_size)\n"}, "528": {"problem_id": 4528, "answer": "for i in range(int(input())):\n h, m = map(int, input().split())\n if h%24==0:\n  print(h)\n else:\n  print(m)"}, "529": {"problem_id": 4529, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input().strip()\n    l, r = 0, 0\n    for i in s:\n        if i == 'L':\n            l += 1\n        elif i == 'R':\n            r += 1\n        else:\n            l = max(r, l)\n            r = min(r, l)\n    print(*l, sep='\\n')\n"}, "530": {"problem_id": 4530, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for i in range(n):\n        if a[i] == a[i-1]:\n            ans += 1\n    print(ans)"}, "531": {"problem_id": 4531, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef dfs(root):\n    if root == 0:\n        return 0\n    else:\n        for i in range(1, n):\n            if root == i:\n                return a[i] + a[root - 1]\n        return 0\n\ndfs(root)\nprint(max(a))"}, "532": {"problem_id": 4532, "answer": "for _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[a[i]].append(i)\n    for i in range(n):\n        a[i] = min(a[i], k)\n    print(len(a))\n"}, "533": {"problem_id": 4533, "answer": "class Solution:\n     def findContentChildren(self, g, s, c):\n         \"\"\"\n         :type g: List[int]\n         :type s: List[int]\n         :type c: List[int]\n         :rtype: int\n         \"\"\"\n         if g[c] > 0:\n             return self.findContentChildren(g, s, c)\n         elif g[c] == 0:\n             return 0\n         else:\n             return self.findContentChildren(g, s, c)\n         \n     def findContentChildren(self, g, s, c):\n         if g[c] > 0:\n             return self.findContentChildren(g, s, c)\n         elif g[c] == 0:\n             return 0\n         else:\n             return self.findContentChildren(g, s, c)"}, "534": {"problem_id": 4534, "answer": "class Solution:\n     def getRow(self, row_index):\n         \"\"\"\n         :type row_index: int\n         :rtype: List[int]\n         \"\"\"\n         if row_index == 0:\n             return [0]\n         elif row_index == 1:\n             return [1]\n         else:\n             return [2]\n         \n     def __init__(self, row_index):\n         self.row_index = row_index\n         self.col_index = 0\n         self.possible_indices = set()\n         self.previous_row = None\n         self.previous_col = None\n         self.possible_indices.add(self.row_index)\n         self.curr_row = None\n         self.curr_col = None\n         self.curr_possible_indices = set()\n         self.curr_possible_indices.add(self.row_index)\n         self.curr_possible_indices.add(self.col_index)\n         self.possible_indices.add(self.possible_indices)\n         self.previous_col = None\n         self.previous_row = None\n         self.previous_col = None\n         self.possible_indices.add(self.possible_indices)\n         self.possible_indices.add(self.previous_indices)\n         self.curr_possible_indices = set()\n         self.curr_possible_indices.add(self.possible_indices)\n         self.curr_possible_indices.add(self.previous_indices)\n         self.previous_row = None\n         self.previous_col = None\n         self.previous_col = None\n         self.possible_indices.add(self.possible_indices)\n         self.possible_indices.add(self.previous_indices)\n         self.curr_row = None\n         self.curr_col = None\n         self.curr_possible_indices.add(self.possible_indices)\n         self.possible_indices.add(self.previous_indices)\n         self.previous_col = None\n         self.previous_row = None\n         self.previous_col = None\n         self.possible_indices.add(self.possible_indices)\n         self.curr_possible_indices.add(self.possible_indices)\n         self.possible_indices.add(self.previous_indices)\n         self.curr_possible_indices.add(self.previous_indices)\n         self.previous_col = None\n         self.previous_col ="}, "535": {"problem_id": 4535, "answer": "class Solution:\n    def hammingWeight(self, n: int) -> int:\n        s = 0\n        for i in range(1, n+1):\n            s += int(i)\n        return s"}, "536": {"problem_id": 4536, "answer": "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         d = {0:1}\n         for i in range(len(digits)-1):\n             if digits[i] == 0:\n                 d[i] = 1\n             else:\n                 d[i] = d[i-1] + 1\n         return d.get(digits[-1], 0)"}, "537": {"problem_id": 4537, "answer": "# cook your dish here\ndef solve():\n    a, b = map(int, input().split())\n    print(solve())\n\ndef __starting_point():\n    solve()\n\n__starting_point()"}, "538": {"problem_id": 4538, "answer": "def main():\n    n,d = list(map(int,input().split()))\n    x,y = list(map(int,input().split()))\n    d = int(d)\n    for i in range(n):\n        x[i] = x[i]-d\n        y[i] = y[i]-d\n        d += abs(x[i]-y[i])\n    print(sum(x.values()))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "539": {"problem_id": 4539, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nif n%2 == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "540": {"problem_id": 4540, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nA = list(map(int, input().split()))\nprint(N)"}, "541": {"problem_id": 4541, "answer": "def is_vowel(c):\n    if c.isalpha():\n        return True\n    else:\n        return False\n\ndef __starting_point():\n    print(\"Hello World\\n\")\n    s = input()\n    print(is_vowel(s.strip()))\n\n__starting_point()"}, "542": {"problem_id": 4542, "answer": "def main():\n    s = input()\n    n = len(s)\n    d = {}\n    for i in range(n):\n        d[s[i]] = i\n    for i in range(n):\n        d[s[i]].append(i)\n    d = {}\n    for i in range(n):\n        d[s[i]].append(i)\n    print(d.get(s[0]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "543": {"problem_id": 4543, "answer": "def main():\n    a,b = list(map(int,input().split()))\n    print(a%b)\n\nmain()\n"}, "544": {"problem_id": 4544, "answer": "def solve(n,a):\n    if n==0:\n        return 0\n    elif n==1:\n        return a[0]\n    else:\n        a[1]+=a[0]\n        a[2]+=a[1]\n        a[3]+=a[2]\n        a[4]+=a[3]\n        a[5]+=a[4]\n        a[6]+=a[5]\n        a[7]+=a[6]\n        a[8]+=a[7]\n        a[9]+=a[8]\n        a[10]+=a[9]\n        a[11]+=a[10]\n        a[12]+=a[11]\n        a[13]+=a[12]\n        a[14]+=a[14]\n        a[15]+=a[15]\n        a[16]+=a[16]\n        a[17]+=a[17]\n        a[18]+=a[18]\n        a[19]+=a[19]\n        a[20]+=a[20]\n        a[21]+=a[21]\n        a[22]+=a[22]\n        a[23]+=a[23]\n        a[24]+=a[24]\n        a[25]+=a[25]\n        a[26]+=a[26]\n        a[27]+=a[27]\n        a[28]+=a[28]\n        a[29]+=a[29]\n        a[30]+=a[30]\n        a[31]+=a[31]\n        a[32]+=a[32]\n        a[33]+=a[33]\n        a[34]+=a[34]\n        a[35]+=a[35]\n        a[36]+=a[36]\n        a[37]+=a[37]\n        a[38]+=a[38]\n        a[39]+=a[39]\n        a[40]+=a[40]\n        a[41]+=a[41]\n        a[42]+=a[42]\n        a[43]+=a[43]\n        a[44]+=a[44]\n        a[45]+=a[45]\n        a[46]+=a[45]\n        a[47]+=a[47]\n        a[48]+=a[48]\n        a[49]+=a[49]\n        a[50]+=a[50]\n        a[51]+=a[51]\n        a[52]+=a[52]\n        a[53]+=a[53]\n        a[54]+=a[54]\n        a[55]+=a[55]\n        a[56]+=a[56]\n        a[57]+=a[57]"}, "545": {"problem_id": 4545, "answer": "N = int(input())\nA = list(map(int, input().split()))\nprint(len(A))"}, "546": {"problem_id": 4546, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    a, b, c = list(map(int, readline().split()))\n    print(\"YES\")\n    for i in range(a, b+1, a):\n        print(i, end = \" \")\n        print(\" \".join(map(str, i)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "547": {"problem_id": 4547, "answer": "def main():\n    n = int(input())\n    print(main())\n\ndef __starting_point():\n    main()\n__starting_point()"}, "548": {"problem_id": 4548, "answer": "from collections import defaultdict\nN, M = list(map(int, input().split()))\nX = list(map(int, input().split()))\nl = []\nfor i in range(N):\n    l.append(X[i] + l[-1])\nprint(min(l))"}, "549": {"problem_id": 4549, "answer": "def main():\n    H, W = list(map(int, input().split()))\n    s = input()\n    print(\"Yes\\n\")\n    for i in range(H):\n        s = s.split()\n        print(\"{}\".format(s[0]))\n        if s[0] == '#':\n            print(\"Yes\\n\")\n        else:\n            print(\"No\\n\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "550": {"problem_id": 4550, "answer": "def __starting_point():\n    a, b, c = list(map(int, input().split()))\n    if c == b:\n        print(\"Yes\")\n    else:\n        if c == a:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n__starting_point()"}, "551": {"problem_id": 4551, "answer": "# cook your dish here\nimport math\ndef calc_weight(A, B, C, D):\n    return math.gcd(A, C)\n\ndef calc_mass(A, B, C, D):\n    return A*calc_weight(B, C, D)\n\ndef calc_weight(A, B, C, D):\n    return calc_mass(A, B, C, D)\n\nA = int(input())\nB = int(input())\nC = int(input())\nD = int(input())\n\nprint(calc_weight(A, B, C, D))\nprint(calc_mass(A, B, C, D))\nprint(calc_weight(A, B, C, D))\n"}, "552": {"problem_id": 4552, "answer": "import sys\ninput = sys.stdin.readline\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return gcd(b, a % b)\n    else:\n        return gcd(b, a)\n\n\ndef main():\n    N = int(input())\n    F = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n\n    # print(gcd(F, 0))\n    # print(P)\n\n    # print(gcd(F, N))\n    # print(P)\n\n    d = 0\n    for i in range(5):\n        d += F[i]\n        d >>= 1\n        d -= 1\n        if d == 0:\n            print(0)\n            continue\n        else:\n            print(d)\n\n    ans = 0\n    for i in range(5):\n        ans += gcd(F, i)\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "553": {"problem_id": 4553, "answer": "# https://atcoder.jp/wiki/PEP827\n# https://atcoder.jp/wiki/PEP827_and_Usuario_Syntax\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\ndef main():\n    a,b=map(int,input().split())\n    s=input()\n    if a==b:\n        print(\"Yes\")\n    else:\n        print(\"No\")\ndef __starting_point():\n    main()\n__starting_point()"}, "554": {"problem_id": 4554, "answer": "def dijkstra(s, n):\n    if n == 0:\n        return s\n    elif n == 1:\n        return s[0] + s[1]\n    elif n == 2:\n        return s[0] + s[1] + s[2]\n    else:\n        return s[n] + dijkstra(s, n - 1)\n\ns = input()\nn = len(s)\nd = dijkstra(s, n)\nprint(d[0] + dijkstra(s, n - 1))\n"}, "555": {"problem_id": 4555, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10 ** 6)\n    n = int(input())\n    for _ in range(n):\n        a, b = list(map(int, input().split()))\n        print(a, b)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "556": {"problem_id": 4556, "answer": "def __starting_point():\n    s = input()\n    print(__starting_point())\n__starting_point()"}, "557": {"problem_id": 4557, "answer": "def main():\n    A, B = map(int, input().split())\n    cats = list(map(int, input().split()))\n    dogs = list(map(int, input().split()))\n    print('YES' if cats[0] == dogs[0] else 'NO')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "558": {"problem_id": 4558, "answer": "import math\ndef main():\n    n = int(input())\n    a = n/math.gcd(n,n)\n    print(a)\n\nmain()\n"}, "559": {"problem_id": 4559, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    print((-1))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "560": {"problem_id": 4560, "answer": "def solve():\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(\"Yes\" if solve() else \"No\")\n\nsolve()"}, "561": {"problem_id": 4561, "answer": "def main():\n    X, A, B = list(map(int, input().split()))\n    while True:\n        try:\n            print(safe)\n            break\n        except:\n            break\nmain()"}, "562": {"problem_id": 4562, "answer": "from sys import stdin, stdout\nn = int(stdin.readline())\nans = []\nfor i in range(n):\n    ans.append(str(i))\nprint('\\n'.join(ans))"}, "563": {"problem_id": 4563, "answer": "from collections import defaultdict\nn = int(input())\nt = defaultdict(list)\nfor i in range(n):\n    t[i].append(i+1)\n\ndef atCoDeer(candidates):\n    a = 0\n    for candidate in candidates:\n        a += t[candidate]\n        if a == 0:\n            continue\n        elif a == 1:\n            a += 1\n        else:\n            a -= 1\n    return a\n\n# time: O(n)\n# space: O(n)\nprint(atCoDeer(0))"}, "564": {"problem_id": 4564, "answer": "def main():\n S = input()\n print(yes)\n\ndef __starting_point():\n main()\n\n__starting_point()"}, "565": {"problem_id": 4565, "answer": "# \u6728\u3060\u304c\u3080\n# \u307e\u3070\u3089\u304b\u3089\u305d\u3046\u3058\u3083\u306a\u3044\nfrom collections import defaultdict\nn = int(input())\ns = input()\nfor i in range(n):\n    s = s.replace(\"E\",\"W\")\n    s = s.replace(\"E\",\"W\")\n    print(min(s,1))\n"}, "566": {"problem_id": 4566, "answer": "N,M = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\ndef main():\n    n,m = map(int,input().split())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    d = []\n    for i in range(n):\n        d.append(a[i]*b[i])\n    d.sort(key=lambda x:x[0])\n    print((d[-1]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "567": {"problem_id": 4567, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\ns = list(map(int, input().split()))\n\n#print(s)\n\nfor i in range(N):\n    s.append(10**i)\n\n#print(s)\n\nanswer = 0\nfor i in range(10):\n    if s[i] == 10**i:\n        answer += 10**i\nprint(answer)\n"}, "568": {"problem_id": 4568, "answer": "# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\n\ndef input(): return sys.stdin.readline().strip()\ndef readline(): return readline().strip()\n\ndef l(): return list(map(int, readline().split()))\ndef r(): return list(map(str, readline().split()))\ndef u(): return list(map(int, readline().split()))\ndef d(): return int(readline())\ndef e(): return list(readline())\ndef f(): return map(int, readline().split())\ndef g(): return map(str, readline().split())\ndef h(): return map(str, readline().split())\ndef i(): return int(readline())\ndef lsl(): return ''.join(map(str, readline().split()))\n\nn = readline()\nX = l()\nY = l()\n\nprint(X[0] + Y[0])\nprint(X[1] + Y[1])\n\n# \u8981\u7d20\u6570\u5b57\u6bcf\u6b21\u90fd\u8981\u7528\u4e8c\u5206\u65b9\u5411\nfor i in range(n):\n    X.append(X[i] + Y[i])\n\n# \u5982\u679c\u6709\u591a\u5c11\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u8fd4\u56de\u6765\u8bf4\u660e\u7b26\u5408\u4e00\u4e2a\u6587\u4ef6\nans = 0\nfor i in range(n):\n    if X[i] == Y[i]:\n        ans += 1\n    else:\n        ans += 2\nprint(ans)\n"}, "569": {"problem_id": 4569, "answer": "from bisect import bisect_left as bl\ns = input()\nbl = bl\nfor i in range(len(s)):\n    if s[i] == 'S':\n        print('Sunny')\n    else:\n        print('Takahashi')\n"}, "570": {"problem_id": 4570, "answer": "n,a,b = map(int,input().split())\nl = [0]*n\nfor i in range(n):\n    x = l[i]\n    if x == 0:\n        x = a*b\n    else:\n        x = a*b*int(x)\n    print(x)"}, "571": {"problem_id": 4571, "answer": "import math\nn, m = list(map(int, input().split()))\ns = 0\nfor i in range(m):\n s += math.pow(i, m)\n print(s)\n"}, "572": {"problem_id": 4572, "answer": "S = input()\nn = len(S)\nif S[0] not in 'abcdefghijklmnopqrstuvwxyz' or S[0] not in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' or S[0] not in 'abcdefghijklmnopqrstuvwxyz' or S[0] not in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' or S[0] not in 'abcdefghijklmnopqrstuvwxyz' or S[0] not in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' or S[0] not in 'abcdefghijklmnopqrstuvwxyz':\n    print(None)\nelse:\n    print('None')\n"}, "573": {"problem_id": 4573, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nX = list(map(int, input().split()))\nX.sort()\nA = [0]*N\nfor i in range(N):\n    A[i] = X[i]\n\nB = [0]*N\nfor i in range(N):\n    B[i] = X[i]\n\n# \u5dfb\u306e\u5b8c\u6570\u636e\ndef __starting_point():\n    N = int(input())\n    X = list(map(int, input().split()))\n    A = [0]*N\n    for i in range(N):\n        A[i] = X[i]\n    B = [0]*N\n    for i in range(N):\n        B[i] = X[i]\n\n__starting_point()"}, "574": {"problem_id": 4574, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\n\nans = 0\nfor i in range(n):\n    ans += a[i] * (i + 2)\nprint(ans)"}, "575": {"problem_id": 4575, "answer": "n = int(input())\nd, x = list(map(int, input().split()))\nfor i in range(n):\n    d[i] = x[i]\n\nprint(8)"}, "576": {"problem_id": 4576, "answer": "from collections import deque\ndef gcd(a, b):\n    if b == 0:\n        return a\n    elif b % 2 == 0:\n        return b // 2\n    else:\n        return gcd(a, b % 2)\n\nn = int(input())\nque = deque([])\nfor i in range(n):\n    x = input()\n    que.append(int(x))\n\nque.sort()\nfor i in range(len(que)):\n    print(que[i] * 100)"}, "577": {"problem_id": 4577, "answer": "def __starting_point():\n    A,B,C = list(map(int,input().split()))\n    print(A,B,C)\n__starting_point()"}, "578": {"problem_id": 4578, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ndef main():\n    N,X=map(int,input().split())\n    m=X\n    while X:\n        m=max(m,X)\n        X-=1\n    print(sum(map(lambda x:int(x.count(x)),m)))\nmain()"}, "579": {"problem_id": 4579, "answer": "n = int(input())\ns = list(map(int, input().split()))\nprint(len(s))"}, "580": {"problem_id": 4580, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "581": {"problem_id": 4581, "answer": "import sys\nread = sys.stdin.read\n\ndef main():\n    input = read().split()\n    n = int(input())\n    print(n)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "582": {"problem_id": 4582, "answer": "from bisect import *\ndef is_decoded(s):\n    return s.isdigit() and s.isalnum()\ndef is_decoded(s, i, decoded=False):\n    if decoded:\n        return False\n    elif is_decoded(s, i, decoded):\n        return False\n    else:\n        return True\n\ndef main():\n    n = int(input())\n    s = input()\n    print(is_decoded(s, 0, 0))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "583": {"problem_id": 4583, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nsys.setrecursionlimit(10**7)\ndef lis():\n    return list(map(int, input().split()))\ndef main():\n    a, b, c, d = lis()\n    print(''.join(map(str, a)))\n    for i in range(a, b+1):\n        if c == d:\n            print(i, end=' ')\n        else:\n            print(i, end='+')\ndef __starting_point():\n    main()\n__starting_point()"}, "584": {"problem_id": 4584, "answer": "from bisect import bisect_left, insort\nN = int(input())\nA = list(map(int, input().split()))\nL = [A[i] for i in range(N)]\nfor i, a in enumerate(L):\n    L[i] = bisect_left(L, a)\nprint(max(L))"}, "585": {"problem_id": 4585, "answer": "from math import ceil\n\ndef f(x):\n    return ceil(x**0.5)\n\ndef main():\n    x = int(input())\n    for i in range(x):\n        print(f(i))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "586": {"problem_id": 4586, "answer": "def main():\n    n = int(input())\n    if n == 3:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "587": {"problem_id": 4587, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N = int(readline())\n    A = list(map(int, readline().split()))\n    B = list(map(int, readline().split()))\n    C = list(map(int, readline().split()))\n    dp = [0] * (N + 1)\n    for i in range(N):\n        dp[i] = A[i]\n        A[i] = max(dp[i], A[i])\n    print(dp[N])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "588": {"problem_id": 4588, "answer": "def __starting_point():\n    X, Y = list(map(int, input().split()))\n    X = 10**10\n    Y = 11**11\n    print(__starting_point())\n\n__starting_point()"}, "589": {"problem_id": 4589, "answer": "import sys\ninput = sys.stdin.readline\nH,W = map(int,input().split())\n#for i in range(H):\n#     print(str(i))\n#     print(''.join(map(str,input().split())))\n\ndef __starting_point():\n    for _ in range(H):\n        s = input().strip()\n        d = {}\n        for i in range(H):\n            s = s[::-1]\n            d[i] = int(s[1:])\n        for j in range(W):\n            s = s[::-1]\n            d[j] = int(s[1:])\n        print(sum(d.values()))\n__starting_point()"}, "590": {"problem_id": 4590, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N, M = list(map(int, readline().split()))\n    A = list(map(int, readline().split()))\n    B = list(map(int, readline().split()))\n    A.sort()\n    B.sort()\n    read = 0\n    for i in range(N):\n        read += min(A[i], B[i])\n        read -= max(A[i], B[i])\n    print(read)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "591": {"problem_id": 4591, "answer": "# coding: utf-8\n# Your code here!\nimport math\ndef main():\n    a, b, c, d = list(map(int, input().split()))\n    x = a + b + c\n    y = a + d + c\n    print(math.log(x, d))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "592": {"problem_id": 4592, "answer": "# cook your dish here\nn = int(input())\nmod = 10**9+7\nl = [0]*(n+1)\nfor i in range(1,n+1):\n    l[i] = pow(l[i], mod-2, mod)\nprint(l[n])"}, "593": {"problem_id": 4593, "answer": "def main():\n    X = int(input())\n    for i in range(X):\n        print((X - i) // X)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "594": {"problem_id": 4594, "answer": "from math import ceil,sqrt\nn = int(input())\nd1 = ceil(sqrt(n))\nd2 = ceil(sqrt(n))\nprint(max(d1,d2))"}, "595": {"problem_id": 4595, "answer": "s = input()\nfor i in range(len(s)):\n    s = s.replace('Z','')\n    print(s[i:i+8] + s[i+8:i+8+8])"}, "596": {"problem_id": 4596, "answer": "def main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(max(A))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "597": {"problem_id": 4597, "answer": "def main():\n    N = int(input())\n    dp = [0] * (N + 1)\n    for i in range(N):\n        dp[i] = dp[i - 1] + 1\n    mod = 10**9 + 7\n    for i in range(N):\n        mod = pow(10, mod)\n        dp[i] %= mod\n    print((dp[N] % mod) % mod)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "598": {"problem_id": 4598, "answer": "# cook your dish here\ndef candies(n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 2\n    else:\n        candies(n-1) + 1\n        candies(n-2) + 2\n        candies(n-3) + 3\n        candies(n-4) + 4\n        candies(n-5) + 5\n        candies(n-6) + 6\n        candies(n-7) + 7\n        candies(n-8) + 8\n        candies(n-9) + 9\n        candies(n-10) + 10\n        candies(n-11) + 11\n        candies(n-12) + 12\n        candies(n-13) + 13\n        candies(n-14) + 14\n        candies(n-15) + 15\n        candies(n-16) + 16\n        candies(n-17) + 17\n        candies(n-18) + 18\n        candies(n-19) + 19\n        candies(n-20) + 20\n        candies(n-21) + 21\n        candies(n-22) + 22\n        candies(n-23) + 23\n        candies(n-24) + 24\n        candies(n-25) + 25\n        candies(n-26) + 26\n        candies(n-27) + 27\n        candies(n-28) + 28\n        candies(n-29) + 29\n        candies(n-30) + 30\n        candies(n-31) + 31\n        candies(n-32) + 32\n        candies(n-33) + 33\n        candies(n-34) + 34\n        candies(n-35) + 35\n        candies(n-36) + 36\n        candies(n-37) + 37\n        candies(n-38) + 38\n        candies(n-39) + 39\n        candies(n-40) + 40\n        candies(n-41) + 41\n        candies(n-42) + 42\n        candies(n-43) + 44\n        candies(n-44) + 45\n        candies(n-45) + 46\n        candies(n-46) + 47\n        candies(n-47) + 48\n        candies(n-49) + 49\n        candies(n-50) + 50\n        candies(n-51) + 51\n        candies(n-52) + 53\n        candies(n-54) + 54\n        candies(n-55) + 55\n        candies(n-56) + 56\n        candies(n-57) + 58\n        candies(n-58) + 59\n        candies(n-60)"}, "599": {"problem_id": 4599, "answer": "n = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nc = [int(x) for x in input().split()]\nd = [int(x) for x in input().split()]\ne = [int(x) for x in input().split()]\ne.sort()\nfor i in range(n):\n    if a[i] == b[i]:\n        print(\"minus\")\n    else:\n        print(\"reversed\")\n"}, "600": {"problem_id": 4600, "answer": "from bisect import *\nN,M,p = map(int,input().split())\np = list(map(int,input().split()))\ns = 0\nfor i in range(N):\n    s += p[i]\n    p[i] = s\nprint(s)"}, "601": {"problem_id": 4601, "answer": "N,K = list(map(int,input().split()))\nH = list(map(int,input().split()))\nF = 0\nfor i in range(N):\n    if H[i]<H[i-1]:\n        F+=1\n    else:\n        F+=H[i]\nprint(F)\n"}, "602": {"problem_id": 4602, "answer": "def distance_calc(n, k):\n    return math.inf\n\ndef __starting_point():\n    n = int(input())\n    k = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    print(distance_calc(n, k))\n__starting_point()"}, "603": {"problem_id": 4603, "answer": "# coding: utf-8\n# Your code here!\nimport math\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ndef main():\n    n = 0\n    for i in range(a, b, c):\n        n += math.ceil(d * (i + 1) / 2)\n    print(n)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "604": {"problem_id": 4604, "answer": "from math import log2\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    d = {}\n    for i in range(N):\n        d[A[i]].append(i)\n    print((d.get(0, 0))%1000000007)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "605": {"problem_id": 4605, "answer": "def main():\n    s = list(map(int, input().split()))\n    n, a, b = 0, 0, 0\n    for i in range(len(s)):\n        if s[i] == a:\n            n += 1\n        elif s[i] == b:\n            a, b = b, a\n        else:\n            n += 1\n    print(n)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "606": {"problem_id": 4606, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nprint(a[0])"}, "607": {"problem_id": 4607, "answer": "from bisect import bisect_left, bisect_right\n\ndef main():\n    a, b = map(int, input().split())\n    print(bisect_left(a, b))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "608": {"problem_id": 4608, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    a = list(map(int, input().split()))\n    print((N - 1) * 2)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "609": {"problem_id": 4609, "answer": "from collections import deque\nN = int(input())\nA = list(map(int, input().split()))\ns = set()\nfor i in range(N):\n    s.add(A[i])\nprint(len(s))"}, "610": {"problem_id": 4610, "answer": "def main():\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(min(a))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "611": {"problem_id": 4611, "answer": "from collections import defaultdict\ndef at_co(x,y):\n    if x!=y:\n        return 0\n    elif x==y:\n        return 1\n    else:\n        return max(map(int,list(range(x+1,y+1)))[1:])\n\ndef main():\n    n = int(input())\n    t = defaultdict(list)\n    for i in range(n):\n        t[i].append(int(input()))\n    \n    for _ in range(t[0]):\n        x,y = t[0]\n        print(x,y)\n        if at_co(x,y) == True:\n            print(\"Yes\")\n        else:\n            print(\"No\")"}, "612": {"problem_id": 4612, "answer": "def main():\n    a, b = list(map(int, input().split()))\n    a, b = sorted(map(int, input().split()), reverse=True)\n    print(a.round(b.pop()))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "613": {"problem_id": 4613, "answer": "from collections import deque\nN, M = list(map(int, input().split()))\nedges = [[] for _ in range(N)]\nfor i in range(M):\n    a, b = list(map(int, input().split()))\n    edges[a].append(b)\n    edges[b].append(a)\n\ndef main():\n    N, M = list(map(int, input().split()))\n    graph = [[] for _ in range(N)]\n    for i in range(N):\n        a, b = list(map(int, input().split()))\n        graph[a].append(b)\n        graph[b].append(a)\n        edges[a].append(b)\n        edges[b].append(a)\n    print((len(edges)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "614": {"problem_id": 4614, "answer": "def main():\n    a, b, c = map(int, input().split())\n    print(a-b)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "615": {"problem_id": 4615, "answer": "import sys\nreadline = sys.stdin.readline\n\nclass Tree:\n    def __init__(self, n):\n        self.n = n\n        self.s = [0] * (n + 1)\n        self.s[-1] = 1\n        self.p = [0] * (n + 1)\n        self.p[-1] = 1\n        self.cur = [0] * (n + 1)\n        self.cur[-1] = 1\n        self.cur[-2] = 1\n        self.cur[-3] = 1\n        self.cur[-4] = 1\n        self.cur[-5] = 1\n        self.cur[-6] = 1\n        self.cur[-7] = 1\n        self.cur[-8] = 1\n        self.cur[-9] = 1\n        self.cur[-10] = 1\n        self.cur[-11] = 1\n        self.cur[-12] = 1\n        self.cur[-13] = 1\n        self.cur[-14] = 1\n        self.cur[-15] = 1\n        self.cur[-16] = 1\n        self.cur[-17] = 1\n        self.cur[-18] = 1\n        self.cur[-19] = 1\n        self.cur[-20] = 1\n        self.cur[-21] = 1\n        self.cur[-22] = 1\n        self.cur[-23] = 1\n        self.cur[-24] = 1\n        self.cur[-25] = 1\n        self.cur[-26] = 1\n        self.cur[-27] = 1\n        self.cur[-28] = 1\n        self.cur[-29] = 1\n        self.cur[-30] = 1\n        self.cur[-31] = 1\n        self.cur[-32] = 1\n        self.cur[-33] = 1\n        self.cur[-34] = 1\n        self.cur[-35] = 1\n        self.cur[-36] = 1\n        self.cur[-37] = 1\n        self.cur[-38] = 1\n        self.cur[-39] = 1\n        self.cur[-40] = 1\n        self.cur[-41] = 1\n        self.cur[-42] = 1\n        self.cur[-43] = 1\n        self.cur[-44] = 1\n        self.cur[-45] = 1\n        self.cur[-46] = 1\n        self.cur[-47] = 1\n        self.cur[-48] = 1\n        self.cur[-49] = 1\n        self.cur[-50] = 1\n        self.cur[-51] = 1\n        self.cur[-52] ="}, "616": {"problem_id": 4616, "answer": "import sys\ndef main():\n    s = input()\n    print(i18n(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "617": {"problem_id": 4617, "answer": "def main():\n    from sys import stdin, stdout\n    input = stdin.readline\n\n    n = int(input())\n    for i in range(n):\n        print(\"YES\")\n        if i == n:\n            print(\"NO\")\n        else:\n            print(\"NO\")\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "618": {"problem_id": 4618, "answer": "def main():\n    s = input()\n    k = 0\n    for i in range(1, len(s)):\n        if s[i] > s[k]:\n            k += 1\n        else:\n            k = 0\n    print(k)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "619": {"problem_id": 4619, "answer": "def area(x, y):\n    return x * y - x % 2\n\nW, H = map(int, input().split())\nx, y = map(int, input().split())\n\n# \u533a\u9593\u53d6\u5f97\u65bc\u65bc\u4e00\u81f4,\u521d\u59cb\u5316\u6210\u4e0b\u6838,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u521d\u59cb\u5316\u6210\u4e0b\u6838,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \u533a\u9593\u53d6\u5f97\u65bc\u4e00\u81f4,\u6839\u6362\n# \ufffd"}, "620": {"problem_id": 4620, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nC = list(map(int, input().split()))\nS = list(map(int, input().split()))\n\nmod = 10**9 + 7\nB = 10**9 + 7\n\nfor i in range(n):\n    t = int(input())\n    if t == 0:\n        continue\n    if S[i] == 0:\n        S[i] = 1\n        mod = pow(mod, 2, mod)\n    else:\n        S[i] = 0\n        mod = pow(mod, 2, mod)\n        B = max(B, mod)\n        B = max(B, mod)\n    print(bisect.bisect_left(S, t))"}, "621": {"problem_id": 4621, "answer": "import sys\ninput = sys.stdin.readline\n\ndef inp(): return map(int, input().split())\ndef lw(n, w, m, d):\n    if n < m:\n        return m\n    elif n == w:\n        return d\n    else:\n        x = (n-w)//2\n        y = (n-m)//2\n        return round(x*y, 2)\n\ndef main():\n    h, w, m, d = inp()\n    print((lw(h, w, m, d)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "622": {"problem_id": 4622, "answer": "n = int(input())\ndef is_same(x,y):\n try:\n  return x == y\n except TypeError:\n  return False\n\ndef __starting_point():\n starting_point = is_same(int(input()),int(input()))\n__starting_point()"}, "623": {"problem_id": 4623, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    s = 0\n    for i in range(n):\n        if s == a[i]:\n            s = 0\n        else:\n            s = s + a[i]\n            break\n    print(s)"}, "624": {"problem_id": 4624, "answer": "for _ in range(int(input())):\n n,x = map(int,input().split())\n if x==1:\n  print(1)\n elif x==3:\n  print(2)\n else:\n  print(3)\n"}, "625": {"problem_id": 4625, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    s = input()\n    print(26 * (n - m + 1) // 5)\n"}, "626": {"problem_id": 4626, "answer": "for _ in range(int(input())):\n    a, b, c = map(int, input().split())\n    print(min(a, b, c))"}, "627": {"problem_id": 4627, "answer": "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    print('YES' if a[0]%2==0 else 'NO')"}, "628": {"problem_id": 4628, "answer": "n, m, k = list(map(int, input().split()))\ndist = [0] * k\ndist[0] = 1\nfor i in range(1, k):\n    if dist[i] == 0:\n        dist[i] = 0\n    elif dist[i] == 1:\n        dist[i] = min(dist[i], dist[i - 1] + 1)\nprint(sum(dist))\n"}, "629": {"problem_id": 4629, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    print(n)\n"}, "630": {"problem_id": 4630, "answer": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    s = set(p)\n    d = {}\n    for i in range(n):\n        if s.intersection(p[i]):\n            d[s.intersection(p[i])] += 1\n        else:\n            d[s.intersection(p[i])] = 1\n    print(len(d))\n"}, "631": {"problem_id": 4631, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\ndef distance(a, b):\n    return sum(a[i] - b[i] for i in range(n) if a[i]!= b[i])\n\ndef is_leetcode(code):\n    return code == '0'\n\ndef solve(a, b):\n    d = deque()\n    for i in range(len(a)):\n        d.append(min(d[i] + distance(a[i], b[i])))\n    return d\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    print(solve(x, x))\n\n__starting_point()"}, "632": {"problem_id": 4632, "answer": "import sys,io\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    print(\"YES\" if sum(a) <= n else \"NO\")\n"}, "633": {"problem_id": 4633, "answer": "import math\nfor _ in range(int(input())):\n    n,s = map(int,input().split())\n    if n>s:\n        print(n-s)\n    else:\n        m = math.ceil(s/n)\n        if m<0:\n            m = 0\n        elif m>0:\n            m = m+1\n        else:\n            m = m-1\n        print(m)"}, "634": {"problem_id": 4634, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = [0]*n\n    r = [0]*n\n    for i in range(n):\n        if l[i] == 0:\n            l[i] = 1\n        else:\n            l[i] = 0\n        r[i] = 1\n        continue\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        "}, "635": {"problem_id": 4635, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    s = input()\n    d = {}\n    for i in range(n):\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    d.update({i: 1})\n    print(d)\n"}, "636": {"problem_id": 4636, "answer": ""}, "637": {"problem_id": 4637, "answer": "for _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(sum(a[:k] for k in range(n, k+1)))\n"}, "638": {"problem_id": 4638, "answer": "import sys\nn,c = list(map(int,input().split()))\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\ndef traverse(l,r):\n    nonlocal a,b\n    nonlocal b\n    if l>r:\n        return\n    else:\n        for i in range(n-1):\n            if b[i]>a[i]:\n                traverse(l,r)\n                break\n        return\n\nfor i in range(n-1):\n    traverse(i,0)\n\nprint(traverse(1,1))\n"}, "639": {"problem_id": 4639, "answer": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    print(''.join(map(str, k)))"}, "640": {"problem_id": 4640, "answer": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    if x[0] == x[1] == x[2] == x[3] == x[4] == x[5] == x[6] == x[7] == x[8]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5] == x[6] == x[7] == x[8]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5] == x[6] == x[7]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5] == x[6]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4] == x[5]:\n        print(k)\n        continue\n    elif x[0] == x[1] == x[2] == x[3] == x[4"}, "641": {"problem_id": 4641, "answer": ""}, "642": {"problem_id": 4642, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, x, y = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    ans = 0\n    for i in range(n):\n        if a[i] > b[i]:\n            ans += 1\n        else:\n            ans += b[i] - a[i]\n    print(ans)"}, "643": {"problem_id": 4643, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\narr = list(map(int, input().split()))\n\nfor i in range(n):\n    l = input().rstrip()\n    arr[i] = sorted(arr, key=lambda x: x[1], reverse=True)\n\nprint(' '.join(map(str, arr)))"}, "644": {"problem_id": 4644, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print('YES' if sum(a) % 2 == 0 else 'NO')"}, "645": {"problem_id": 4645, "answer": "from sys import stdin,stdout\ndef main():\n    n = int(stdin.readline())\n    l = list(map(int,stdin.readline().split()))\n    print(main())\n\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    l = list(map(int,stdin.readline().split()))\n    print(main())\n"}, "646": {"problem_id": 4646, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(min(a[n-1]%2, a[n-1]%2))\n"}, "647": {"problem_id": 4647, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\nedges = []\nfor _ in range(n-1):\n    a,b = list(map(int,input().split()))\n    edges.append(a)\n    edges.append(b)\n\ndef dfs(v):\n    if v[0] == 0:\n        return 0\n    else:\n        v[0] = min(v[1],v[0])\n        return v[1]\n\n#print(edges)\n#print(edges[0])\n#print(edges[1])\n#print(edges[2])\n#print(edges[3])\n#print(edges[4])\n#print(edges[5])\n#print(edges[6])\n#print(edges[7])\n#print(edges[8])\n#print(edges[9])\n#print(edges[0])\n#print(edges[1])\n#print(edges[2])\n#print(edges[3])\n#print(edges[4])\n#print(edges[5])\n#print(edges[6])\n#print(edges[7])\n#print(edges[8])\n#print(edges[9])\n#print(edges[0])\n#print(edges[1])\n#print(edges[2])\n#print(edges[3])\n#print(edges[4])\n#print(edges[5])\n#print(edges[6])\n#print(edges[7])\n#print(edges[8])\n#print(edges[9])\n#print(edges[0])\n#print(edges[1])\n#print(edges[2])\n#print(edges[3])\n#print(edges[4])\n#print(edges[5])\n#print(edges[6])\n#print(edges[7])\n#print(edges[8])\n#print(edges[9])\n#print(edges[0])\n#print(edges[1])\n#print(edges[2])\n#print(edges[3])\n#print(edges[4])\n#print(edges[5])\n#print(edges[6])\n#print(edges[7])\n#print(edges[8])\n#print(edges[9])\n#print(edges[0])\n#print(edges[1])\n#print(edges[2])\n#print(edges[3])\n#print(edges[4])\n#print(edges[5])\n#print(edges[6])\n#print(edges[7])\n#print(edges[8])\n#print(edges[9])\n#print(edges[0])\n#print(edges[1])\n#print(edges[2])\n#print(edges[3])\n#print(edges[4])\n#print(edges[5])\n#print(edges[6])\n#print(edges[7])\n#print(edges[8])\n#print(edges[9])\n#print(edges[0])\n#print(edges[1])\n#print(edges[2])\n#print(edges[3])\n#print(edges[4])\n#print(edges[5])\n#print(edges[6])\n#print(edges[7])\n#print(edges[8])\n#print(edges[9])\n#print(edges[0])\n#print(edges[1])\n#print(edges[2])\n#print(edges[3])\n#print(edges[4])\n#print(edges[5])\n#print(edges[6])\n#print(edges[7])\n#print(edges[8])\n#print(edges[9])\n#print(edges[0])\n#print(edges[1])\n#print(edges[2])\n#print(edges[3])\n#print(edges[4])\n#print(edges[5])\n"}, "648": {"problem_id": 4648, "answer": "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l[0] + l[1])"}, "649": {"problem_id": 4649, "answer": "from collections import deque\nq = int(input())\nfor _ in range(q):\n    n, k = map(int, input().split())\n    s = input()\n    s = list(s)\n    l = len(s)\n    if k == 0:\n        print(0)\n        continue\n    ans = 0\n    for i in range(k):\n        if s[i] == 'R':\n            ans += 1\n        else:\n            ans += 1\n    print(ans)"}, "650": {"problem_id": 4650, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        a[i] = a[i-1]\n        ans += a[i]\n    print(ans)\n\nmain()\n"}, "651": {"problem_id": 4651, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = min(ans[i], l[i] + 1)\n    print(min(ans))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "652": {"problem_id": 4652, "answer": "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    students = list(map(int, input().split()))\n    print('YES' if students[0] == 1 else 'NO')\n"}, "653": {"problem_id": 4653, "answer": "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    a = k//2\n    b = a+1\n    ans = 0\n    for i in range(n):\n        if a-b >= 1:\n            ans += 1\n        else:\n            ans -= 1\n    print(ans)\n"}, "654": {"problem_id": 4654, "answer": "from collections import deque\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    print('YES' if n % 2 else 'NO')"}, "655": {"problem_id": 4655, "answer": "from math import ceil\nfor _ in range(int(input())):\n    a, b, c = map(int, input().split())\n    if a == b == c:\n        print(c)\n    else:\n        ans = 0\n        for i in range(a, b, c):\n            ans += c\n        print(ans)"}, "656": {"problem_id": 4656, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    s = input()\n    l = len(s)\n    \n    # \u5982\u4f55\u8981\u7528\u4e00\u4e2a\u6587\u5b57\u5217\u8868\uff0c\u540e\u9762\u6709\u4e00\u4e2a\u6587\u5b57\u5217\u8868\uff0c\u9700\u8981\u518d\u6b21\u8282\u70b9\uff0c\u53ef\u4ee5\u627e\u5230\u6587\u5b57\u5217\u8868\u91cc\u9762\uff0c\u5373\u53ef\u4ee5\u7528\u4e8e\u66f4\u65b0\n    # \u5982\u4f55\u8981\u6c42\u6587\u5b57\u5217\u8868\uff0c\u540e\u9762\u6709\u4e00\u4e2a\u6587\u5b57\u5217\u8868\uff0c\u9700\u8981\u518d\u6b21\u8282\u70b9\uff0c\u53ef\u4ee5\u627e\u5230\u6587\u5b57\u5217\u8868\u91cc\u9762\uff0c\u5373\u53ef\u4ee5\u7528\u4e8e\u66f4\u65b0\n    \n    # \u5982\u4f55\u60f3\u5230\u6587\u5b57\u5217\u8868\uff0c\u540e\u9762\u6709\u4e00\u4e2a\u6587\u5b57\u5217\u8868\uff0c\u9700\u8981\u518d\u6b21\u8282\u70b9\uff0c\u53ef\u4ee5\u627e\u5230\u6587\u5b57\u5217\u8868\u91cc\u9762\uff0c\u5373\u53ef\u4ee5\u7528\u4e8e\u66f4\u65b0\n    # \u5982\u4f55\u60f3\u5230\u6587\u5b57\u5217\u8868\uff0c\u540e\u9762\u6709\u4e00\u4e2a\u6587\u5b57\u5217\u8868\uff0c\u9700\u8981\u518d\u6b21\u8282\u70b9\uff0c\u53ef\u4ee5\u627e\u5230\u6587\u5b57\u5217\u8868\u91cc\u9762\uff0c\u5373\u53ef\u4ee5\u7528\u4e8e\u66f4\u65b0\n    maxi = 0\n    for i in range(n):\n        if s[i] == s[i-1]:\n            maxi = max(maxi, maxi + 1)\n        else:\n            maxi = max(maxi, maxi + 1)\n            \n    print(maxi)\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n         "}, "657": {"problem_id": 4657, "answer": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    l = [0] * k\n    for i in range(n):\n        l[i] = a[i]\n    print('NO')\n"}, "658": {"problem_id": 4658, "answer": "class Solution:\n    def reverseBits(self, n: int) -> int:\n        dp = [0] * (n + 1)\n        for i in range(1, n + 1):\n            dp[i] = 1\n            \n        for i in range(1, n + 1):\n            dp[i] = dp[i - 1] + int(str(i) + '0')\n            \n        return dp[n]"}, "659": {"problem_id": 4659, "answer": "class Solution:\n     def generate(self, numRows):\n         \"\"\"\n         :type numRows: int\n         :rtype: List[List[int]]\n         \"\"\"\n         if numRows == 0:\n             return []\n         \n         res = []\n         for i in range(1, len(numRows)):\n             res.append([])\n             \n         for j in range(len(numRows) - 1):\n             res.append([])\n             \n         return res"}, "660": {"problem_id": 4660, "answer": "from fun import filter_mail\n\ndef filter_mail(email):\n    email = email.split('.')\n    return email[0] == email[1] and email[0] == email[1] and email[1] == email[0]\n\ndef Lambda(s):\n    return email[0] if email[0] > 10 else email[1]"}, "661": {"problem_id": 4661, "answer": "from functools import reduce\n\ndef cube(n):\n    return reduce(lambda a, b, c: a + b + c, n)\n\ndef __starting_point():\n    try:\n        n = int(input())\n    except ValueError:\n        return\n\n__starting_point()"}, "662": {"problem_id": 4662, "answer": "# Definition for a tree node.\n# \n# Definition for a singly-linked list.\n# \n# Definition for a tree node with nodes in it.\n# \n# Copyright (C) Positko Kalinowska, Takeo Ochirov, Alexatech staff\n# Distributed software available with.\n# \n# Translators are welcome.\n# \n# Note: Don't use hashtags.\n# \n# Examples:\n# \n#         root = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,64,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,94,95,96,97,98,99,100,101,103,105,106,107,108,109,110,111,112,113,114,115,116,116,117,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,57,64,66,68,69,70,71,72,73,74,76,78,81,82,83,84,86,89,90,93,94,95,96,99,100,101,103,107,109,110,111,112,113,114,116,116,117,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,57,64,66,68,69,70,71,72,73,74,76,78,81,82,83,84,86,89,90,93,94,95,96,99,100,101,103,107,109,110,111,112,113,116,116,117,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,57,64,66,68,69,70,71,72,73,74,76,78,81,82,83,84,86,89,90,93,94,95,96,96,99,100,101,103,107,109,110,111,112,113,116,116,117,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,57,64,66,68,69,70,71,72,73,74,76,78,81,82,83,84,86,89,90,93,95,96,96,99,100,101,103,107,109,110,111,112,113,116,116,117,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,57,64,66,68,69,70,71,72,73,74,76,78,81,82,83,84,86,89,90,93,95,96,96,99,100,101,103,107,109,110,111,112,113,116,116,117,18,19,20,21,22,23,24,25,26,"}, "663": {"problem_id": 4663, "answer": "import re\n\ndef __starting_point():\n    n = int(input().strip())\n    print(\"YES\") if re.match(r'^[01]{9}$', input().strip(), n) else \"NO\"\n__starting_point()"}, "664": {"problem_id": 4664, "answer": "from collections import deque\n\ndef __starting_point():\n    M, N = list(map(int, input().split()))\n    M.sort()\n    N.sort()\n    print(N)\n\n__starting_point()"}, "665": {"problem_id": 4665, "answer": "import math\nn = eval(input())\nclass Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n        self.class = 'Class'\n        self.name = 'Name'\n        self.dist = 0.0\n        self.dist_x = 0.0\n        self.dist_y = 0.0\n        self.dist_x_y = 0.0\n        self.dist_y_x = 0.0\n        self.dist_y_y = 0.0\n        self.dist_x_y_x = 0.0\n        self.dist_y_y_x_y = 0.0\n        self.dist_x_y_y_x = 0.0\n        self.dist_y_y_y_x_y = 0.0\n        self.dist_x_y_y_y_x = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_x_y_y_y_x_y = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_x_y_y_y_x_y = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_x_y_y_y_x_y = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_x_y_y_y_x_y = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_x_y_y_y_x_y = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_x_y_y_y_x_y = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_x_y_y_y_x_y = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_x_y_y_y_x_y = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_x_y_y_y_x_y = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_x_y_y_y_x_y = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_x_y_y_y_x_y = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_x_y_y_y_x_y = 0.0\n        self.dist_y_y_y_y_x_y = 0.0\n        self.dist_x_y"}, "666": {"problem_id": 4666, "answer": "def is_odd(n):\n    return n%2==0 and n>5\n\ndef __starting_point():\n    n = int(input().strip())\n    check = {True: \"Not Weird\", False: \"Weird\"}\n    print(is_odd(check))\n\n__starting_point()"}, "667": {"problem_id": 4667, "answer": "def get_attr_number(node):\n    return node.getattr(node.getattr(node.getattr(node.getattr(node.getitem)), 'number'))\n\nprint(get_attr_number(get_node(0)))\n"}, "668": {"problem_id": 4668, "answer": "from math import *\n\ndef is_hypot(a, b, c, d):\n    return abs(a[0] - b[0]) < abs(a[1] - c[0]) < abs(a[2] - d[0])\n\ndef is_cos(a, b, c, d):\n    return abs(a[0] - b[0]) < abs(a[1] - c[0]) < abs(a[2] - d[0])\n\ndef is_sin(a, b, c, d):\n    return abs(a[0] - b[0]) < abs(a[1] - c[0]) < abs(a[2] - d[0])\n\ndef is_cosy(a, b, c, d):\n    return abs(a[0] - b[0]) > abs(a[1] - c[0]) > abs(a[2] - d[0])\n\ndef is_siny(a, b, c, d):\n    return abs(a[0] - b[0]) > abs(a[1] - c[0]) > abs(a[2] - d[0])\n\ndef is_cosy(a, b, c, d):\n    return abs(a[0] - b[0]) < abs(a[1] - c[0]) < abs(a[2] - d[0])\n\ndef is_cosy(a, b, c, d):\n    return abs(a[0] - b[0]) > abs(a[1] - c[0]) > abs(a[2] - d[0])\n\ndef is_cosy(a, b, c, d):\n    return abs(a[0] - b[0]) > abs(a[1] - c[0]) > abs(a[2] - d[0])\n\ndef is_atan(a, b, c, d):\n    return abs(a[0] - b[0]) < abs(a[1] - c[0]) < abs(a[2] - d[0])\n\ndef is_atan2(a, b, c, d):\n    return abs(a[0] - b[0]) > abs(a[1] - c[0]) > abs(a[2] - d[0])\n\ndef is_atan2(a, b, c, d):\n    return abs(a[0] - b[0]) > abs(a[1] - c[0]) > abs(a[2] - d[0])\n\ndef is_atan2(a, b, c, d):\n    return abs(a[0] - b[0]) > abs(a[1] - c[0]) > abs(a[2] - d[0])\n\ndef is_atan2(a, b, c, d):\n    return abs(a[0] - b[0]) > abs(a[1] - c[0]) > abs(a[2] - d[0])\n\ndef is_cosy(a, b, c, d):\n    return abs(a[0] - b[0]) > abs(a[1] - c[0]) > abs(a[2] - d[0])\n\ndef is_cosy(a, b, c, d):\n    return abs(a[0] - b[0]) > abs(a[1] - c[0]) > abs(a[2] - d[0])\n\ndef is_atan2(a, b, c, d):\n    return abs(a[0] - b[0]) > abs(a[1] - c[0]) > abs(a[2] - d[0])\n\ndef is_atan2(a, b, c, d):\n    return abs(a[0] - b[0]) > abs(a[1] - c[0]) > abs(a[2] - d[0])\n\ndef is_atan2(a, b, c, d):\n    return abs(a[0] - b[0]) > abs(a[1] - c[0]) > abs(a[2] - d[0])\n\ndef is_atan2(a, b, c, d"}, "669": {"problem_id": 4669, "answer": "from itertools import groupby\n\ndef is_vowel(letter):\n    return letter in ['a', 'e', 'i', 'o', 'u', 'y']\n\ndef score_words(words):\n    return sum(groupby(w) for w in words)"}, "670": {"problem_id": 4670, "answer": "# cook your dish here\ndef __starting_point():\n    s = input()\n    if s == \"M\":\n        return True\n    elif s == \"M\" or s == \"A\":\n        return True\n    else:\n        print(\"True\")\n        return False\n__starting_point()"}, "671": {"problem_id": 4671, "answer": "def wrapper(f):\n    def wrapper(f):\n        # complete the function\n        return ''.join(f.split('0'))\n    return wrapper"}, "672": {"problem_id": 4672, "answer": "from collections import Counter\n\nclass SegmentTree(object):\n    def __init__(self, marks):\n        self.marks = marks\n        self.freq = 0\n        self.marks_freq = 0\n        self.is_dictionary = False\n        self.is_compressed = False\n        self.n = len(marks)\n        self.n_compressed = 0\n        self.n_compressed_freq = 0\n        self.n_compressed_compressed = 0\n        self.n_compressed = 0\n        self.n_compressed_comp_freq = 0\n        self.n_comp_freq = 0\n        self.n_comp_comp_freq = 0\n        self.n_comp_comp_freq_comp = 0\n        self.n_comp_comp_freq_comp = 0\n        self.n_comp_comp_comp_freq_comp = 0\n        self.n_comp_comp_comp_freq_comp = 0\n        self.n_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_freq_comp = 0\n        self.n_comp_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_comp_freq_comp = 0\n        self.n_comp_comp_comp_comp_comp_freq_comp = 0\n        self.n_comp_comp_comp_comp_comp_freq_comp = 0\n        self.n_comp_comp_comp_comp_comp_freq_comp = 0\n        self.n_comp_comp_comp_comp_comp_freq_comp = 0\n        self.n_comp_comp_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_comp_comp_freq = 0\n        self.n_comp_comp_comp_comp_comp_comp_freq_comp = 0\n        self.n_comp_comp_comp_comp_comp_comp_comp_freq_comp = 0\n        self.n_comp_comp_comp_comp_comp_comp_comp_freq_comp"}, "673": {"problem_id": 4673, "answer": "from operator import itemgetter\n\ndef person_lister(f):\n    def inner(people):\n        return itemgetter(f, 0)\n    return inner(people)"}, "674": {"problem_id": 4674, "answer": "from itertools import permutations\n\ndef __starting_point():\n    x, y, z = list(map(int, input().split()))\n    print(__starting_point())\n\n__starting_point()"}, "675": {"problem_id": 4675, "answer": "from functools import reduce\nfrom operator import mul\n\n@lru_cache(None)\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a % b)\n\n@lru_cache(None)\ndef mul(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a % b)\n\n@lru_cache(None)\ndef mod(a):\n    if a == 0:\n        return a\n    return pow(a, b)\n\n@lru_cache(None)\ndef floordiv(a):\n    if a == 0:\n        return a\n    return floordiv(a % a)\n\n@lru_cache(None)\ndef floordiv2(a):\n    if a == 0:\n        return a\n    return floordiv(a % a)\n\n@lru_cache(None)\ndef ceil(a):\n    if a == 0:\n        return a\n    return ceil(a % a)\n\n@lru_cache(None)\ndef ceil2(a):\n    if a == 0:\n        return a\n    return ceil2(a % a)\n\n@lru_cache(None)\ndef mod2(a):\n    if a == 0:\n        return a\n    return pow(a, a)\n\n@lru_cache(None)\ndef mod2(a):\n    if a == 0:\n        return a\n    return mod2(a % a)\n\n@lru_cache(None)\ndef ceil2(a):\n    if a == 0:\n        return a\n    return ceil2(a % a)\n\n@lru_cache(None)\ndef ceil2(a):\n    if a == 0:\n        return a\n    return ceil2(a % a)\n\n@lru_cache(None)\ndef mod2(a):\n    if a == 0:\n        return a\n    return mod2(a % a)\n\n@lru_cache(None)\ndef mod2(a):\n    if a == 0:\n        return a\n    return mod2(a % a)\n\n@lru_cache(None)\ndef ceil2(a):\n    if a == 0:\n        return a\n    return ceil2(a % a)\n\n@lru_cache(None)\ndef ceil2(a):\n    if a == 0:\n        return a\n    return ceil2(a % a)\n\n"}, "676": {"problem_id": 4676, "answer": "def main():\n    s = input()\n    l = len(s)\n    for i in range(l):\n        s[i] = 'z'\n    print(''.join(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "677": {"problem_id": 4677, "answer": "def main():\n    s = input()\n    print(s)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "678": {"problem_id": 4678, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n-a[0])"}, "679": {"problem_id": 4679, "answer": "from collections import deque\n\ndef main():\n    s = input()\n    d = deque([])\n    for i in s:\n        d.append(i)\n        if len(d) == 3:\n            print('A')\n        else:\n            print('B')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "680": {"problem_id": 4680, "answer": "#!/usr/bin/env python3\n\ndef __starting_point():\n    a,b,c=map(int,input().split())\n    if a==b:\n        print(\"YES\")\n    elif a==c:\n        print(\"NO\")\n    else:\n        print(\"NEOS\")\n__starting_point()"}, "681": {"problem_id": 4681, "answer": "import sys\n\nsys.setrecursionlimit(10 ** 6)\n\ndef lis(n):\n    if n == 0:\n        return 0\n    else:\n        return int(n ** 0.5)\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(lis(n))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "682": {"problem_id": 4682, "answer": "import sys\nread = sys.stdin.read\n\ndef main():\n    a, b, h = map(int, read().split())\n    print((a+b+h)**2)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "683": {"problem_id": 4683, "answer": "N = int(input())\nA = list(map(int, input().split()))\nMOD = 10**9+7\nfor i in range(N-1):\n    A[i] = (A[i] + A[i+1])%MOD\nprint(sum(A))"}, "684": {"problem_id": 4684, "answer": "def main():\n    r, g, b = list(map(int, input().split()))\n    print((r, g, b))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "685": {"problem_id": 4685, "answer": "def main():\n    A, B, C = map(int, input().split())\n    d = 0\n    for i in range(A, B, C):\n        d += (2*i)\n    print(d)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "686": {"problem_id": 4686, "answer": "def main():\n    s = input()\n    for i in range(len(s)):\n        if s[i] == \"a\":\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "687": {"problem_id": 4687, "answer": "def main():\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(k-1)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "688": {"problem_id": 4688, "answer": "def main():\n    n, k = list(map(int, input().split()))\n    d = [[0] * n for _ in range(k)]\n    for i in range(n):\n        d[i][i] = 1\n    for i in range(k):\n        for j in range(1, n):\n            if d[i][j] == 0:\n                continue\n            elif d[i][j] == 1:\n                d[i][j] = 1\n            else:\n                d[i][j] = 1\n    print(len(d))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "689": {"problem_id": 4689, "answer": "K,N = list(map(int,input().split()))\nA = list(map(int,input().split()))\nprint(N-K)\n"}, "690": {"problem_id": 4690, "answer": "# cook your dish here\nfrom math import gcd\na, b, c, d = list(map(int, input().split()))\nl = []\nfor i in range(a, b + 1):\n    l.append(i)\nfor i in range(c, d + 1):\n    l.append(i)\nans = 0\nfor i in range(len(l)):\n    ans += gcd(l[i], l[i - 1])\nprint(ans)\n"}, "691": {"problem_id": 4691, "answer": "from sys import setrecursionlimit, atexit\nsetrecursionlimit(10**5)\nsetrecursionlimit(10**5)\ndef __starting_point():\n    n = int(input())\n    s = list(map(int, input().split()))\n    print(__starting_point())\n__starting_point()"}, "692": {"problem_id": 4692, "answer": "def hd(M):\n    if M == 0:\n        return 0\n    elif M == 1:\n        return 24*(int(M) - 1)\n    else:\n        return hd(M - 1) + 24*(int(M) - 1)\n\ndef hd_to_int(M):\n    if M == 0:\n        return 0\n    elif M == 1:\n        return 24*(int(M) - 1)\n    else:\n        return hd(M - 1) + 24*(int(M) - 1)\n\ndef hd(M):\n    if M == 0:\n        return 0\n    elif M == 1:\n        return 24*(int(M) - 1)\n    else:\n        return hd_to_int(M - 1) + 24*(int(M) - 1)\n\nprint(hd(12))\n"}, "693": {"problem_id": 4693, "answer": "def main():\n    a, b = list(map(int, input().split()))\n    print(a + b)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "694": {"problem_id": 4694, "answer": "from sys import stdin, stdout\nfrom bisect import bisect_left as bl, bisect_right as br, insort_left as insort\nfrom heapq import merge, heapify, heappop, heappush, nsmallest as smallest, nlargest as largest\nfrom collections import defaultdict as dd, deque, truediv, map, union, isdisp\nfrom functools import reduce, lru_cache\nfrom fractions import Fraction as fr, gcd as g, pow\nfrom operator import itemgetter\nfrom time import perf_counter as pf, time\nfrom fractions import Fraction as fr, gcd as g, pow\nfrom operator import itemgetter\nfrom decimal import Decimal as D\nfrom math import ceil, floor, log, sqrt, ceil, log_floor, sqrt_floor, log_sqrt\nfrom statistics import mean, median\nfrom heapq import merge, heapify, heappop, heappush, nsmallest, nlargest, nlargest_remaining\nfrom itertools import combinations as comb, permutations as perm, permutations as perm, per_combinations as perm, per_comb_perm as perm, per_comb_perm as perm, per_comb_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm_perm as perm, per_comb_perm_perm as perm, per_comb_perm_perm as perm, per_comb_perm_perm as perm, per_comb_perm_perm as perm, per_comb_perm_perm as perm, per_comb_perm_perm as perm, per_comb_perm_perm as perm)\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nfor _ in range(N):\n    a, b = list(map(int, input().split()))\n    A.append(a)\n    B.append(b)\nprint(min(A))"}, "695": {"problem_id": 4695, "answer": "from collections import defaultdict\ndef gcd(a, b):\n    if a == b:\n        return a\n    elif a in range(b, b + 1, b) or b not in [a, b+1]:\n        return gcd(b, a)\n    else:\n        return b\n\ndef main():\n    x, y = list(map(int, input().split()))\n    print(gcd(x, y))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "696": {"problem_id": 4696, "answer": "#https://atcoefee.jp/contests/arcene/arcene_squared/versions/START\n#https://atcoefee.jp/contests/arcene/squared/versions/START\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    a,b = map(int,readline().split())\n    print(a,b)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "697": {"problem_id": 4697, "answer": "# coding: utf-8\n# Your code here!\nimport math\nn,m=map(int,input().split())\nc=list(map(int,input().split()))\nif m==n:\n print(0)\nelse:\n print(m*(m+1)*math.log(m,2))"}, "698": {"problem_id": 4698, "answer": "from bisect import bisect_left as bl, bisect_right as br, bisect_left as brs, bisect_right as brs, insort as ins\nfrom heapq import heappush,heappop\nn = int(input())\nt = int(input())\nfor _ in range(n):\n    t, m = list(map(int, input().split()))\n    if m == 1:\n        print(t)\n    elif m == 2:\n        print(t - m)\n    else:\n        print(t - m + 1)\n"}, "699": {"problem_id": 4699, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10 ** 7)\n    n, k = map(int, input().split())\n    d = list(map(int, input().split()))\n    d.sort()\n    ans = 0\n    for i in range(n):\n        ans += d[i]\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "700": {"problem_id": 4700, "answer": "n, m = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\n# A is good, B is good\n# There are road in A, so A is good\n# There are road in B, so B is good\n# There are multiple good obs\n# So we can't do this\n# So we can't do this\nfor i in range(m):\n    x = A[i]\n    y = B[i]\n    if x > y:\n        print(0)\n    else:\n        print(1)\n"}, "701": {"problem_id": 4701, "answer": "def main():\n    n = int(input())\n    k = int(input())\n    print(sum(map(lambda x: x%k, list(map(lambda x: x%k, list(map(lambda x: x%k, list(map(lambda x: x%k, list(map(lambda x: x%k, list(map(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list(lambda x: x%k, list("}, "702": {"problem_id": 4702, "answer": "def main():\n    x = int(input())\n    if x < 0:\n        print(0)\n    else:\n        print(1)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "703": {"problem_id": 4703, "answer": "def main():\n    s = input()\n    l = len(s)\n    print(sum(l) ** 0.5)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "704": {"problem_id": 4704, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i]\nprint(s)"}, "705": {"problem_id": 4705, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(l[n-1])"}, "706": {"problem_id": 4706, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n    from collections import deque\n    from math import ceil, floor, sqrt, log\n    from bisect import bisect_left, bisect_right, insort\n    from functools import lru_cache\n    @lru_cache(maxsize=None)\n    def dfs(i, j):\n        if i == 0:\n            return 1\n        elif j == 0:\n            return 0\n        else:\n            return max(dfs(i+1, j), dfs(i, j-1))\n        \n    q = deque()\n    q.append((0, 0))\n    for i in range(1, len(q)):\n        for j in range(i, len(q[0])):\n            if q[i][j] == 'e' and q[i][j] == 'A' and q[i][j] == 'B' and q[i][j] == 'C' and q[i][j] == 'D' and q[i][j] == 'E':\n                q.append((i, j))\n                q.append((j, i))\n                \n    print('\\n'.join(map(str, q)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "707": {"problem_id": 4707, "answer": "from heapq import heappush,heappop\ns = list(map(int,input().split()))\nheappush(heappop(heappop(s),s) if s[-1]==1 else s[-2])\nprint(len(s))"}, "708": {"problem_id": 4708, "answer": "N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\n\ndef calc_accel(l, r):\n    if l == r:\n        return 0\n    else:\n        return (l + r) * (r - l)\n\naccel = calc_accel(N, K)\n\nprint(calc_accel(10, 10))"}, "709": {"problem_id": 4709, "answer": "import sys\ninput = sys.stdin.readline\ndef lis():\n return list(map(int, input().split()))\n \ndef main():\n sys.setrecursionlimit(200000)\n \n n = int(input())\n lis()\n \n"}, "710": {"problem_id": 4710, "answer": "from math import log2\ndef __starting_point():\n    x=int(input())\n    while x>= 1200:\n        x-=1\n        print(x)\n__starting_point()"}, "711": {"problem_id": 4711, "answer": "a,b,c=list(map(int,input().split()))\nprint(min(a,b,c))\n"}, "712": {"problem_id": 4712, "answer": "H, W = list(map(int, input().split()))\na = [0]*H\nfor i in range(H):\n    a[i] = W\nprint('\\n'.join(map(str, a)))"}, "713": {"problem_id": 4713, "answer": "from sys import setrecursionlimit\nsetrecursionlimit(10 ** 6)\nn = int(input())\ns = input()\nprint(max(s.split(), 2))"}, "714": {"problem_id": 4714, "answer": "def palindromic_count(num):\n    if num == 0:\n        return 0\n    else:\n        return int(num)\n\nn = 10000\nA,B = map(int,input().split())\nprint(palindromic_count(n))"}, "715": {"problem_id": 4715, "answer": "import math\ndef __starting_point():\n    a, b, c = list(map(int, input().split()))\n    print(c)\n__starting_point()"}, "716": {"problem_id": 4716, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N, K = map(int, readline().split())\n    l = list(map(int, readline().split()))\n    print(max(l))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "717": {"problem_id": 4717, "answer": "from bisect import *\n\ndef lcm(a, b):\n    return a*b // (a + b) // gcd(a, b)\n\ndef main():\n    x, a, b = lcm(map(int, input().split()), 10)\n    print(lcm(x, a))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "718": {"problem_id": 4718, "answer": "def main():\n    s = input()\n    d = {'y':'2017', 'z':'2017','s':'2017', 'e':'2017', 'e':'2017'}\n    for i in range(len(s)):\n        d[s[i]] = i\n        s = s[:i] + s[i+1:]\n    print(d.get(s,0))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "719": {"problem_id": 4719, "answer": "n = int(input())\ns = list(map(str, input().split()))\nl = []\nfor i in range(n):\n    s.append(s[-1] +'')\nl.sort()\nprint(''.join(l))"}, "720": {"problem_id": 4720, "answer": "# https://www.codechef.com/news/v/2276e4630a5374e67b7cb000001\nfrom sys import stdin, stdout\nfrom math import ceil, floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nmod = pow(10, 9) + 7\ndef inp(): return stdin.readline().strip()\ndef out(var, end=\"\\n\"): stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): stdout.write(' '.join(map(str, var)) + end)\ndef lmp(): return list(mp())\ndef mp(): return map(int, inp().split())\ndef smp(): return map(str, inp().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\ndef linalder(n): return n*div(n, 0)\ndef ljd(n, m, val=0): return [ljd(n, m) for j in range(m)]\ndef lj(n): return [ljd(n, m) for j in range(n)]\ndef lj(n): return [ljd(n, m) for j in range(n)]\ndef lzma(n): return [reduce(list.__add__, [lz(n), ljd(n), lj(n)]) for lz(n) in [ljd(n), lj(n)]]\ndef lz(n): return [lz(n, m) for m in range(n)]\ndef lz(n): return [lz(n, m) for m in range(n)]\ndef lj(n): return [ljd(n, m) for m in range(n)]\ndef lz(n): return [lz(n, m) for m in range(n)]\ndef lj(n): return [ljd(n, m) for m in range(n)]\ndef lz(n): return [lz(n, m) for m in range(n)]\n\ndef main():\n    n = inp()\n    l = linalder(n)\n    print(len(l))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "721": {"problem_id": 4721, "answer": "n,m=map(int,input().split())\na=[]\nfor i in range(n):\n    a.append(list(input()))\nprint(len(a))"}, "722": {"problem_id": 4722, "answer": "# cook your dish here\ndef gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\nn = int(input())\nprint(gcd(n, n))"}, "723": {"problem_id": 4723, "answer": "def main():\n    s = input()\n    l = len(s)\n    for i in range(l-1):\n        if s[i] == '?':\n            print(''.join(s[:i]))\n        else:\n            print(''.join(s[i:]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "724": {"problem_id": 4724, "answer": "def solve(R, G):\n    if R not in G:\n        return -1\n    elif G == R:\n        return R\n    else:\n        ans = 0\n        for i in range(G):\n            ans += int(R ** i)\n        return ans\n\ndef main():\n    R = int(input())\n    G = int(input())\n    print(solve(R, G))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "725": {"problem_id": 4725, "answer": "for _ in range(int(input())):\n s=input()\n print(len(s))"}, "726": {"problem_id": 4726, "answer": "# cook your dish here\ntry:\n    m,n,t=list(map(int,input().split()))\n    if t==3:\n        print(\"AC\")\n    elif t==1:\n        print(\"TLE\")\n    else:\n        a=[]\n        for i in range(m):\n            a.append(int(input()))\n        a.sort(reverse=True)\n        for i in range(n):\n            a.append(int(input()))\n        a.sort(reverse=True)\n        for i in range(t):\n            if a[i]==m:\n                print(\"AC\")\n                break\nexcept:\n    pass"}, "727": {"problem_id": 4727, "answer": "# cook your dish here\nfrom sys import stdin,stdout\ndef main():\n    input = stdin.readline\n    n = 4\n    for _ in range(n):\n        s = input().split(' ')\n        s = int(s[0])\n        print(s)\n        if len(s)==4:\n            print(0,end=' ')\n        else:\n            print(2,end=' ')\n        print(3,end=' ')\n        \ndef __starting_point():\n    main()\n__starting_point()"}, "728": {"problem_id": 4728, "answer": "# cook your dish here\ntry:\n    s = input()\n    n = len(s)\n    \n    while True:\n        print(n)\n        if s[0] == 'H':\n            n -= 1\n            continue\n        elif s[0] == 'C':\n            n -= 1\n            continue\n        elif s[0] == 'C_6':\n            n -= 1\n            continue\n        elif s[0] == 'H':\n            n -= 1\n            continue\n        elif s[0] == 'O':\n            n -= 1\n            continue\n        elif s[0] == 'C':\n            n -= 1\n            continue\n        elif s[0] == 'C_6':\n            n -= 1\n            continue\n        elif s[0] == 'H':\n            n -= 1\n            continue\n        elif s[0] == 'O':\n            n -= 1\n            continue\n        elif s[0] == 'C':\n            n -= 1\n            continue\n        elif s[0] == 'H':\n            n -= 1\n            continue\n        elif s[0] == 'C_6':\n            n -= 1\n            continue\n        elif s[0] == 'H':\n            n -= 1\n            continue\n        elif s[0] == 'O':\n            n -= 1\n            continue\n        elif s[0] == 'C':\n            n -= 1\n            continue\n        elif s[0] == 'C_6':\n            n -= 1\n            continue\n        elif s[0] == 'H':\n            n -= 1\n            continue\n        elif s[0] == 'O':\n            n -= 1\n            continue\n        elif s[0] == 'C':\n            n -= 1\n            continue\n        elif s[0] == 'H':\n            n -= 1\n            continue\n        elif s[0] == 'O':\n            n -= 1\n            continue\n"}, "729": {"problem_id": 4729, "answer": "def __starting_point():\n    s = input()\n    return any(a.count('A')!=0 for a in s)\n\n__starting_point()"}, "730": {"problem_id": 4730, "answer": "# cook your dish here\ndef floyd(L, n):\n    if n == 0:\n        return \"ok so far\"\n    elif n == 1:\n        return \"ok so far\"\n    else:\n        return floyd(L, n - 1)\n\ndef main():\n    input = str(input())\n    print(floyd(input, 0))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "731": {"problem_id": 4731, "answer": "for i in range(int(input())):\n n=int(input())\n if n==1:\n  print(\"Fold Up\")\n else:\n  print(\"Player 1\")\n elif n==2:\n  print(\"Re-sorted\")\n else:\n  print(\"Your answer must be at least \"+n+\"s.\")\n"}, "732": {"problem_id": 4732, "answer": "# cook your dish here\na = int(input())\nfor i in range(a):\n    b = int(input())\n    print(b)"}, "733": {"problem_id": 4733, "answer": "# cook your dish here\nn = int(input())\nd = {}\nfor i in range(n):\n    d[i] = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    if d.get(i)==None:\n        ans += 1\nprint(ans)"}, "734": {"problem_id": 4734, "answer": "# cook your dish here\ndef gcd(a,b):\n    if b==0:\n        return a\n    elif b==1:\n        return gcd(b,a%b)\n    else:\n        return gcd(b,a%b)\n\ndef main():\n    a,b=map(int,input().split())\n    print(gcd(a,b))\n\nmain()"}, "735": {"problem_id": 4735, "answer": "# cook your dish here\ndef __starting_point():\n    x,y=map(int,input().split())\n    print(\"yes\") if x==y else \"no\""}, "736": {"problem_id": 4736, "answer": "# cook your dish here\nfrom collections import defaultdict\ndef solve(n, k, d):\n    if n == 0:\n        return 0\n    elif k == 1:\n        return d[0]\n    else:\n        d[0] = 1\n        for i in range(1, k + 1):\n            d[i] += d[i - 1]\n        print(d[0])\n\ndef __starting_point():\n    solve(100, 0, 0)\n__starting_point()"}, "737": {"problem_id": 4737, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n    a,b=list(map(int,input().split()))\n    c=0\n    if a==0:\n        c=1\n        print(c)\n    elif b==0:\n        c=1\n        print(c)\n    else:\n        c=2\n        print(c)\n"}, "738": {"problem_id": 4738, "answer": "for _ in range(int(input())):\n s=input()\n k=0\n for i in range(len(s)):\n  if s[i]!=k:\n   k+=1\n  else:\n   break\n print(k)"}, "739": {"problem_id": 4739, "answer": "# cook your dish here\ndef count(s,n):\n    if s==0:\n        return 0\n    elif s==1:\n        return 1\n    else:\n        res=0\n        for i in range(n):\n            res+=s[i]\n        return res\n\n# Driver code\nn=int(input())\nM,N=map(int,input().split())\nsc=list(map(int,input().split()))\nd=list(map(int,input().split()))\n\n# Count me\nsc.sort(key=lambda x:x[1])\n\n# Driver code\nprint(count(sc,M))"}, "740": {"problem_id": 4740, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n    if(n%7 == 0):\n        print(1)\n    else:\n        print(5)\n"}, "741": {"problem_id": 4741, "answer": "for _ in range(int(input())):\n a,b=map(int,input().split())\n if a%3==0:\n  print(a/b)\n else:\n  print(a*b)"}, "742": {"problem_id": 4742, "answer": "from collections import defaultdict\ndef __starting_point():\n    import sys\n    input = sys.stdin.readline\n\n    # I'm not sure how to solve this problem, but can you figure out what relation the first note of the makethick is a transposition of the first?\n    l = int(input())\n    first = list(map(int, input().split()))\n    transposition = defaultdict(lambda: [])\n    for _ in range(l):\n        first.append(input())\n        transposition[first[-1]] = first[-1]\n    print(\"transposition\")\n__starting_point()"}, "743": {"problem_id": 4743, "answer": "# cook your dish here\ns = input()\nn = len(s)\nl = []\nfor i in range(n):\n    if s[i] == 'a':\n        l.append(s[i])\n    else:\n        l.append(s[i])\nprint(''.join(l))"}, "744": {"problem_id": 4744, "answer": "# cook your dish here\nfrom math import gcd as g \ndef __starting_point():\n t = int(input())\n for i in range(t):\n  a = input().split()\n  g = gcd(a[0], a[1])\n  g = gcd(g[0], g[1])\n  print(g)\n__starting_point()"}, "745": {"problem_id": 4745, "answer": "from sys import stdin,stdout\r\nfrom collections import deque,Counter,defaultdict,deque\r\nfrom heapq import *\r\nfrom bisect import *\r\nfrom queue import *\r\nfrom time import perf_counter\r\nmod = 10**9+7\r\nINF = 10**18\r\n\r\ndef main():\r\n    n,x = list(map(int,stdin.readline().split()))\r\n    if n==1:\r\n        return\r\n    elif n==2:\r\n        print(1)\r\n        return\r\n    else:\r\n        a = list(map(int,stdin.readline().split()))\r\n        b = list(map(int,stdin.readline().split()))\r\n        a.sort()\r\n        b.sort()\r\n        for i in range(n):\r\n            if a[i]>b[i]:\r\n                b[i] = b[i]\r\n                del a[i]\r\n            else:\r\n                b[i] = b[i]\r\n                del a[i]\r\n                del b[i]\r\n                \r\n        print(max(b))\r\n        \r\ndef __starting_point():\r\n    main()\r\n__starting_point()"}, "746": {"problem_id": 4746, "answer": "for _ in range(int(input())):\n n,c,m=map(int,input().split())\n if m==0:\n  print(0)\n elif m==1:\n  print(c)\n else:\n  x=int(input())\n  for i in range(1,x):\n   if c%2==0:\n    print(i)\n   else:\n    print(c//2)\n    \n"}, "747": {"problem_id": 4747, "answer": "# cook your dish here\nimport math\ndef dice_roll(dice, pips, times):\n    if times==0:\n        return 1\n    elif dice[pips[0]]!=dice[pips[1]]:\n        return math.inf\n    else:\n        return dice_roll(dice, pips, times-1)\n\ndef __starting_point():\n    print((len(list(map(int, input().split())))))\n    sys.stdin=open(\"input.txt\", \"r\")\n    print((len(list(map(int, input().split())))==1))\n__starting_point()"}, "748": {"problem_id": 4748, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn,m=map(int,stdin.readline().split())\nl=list(map(int,stdin.readline().split()))\nl.sort()\na,b=0,0\nfor i in range(m):\n    if l[i]==4:\n        a+=l[i]-2*l[i-1]\n    else:\n        b+=l[i]-2*l[i-1]\nprint(a,b)"}, "749": {"problem_id": 4749, "answer": "n=int(input())\nif n%2==0:\n print(1)\nelse:\n print(0)"}, "750": {"problem_id": 4750, "answer": "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\n\ndef __starting_point():\n    q = int(input())\n    for _ in range(q):\n        l, r, lr, rl, rr = inp()\n        print(l, r, lr, rl, rr)\n\n__starting_point()"}, "751": {"problem_id": 4751, "answer": "# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\nclass Solution:\n    def hasCycle(self, head: ListNode) -> bool:\n        if head is None:\n            return False\n        \n        l = head.pop()\n        r = head.pop()\n        \n        while l:\n            if l.val == r.val:\n                return True\n            elif l.next is None:\n                l.next = None\n            else:\n                r.next = None\n                l.next = None\n                r.next = None\n        return False"}, "752": {"problem_id": 4752, "answer": "class Solution:\n     def twoSum(self, nums, target):\n         \"\"\"\n         :type nums: List[int]\n         :type target: int\n         :rtype: List[int]\n         \"\"\"\n         if len(nums) == 0:\n             return nums\n         \n         i = 0\n         while i < len(nums):\n             if nums[i] + nums[i+1] == target:\n                 return i\n             i += 1\n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             "}, "753": {"problem_id": 4753, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n    a=int(input())\n    print(0 if a<6 and a%3==0 else a+1)"}, "754": {"problem_id": 4754, "answer": "n=int(input())\na=list(map(int,input().split()))\nif n%2==0:\n  print(1)\nelse:\n  print(2)\n"}, "755": {"problem_id": 4755, "answer": "import math\ndef recur(n):\n if n==0:\n  return math.inf\n elif n==1:\n  return 0\n else:\n  return recur(n-1)\n \n# cook your dish here\n"}, "756": {"problem_id": 4756, "answer": "# cook your dish here\ndef main():\n    n = int(input())\n    l = list(map(int,input().split()))\n    x = l[0]\n    y = l[1]\n    for i in range(2,n):\n        x = min(x,y)\n        y = max(y,x)\n    print(abs(x-y))\ndef __starting_point():\n    main()\n__starting_point()"}, "757": {"problem_id": 4757, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\nl.sort(reverse=True)\ns = 0\nfor i in range(n):\n    if l[i] == '1':\n        s += 1\nprint(s)"}, "758": {"problem_id": 4758, "answer": "from collections import Counter\nn, t = list(map(int, input().split()))\nl = list(map(int, input().split()))\nc = Counter(l)\nprint(len(c), end=' ')\n"}, "759": {"problem_id": 4759, "answer": "from statistics import mean\nn=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n a.append(mean(a[-1]))\nb.append(0)\nprint('\\n'.join(b))"}, "760": {"problem_id": 4760, "answer": "n,k=list(map(int,input().split()))\nif k%2==0:\n for i in range(1,n+1):\n  if i%2==0:\n   print(i)\n   continue\n elif k%2==1:\n  print(i)\nelse:\n print(n-k)\n"}, "761": {"problem_id": 4761, "answer": "# cook your dish here\nl,h = map(int,input().split())\nfor i in range(l):\n    if(l>=h):\n        print(0)\n    else:\n        print(l//h)"}, "762": {"problem_id": 4762, "answer": "import math\nn = int(input())\nprint(0.50000000)\nfor i in range(n):\n    print(math.log(i,2))"}, "763": {"problem_id": 4763, "answer": "from math import sqrt, ceil, log2, factorial, pi, sin, cos, pi2\nn = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n    s.append(\"d\"*i)\ns.sort(key=lambda x: x[0])\ns.append(\"single \"*sqrt(s[0]))\ns.append(\"triple \"*cos(s[0]))\ns.append(\"impossible\")\nprint(\"impossible\" if sum(s) == n else \"perfect\")"}, "764": {"problem_id": 4764, "answer": "n=int(input())\nfor i in range(n):\n a,b,c=map(int,input().split())\n d=a*b\n d.extend(c)\n d.extend(c)\n d.extend(a)\n d.extend(b)\n d.extend(c)\n print(d.calculateVolume(c))"}, "765": {"problem_id": 4765, "answer": "from math import ceil\nn=int(input())\nfor i in range(n):\n a,b=map(int,input().split())\n s=ceil(a/b)\n d=min(s,b)\n if d>1000000000:\n  print(d)\n else:\n  print(s)"}, "766": {"problem_id": 4766, "answer": "# cook your dish here\ntry:\n    n=int(input())\n    l=list(map(int,input().split()))\n    print(l[0])\nexcept:\n  pass"}, "767": {"problem_id": 4767, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn = int(stdin.readline())\ns = list(map(int,stdin.readline().split()))\nl = [0]*8\nfor i in range(n):\n    l[i] = int(stdin.readline())\n    s[i] = 0\nans = 0\nfor i in range(n):\n    ans += (s[i] - s[i-1])**2\nprint(ans)"}, "768": {"problem_id": 4768, "answer": "def lcm(a,b):\n if a>b:\n  return 0\n else:\n  return (a*b)//(a+b)\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\n# a.sort()\n# b.sort()\n# lcm(a,b)\n\n# print(lcm(a,b))\n\n# print(lcm(a,b-1))\n\n# print(lcm(a,b-2))\n\n# print(lcm(a,b-3))\n\n# print(lcm(a,b-4))\n\n# print(lcm(a,b-5))\n\n# print(lcm(a,b-6))\n\n# print(lcm(a,b-7))\n\n# print(lcm(a,b-8))\n\n# print(lcm(a,b-9))\n\n# print(lcm(a,b-10))\n\n# print(lcm(a,b-11))\n\n# print(lcm(a,b-12))\n\n# print(lcm(a,b-13))\n\n# print(lcm(a,b-14))\n\n# print(lcm(a,b-15))\n\n# print(lcm(a,b-16))\n\n# print(lcm(a,b-17))\n\n# print(lcm(a,b-18))\n\n# print(lcm(a,b-19))\n\n# print(lcm(a,b-20))\n\n# print(lcm(a,b-21))\n\n# print(lcm(a,b-22))\n\n# print(lcm(a,b-23))\n\n# print(lcm(a,b-24))\n\n# print(lcm(a,b-25))\n\n# print(lcm(a,b-26))\n\n# print(lcm(a,b-27))\n\n# print(lcm(a,b-28))\n\n# print(lcm(a,b-29))\n\n# print(lcm(a,b-30))\n\n# print(lcm(a,b-31))\n\n# print(lcm(a,b-32))\n\n# print(lcm(a,b-33))\n\n# print(lcm(a,b-34))\n\n# print(lcm(a,b-35))\n\n# print(lcm(a,b-36))\n\n# print(lcm(a,b-37))\n\n# print(lcm(a,b-38))\n\n# print(lcm(a,b-39))\n\n# print(lcm(a,b-40))\n\n# print(lcm(a,b-41))\n\n# print(lcm(a,b-42))\n\n# print(lcm(a,b-43))\n\n# print(lcm(a,b-44))\n\n# print(lcm(a,b-45))\n\n# print(lcm(a,b-46))\n\n# print(lcm(a,b-47))\n\n# print(lcm(a,b-48))\n\n# print(lcm(a,b-49))\n\n# print(lcm(a,b-50))\n\n# print(lcm(a,b-51))\n\n# print(lcm(a,b-52))\n\n# print(lcm(a,b-53))\n\n# print(lcm(a,b-54))\n\n# print(lcm(a,b-55))\n\n# print(lcm(a,b-56))\n\n# print(lcm(a,b-57))\n\n# print(lcm(a,b-58))\n\n# print(lcm(a,b-59))\n\n# print(lcm(a,b-60))\n\n# print(lcm(a,b-61))\n\n# print(lcm(a,b-62))\n\n# print(lcm(a,b-63))\n\n# print(lcm(a,b-64))\n\n# print(lcm(a,b-65))\n\n# print(lcm(a"}, "769": {"problem_id": 4769, "answer": "def gcd(a, b):\n if a == 0:\n  return b\n elif a == 1:\n  return gcd(b, a % b)\n else:\n  return -1\n\ndef __starting_point():\n test = int(input())\n while test>0:\n  test -= 1\n  print(gcd(test, str(test)))\n\n__starting_point()"}, "770": {"problem_id": 4770, "answer": "# cook your dish here\ndef will_take(n):\n if n==1:\n  return 1\n else:\n  return 0\n\ndef will_take(n):\n if n==1:\n  return 1\n else:\n  return 0\n\nn=int(input())\nM=int(input())\nfor i in range(n):\n a=list(map(int,input().split()))\n if will_take(a[0]):\n  print(\"Dr. Chaz\")\n else:\n  print(\"No piece of chicken left over!\")\n"}, "771": {"problem_id": 4771, "answer": "# cook your dish here\nn,v,l,w,h=map(int,input().split())\nl=list(map(int,input().split()))\nw=list(map(int,input().split()))\nh=list(map(int,input().split()))\nl.sort()\nd=[]\nfor i in range(n):\n    d.append(v-l[i])\nans=0\nfor i in range(n):\n    if d[i]>0:\n        ans+=d[i]-d[i-1]\nprint(ans)"}, "772": {"problem_id": 4772, "answer": "R,C = list(map(int,input().split()))\nstring = input()\nstring = string.lower()\n\ndef dfs(s):\n if s.startswith('#'):\n  return 1\n elif s.startswith('#'):\n  return 0\n else:\n  return -1\n\ndef solve(string,r,c=0):\n for i in range(r):\n  if string[i]!='':\n   dfs(string[i:i+c])\n   c+=1\n  else:\n   break\n\nprint(solve(string,r,c))"}, "773": {"problem_id": 4773, "answer": "from sys import stdin, stdout\ninput = stdin.readline\ndef encode(s):\n return''.join(sorted(encode(input()), reverse=True)[:2])\ndef decode(s):\n return '\\n'.join(sorted(encode(input()), reverse=True)[:2])"}, "774": {"problem_id": 4774, "answer": "# cook your dish here\ndef a(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef b(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef c(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef d(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef e(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef f(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef g(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef h(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef i(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef j(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef l(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef m(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef n(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef r(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef s(n):\n    if n == 0:\n        return '0'\n    elif n == 1:\n        return '1'\n    else:\n        return '0'\ndef z(n):\n    if n == 0"}, "775": {"problem_id": 4775, "answer": "import math\ndef rec(l):\n if l[0] == 'A' or l[-1] == 'B' or l[-1] == 'A':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif l[0] == 'A' or l[-1] == 'B' or l[-1] == 'T':\n  print(l[0])\n elif"}, "776": {"problem_id": 4776, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n    s,t=map(int,input().split())\n    if(s%100==0):\n        print(l[s%100])\n    else:\n        print(l[t%100])\n"}, "777": {"problem_id": 4777, "answer": "# cook your dish here\ndef __starting_point():\n    k=int(input())\n    print(0)\n    while k:\n        k-=1\n        print(k%(10**9+7))\n        k=k//10**9+7\n        \n        \n__starting_point()"}, "778": {"problem_id": 4778, "answer": ""}, "779": {"problem_id": 4779, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nfor i in range(n):\n    a[i]=int(input())\nprint(max(a))"}, "780": {"problem_id": 4780, "answer": "# cook your dish here\nfrom collections import Counter\nn = int(input())\nfor i in range(n):\n    a,b = map(int,input().split())\n    if a == b:\n        print(\"CBADEF\")\n    elif a==b:\n        print(\"CDBEAF\")\n    else:\n        print(\"\".join(map(str,a)))"}, "781": {"problem_id": 4781, "answer": "# cook your dish here\ndef main():\n    n = int(input())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    \n    for i in range(n):\n        a[i] = 'T'\n        b[i] = 'N'\n        \n    print(sum(a))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "782": {"problem_id": 4782, "answer": "n,m=list(map(int,input().split()))\nc=0\nfor i in range(m):\n    if i==n-1:\n        c+=1\n    elif i!=n-1:\n        c+=1\nprint(c)\n"}, "783": {"problem_id": 4783, "answer": "# cook your dish here\ntry:\n    m, n = list(map(int, input().split()))\n    a = [0]*(n+1)\n    for i in range(m):\n        a[i+1] = a[i] + a[i-1]\n    print(a[-1])\nexcept:\n    pass"}, "784": {"problem_id": 4784, "answer": "# cook your dish here\ndef read_ints():\n    x = int(input())\n    print(read_ints())\ndef read_ints(n):\n    x = int(input())\n    print(x)\n\ndef read_ints(n):\n    x = int(input())\n    print(x)\n\nn = read_ints(n)\nprint(n)\n"}, "785": {"problem_id": 4785, "answer": "from collections import Counter\r\n\r\ndef __starting_point():\r\n    input = input().strip()\r\n    counter = Counter(input)\r\n    print(counter)\r\n__starting_point()"}, "786": {"problem_id": 4786, "answer": "from sys import stdin,stdout\nn=int(stdin.readline())\nfor i in range(n):\n    k=list(stdin.readline().strip())\n    if k[0]=='c':\n        print(3)\n    elif k[0]=='c':\n        print(2)\n    else:\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)\n        k.pop(0)"}, "787": {"problem_id": 4787, "answer": "# cook your dish here\ns = input()\nprint(s[0])"}, "788": {"problem_id": 4788, "answer": "# cook your dish here\nimport math\nn = int(input())\nd = math.sqrt(n)\nprint(d)\nfor i in range(0,n):\n    if abs(d) == 90:\n        print(180)\n    else:\n        print(180+d)\n"}, "789": {"problem_id": 4789, "answer": "# cook your dish here\ndef __starting_point():\n K = int(input())\n print(__starting_point())\n\n__starting_point()"}, "790": {"problem_id": 4790, "answer": "for _ in range(int(input())):\n s = input()\n if s[0] == 'W':\n  print(1)\n else:\n  print(0)"}, "791": {"problem_id": 4791, "answer": "from math import sqrt\ns = []\nfor i in range(3, int(sqrt(s[0])+1)):\n    s.append(i)\ns.append(0)\nprint(max(s))"}, "792": {"problem_id": 4792, "answer": "def __starting_point():\n    import sys\n    input = sys.stdin.readline\n    name = list(map(int, input().split()))\n    print(name)\n__starting_point()"}, "793": {"problem_id": 4793, "answer": "s = int(input())\nfor i in range(s):\n a,b = list(map(int,input().split()))\n if a>b:\n  print(\"Possible\")\n else:\n  print(\"Lucky\")\n"}, "794": {"problem_id": 4794, "answer": "R, C = list(map(int, input().split()))\nfor i in range(R):\n cars = list(map(int, input().split()))\n if cars[0] == \"X\":\n  cars[1] = \"X\"\n elif cars[0] == \"X\":\n  cars[1] = \"X\"\n else:\n  cars[0] = \"X\"\n\nprint(cars[R-1] + cars[R-2])"}, "795": {"problem_id": 4795, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n    p,q=map(int,input().split())\n    if p==q:\n        print(int(pow(2,n-1)))\n    else:\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n        x=pow(2,n-1)\n "}, "796": {"problem_id": 4796, "answer": "# cook your dish here\na,b,c=list(map(int,input().split()))\nl=min(a,b)\nif(abs(l)>c):\n    print(l)\nelse:\n    print(c/l)\n"}, "797": {"problem_id": 4797, "answer": "# cook your dish here\ndef recur(s,l):\n    if l=='<':\n        return s\n    elif l=='>':\n        return recur(s,l)\n    else:\n        return s\n\ndef __starting_point():\n    print(recur(0,0))\n    print(recur(0,1))\n\n__starting_point()"}, "798": {"problem_id": 4798, "answer": "# cook your dish here\ndef solution(s):\n n, m = 0, 0\n for i in range(len(s)):\n  if s[i] =='':\n   m += 1\n  elif s[i] =='':\n   n += 1\n return ''.join(sorted(map(lambda x: x.lower()), key=lambda x: x[1], reverse=True))\n\ns = input()\nprint(s)"}, "799": {"problem_id": 4799, "answer": "for _ in range(int(input())):\n g,s,c=list(map(int,input().split()))\n if g==s:\n  print(\"G\\n\")\n elif g==c:\n  print(\"S\\n\")\n else:\n  print(\"Gold\\n\")\n"}, "800": {"problem_id": 4800, "answer": "# cook your dish here\nn,k=map(int,input().split())\nl=[]\nfor i in range(n):\n    d,s=map(int,input().split())\n    l.append(d)\n    s=s%(10**6)\n    if(s==0):\n        print(\"impossible\")\n    else:\n        print(\"perfect\")\n        return\nprint(\"impossible\")"}, "801": {"problem_id": 4801, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nl.sort()\nfor i in range(n):\n    print(l[i], end=' ')\nprint()"}, "802": {"problem_id": 4802, "answer": "from math import ceil\nn,m=map(int,input().split())\nl=[]\nfor i in range(n):\n    l.append(ceil(m/3600))\nl.sort()\nprint(l[-1])"}, "803": {"problem_id": 4803, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint(\"%.6f\" % a[0] * a[1])"}, "804": {"problem_id": 4804, "answer": "# cook your dish here\ndef f(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        res = 0\n        for i in range(n):\n            res += f(n - i)\n        return res\n\ndef main():\n    n = int(input())\n    s = list(map(int, input().split()))\n    print(f(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "805": {"problem_id": 4805, "answer": "def __starting_point():\n t = input().strip()\n for _ in range(t):\n  print(\"yes\")\n__starting_point()"}, "806": {"problem_id": 4806, "answer": "# cook your dish here\ndef combi(n):\n    res = []\n    for i in range(1,n+1):\n        res.append(str(i))\n    return res\n\ndef solve(s):\n    s = list(s)\n    m = len(s)\n    while m:\n        m -= 1\n        if s[m-1] == 'B':\n            s[m-1] = 'L'\n        elif s[m-1] == 'R':\n            s[m-1] = 'C'\n        else:\n            s[m-1] = 'C'\n        m -= 1\n    return ''.join(s)\n\ndef __starting_point():\n    solve(0)\n__starting_point()"}, "807": {"problem_id": 4807, "answer": "for _ in range(int(input())):\n x,y,n=list(map(int,input().split()))\n if(x%y==0):\n  print(\"Fizz\")\n else:\n  print(\"Buzz\")\n"}, "808": {"problem_id": 4808, "answer": "n,d = map(int,input().split())\r\nl = list(map(int,input().split()))\r\nl.sort()\r\nfor i in range(n-1):\r\n    if l[i]<d:\r\n        print(\"It has never snowed this early in %d years.\\n\",i)\r\n        break\r\n\r\nprint(\"It has never snowed this early in %d years.\\n\".format(i))"}, "809": {"problem_id": 4809, "answer": "for _ in range(int(input())):\n s,n=map(int,input().split())\n if s==0:\n  print(1)\n elif s==1:\n  print(2)\n else:\n  count=0\n  for i in range(s,n+1):\n   if i==0:\n    count+=1\n    break\n  if count>=2:\n   print(count)\n  else:\n   print(count-1)"}, "810": {"problem_id": 4810, "answer": "from collections import deque\ndef main():\n    q = deque([])\n    for _ in range(q.__next__()):\n        q.append(input())\n        if q[0] == 'k':\n            print(q[1])\n        else:\n            print(q[0])\ndef __starting_point():\n    main()\n\n__starting_point()"}, "811": {"problem_id": 4811, "answer": "# cook your dish here\ndef chk(n):\n if n==0:\n  return 0\n elif n==1:\n  return int(n)\n else:\n  res=0\n  for i in range(2,n+1):\n   res+=chk(n-i)\n  return res\n \ndef chk(n):\n if n==0:\n  return 0\n elif n==1:\n  return int(n)\n else:\n  res=0\n  for i in range(2,n+1):\n   res+=chk(n-i)\n  return res\n \nprint(chk(10))\n"}, "812": {"problem_id": 4812, "answer": "s = input()\nn = len(s)\nfor i in range(n):\n s1 = s.split(',')\n if(len(s1) == 2):\n  print(\"NO\")\n elif(len(s1) == 3):\n  print(\"YES\")\n else:\n  if(s1[0] ==''.join(s1[1:])):\n   print(\"YES\")\n  else:\n   print(\"NO\")\n"}, "813": {"problem_id": 4813, "answer": "def guess(string, perm):\n if string.isalpha():\n  return string\n else:\n  return \"WIN\"\n\ndef draw_lines(string, perm):\n for i in range(len(string)):\n  if string[i] not in perm:\n   perm.add(string[i])\n  elif string[i] in perm:\n   perm.remove(string[i])\n  else:\n   draw_lines(string, perm)\n\ndef __starting_point():\n test = int(input())\n for _ in range(test):\n  test -= 1\n  print(guess(input()))\n\n__starting_point()"}, "814": {"problem_id": 4814, "answer": "def inc_to_dec(n):\n if n%2==0:\n  return 1\n else:\n  return 2*n-1\n\ndef dec_to_dec(n):\n if n%2==0:\n  return 1\n else:\n  return 2*n-1\n\nn=int(input())\nfor i in range(n):\n name=input()\n print(dec_to_dec(name))\n"}, "815": {"problem_id": 4815, "answer": "def __starting_point():\n    n = int(input())\n    l = list(map(int, input().split()))\n    print('<Winner>\\n'+'<Sally>\\n'+'<Turn>\\n'+'<Plenty>\\n'+'<Thee>\\n'+'<Odd>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Nothing>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Nothing>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's None>\\n'+'<It's None>\\n'+'<It's Even>\\n'+'<It's"}, "816": {"problem_id": 4816, "answer": "# cook your dish here\ndef gcd(a,b):return b%a\ndef lcm(a,b):return (a*b)//gcd(a,b)\na,b=list(map(int,input().split()))\nx,y,z=list(map(int,input().split()))\n#print(lcm(x,y))\n#print(lcm(z,y))\ns=0\nfor i in range(len(a)):\n if(a[i]<x):\n  s+=abs(a[i]-x)\n else:\n  s+=abs(z-x)\nprint(s)\n"}, "817": {"problem_id": 4817, "answer": "# cook your dish here\ndef __starting_point():\n    x=int(input())\n    print(x)\n__starting_point()"}, "818": {"problem_id": 4818, "answer": "from sys import stdin,stdout\nn,m=map(int,stdin.readline().split())\nt=list(map(int,stdin.readline().split()))\nfor i in range(n):\n    t.append(stdin.readline().rstrip())\nl=[]\nfor i in range(m):\n    l.append(t[i-1].count(t[i]))\nl.sort(key=lambda x:x[1])\nl.reverse()\nprint(max(l))"}, "819": {"problem_id": 4819, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n    a,b = map(int,input().split())\n    if a%b == 0:\n        print(b)\n    else:\n        print(a)"}, "820": {"problem_id": 4820, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip(\"\\r\\n\")\n\ndef comp(n, b):\n if n == 0:\n  return 0\n elif n == 1:\n  return 1\n else:\n  return b\n\nn, b = list(map(int, input().split()))\n\ncomp(n, b)\n\nprint(comp(n, b))\n"}, "821": {"problem_id": 4821, "answer": "s = input()\r\ns.append('P')\r\ns.append('K')\r\ns.append('H')\r\ns.append('T')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns.append('KA')\r\ns."}, "822": {"problem_id": 4822, "answer": "import sys\ninput = sys.stdin.readline\n\nR,S,K = list(map(int,input().split()))\n#R = int(input())\n#S = int(input())\n#K = int(input())\n#R = int(input())\n#K = int(input())\n\ndef dfs(x,y):\n    if x == y:\n        return 1\n    else:\n        return 0\n\ndef dfs2(x,y):\n    if x == y:\n        return 1\n    else:\n        return 0\n\nfor i in range(R):\n    x,y = list(map(int,input().split()))\n    print(dfs(x,y))\n"}, "823": {"problem_id": 4823, "answer": "# cook your dish here\ndef gcd(a, b): \n if a == 0: \n  return b \n elif a == b: \n  return gcd(a, b) \n else: \n  return 0\n\nprint(gcd(75, 5))"}, "824": {"problem_id": 4824, "answer": "def f(i, j):\r\n    if i == 0:\r\n        return 0\r\n    elif j == 0:\r\n        return 1\r\n    else:\r\n        x = []\r\n        for i in range(len(i)):\r\n            x.append(i)\r\n        x.extend(y[0:i])\r\n        y[i] = x[i]\r\n        return len(x)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r"}, "825": {"problem_id": 4825, "answer": "from collections import Counter\n\ndef repl(s,n):\n    return s[n:] + '@' + str(n)\n\ndef switch(s,n,key):\n    if key not in s:\n        return False\n    else:\n        s[key] = '@' + repl(s[key],n)\n        return True\n\ndef __starting_point():\n    print(switch(s,n,key))\n\n__starting_point()"}, "826": {"problem_id": 4826, "answer": "import math\nn=int(input())\nif n%2==0:\n    print(\"Alice\")\nelse:\n    print(\"Bob\")\n"}, "827": {"problem_id": 4827, "answer": ""}, "828": {"problem_id": 4828, "answer": "def nop(l):\n    if l == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\":\n        return 4\n    elif l == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\":\n        return 8\n    elif l == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\":\n        return 8\n    else:\n        return 0\n\nnop = nop()\nprint(nop())"}, "829": {"problem_id": 4829, "answer": "def main():\n    l, r = list(map(int, input().split()))\n    if l % 2 == 0:\n        print(\"Even \")\n    elif r % 2 == 0:\n        print(\"Odd \")\n    else:\n        print(\"Not \")\n        return\n        \ndef __starting_point():\n    main()\n__starting_point()"}, "830": {"problem_id": 4830, "answer": "n=int(input())\nfor i in range(n):\n s=input()\n if(len(s)==1):\n  print(0)\n else:\n  print(s.count('1'))\n"}, "831": {"problem_id": 4831, "answer": "from sys import stdin,stdout\ns = input()\nn = len(s)\nfor i in range(n):\n s = stdin.readline().strip()\n s = s.split(' ')\n s = s[::-1]\n print(s)\n"}, "832": {"problem_id": 4832, "answer": "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n c+=a[i]\nprint(c)"}, "833": {"problem_id": 4833, "answer": "from collections import deque\nn,n = list(map(int,input().split()))\na = list(map(int,input().split()))\ns = sum(a)\nfor i in range(n):\n    if i == 0:\n        s -= a[i]\n    else:\n        s -= a[i-1]\nprint(s)"}, "834": {"problem_id": 4834, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    if a[0] == 1:\n        print(1)\n    elif a[0] == 2:\n        print(2)\n    else:\n        print(abs(a[1] - a[0]))\n"}, "835": {"problem_id": 4835, "answer": "for _ in range(int(input())):\n t,n,m=map(int,input().split())\n if m==1:\n  print(0)\n else:\n  z=t-n\n  print(z)"}, "836": {"problem_id": 4836, "answer": "n,c = list(map(int,input().split()))\nw = list(map(int,input().split()))\nmax_ = 0\nfor i in range(n):\n    if w[i] > c:\n        max_ = max(max_,i+1)\n    else:\n        break\nprint(max_)"}, "837": {"problem_id": 4837, "answer": "def __starting_point():\n    r=int(input())\n    n=int(input())\n    print(sum(map(lambda x: x[0],n)))\n__starting_point()"}, "838": {"problem_id": 4838, "answer": "import math\ndef __starting_point():\n n = int(input())\n times = list(map(int, input().split()))\n times.sort()\n print(math.ceil(times[0]/1.0))\n"}, "839": {"problem_id": 4839, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    ans += l[i]\nprint(ans)\n"}, "840": {"problem_id": 4840, "answer": "# cook your dish here\nfor _ in range(int(input())):\n    a,b,l=map(int,input().split())\n    if sum(a+1,b+1,a+1,b+1)>=4:\n        print('Tie')\n    else:\n        print('Tie')"}, "841": {"problem_id": 4841, "answer": "n = int(input())\nfor i in range(n):\n a = list(map(int, input().split()))\n if a == \"mumble\":\n  print(\"Nothing is fishy\")\n else:\n  print(\"Nothing is fishy\")"}, "842": {"problem_id": 4842, "answer": "# cook your dish here\nfrom sys import stdin, stdout\nn, = list(map(int,input().split()))\nd = {}\nfor i in range(n):\n    d[i] = int(input())\n    if i not in d:\n        d[i] = 0\n    else:\n        d[i] += 1\nprint(d.get(0,0))"}, "843": {"problem_id": 4843, "answer": "from math import sqrt\nn = int(input())\na = list(map(int, input().split()))\nc = []\nfor i in range(n):\n    x, y = input().split()\n    x, y = int(x), int(y)\n    if x == 0 or y == 0:\n        c.append(x)\n    elif x == 1 or y == 1:\n        c.append(y)\n    else:\n        print(\"CORRECT\")\n        print(c[0][0] == c[0][1])\n        print(\"\\n\".join(c))\n        \n    else:\n        print(\"CORRECT\")\n        print(\"\\n\".join(c))"}, "844": {"problem_id": 4844, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nfor i in range(n):\n    a[i] = list(map(int, input().split()))[0]\nprint(' '.join(map(str, a)))"}, "845": {"problem_id": 4845, "answer": "# cook your dish here\nfor i in range(int(input())):\n    d,m = map(int,input().split())\n    if(d==1 or m==1):\n        print(\"Monday\")\n    elif(d==2 or m==2):\n        print(\"Tuesday\")\n    elif(d==3 or m==3):\n        print(\"Wednesday\")\n    elif(d==4 or m==4):\n        print(\"Thursday\")\n    elif(d==5 or m==5):\n        print(\"Friday\")\n    elif(d==6 or m==6):\n        print(\"Saturday\")\n    else:\n        print(\"Sunday\")"}, "846": {"problem_id": 4846, "answer": "# cook your dish here\nl,d,x=map(int,input().split())\nfor i in range(d):\n    n,m=map(int,input().split())\n    if n<x:\n        print(n,m)\n    else:\n        print(m,n)"}, "847": {"problem_id": 4847, "answer": "from math import sqrt\r\n\r\ndef dijkstra(n, d, s):\r\n    if n == 0:\r\n        return 0\r\n    if n == 1:\r\n        return d[0]\r\n    if n == 2:\r\n        return d[1]\r\n    if n == 3:\r\n        return d[2]\r\n    if n == 4:\r\n        return d[3]\r\n    if n == 5:\r\n        return d[4]\r\n    if n == 6:\r\n        return d[5]\r\n    if n == 7:\r\n        return d[6]\r\n    if n == 8:\r\n        return d[7]\r\n    if n == 9:\r\n        return d[8]\r\n    if n == 10:\r\n        return d[9]\r\n    if n == 11:\r\n        return d[10]\r\n    if n == 12:\r\n        return d[11]\r\n    if n == 13:\r\n        return d[14]\r\n    if n == 14:\r\n        return d[15]\r\n    if n == 15:\r\n        return d[16]\r\n    if n == 16:\r\n        return d[17]\r\n    if n == 17:\r\n        return d[18]\r\n    if n == 18:\r\n        return d[19]\r\n    if n == 19:\r\n        return d[20]\r\n    if n == 20:\r\n        return d[21]\r\n    if n == 21:\r\n        return d[22]\r\n    if n == 23:\r\n        return d[23]\r\n    if n == 24:\r\n        return d[24]\r\n    if n == 25:\r\n        return d[25]\r\n    if n == 26:\r\n        return d[26]\r\n    if n == 25:\r\n        return d[27]\r\n    if n == 26:\r\n        return d[28]\r\n    if n == 25:\r\n        return d[29]\r\n    if n == 26:\r\n        return d[30]\r\n    if n == 27:\r\n        return d[31]\r\n    if n == 30:\r\n        return d[32]\r\n    if n == 33:\r\n        return d[33]\r\n    if n == 34:\r\n        return d[34]\r\n    if n == 35:\r\n        return d[35]\r\n    if n == 36:\r\n        return d[36]\r\n    if n == 37:\r\n        return d[38]\r\n    if n == 39:\r\n        return d[39]\r\n    if n == 40:\r\n        return d[41]\r\n    if n == 41:\r\n        return d[42]\r\n    if n == 43:\r\n        return d[43]\r\n    if n == 44:\r\n        return d["}, "848": {"problem_id": 4848, "answer": "from collections import Counter\nn,m=map(int,input().split())\nfreq=Counter(map(int,input().split()))\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfreq.update({0:1})\nfre"}, "849": {"problem_id": 4849, "answer": "from collections import Counter\ns = input()\nn = len(s)\nc = Counter(s)\nfor i in range(n):\n    c[s[i]].add(s[i])\nprint(''.join(c.values()))"}, "850": {"problem_id": 4850, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n l=[]\n for i in range(n):\n  l.append(list(input()))\n print(l[0])"}, "851": {"problem_id": 4851, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\nl.sort()\nprint(len(l))"}, "852": {"problem_id": 4852, "answer": "def __starting_point():\n try:\n  print((int(input())))\n except:\n  pass\n__starting_point()"}, "853": {"problem_id": 4853, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nm = int(input())\nfor i in range(m):\n    x = a[i]\n    print(x)\n"}, "854": {"problem_id": 4854, "answer": "n,c = map(int,input().split())\nsorted_list = list(map(int,input().split()))\nfor i in range(n):\n a = sorted_list[i]\n s = set(a)\n print(s.intersection(sorted_list))"}, "855": {"problem_id": 4855, "answer": "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = 0\nfor i in range(n):\n    if a[i] == \"S\":\n        c += 1\n    else:\n        b.append(c)\nprint(c)"}, "856": {"problem_id": 4856, "answer": "# cook your dish here\ndef gcd(a,b):\n if b == 0:\n  return a\n else:\n  return gcd(b, a%b)\n\nprint(gcd(19,437))\n"}, "857": {"problem_id": 4857, "answer": "# cook your dish here\nl,w=map(int,input().split())\nif l==0 or w==0:\n    print(\"NO\")\nelse:\n    print(\"YES\")"}, "858": {"problem_id": 4858, "answer": ""}, "859": {"problem_id": 4859, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn = int(stdin.readline())\nfor i in range(n):\n a,b,c,d,l = list(map(int,stdin.readline().split()))\n if a==0 or b==0 or c==0 or d==0 or l==0:\n  print(\"0\")\n elif a==0 or b==0 or c==0 or d==0 or l==0:\n  print(\"1\")\n else:\n  print(\"0\")\n"}, "860": {"problem_id": 4860, "answer": "import math\ndef __starting_point():\n n = int(input())\n count = 0\n for i in range(n):\n  if i % 2 == 0:\n   count += 1\n  else:\n   count += math.ceil(i / 2)\n print(count)\n__starting_point()"}, "861": {"problem_id": 4861, "answer": "from math import ceil\nn=int(input())\np=int(input())\nfor i in range(n):\n    s=int(input())\n    l=[]\n    for j in range(0,s):\n        l.append(pow(2,j))\n    print(ceil(l[-1]/p*s))"}, "862": {"problem_id": 4862, "answer": "def relationship(s):\n if len(s) == 0:\n  return 0\n else:\n  return 1\n\nn = int(input())\ns = list(map(int, input().split()))\n\nrelations = relationship(s)\n\nprint(relations)"}, "863": {"problem_id": 4863, "answer": "n = int(input())\nfor i in range(n):\n a, b, c, d = list(map(int, input().split()))\n if a == 0:\n  print(d)\n else:\n  print(a)\n"}, "864": {"problem_id": 4864, "answer": "for _ in range(int(input())):\n r,c,z=map(int,input().split())\n a=[]\n for i in range(r):\n  a.append(str(i+1))\n print(*a)"}, "865": {"problem_id": 4865, "answer": "# cook your dish here\nfor _ in range(int(input())):\n a,b,c=map(int,input().split())\n if a==b:\n  print(24*60)\n else:\n  print(min(a,b,c))"}, "866": {"problem_id": 4866, "answer": "import math\ndef __starting_point():\n    print(\"Hello, World!\\n\"))\n    s = input()\n    x = int(s.split(\" \"))\n    y = int(s[0])\n    if x == 1:\n        print(\"yup\")\n    else:\n        print(\"nope\")\n__starting_point()"}, "867": {"problem_id": 4867, "answer": "M,N=list(map(int,input().split()))\nL=list(map(int,input().split()))\nR=list(map(int,input().split()))\nD=list(map(int,input().split()))\nfor i in range(M-1):\n    if R[i]==L[i+1]:\n        R[i+1]-=1\n    elif R[i]==L[i+1]:\n        R[i+1]-=1\n    elif R[i]==L[i+1]:\n        R[i+1]-=1\nprint(''.join(R))\n"}, "868": {"problem_id": 4868, "answer": "def main():\n    s = input()\n    d = {}\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = set()\n        else:\n            d[s[i]].add(s[i])\n    print(*d)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "869": {"problem_id": 4869, "answer": "from sys import stdin,stdout\r\ndef diab():\r\n    return list(map(int,stdin.readline().split()))\r\ndef diab(n):\r\n    return bin(n)[2:]\r\n\r\ndef main():\r\n    n=int(stdin.readline())\r\n    print(diab())\r\n\r\ndef __starting_point():\r\n    main()\r\n\r\n__starting_point()"}, "870": {"problem_id": 4870, "answer": "from math import ceil\ndef dijkstra(n,s,g,k):\n    if k==0:\n        return \"use the stairs\"\n    if len(str(n))==0:\n        return \"kapewars\"\n    if ceil(n/k)==1:\n        return \"heapbrs\"\n    return \"heapbrs\"\nn,s,g,k=list(map(int,input().split()))\nl=[]\nfor i in range(0,n):\n    l.append(ceil(n/i))\nprint(l)\n"}, "871": {"problem_id": 4871, "answer": "n = int(input())\nstudents = []\nfor i in range(n):\n    s, t, k = map(int, input().split())\n    students.append(s)\nprint(\"%.6f\" % sum(students))"}, "872": {"problem_id": 4872, "answer": "n=int(input())\nfor i in range(n):\n a=list(map(int,input().split()))\n d=list(map(int,input().split()))\n d.sort()\n print(d[0]-d[1]*a[0]*a[1]*a[2]*a[3])"}, "873": {"problem_id": 4873, "answer": "# cook your dish here\ntry:\n for _ in range(int(input())):\n  s, h = map(int, input().split())\n  if s == h:\n   print(1)\n  else:\n   print(h - s)\nexcept:\n pass"}, "874": {"problem_id": 4874, "answer": "# cook your dish here\ndef dfs(n,m):\n    if m==0:\n        return 0\n    elif m==1:\n        return 1\n    else:\n        for i in range(n):\n            if str(i).isdigit():\n                return int(str(i)[0:m])\n        return 1\n\ndef dfs_breez_watch(n,m):\n    if m==0:\n        return 0\n    elif m==1:\n        return 1\n    else:\n        for i in range(n):\n            if str(i).isdigit():\n                return int(str(i)[0:m])\n        return 1\n\nT = dfs(3,3)\nprint(T)\n"}, "875": {"problem_id": 4875, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    input = lambda: sys.stdin.readline().strip()\n    output = lambda: sys.stdout.write(str(input()))\n    #print(input())\n    n = len(input())\n    for _ in range(n):\n        a, b, c = map(int, input().split())\n        if a == b == c:\n            print(\"Hello!\\n\")\n        else:\n            print(\"Hello!\\n\")\n\nmain()"}, "876": {"problem_id": 4876, "answer": "n = int(input())\nmenu = list(map(int, input().split()))\nfor i in range(n):\n    print(menu[i], end=' ')\nprint()"}, "877": {"problem_id": 4877, "answer": "# cook your dish here\na,b=map(int,input().split())\nfor i in range(b):\n a,b=map(int,input().split())\n print(a*b)"}, "878": {"problem_id": 4878, "answer": "R = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,41,42,43,44,45,46,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,99,100,101,103,104,105,106,107,108,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,125,126,128,129,131,132,133,134,135,136,137,138,149,151,152,153,154,155,156,167,168,169,180,181,182,183,184,186,187,188,189,189,189,189,89,89,90,91,94,95,96,97,98,99,99,100,101,104,105,106,107,108,109,110,111,112,113,115,116,119,120,121,122,123,124,125,126,129,131,132,133,134,135,136,137,138,149,151,152,153,154,155,156,167,168,169,180,181,182,183,184,186,187,188,189,189,189,89,90,91,94,95,96,97,98,99,100,101,103,105,106,107,108,109,110,111,112,113,115,116,119,120,121,122,123,124,125,126,129,131,132,133,134,135,136,137,138,149,151,152,153,154,156,167,168,169,180,181,182,183,184,186,187,188,189,189,189,89,90,91,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,112,113,115,116,119,120,121,122,123,124,125,126,129,131,132,133,134,135,136,137,138,149,151,152,153,154,156,167,168,169,180,181,182,183,184,186,187,188,189,189,189,89,90,91,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,112,113,115,116,119,120,121,122,123,124,125,126,129,131,132,133,134,135,136,137,138,149,151,152,153,154,156,167,168,169,180,181,182,183,184,186,187,188,189,189,189,89,90,91,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,112,113,115,116,119,120,121,122,123,124,125,126,129,131,132,133,134,135,136,137,138,149,151,152,153,154,156,167,168,169,180,181,182,183,184,186,187,188,189,189,189,89,90,91,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,112,113,115,116,119,120,121,122,123,124,125,126,129,131,132,133,134,135,136,137,138,149,151,152,153,154,156,167,168,169,180"}, "879": {"problem_id": 4879, "answer": "# cook your dish here\ndef f(x):\n    if x==0:\n        return \"No\"\n    else:\n        return \"Yes\"\n\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nif m==0:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"}, "880": {"problem_id": 4880, "answer": "from collections import defaultdict\nn, m = map(int, input().split())\nkey = defaultdict(lambda: 0)\nfor i in range(n):\n    key[i] = 'a'*26\n    l = list(map(str, input().split()))\n    l.sort()\n    c = 0\n    for j in range(len(l)):\n        if l[j] == key[j]:\n            c += m\n        elif l[j] == key[j]:\n            c += m\n        else:\n            break\n    print(c)"}, "881": {"problem_id": 4881, "answer": "def __starting_point():\n n=int(input())\n if n%2==0:\n  print(\"Even\")\n else:\n  print(\"Odd\")\n__starting_point()"}, "882": {"problem_id": 4882, "answer": "import math\ndef factorial(n):\n if n==1:\n  return 1\n else:\n  return math.factorial(n)\n \nn=int(input())\nl=list(map(int,input().split()))\nprint(factorial(n))"}, "883": {"problem_id": 4883, "answer": "def check(lst, word):\n if len(word) == 1:\n  return True\n elif len(word) == 2:\n  return False\n else:\n  for i in range(len(word)):\n   if word[i] == word[i-1]:\n    return False\n  return True\n\nn = int(input())\nlst = list(map(int,input().split()))\ns = []\nfor i in range(n):\n s.append(input())\nprint(\"yes\") if s[0] == \"yes\" else print(\"no\")"}, "884": {"problem_id": 4884, "answer": "# cook your dish here\nn,p=map(int,input().split())\nl=list(map(int,input().split()))\nl.sort()\nprint(l[0])"}, "885": {"problem_id": 4885, "answer": ""}, "886": {"problem_id": 4886, "answer": "import math\nn,k=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    l.append(x)\nfor i in range(1,n+1):\n    if(k%i==0):\n        print(\"You will become a monkey\")\n    else:\n        if(math.pow(i,k-1,2)==1):\n            print(\"You will become a monkey\")\n        else:\n            print(\"You will become a monkey\")\n            break\n        else:\n            print(\"You will become a monkey\")\n"}, "887": {"problem_id": 4887, "answer": "import math\na = int(input())\nprint(a)"}, "888": {"problem_id": 4888, "answer": "for _ in range(int(input())):\n n, t = list(map(int, input().split()))\n a = [0]*n\n a[0] = 1\n for i in range(1, n):\n  if i%4==0:\n   a[i] = a[i-1] + a[i-2]\n print(sum(a))"}, "889": {"problem_id": 4889, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n    l=list(map(int,input().split()))\n    print(l[0])"}, "890": {"problem_id": 4890, "answer": "from sys import stdin,stdout\r\nn,m,s,d = list(map(int,stdin.readline().split()))\r\ns = sorted(list(map(int,stdin.readline().split())))\r\nd = sorted(list(map(int,stdin.readline().split())))\r\nprint('\\n'.join(sorted(d)))\r\n"}, "891": {"problem_id": 4891, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n    a = list(map(int,input().split()))\n    print(a[0])"}, "892": {"problem_id": 4892, "answer": "n=int(input())\nfor i in range(n):\n a=input().split()\n a[0]=int(a[0])\n a[1]=int(a[1])\n print(a[2])"}, "893": {"problem_id": 4893, "answer": "# cook your dish here\ndef gcd(a,b):\n if b==0:\n  return a\n else:\n  return gcd(b,a%b)\n \nn=int(input())\nd=[]\nfor i in range(n):\n a,b=map(int,input().split())\n d.append(a)\nprint(min(d))"}, "894": {"problem_id": 4894, "answer": ""}, "895": {"problem_id": 4895, "answer": "n = int(input())\nl = list(map(int,input().split()))\npossible = [0]*n\nfor i in range(n):\n    possible[i] = possible[i-1] + l[i]\nprint('\\n'.join(possible))"}, "896": {"problem_id": 4896, "answer": "import sys,math,itertools,heapq,collections,re,math_fun,array,bisect,sys_truncate,time,functools\ninput=sys.stdin.readline\nn=int(input())\nl=list(map(int,input().split()))\nprint(l[0])"}, "897": {"problem_id": 4897, "answer": "n = int(input())\nfor i in range(n):\n    a, b = map(int, input().split())\n    print(a + b)"}, "898": {"problem_id": 4898, "answer": "n=int(input())\nl=list(map(int,input().split()))\ntemp=0\nfor i in range(n):\n temp=temp+1\n if(temp>2):\n  print(i)\n else:\n  print(min(temp,i+1))\n"}, "899": {"problem_id": 4899, "answer": "def main():\n    s = input().strip()\n    print(\"Hello, \" + s[0] + \"!\" + s[1:])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "900": {"problem_id": 4900, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef dfs(i, j):\n    if i == j:\n        return 0\n    res = []\n    for x in a[i]:\n        if x < 0:\n            res.append(dfs(x, j))\n            break\n    return res\n\nfor i in range(n):\n    print(a[i], end=\" \")\n    print(\"\".join(a[i] for i in range(n)))\n"}, "901": {"problem_id": 4901, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nstdout.write('abcde'*26)\nstdin.readline\nstdout.write('ZRKB'*26)\nstdin.readline\nstdin.write(''.join(map(str,stdin.readline().split())))"}, "902": {"problem_id": 4902, "answer": "s = input()\r\ns.extend(\"abcdefghijklmnopqrstuvwxyz\")\r\ns.extend(\"defghijklmnopqrstuvwxyz\")\r\ns.extend(\"abcdefghijklmnopqrstuvwxyz\")\r\ns.extend(\"defghijklmnopqrstuvwxyz\")\r\ns.extend(\"defghijklmnopqrstuvwxyz\")\r\ns.extend(\"defghijklmnopqrstuvwxyz\")\r\ns.extend(\"abcdefghijklmnopqrstuvwxyz\")\r\ns.extend(\"defghijklmnopqrstuvwxyz\")\r\ns.extend(\"defghijklmnopqrstuvwxyz\")\r\ns.extend(\"defghijklmnopqrstuvwxyz\")\r\ns.extend(\"abcd\" if s.count(\"a\")>s.count(\"a\") else \"\")\r\ns.extend(\"bcd\" if s.count(\"b\")>s.count(\"b\") else \"\")\r\ns.extend(\"bcdfghjklmnopqrstuvwxyz\")\r\ns.extend(\"bcd\" if s.count(\"b\")>s.count(\"c\") else \"\")\r\ns.extend(\"bcd\" if s.count(\"b\")>s.count(\"c\") else \"\")\r\ns.extend(\"bcdfghjklmnopqrstuvwxyz\")\r\ns.extend(\"bcd\" if s.count(\"b\")>s.count(\"c\") else \"\")\r\ns.extend(\"bcd\" if s.count(\"b\")>s.count(\"c\") else \"\")\r\ns.extend(\"bcd\" if s.count(\"b\")>s.count(\"c\") else \"\")\r\ns.extend(\"bcd\" if s.count(\"b\")>s.count(\"c\") else \"\")\r\ns.extend(\"acd\" if s.count(\"a\")>s.count(\"a\") else \"\")\r\ns.extend(\"acd\" if s.count(\"a\")>s.count(\"a\") else \"\")\r\ns.extend(\"acd\" if s.count(\"a\")>s.count(\"a\") else \"\")\r\ns.extend(\"bncd\" if s.count(\"b\")>s.count(\"b\") else \"\")\r\ns.extend(\"bncd\" if s.count(\"b\")>s.count(\"b\") else \"\")\r\ns.extend(\"bncd\" if s.count(\"b\")>s.count(\"b\") else \"\")\r\ns.extend(\"bncd\" if s.count(\"b\")>s.count(\"b\") else \"\")\r\ns.extend(\"bcdfghjklmnopqrstuvwxyz\")\r\ns.extend(\"bcdfghjklmnopqrstuvwxyz\")\r\ns.extend(\"bcdfghjklmnopqrstuvwxyz\")\r\ns.extend(\"bcdfghjklmnopqrstuvwxyz\")\r\ns.extend(\"btnoopqrstuvwxyz\")\r\ns.extend(\"btnoopqrstuvwxyz\")\r\ns.extend(\"btnoopqrstuvwxyz\")\r\ns.extend(\"btnoopqrstuvwxyz\")\r\ns.extend(\"bsd\" if s.count(\"b\")>s.count(\"b\") else \"\")\r\ns.extend(\"bsd\" if s.count(\"b\")>s.count(\"b\") else \"\")\r\ns.extend(\"bsd\" if s.count(\"b\")>s.count(\"b\") else \"\")\r\ns.extend(\"bcd\" if s.count(\"b\")>s.count(\"b\") else \"\")\r\ns.extend(\"bcd\" if s.count(\"b\")>s.count(\"b\") else \"\")\r\ns.extend(\"bcd\" if s.count(\"b\")>s.count(\"b\") else \"\")\r\ns.extend(\"bcdfghjklmnopqrstuvwxyz\")\r\ns.extend(\"bcdfghjklmnop"}, "903": {"problem_id": 4903, "answer": "# cook your dish here\ndef gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return b%a\n\na = input()\nb = input()\nprint(gcd(a, b))\n"}, "904": {"problem_id": 4904, "answer": "def rec(n,a,b):\n if n>10:\n  return a,b\n elif n==10:\n  return a,b\n else:\n  return a,b\n \nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nprint(rec(n-1,a,b))"}, "905": {"problem_id": 4905, "answer": "# cook your dish here\nn,m=map(int,input().split())\nd=list(map(int,input().split()))\nfor i in range(m):\n a,b,l=list(map(int,input().split()))\n if l==0:\n  print(0)\n elif l==1:\n  print(abs(a-b)//(abs(a-b)+1))\n else:\n  print(abs(a-b)//(abs(a-b)+1))\n"}, "906": {"problem_id": 4906, "answer": "from collections import Counter\n\ndef run_length(s):\n    return sum(c.count(c) for c in s) // len(s)\n\ndef __starting_point():\n    input = input().strip()\n    print(run_length(input()))\n\n__starting_point()"}, "907": {"problem_id": 4907, "answer": "# cook your dish here\ndef gcd(a,b):\n if b==0:\n  return a\n else:\n  return gcd(b,a%b)\n \nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nprint(gcd(a,b))"}, "908": {"problem_id": 4908, "answer": "import math\ndef __starting_point():\n t = int(input().strip())\n while t!=0:\n  print(t)\n__starting_point()"}, "909": {"problem_id": 4909, "answer": "n=int(input())\nl=list(map(int,input().split()))\nfor i in range(n-1):\n    if l[i]==1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "910": {"problem_id": 4910, "answer": "n=int(input())\nwhile(n>0):\n a=input().split()\n a=int(a[0])\n if(a[1]==\"w\"):\n  print(\"w\")\n elif(a[1]==\"M\"):\n  print(\"M\")\n elif(a[1]==\"H\"):\n  print(\"H\")\n else:\n  print(\"Invalid\" if(a[1]==\"M\" or a[1]==\"H\" or a[1]==\"H\"))\n n=n-1\n if(n>0):\n  print(\"1\")\n elif(n==0):\n  print(\"0\")\n else:\n  print(\"Invalid\" if(n==0 or n==1) else \"1\")"}, "911": {"problem_id": 4911, "answer": "# cook your dish here\nfrom collections import deque\ndef __starting_point():\n    d = {}\n    for _ in range(int(input())):\n        atts = list(map(int, input().split()))\n        d[atts[0]] =''.join(map(str, atts[1:]))\n        print([' '.join(sorted(list(d.items()), key=len)))%1])\n__starting_point()"}, "912": {"problem_id": 4912, "answer": "def is_prime(n):\n if n%2==0:\n  return 1\n else:\n  return 0\n\ndef __starting_point():\n try:\n  l = int(input())\n  for i in range(l):\n   x = list(map(int,input().split()))\n   if is_prime(x):\n    print(\"YES\")\n   else:\n    print(\"NO\")\n except:\n  pass"}, "913": {"problem_id": 4913, "answer": "n=int(input())\r\nvaccine=0\r\nfor i in range(n):\r\n    l=input().lower()\r\n    if l[0]=='Y':vaccine+=1\r\n    elif l[0]=='N':vaccine-=1\r\n    elif l[0]=='Y':vaccine+=vaccine-vaccine-1\r\n    else:vaccine+=vaccine-vaccine-1\r\nprint(vaccine)"}, "914": {"problem_id": 4914, "answer": "n=int(input())\nfor i in range(n):\n a,b,c,a,b,c=list(map(str,input().split()))\n if(a=='B' and b=='A'):\n  print(c)\n elif(a=='A' and b=='C'):\n  print(c)\n else:\n  print(c)\n"}, "915": {"problem_id": 4915, "answer": "from math import ceil\nn=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n if l[i]==\"A\":\n  s+=ceil(l[i]-1)\n else:\n  s+=1\nprint(s)"}, "916": {"problem_id": 4916, "answer": "n, k = map(int, input().split())\nl = []\nfor i in range(n):\n x, y = map(int, input().split())\n l.append(x)\nfor i in range(k):\n print(l[i], end=' ')\n print()"}, "917": {"problem_id": 4917, "answer": "import math\nn=int(input())\nfor i in range(n):\n a,b=map(int,input().split())\n if a==b:\n  print(\" edward is right\")\n else:\n  if math.gcd(a,b)==1:\n   print(\" edward is right\")\n  else:\n   print(\" gunilla has a point\")"}, "918": {"problem_id": 4918, "answer": "from collections import deque\ndef query(l,a,b):\n    if l>=b:\n        return 0\n    else:\n        l.append(b)\n        q=deque(l)\n        while q:\n            q.popleft()\n            q.append(a)\n            q.append(b)\n        return len(q)\n\nn,q=map(int,input().split())\nl=list(map(int,input().split()))\ns=set(l)\ns.add(0)\ns.add(0)\ns.add(0)\ns.add(0)\ns.add(0)\ns.add(0)\ns.add(0)\ns.add(0)\ns.rotate(30)\nprint(query(s,a,b))\n"}, "919": {"problem_id": 4919, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    s = input()\n    l.append(s)\n    q = int(input())\n    for j in range(q):\n        s = input()\n        print(j, end=' ')\n        print(s.count(' '), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' ')\n        print(s.count('1'), end=' '"}, "920": {"problem_id": 4920, "answer": "from sys import stdin,stdout\ns = stdin.readline().strip()\nfor _ in range(int(s)):\n    print(s.count('z') + '%d' % (s.count('a') + 1))"}, "921": {"problem_id": 4921, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 1000000007\n\ndef inp():\n    return list(map(int, input().split()))\n\ndef inpl():\n    return list(map(int, input().split()))\n\ndef lmp():\n    return list(map(int, input().split()))\n\ndef lpn():\n    return list(map(int, input().split()))\n\ndef lr():\n    return list(map(int, input().split()))\n\ndef main():\n    #-------------------input--------------------------------------#\n    #-------------------output--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------#\n    #-------------------input--------------------------------------"}, "922": {"problem_id": 4922, "answer": "# cook your dish here\nimport sys\n \ndef __starting_point():\n    s = sys.stdin.readline().strip()\n    m = int(s[0])\n    n = int(s[1])\n    \n    if m == 3:\n        print('True')\n    elif m == 2:\n        print('False')\n    else:\n        for i in range(3, m + 1):\n            if s[i] == 'True':\n                print('True')\n                continue\n            if s[i] == 'False':\n                print('False')\n                continue\n            if s[i] == 'True':\n                print('True')\n                continue\n            if s[i] == 'False':\n                print('False')\n                continue\n            if s[i] == 'True':\n                print('True')\n                continue\n            if s[i] == 'False':\n                print('False')\n                continue\n            if s[i] == 'True':\n                print('True')\n                continue\n            if s[i] == 'False':\n                print('False')\n                continue\n            if s[i] == 'True':\n                print('True')\n                continue\n            if s[i] == 'False':\n                print('False')\n                continue\n            if s[i] == 'True':\n                print('False')\n                continue\n            if s[i] == 'True':\n                print('True')\n                continue\n            if s[i] == 'False':\n                print('False')\n                continue\n            if s[i] == 'True':\n                print('True')\n                continue\n            if s[i] == 'False':\n                print('False')\n                continue\n            if s[i] == 'True':\n  "}, "923": {"problem_id": 4923, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n    b.append(a[i]*i)\nb.sort()\nans = 0\nif len(b) == n:\n    print(\"none\")\nelse:\n    ans = \"no\"\n    for i in range(n-1):\n        if b[i] > b[i+1]:\n            break\n        elif b[i] == b[i+1]:\n            ans += 1\n        else:\n            break\nprint(ans)"}, "924": {"problem_id": 4924, "answer": "from math import ceil\ntry:\n    a=int(input())\n    b=int(input())\n    if a==0:\n        print(\"0\")\n    elif b==0:\n        print(\"1\")\n    else:\n        print(\"2\")\nexcept:\n    pass"}, "925": {"problem_id": 4925, "answer": "from math import ceil\ndef loo(n):\n    return ceil(n**0.5)\n\n\ndef solve(n, k):\n    if k == 0:\n        return 0\n    elif k == 1:\n        return sum(1 for i in range(n) if i % k == 0)\n    else:\n        return sum(1 for i in range(n) if i % k == 0)\n\n\ndef __starting_point():\n    solve(100000)\n__starting_point()"}, "926": {"problem_id": 4926, "answer": "from math import log\nn=int(input())\nl=[]\nfor i in range(n):\n x=int(input())\n l.append(x)\nfor i in range(n):\n x=log(x,2)\n print(x)\n"}, "927": {"problem_id": 4927, "answer": "def main():\n    n,p,q=list(map(int,input().split()))\n    if n==1:\n        print(\"paul\")\n    elif n==2:\n        print(\"q\")\n    else:\n        a=pow(2,n-1,p)\n        b=pow(2,n-2,p)\n        if a==b:\n            print(\"paul\")\n        else:\n            print(\"oppen\")\n            \ndef __starting_point():\n    main()\n__starting_point()"}, "928": {"problem_id": 4928, "answer": "n = int(input())\r\nc = 0\r\nfor i in range(n):\r\n    if i % 2 == 0:\r\n        c += 1\r\n    else:\r\n        c += c//2\r\nprint(c)"}, "929": {"problem_id": 4929, "answer": "s = input()\np = input()\nfor i in range(0, len(s)):\n    if s[i] == p[i]:\n        print(\"Yes\")\n    else:\n        print(\"No\")"}, "930": {"problem_id": 4930, "answer": "# cook your dish here\ndef dec(s):\n if s.isalpha():\n  return s[0]\n else:\n  return ''.join(s[1:-1])\n\nl = list(map(int,input().split()))\nprint(dec(l))"}, "931": {"problem_id": 4931, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n x,y = map(int,input().split())\n if x%y == 0:\n  print(\"ALL GOOD\")\n else:\n  print(\"ALL GOOD\")"}, "932": {"problem_id": 4932, "answer": "import math\ndef __starting_point():\n a,b,c,d = list(map(int,input().split()))\n if (a==1 and b==1 and c==1 and d==1):\n  print(0)\n elif (a==1 and b==1 and c==1 and d==1):\n  print(1)\n else:\n  print(2)\n__starting_point()"}, "933": {"problem_id": 4933, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n    s=list(map(int,input().split()))\n    print(s[0])"}, "934": {"problem_id": 4934, "answer": "# cook your dish here\nimport math\nl = 0\nfor i in range(0,len(l)):\n l += int(math.sqrt(l[i])*2)\nprint(l)"}, "935": {"problem_id": 4935, "answer": "# cook your dish here\nfrom math import ceil\ntry:\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = 0.0\n    for i in range(n):\n        a = ceil(a*l[i]/l[i]*l[i-1])\n    print(a)\nexcept:\n    pass"}, "936": {"problem_id": 4936, "answer": "n = int(input())\ntemperature = [0]*n\nfor i in range(n):\n    temp = input()\n    temp.append(temperature[i] + temp[-1])\nprint(min(max(temperature),temperature[-1]))"}, "937": {"problem_id": 4937, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n    a = int(input())\n    print(max(map(int, input().split())))"}, "938": {"problem_id": 4938, "answer": "def doldp(n,m):\n    if m<n:\n        return 0\n    elif m==n:\n        return 1\n    else:\n        return max(map(int,input().split()))\n\ndef __starting_point():\n    X=int(input())\n    print(doldp(X,10))\n__starting_point()"}, "939": {"problem_id": 4939, "answer": "n = int(input())\ns = 0\nfor i in range(n - 1):\n    if s == 0:\n        s += 1\n    elif s == s - 1:\n        s -= 1\n    else:\n        s -= 2\nprint(s)"}, "940": {"problem_id": 4940, "answer": "for _ in range(int(input())):\n n,m=map(int,input().split())\n s=list(map(int,input().split()))\n l=[]\n for i in range(n):\n  if s[i]=='1':\n   l.append(i)\n  else:\n   l.append(s[i])\n print(*l)"}, "941": {"problem_id": 4941, "answer": "# cook your dish here\nn = int(input())\ns = input()\nd = {}\ne = []\nc = []\nfor i in range(n):\n    d[i] =''.join(sorted(d.items(), key=lambda x: x[1], reverse=True))\n    e.append(d[i])\nc.append(0)\nfor i in range(n):\n    if s[i] in d:\n        print(i, end=' ')\n    else:\n        print(n-i+1, end=' ')\n        \n"}, "942": {"problem_id": 4942, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n l.append(int(input()))\nprint(l[0])"}, "943": {"problem_id": 4943, "answer": "# cook your dish here\nimport math\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    x,y=map(int,input().split())\n    # x,y=map(int,input().split())\n    # x,y=map(int,input().split())\n    if x==0:\n        print(0)\n    elif y==0:\n        print(0)\n    else:\n        print(math.floor(math.sqrt(x-y))+1)\n"}, "944": {"problem_id": 4944, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\nprinters = []\nfor i in range(n):\n    print(1)\n    print(bisect_left(printers, i))\n    print(bisect_right(printers, i+1))\n    print(bisect_left(printers, i+1))\n    print(bisect_right(printers, i+1))\n    print(bisect_left(printers, i+1))\n"}, "945": {"problem_id": 4945, "answer": "for _ in range(int(input())):\n a,b=map(int,input().split())\n m,s=map(int,input().split())\n r=a+b\n print(max(r,m))"}, "946": {"problem_id": 4946, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(list(map(int,input().split())))\nprint(l.index(max(l)))"}, "947": {"problem_id": 4947, "answer": "import math\ndef distance(d,n):\n if n==0:\n  return d\n else:\n  return round(d*math.sin(math.sqrt(n)),2)\n\nprint(distance(0.0,1000))"}, "948": {"problem_id": 4948, "answer": "from math import sqrt\nn,s = list(map(int,input().split()))\nl = list(map(int,input().split()))\nr = list(map(int,input().split()))\nc = 0\nfor i in range(n):\n    r[i] = sqrt(r[i]*r[i])\n    c += 1\nprint(c)"}, "949": {"problem_id": 4949, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n l.append(int(input()))\nprint(\"NE\" if l.count(1)==l.count(2) else \"DA\")"}, "950": {"problem_id": 4950, "answer": "n = int(input())\nfor i in range(n):\n    s = int(input())\n    print(s)"}, "951": {"problem_id": 4951, "answer": "from itertools import accumulate\nN = int(input())\nfor i in range(N):\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[0], len(a) - 1)\n"}, "952": {"problem_id": 4952, "answer": "# cook your dish here\nfor _ in range(int(input())):\n s=input()\n if len(s)==1:\n  print(\"Runoff!\")\n else:\n  print(\"No candidate\\n\")\n"}, "953": {"problem_id": 4953, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn = int(input())\ncantina = [int(x) for x in input().split()]\ncantina.sort()\nans = []\nfor i in range(n):\n a, b = map(int, input().split())\n if a == b:\n  ans.append(0)\n else:\n  ans.append(1)\nprint(len(ans))"}, "954": {"problem_id": 4954, "answer": "n = int(input())\nfor i in range(n):\n a = int(input())\n if a == 0:\n  print(\"Nothing\")\n else:\n  print(\"You are free to choose\")\n"}, "955": {"problem_id": 4955, "answer": "n = int(input())\nl = list(map(int,input().split()))\nnotes = [0]*n\nfor i in range(n):\n    x,y = map(int,input().split())\n    notes[x] = y\n    if x == y:\n        print(\"A\")\n    elif x%2 == 0:\n        print(\"B\")\n    elif x%2 == 1:\n        print(\"C\")\n    elif x%2 == 2:\n        print(\"D\")\n    elif x%2 == 3:\n        print(\"E\")\n    elif x%2 == 4:\n        print(\"F\")\n    elif x%2 == 5:\n        print(\"G\")\n    elif x%2 == 6:\n        print(\"H\")\n    elif x%2 == 7:\n        print(\"H\")\n    elif x%2 == 8:\n        print(\"I\")\n    elif x%2 == 9:\n        print(\"J\")\n    elif x%2 == 10:\n        print(\"K\")\n    elif x%2 == 11:\n        print(\"L\")\n    elif x%2 == 12:\n        print(\"M\")\n    elif x%2 == 13:\n        print(\"N\")\n    elif x%2 == 14:\n        print(\"O\")\n    elif x%2 == 15:\n        print(\"P\")\n    elif x%2 == 16:\n        print(\"Q\")\n    elif x%2 == 17:\n        print(\"R\")\n    elif x%2 == 18:\n        print(\"S\")\n    elif x%2 == 19:\n        print(\"T\")\n    elif x%2 == 20:\n        print(\"U\")\n    elif x%2 == 21:\n        print(\"V\")\n    elif x%2 == 22:\n        print(\"W\")\n    elif x%2 == 23:\n        print(\"X\")\n    elif x%2 == 24:\n        print(\"Y\")\n    elif x%2 == 25:\n        print(\"Z\")\n    elif x%2 == 26:\n        print(\"A\")\n    elif x%2 == 27:\n        print(\"B\")\n    elif x%2 == 28:\n        print(\"C\")\n    elif x%2 == 30:\n        print(\"D\")\n    elif x%2 == 32:\n        print(\"E\")\n    elif x%2 == 33:\n        print(\"F\")\n    elif x%2 == 33:\n        print(\"G\")\n    elif x%2 == 33:\n        print(\"H\")\n    elif x%2 == 33 == 33:\n        print(\"H\")\n    elif x%2 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33 == 33"}, "956": {"problem_id": 4956, "answer": "s = input()\nfor i in range(0,len(s)):\n    if s[i] in \"aeiou\":\n        print(\"dae ae ju traeligt va\")\n    else:\n        print(\"haer talar vi rikssvenka\")"}, "957": {"problem_id": 4957, "answer": "# cook your dish here\nimport bisect\nfor _ in range(int(input())):\n    n,m=map(int,input().split())\n    print(' '.join(map(str,list(zip(*(x,y))))))"}, "958": {"problem_id": 4958, "answer": "from collections import Counter\nn = int(input())\nl = list(map(int,input().split()))\nl.sort(key=lambda x:x[0])\ns = [0]*n\nfor i in range(n):\n    s[i] = s[i-1] + l[i]\nprint(s[n-1])"}, "959": {"problem_id": 4959, "answer": "import math\r\ndef __starting_point():\r\n    s = int(input())\r\n    print(s)\r\n__starting_point()"}, "960": {"problem_id": 4960, "answer": "# cook your dish here\ndef binary_to_octal(num):\n    if num < 0:\n        return ''\n    else:\n        return num%3\n\ndef __starting_point():\n    binary_to_octal(int(input()))\n\n__starting_point()"}, "961": {"problem_id": 4961, "answer": "# cook your dish here\nR,S=map(int,input().split())\nfor i in range(R):\n s=input()\n if s[0]=='o':\n  print(1)\n else:\n  print(0)"}, "962": {"problem_id": 4962, "answer": "n, l = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ndef dfs(i, j):\n    if i == j:\n        return 1\n    elif A[i] == B[j]:\n        return 0\n    else:\n        return 1 + dfs(A[i], B[j])\n\nfor i in range(n):\n    A[i] = dfs(A[i], l)\nprint('LADC')\n"}, "963": {"problem_id": 4963, "answer": "n = int(input())\nfor i in range(n-1):\n    l = list(map(int,input().split()))\n    print(l[0])"}, "964": {"problem_id": 4964, "answer": "n, h, l = list(map(int, input().split()))\nl = max(l, h)\nc = {}\nfor i in range(l):\n    c[i] = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append(c.get(i, 0))\nans.sort(reverse=True)\nprint(' '.join(ans))"}, "965": {"problem_id": 4965, "answer": "n = int(input())\r\nl = list(map(int,input().split()))\r\nl.sort()\r\nd = {}\r\nfor i in range(n-1):\r\n    d[i] = min(l[i],d.get(i,0)+1)\r\nprint(\"\\n\".join(d.items()))"}, "966": {"problem_id": 4966, "answer": "n, p, k = map(int, input().split())\r\nl = []\r\nfor i in range(n):\r\n    l.append(int(input()))\r\nl.sort()\r\nprint(l[0])"}, "967": {"problem_id": 4967, "answer": "n=int(input())\nfor i in range(n):\n a,b=map(int,input().split())\n print(max(a,b))"}, "968": {"problem_id": 4968, "answer": "# cook your dish here\nn,s,r=list(map(int,input().split()))\nif s%2!=0:\n    print(0)\nelse:\n    print(n-s+1)\n    \n    \n"}, "969": {"problem_id": 4969, "answer": "# cook your dish here\ndef ceil(x): \n if x<0: \n  return 0 \n else: \n  return x \n\nn=int(input())\na=[]\nfor i in range(n):\n a.append(int(input()))\nprint(0.000000000)"}, "970": {"problem_id": 4970, "answer": "from collections import Counter\ns = input()\nfor i in range(1,s[0]):\n c = Counter(s[i])\n print(c.most_common())"}, "971": {"problem_id": 4971, "answer": "# cook your dish here\nm = int(input())\nfor i in range(m):\n    x = 0\n    if x>10:\n        x = 10\n    print(x)\n"}, "972": {"problem_id": 4972, "answer": "# cook your dish here\ndef f(n):\n if n==0:\n  return 1\n else:\n  return 0\n \ndef main():\n n=int(input())\n for i in range(n):\n  k=f(n)\n  print(k)\n\ndef __starting_point():\n main()\n__starting_point()"}, "973": {"problem_id": 4973, "answer": "def rec(i, j, k):\r\n    if i == j:\r\n        return 0\r\n    elif i == 0:\r\n        return 1\r\n    else:\r\n        x = j - i\r\n        y = k - j\r\n        if x == 0:\r\n            return 0\r\n        else:\r\n            return min(rec(i-1, j, k), rec(i-1, j, k-1))\r\n\r\nn = int(input())\r\nboard = [['.' for i in range(n)] for j in range(n)]\r\nprint(rec(0, n-1, n))\r\n"}, "974": {"problem_id": 4974, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nR,N = list(map(int,input().split()))\n\nfor _ in range(N):\n    r,n = list(map(int,input().split()))\n    if n == 1:\n        print(\"too late\")\n    else:\n        if any(int(i) for i in range(r)):\n            print(\"room number\")\n        else:\n            print(\"room number\")\n            \n"}, "975": {"problem_id": 4975, "answer": "from collections import defaultdict\nd = defaultdict(lambda: 0)\nfor _ in range(int(input())):\n    d[input()] += 1\n    s = input()\n    l = len(s)\n    a = list(s)\n    b = list(s)\n    for i in range(l):\n        if s[i] == 'X':\n            b.append('Y')\n        else:\n            b.append('X')\n            a.append(b[-1] +'')\n            a.append(b[-1] +'')\n            l -= 1\n            if l == 0:\n                print(''.join(a))\n            elif l == 1:\n                print(''.join(b[-1] +'' + b[-1] +'' + a[-1]))\n            else:\n                print(''.join(b[-1] +'' + b[-1] +'' + a[-1]))\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n "}, "976": {"problem_id": 4976, "answer": "import math\nn = int(input())\ng = list(map(int, input().split()))\nprint(\"The gopher can escape.\")"}, "977": {"problem_id": 4977, "answer": "def f(a, b, c, d):\n    if c>d:\n        return False\n    if a[c]!=b[d]:\n        return False\n    if a[c]!=b[d]:\n        return False\n    if a[c]>b[d]:\n        return False\n    return True\n\nn=int(input())\na=list(map(int,input().split()))\nc=int(input())\nt=0\nfor i in range(n):\n    if f(a,b,c,d):\n        print(i)\n    else:\n        print(n)\n"}, "978": {"problem_id": 4978, "answer": "# cook your dish here\nn,m=map(int,input().split())\nfor i in range(n):\n s=input()\n l=list(s)\n if len(l)==m:\n  print('V',end=' ')\n else:\n  print('V',end=' ')\n"}, "979": {"problem_id": 4979, "answer": "n=int(input())\r\nl=list(map(int,input().split()))\r\nif n==1:\r\n    print(l[0])\r\nelse:\r\n    print(l[n-1])"}, "980": {"problem_id": 4980, "answer": "# cook your dish here\nfrom collections import deque\ndef gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\nn = int(input())\nboxes = list(map(int, input().split()))\nfor i in range(n):\n    box = boxes[i]\n    box_s = set(box)\n    box_s.add(1)\n    box_s.add(2)\n    box_s.add(3)\n    box_s.add(4)\n    box_s.add(5)\n    box_s.add(6)\n    box_s.add(7)\n    box_s.add(8)\n    box_s.add(9)\n    box_s.add(10)\n    box_s.add(11)\n    box_s.add(12)\n    box_s.add(13)\n    box_s.add(14)\n    box_s.add(15)\n    box_s.add(16)\n    box_s.add(17)\n    box_s.add(18)\n    box_s.add(19)\n    box_s.add(20)\n    box_s.add(21)\n    box_s.add(22)\n    box_s.add(23)\n    box_s.add(24)\n    box_s.add(25)\n    box_s.add(26)\n    box_s.add(27)\n    box_s.add(28)\n    box_s.add(29)\n    box_s.add(30)\n    box_s.add(31)\n    box_s.add(32)\n    box_s.add(33)\n    box_s.add(34)\n    box_s.add(35)\n    box_s.add(36)\n    box_s.add(37)\n    box_s.add(38)\n    box_s.add(39)\n    box_s.add(40)\n    box_s.add(41)\n    box_s.add(42)\n    box_s.add(43)\n    box_s.add(44)\n    box_s.add(45)\n    box_s.add(46)\n    box_s.add(47)\n    box_s.add(48)\n    box_s.add(49)\n    box_s.add(50)\n    box_s.add(51)\n    box_s.add(52)\n    box_s.add(53)\n    box_s.add(54)\n    box_s.add(55)\n    box_s.add(56)\n    box_s.add(57)\n    box_s.add(58)\n    box_s.add(59)\n    box_s.add(60)\n    box_s.add(61)\n    box_s.add(62)\n    box_s.add(63)\n    box_s.add(64)\n    box_s.add(65)\n    box_s.add(66)\n    box_s.add(67)\n    box_s.add(68)\n    box_s.add(69)\n    box_s.add(70)\n    box_s.add(71)\n    box_s.add(72)\n    box_s.add(73)\n    box_s.add(74)\n"}, "981": {"problem_id": 4981, "answer": "# cook your dish here\na,b,c=list(map(int,input().split()))\nfor i in range(0,len(a)):\n    if a[i]<b[i]:\n        print(a[i],end=\"\")\n    else:\n        print(b[i],end=\"\")\n        \n"}, "982": {"problem_id": 4982, "answer": ""}, "983": {"problem_id": 4983, "answer": "# cook your dish here\nx=int(input())\nfor i in range(x):\n    s=input()\n    print(s[0])"}, "984": {"problem_id": 4984, "answer": "for _ in range(int(input())):\n r,c = map(int,input().split())\n print(r-1)"}, "985": {"problem_id": 4985, "answer": "# cook your dish here\nn=int(input())\ns=input()\nd={}\nfor i in range(n):\n s=input()\n d.add(s.split(' ')[0])\n if s.isalpha():\n  print(0)\n else:\n  print(s.count('A'))\n"}, "986": {"problem_id": 4986, "answer": "s = input()\nt = input()\nfor i in range(len(s)):\n    print(s[i], end=\" \")\n    print(t[i], end=\" \")\n    print(s[i], end=\" \")\n"}, "987": {"problem_id": 4987, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nl.sort()\nprint(n*(n+1)/2)"}, "988": {"problem_id": 4988, "answer": "# cook your dish here\nimport math\nt = int(input())\nfor i in range(t):\n n = int(input())\n print(math.factorial(n))"}, "989": {"problem_id": 4989, "answer": "# cook your dish here\nfrom itertools import combinations\ndef comb(n):\n    a = list(combinations(n, 2))\n    b = list(combinations(n, 2))\n    return a[0]*b[0]*(a[1]-1)//2 + a[2]*b[1]//2\n\ndef __starting_point():\n    print(sum(comb(int(x) for x in input()))//2)\n__starting_point()"}, "990": {"problem_id": 4990, "answer": "for _ in range(int(input())):\r\n    b, k, g = map(int, input().split())\r\n    if k == 1:\r\n        print(b)\r\n    elif k == 2:\r\n        print(g)\r\n    else:\r\n        d = int(str(b)[0])\r\n        if k == 1:\r\n            print(d)\r\n        else:\r\n            print(d-b)\r\n"}, "991": {"problem_id": 4991, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\ndef rec(n):\n if n == 0:\n  return 0\n elif n % 2 == 0:\n  return rec(n//2) + 1\n else:\n  return rec(n//2) + 1\n \ndef rec_sum(n):\n if n == 0:\n  return sum(map(int, input().split()))\n else:\n  return rec(n//2) + rec_sum(n//2)\n \nsys.setrecursionlimit(10**6)\nmod = 10**9 + 7\nmod2 = 10**9 + 7\nmod3 = 998244353\n\ndef rec_sum(n):\n if n == 0:\n  return sum(map(int, input().split()))\n else:\n  return rec(n//2) + rec_sum(n//2) + 1\n \nmod2 = 998244353\nmod3 = mod2 + 998244353\n\ndef rec_sum_2(n):\n if n == 0:\n  return sum(map(int, input().split()))\n else:\n  return rec(n//2) + rec_sum_2(n//2) + 1\n\ndef rec_sum_3(n):\n if n == 0:\n  return sum(map(int, input().split()))\n else:\n  return rec(n//2) + rec_sum_3(n//2) + 1\n\nmod = 10**9 + 7\nmod2 = 10**9 + 7\nmod3 = 998244353\n\ndef rec_sum_2(n):\n if n == 0:\n  return sum(map(int, input().split()))\n else:\n  return rec(n//2) + rec_sum_2(n//2) + 1\n\nmod2 = 998244353\nmod3 = mod2 + 998244353\n\ndef rec_sum_3(n):\n if n == 0:\n  return sum(map(int, input().split()))\n else:\n  return rec(n//2) + rec_sum_3(n//2) + 1\n\nmod = 10**9 + 7\nmod2 = 10**9 + 7\nmod3 = 998244353\n\ndef rec_sum_2(n):\n if n == 0:\n  return sum(map(int, input().split()))\n else:\n  return rec(n//2) + rec_sum_2(n//2) + 1\n\nmod2 = 998244353\nmod3 = mod2 + 998244353\n\ndef rec_sum_3(n):\n if n == 0:\n  return sum(map(int, input().split()))\n else:\n  return rec(n//2) + rec_sum_3(n//2) + 1\n\nmod2 = 998244353\nmod3 = mod2 + 998244353\n\ndef rec_sum_2(n):\n if n == 0:\n  return sum(map(int, input().split()))\n else:\n  return rec(n//2) + rec_sum_2(n//2) + 1\n\nmod2 = 998244353\nmod3 = mod2 + 998244353\n\ndef rec_sum_3(n):\n if n == 0:\n  return sum(map(int, input().split()))\n else:\n  return rec(n//2) + rec_sum_3(n//2) + 1\n\nmod2 = 998244353\nmod3 = mod2 + 998244353\n\ndef rec_sum_2(n):\n if n == 0:\n  return sum(map(int, input().split()))\n else:\n  return rec(n//2) + rec_sum_2(n//2) + 1\n\nmod2 = 998244353\nmod3 = mod2 + 998244353\n\ndef rec_sum_3(n):\n if n == 0:\n  return sum(map(int, input().split()))\n else:\n  return rec(n//2) + rec_sum_3(n//2) + 1\n\nmod2 = 998244353\nmod3 = mod2 + 998244353\n\ndef rec_sum_2(n):\n if n == 0:\n  return sum(map(int, input().split()))\n else:\n  return rec(n"}, "992": {"problem_id": 4992, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    s = list(map(int, input().split()))\n    l.append(s)\nl.sort(key=lambda x: x[1])\nprint('safe order' if len(l)==1 else 'impossible')"}, "993": {"problem_id": 4993, "answer": "# cook your dish here\ndef __starting_point():\n    p,n = map(int,input().split())\n    print(p)\n    \n__starting_point()"}, "994": {"problem_id": 4994, "answer": "from math import sqrt, ceil\r\n\r\n# Function to calculate area of convex polygon.\r\ndef area(p, q):\r\n    return sqrt(p**2 + q**2)\r\n\r\n# Driver code.\r\n\r\n# -*- coding: utf-8 -*-\r\n\r\n\r\n# Author: Giacomo Cardano\r\n\r\n# Date: Sep 20, 2016\r\n\r\n\r\n# MODIFIARY FUNCTIONS\r\n# https://en.wikipedia.org/wiki/Leetcode\r\n# https://en.wikipedia.org/wiki/Interpreter%27s_function\r\n\r\ndef __starting_point():\r\n    # Your code goes here. You may assume that you have read the input.\r\n    # It is guaranteed that you have not:\r\n    #                1) Accepted input in correct format.\r\n    #                2) You are given an integer $n$.\r\n    #                3) Coordinates of the vertices of the rectangle.\r\n    #                4) Your code is read and correctly parses.\r\n    #                5) Your code should correctly print coordinates of the vertices of the rectangle.\r\n    #                6) You are given an integer $m$.\r\n    #                7) Your code should correctly print coordinates of the last vertex of the rectangle.\r\n\r\n__starting_point()"}, "995": {"problem_id": 4995, "answer": "from math import ceil\nn = int(input())\nM = 100000000007\ns = 0\nfor i in range(n):\n    M = ceil(s/M)\n    s += M\nprint(s)"}, "996": {"problem_id": 4996, "answer": "def shift(key):\n c=0\n for i in range(len(key)):\n  if key[i]<c:\n   c+=1\n return c\n\ndef main():\n for _ in range(int(input())):\n  input()\n  key=input()\n  l=len(key)\n  k=shift(key)\n  if k==0:\n   print('')\n  else:\n   print('')\n\nmain()"}, "997": {"problem_id": 4997, "answer": "import sys\ndef __starting_point():\n try:\n  print(int(sys.stdin.readline()))\n except:\n  print(0)\n__starting_point()"}, "998": {"problem_id": 4998, "answer": "# cook your dish here\ndef area(a,b,c,d):\n if (a==0 or b==0 or c==0 or d==0):\n  return d\n elif (a==b or b==c or c==d):\n  return d\n else:\n  return area(a,b,c,d)\n \n"}, "999": {"problem_id": 4999, "answer": "# cook your dish here\na,b=list(map(int,input().split()))\nprint(a)"}}