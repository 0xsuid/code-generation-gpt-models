{"0": {"problem_id": 0, "answer": "def func(s,i,n):\n    if i==0:\n        return 0\n    elif len(s)==n:\n        return 1\n    else:\n        return func(s[i:],i+1,n)\n\ns=input()\nprint(func(s,0,len(s)))\n"}, "1": {"problem_id": 1, "answer": "n = int(input())\nfor i in range(n):\n    print(int(n ** 0.5) + \"\".join(str(i) for i in str(n)))"}, "2": {"problem_id": 2, "answer": "n = int(input())\nfor i in range(n):\n    s = int(input())\n    print(s)\n"}, "3": {"problem_id": 3, "answer": "n,q=map(int,input().split())\ns=list(map(int,input().split()))\nfor i in range(n):\n    l,r=map(int,input().split())\n    s.append(l)\nprint(max(s))"}, "4": {"problem_id": 4, "answer": "from collections import deque\ndef __starting_point():\n x = int(input())\n h, mm = map(int, input().split())\n if mm == 0:\n  print(0)\n elif mm == 1:\n  print(1)\n else:\n  print(2)\n__starting_point()"}, "5": {"problem_id": 5, "answer": "n, pos, l, r = list(map(int, input().split()))\n\nL = []\nfor i in range(n):\n    if L[i] == 1:\n        L.append(i)\n\nL.sort()\n\nprint(len(L))\nprint(len(L[0]))\nprint(len(L[n - 1]))\nprint(len(L[n + 1]))\nprint(len(L[n - 2]))\nprint(len(L[n + 2]))\nprint(len(L[n + 3]))\nprint(len(L[n + 4]))\nprint(len(L[n + 5]))\nprint(len(L[n + 6]))\nprint(len(L[n + 7]))\nprint(len(L[n + 8]))\nprint(len(L[n + 9]))\nprint(len(L[n + 10]))\nprint(len(L[n + 11]))\nprint(len(L[n + 12]))\nprint(len(L[n + 13]))\nprint(len(L[n + 14]))\nprint(len(L[n + 15]))\nprint(len(L[n + 16]))\nprint(len(L[n + 17]))\nprint(len(L[n + 18]))\nprint(len(L[n + 19]))\nprint(len(L[n + 20]))\nprint(len(L[n + 21]))\nprint(len(L[n + 22]))\nprint(len(L[n + 23]))\nprint(len(L[n + 24]))\nprint(len(L[n + 25]))\nprint(len(L[n + 26]))\nprint(len(L[n + 25]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L[n + 26]))\nprint(len(L"}, "6": {"problem_id": 6, "answer": "def comb(n, k):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return 0\n    else:\n        return max(list(map(int, input().split())))\n\nt = int(input())\nfor _ in range(t):\n    n, x = list(map(int, input().split()))\n    print(comb(n, x))\n"}, "7": {"problem_id": 7, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\ns = [-1] * n\nfor i in range(n):\n    s[i] = int(input())\n    if s[-1] == 0:\n        s.pop()\n    elif s[-1] == 1:\n        s.append(i)\n    else:\n        s.append(n - i)\nprint(n)"}, "8": {"problem_id": 8, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef solve(s):\n    m,n = map(int,input().split())\n    s = list(map(int,s))\n    print(s)\n    for i in range(3,n+1):\n        if s[i] == '1':\n            s[i] = '1'\n        else:\n            s[i] = '0'\n    print(len(s))\n\ndef __starting_point():\n    solve(__doc__)\n__starting_point()"}, "9": {"problem_id": 9, "answer": ""}, "10": {"problem_id": 10, "answer": "n = int(input())\ndef leap_years(n):\n    return n - (n - 1) // 2\n\ndef dp(n):\n    return n - (n - 1) // 2\n\nprint(leap_years(n))"}, "11": {"problem_id": 11, "answer": "n, a, b, p, q = list(map(int, input().split()))\n\nif n % 2 == 0:\n    print(p + q)\nelse:\n    print(p + q)\n"}, "12": {"problem_id": 12, "answer": "n = int(input())\nl = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if l[i] == 'G':\n        ans += 1\nprint(ans)\n"}, "13": {"problem_id": 13, "answer": "n, k = list(map(int, input().split()))\ns = list(map(int, input().split()))\nfor i in range(n):\n    s[i] = int(input())\nprint(s[n-1])"}, "14": {"problem_id": 14, "answer": "from collections import deque\nn, k = map(int, input().split())\np = list(map(int, input().split()))\nq = deque()\nfor i in range(n):\n    p.append(i)\n    q.append(i)\n\ndef is_sorted(arr, n, k):\n    if len(arr) == k:\n        return True\n    else:\n        return False\n\n# \u5982\u4f4f\u4e00\u4e2a\u6570\u5b57\u5173\u7cfb\n# \u5982\u4f4f\u4e00\u4e2a\u6570\u5b57\u5173\u7cfb\n# \u5982\u4f4f\u4e00\u4e2a\u6570\u5b57\u5173\u7cfb\n# \u5982\u4f4f\u4e00\u4e2a\u6570\u5b57\u5173\u7cfb\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\u59cb\u5316\uff0c\u90a3\u5c31\u597d\u4e86\uff0c\u624d\u80fd\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u5b57\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\u59cb\u533a\u95f4\u7684\u6570\u5b57\uff0c\u90a3\u5c31\u597d\u4e86\uff0c\u624d\u80fd\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u5b57\n\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\u59cb\u533a\u95f4\u7684\u6570\u5b57\uff0c\u90a3\u5c31\u597d\u4e86\uff0c\u624d\u80fd\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u5b57\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\u59cb\u533a\u95f4\u7684\u6570\u5b57\uff0c\u90a3\u5c31\u597d\u4e86\uff0c\u624d\u80fd\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u5b57\n\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\u59cb\u533a\u95f4\u7684\u6570\u5b57\uff0c\u90a3\u5c31\u597d\u4e86\uff0c\u624d\u80fd\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u5b57\n\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\u59cb\u533a\u95f4\u7684\u6570\u5b57\uff0c\u90a3\u5c31\u597d\u4e86\uff0c\u624d\u80fd\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u5b57\n\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\u59cb\u533a\u95f4\u7684\u6570\u5b57\uff0c\u90a3\u5c31\u597d\u4e86\uff0c\u624d\u80fd\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u5b57\n\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\u59cb\u533a\u95f4\u7684\u6570\u5b57\uff0c\u90a3\u5c31\u597d\u4e86\uff0c\u624d\u80fd\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u5b57\n\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\u59cb\u533a\u95f4\u7684\u6570\u5b57\uff0c\u90a3\u5c31\u597d\u4e86\uff0c\u624d\u80fd\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u5b57\n\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\u59cb\u533a\u95f4\u7684\u6570\u5b57\uff0c\u90a3\u5c31\u597d\u4e86\uff0c\u624d\u80fd\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u5b57\n\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\u59cb\u533a\u95f4\u7684\u6570\u5b57\uff0c\u90a3\u5c31\u597d\u4e86\uff0c\u624d\u80fd\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u5b57\n\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\u59cb\u533a\u95f4\u7684\u6570\u5b57\uff0c\u90a3\u5c31\u597d\u4e86\uff0c\u624d\u80fd\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u5b57\n\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\u59cb\u533a\u95f4\u7684\u6570\u5b57\uff0c\u90a3\u5c31\u597d\u4e86\uff0c\u624d\u80fd\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u5b57\n\n# \u5982\u679c\u6700\u540e\u4e00\u6b21\u521d\ufffd"}, "15": {"problem_id": 15, "answer": "a,b,c = list(map(int,input().split()))\nif b==a:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"}, "16": {"problem_id": 16, "answer": "from sys import stdin,stdout\ndef input():\n    return stdin.readline().strip()\n\ndef __starting_point():\n    input()\n    print(1)\n\n__starting_point()"}, "17": {"problem_id": 17, "answer": "def main():\n    n, k, t = list(map(int, input().split()))\n    s = set()\n    for i in range(n):\n        s.add(i)\n        if i not in s:\n            s.add(i)\n        else:\n            s.add(i)\n    print(sum(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "18": {"problem_id": 18, "answer": "from collections import Counter\n\ns = input()\nt = input()\n\ndef __starting_point():\n    # TODO\n    s = list(s)\n    t = list(t)\n    \n    while True:\n        s.extend(t.pop(0))\n        if s[0] == t[0]:\n            break\n        else:\n            print(s[0], end = \" \")\n            break\n        \n__starting_point()"}, "19": {"problem_id": 19, "answer": "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(main())\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "20": {"problem_id": 20, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    h, m, n = list(map(int, readline().split()))\n    if m == n:\n        return 0\n    elif m == 0:\n        return 0\n    else:\n        print(m)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "21": {"problem_id": 21, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        s += a[i]\n    else:\n        s += b[i]\nprint(s)"}, "22": {"problem_id": 22, "answer": "s = input()\nprint(\"TAK\")"}, "23": {"problem_id": 23, "answer": "def permute(n,x):\n    if n<0:\n        return x\n    else:\n        n=n-1\n        x=n%10\n        return x\n\na=int(input())\nb=int(input())\nprint(permute(a,b))\n"}, "24": {"problem_id": 24, "answer": "def __starting_point():\n n = int(input())\n l = list(map(int,input().split()))\n if n == 1:\n  print('YES')\n else:\n  print('NO')\n__starting_point()"}, "25": {"problem_id": 25, "answer": "from sys import stdin,stdout\nn,k = list(map(int,stdin.readline().split()))\nm = list(map(int,stdin.readline().split()))\nprint(m[0])\nfor i in range(1,n):\n    print(m[i],end=\"\")\n"}, "26": {"problem_id": 26, "answer": "from collections import defaultdict\n\ndef f(x, y, z):\n    \"\"\"\n    :param x: x\n    :param y: y\n    :param z: z\n    :return: x\n    \"\"\"\n    if x == 0:\n        return z\n    elif x == 1:\n        return f(x, y, z)\n    else:\n        return f(x, y, z)\n\ndef main():\n    x, y, z = list(map(int, input().split()))\n    print(f(x, y, z))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "27": {"problem_id": 27, "answer": "n = int(input())\ns = input()\nfor i in range(n):\n    s = s.replace(' ','')\n    if s.isalnum():\n        print(i + 1)\n    else:\n        print(i + 1)"}, "28": {"problem_id": 28, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    print(s.count('1'))\n"}, "29": {"problem_id": 29, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef readline():\n    return sys.stdin.readline()[:-1]\n\ndef readline_int():\n    return int(readline())\n\ndef readline():\n    return list(map(int, readline().split()))\n\ndef __starting_point():\n    sys.setrecursionlimit(100000000)\n    return next(starting_point() for _ in range(6))\n__starting_point()"}, "30": {"problem_id": 30, "answer": "import math\ndef floyd(n):\n    return 1 if n%2==0 else math.gcd(n,(n//2))\ndef floyd(n):\n    return 1 if n%2==0 else math.gcd(n,(n//2))\ndef main():\n    m,x=map(int,input().split())\n    n=int(input())\n    floyd(n)\n    print(floyd(n))"}, "31": {"problem_id": 31, "answer": "from math import ceil\nn, k = map(int, input().split())\ns = 0\nfor i in range(23, n):\n    s += int(ceil(s / i))\nprint(s)"}, "32": {"problem_id": 32, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(\"YES\" if n==1 else \"NO\")\n"}, "33": {"problem_id": 33, "answer": "import math\ndef __starting_point():\n    a, b, l, r = list(map(int, input().split()))\n    print(a)\n__starting_point()"}, "34": {"problem_id": 34, "answer": "n, a, b = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if i == 0:\n        c += 1\nprint(c)\n"}, "35": {"problem_id": 35, "answer": "n, m = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    l.append(input())\nl.sort(reverse=True)\nans = \"YES\" if l[0] == \"R\" else \"NO\"\nprint(\"\".join(l))\n"}, "36": {"problem_id": 36, "answer": "n = int(input())\na = [0] + list(map(int, input().split()))\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    a[x - 1] += y\nprint(a[n])"}, "37": {"problem_id": 37, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ns = list(input())\nfor i in range(1,len(s)):\n    if s[i] == 'A' and s[i] == 'B':\n        print('Yes')\n    else:\n        print('No')"}, "38": {"problem_id": 38, "answer": "from sys import stdin,stdout\nfrom bisect import bisect_left as bl, bisect_right as br, insort, heappush import insort_left as in, insort_right as br, bisect_left as br, bisect_right as br, heapify, popen, pthread, thiskampeishka, kefka_sochekampeishka, Sasha_sochekampeishka\n\n\ndef main():\n    n,l,r = map(int,stdin.readline().split())\n    if n==r:\n        print(\"YES\")\n        return\n    a,b,c,d = map(int,stdin.readline().split())\n    if len(a)==len(b):\n        print(\"YES\")\n        return\n    if len(a)==len(b):\n        print(\"YES\")\n        return\n    if len(a)==len(b):\n        print(\"YES\")\n        return\n    if len(a)==len(b):\n        print(\"YES\")\n        return\n    if len(a)==len(c):\n        print(\"YES\")\n        return\n    if len(a)==len(c):\n        print(\"YES\")\n        return\n    if len(a)==len(b):\n        print(\"YES\")\n        return\n    if len(a)==len(c):\n        print(\"YES\")\n        return\n    if len(a)==len(b):\n        print(\"YES\")\n        return\n    if len(a)==len(c):\n        print(\"YES\")\n        return\n    if len(a)==len(b):\n        print(\"YES\")\n        return\n    if len(a)==len(c):\n        print(\"YES\")\n        return\n    if len(a)==len(b):\n        print(\"YES\")\n        return\n    if len(a)==len(c):\n        print(\"YES\")\n        return\n    if len(a)==len(b):\n        print(\"YES\")\n        return\n    if len(a)==len(c):\n        print(\"YES\")\n        return\n    if len(a)==len(b):\n        print(\"YES\")\n        return\n    if len(a)==len(c):\n        print(\"YES\")\n        return\n    if len(a)==len(b):\n        print(\"YES\")\n        return\n    if len(a)==len(c):\n        print(\"YES\")\n        return\n    if len(a)==len(c):\n        print(\"YES\")\n        return\n    if len(a)==len(bl):\n        bl = br = br = in = in_ = in__ = in__ = in__ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in_ = in"}, "39": {"problem_id": 39, "answer": "s = input()\nn = len(s)\nl = 0\nfor i in range(n):\n    if s[i]!= s[i-1]:\n        l += 1\n    else:\n        print(0)\n        break\nif l == n:\n    print(n)\nelse:\n    print(l)"}, "40": {"problem_id": 40, "answer": "n = int(input())\na, b = map(int, input().split())\nfor i in range(n):\n    a, b = map(int, input().split())\n    if a == b:\n        print(\"rating\", end=' ')\n    elif a < b:\n        print(\"unrated\")\n    else:\n        print(\"maybe\")"}, "41": {"problem_id": 41, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint('\\n'.join(map(str, a)))"}, "42": {"problem_id": 42, "answer": "n = int(input())\ns = input()\nfor i in range(n):\n    s = s[::-1]\n    if len(s) == 0:\n        print(0)\n        continue\n    else:\n        print(n-i-1)\n        i = 0\n        while i < len(s):\n            if s[i] == s[i+1]:\n                i += 1\n            else:\n                i += 2\n                break\n        print(i)"}, "43": {"problem_id": 43, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nfor i in range(n):\n    if a[i] == b[i]:\n        a[i] = b[i]\n        b[i] = a[i]\n\nprint(a[0], b[0])"}, "44": {"problem_id": 44, "answer": "from sys import stdin,stdout\ninput = stdin.readline\n\nd, k, a, b = list(map(int, input().split()))\n\ns = 0\nfor i in range(a):\n    s += d\n    k += (i - 1)\n    s += min(b, k)\n\nprint(s)\n"}, "45": {"problem_id": 45, "answer": "def main():\n    n, k = list(map(int, input().split()))\n    print(k)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "46": {"problem_id": 46, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\ndef is_prime(n):\n    if n == 1:\n        return True\n    elif n % 2 == 0:\n        return False\n    else:\n        return True\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    # print(n, m)\n    d = {}\n    for i in range(n):\n        d[i] = int(i % 2)\n    # print(d)\n    for i in range(m):\n        if is_prime(i):\n            continue\n        else:\n            d[i] = 1\n            break\n    print(d.get(0, 0))\n\n__starting_point()"}, "47": {"problem_id": 47, "answer": "n, x = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = 0\nfor i in range(n):\n    if a[i] > x:\n        b += x\n    else:\n        break\nprint(b)"}, "48": {"problem_id": 48, "answer": "from sys import stdin,stdout\nfrom math import ceil,sqrt,log2,factorial,gcd\nfrom collections import deque\nfrom heapq import heappop,heappush,heapify,heappop,heappushpop,heappop,heapify,heapquot,deque\nfrom bisect import bisect_left as bl,bisect_right as br,bisect\nfrom bisect import bisect_left as bl,bisect\nfrom bisect import bisect\nfrom functools import reduce\nfrom operator import itemgetter\nfrom functools import reduce\nfrom itertools import permutations,combinations as pz\nfrom numpy import ceil\nfrom scipy.sparse.csnf import csnf as cs\nfrom scipy.sparse import dijkstra,dijkstra,insort\nfrom heapq import heapify,heappush,heappop,heapify,heapquot,deque\nfrom re import findall,findnext,findnextq,findnextq_ranges,findnextranges,findnextranges_ranges,isprime\nfrom string import ascii_lowercase,uppercase_lowercase,numeric as Numeric,pow as pow,log as l,acos_chinese,djangos as ddjangos,astros as tocos,floyd as foyd\nfrom fractions import gcd,frozenset,enumerate,mod,amort,mod2,amort2,mort,mort2,mod3,mort3,mod4,mod5,mod6,mod7,mod8,mod9,mod10,mod11,mod12,mod13,mod14,mod15,mod16,mod17,mod18,mod19,mod20,mod21,mod22,mod23,mod24,mod25,mod26,mod27,mod28,mod29,mod30,mod31,mod32,mod33,mod34,mod35,mod36,mod37,mod38,mod39,mod40,mod41,mod42,mod43,mod44,mod45,mod46,mod47,mod48,mod49,mod50,mod51,mod52,mod54,mod55,mod56,mod57,mod58,mod59,mod60,mod61,mod62,mod63,mod64,mod65,mod66,mod67,mod68,mod69,mod70,mod71,mod72,mod73,mod74,mod75,mod76,mod77,mod78,mod79,mod80,mod81,mod82,mod83,mod84,mod85,mod86,mod87,mod88,mod89,mod90,mod91\nfrom collections import deque\nfrom statistics import mean, median, median_c,coef,b22,coef_c,b22_c,b22_d,b22_e,b22_f,b22_g,b22_h,b22_i,b22_j,b22_k,b22_l,b22_m,b22_n,b22_n_d,b22_n_d_,b22_m_,b22_m_2,b22_m_3,b22_m_4,b22_m_5,b22_m_6,b22_m_7,b22_m_8,b22_m_9,b22_n,b22_n_d,b22_n_d_,b22_m__c,b22_m_\nfrom statistics import timedelta,round,factorial,gcd,l2d,l3d,l4d,l6d,l9d,l10d,l11d,l12d,l14d,l16d,l18d,l20d,l22d,l24d,l26d,l30d,l32d,l36d,l40d,l46d,l48d,l50d,l54d,l60d,l67d,l68d,l69d,l72d,l86d,l88d,l90d,l96d,lhuahah,huahah_l,huahah_l_l,huahah_l_l_l\nfrom copy import deepcopy as d,deepcopy as l\nfrom fractions import gcd,frozenset,enumerate,mod,amort,mod2,amort"}, "49": {"problem_id": 49, "answer": "def main():\n    s = input()\n    print(int(s[0]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "50": {"problem_id": 50, "answer": "import sys\ninput = sys.stdin.readline\nn, m, r = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\ndef main():\n    n, m, r = list(map(int, input().split()))\n    s.append(n)\n    s.append(m)\n    s.append(r)\n    s.append(r)\n    print(sum(s) - max(s))\n\nmain()\n"}, "51": {"problem_id": 51, "answer": ""}, "52": {"problem_id": 52, "answer": "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\ns = 0\nfor i in range(n):\n    if l[i] % 2 == 0:\n        s += 1\nprint(s)\n"}, "53": {"problem_id": 53, "answer": "n = int(input())\nb = [0]*n\nfor i in range(n):\n    b[i] = bin(i)[2:].count('1')\nprint(max(b))"}, "54": {"problem_id": 54, "answer": "def __starting_point():\n    w, m = list(map(int, input().split()))\n    if w % 2 == 0:\n        print('YES')\n    else:\n        print('NO')\n__starting_point()"}, "55": {"problem_id": 55, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(1, n + 1):\n    s[i] = k\n    k -= 1\nprint(' '.join(map(str, s)))\n"}, "56": {"problem_id": 56, "answer": "from sys import stdin,stdout\nn,t = list(map(int,stdin.readline().split()))\nl = list(map(int,stdin.readline().split()))\nprint(n)\nfor i in range(n):\n    if l[i] == 0:\n        print(i)\n    else:\n        print(i+1)\n"}, "57": {"problem_id": 57, "answer": "import math\nn = int(input())\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x == 0:\n        print(-1)\n    else:\n        print(math.gcd(x, y))\n"}, "58": {"problem_id": 58, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(len(a) - len(b))"}, "59": {"problem_id": 59, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = input()\nprint('YES' if len(s) == 1 else 'NO')"}, "60": {"problem_id": 60, "answer": "from bisect import bisect_left as bl, bisect_right as br, bisect_left as br, insort_left as ins, insort_right as br, insort_left as br, insort_right as br, insort_left as br, insort_right as br, insort_right as br, insort_right as br, insort_left as br, insort_left as br, insort_left as br, insort_right as br, insort_right as br, brsort_left as br, brsort_right as br, brsort_left as br, brsort_right as br, ln(map(int, input().split()))\ninput = lambda: list(map(int, input().split()))\n\ndef __starting_point():\n    n, s = int(input()), list(map(int, input().split()))\n    print(bisect_left(s, n))\n\n__starting_point()"}, "61": {"problem_id": 61, "answer": "n, b = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n    d[i] = list(map(int, input().split()))\n\nprint('<' if d.get(i) == '>' else '<' if d.get(i) == '<' else '<')"}, "62": {"problem_id": 62, "answer": "n = int(input())\na = [0]*n\nfor i in range(n):\n    a[i] = list(map(int,input().split()))\nprint('BitLGM')"}, "63": {"problem_id": 63, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nprint(n, k)\n"}, "64": {"problem_id": 64, "answer": "n, k = list(map(int, input().split()))\ns = input()\nif n == 1:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"}, "65": {"problem_id": 65, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint(len(a))"}, "66": {"problem_id": 66, "answer": "t, w, b = list(map(int, input().split()))\n\ndef is_valid(x, y):\n    if x == y:\n        return True\n    elif x < y:\n        return False\n    else:\n        return True\n\nfor _ in range(t):\n    x, y = list(map(int, input().split()))\n    if is_valid(x, y):\n        print(f'{x}/{y}')\n    else:\n        print(f'{x}/{y}')"}, "67": {"problem_id": 67, "answer": "import sys\n\ndef main():\n    input = sys.stdin.readline\n\n    x, y, z = list(map(int, input().split()))\n    if z == 0:\n        print(\"-\" or \"0\")\n    elif z == 1:\n        print(\"+\")\n    else:\n        for i in range(0, x, y):\n            if i == 0:\n                print(\"+\")\n            else:\n                print(\"-\" or \"0\")\n        print(\"\\n\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "68": {"problem_id": 68, "answer": "from collections import deque\nclass Codeforces:\n    def __init__(self,n):\n        self.n = n\n        self.d = [0]*n\n        self.d[0] = 1\n        self.l = [0]*n\n        self.r = [0]*n\n        self.c = [0]*n\n        self.c[0] = 1\n        self.l[0] = 1\n        self.r[0] = 1\n        self.c[1] = 1\n        self.d[1] = 1\n        self.d[0] = 1\n        self.l[1] = 1\n        self.r[1] = 1\n        self.c[0] = 1\n        self.d[1] = 1\n        self.d[0] = 1\n        self.l[1] = 1\n        self.r[1] = 1\n        self.c[1] = 1\n        self.c[0] = 1\n        self.d[1] = 1\n        self.d[0] = 1\n        self.l[1] = 1\n        self.r[1] = 1\n        self.c[1] = 1\n        self.l[0] = 1\n        self.r[1] = 1\n        self.c[0] = 1\n        self.d[1] = 1\n        self.d[0] = 1\n        self.l[0] = 1\n        self.r[1] = 1\n        self.c[1] = 1\n        self.d[0] = 1\n        self.d[1] = 1\n        self.l[1] = 1\n        self.r[1] = 1\n        self.c[1] = 1\n        self.c[0] = 1\n        self.d[1] = 1\n        self.d[0] = 1\n        self.l[1] = 1\n        self.r[1] = 1\n        self.c[1] = 1\n        self.d[1] = 1\n        self.d[0] = 1\n        self.l[1] = 1\n        self.r[1] = 1\n        self.c[1] = 1\n        self.d[1] = 1\n        self.d[0] = 1\n        self.l[1] = 1\n        self.r[1] = 1\n        self.c[1] = 1\n        self.c[0] = 1\n        self.d[1] = 1\n        self.d[0] = 1\n        self.l[1] = 1\n        self.r[1] = 1\n        self.c[1] = 1\n        self.d[1] = 1\n     "}, "69": {"problem_id": 69, "answer": "import sys\ninput = sys.stdin.readline\n\ndef check(s):\n    nonlocal ans\n    if s == 0:\n        return 0\n    elif s == 1:\n        return 1\n    else:\n        ans.append(0)\n        for i in range(len(s)):\n            if s[i] == 0:\n                ans.append(i)\n                break\n        return ans.count('0')\n\ndef main():\n    n, x = list(map(int, input().split()))\n    s = input()\n    ans = []\n    for i in range(n):\n        if s[i] == 0:\n            ans.append(i)\n            for j in range(i+1, len(s)):\n                if s[j] == 0:\n                    ans.append(j)\n                    break\n        else:\n            ans.append(0)\n            for j in range(i+1, len(s)):\n                if s[j] == 0:\n                    ans.append(j)\n                    break\n    print(len(ans))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "70": {"problem_id": 70, "answer": "n, k = list(map(int, input().split()))\nprint(n - k)\n"}, "71": {"problem_id": 71, "answer": "from itertools import combinations\ns = list(map(int,input().split(' ')))\nn,m,k,x,y = 1,1,1,1\nfor i in range(n):\n    s[i] = min(s[i-1],i)\nfor i in range(m):\n    s[i] = min(s[i-1],i)\nprint(' '.join(map(str,s)))"}, "72": {"problem_id": 72, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a.append(a[-1] + 'a')\nprint('\\n'.join(a))"}, "73": {"problem_id": 73, "answer": "import sys\ninput = sys.stdin.readline\n\ndef __starting_point():\n    c, v, a, l = list(map(int, input().split()))\n    print(int(a + l) // c)\n\n__starting_point()"}, "74": {"problem_id": 74, "answer": "n = int(input())\nfor i in range(n):\n    p = list(map(int, input().split()))\n    print(p[0] + p[1])"}, "75": {"problem_id": 75, "answer": "n, m = list(map(int, input().split()))\n\nif n == 1:\n    print(\"YES\")\n    return\n\nfor i in range(n):\n    if str(i) == \"*\":\n        print(\"*\".join(map(str, i)))\n    else:\n        print(\"NO\")\n"}, "76": {"problem_id": 76, "answer": "n, m, a, b = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    if m == 0:\n        d[i] = 0\n    else:\n        d[i] += 1\nprint(d.get(max(d.values()), 0))\n"}, "77": {"problem_id": 77, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = 0\nfor i in range(n):\n    if a[i] % 2 == 0:\n        l += 1\nprint(l)"}, "78": {"problem_id": 78, "answer": "from sys import stdin\ninput = stdin.readline\nn, T = map(int, input().split())\nl = [int(x) for x in input().split()]\nl.sort()\ns = 0\nfor i in range(n):\n    s += l[i]\nprint(s)"}, "79": {"problem_id": 79, "answer": "from collections import deque,defaultdict\ndef l(a):\n    if a[0]==1:\n        return a[0]\n    else:\n        return deque(a[0])\n\ndef solve(a):\n    q = deque(a[0])\n    for i in range(1,len(a)):\n        if a[i]==1:\n            q.append(i)\n        else:\n            q.append(i+1)\n    return max(q)\n\ndef __starting_point():\n    solve(0)\n\n__starting_point()"}, "80": {"problem_id": 80, "answer": "import sys\ninput = sys.stdin.readline\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    l, r = list(map(int, input().split()))\n    ans = 0\n    for i in range(m):\n        a, b = l + i, r + i\n        ans += gcd(a, b)\n    print(ans)\n__starting_point()"}, "81": {"problem_id": 81, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ndef solve():\n    a,b=list(map(int,input().split()))\n    if a+b==0:\n        print(0)\n    else:\n        print(a+b)\n        \nsolve()"}, "82": {"problem_id": 82, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nm = 0\nfor i in range(n):\n    m = max(a[i] + m, k)\nprint(m)"}, "83": {"problem_id": 83, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] > s:\n        s = a[i]\n    else:\n        s = a[i]\nprint(s)"}, "84": {"problem_id": 84, "answer": "import sys\n\nn = int(input())\nfor i in range(n):\n    s = list(map(int, sys.stdin.readline().split()))\n    s.sort(reverse=True)\n    print(len(s))\n"}, "85": {"problem_id": 85, "answer": "from sys import stdin,stdout\ndef lint():\n    return list(map(int,stdin.readline().split()))\ndef readline():return input()\ndef readline_int():return int(readline())\ndef readline_int_P():return list(map(int,stdin.readline().split()))\ndef __starting_point():\n    #s.write(stdin.INF(),0)\n    #s.write(stdin.SHLit(stdin.infolctr()),0)\n    #s.write(stdin.END(),0)\ntry:\n    lint()\nexcept:\n    pass\n__starting_point()"}, "86": {"problem_id": 86, "answer": "from math import ceil\n\ndef solve(x, y, x_v, y_v):\n    if x_v == 0:\n        return \"Vasiliy\"\n    elif x_v == 1:\n        return \"Vasiliy\"\n    elif y_v == 0:\n        return \"Vasiliy\"\n    else:\n        return \"Vasiliy\"\n\ndef __starting_point():\n    solve(0, 0, 0)\n    print(solve(0, 0, 0))\n\n__starting_point()"}, "87": {"problem_id": 87, "answer": "import math\ndef main():\n    m, d = list(map(int, input().split()))\n    n = m*7\n    for i in range(m):\n        if i == 0:\n            break\n        elif i == 1:\n            n //= 7\n        else:\n            n //= 4\n    print(n)\n\nmain()"}, "88": {"problem_id": 88, "answer": "a,b = list(map(int,input().split()))\nprint(a-b)\n"}, "89": {"problem_id": 89, "answer": "n = int(input())\nseg = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    seg.append(x + y)\nseg.sort()\nprint(len(seg))"}, "90": {"problem_id": 90, "answer": "n, k, S = list(map(int, input().split()))\ncubes = sorted(list(map(int, input().split())))\ns = sum(cubes)\n\nprint(s)\n\n# -*- coding: utf-8 -*-\n\ndef f(i):\n    return cubes[i]\n\ndef g(i):\n    return cubes[i]\n\ndef l(i, j):\n    return cubes[i] - cubes[j]\n\ndef r(i, j):\n    return cubes[i] * cubes[j]\n\ndef d(i, j):\n    return cubes[i] * cubes[j]\n\ndef s(i, k, S):\n    return (k - i) * cubes[i]\n\ndef l(i, j, S):\n    return (j - i) * cubes[i]\n\ndef r(i, j, S):\n    return (j - i) * cubes[i]\n\ndef g(i, j):\n    return cubes[i] * cubes[j]\n\ndef r(i, j, S):\n    return (j - i) * cubes[i]\n\ndef s(i, k, S):\n    return (k - i) * cubes[i]\n\ndef l(i, j, S):\n    return (j - i) * cubes[i]\n\ndef r(i, j, S):\n    return (j - i) * cubes[i]\n\ndef g(i, j):\n    return (j - i) * cubes[i]\n\ndef d(i, j):\n    return (i - j) * cubes[i]\n\ndef s(i, k, S):\n    return (k - i) * cubes[i]\n\ndef l(i, j, S):\n    return (j - i) * cubes[i]\n\ndef r(i, j, S):\n    return (j - i) * cubes[i]\n\ndef g(i, j):\n    return (j - i) * cubes[i]\n\ndef r(i, j, S):\n    return (j - i) * cubes[i]\n\ndef l(i, j, S):\n    return (j - i) * cubes[i]\n\ndef r(i, j, S):\n    return (j - i) * cubes[i]\n\ndef g(i, j):\n    return (j - i) * cubes[i]\n\ndef r(i, j, S):\n    return (j - i) * cubes[i]\n\ndef s(i, k, S):\n    return (k - i) * cubes[i]\n\ndef l(i, j, S):\n    return (j - i) * cubes[i]\n\ndef r(i, j, S):\n    return (j - i) * cubes[i]\n\ndef g(i, j):\n    return (j - i) * cubes[i]\n\ndef r(i, j, S):\n    return (j - i) * cubes[i]\n\ndef l(i, j, S):\n    return (j - i) * cubes[i]\n\ndef r(i, j, S):\n    return (j - i) * cubes[i]\n\ndef g(i, j):\n    return (j - i) * cubes[i]\n\ndef l(i, j, S):\n    return (j - i) * cubes[i]\n\ndef r(i, j, S):\n    return (j - i) * cubes[i]\n\ndef g(i, j):\n    return (j - i) * cubes[i]\n\ndef l(i, j, S):\n    return (j - i) * cubes[i]\n\ndef r(i, j, S):\n    return (j - i) * cubes[i]\n\ndef g(i, j):\n    return (j - i) * cubes[i]\n\ndef r(i, j, S):\n    return (j - i)"}, "91": {"problem_id": 91, "answer": "def main():\n    t = int(input())\n    for _ in range(t):\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        print('YES' if a[0] == 0 else 'NO')\n        if k == 1:\n            print('NO')\n        else:\n            print('YES')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "92": {"problem_id": 92, "answer": "from math import ceil\n\nMOD = 10**9 + 7\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return ceil(n // 2)\n    else:\n        return factorial(n // 2)\n\n\ndef __starting_point():\n    a, b, c = list(map(int, input().split()))\n    print(factorial(a))\n\n__starting_point()"}, "93": {"problem_id": 93, "answer": "from collections import deque\n\ndef solve(p1, p2):\n    if p1 == p2:\n        return True\n    elif p1[0] == p2[0]:\n        return False\n    else:\n        return False\n\nn = len(p1)\np1 = [0]*n\np2 = [0]*n\n\nfor i in range(n):\n    p1[i] = p1[i-1] + p2[i]\n\n# print(p1)\n# print(p2)\n\nsolve(0, 0)\n\nprint('YES')\n"}, "94": {"problem_id": 94, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(l[0])"}, "95": {"problem_id": 95, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint('YES' if a[0] == 1 else 'NO')"}, "96": {"problem_id": 96, "answer": "from collections import deque\nn, k = map(int, input().split())\nl = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n):\n    s[i] = s[i - 1] + 1\nq = deque()\nq.append(0)\nwhile q:\n    x = q.popleft()\n    if x == 0:\n        print(k)\n        return\n    k -= 1\n    l.append(x)\n    q.append(x)\n    for i in range(n - 1, -1, -1):\n        if l[i] == x:\n            l[i] = x\n            q.append(x)\n            break\n    else:\n        print(k)\n        return\n"}, "97": {"problem_id": 97, "answer": "n, m, x, y = map(int, input().split())\np = list(map(int, input().split()))\nd = [0]*n\nd[0] = 0\nfor i in range(1, n):\n    if x%4 == 0:\n        d[i] = min(d[i-1], x//4)\n    elif y%4 == 0:\n        d[i] = min(d[i-1], y//4)\n    elif x%4 == 1:\n        d[i] = min(d[i-1], x//4)\nprint(d[n-1])"}, "98": {"problem_id": 98, "answer": "a,b = list(map(int,input().split()))\nprint(\"YES\" if a[0] == b[0] else \"NO\")"}, "99": {"problem_id": 99, "answer": "# cook your dish here\nfrom sys import stdin, stdout\ninput = stdin.readline\ndef main():\n    b, q, l, m = list(map(int, input().split()))\n    if q <= 0:\n        print(0)\n        return\n    elif b == 0:\n        b = q\n        q = 0\n    else:\n        b = m\n        q = 0\n    for i in range(q):\n        b = b - 1\n        q = abs(b)\n        if b <= q:\n            print(0)\n            return\n        elif b == 0:\n            b = q\n            q = 0\n        else:\n            b = m\n            q = 0\n    print(b)\nmain()"}, "100": {"problem_id": 100, "answer": "from sys import stdin\ninput = stdin.readline\n\nn, m = list(map(int, input().split()))\n\nd = {}\nfor i in range(n):\n    d[i] = list(map(int, input().split()))\n\nprint('\\n'.join(sorted(d.items(), key=lambda x: x)))\n"}, "101": {"problem_id": 101, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(n, 'YES')\nfor i in range(n):\n    if a[i] == 0:\n        print(i, 'NO')\n    else:\n        print(a[i], 'YES')"}, "102": {"problem_id": 102, "answer": "s = int(input())\nfor i in range(s):\n    print(\"\".join(map(str, input())))"}, "103": {"problem_id": 103, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    l.append(a[i]*i)\nprint(max(l))"}, "104": {"problem_id": 104, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a.append(i)\nprint(len(a))"}, "105": {"problem_id": 105, "answer": "from collections import deque\nn = int(input())\nque = deque(map(int, input().split()))\nfor i in range(n):\n    x, y = input().split()\n    x = int(x)\n    y = int(y)\n    if x == 1:\n        que.append(y)\n    else:\n        que.append(x)\nprint(len(que))"}, "106": {"problem_id": 106, "answer": ""}, "107": {"problem_id": 107, "answer": "def __starting_point():\n    input()\n    print(__starting_point())\n\n__starting_point()"}, "108": {"problem_id": 108, "answer": "s = input()\nn = len(s)\nl = []\nfor i in range(n):\n    if s[i] == '-' and s[i].isalnum():\n        l.append(i)\n    else:\n        l.append(i+1)\nprint(l[::-1])\n"}, "109": {"problem_id": 109, "answer": "n, m, r = list(map(int, input().split()))\nf = 0\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x == 0:\n        f += 1\n    elif x == 1:\n        f += 1\n    else:\n        f += 1\nprint(f)"}, "110": {"problem_id": 110, "answer": "from math import ceil\nn = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append(ceil(a[i]*a[i+1]))\nprint(*ans)"}, "111": {"problem_id": 111, "answer": "n, k = list(map(int, input().split()))\nif n <= k:\n    print(-1)\nelse:\n    print(n)\n"}, "112": {"problem_id": 112, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = int(input())\nprint(a[n])"}, "113": {"problem_id": 113, "answer": "import sys\n\ndef k_rounding(n, k):\n    if k <= 0:\n        return 0\n    if k % 2 == 0:\n        return (n + k) // 2\n    else:\n        return (n + k) // 2 + 1\n\nn, k = list(map(int, sys.stdin.readline().split()))\nprint(k_rounding(n, k))\n"}, "114": {"problem_id": 114, "answer": "from collections import defaultdict,deque\nn,m=map(int,input().split())\na=defaultdict(list)\nfor i in range(m):\n    a[i].append(0)\n    a[i][0].append(i)\n    a[i][1].append(i)\n\nd={}\nfor i in range(n):\n    d[i]=[]\n    for j in range(m):\n        if a[i][j]==0:\n            d[i].append(j)\n        else:\n            d[i].append(a[i][j])\n            d[j].append(i)\n            d[i].append(j)\n            d[j].append(i)\n            d[i].append(j)\n            d[j].append(i)\n            d[i].append(j)\n            d[j].append(i)\n            d[i].append(j)\n            d[j].append(i)\n            d[i].append(j)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n            d[j].append(i)\n "}, "115": {"problem_id": 115, "answer": "import sys\n\nR = lambda: list(map(int,sys.stdin.readline().split()))\ndef lmp(): return list(map(int,sys.stdin.readline().split()))\ndef lmp2(): return list(map(int,sys.stdin.readline().split()))\ndef lmp3(): return list(map(int,sys.stdin.readline().split()))\ndef lmp4(): return list(map(int,sys.stdin.readline().split()))\ndef lmp5(): return list(map(int,sys.stdin.readline().split()))\ndef lmp6(): return list(map(int,sys.stdin.readline().split()))\ndef lmp7(): return list(map(int,sys.stdin.readline().split()))\ndef lmp8(): return list(map(int,sys.stdin.readline().split()))\ndef lmp9(): return list(map(int,sys.stdin.readline().split()))\ndef lmp10(): return list(map(int,sys.stdin.readline().split()))\ndef lmp11(): return list(map(int,sys.stdin.readline().split()))\ndef lmp12(): return list(map(int,sys.stdin.readline().split()))\ndef lmp13(): return list(map(int,sys.stdin.readline().split()))\ndef lmp14(): return list(map(int,sys.stdin.readline().split()))\ndef lmp15(): return list(map(int,sys.stdin.readline().split()))\ndef lmp16(): return list(map(int,sys.stdin.readline().split()))\ndef lmp17(): return list(map(int,sys.stdin.readline().split()))\ndef lmp18(): return list(map(int,sys.stdin.readline().split()))\ndef lmp19(): return list(map(int,sys.stdin.readline().split()))\ndef lmp20(): return list(map(int,sys.stdin.readline().split()))\ndef lmp21(): return list(map(int,sys.stdin.readline().split()))\ndef lmp22(): return list(map(int,sys.stdin.readline().split()))\ndef lmp23(): return list(map(int,sys.stdin.readline().split()))\ndef lmp24(): return list(map(int,sys.stdin.readline().split()))\ndef lmp25(): return list(map(int,sys.stdin.readline().split()))\ndef lmp26(): return list(map(int,sys.stdin.readline().split()))\ndef lmp27(): return list(map(int,sys.stdin.readline().split()))\ndef lmp28(): return list(map(int,sys.stdin.readline().split()))\ndef lmp29(): return list(map(int,sys.stdin.readline().split()))\ndef lmp30(): return list(map(int,sys.stdin.readline().split()))\ndef lmp31(): return list(map(int,sys.stdin.readline().split()))\ndef lmp32(): return list(map(int,sys.stdin.readline().split()))\ndef lmp33(): return list(map(int,sys.stdin.readline().split()))\ndef lmp34(): return list(map(int,sys.stdin.readline().split()))\ndef lmp35(): return list(map(int,sys.stdin.readline().split()))\ndef lmp36(): return list(map(int,sys.stdin.readline().split()))\ndef lmp37(): return list(map(int,sys.stdin.readline().split()))\ndef lmp38(): return list(map(int,sys.stdin.readline().split()))\ndef lmp39(): return list(map(int,sys.stdin.readline().split()))\ndef lmp40(): return list(map(int,sys.stdin.readline().split()))\ndef lmp41(): return list(map(int,sys.stdin.readline().split()))\ndef lmp42(): return list(map(int,sys.std"}, "116": {"problem_id": 116, "answer": "from math import ceil, log10, floor, sqrt, factorial, pow\n\nl, r, k = map(int, input().split())\n\n# a = list(map(int, input().split()))\n# b = list(map(int, input().split()))\n\n# a.sort(key=lambda x: x[0])\n\n# b.sort(key=lambda x: x[1])\n\n# print(ceil(log10(a) + sqrt(k)))\n\nprint(2)\n\n# print(2)\n\nfor i in range(1, len(l)):\n    if l[i] < l[i-1]:\n        print(i)\n        break\n    elif l[i] > l[i-1]:\n        print(i)\n        break\n    else:\n        print(i-1)"}, "117": {"problem_id": 117, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = list(map(int, input().split()))\nA, B, C, D = [0]*N, [0]*N, [0]*N\nfor i in range(M):\n    x, y = list(map(int, input().split()))\n    A[x] = y\n    B[y] = x\n    C[y] = x\n    D[y] = x\n    E[y] = x\n    F[y] = x\n    F[x] = y\n    E[y] = x\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[y] = x\n    D[x] = y\n    E[x] = x\n    F[x] = y\n    F[y] = x\n    E[y] = x\n    D[x] = y\n    A[x] = y\n    B[y] = x\n    C[y] = x\n    D[x] = y\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    E[y] = x\n    E[x] = y\n    F[y] = x\n    F[x] = y\n    E[y] = x\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[y] = x\n    D[x] = y\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n    C[x] = y\n    D[y] = x\n    A[x] = y\n    B[y] = x\n "}, "118": {"problem_id": 118, "answer": "t,s,x=list(map(int,input().split()))\nfor i in range(t):\n    t,s,x=map(int,input().split())\n    if(s<0):\n        print(\"NO\")\n    else:\n        print(\"YES\")\n"}, "119": {"problem_id": 119, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(''.join(l))"}, "120": {"problem_id": 120, "answer": "n = int(input())\ns = input()\nprint('%d' % (n-1))\nfor i in range(n):\n    if s[i] == '?':\n        print('!')\n    else:\n        print('?')"}, "121": {"problem_id": 121, "answer": "from collections import deque\ndef main():\n    input()\n    for _ in range(int(input())):\n        x,y,z = map(int,input().split())\n        if x == y:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n       "}, "122": {"problem_id": 122, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n\nprint('YES' if a[-1] == a[-2] else 'NO')"}, "123": {"problem_id": 123, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\n# \u533a\u9593\u53d6\u5f97\u8868\u793a\u6587\u5b57\u5217\u6570\ndef dfs(i):\n    nonlocal l\n    if i == 0:\n        return 0\n    else:\n        l[i] = 0\n        return 1\n\n# \u533a\u9593\u53d6\u5f97\u8868\u793a\u6587\u5b57\u5217\u6570\ndef dfs_n(i):\n    nonlocal l\n    if i == 0:\n        return 0\n    else:\n        l[i] = 0\n        return 1\n\n# \u533a\u9593\u53d6\u5f97\u8868\u793a\u6587\u5b57\u5217\u6570\ndef dfs_m(i):\n    nonlocal l\n    if i == 0:\n        return 0\n    else:\n        l[i] = 0\n        return 1\n\n# \u533a\u9593\u53d6\u5f97\u8868\u793a\u6587\u5b57\u5217\u6570\ndef dfs_n_m(i):\n    nonlocal l\n    if i == 0:\n        return 0\n    else:\n        l[i] = 0\n        return 1\n\n# \u533a\u9593\u53d6\u5f97\u8868\u793a\u6587\u5b57\u5217\u6570\ndef dfs_l(i):\n    nonlocal l\n    if i == 0:\n        return 0\n    else:\n        l[i] = 0\n        return 1\n\n# \u533a\u9593\u53d6\u5f97\u8868\u793a\u6587\u5b57\u5217\u6570\ndef dfs_l_m(i):\n    nonlocal l\n    if i == 0:\n        return 0\n    else:\n        l[i] = 0\n        return 1\n\n# \u533a\u9593\u53d6\u5f97\u8868\u793a\u6587\u5b57\u5217\u6570\ndef dfs_l_n(i):\n    nonlocal l\n    if i == 0:\n        return 0\n    else:\n        l[i] = 0\n        return 1\n\n# \u533a\u9593\u53d6\u5f97\u8868\u793a\u6587\u5b57\u5217\u6570\ndef dfs_n_n(i):\n    nonlocal l\n    if i == 0:\n        return 0\n    else:\n        l[i] = 0\n        return 1\n\n# \u533a\u9593\u53d6\u5f97\u8868\u793a\u6587\u5b57\u5217\u6570\ndef dfs_m_n(i):\n    nonlocal l\n    if i == 0:\n        return 0\n    else:\n        l[i] = 0\n        return 1\n\n# \u533a\u9593\u53d6\u5f97\u8868\u793a\u6587\u5b57\u5217\u6570\ndef dfs_m_n_n(i):\n    nonlocal l\n    if i == 0:\n        return 0\n    else:\n        l[i] = 0\n        return 1\n\n# \u533a\u9593\u53d6\u5f97\u8868\u793a\u6587\u5b57\u5217\u6570\ndef dfs_l_l(i):\n    nonlocal l\n    if i == 0:\n        return 0\n    else:\n"}, "124": {"problem_id": 124, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef func():\n    x, y, z = map(int, readline().split())\n    a, b, c = map(int, readline().split())\n    print('YES', a, b, c)\n    if a == b == c:\n        print('YES')\n    else:\n        print('NO')\n\nfunc()"}, "125": {"problem_id": 125, "answer": "def main():\n    l, s, r, p = list(map(int, input().split()))\n    if s == 0:\n        print(\"YES\")\n    else:\n        main()\n\n__author__ = 'artyom'\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "126": {"problem_id": 126, "answer": "n = int(input())\ns = input()\nprint(\"YES\" if s[0] == '0' else \"NO\")\n"}, "127": {"problem_id": 127, "answer": "n, f = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    k, l = list(map(int, input().split()))\n    s += k\nprint(s)\n"}, "128": {"problem_id": 128, "answer": "n, k = list(map(int, input().split()))\ncows = []\nfor i in range(n):\n    cows.append(list(map(int, input().split())))\ncows.sort(reverse=True)\nprint(sum(cows))\n"}, "129": {"problem_id": 129, "answer": "n, m, k, l = map(int, input().split())\nnew = list(map(int, input().split()))\nnew.sort(reverse=True)\nprint(len(new))"}, "130": {"problem_id": 130, "answer": "n, m = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(n):\n    s[i] = s[i] + 1\nprint(s[n])"}, "131": {"problem_id": 131, "answer": "n = int(input())\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    if a == b:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"}, "132": {"problem_id": 132, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(360 - a[0])"}, "133": {"problem_id": 133, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    a = [0] * (n + 1)\n    for i in range(m):\n        a[i] = 1\n        if a[i] == 0:\n            print(a[i])\n        else:\n            print(a[i] + a[i - 1])\n\nmain()"}, "134": {"problem_id": 134, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(' '.join(map(str,l)))"}, "135": {"problem_id": 135, "answer": "from math import ceil,log2,log10,sqrt,factorial,gcd;def f(n):return pow(n,2,sqrt(n))\ndef gcd(a,b):return 1 if b==0 else 1+a%b\ndef lcm(a,b):return ceil(a*b/gcd(a,b))\ndef ceil(a):return int(log2(a))+1\ndef factorial(n):return int(sqrt(n))\ndef gcd(a,b):return 1 if a==b==0 else 1+b%a\ndef sqrt(x):return x**0.5\ndef log10(n):return log2(n)\ndef sqrt(x):return log2(x)\ndef factorial(n):return factorial(n)\ndef gcd(a,b):return 1 if a==b==0 else 1+b%a\ndef sqrt(x):return sqrt(x)\ndef log(n):return log10(n)\ndef sqrt(x):\n    if n==1:return log(n)\n    if n==2:return log(n-1)\n    if n==3:return log(n-2)\n    if n==4:return log(n-3)\n    if n==5:return log(n-4)\n    if n==6:return log(n-5)\n    if n==7:return log(n-6)\n    if n==8:return log(n-7)\n    if n==9:return log(n-9)\n    if n==10:return log(n-10)\n    if n==11:return log(n-11)\n    if n==12:return log(n-12)\n    if n==13:return log(n-13)\n    if n==14:return log(n-14)\n    if n==15:return log(n-15)\n    if n==16:return log(n-16)\n    if n==17:return log(n-17)\n    if n==18:return log(n-18)\n    if n==19:return log(n-19)\n    if n==20:return log(n-20)\n    if n==21:return log(n-21)\n    if n==22:return log(n-22)\n    if n==23:return log(n-23)\n    if n==24:return log(n-24)\n    if n==25:return log(n-25)\n    if n==26:return log(n-26)\n    if n==27:return log(n-27)\n    if n==28:return log(n-28)\n    if n==29:return log(n-29)\n    if n==30:return log(n-30)\n    if n==31:return log(n-31)\n    if n==32:return log(n-32)\n    if n==33:return log(n-33)\n    if n==34:return log(n-34)\n    if n==35:return log(n-35)\n    if n==36:return log(n-36)\n    if n==37:return log(n-37)\n    if n==38:return log(n-38)\n    if n==39:return log(n-39)\n    if n==40:return log(n-40)\n    if n==41:return log(n-41)\n    if n==42:return log(n-42)\n    if n==43:return log(n-43)\n    if n==44:return log(n-44)\n    if n==45:return log(n-45)\n    if n==46:return log(n-46)\n    if n==47:return log(n-47)\n    if n==48:return log(n-48)\n    if n==49:return log(n"}, "136": {"problem_id": 136, "answer": "a = int(input())\nb = int(input())\nprint(\"%0d\" % a)"}, "137": {"problem_id": 137, "answer": "import math\nMOD = 1000000007\ndef main():\n    n, p = list(map(int, input().split()))\n    an = []\n    for i in range(n):\n        an.append(math.prod(p, an[i]))\n    an.sort()\n    print(sum(an[-1]))\n    for i in range(len(an)):\n        print(sum(an[i]))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "138": {"problem_id": 138, "answer": "n, a, b, c = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a % i == 0:\n        s += a // i\nprint(s)\n"}, "139": {"problem_id": 139, "answer": "n, m = list(map(int, input().split()))\nedges = []\nfor i in range(m):\n    if i not in edges:\n        edges.append(i)\n        continue\n    else:\n        edges.append(i)\n\nprint('YES' if len(edges) == 1 else 'NO')\n"}, "140": {"problem_id": 140, "answer": "# cook your dish here\nn,m = map(int,input().split())\na = [int(i) for i in input().split()]\ns = [int(i) for i in input().split()]\nans = 0\nfor i in range(n):\n    x,s = map(int,input().split())\n    ans += max(s[x-1] - s[x],s[x+s.index(max(s))])\nprint(ans)"}, "141": {"problem_id": 141, "answer": "def is_good(s):\n    if s == 0:\n        return True\n    elif s == 1:\n        return False\n    else:\n        for i in range(1, len(s)):\n            if s[i] == s[i-1]:\n                return False\n        return True\n\nn = int(input())\ns = list(map(int, input().split()))\n\nprint(is_good(s))\n"}, "142": {"problem_id": 142, "answer": "n, l = map(int, input().split())\nc = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[c[i] - 1] = 1\nfor i in range(n):\n    if c[i] == 0:\n        d[c[i] - 1] += 1\n    else:\n        d[c[i] - 1] = 1\nprint(d[c[n]])"}, "143": {"problem_id": 143, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] > b[i]:\n        ans += b[i]\n        a[i] = b[i]\nprint(ans)"}, "144": {"problem_id": 144, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if a[0] == '0' else \"NO\")"}, "145": {"problem_id": 145, "answer": "s = input()\nn = len(s)\nl = []\nfor i in range(n):\n    if s[i] == 'M':\n        l.append(i)\n    else:\n        l.append(i)\nprint(' '.join(l))\n"}, "146": {"problem_id": 146, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k = map(int,input().split())\n\ns = [0]*n\nfor i in range(n):\n    s[i] = int(input())\n    s[i+1] = int(input())\n\ne = 0\ns = []\nfor i in range(n-1,-1,-1):\n    e += s[i]\n    s.append(e)\n\nprint(max(s))"}, "147": {"problem_id": 147, "answer": "n,c = list(map(int,input().split()))\ncosts = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    if c[i] == 0:\n        ans += costs[i]\n    else:\n        ans += costs[i]\nprint(ans)\n"}, "148": {"problem_id": 148, "answer": "def main():\n    n, a, x, b, y = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n    else:\n        t = set()\n        for i in range(n):\n            t.add(i)\n            if i == x:\n                continue\n            elif i == y:\n                t.add(i)\n                break\n        if t == set(t) and a not in t:\n            print(\"NO\")\n        else:\n            print(\"YES\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "149": {"problem_id": 149, "answer": "from bisect import bisect_left as bl\nn, m = map(int, input().split())\nl, r = 0, 0\nfor i in range(m):\n    x, y, l = map(int, input().split())\n    if x == y:\n        l += 1\n    elif x == m[i]:\n        r += 1\n    else:\n        break\nprint(max(l, r))"}, "150": {"problem_id": 150, "answer": "import math\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\ns = 0\nfor i in range(len(l)):\n    if l[i] + l[i+1] + l[i+2] +... + l[i] <= n:\n        s += 1\nprint(s)\n"}, "151": {"problem_id": 151, "answer": "def main():\n    s = input()\n    for i in range(len(s)):\n        if s[i] == 'a':\n            s.pop(0)\n        else:\n            s.pop(i+1)\n    print(' '.join(map(str, s)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "152": {"problem_id": 152, "answer": "def main():\n    n, m, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    d.sort()\n    dp = [[0] * m for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        dp[i][0] = dp[i - 1][0] + a[i]\n        dp[i][1] = dp[i - 1][1] + a[i]\n        dp[i][2] = dp[i - 1][2] + a[i]\n        dp[i][3] = dp[i - 1][3] + a[i]\n        dp[i][4] = dp[i - 1][4] + a[i]\n        dp[i][5] = dp[i - 1][5] + a[i]\n        dp[i][6] = dp[i - 1][6] + a[i]\n        dp[i][7] = dp[i - 1][7] + a[i]\n        dp[i][8] = dp[i - 1][8] + a[i]\n        dp[i][9] = dp[i - 1][9] + a[i]\n        dp[i][0] = min(dp[i][0], dp[i][1])\n        dp[i][1] = min(dp[i][1], dp[i][2])\n        dp[i][2] = min(dp[i][2], dp[i][3])\n        dp[i][3] = min(dp[i][3], dp[i][4])\n        dp[i][4] = min(dp[i][4], dp[i][5])\n        dp[i][5] = min(dp[i][5], dp[i][6])\n        dp[i][6] = min(dp[i][6], dp[i][7])\n        dp[i][7] = min(dp[i][7], dp[i][8])\n        dp[i][8] = min(dp[i][8], dp[i][9])\n        dp[i][9] = min(dp[i][9], dp[i][0])\n        dp[i][0] = min(dp[i][0], dp[i][1])\n        dp[i][1] = min(dp[i][1], dp[i][2])\n        dp[i][2] = min(dp[i][2], dp[i][3])\n        dp[i][3] = min(dp[i][3], dp[i][4])\n        dp[i][4] = min(dp[i][4], dp[i][5])\n        dp[i][5] = min(dp[i][5], dp[i][6])\n        dp[i][6] = min(dp[i][6], dp[i][7])\n        dp[i][7] = min(dp[i][7], dp[i][8])\n        dp[i][8] = min(dp[i][8], dp[i][9])\n        d"}, "153": {"problem_id": 153, "answer": "n, k, m = list(map(int, input().split()))\nt = list(map(int, input().split()))\nt.sort()\nfor i in range(1, n + 1):\n    t[i] = t[i - 1] + 1\nprint(sum(t) + k)\n"}, "154": {"problem_id": 154, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nn = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n    s += pow(i,s,2)\nprint(s%1000000007)"}, "155": {"problem_id": 155, "answer": "n, m, k = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    l.append(x)\n    l.append(y)\nl.sort(key=lambda x: x[0])\nprint(len(l))\nfor i in range(len(l)):\n    print(l[i][0], end=' ')\n    print(''.join(l[i]))\n"}, "156": {"problem_id": 156, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ndef __starting_point():\n    x=int(input())\n    print(x)\n__starting_point()"}, "157": {"problem_id": 157, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef __starting_point():\n    a = int(readline())\n    b = int(readline())\n    print(a + b)\n__starting_point()"}, "158": {"problem_id": 158, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        c += 1\nprint('YES' if c == n else 'NO')"}, "159": {"problem_id": 159, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    l.append(a[i]**0.5)\n    l.append(a[i]**0.5)\nprint(' '.join(l))"}, "160": {"problem_id": 160, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ndef sscanf(s, i=1, j=1):\n    if i == 0:\n        return 1\n    elif i == len(s) - 1:\n        return s[i]\n    else:\n        return -1\ndef maxi(n, k):\n    if n < k:\n        return 0\n    ans = 0\n    for i in range(1, k + 1):\n        if n % i == 0:\n            ans += int(n / i)\n        else:\n            ans += int(n / i)\n    return ans\nn, k = map(int, input().split())\nA = list(map(int, input().split()))\nprint(maxi(A, k))"}, "161": {"problem_id": 161, "answer": "from collections import Counter\nfrom itertools import chain\nn = int(input())\nfor i in range(n):\n    x = int(input())\n    if x % 2 == 0:\n        print(0)\n    elif x % 3 == 0:\n        print(1)\n    else:\n        print(2)\n        x = x // 3\n        print(x % 2)\n"}, "162": {"problem_id": 162, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(max(a) + min(b))"}, "163": {"problem_id": 163, "answer": "n, k = list(map(int, input().split()))\ns = input()\nl = len(s)\nfor i in range(l):\n    if s[i] == '.':\n        print('NO')\n        continue\n    if s[i] == '.':\n        print('YES')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == 'T':\n        print('NO')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == '.':\n        print('YES')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == '.':\n        print('YES')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == '.':\n        print('YES')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == '.':\n        print('YES')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == 'T':\n        print('NO')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == '.':\n        print('YES')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == '.':\n        print('YES')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == '.':\n        print('YES')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == '.':\n        print('YES')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == '.':\n        print('YES')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == '.':\n        print('YES')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == '.':\n        print('YES')\n        continue\n    if i == k:\n        print('NO')\n        continue\n    if s[i] == '.':\n        print('YES')\n        continue\n    if i == k:\n        print('NO')\n   "}, "164": {"problem_id": 164, "answer": ""}, "165": {"problem_id": 165, "answer": "from collections import deque\nn, d, s = map(int, input().split())\nl = []\nfor i in range(n):\n    l.append(input())\nprint(len(l))"}, "166": {"problem_id": 166, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    a[x] = y\n    a[y] = x\n\nprint('YES' if a[y] == x else 'NO')"}, "167": {"problem_id": 167, "answer": "s = input()\nn = len(s)\nif n < 2:\n    return \"-\"\nelse:\n    s = s.split(\" \")\n    n -= 1\n    for i in range(n):\n        if s[i] == s[i - 1]:\n            s[i] = \"A\"\n        elif s[i] == s[i - 1]:\n            s[i] = \"B\"\n        else:\n            s[i] = \"A\"\n        n -= 1\n    return s[n - 1]\n"}, "168": {"problem_id": 168, "answer": "n = int(input())\ns = input()\nl = len(s)\nif n%2 == 0:\n    print(0)\nelif n==1:\n    print(l)\nelse:\n    for i in range(l-1,0,-1):\n        if s[i]==\"-\" and s[i+1]==\"+\":\n            s[i] = \"-\"\n            l-=1\n            break\n        else:\n            print(l-1)\n            break\n            \n            \n"}, "169": {"problem_id": 169, "answer": "n = int(input())\na, b, c = 0, 0, 0\nfor i in range(n):\n    a, b, c = (int(x) - 1) * (n - 1), (int(x) - 1) * (n - 1)\n    if a < b:\n        a, b = b, a\n    elif b < a:\n        b, a = a, b\n    else:\n        b, a = a, b\nprint(2)\n"}, "170": {"problem_id": 170, "answer": "n = int(input())\nfor i in range(n):\n    k = list(map(int,input().split()))\n    print(k[0])\n"}, "171": {"problem_id": 171, "answer": "from sys import stdin, stdout\ninput = stdin.readline\ns = \"abcaba\"\nfor i in range(1,int(s.count(s)//2)+1):\n    if s[i]=='!' or s[i]=='A':\n        print(\"Too weak\")\n    else:\n        print(\"Good\")"}, "172": {"problem_id": 172, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(min(a[0], b[0]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "173": {"problem_id": 173, "answer": "n, m = map(int, input().split())\ns = input()\nl = len(s)\nif l == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "174": {"problem_id": 174, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if len(a) == n else \"NO\")\n"}, "175": {"problem_id": 175, "answer": "n, m = list(map(int, input().split()))\na = 0\nb = 0\nfor i in range(n):\n    if a == 0:\n        a = i\n    elif b == 0:\n        b = i\n    else:\n        a = max(a, b)\nprint(a, b)"}, "176": {"problem_id": 176, "answer": "def f(n, k):\n    if k == 0:\n        return 0\n    else:\n        return sum(1 for i in range(n + 1) if i % k == 0)\n\ndef __starting_point():\n    f(1, 1)\n__starting_point()"}, "177": {"problem_id": 177, "answer": "def main():\n    s = input()\n    print(int(s[0]))\n\nmain()\n"}, "178": {"problem_id": 178, "answer": "n = int(input())\ns = input()\nif n % 2 == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "179": {"problem_id": 179, "answer": "from math import ceil\nn, x, y = map(int, input().split())\na = [int(i) for i in input().split()]\nfor i in range(1, n + 1):\n    if a[i] <= x:\n        x = a[i]\n    else:\n        x = ceil(a[i] / x)\nprint(x)"}, "180": {"problem_id": 180, "answer": "from sys import stdin,stdout\ns = stdin.readline().strip()\nn = len(s)\ncnt = 0\nfor i in range(n):\n    if s[i] == '1':\n        cnt += 1\n    else:\n        cnt = 0\n        break\nprint(cnt)"}, "181": {"problem_id": 181, "answer": "from sys import stdin\ninput = stdin.readline\n\ndef __starting_point():\n    x = int(input())\n    for i in range(x):\n        print(i)\n__starting_point()"}, "182": {"problem_id": 182, "answer": "a,b,c=map(int,input().split())\nx,y,z=map(int,input().split())\nif(a==b and c==0):\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "183": {"problem_id": 183, "answer": "n, k, m = list(map(int, input().split()))\ns = input()\nmod = 10**9 + 1\nfor i in range(len(s)):\n    if s[i] == s[i-1]:\n        s[i] = s[i-1]\n    else:\n        s[i] = s[i-1] % mod\nprint(s[:mod] % mod)\n"}, "184": {"problem_id": 184, "answer": "l, r, a = list(map(int, input().split()))\nn = l + r + a\n\nfor i in range(n):\n    if i % 2 == 0:\n        print(i)\n    else:\n        print(i + 1)\n"}, "185": {"problem_id": 185, "answer": "n, k = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    l.append(int(input()))\nl.sort(reverse=True)\ns = 0\nfor i in range(n):\n    if l[i] == 0:\n        s += i\nprint(s)\n"}, "186": {"problem_id": 186, "answer": "n, m = list(map(int, input().split()))\ns = [0] * (n + m + 1)\nfor i in range(n):\n    s[i] = min(s[i], m)\nprint(s[n])"}, "187": {"problem_id": 187, "answer": "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    d = dict()\n    for j in range(n):\n        d[j] = d.get(j, 0) + 1\n    d['A'] = a\n    d['B'] = a\n    d['C'] = a\n    d['D'] = a\n    d['E'] = a\n    d['F'] = a\n    d['G'] = a\n    d['H'] = a\n    d['I'] = a\n    d['J'] = a\n    d['K'] = a\n    d['L'] = a\n    d['M'] = a\n    d['N'] = a\n    d['O'] = a\n    d['P'] = a\n    d['S'] = a\n    d['T'] = a\n    d['U'] = a\n    d['V'] = a\n    d['W'] = a\n    d['X'] = a\n    d['Y'] = a\n    d['Z'] = a\n    d['W'] = a\n    d['Y'] = a\n    d['YZ'] = a\n    d['X'] = a\n    d['Y'] = a\n    d['X']] = 'Y'\n    d['A'] = 'A'\n    d['B'] = 'B'\n    d['C'] = 'C'\n    d['D'] = 'D'\n    d['E'] = 'E'\n    d['F'] = 'F'\n    d['G'] = 'G'\n    d['H'] = 'H'\n    d['I'] = 'I'\n    d['J'] = 'J'\n    d['K'] = 'K'\n    d['L'] = 'L'\n    d['M'] = 'M'\n    d['N'] = 'N'\n    d['O'] = 'O'\n    d['P'] = 'P'\n    d['S'] = 'S'\n    d['T'] = 'T'\n    d['U'] = 'U'\n    d['V'] = 'V'\n    d['W'] = 'W'\n    d['X'] = 'X'\n    d['Y'] = 'Y'\n    d['Z'] = 'Z'\n    d['Y'] = 'Y'\n    d['YZ'] = 'Z'\n    d['X'] = 'X'\n    d['Y'] = 'Y'\n    d['YZ']] = 'Y'\n    d['A'] = 'A'\n    d['B'] = 'B'\n    d['C'] = 'C'\n    d['D'] = 'D'\n    d['E'] = 'E'\n    d['F'] = 'F'\n    d['G'] = 'G'\n    d['H'] = 'H'\n    d['I'] = 'I'\n    d['J'] = 'J'\n    d['K'] = 'K'\n    d['L'] = 'L'\n    d['M'] = 'M'\n    d['N'] = 'N'\n    d['O'] = 'O'\n    d['P'] = 'P'\n    d['S'] = 'S'\n    d['T'] = 'T'\n    d['U'] = 'U'\n    d['V'] = 'V'\n    d['W'] = 'W'\n    d['X'] = 'X'\n    d['Y'] = 'Y'\n    d['Z'] = 'Z'\n    d['Y']"}, "188": {"problem_id": 188, "answer": "def solve(n, k, l, r):\n    if n == 0:\n        return \"NO\"\n    elif k == l:\n        return \"YES\"\n    else:\n        x = [0] * (n)\n        y = [0] * (n)\n        for i in range(n):\n            x[i] = x[i] + l[i]\n            y[i] = y[i] + r[i]\n        return \"YES\" if x[0] == y[0] else \"NO\"\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(\"YES\" if solve(n, k, l, r) else \"NO\")"}, "189": {"problem_id": 189, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n):\n    if a[i] > 1:\n        l.append(a[i])\n    else:\n        l.append(a[i])\nprint(max(l))"}, "190": {"problem_id": 190, "answer": ""}, "191": {"problem_id": 191, "answer": "from math import ceil,sqrt,log,factorial,frozenset,unifilter as nf\nn,k = map(int,input().split())\na = list(map(int,input().split()))\n\ndef f(x):\n    if x==0:\n        return 0\n    elif x==1:\n        return 1\n    else:\n        return max(a[x]*log(x,2))\n\nl = int(input())\nfor i in range(l):\n    a = list(map(int,input().split()))\n    print(f(a[0]))"}, "192": {"problem_id": 192, "answer": "import sys\ninput = sys.stdin.readline\n\ndef dijkstra(n, d, S):\n    if d < S:\n        return 0\n    else:\n        dp = [0] * (n + 1)\n        for i in range(n + 1):\n            dp[i] = dp[i + 1] + dp[i]\n        return dp[n]\n\ndef dijkstra2(n, d, S):\n    if d < S:\n        return 0\n    else:\n        dp = [0] * (n + 1)\n        for i in range(n + 1):\n            dp[i] = dp[i + 1] + dp[i]\n        return dp[n]\n\ndef dijkstra(n, d, S):\n    if d < S:\n        return 0\n    else:\n        dp = [0] * (n + 1)\n        for i in range(n + 1):\n            dp[i] = dp[i + 1] + dp[i]\n        return dp[n]\n\ndef dijkstra3(n, d, S):\n    if d < S:\n        return 0\n    else:\n        dp = [0] * (n + 1)\n        for i in range(n + 1):\n            dp[i] = dp[i + 1] + dp[i]\n        return dp[n]\n\ndef dijkstra(n, d, S):\n    if d < S:\n        return 0\n    else:\n        dp = [0] * (n + 1)\n        for i in range(n + 1):\n            dp[i] = dp[i + 1] + dp[i]\n        return dp[n]\n\ndef dijkstra2(n, d, S):\n    if d < S:\n        return 0\n    else:\n        dp = [0] * (n + 1)\n        for i in range(n + 1):\n            dp[i] = dp[i + 1] + dp[i]\n        return dp[n]\n\ndef dijkstra3(n, d, S):\n    if d < S:\n        return 0\n    else:\n        dp = [0] * (n + 1)\n        for i in range(n + 1):\n            dp[i] = dp[i + 1] + dp[i]\n        return dp[n]\n\ndef dijkstra(n, d, S):\n    if d < S:\n        return 0\n    else:\n        dp = [0] * (n + 1)\n        for i in range(n + 1):\n            dp[i] = dp[i + 1] + dp[i]\n        return dp[n]\n\ndef dijkstra(n, d, S):\n    if d < S:\n        return 0\n    else:\n"}, "193": {"problem_id": 193, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    a, b = list(map(int, input().split()))\n    c, d = list(map(int, input().split()))\n    m = a * b\n    m.sort()\n    m.append(c)\n    m.append(d)\n    print(m[-1][0])\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "194": {"problem_id": 194, "answer": "n, a, b = list(map(int, input().split()))\n\nG = []\nfor i in range(n):\n    if a[i] == 1:\n        G.append(i)\n    else:\n        G.append(a[i])\n\nprint(len(G))\nprint(len(set(G)))\nprint(len(set(G)))\n\nfor i in range(n):\n    if a[i] == 1:\n        print(i)\n        continue\n    if len(G) == 2:\n        print(i)\n        continue\n    if len(G) == 3:\n        print(i)\n        continue\n    if len(G) == 4:\n        print(i)\n        continue\n    if len(G) == 5:\n        print(i)\n        continue\n    if len(G) == 6:\n        print(i)\n        continue\n    if len(G) == 7:\n        print(i)\n        continue\n    if len(G) == 8:\n        print(i)\n        continue\n    if len(G) == 9:\n        print(i)\n        continue\n    if len(G) == 10:\n        print(i)\n        continue\n    if len(G) == 11:\n        print(i)\n        continue\n    if len(G) == 12:\n        print(i)\n        continue\n    if len(G) == 13:\n        print(i)\n        continue\n    if len(G) == 14:\n        print(i)\n        continue\n    if len(G) == 15:\n        print(i)\n        continue\n    if len(G) == 16:\n        print(i)\n        continue\n    if len(G) == 17:\n        print(i)\n        continue\n    if len(G) == 18:\n        print(i)\n        continue\n    if len(G) == 19:\n        print(i)\n        continue\n    if len(G) == 20:\n        print(i)\n        continue\n    if len(G) == 21:\n        print(i)\n        continue\n    if len(G) == 22:\n        print(i)\n        continue\n    if len(G) == 23:\n        print(i)\n        continue\n    if len(G) == 24:\n        print(i)\n        continue\n    if len(G) == 25:\n        print(i)\n        continue\n    if len(G) == 26:\n        print(i)\n        continue\n    if len(G) == 25:\n        print(i)\n        continue\n    if len(G) == 26:\n       "}, "195": {"problem_id": 195, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    A,B,C,N = list(map(int,input().split()))\n    d = {}\n    d[A] = 0\n    d[B] = 0\n    d[C] = 0\n    d[N] = 0\n    for i in range(A,B+1):\n        if i in d:\n            d[i] = d[i].get(d[i].get(A,0) + 1,0) + 1\n        else:\n            d[i] = d[i].get(A,0) + 1\n    print((sum(d.values())))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "196": {"problem_id": 196, "answer": "from sys import stdin, stdout\nfrom math import gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nmod = 10 ** 9 + 7\ndef main():\n    x, k = map(int, stdin.readline().split())\n    if x == '0':\n        print(k)\n    elif x == '1':\n        print(k - 1)\n    else:\n        d = 10 ** 9 + 7\n        for i in range(k):\n            d *= x % i\n        print(d)\n\nmain()"}, "197": {"problem_id": 197, "answer": "import math\nn = int(input())\nl = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if l[i] == r[i]:\n        ans += 1\n    else:\n        ans = 0\nprint(ans)\n"}, "198": {"problem_id": 198, "answer": "n = int(input())\nl = list(map(int, input().split()))\n\ndef cut(x, y, l):\n    if x == y:\n        return 1\n    else:\n        return 0\n\ndef is_rectangle(x, y, l):\n    if x == y:\n        return 1\n    else:\n        return 0\n\ndef is_square(x, y, l):\n    if x == y:\n        return 1\n    else:\n        return 0\n\n# \u5982\u4f55\u7528\u6765\u5220\u9664\u65b9\u6cd5\uff0c\u5426\u5220\u9664\u65b9\u6cd5\uff0c\u5426\u5220\u9664\u65b9\u6cd5\uff0c\u5426\u5220\u9664\u65b9\u6cd5\n# \u5982\u4f55\u7528\u6765\u5220\u9664\u65b9\u6cd5\uff0c\u5426\u5220\u9664\u65b9\u6cd5\uff0c\u5426\u5220\u9664\u65b9\u6cd5\uff0c\u5426\u5220\u9664\u65b9\u6cd5\n\n# \u5982\u4f55\u5bf9\u4e8e\u6700\u5c0f\u6839\u636e\u8fb9\u6863\u6570\u7ec4\uff0c\u9700\u8981\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u8003\u8651\u901a\u8fc7\u8fd9\u91cd\u5916\u548c\u7ed3\u675f\n# \u5982\u679c\u5b57\u7b26\u4e32\u5b58\u50a8\u5230\u591a\u5c11\u90e8\u5206\uff0c\u4f1a\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e\u6267\u884c\u4e00\u6b21\uff0c\u7136\u540e"}, "199": {"problem_id": 199, "answer": "import sys\ninput = sys.stdin.readline\n\nn, s = list(map(int, input().split()))\nv = list(map(int, input().split()))\n\nfor i in range(n):\n    v.append(v[-1] + s)\n\nprint(' '.join(map(str, v)))\n"}, "200": {"problem_id": 200, "answer": "import sys\ninput = sys.stdin.readline\n\nh, a, b = list(map(int, input().split()))\n\nc = 0\nfor i in range(a):\n    c += (b - b) * (h - a)\n    a -= (b - b) * (h - a)\nprint(c)\n"}, "201": {"problem_id": 201, "answer": "from sys import stdin,stdout\ndef lint():\n    return list(map(int,stdin.readline().split()))\n\ndef __starting_point():\n    stdin.readline()\n    stdout.write(str(lint()))\n__starting_point()"}, "202": {"problem_id": 202, "answer": "from sys import stdin, stdout\nfrom math import floor, ceil, log2, pi, sqrt\nfrom collections import deque, Counter, defaultdict, OrderedDict, ascii_text, ascii_ints, ascii_ints_with_dig, atan2, acos2, factorial, gcd, is_integer, is_integer_with_dig, is_integer_with_dig, is_integer_with_dig, is_integer_with_dig\n\nsys_stdin = stdin.readline\nsys_stdout = stdout.write\n\ndef __starting_point():\n    x1, y1 = list(map(int, input().split()))\n    x2, y2 = list(map(int, input().split()))\n    print(floor(x1**2 - x2**2) + floor(y1**2 - y2**2))\n__starting_point()"}, "203": {"problem_id": 203, "answer": "n = int(input())\nfor i in range(n):\n    d = input()\n    if d[1] == 'D':\n        print('R')\n    elif d[1] == 'R':\n        print('D')\n    else:\n        print('R')\n"}, "204": {"problem_id": 204, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ns = list(map(int,input().split()))\nl = len(s)\nfor i in range(l):\n    print(s[i] - s[i-1])"}, "205": {"problem_id": 205, "answer": "n, b = map(int, input().split())\nl = list(map(int, input().split()))\nl.sort()\nfor i in range(1, n + 1):\n    if l[i] % b == 0:\n        print(i)\n    else:\n        print(b - i)\n"}, "206": {"problem_id": 206, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nM = int(readline())\nfor _ in range(M):\n    a, b = list(map(int, read().split()))\n    if a == 0:\n        print(0)\n    elif b == 0:\n        print(a + b)\n    else:\n        print(a + b)\n"}, "207": {"problem_id": 207, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef check(l):\n    if l == 0:\n        return True\n    else:\n        return False\n\nfor i in range(n):\n    print(a[i])\n"}, "208": {"problem_id": 208, "answer": "from collections import deque\n\ndef main():\n    x, y, z = map(int, input().split())\n    if x == 0:\n        print(-1)\n    elif y == 0:\n        print(-1)\n    else:\n        for i in range(x, y):\n            if z[i] == z[i-1]:\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n                z[i] = z[i-1]\n              "}, "209": {"problem_id": 209, "answer": "from math import factorial as f\n\ndef factorial(n): \n    if n == 1: \n        return 1\n    elif n % 2 == 0: \n        return f(n) * factorial(n // 2) \n    else: \n        return f(n) * factorial(n // 2) % 1000000007\n\ndef __starting_point():\n    x, y = list(map(int, input().split()))\n    n = int(input())\n    print(__starting_point())\n\n__starting_point()"}, "210": {"problem_id": 210, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\nprint('YES' if a[-1] == '1' else 'NO')\n"}, "211": {"problem_id": 211, "answer": "from math import ceil, floor\n\n\ndef __starting_point():\n    n, m, k = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    ans = 0\n    for i in range(m):\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    ans += d[m]\n    print(int(ans))\n\n\n__starting_point()"}, "212": {"problem_id": 212, "answer": "n = int(input())\nprint(\"YES\" if n % 2 == 0 else \"NO\")\nif n % 100 == 0:\n    print(\"YES\")\n    return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n % i == 0:\n        print(\"NO\")\n        return\nfor i in range(1, 100):\n    if n"}, "213": {"problem_id": 213, "answer": "n, m = list(map(int, input().split()))\nd = {}\nfor i in range(m):\n    if i not in d:\n        d[i] = []\n    else:\n        d[i].append(i)\nprint(\" \".join(map(str, d.values())))\n"}, "214": {"problem_id": 214, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    input = readline().rstrip()\n    n = len(input)\n    for i in range(n):\n        print(int(input[i]))\n        if i == n-1:\n            print(0)\n        else:\n            print(max(0,i-1))\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n        "}, "215": {"problem_id": 215, "answer": "n = int(input())\ns = input()\nprint(n)\nfor i in range(n):\n    if s[i] in s:\n        print(i)\n"}, "216": {"problem_id": 216, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = sum(a)\nc = sum(a)\nif b - c > 0:\n    print(max(b - c, c))\nelse:\n    print(max(a - b, c))"}, "217": {"problem_id": 217, "answer": "a,b,f,k = list(map(int,input().split()))\n\ndef check(x,y):\n    if x == y:\n        return True\n    else:\n        return False\n\ndef __starting_point():\n    a,b,f,k = list(map(int,input().split()))\n    \n    # a = 0\n    # b = 0\n    # k = 0\n    # a = 0\n    # b = 0\n    # k = 0\n    \n    # print(a,b,k)\n    \n    if a == 0:\n        return True\n    elif b == 0:\n        return True\n    elif k == 0:\n        return False\n    else:\n        return -1\n__starting_point()"}, "218": {"problem_id": 218, "answer": "n, p, q = list(map(int, input().split()))\ns = input()\nl = len(s)\nm = 0\nfor i in range(m):\n    if s[i] == '0':\n        l -= 1\n        break\n    elif s[i] == '1':\n        l -= 1\n        m += 1\nprint(l)\n"}, "219": {"problem_id": 219, "answer": "from math import log2\nn, m, s, d = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef is_obstacles(x):\n    return x <= x[0]\n\ndef dfs(x, y):\n    if x == y:\n        return 1\n    elif is_obstacles(x):\n        return 0\n    else:\n        return 1 + dfs(x, y)\n\n# a.sort()\n# b.sort()\n# c.sort()\n# d.sort()\n\n# print(a)\n# print(b)\n\n# print(dfs(0, 0))\n# print(dfs(0, 1))\n\n# print(is_obstacles(0))\n\n# print(is_obstacles(1))\n\n# print(is_obstacles(2))\n\n# print(is_obstacles(3))\n\n# print(is_obstacles(4))\n\n# print(is_obstacles(5))\n\n# print(is_obstacles(6))\n\n# print(is_obstacles(7))\n\n# print(is_obstacles(8))\n\n# print(is_obstacles(9))\n\n# print(is_obstacles(10))\n\n# print(is_obstacles(11))\n\n# print(is_obstacles(12))\n\n# print(is_obstacles(13))\n\n# print(is_obstacles(14))\n\n# print(is_obstacles(15))\n\n# print(is_obstacles(16))\n\n# print(is_obstacles(17))\n\n# print(is_obstacles(18))\n\n# print(is_obstacles(19))\n\n# print(is_obstacles(20))\n\n# print(is_obstacles(21))\n\n# print(is_obstacles(22))\n\n# print(is_obstacles(23))\n\n# print(is_obstacles(24))\n\n# print(is_obstacles(25))\n\n# print(is_obstacles(26))\n\n# print(is_obstacles(27))\n\n# print(is_obstacles(28))\n\n# print(is_obstacles(29))\n\n# print(is_obstacles(30))\n\n# print(is_obstacles(31))\n\n# print(is_obstacles(32))\n\n# print(is_obstacles(33))\n\n# print(is_obstacles(34))\n\n# print(is_obstacles(35))\n\n# print(is_obstacles(36))\n\n# print(is_obstacles(37))\n\n# print(is_obstacles(38))\n\n# print(is_obstacles(39))\n\n# print(is_obstacles(40))\n\n# print(is_obstacles(40.0))\n\n# print(is_obstacles(40.0.0))\n\n# print(is_obstacles(41.0))\n\n# print(is_obstacles(42.0))\n\n# print(is_obstacles(43.0))\n\n# print(is_obstacles(44.0))\n\n# print(is_obstacles(45.0))\n\n# print(is_obstacles(45.0.0))\n\n# print(is_obstacles(46.0))\n\n# print(is_obstacles(47.0))\n\n# print(is_obstacles(48.0))\n\n# print(is_obstacles(49.0))\n\n# print(is_obstacles(50.0))\n\n# print(is_obstacles(50.0.0))\n\n# print(is_obstacles(51.0))\n\n# print(is_obstacles(52.0))\n\n# print(is_obstacles(53.0))\n\n# print(is_obstacles(54.0))\n\n# print("}, "220": {"problem_id": 220, "answer": "s,x = list(map(int,input().split()))\na = 0\nb = 0\nfor i in range(1,s+1):\n    if(a & b):\n        a = b\n        b = 0\n    elif(a & b == 0):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b):\n        a = b\n        b = 0\n    elif(a & b == b"}, "221": {"problem_id": 221, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nskew = sorted(list(map(int, input().split())))\n\nfor i in range(n):\n    k -= 1\n    if k == 1:\n        print(i)\n        continue\n    x = k\n    y = k\n    while x <= y:\n        x += 1\n        y -= 1\n    if x == n:\n        print(i)\n        continue\n    x = k\n    y = k\n    while x <= y:\n        x += 1\n        y -= 1\n    if x == n:\n        print(i)\n        continue\n    x = k\n    y = k\n    while x <= y:\n        x += 1\n        y -= 1\n    if x == n:\n        print(i)\n        continue\n    x = k\n    y = k\n    while x <= y:\n        x += 1\n        y -= 1\n    if x == n:\n        print(i)\n        continue\n    x = k\n    y = k\n    while x <= y:\n        x += 1\n        y -= 1\n    if x == n:\n        print(i)\n        continue\n    x = k\n    y = k\n    while x <= y:\n        x += 1\n        y -= 1\n    if x == n:\n        print(i)\n        continue\n    x = k\n    y = k\n    while x <= y:\n        x += 1\n        y -= 1\n    if x == n:\n        print(i)\n        continue\n    x = k\n    y = k\n    while x <= y:\n        x += 1\n        y -= 1\n    if x == n:\n        print(i)\n        continue\n    x = k\n    y = k\n    while x <= y:\n        x += 1\n        y -= 1\n    if x == n:\n        print(i)\n        continue\n    x = k\n    y = k\n    while x <= y:\n        x += 1\n        y -= 1\n    if x == n:\n        print(i)\n        continue\n    x = k\n    y = k\n    while x <= y:\n        x += 1\n        y -= 1\n    if x == n:\n        print(i)\n        continue\n    x = k\n    y = k\n    while x <= y:\n        x += 1\n        y -= 1\n    if x == n:\n        print(i)\n        continue\n    x = k\n    y = k\n    while x <= y:\n       "}, "222": {"problem_id": 222, "answer": "n = int(input())\na = [int(i) for i in input().split()]\n\nif n % 2 == 0:\n    print(-1)\n    return\n\nelse:\n    a.sort()\n    for i in range(n//2):\n        if a[i]%2 == 0:\n            a[i] = a[i]/2\n            break\n        else:\n            a[i] = a[i]*2\n            break\n            \n    print(a[n//2] + \" \")\n"}, "223": {"problem_id": 223, "answer": "import math\nn = int(input())\nfor i in range(n):\n    x = int(input())\n    print(math.gcd(x, x+1))\n"}, "224": {"problem_id": 224, "answer": "from string import ascii_lowercase as a,ascii_uppercase as au\ndef vowel_alp(n):\n    return ''.join(c.upper() if c.islower() else c for c in ascii_lowercase)\n\ndef vowel_alp(n):\n    return ''.join(c.upper() if c.islower() else c for c in ascii_lowercase)\n\ndef is_vowel(n):\n    return n in vowels\n\ndef solve(n, a, b, c, d, e, f, g, h, i, j, k, l):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    elif n == 3:\n        return 2\n    elif n == 4:\n        return 3\n    elif n == 5:\n        return 4\n    elif n == 6:\n        return 5\n    elif n == 7:\n        return 6\n    elif n == 8:\n        return 7\n    elif n == 9:\n        return 8\n    elif n == 10:\n        return 9\n    elif n == 11:\n        return 10\n    elif n == 12:\n        return 11\n    elif n == 13:\n        return 12\n    elif n == 14:\n        return 13\n    elif n == 14:\n        return 14\n    elif n == 15:\n        return 15\n    elif n == 16:\n        return 16\n    elif n == 17:\n        return 17\n    elif n == 18:\n        return 18\n    elif n == 19:\n        return 19\n    elif n == 20:\n        return 20\n    elif n == 21:\n        return 21\n    elif n == 22:\n        return 22\n    elif n == 23:\n        return 23\n    elif n == 24:\n        return 24\n    elif n == 25:\n        return 25\n    elif n == 26:\n        return 26\n    elif n == 27:\n        return 27\n    elif n == 28:\n        return 28\n    elif n == 29:\n        return 29\n    elif n == 30:\n        return 30\n    elif n == 31:\n        return 30\n    elif n == 32:\n        return 32\n    elif n == 33:\n        return 33\n    elif n == 34:\n        return 34\n    elif n == 35:\n        return 35\n    elif n == 36:\n        return 36\n    elif n == 37:\n        return 37\n    elif n == 38:\n        return 38\n    elif n == 39:\n        return 39\n    elif n == 40:\n        return 40\n    elif n == 41:\n        return 41\n    elif n == 42:\n"}, "225": {"problem_id": 225, "answer": "for i in range(int(input())):\n    a,b,c = map(int,input().split())\n    if a==b:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "226": {"problem_id": 226, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ns = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        s += a[i]\n    else:\n        s += b[i]\nprint(s)"}, "227": {"problem_id": 227, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(a, b):\n    if a[b[0]] == 0:\n        return -1\n    elif a[b[0]] > 0:\n        return solve(a[b[0]], b[1:])\n    else:\n        return -1\n\nprint(solve(3, 3))\n"}, "228": {"problem_id": 228, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nif n % 2 == 0:\n    print('Alice')\nelse:\n    print('Bob')\n"}, "229": {"problem_id": 229, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef is_integer(arr):\n    if len(arr) == 0:\n        return False\n    else:\n        return True\n\nfor i in range(n):\n    a.append(is_integer(a[i]))\n\nprint('YES')\nfor i in range(n):\n    print(' '.join(a[i] for i in range(n)))"}, "230": {"problem_id": 230, "answer": "N = int(input())\nS = list(map(int, input().split()))\nif len(S) < 2:\n    print(0)\n    return\nelse:\n    a = 0\n    b = 0\n    for i in range(len(S)):\n        if S[i] == S[i + 1]:\n            a += 1\n        elif S[i] == S[i + 1]:\n            b += 1\n        else:\n            break\n    if a == b:\n        print(0)\n        return\n    else:\n        a = b\n        b = 0\n        for i in range(len(S)):\n            if S[i] == S[i + 1]:\n                a += 1\n            elif S[i] == S[i + 1]:\n                b += 1\n            else:\n                break\n        if a == b:\n            print(0)\n            return\n        else:\n            a = b\n            b = 0\n            for i in range(len(S)):\n                if S[i] == S[i + 1]:\n                    a += 1\n                elif S[i] == S[i + 1]:\n                    b += 1\n                else:\n                    break\n            if a == b:\n                print(0)\n                return\n            else:\n                a = b\n                b = 0\n                for i in range(len(S)):\n                    if S[i] == S[i + 1]:\n                        a += 1\n                    elif S[i] == S[i + 1]:\n                        b += 1\n                else:\n                    break\n                if a == b:\n                    print(0)\n                    return\n                else:\n                    a = b\n                   "}, "231": {"problem_id": 231, "answer": "import sys\nread = sys.stdin.read\n\nn, a = list(map(int, read().split()))\n\ndef dfs(i, j, d):\n    if i == 0:\n        return 1\n    elif j == 0:\n        return 2\n    else:\n        return 3\n\nfor i in range(n):\n    print(dfs(i, 0, d) + 1)\n"}, "232": {"problem_id": 232, "answer": "n, m = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    if l[i] == 1:\n        l.append(i)\n    else:\n        l.append(i)\nprint(\"YES\" if l[-1] == 1 else \"NO\")\n"}, "233": {"problem_id": 233, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint('Mishka')\nfor i in range(n):\n    if a[i] > a[i-1]:\n        print('Mishka')\n    else:\n        print('Chris')"}, "234": {"problem_id": 234, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort_left as in\n\nn, m = list(map(int, input().split()))\n\nd = [[0] * m for _ in range(n)]\nfor i in range(n):\n    d[i][0] = int(input())\n    d[i][1] = int(input())\n\nl = len(d)\ns = 0\nfor i in range(1, l):\n    if d[i][0] == '*':\n        s += 1\n    else:\n        s += d[i][1]\n\nprint('YES', s)\n"}, "235": {"problem_id": 235, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nans = 0\nfor i in range(n):\n    if l[i]%2 == 0:\n        ans += min(l[i]*(i+1),i)\nprint(ans)\n"}, "236": {"problem_id": 236, "answer": "import sys\n\ndef count(s):\n    return len(set(s.split('-')))\n\ndef main():\n    s = input()\n    print(count(s))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "237": {"problem_id": 237, "answer": "n, m, k = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n    d[i] = 1\nfor i in range(m):\n    d[i] = max(d.get(i, 0), d.get(i, 0) + 1)\nprint(d.get(n, 0))\n"}, "238": {"problem_id": 238, "answer": "n, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef max(a, b):\n    if b == 0:\n        return 0\n    elif b == 1:\n        return a[b] - a[b-1]\n    else:\n        return max(a[b], a[b-1])\n\nprint(max(a, b))\n"}, "239": {"problem_id": 239, "answer": "from bisect import bisect_left as bl\nn, m = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    l.append(int(input()))\nl.sort(key=lambda x: x[0])\nprint(len(l))\n"}, "240": {"problem_id": 240, "answer": "from itertools import permutations\nn = input()\ns = \"\".join(permutations(map(str,n)))\nprint(n)\n"}, "241": {"problem_id": 241, "answer": "n, m, min, max = list(map(int, input().split()))\ntemperature = input()\ntemperature.zfill(n)\ntemperature.zfill(m)\ntemperature.zfill(min)\ntemperature.zfill(max)\ntemperature.zfill(min + max)\ntemperature.zfill(max + max)\nprint('Correct',temperature)\n"}, "242": {"problem_id": 242, "answer": "n = int(input())\nfor i in range(n):\n    print(int(n/i))"}, "243": {"problem_id": 243, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\nedge_cost = [0] * k\nedges = set()\nfor _ in range(m):\n    u, v, w = list(map(int, input().split()))\n    edges.add((u, v))\n    edges.add((v, w))\n    edges.add((u, v))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))\n    edges.add((v, w))\n    edges.add((u, w))"}, "244": {"problem_id": 244, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(l[0] + l[1] + l[2])"}, "245": {"problem_id": 245, "answer": "from math import sqrt\nn = int(input())\nrect = []\nfor i in range(n):\n  x1, y1, x2, y2 = map(int, input().split())\n  rect.append(x1 + y1)\n  rect.append(x2 + y2)\n\nprint(\"YES\" if rect.count(0) == 1 else \"NO\")"}, "246": {"problem_id": 246, "answer": "n, s = list(map(int, input().split()))\nprint(sum(map(int, input().split())))\n"}, "247": {"problem_id": 247, "answer": "n = int(input())\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    print('YES' if x == 0 or y == 0 else 'NO')"}, "248": {"problem_id": 248, "answer": "from math import ceil\n\nMOD = 10 ** 9 + 7\n\ndef main():\n    a, b, k, t = list(map(int, input().split()))\n    score = a * b\n    score_mod = pow(2, k, MOD)\n    print(sum(score_mod) * (t - k) // 2)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "249": {"problem_id": 249, "answer": "from sys import stdin,stdout\nn,l,x,y = map(int,stdin.readline().split())\na = list(map(int,stdin.readline().split()))\nm = max(a)\nfor i in range(n):\n    m = min(m,x+i)\n    a[i] = m\nans = 0\nfor i in range(n):\n    ans += m*(n-i)\nprint(ans)"}, "250": {"problem_id": 250, "answer": "n = int(input())\na = [0]*n\nfor i in range(n):\n    a[i] = list(map(int,input().split()))\nprint(max(a))"}, "251": {"problem_id": 251, "answer": "n, k = list(map(int, input().split()))\nslices = 0\nfor i in range(n):\n    heig = int(input())\n    if heig < 0:\n        heig = 0\n    else:\n        heig = heig + k\n    slices += heig\nprint(slices)\n"}, "252": {"problem_id": 252, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i] > b[i]:\n        c += 1\n    else:\n        print(c)\n        break\n"}, "253": {"problem_id": 253, "answer": "def main():\n    k, k_1, k_2, k_3 = list(map(int, input().split()))\n    if k_1:\n        print(\"YES\")\n        return\n    if k_2:\n        print(\"YES\")\n        return\n    if k_3:\n        print(\"YES\")\n        return\n    if k_1:\n        print(\"YES\")\n        return\n    if k_2:\n        print(\"YES\")\n        return\n    if k_3:\n        print(\"YES\")\n        return\n    if k_1:\n        print(\"YES\")\n        return\n    if k_2:\n        print(\"YES\")\n        return\n    if k_3:\n        print(\"YES\")\n        return\n    if k_1:\n        print(\"YES\")\n        return\n    if k_2:\n        print(\"YES\")\n        return\n    if k_3:\n        print(\"YES\")\n        return\n    if k_1:\n        print(\"YES\")\n        return\n    if k_2:\n        print(\"YES\")\n        return\n    if k_3:\n        print(\"YES\")\n        return\n    if k_1:\n        print(\"YES\")\n        return\n    if k_2:\n        print(\"YES\")\n        return\n    if k_3:\n        print(\"YES\")\n        return\n    if k_1:\n        print(\"YES\")\n        return\n    if k_2:\n        print(\"YES\")\n        return\n    if k_3:\n        print(\"YES\")\n        return\n    if k_1:\n        print(\"YES\")\n        return\n    if k_2:\n        print(\"YES\")\n        return\n    if k_3:\n        print(\"YES\")\n        return\n    if k_1:\n        print(\"YES\")\n        return\n    if k_2:\n        print(\"YES\")\n        return\n    if k_3:\n        print(\"YES\")\n        return\n    if k_1:\n        print(\"YES\")\n        return\n    if k_2:\n        print(\"YES\")\n        return\n    if k_3:\n        print(\"YES\")\n        return\n    if k_1:\n        print(\"YES\")\n        return\n    if k_2:\n        print(\"YES\")\n        return\n    if k_3:\n        print(\"YES\")\n        return\n "}, "254": {"problem_id": 254, "answer": "n = int(input())\ns = input()\nprint(len(s))"}, "255": {"problem_id": 255, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n    d[i] = 1\n    for j in range(i, n):\n        d[j] = max(d[j], d[i] + 1)\nprint(d[n])"}, "256": {"problem_id": 256, "answer": "import sys\n\nlines = sys.stdin.readlines()\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        a, b = list(map(int, input().split()))\n        print(\"Team \"+str(a)+\"\\n\"+\"Draw \"+str(b)+\"\\n\")\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "257": {"problem_id": 257, "answer": "from heapq import heappush, heappop\nN, K = map(int, input().split())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\nc = 0\nfor i in range(N):\n    x[i] = min(x[i], x[i+1])\n    y[i] = min(y[i], y[i+1])\nheapify(x, y)\nprint(' '.join(map(str, x)))"}, "258": {"problem_id": 258, "answer": "def main():\n    n = int(input())\n    s = input()\n    if s == \"0\":\n        return \"Monocarp\"\n    elif s == \"9\":\n        return \"Bicarp\"\n    else:\n        s = input()\n        if s == \"0\":\n            return \"Monocarp\"\n        elif s == \"9\":\n            return \"Bicarp\"\n        else:\n            s = input()\n            if s == \"0\":\n                return \"Monocarp\"\n            else:\n                s = input()\n                if s == \"9\":\n                    return \"BeefPizzo\"\n            else:\n                s = input()\n                if s == \"0\":\n                    return \"Monocarp\"\n                else:\n                    s = input()\n                    if s == \"9\":\n                        return \"BeefPizzo\"\n                    else:\n                        s = input()\n                        if s == \"0\":\n                            return \"Monocarp\"\n                        else:\n                            s = input()\n                            if s == \"9\":\n                                return \"BeefPizzo\"\n                            else:\n                                s = input()\n                                if s == \"0\":\n                                    return \"Monocarp\"\n                                else:\n                                    s = input()\n                                     if s == \"9\":\n                             "}, "259": {"problem_id": 259, "answer": "from sys import stdin\ns, t, n, t = list(map(int, stdin.readline().split()))\nl = []\nfor i in range(n):\n    s, d = list(map(int, stdin.readline().split()))\n    l.append(s)\n    d.append(d)\nprint(' '.join(map(str, l)))\n"}, "260": {"problem_id": 260, "answer": "from math import ceil,sqrt,sqrt2\n\nM,K = [int(i) for i in input().split()]\n\nn = ceil(sqrt(K)**0.5)\n\nprint(n)\n"}, "261": {"problem_id": 261, "answer": "n = int(input())\ns = input()\nl = len(s)\nfor i in range(l):\n    if s[i] == '*':\n        s[i] = '.'\n    else:\n        s[i] = '.'\nprint('yes' if s[0] == '.' else 'no')"}, "262": {"problem_id": 262, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\nprint('\\n'.join(l))"}, "263": {"problem_id": 263, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n    a[i] = a[i-1] + a[i]\nprint(max(a))"}, "264": {"problem_id": 264, "answer": "n, m = list(map(int, input().split()))\ns = 0\nfor i in range(m):\n    if s == 0:\n        s += 1\n    else:\n        s -= 1\nprint(s % 1000000007)"}, "265": {"problem_id": 265, "answer": "from sys import stdin,stdout\nn,m,pizzas = list(map(int,stdin.readline().split()))\nl = []\nfor i in range(n):\n    f,b = list(map(int,stdin.readline().split()))\n    l.append([f,b])\npizzas.sort()\nans = 0\nfor i in range(m):\n    if l[i][1] == pizzas[i][0]:\n        ans += 1\n    else:\n        ans += 1\nprint(ans)\n"}, "266": {"problem_id": 266, "answer": "from math import ceil, log\nn, m = map(int, input().split())\nif m > 0:\n    print(-1)\nelse:\n    print(n)\n"}, "267": {"problem_id": 267, "answer": "import math\nn,k = input().split()\nn = int(n)\nk = int(k)\nm = 998244353\nfor i in range(n):\n    m = math.factorial(m)\n    k = k % m\n    print(k)\n"}, "268": {"problem_id": 268, "answer": "n, k, d = list(map(int, input().split()))\nsoma = 0\nmaxd = float('inf')\nfor i in range(n):\n    a = list(map(int, input().split()))\n    if a[0] - a[1] > d:\n       oma += a[0] - a[1]\n    elif a[0] - a[1] > d:\n       oma += a[0] - a[1]\n    else:\n       print(\"NO\")\n        break\nif maxd == float('inf'):\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "269": {"problem_id": 269, "answer": "s = input()\nfor i in range(len(s)):\n    s = s.replace('R','R')\n    s = s.replace('B','B')\n    s = s.replace('Y','Y')\n    s = s.replace('G','G')\n    s = s.replace('GY','GY')\n    s = s.replace('GX','GX')\n    s = s.replace('YX','YX')\n    s = s.replace('YXY','YXY')\n    s = s.replace('GXY','GXY')\n    s = s.replace('GX','')\n    s = s.replace('R','R')\n    s = s.replace('B','B')\n    s = s.replace('Y','Y')\n    s = s.replace('G','G')\n    s = s.replace('GY','GY')\n    s = s.replace('GX','GX')\n    s = s.replace('YX','YX')\n    s = s.replace('YXY','YXY')\n    s = s.replace('YX','')\n    s = s.replace('R','R')\n    s = s.replace('B','B')\n    s = s.replace('Y','Y')\n    s = s.replace('G','G')\n    s = s.replace('GY','GY')\n    s = s.replace('GX','GX')\n    s = s.replace('YX','YX')\n    s = s.replace('YXY','YXY')\n    s = s.replace('YX','')\n    s = s.replace('R','R')\n    s = s.replace('B','B')\n    s = s.replace('Y','Y')\n    s = s.replace('G','G')\n    s = s.replace('GY','GY')\n    s = s.replace('GX','GX')\n    s = s.replace('YX','YX')\n    s = s.replace('YXY','YXY')\n    s = s.replace('YX','')\n    s = s.replace('R','R')\n    s = s.replace('B','B')\n    s = s.replace('Y','Y')\n    s = s.replace('G','G')\n    s = s.replace('GY','GY')\n    s = s.replace('GX','GX')\n    s = s.replace('YX','YX')\n    s = s.replace('YXY','YXY')\n    s = s.replace('YX','')\n    s = s.replace('R','R')\n    s = s.replace('B','B')\n    s = s.replace('Y','Y')\n    s = s.replace('G','G')\n    s = s.replace('GY','GY')\n    s = s.replace('GX','GX')\n    s = s.replace('YX','YX')\n    s = s.replace('YX','')\n    s = s.replace('R','R')\n    s = s.replace('B','B')\n    s = s.replace('Y','Y')\n    s = s.replace('G','G')\n    s = s.replace('GY','GY')\n    s = s.replace('GX','GX')\n    s = s.replace('YX','YX')\n    s = s.replace('YX','')\n    s = s.replace('R','R')\n    s = s.replace('B','B')\n    s = s.replace('Y','Y')\n    s = s.replace('G','G')\n    s = s.replace('GY"}, "270": {"problem_id": 270, "answer": "from heapq import nlargest,heappop,heapify\nN,M=list(map(int,input().split()))\ns,t=list(map(int,input().split()))\nq=[]\nfor i in range(N):\n    s.append(i)\nq.append([s,t])\ndef is_valid(s,t):\n    if s[s[-1]]!=t:\n        return False\n    else:\n        return True\n\ndef aoki(s,t):\n    ans=0\n    for i in range(len(s)):\n        if s[i]==t:\n            ans+=1\n            break\n    return ans\n\ndef choice(s,t):\n    ans=0\n    for i in range(len(s)):\n        if s[i]==t:\n            ans+=1\n            break\n    return ans\n\ndef heapify(heap,n,d):\n    if n>=2:\n        n-=2\n        d[n]+=heap\n        if n==1:\n            return d\n        elif n==2:\n            return d\n        else:\n            return d[n]\n\ndef main():\n    n,m=list(map(int,input().split()))\n    s,t=list(map(int,input().split()))\n    q=[]\n    for i in range(n):\n        s[i]=t\n        t=s[i]\n        q.append([s,t])\n    ans=0\n    for i in range(n):\n        if is_valid(s,t):\n            ans+=1\n            heapify(heap,n-1,d)\n        else:\n            ans+=1\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "271": {"problem_id": 271, "answer": "n = int(input())\nfor i in range(n):\n    print(10,end=\" \")\n    print(n-i,end=\" \")\nprint()"}, "272": {"problem_id": 272, "answer": "s,t = input().split()\ns = int(s)\nt = int(t)\nfor i in range(s,t+1):\n    if s[i] == t[i]:\n        print(\"-1\")\n        continue\n    elif s[i] == t[i]:\n        print(\"-1\")\n        continue\n    else:\n        print(\"-1\")\n        s[i] = t[i]\n        t[i] = s[i]\n        s[i] = t[i]\n        t[i] = s[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t[i]\n        s[i] = t"}, "273": {"problem_id": 273, "answer": "import sys\n\ndef lis(s):\n    return [x for x in s.split() if x.isalnum()]\n\ndef isLeetcode(s):\n    return len(s) <= 1\n\ndef lis(s):\n    return [x for x in s.split() if x.isalnum()]\n\ndef main():\n    n = int(input())\n    s = list(map(int, input().split()))\n    lis(s)\n    print(isLeetcode(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "274": {"problem_id": 274, "answer": "from sys import stdin,stdout\ndef inp():\n    return list(map(int,stdin.readline().split()))\n\ndef main():\n    n = inp()\n    print(str(n))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "275": {"problem_id": 275, "answer": "import math\ndef factorial(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return math.factorial(n // 2)\n    else:\n        return math.factorial(n // 2) * math.factorial(n // 2)\n\ndef __starting_point():\n    input = input().strip()\n    print(factorial(int(input())))\n__starting_point()"}, "276": {"problem_id": 276, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nl = list(map(int, readline().split()))\n\ndef solve(n, l):\n    \"\"\"\n    :type n: int\n    :type l: List[int]\n    :rtype: List[int]\n    \"\"\"\n    if n == 0:\n        return l\n    elif n == 1:\n        return l[0]\n    else:\n        return l[n - 1]\n\nprint(solve(n, l))\n"}, "277": {"problem_id": 277, "answer": "n, a, b = list(map(int, input().split()))\nprint(\"Final!\" if a+b == n else \"Locked!\")\n"}, "278": {"problem_id": 278, "answer": "n = int(input())\ns = list(map(int, input().split()))\ns.sort()\nfor i in range(n):\n    if s[i] == 0:\n        s[i] = 1\n    else:\n        s[i] = 2\nprint(len(s))"}, "279": {"problem_id": 279, "answer": "from math import *\ns = input()\nfor i in range(1,s[0]):\n    t = int(i) - int(s[0])*s[0]\n    s = s.split(' ')\n    t = t[1:]\n    s = s[1:]\n    s = s[:len(s) - 1]\n    s = s[:len(s) - 2:]\n    s = s[:len(s) - 3:]\n    s = s[:len(s) - 4:]\n    s = s[:len(s) - 5:]\n    s = s[:len(s) - 6:]\n    s = s[:len(s) - 7:]\n    s = s[:len(s) - 8]\n    s = s[:len(s) - 9]\n    s = s[:len(s) - 10]\n    s = s[:len(s) - 11]\n    s = s[:len(s) - 12]\n    s = s[:len(s) - 13]\n    s = s[:len(s) - 14]\n    s = s[:len(s) - 15]\n    s = s[:len(s) - 16]\n    s = s[:len(s) - 17]\n    s = s[:len(s) - 18]\n    s = s[:len(s) - 19]\n    s = s[:len(s) - 20]\n    s = s[:len(s) - 21]\n    s = s[:len(s) - 22]\n    s = s[:len(s) - 23]\n    s = s[:len(s) - 24]\n    s = s[:len(s) - 25]\n    s = s[:len(s) - 26]\n    s = s[:len(s) - 27]\n    s = s[:len(s) - 28]\n    s = s[:len(s) - 29]\n    s = s[:len(s) - 30]\n    s = s[:len(s) - 31]\n    s = s[:len(s) - 32]\n    s = s[:len(s) - 33]\n    s = s[:len(s) - 34]\n    s = s[:len(s) - 35]\n    s = s[:len(s) - 36]\n    s = s[:len(s) - 37]\n    s = s[:len(s) - 38]\n    s = s[:len(s) - 39]\n    s = s[:len(s) - 40]\n    s = s[:len(s) - 41]\n    s = s[:len(s) - 42]\n    s = s[:len(s) - 43]\n    s = s[:len(s) - 44]\n    s = s[:len(s) - 45]\n    s = s[:len(s) - 46]\n    s = s[:len(s) - 47]\n    s = s[:len(s) - 48]\n    s = s[:len(s) - 49]\n    s = s[:len(s) - 50]\n    s = s[:len(s) - 51]\n    s = s[:len(s) - 52]\n    s = s[:len(s) - 53]\n    s = s[:len(s) - 54]\n    s = s[:len(s) - 55]\n    s = s[:len(s) - 55]\n    s = s[:len(s) - 58]\n    s = s[:len(s) - 60]\n    s = s[:len(s) - 61]\n   "}, "280": {"problem_id": 280, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = list(map(int, input().split()))\n\ndef f(x, y):\n    if x == y:\n        return 1\n    elif x < y:\n        return 0\n    else:\n        return max(f(x, y), f(x - y, y))\n\n\ndef main():\n    N, M = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    ans = float('inf')\n    for i in range(N):\n        ans = min(ans, f(x, i))\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "281": {"problem_id": 281, "answer": "import sys\ninput = sys.stdin.readline\n\ndef __starting_point():\n    a, b = list(map(int, input().split()))\n    print(a)\n    print(b)\n__starting_point()"}, "282": {"problem_id": 282, "answer": "n, d = list(map(int, input().split()))\nl = [0] * n\nfor i in range(n):\n    l[i] += 1\nprint(l[0])"}, "283": {"problem_id": 283, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\ndef is_prime(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return is_prime(n // 2)\n    else:\n        return False\n\n\ndef prime_factors(n):\n    if n == 1:\n        return [1]\n    elif n % 2 == 0:\n        return [2]\n    else:\n        return [3]\n\ndef is_prime(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return False\n    else:\n        return True\n\n\nprimes = []\n\nfor i in range(n):\n    if is_prime(i):\n        primes.append(i)\n\nprint(primes)\n"}, "284": {"problem_id": 284, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\nif n == 0:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n"}, "285": {"problem_id": 285, "answer": "n = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\nfor i in range(n):\n    x[i] = y[i] = x[i]\nprint('Yes')\n"}, "286": {"problem_id": 286, "answer": "from sys import stdin,stdout\nn=int(stdin.readline())\ns=list(map(int,stdin.readline().split()))\nfor i in range(n):\n    s[i]=s[i-1]\nprint(s[n-1])"}, "287": {"problem_id": 287, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\nfor i in range(1, n):\n    if k % i == 0:\n        print(i)\n    else:\n        print(i + 1)\n"}, "288": {"problem_id": 288, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    if s[0] == '1':\n        print(1)\n    elif s[0] == '2':\n        print(2)\n    elif s[0] == '3':\n        print(3)\n    else:\n        print(0)\n"}, "289": {"problem_id": 289, "answer": "s = input()\nn = len(s)\nfor i in range(n):\n    if s[i] == 'K':\n        s[i] = 'V'\n    else:\n        s[i] = 'K'\nprint(max(s.count(0), s.count(1)))"}, "290": {"problem_id": 290, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\ns = list(map(int,stdin.readline().split()))\nprint(n)\n"}, "291": {"problem_id": 291, "answer": "from math import ceil\na,b = list(map(int,input().split()))\nprint(ceil(b-a))"}, "292": {"problem_id": 292, "answer": "import sys\ninput = sys.stdin.readline\n\nh, n = list(map(int, input().split()))\n\ndef solve(s):\n    if s == \"LRLRLRL\":\n        return 1\n    elif s == \"L\":\n        return 2\n    else:\n        left = 0\n        right = 0\n        while left < len(s) and right < len(s):\n            if s[left] == s[right]:\n                left += 1\n            else:\n                right += 1\n                left += 1\n            right += 1\n        return left + right + 1\n\nprint(solve(0))\n"}, "293": {"problem_id": 293, "answer": "from sys import stdin, stdout\ndef main():\n    n, m = list(map(int, stdin.readline().split()))\n    s = input()\n    for i in range(n):\n        s += str(i)\n    print(s)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "294": {"problem_id": 294, "answer": "n = int(input())\na = list(map(int, input().split()))\nd = [0]*n\nfor i in range(n):\n    d[i] = a[i]\n\nprint('YES')\nfor i in range(n):\n    print(d[i], end=' ')\n    print(' '.join(map(str, d[i])))"}, "295": {"problem_id": 295, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n\nif n == 1:\n    print(\"YES\")\n    return\n\nfor i in range(1, n):\n    if a[i] % b == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        break\n\nif n == 2:\n    print(\"YES\")\n    return\n\nfor i in range(1, n):\n    if a[i] % b == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        break\n\nif n == 3:\n    print(\"YES\")\n    return\n\nfor i in range(1, n):\n    if a[i] % b == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        break\n\nif n == 4:\n    print(\"YES\")\n    return\n\nfor i in range(1, n):\n    if a[i] % b == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        break\n\nif n == 5:\n    print(\"YES\")\n    return\n\nfor i in range(1, n):\n    if a[i] % b == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        break\n\nif n == 6:\n    print(\"YES\")\n    return\n\nfor i in range(1, n):\n    if a[i] % b == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        break\n\nif n == 7:\n    print(\"YES\")\n    return\n\nfor i in range(1, n):\n    if a[i] % b == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        break\n\nif n == 8:\n    print(\"YES\")\n    return\n\nfor i in range(1, n):\n    if a[i] % b == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        break\n\nif n == 9:\n    print(\"YES\")\n    return\n\nfor i in range(1, n):\n    if a[i] % b == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        break\n\nif n == 10:\n    print(\"YES\")\n    return\n\nfor i in range(1, n):\n    if a[i] % b == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        break\n\nif n == 11:\n    print(\"YES\")\n    return\n\nfor i in range(1, n):\n    if a[i] % b == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        break\n\nif n == 12:\n    print(\"YES\")\n    return\n\nfor i in range(1, n):\n    if a[i] % b == 0:\n        print(\"YES\")\n    else"}, "296": {"problem_id": 296, "answer": "n = int(input())\na,b = list(map(int,input().split()))\nprint(a*b)\n"}, "297": {"problem_id": 297, "answer": "import math\ndef area(a,b,c):\n    return math.sqrt(a*b) + math.sqrt(a*c)\n\nn,m,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=list(map(int,input().split()))\nprint(area(a,b,c))\n"}, "298": {"problem_id": 298, "answer": "n, k = list(map(int, input().split()))\nlena = []\nfor i in range(n):\n    lena.append(input())\nprint('YES' if lena.count('.1') == k else 'NO')"}, "299": {"problem_id": 299, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint('Back\\n' if b[0] == a[0] else'receding\\n')"}, "300": {"problem_id": 300, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\ndef main():\n    n = int(input())\n    a = [0] * n\n    for i in range(n):\n        a[i] = a[i-1] + a[i-2]\n    print(min(a))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "301": {"problem_id": 301, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef main():\n    sys.setrecursionlimit(1000000)\n    n = int(input())\n    l = list(map(int,input().split()))\n    print(l[0])\n    for i in range(1,n):\n        print(l[i-1])\n        l[i] = l[i-1]\n        \ndef __starting_point():\n    main()\n__starting_point()"}, "302": {"problem_id": 302, "answer": "n = 1001\nsum = 0\nfor i in range(n):\n    sum += i\nprint(sum)\n"}, "303": {"problem_id": 303, "answer": "from collections import deque\ndef __starting_point():\n    x,y,x_1,y_1,x_2,y_2 = list(map(int,input().split()))\n    print(__starting_point() if x_1 == x_2 else 'NO')\n__starting_point()"}, "304": {"problem_id": 304, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a[0] for a in a[1:]) + sum(a[0] for a in a[1:]) + sum(a[1] for a in a[1:]) + sum(a[1] for a in a[1:]) + max(a[1] for a in a[1:])"}, "305": {"problem_id": 305, "answer": "from sys import stdin,stdout\nfrom collections import deque,Counter,defaultdict,deque\nfrom bisect import bisect_left as bl,bisect_right as br,bisect\nfrom heapq import heapify, heappush, heappop\nfrom decimal import *\nfrom functools import reduce,cmp_to_key\nfrom fractions import Fraction,gcd\nfrom fractions import Fractiondenominator,fractiondenominator,mod\nfrom fractions import gcd\nfrom fractions import ceil\nfrom fractions import sqrt\nfrom math import factorial,floor,floor_with_ratio,log_floord\nfrom queue import Queue,PriorityQueue\nfrom time import perf_counter\nfrom random import randint,random\nfrom operator import itemgetter_select,itemgetter_get,itemgetter_set\nfrom heapq import heapify,heappush,heappop\nfrom re import sub,subn\nfrom string import ascii_lowercase,ascii_uppercase,b\nfrom string import ascii_uppercase,lowercase\nfrom copy import deepcopy as deepcopy\nfrom decimal import *\nfrom fractions import Fraction,gcd\nfrom fractions import Fractiondenominator,fractiondenominator,mod\nfrom fractions import gcd\nfrom fractions import ceil\nfrom fractions import sqrt\nfrom fractions import mod\nfrom fractions import pow,floor,floor_with_ratio,log_floord\nfrom fractions import fabs\nfrom fractions import ceil\nfrom fractions import modulo\nfrom fractions import factorial,floor,floor_with_ratio,log_floord\nfrom fractions import fabs\nfrom fractions import modulo_\u0192\u0193\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199\u0199"}, "306": {"problem_id": 306, "answer": "from sys import stdin,stdout\nfrom math import ceil,log2,sqrt,factorial,gcd\nfrom collections import Counter,defaultdict,deque,OrderedDict,defaultdict,enumerator,itemgetter\nfrom heapq import heappush,heappop,heappush,heapify,pop,div,insort,insort_left,insort_right,insort_top,insort_left_right\nfrom bisect import bisect_left,bisect_right,bisect_top,bisect_left,bisect,insort_left_top,insort_right_top,insort_right_left,insort_left_right_top,insort_right_top,insort_left_right_top,insort_right_top_top\nfrom functools import reduce\nfrom operator import mul,bitwise_and,and_or,boolean,decimal\nfrom fractions import gcd\nfrom time import perf_counter,math.ceil,floor,log2,sqrt,pi,ceil,asin,tanp,sin,asin_l,sin_r,asin_m,cos,cos_r,asin_m,asin_pi\nfrom collections import deque\nfrom queue import deque,PriorityQueue\nfrom decimal import ROUND_HALF_UP,PRIMES,IMP2INV_ALPHA\nfrom numpy import enormity,log2,pi,eps,fmod,imag,imag_truediv,nan,nan_truediv,polynomial,polynomial_truediv,quantal,quant,uniform,inf,nan_truediv,isorin,isorin_derivative,power,power_derivative,power_mod,power_mod_derivative\nfrom scipy.sparse.csgraph import Cgraph as C,Gray as G,Sparse as S,GrayConverter as G,Expand as E,ExpandConverter as E\nfrom heapq import heapify,heappush,heappop,heapify,pop,div,insort,insort_left,insort_right,insort_top,insort_left_right,insort_top_left,insort_right_left\nfrom bisect import bisect_left,bisect_right,bisect,insort_left_top,bisect,insort_left,insort_right_top,insort_left_top_top,insort_right_top_top\nfrom statistics import mean, median\nfrom statistics import factorial,acronym\nfrom statistics import mean_combinations,median_combinations,facaluts,facaluts_combinations\nfrom statistics import mean_combinations,median_combinations,variance_components,power,power_components,uniform,uplLastly(lambda x:x[0],mean),uniform_combinations,uniform_combinations_combinations\nfrom statistics import mean_combinations,median_combinations,variance_components,power,power_components,uniform,uplTimes,perc,perc_combinations,perc_combinations_combinations\nfrom statistics import mean_combinations,median_combinations,variance_components,power,power_components,uniform,uplTimes,perc,perc_combinations\nfrom statistics import mean_combinations,median_combinations,variance_components,power,power_components,uniform,uplTimes,perc,perc_combinations\nfrom statistics import mean_combinations,median_combinations,variance_components,power,power_components,uniform,uplTimes,perc,perc_combinations\nfrom statistics import mean_combinations,median_combinations,variance_components,power,power_components,uniform,uplTimes,perc,perc_combinations\nfrom statistics import mean_combinations,median_combinations,variance_components,power,power_components,uniform,uplTimes,perc,perc_combinations\nfrom statistics import mean_combinations,median_combinations,variance_components,power,power_components,uniform,uplTimes,perc,perc_combinations\nfrom statistics import mean_combinations,median_combinations,variance_components,power,power_components,uniform,uplTimes,perc,perc"}, "307": {"problem_id": 307, "answer": "def __starting_point():\n    k_2, k_3, k_5, k_6 = list(map(int, input().split()))\n    print(sum(map(int, input().split())))\n__starting_point()"}, "308": {"problem_id": 308, "answer": "from math import ceil\n\nn, x, y, c = list(map(int, input().split()))\n\nd = {}\nfor i in range(n):\n    x, y, c = list(map(int, input().split()))\n    d[x] = c\n    d[y] = c\n    d[x-1] = c\n    d[x+1] = c\n    d[x-1] = c\n\n#print(d)\n\n#print(ceil(d[x]/2))\n\n#print(d.get(x, 0))\n\n#print(d.get(y, 0))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n#print(d.get(x, 2))\n\n#print(d.get(y, 2))\n\n"}, "309": {"problem_id": 309, "answer": "def main():\n    l, r = list(map(int, input().split()))\n    print(l ^ r)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "310": {"problem_id": 310, "answer": "def calc(n, k):\n    if k == 0:\n        return 0\n    elif k == 1:\n        return (n * 2)\n    else:\n        x = n - k\n        y = n - k + 1\n        if x % 2 == 0:\n            return (n * 2)\n        else:\n            return (n * 2) * calc(n - k - 1, k - 1)\n\ndef calc2(n, k):\n    if k == 0:\n        return (n * 2)\n    elif k == 1:\n        return (n * 2) * calc2(n - k - 1, k - 1)\n    else:\n        return (n * 2) * calc2(n - k - 1, k - 1)\n\ndef calc(n, k):\n    if k == 0:\n        return (n * 2)\n    elif k == 1:\n        return (n * 2) * calc2(n - k - 1, k - 1)\n    else:\n        return (n * 2) * calc(n - k - 1, k - 1)\n\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    print(calc(n, k))\n__starting_point()"}, "311": {"problem_id": 311, "answer": "def solve(t, x, y, z, t1, t2, t3):\n    if t1 <= x:\n        print(\"YES\")\n        return\n    if t2 <= y:\n        print(\"YES\")\n        return\n    if t3 <= z:\n        print(\"YES\")\n        return\n    if t1 <= z:\n        print(\"YES\")\n        return\n    if t2 <= x:\n        print(\"YES\")\n        return\n    if t3 <= y:\n        print(\"YES\")\n        return\n    if t1 <= z:\n        print(\"YES\")\n        return\n    if t2 <= x:\n        print(\"YES\")\n        return\n    if t3 <= y:\n        print(\"YES\")\n        return\n    if t1 <= z:\n        print(\"YES\")\n        return\n    if t2 <= x:\n        print(\"YES\")\n        return\n    if t3 <= y:\n        print(\"YES\")\n        return\n    print(\"YES\")\nsolve(t, x, y, z, t1, t2, t3)\n"}, "312": {"problem_id": 312, "answer": "n, m = map(int, input().split())\na = [0]*n\nfor i in range(n):\n    a[i] = i\nb = [0]*n\nfor i in range(n):\n    b[i] = i\nc = map(int, input().split())\nc.sort()\nprint(max(c[-1], b[-1]))"}, "313": {"problem_id": 313, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    if a[i] == 0:\n        a[i] = 1\n    else:\n        a[i] = max(a[i], a[i-1] + 1)\n\nprint(len(a))"}, "314": {"problem_id": 314, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nc = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        c += 1\n    else:\n        c = 0\n        break\nprint(c)"}, "315": {"problem_id": 315, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef find_shortest_interval(interval, start):\n    if interval[start] < 0:\n        return None\n    else:\n        return interval[start]\n\ndef find_longest_interval(interval, start):\n    if interval[start] < 0:\n        return None\n    else:\n        return interval[start]\n\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(find_shortest_interval(a, b))\n__starting_point()"}, "316": {"problem_id": 316, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    print(s.count(1))"}, "317": {"problem_id": 317, "answer": "n = int(input())\ns = input()\nprint(\"YES\" if s[0] == 'a' else \"NO\")\nprint(\"YES\" if s[-1] == 'a' else \"NO\")\nprint(\"YES\" if s[-1] == 'a' else \"NO\")"}, "318": {"problem_id": 318, "answer": "import math\ndef time(h, m):\n    h, m = int(math.sqrt(h)), int(math.sqrt(m))\n    h, m = min(h, m), max(h, m)\n    return h * m\n\n\n# Time: O(24)\n# Space: O(24)\n# time: O(24)\n# space: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24)\n# space: O(24)\n# time: O(24"}, "319": {"problem_id": 319, "answer": "def __starting_point():\n    n, m = list(map(int, input().split()))\n    a = [[0] * m for i in range(n)]\n    for i in range(n):\n        a[i][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                print(\"YES\")\n                break\n        else:\n            print(\"NO\")\n__starting_point()"}, "320": {"problem_id": 320, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\ns = 0\nfor i in range(n):\n    if l[i]%2==0:\n        s += 1\nprint(s)\n"}, "321": {"problem_id": 321, "answer": "from math import factorial as fact\nfor _ in range(int(input())):\n    a, b = list(map(int, input().split()))\n    print('YES' if a%b else 'NO')\n"}, "322": {"problem_id": 322, "answer": "n = int(input())\npoints = list(map(int, input().split()))\nprint(\"Yes\" if points[0]*points[1]<=n else \"No\")"}, "323": {"problem_id": 323, "answer": "import math\n\ndef __starting_point():\n    A, B = list(map(int, input().split()))\n    print(math.gcd(A, B))\n\n__starting_point()"}, "324": {"problem_id": 324, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nfor i in range(n):\n    if a[i]%b!=0:\n        print(a[i],end=\" \")\n    else:\n        print(a[i],end=\" \")\n"}, "325": {"problem_id": 325, "answer": "from collections import deque\nN,M,P = list(map(int,input().split()))\nA = list(map(int,input().split()))\nG = [0]*M\nfor i in range(N):\n    G[i]+=1\n    if P==0:\n        print(-1)\n    elif P==1:\n        print(0)\n    else:\n        ans = 0\n        for j in range(M):\n            if G[j]%2==0:\n                ans+=abs(G[j]-G[P])\n                P+=1\n        print(ans)\n"}, "326": {"problem_id": 326, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    c += s[i]*c\n    s.pop(i)\nprint(c)"}, "327": {"problem_id": 327, "answer": "n, k = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    l.append(int(input()))\nl.sort(reverse=True)\nans = 0\nfor i in range(n):\n    if l[i] & 1:\n        ans += l[i]\nprint(ans)\n"}, "328": {"problem_id": 328, "answer": "n = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\nprint(min(y.count(0), x.count(0)))\n"}, "329": {"problem_id": 329, "answer": "s = input()\nnniineteen = 0\nfor i in range(len(s)):\n    if s[i] == 'n':\n        nniineteen += 1\nprint(nniineteen)"}, "330": {"problem_id": 330, "answer": "from collections import deque\ndef gcd(a, b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return gcd(b, a % b)\n    else:\n        return b\n\np, y = input().split()\nx = int(p)\nprint(gcd(x, x))\n"}, "331": {"problem_id": 331, "answer": "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(min(a[0], a[1]))\n"}, "332": {"problem_id": 332, "answer": ""}, "333": {"problem_id": 333, "answer": "from collections import defaultdict\ns = input()\nn = len(s)\nd = defaultdict(list)\nfor i in range(n):\n    d[s[i]].append(i)\nprint(''.join(d.values()))"}, "334": {"problem_id": 334, "answer": "a,b,c,d = list(map(int,input().split()))\ns = 0\nfor i in range(a,b):\n    if c == d:\n        s += 1\nprint(s)\n"}, "335": {"problem_id": 335, "answer": "n = int(input())\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    if a + b + c == n:\n        print(1)\n    else:\n        print(2)"}, "336": {"problem_id": 336, "answer": "# cook your dish here\nn, a, b, c, d = list(map(int, input().split()))\nm = n+1\nfor i in range(4):\n    m = min(m, a*c + d*c)\nprint(m)\n"}, "337": {"problem_id": 337, "answer": "from math import ceil\ndef get_sqa(n,i):\n    return ceil(sum(i**0.5+1)**.5*n,i)\n\ndef main():\n    n,h = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    s = 0\n    for i in range(n):\n        a[i] = get_sqa(a[i],i)\n        s += a[i]\n    print(s)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "338": {"problem_id": 338, "answer": "from collections import deque\nm = int(input())\nfor i in range(m):\n    c = list(map(int, input().split()))\n    x, y = c.pop()\n    if x == 0:\n        print(0)\n    else:\n        for j in range(1, len(c)):\n            if c[j] > x:\n                x, y = c[j], c[j-1]\n                if x == 0:\n                    print(0)\n                else:\n                    print(x)\n            elif x == len(c)-1:\n                print(0)\n            else:\n                print(x-1)\n        print(len(c)-1)\n"}, "339": {"problem_id": 339, "answer": "n = int(input())\nk = int(input())\na = [0]*n\nb = [0]*n\nfor i in range(n):\n    a[i] = a[i]+b[i]\nprint(min(a))"}, "340": {"problem_id": 340, "answer": "n = int(input())\nfor i in range(n):\n    x = int(input())\n    print(x)"}, "341": {"problem_id": 341, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N, K = list(map(int, input().split()))\n    R, S, P = list(map(int, input().split()))\n    T = [int(x) for x in input().split()]\n    print(sum(T) - sum(R) - sum(S) - sum(P))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "342": {"problem_id": 342, "answer": "from sys import stdin,stdout\ninput = stdin.readline\n\na,b,c = list(map(int,input().split()))\n\nfor i in range(len(a)):\n    if a[i]!=b[i]:\n        a[i] = b[i]\n    else:\n        b[i] = a[i]\n\nprint(max(a,b,c))"}, "343": {"problem_id": 343, "answer": "from collections import deque\nn, k, p, x, y = map(int, input().split())\na = list(map(int, input().split()))\nm = 0\nfor i in range(n):\n    m += a[i]\n    if m > 0:\n        m -= 1\n        a.append(m)\nprint(' '.join(map(str, a)))"}, "344": {"problem_id": 344, "answer": "s = input()\nfor i in range(len(s)):\n    if s[i] == 'n':\n        print('YES')\n    else:\n        print('NO')"}, "345": {"problem_id": 345, "answer": "from collections import deque\ndef dfs(n,edges):\n    q = deque([])\n    for e in edges:\n        if q.empty():\n            q.append(e)\n        else:\n            q.append(e)\n            q.append(n-1)\n            q.append(n-2)\n            q.append(n-3)\n            q.append(n-4)\n            q.append(n-5)\n            q.append(n-6)\n            q.append(n-7)\n            q.append(n-8)\n            q.append(n-9)\n            q.append(n-10)\n            q.append(n-11)\n            q.append(n-12)\n            q.append(n-13)\n            q.append(n-14)\n            q.append(n-15)\n            q.append(n-16)\n            q.append(n-17)\n            q.append(n-18)\n            q.append(n-19)\n            q.append(n-20)\n            q.append(n-21)\n            q.append(n-22)\n            q.append(n-23)\n            q.append(n-24)\n            q.append(n-25)\n            q.append(n-26)\n            q.append(n-27)\n            q.append(n-28)\n            q.append(n-29)\n            q.append(n-30)\n            q.append(n-31)\n            q.append(n-32)\n            q.append(n-33)\n            q.append(n-34)\n            q.append(n-35)\n            q.append(n-36)\n            q.append(n-37)\n            q.append(n-38)\n            q.append(n-39)\n            q.append(n-40)\n            q.append(n-41)\n            q.append(n-42)\n            q.append(n-43)\n            q.append(n-44)\n            q.append(n-45)\n            q.append(n-46)\n          "}, "346": {"problem_id": 346, "answer": "n, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nfor i in range(n):\n    if a[i] > b[i]:\n        a[i] = b[i]\n\nprint(m)\n"}, "347": {"problem_id": 347, "answer": "M = int(input())\nfor i in range(M):\n    s, e, f = input().split()\n    s = int(s)\n    e = int(e)\n    f = int(f)\n    if s == 0:\n        print(e)\n    elif e == 0:\n        print(f)\n    else:\n        print(f.pop(0))"}, "348": {"problem_id": 348, "answer": "MOD = 1000000007\ndef dp(n, m, l, r):\n    if n == 0:\n        return 1\n    elif m == 0:\n        return 0\n    else:\n        return pow(2, n-m-1, MOD)\n\nn, m, l, r = list(map(int, input().split()))\ngrid = [[] for _ in range(n)]\nfor i in range(1, n):\n    grid[i] = [0] * m\nfor i in range(m):\n    for j in range(n):\n        grid[i][j] = grid[i-1][j-1] + grid[i][j-1]\nprint(dp(n, m, l, r))\n"}, "349": {"problem_id": 349, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] = int(input())\n    b = list(map(int, input().split()))\n    \n    # \u5982\u4f55\u8868\u793a\u53f3\u4fa7\u8868\u793a\u5355\u8c03\u6574\n    ans = []\n    for j in range(m):\n        if a[j] > b[j]:\n            ans.append(j)\n        else:\n            ans.append(b[j])\n            \n    if len(ans) == 0:\n        print(\"Possible\")\n    else:\n        print(\"Impossible\")\n"}, "350": {"problem_id": 350, "answer": "n = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        c += 1\n    else:\n        break\nprint(c)"}, "351": {"problem_id": 351, "answer": "from math import ceil\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(ceil(n//a))"}, "352": {"problem_id": 352, "answer": "n = int(input())\nmin_degree = [0] * 1001\nmax_degree = [0] * 1001\nfor i in range(n):\n    min_degree[i] = min(max_degree[i-1], min_degree[i-2])\n\ndef max_degree(x):\n    if x < min_degree[x]:\n        return x\n    else:\n        return min_degree[x]\n\ndef min_degree(x):\n    if x < min_degree[x]:\n        return x\n    else:\n        return min_degree[x]\n\ndef max_degree(x):\n    if x < min_degree[x]:\n        return x\n    else:\n        return min_degree[x]\n\nn = int(input())\nmin_degree = [0] * 1001\nmax_degree = [0] * 1001\nfor i in range(n):\n    min_degree[i] = min(max_degree[i-1], min_degree[i-2])\n\nprint(min_degree[3] + max_degree[3])\n"}, "353": {"problem_id": 353, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if s == 0:\n        s = i\n    else:\n        s = s + a[i]\nprint('-1' if s == -1 else 'UP')\n"}, "354": {"problem_id": 354, "answer": "s = input()\nt = input()\nprint(\"Yes\") if s == t else \"No\""}, "355": {"problem_id": 355, "answer": "import sys\nread = sys.stdin.read\n\ndef main():\n    input = sys.stdin.readline\n    board = [[0 for _ in range(8)] for _ in range(8)]\n    for _ in range(int(input())):\n        r, c = map(int, read().split())\n        board[r][c] = 1\n        for i in range(8):\n            if board[r][i] == 1:\n                print('A')\n                break\n            elif board[r][i] == 0:\n                print('B')\n                break\n            else:\n                print('W')\n                break\n        if board[r][c] == 0:\n            print('A')\n            break\n        else:\n            print('B')\n            break\n    if board[r][c] == 0:\n        print('A')\n        break\n    else:\n        print('B')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "356": {"problem_id": 356, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nmax_length = 0\nfor i in range(n):\n    if a[i] > b[i]:\n        max_length = max(max_length, i - a[i])\n    else:\n        max_length = max(max_length, i - b[i])\n\nprint(max_length)\n"}, "357": {"problem_id": 357, "answer": "import sys\nreadline = sys.stdin.readline\nread = lambda: readline().rstrip()\nreadline = list(map(int, readline().split()))\n\ndef main():\n    a = input()\n    print(main())\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "358": {"problem_id": 358, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef main():\n    a, b, k = list(map(int, input().split()))\n    print(min(a, b, k))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "359": {"problem_id": 359, "answer": "from math import ceil\n\ndef main():\n    a, h, w = list(map(int, input().split()))\n    d = ceil(h*(2*a)+w)\n    print(sum(d))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "360": {"problem_id": 360, "answer": "from collections import deque\nn = int(input())\nl = list(map(int,input().split()))\nque = deque([])\nfor i in range(n):\n    l.append(int(input()))\n    que.append(l)\nans = 0\nfor i in range(n):\n    ans += que[i]\nprint(ans)"}, "361": {"problem_id": 361, "answer": "import sys\n\ndef __starting_point():\n    input = sys.stdin.readline().rstrip()\n    print(\"YES\")\n\n__starting_point()"}, "362": {"problem_id": 362, "answer": "n = int(input())\nedges = set()\nfor i in range(n):\n    if i % 2 == 0:\n        edges.add(i)\n    elif i % 3 == 0:\n        edges.add(i)\n    else:\n        edges.add(i)\n\nprint(edges.intersection(edges))\n"}, "363": {"problem_id": 363, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    print(int(s.count(1)))"}, "364": {"problem_id": 364, "answer": "from collections import deque\nn,a,b = list(map(int,input().split()))\ncnt = [0]*n\nfor i in range(n):\n    cnt[i] += 1\n    if cnt[i] > b:\n        cnt[i] -= 1\n    elif cnt[i] < b:\n        cnt[i] -= 1\n    else:\n        cnt[i] += 1\nprint('\\n'.join(map(str,cnt)))"}, "365": {"problem_id": 365, "answer": "from sys import stdin, stdout\nn, x = map(int, stdin.readline().split())\na = [int(x) for x in stdin.readline().split()]\nc = 0\nfor i in range(n):\n    if a[i] == x:\n        c += 1\nprint('YES' if c == 1 else 'NO')"}, "366": {"problem_id": 366, "answer": "import sys\ninput = sys.stdin.readline\n\nn,s = list(map(int,input().split()))\n\nif s>=n:\n    print(n)\nelse:\n    for i in range(n):\n        if s%i==0:\n            print(i)\n            break\n        else:\n            print(i+1)\n            break\n"}, "367": {"problem_id": 367, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n    if s[i]!= s[i-1]:\n        cnt += 1\nprint(cnt)\n"}, "368": {"problem_id": 368, "answer": "def main():\n    input = list(map(int, input().split()))\n    d = {}\n    for i in range(len(input)):\n        d[input[i]] = 1\n        for j in range(i+1, len(input)):\n            if d[input[i]] == 0:\n                d[input[i]].append(j)\n            else:\n                d[input[i]].append(j)\n                break\n    print('White')\n    \ndef __starting_point():\n    main()\n__starting_point()"}, "369": {"problem_id": 369, "answer": "from bisect import *\nN, M = list(map(int, input().split()))\nS = list(map(str, input().split()))\ndef lis(n):\n    if n == 0:\n        return -1\n    else:\n        return int(n)\n\ndef calc(s):\n    d = {}\n    for i in range(len(s)):\n        if s[i] == 1:\n            d[s[i]].append(i)\n        else:\n            d[s[i]].append(i)\n    return d\n\ndef sg(s):\n    d = {}\n    for i in range(len(s)):\n        if s[i] == 1:\n            d[s[i]].append(i)\n        else:\n            d[s[i]].append(i)\n    return d\n\nn, m = list(map(int, input().split()))\ns = input()\ns = list(reversed(s))\n\nif len(s) == n + 1:\n    print(-1)\nelse:\n    for i in range(len(s)):\n        if s[i] == 1:\n            sg(s[i])\n        elif s[i] == 0:\n            sg(s[i])\n        else:\n            print(s[i])\n            break\n            \n        \n"}, "370": {"problem_id": 370, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n\n    N = int(input())\n    X = list(map(int, input().split()))\n\n    y_s = [0] * N\n    x_s = [0] * N\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N):\n        x_s[i] = X[i]\n        y_s[i] = 0\n    for i in range(N"}, "371": {"problem_id": 371, "answer": "from collections import Counter\ns = input()\nn = int(s.replace('0', ''))\nc = Counter(s)\nfor i in range(n):\n    c[i] += c[i]\nprint(c.most_common(1))"}, "372": {"problem_id": 372, "answer": "import math\ndef area(x,y,r):\n    return 2*(x-y)**2+(y-x)**2+(x-y)**2\n\ndef main():\n    x,y,r = map(int,input().split())\n    print(area(x,y,r))\n\nmain()"}, "373": {"problem_id": 373, "answer": "import math\ndef main():\n    n = int(input())\n    if n == 1:\n        return 1\n    elif n == 2:\n        return math.inf\n    else:\n        print(n-1)\n        return\n\ndef __starting_point():\n    main()\n__starting_point()"}, "374": {"problem_id": 374, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef find(x):\n    if x == b[x]:\n        return x\n    else:\n        return find(b[x])\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    \n    x = 0\n    y = 0\n    for i in range(n):\n        x = find(a[i])\n        y = find(b[i])\n        if x == y:\n            break\n        elif x == y:\n            x = y\n            y = 0\n            continue\n        else:\n            x = y\n            y = 0\n            continue\n        \n    print(sum(a[x] for x in b))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "375": {"problem_id": 375, "answer": "n = int(input())\nfor i in range(n):\n    s,t = input().split()\n    s = int(s)\n    t = int(t)\n    if s[0] == t[0] or s[-1] == t[-1]:\n        print(0)\n    else:\n        print(s[-1] + s[0] + s[-1] + t[0] + t[-1])"}, "376": {"problem_id": 376, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef calc(l, r):\n    if l == r:\n        return 0\n    elif l == 1:\n        return 1\n    else:\n        return max(l, r)\n\nprint(calc(n, a))"}, "377": {"problem_id": 377, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn,m=list(map(int,stdin.readline().split()))\nl=[]\nfor i in range(m):\n    l.append(list(map(int,stdin.readline().split())))\nl.sort(key=lambda x:x[1])\nc=0\nfor i in range(n):\n    if l[i][0]==l[i][1]==l[i][2]:\n        c+=1\n        break\nprint(c)\n"}, "378": {"problem_id": 378, "answer": "from math import ceil\n\ndef solve(n, k, r):\n    if n < 0:\n        return 0\n    elif k <= r:\n        return ceil(n * (k - r) / 10)\n    else:\n        return 0\n\ndef __starting_point():\n    k, r = list(map(int, input().split()))\n    print(solve(k, r))\n__starting_point()"}, "379": {"problem_id": 379, "answer": "n, m = list(map(int, input().split()))\nx = []\nfor i in range(n):\n    x.append(input())\nx.sort(key = lambda x: x[0])\nprint(\"YES\" if x[0] == \"X\" else \"NO\")\n"}, "380": {"problem_id": 380, "answer": "from math import sqrt\n\ndef main():\n    x, y = map(int, input().split())\n    for i in range(1, x+1):\n        x[i] = sqrt(x[i-1] + y[i-1])\n        y[i] = x[i-1] + y[i-1]\n        print(x[i])\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "381": {"problem_id": 381, "answer": "k = int(input())\nedges = []\nfor i in range(k):\n    a, b = list(map(int, input().split()))\n    edges.append((a, b))\n\ndef dfs(v):\n    if v == 0:\n        return 1\n    elif v == 1:\n        return 0\n    else:\n        v = v - 1\n        if v == 1:\n            return 1\n        else:\n            return 0\n\ndfs(0)\nprint('YES' if len(edges) > 10**6 else 'NO')"}, "382": {"problem_id": 382, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, q = list(map(int, input().split()))\ns = input()\nt = input()\n\nl = list(s)\nr = list(t)\n\nfor i in range(q):\n    l.append(l[i] - l[i - 1])\n\n#print(l)\n\n#print(r)\n\nans = 0\n\nfor i in range(q):\n    if l[i] > r[i]:\n        ans += 1\n        break\n\nprint(ans)\n"}, "383": {"problem_id": 383, "answer": "from sys import stdin,stdout\nmod = 1000000007\ninput = stdin.readline\ndef f(s):\n    return s.translate(str.maketrans('abcdefghijklmnopqrstuvwxyz', '0123456789'))\n\nn, k, d = list(map(int, input().split()))\ng = [0] * (n + 1)\nfor i in range(1, n + 1):\n    g[i] = f(i)\n\nd = int(d)\ng[n] = 1\n\nans = 0\nfor i in range(n + 1):\n    ans += g[i]\n    g[i] = g[i] * (i - 1) % mod\n\nprint(ans)\n"}, "384": {"problem_id": 384, "answer": "n = int(input())\ns = input()\nl = len(s)\nfor i in range(l):\n    if s[i] == 'B':\n        s[i] = 'W'\n    elif s[i] == 'W':\n        s[i] = 'B'\n    else:\n        s[i] = 'W'\nprint(''.join(s))"}, "385": {"problem_id": 385, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn, m, p = list(map(int, input().split()))\ns = input()\nc = 0\nfor i in range(m):\n    if s[i] == '(':\n        c += 1\n    elif s[i] == ')':\n        c -= 1\n    else:\n        print(c)\n"}, "386": {"problem_id": 386, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nfor _ in range(n):\n    a = list(map(int, input().split()))\n    if a[0] == \">\":\n        print(\"Impossible\")\n    else:\n        print(\"Wrong\")\n"}, "387": {"problem_id": 387, "answer": "# cook your dish here\nimport bisect\n\ndef main():\n    a, b = list(map(int, input().split()))\n    l = []\n    for i in range(a, b):\n        l.append(str(i))\n    l.sort(reverse=True)\n    print(bisect.bisect_left(l, b))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "388": {"problem_id": 388, "answer": "n, k = map(int, input().split())\ns = list(map(int, input().split()))\n\ndef inp(s):\n    if len(s) == 0:\n        return s\n    else:\n        return 'NO'\n\nfor i in range(1, n + k + 1):\n    if s[i] =='':\n        s[i] = inp(s[i])\n    elif s[i] =='':\n        s[i] = inp(s[i])\n    else:\n        s[i] = inp(s[i])\n\nprint(' '.join(map(str, s)))"}, "389": {"problem_id": 389, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ns = list(input())\na,b = list(map(int,input().split()))\nl = 0\nfor i in range(a,b):\n    if i%2==0:\n        l+=1\n    else:\n        l-=1\nprint(l)\n"}, "390": {"problem_id": 390, "answer": "n, a, b = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n    d[i] = list(map(int, input().split()))\n\ncost = 0\ns = set()\nfor i in range(n):\n    if s.intersection(d[i]):\n        s.add(i)\n        cost += a\n    else:\n        s.add(i)\n\nprint(cost)\n"}, "391": {"problem_id": 391, "answer": "k = int(input())\nfor i in range(k):\n    print(''.join(map(str,input().split())))\n"}, "392": {"problem_id": 392, "answer": "n = int(input())\nfor i in range(n):\n    print(str(i).zfill(n), end=' ')\n"}, "393": {"problem_id": 393, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    if s.count('1') == s.count('1'):\n        print('Yes')\n    else:\n        print('No')"}, "394": {"problem_id": 394, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nk = int(input())\n\nfor i in range(k):\n    print(a[i], end=' ')\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   "}, "395": {"problem_id": 395, "answer": "from math import ceil, floor, log2\na = int(input())\nfor i in range(a):\n    print(\"YES\")\n    if ceil(log2(a)) <= 1:\n        print(\"NO\")\n    else:\n        print(\"NO\")"}, "396": {"problem_id": 396, "answer": "from math import ceil\n\nl, r = map(int, input().split())\n\nfor i in range(0, l):\n    x = int(ceil(i**0.5))\n    print(x)\n"}, "397": {"problem_id": 397, "answer": "from bisect import bisect_left as bl\nn, k = map(int, input().split())\nl = list(map(int, input().split()))\nb = sorted(l, reverse=True)\nb.sort()\nans = 0\nfor i in range(n):\n    if b[i] < b[i-1]:\n        ans += bl(i)\nprint(ans)"}, "398": {"problem_id": 398, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nif n % 3 == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "399": {"problem_id": 399, "answer": "def solve(x,y):\n    print(x,y)\n    return\n\ndef main():\n    x,y=map(int,input().split())\n    solve(x,y)\n    print(\"Yes\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "400": {"problem_id": 400, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\nd = {}\nfor i in range(n):\n    d[i] = 100*(i+1)//3\n    d[i+1] = d[i] + d[i+1]\n\nprint(max(d.values()))\n"}, "401": {"problem_id": 401, "answer": "n, m = list(map(int, input().split()))\nfor i in range(1, n):\n    print(i, end=' ')\n    if i == m:\n        print(i, end=' ')\n    else:\n        print(i, end=' ')\n"}, "402": {"problem_id": 402, "answer": "n, k = list(map(int, input().split()))\np = [0] * n\nfor i in range(n):\n    p[i] = int(input())\n    if i + k < n:\n        k += 1\n    else:\n        p[i] = max(p[i], k)\nprint(2)\n"}, "403": {"problem_id": 403, "answer": ""}, "404": {"problem_id": 404, "answer": "from sys import stdin\ns = stdin.readline().strip()\nn = len(s)\nl = [0] * n\nfor i in range(n):\n    l[i] = 1\n    for j in range(10):\n        if l[i] % j == 0:\n            l[i] += 1\n        else:\n            l[i] = 0\n            break\nprint(l)"}, "405": {"problem_id": 405, "answer": "n = int(input())\nl = list(input())\nfor i in range(n):\n    l.append(input()[i])\nprint(len(l))"}, "406": {"problem_id": 406, "answer": "n = int(input())\nl = list(map(int, input().split()))\na = 0\nb = 0\nfor i in range(n):\n    if l[i] < l[i-1]:\n        a += 1\n    else:\n        b += 1\nprint(a)"}, "407": {"problem_id": 407, "answer": "def main():\n    n = int(input())\n    s = input()\n    for i in range(n):\n        s = s.lower().replace('a', 'j')\n        print(s)\n        \n        if len(s) == 0:\n            print(0)\n            continue\n        else:\n            l = len(s) - 1\n            r = len(s) - 1\n            if l == 0:\n                print(0)\n                continue\n            else:\n                l = 0\n                r = 0\n                if s[l] == 'a':\n                    r = 0\n                else:\n                    l = 0\n                    r = 0\n                if r == 0:\n                    print(0)\n                    continue\n                else:\n                    l = 0\n                    r = 0\n                    if s[l] == 'a':\n                        r = 0\n                    else:\n                        l = 0\n                        r = 0\n                    \n                    if s[l] == 'a':\n                        r = 0\n                    else:\n                        l = 0\n                        r = 0\n                    \n                    if s[l] == 'b':\n                        r = 0\n                    else:\n                        l = 0\n                        r = 0\n                    \n                    if s[l] == 'c':\n                  "}, "408": {"problem_id": 408, "answer": "n, m = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if s == 0:\n        s += 1\n    else:\n        s -= 1\nprint(s)\n"}, "409": {"problem_id": 409, "answer": "s = input()\nfor i in range(1,len(s)):\n    if s[i] in \"BA\":\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "410": {"problem_id": 410, "answer": ""}, "411": {"problem_id": 411, "answer": "R,B = list(map(int,input().split()))\nX,Y = list(map(int,input().split()))\nX.extend(Y)\nprint('Yes') if X[0]==X[1] else print('No')\n"}, "412": {"problem_id": 412, "answer": ""}, "413": {"problem_id": 413, "answer": "n, m = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    x, y = input().split()\n    l.append(x)\n    l.append(y)\nprint(max(l))\n"}, "414": {"problem_id": 414, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\ng = [[] for _ in range(n)]\nfor _ in range(n):\n    l,r = list(map(int,stdin.readline().split()))\n    g[l].append(r)\n    g[r].append(l)\n\ndef main():\n    n = int(stdin.readline())\n    g = [[] for _ in range(n)]\n    for _ in range(n):\n        l,r = list(map(int,stdin.readline().split()))\n        g[l].append(r)\n        g[r].append(l)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "415": {"problem_id": 415, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\ndoubling = list(map(int, input().split()))\nfor i in range(n):\n    r = list(map(int, input().split()))\n    d = 0\n    for j in range(len(r)):\n        if d == 0:\n            d += 1\n        else:\n            d += 1\n    print(d)"}, "416": {"problem_id": 416, "answer": "n, k = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    s.add(input()[i])\nprint('YES' if s.issubset(s) else 'NO')"}, "417": {"problem_id": 417, "answer": "def main():\n    n, x, D = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    S = 0\n    T = 0\n    for i in range(len(A)):\n        if A[i] == x:\n            S += A[i]\n        elif A[i] == x:\n            T += A[i]\n        else:\n            break\n    print(sum(map(int, S)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "418": {"problem_id": 418, "answer": "n = int(input())\nprint(\"YES\" if n > 24 else \"NO\")"}, "419": {"problem_id": 419, "answer": "from math import ceil\ns = int(input())\nfor i in range(s):\n    s = int(input())\n    if s == 0:\n        print(1)\n    else:\n        print(s-1)\n"}, "420": {"problem_id": 420, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nprint(min(a) + min(a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6] + a[7] + a[8] + a[9] + a[10] + a[11] + a[12] + a[13] + a[14] + a[15] + a[16] + a[17] + a[18] + a[19] + a[20] + a[21] + a[22] + a[23] + a[24] + a[25] + a[26] + a[27] + a[28] + a[29] + a[30] + a[31] + a[32] + a[33] + a[34] + a[35] + a[36] + a[37] + a[38] + a[39] + a[40] + a[41] + a[42] + a[43] + a[44] + a[45] + a[46] + a[47] + a[48] + a[49] + a[50] + a[51] + a[52] + a[53] + a[54] + a[55] + a[56] + a[57] + a[58] + a[59] + a[60] + a[61] + a[62] + a[63] + a[64] + a[66] + a[68] + a[69] + a[70] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769] + a[769"}, "421": {"problem_id": 421, "answer": "n = int(input())\nl, r = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n    d[l].append(i)\nprint(max(d.values()))\n"}, "422": {"problem_id": 422, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\nt = list(map(int, input().split()))\n\nfor i in range(1, n):\n    if x[i] == x[i-1]:\n        print('YES')\n        break\n    else:\n        print('NO')\n"}, "423": {"problem_id": 423, "answer": "n, k = list(map(int, input().split()))\ncoefficient = input()\nx = coefficient[0]\ny = coefficient[1]\nfor i in range(2, n + 1):\n    x = x * y\n    if x % i == 0:\n        x //= i\n        y //= i\nprint(\"Yes\")\n"}, "424": {"problem_id": 424, "answer": "from math import sqrt\n\nn = int(input())\ns = 0\nfor i in range(n):\n    s += int(sqrt(i))\nprint(s)"}, "425": {"problem_id": 425, "answer": "import sys\ninput = sys.stdin.readline\n\nn, p = map(int, input().split())\n\nif n == 0:\n    print(-1)\n    return\n\nans = [0]*p\nfor i in range(1, n+1):\n    ans[i] = min(ans[i-1] + p*i, ans[i-1] + p*i)\n\nprint(len(ans))\n"}, "426": {"problem_id": 426, "answer": "n, k = int(input()), 100000\ns = input()\nl = len(s)\nfor i in range(l):\n    if s[i] == '0':\n        s.pop(i)\n    else:\n        s.pop(i)\nprint(s[:k] + '\\n')"}, "427": {"problem_id": 427, "answer": "def main():\n    cnt, n, x, y = map(int, input().split())\n    if x == y:\n        print(n)\n    elif x % 2 == 0:\n        print(n-1)\n    else:\n        print(n-2)\n        for i in range(1, n+1):\n            if i % 2 == 0:\n                print(i)\n            else:\n                print(i)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "428": {"problem_id": 428, "answer": "from math import *\nfrom functools import lru_cache\ninput()\nn,s,dx,dy = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nd = int(input())\nfor i in range(n):\n    x,y,r = map(int,input().split())\n    a[x] += r\n    b[y] += r\n    d *= -1\nprint(d)"}, "429": {"problem_id": 429, "answer": "s = input()\nl = len(s)\nfor i in range(l):\n    if s[i] == '?':\n        print(i)\n    else:\n        print('-1')\n"}, "430": {"problem_id": 430, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if a[0] == 100 else \"NO\")"}, "431": {"problem_id": 431, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    l = []\n    r = []\n    for i in range(n):\n        l.append(input())\n    for i in range(m):\n        r.append(input())\n    r = sorted(r, key=lambda x: x[1])\n    print(int(sum(r) / n))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "432": {"problem_id": 432, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\na = list(map(int,stdin.readline().split()))\nb = list(map(int,stdin.readline().split()))\nc = list(map(int,stdin.readline().split()))\nd = [0]*n\nfor i in range(n):\n    d[i] = a[i]\n    c[i] = 0\n    a[i] = 0\nprint(c[n-1])"}, "433": {"problem_id": 433, "answer": "def rec(n, a, b):\n    if n < a:\n        return 0\n    if n == b:\n        return a\n    elif n < a:\n        return -1\n    else:\n        return rec(n-1, a, b)\n\nn, a, b = list(map(int, input().split()))\nprint(rec(n, a, b))\n"}, "434": {"problem_id": 434, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    s.add(a[i])\n    if a[i] == -1:\n        s.add(i)\n        break\nprint(len(s))\n"}, "435": {"problem_id": 435, "answer": "n, k = list(map(int, input().split()))\ns = input()\na = 0\nb = 0\nfor i in range(n):\n    if s[i] == 'a':\n        a += 1\n    else:\n        b += 1\nprint(a, b)\n"}, "436": {"problem_id": 436, "answer": "n = int(input())\na = list(map(int,input().split()))\nm = list(map(int,input().split()))\nc = list(map(int,input().split()))\nfor i in range(n):\n    if a[i]==1:\n        c.append(i)\n    else:\n        c.append(0)\n\nans = 0\nfor i in range(n):\n    if c[i]>m[i]:\n        ans += 1\n        break\nprint(ans)"}, "437": {"problem_id": 437, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\ndef solve(n, t):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return t\n    else:\n        ans = 0\n        for i in range(n-1):\n            ans += t[i]\n            if ans > ans:\n                ans = ans - t[i]\n        return ans\n\nprint(solve(n, 0))\n"}, "438": {"problem_id": 438, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(l[n-1])\n"}, "439": {"problem_id": 439, "answer": "n, m = list(map(int, input().split()))\na = [0]*(n+1)\nfor i in range(1, n+1):\n    a[i] = a[i-1]\n    a[i] = a[i-1]%m\nprint(a[n])"}, "440": {"problem_id": 440, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip()\n\n# \u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u306b\u5bfe\u3057\u3066\u3001\u6587\u5b57\u5217\u3092\u4f5c\u308b\u6587\u5b57\u5217\u3092\u53d6\u5f97\nword = ''\nfor i in range(n):\n    word += chr(ord('a') + i)\n    word += chr(ord('a') - i)\n    word += '\\n'\nprint(word)"}, "441": {"problem_id": 441, "answer": "n, a, b = map(int, input().split())\nprint(n)"}, "442": {"problem_id": 442, "answer": "import math\ndef solve(n, k):\n    if k == 0:\n        return \"NO\"\n    else:\n        return solve(n, k-1)\n\nn = int(input())\nk = int(input())\nsolve(n, k)\n\nprint(solve(n, k))"}, "443": {"problem_id": 443, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(a[0]*b[0])"}, "444": {"problem_id": 444, "answer": "def solve(n, k):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return abs(n[0] - n[1])\n    else:\n        res = 0\n        for i in range(1, k + 1):\n            res += 9 * (i - 1)\n        return res\n\nn = int(input())\nsolve(1000, n)\n"}, "445": {"problem_id": 445, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    if a[i] + a[i-1] == 1:\n        l.append(i)\n    else:\n        l.append(i)\nprint(max(l))"}, "446": {"problem_id": 446, "answer": "n = int(input())\nl = ['1_2']\nfor i in range(n):\n    l.append(bin(int(input()),2))\nprint(l[n-1] + 1)"}, "447": {"problem_id": 447, "answer": "m, d = list(map(int, input().split()))\na = input()\nb = input()\nprint(len(a) + len(b))\n"}, "448": {"problem_id": 448, "answer": "from bisect import bisect_left,bisect_right,bisect_aln,bisect_heap,bisect_stack,bisect_from_right,bisect_from_left\nn,m = map(int,input().split())\na = list(map(int,input().split()))\na.sort()\ns = 0\nfor i in range(m):\n    if s == 0:\n        s += 1\n    else:\n        s -= 1\nprint(s)"}, "449": {"problem_id": 449, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = 0\nfor i in range(n):\n    if a[i] == 0:\n        b += 1\nprint(b)"}, "450": {"problem_id": 450, "answer": "MOD = 1000000007\nn, k = map(int, input().split())\np = list(map(int, input().split()))\n\n# \u51fa\u529b\u6587\u5b57\u5217\u8868\ndef calc(n, k):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return pow(n, k - 1, MOD)\n    else:\n        return pow(n, k - 1, MOD) % MOD\n\n# \u4e00\u4e9b\u5185\u90e8\u5206\ndef calc_l(n, k):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return pow(n, k - 1, MOD) % MOD\n    else:\n        return pow(n, k - 1, MOD) % MOD\n\n# \u4e00\u4e2a\u6570\u7ec4\uff0c\u9700\u8981\u6700\u540e\u4e00\u76f4\u6392\u5e8f\ndef calc_m(n, k):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return pow(n, k - 1, MOD) % MOD\n    else:\n        return pow(n, k - 1, MOD) % MOD\n\n# \u4e00\u4e2a\u6570\u7ec4\uff0c\u9700\u8981\u6700\u540e\u4e00\u76f4\u6392\u5e8f\ndef calc_s(n, k):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return pow(n, k - 1, MOD) % MOD\n    else:\n        return pow(n, k - 1, MOD) % MOD\n\n# \u4e00\u4e2a\u6570\u7ec4\uff0c\u9700\u8981\u6700\u540e\u4e00\u76f4\u6392\u5e8f\ndef calc_s_m(n, k):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return pow(n, k - 1, MOD) % MOD\n    else:\n        return pow(n, k - 1, MOD) % MOD\n\n# \u4e00\u4e2a\u6570\u7ec4\uff0c\u9700\u8981\u6700\u540e\u4e00\u76f4\u6392\u5e8f\ndef calc_l_m(n, k):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return pow(n, k - 1, MOD) % MOD\n    else:\n        return pow(n, k - 1, MOD) % MOD\n\n# \u4e00\u4e2a\u6570\u7ec4\uff0c\u9700\u8981\u6700\u540e\u4e00\u76f4\u6392\u5e8f\ndef calc_l_s(n, k):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return pow(n, k - 1, MOD) % MOD\n    else:\n        return pow(n, k - 1, MOD) % MOD\n\n# \u4e00\u4e2a\u6570\u7ec4\uff0c\u9700\u8981\u6700\u540e\u4e00\u76f4\u6392\u5e8f\ndef calc_s_s(n, k):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return pow(n, k - 1, MOD) % MOD\n    else:\n        return pow(n, k - 1, MOD) % MOD\n\n# \u4e00\u4e2a\u6570\u7ec4\uff0c\u9700\u8981\u6700\u540e\u4e00\u76f4\u6392\u5e8f\ndef calc_s_m_s(n, k):\n    if k == 0:\n        return 1\n    elif"}, "451": {"problem_id": 451, "answer": "import sys\n\nn, k = list(map(int, input().split()))\nB = sys.stdin.readline\nB = list(map(str, B.split()))\n\ndef bloom(B):\n    return max(B.count('W'))\n\ndef florent(B):\n    return bin(B)[2:].zfill(B.count('W'))\n\ndef main():\n    n, k = list(map(int, input().split()))\n    B = sys.stdin.readline\n    B = list(map(str, B.split()))\n    print(florent(B))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "452": {"problem_id": 452, "answer": "def main():\n    p, q = list(map(int, input().split()))\n    n = int(input())\n    a = [0] * q\n    for i in range(n):\n        a[i] = 1\n        if a[i] == 1:\n            print(\"YES\")\n        else:\n            print(\"NO\")\ndef __starting_point():\n    main()\n__starting_point()"}, "453": {"problem_id": 453, "answer": "def main():\n    from sys import stdin,stdout\n    input = stdin.readline\n    st = list(map(int,input().split()))\n    sign = [0]*len(st)\n    a = st[0]\n    b = st[1]\n    c = st[2]\n    d = st[3]\n    e = st[4]\n    f = st[5]\n    g = st[6]\n    h = st[7]\n    i = 0\n    j = 0\n    while i<len(st):\n        if st[i]==st[i]==sign:\n            i+=1\n        elif st[i]==sign+st[i]==sign:\n            i+=1\n        elif st[i]==sign:\n            i+=1\n        else:\n            print(\"Impossible\")\n            break\n        if i==len(st) or j==len(st):\n            print(\"Impossible\")\n            break\n        if i==len(st) or j==len(st):\n            print(\"Impossible\")\n            break\n        if st[i]==st[i]==sign:\n            st[i] = st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign+st[i]==sign"}, "454": {"problem_id": 454, "answer": "n, k = map(int, input().split())\np = [0] * (n + 1)\nfor i in range(n + 1):\n    if p[i] % 2 == 0:\n        p[i] = 1\n    else:\n        p[i] = 0\nprint(len(p))"}, "455": {"problem_id": 455, "answer": ""}, "456": {"problem_id": 456, "answer": "n = int(input())\ns = input()\nfor i in range(n):\n    if s[i] == '***':\n        s.pop(i)\n    else:\n        s.append(s[i])\nprint(''.join(s))"}, "457": {"problem_id": 457, "answer": "import math\ndef f(x, y):\n    if x % y == 0:\n        return 0\n    elif x % y == 1:\n        return math.factorial(x)\n    else:\n        return math.factorial(x) // y\n\nn = int(input())\nx = int(input())\ny = int(input())\nprint(f(x, y))"}, "458": {"problem_id": 458, "answer": "import sys\n\ndef __starting_point():\n    input = sys.stdin.readline\n    s = int(input())\n    for _ in range(s):\n        a, b, c = map(int, input().split())\n        print(a + b + c)\n__starting_point()"}, "459": {"problem_id": 459, "answer": "from math import ceil\nfor _ in range(int(input())):\n    a, b = map(int, input().split())\n    if ceil(b) % 2 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "460": {"problem_id": 460, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef solve():\n    p, x, y = readline().split()\n    p = int(p) % 25\n    x = int(x) % 25\n    y = int(y) % 25\n    print(p)\n    print(x)\n\nsolve()\n"}, "461": {"problem_id": 461, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = int(input())\nc = 0\nfor i in range(n):\n    if a[i] == 1:\n        c += 1\n    elif a[i] == 2:\n        c += 2\n    else:\n        c += 3\nprint(c)"}, "462": {"problem_id": 462, "answer": "import math\ndef dijkstra(s, n):\n    if n == 0:\n        return s\n    elif n == 1:\n        return s[0]\n    else:\n        s = s[1:]\n        s[0] = math.inf\n        s[1] = math.inf\n        s[2] = math.inf\n        s[3] = math.inf\n        return s\n\ndef __starting_point():\n    try:\n        print(dijkstra(10))\n    except:\n        print(0)\n__starting_point()"}, "463": {"problem_id": 463, "answer": "n, x = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i] == x:\n        c += 1\n    elif a[i] == b[i]:\n        c += 1\nprint(c)"}, "464": {"problem_id": 464, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    h, w = list(map(int, input().split()))\n    if w == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        return\n    \n    for i in range(h, w):\n        s = input()\n        if s[0] == \".\":\n            print(\"\".join(map(str, s)))\n        else:\n            print(\"NO\")\n            return\n        \n    for i in range(h, w):\n        s = input()\n        if s[0] == \".\":\n            print(\"\".join(map(str, s)))\n        else:\n            print(\"NO\")\n            return\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n      "}, "465": {"problem_id": 465, "answer": "from collections import deque\nn, a, b = map(int, input().split())\ngraph = [[] for _ in range(n)]\nfor _ in range(n):\n    x, y = map(int, input().split())\n    graph[x].append(y)\n    graph[y].append(x)\n\ns = set(range(1, n+1))\nvis = set(range(1, n+1))\nvis.add(s)\n\nque = deque([0])\nwhile que:\n    cur = que.popleft()\n    for i in graph[cur]:\n        if i not in vis:\n            continue\n        vis.add(i)\n        que.append(i)\nprint('YES' if len(vis) == a else 'NO')"}, "466": {"problem_id": 466, "answer": "import sys\n\nc,d = list(map(int,input().split()))\nn,m = int(sys.stdin.readline()),1000000007\nfor _ in range(n):\n    n,m = list(map(int,sys.stdin.readline().split()))\n    print(n-m)\n"}, "467": {"problem_id": 467, "answer": "s = input()\nfor i in range(0, len(s)):\n    print(s[i], end=\" \")\n    if s[i] == '.':\n        print(i, end=\" \")\n    elif s[i] == '*':\n        print(i, end=\" \")\n    elif s[i] == '*-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':\n        print(i, end=\" \")\n    elif s[i] == '*-*/-*/':"}, "468": {"problem_id": 468, "answer": "def __starting_point():\n    x, y = list(map(int, input().split()))\n    print(__starting_point())\n__starting_point()"}, "469": {"problem_id": 469, "answer": "import sys\nreadline = sys.stdin.readline\n\nR = lambda: list(map(int, readline().split()))\nn = R()\ns = [0]*n\nfor i in range(n):\n    s[i] = R()\n    s[i+1] = R()\nprint(s[n-1])"}, "470": {"problem_id": 470, "answer": "from collections import Counter\ndef solve():\n    t = list(map(int, input().split()))\n    ans = 0\n    for i in range(t[0]):\n        if t[i] == t[i - 1] + t[i - 2]:\n            ans += sum(t[i:i + 2])\n        elif t[i] == t[i - 1] + t[i - 2]:\n            ans += sum(t[i:i + 1])\n        else:\n            ans += sum(t[i:i + 3])\n    print(ans)\n\nsolve()\n"}, "471": {"problem_id": 471, "answer": "n, a = map(int, input().split())\nx = list(map(int, input().split()))\nprint(a - x[0])"}, "472": {"problem_id": 472, "answer": "n = int(input())\na = [0] * (n + 1)\nfor i in range(1, n + 1):\n    a[i] = int(i)\nprint(a[-1])"}, "473": {"problem_id": 473, "answer": "s = input()\nt = int(s)\nfor i in range(t):\n    if s[i] == '0':\n        s.pop()\n    else:\n        s.pop(0)\nprint(s)"}, "474": {"problem_id": 474, "answer": "n = int(input())\na = list(map(int, input().split()))\na.sort()\ns = 0\nfor i in range(n):\n    s += a[i]\nprint(s)"}, "475": {"problem_id": 475, "answer": "n, m, k = list(map(int, input().split()))\nbricks = []\nfor i in range(n):\n    if i == 0:\n        bricks.append(0)\n    else:\n        bricks.append(int(input()))\ncnt = 0\nfor i in range(k):\n    if bricks[i] == 0:\n        cnt += 1\n    elif bricks[i] == k-1:\n        cnt += 1\nprint(cnt % 1000000007)\n"}, "476": {"problem_id": 476, "answer": "n = int(input())\nprint(n)"}, "477": {"problem_id": 477, "answer": "n, m, i, j, a, b = list(map(int, input().split()))\npos = [0] * n\nc = [0] * m\nfor i in range(n):\n    pos[i] = min(c[i], a[i])\nc[0] = 0\nfor i in range(1, n):\n    if pos[i] == 0:\n        c[i] = 1\n        break\nprint(c[n - 1] + c[n - 1] + c[n - 1])"}, "478": {"problem_id": 478, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = len(list(input()))\n    s = input()\n    l = len(s)\n    ans = 0\n    for i in range(n):\n        if s[i] == 'a':\n            ans += 1\n        else:\n            ans += 1\n    print(ans)\n\ndef __starting_point():\n    solve()\n__starting_point()"}, "479": {"problem_id": 479, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nq = int(input())\nfor i in range(q):\n    x = list(map(int, input().split()))\n    print(a[x-1] + x)\n"}, "480": {"problem_id": 480, "answer": "s, x_1, x_2 = list(map(int, input().split()))\nt = list(map(int, input().split()))\np = 0\nd = -1\nfor i in range(0, len(t)):\n    t[i] = min(t[i], x_1 + t[i])\n    p += 1\nprint(p)\n"}, "481": {"problem_id": 481, "answer": "n,x = list(map(int,input().split()))\nprint(n*x)"}, "482": {"problem_id": 482, "answer": "n, k = list(map(int, input().split()))\ns = input()\na = [0] * 26\nfor i in range(n):\n    if s[i] == '1':\n        a[i] += 1\n    else:\n        a[i] = 1\nprint(''.join(map(str, a)))\n"}, "483": {"problem_id": 483, "answer": "n = int(input())\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    x.sort()\n    y.sort()\n    print(n - x.index(max(x, y)))\n"}, "484": {"problem_id": 484, "answer": "from sys import stdin,stdout\ns = stdin.readline().strip()\nn,a,b = list(map(int,s().split()))\nl = sorted(s,reverse=True)\nprint(max(l))"}, "485": {"problem_id": 485, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x == 0:\n        print(0, end=' ')\n    elif x == 1:\n        print(0, end=' ')\n    else:\n        print(x, end=' ')\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n      "}, "486": {"problem_id": 486, "answer": "n = int(input())\nfor i in range(n):\n    a = int(input())\n    print(a)\n"}, "487": {"problem_id": 487, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\n\ndef dfs(a, b):\n    if a == b:\n        return 0\n    elif a == 0:\n        return 1\n    else:\n        return max(dfs(a, b), dfs(a-1, b-a) + 1)\n\nans = float('inf')\nfor i in range(n):\n    ans = min(ans, dfs(i, 0))\nprint(ans)"}, "488": {"problem_id": 488, "answer": "from collections import defaultdict\ns = input()\nn = len(s)\nc = defaultdict(list)\nfor i in range(n):\n    c[s[i]].append(i)\n\n# a,b,c = map(int,input().split())\n# print(c)\n# print(c[0])\n# print(c[1])\n# print(c[n-1])\n# print(c[n-2])\n# print(c[n-3])\n# print(c[n-4])\n# print(c[n-5])\n# print(c[n-6])\n# print(c[n-7])\n# print(c[n-8])\n# print(c[n-9])\n# print(c[n-10])\n# print(c[n-11])\n# print(c[n-12])\n# print(c[n-13])\n# print(c[n-14])\n# print(c[n-15])\n# print(c[n-16])\n# print(c[n-17])\n# print(c[n-18])\n# print(c[n-19])\n# print(c[n-20])\n# print(c[n-21])\n# print(c[n-22])\n# print(c[n-23])\n# print(c[n-24])\n# print(c[n-25])\n# print(c[n-26])\n# print(c[n-27])\n# print(c[n-28])\n# print(c[n-29])\n# print(c[n-30])\n# print(c[n-31])\n# print(c[n-32])\n# print(c[n-33])\n# print(c[n-34])\n# print(c[n-35])\n# print(c[n-36])\n# print(c[n-37])\n# print(c[n-38])\n# print(c[n-38])\n# print(c[n-39])\n# print(c[n-40])\n# print(c[n-41])\n# print(c[n-42])\n# print(c[n-43])\n# print(c[n-44])\n# print(c[n-45])\n# print(c[n-46])\n# print(c[n-47])\n# print(c[n-48])\n# print(c[n-49])\n# print(c[n-50])\n# print(c[n-51])\n# print(c[n-52])\n# print(c[n-53])\n# print(c[n-54])\n# print(c[n-55])\n# print(c[n-56])\n# print(c[n-57])\n# print(c[n-58])\n# print(c[n-59])\n# print(c[n-60])\n# print(c[n-61])\n# print(c[n-62])\n# print(c[n-63])\n# print(c[n-64])\n# print(c[n-66])\n# print(c[n-67])\n# print(c[n-68])\n# print(c[n-69])\n# print(c[n-70])\n# print(c[n-71])\n# print(c[n-72])\n# print(c[n-73])\n# print(c[n-74])\n# print(c[n-75])\n# print(c[n-76])\n# print(c[n-77])\n# print(c[n-78])\n# print(c[n-79])\n# print(c[n-80])\n# print(c[n-81])\n# print(c[n-82])\n# print(c[n-83])\n# print(c[n-84])\n# print(c[n-85])\n# print(c[n-86])\n# print(c[n-87])\n# print(c[n-88])\n# print(c[n-89])\n# print(c[n-90])\n# print(c[n-91])\n# print(c[n-92])\n# print(c[n-93])\n# print(c[n"}, "489": {"problem_id": 489, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort as ins\nn = int(input())\narr = list(map(int, input().split()))\nfor i in range(n):\n    print(arr[i]*(i+1)//2)"}, "490": {"problem_id": 490, "answer": "from math import ceil\nn = int(input())\np = list(map(int, input().split()))\nfor i in range(n):\n    print(p[i], end=' ')\n    if p[i] == end:\n        print(i)\n    else:\n        print(ceil(n - p[i] / int(p[i])))"}, "491": {"problem_id": 491, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nfor i in range(n):\n    if l[i] == 0:\n        print(i)\n        break\n    else:\n        print(i+1)\n"}, "492": {"problem_id": 492, "answer": "from itertools import permutations as p\ns = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nn = int(input())\nfor i in range(n):\n    perm = list(map(str, input().split()))\n    s = perm.replace('ABCDEFGHIJKLMNOPQRSTUVWXYZ','')\n    print(s)\n"}, "493": {"problem_id": 493, "answer": "n = int(input())\ns = input()\nl = len(s)\na = [0]*n\nfor i in range(n):\n    if s[i] == 'R':\n        a[i] = 1\n    else:\n        a[i] = -1\nprint(len(a))"}, "494": {"problem_id": 494, "answer": "n, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\ndef count(x):\n    if x == l:\n        return 1\n    elif x == l[0]:\n        return 0\n    else:\n        return sum(count(x) for x in l)\n\nl.sort()\n\ns = 0\nfor i in range(n):\n    if s == l[i]:\n        s += 1\nprint(s)\n"}, "495": {"problem_id": 495, "answer": "import sys\n\na = int(input())\nk = int(input())\nfor i in range(a):\n    print(k)\n"}, "496": {"problem_id": 496, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ns = input().strip()\ndef solve(n,s):\n    if n==0:\n        return 0\n    elif n==1:\n        return int(s[n-1]*n)\n    else:\n        return solve(n-1,s[n-1])\n\nn = int(s[0])\ns = list(map(int,s[1:])+s[::-1])\nprint(s)"}, "497": {"problem_id": 497, "answer": "def main():\n    n = int(input())\n    c = list(map(int, input().split()))\n    d = [0] * (n + 1)\n    for i in range(n):\n        d[i] = c[i]\n    print(max(d))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "498": {"problem_id": 498, "answer": "n, m, k = list(map(int, input().split()))\nl = list(map(int, input().split()))\nd = m*n\nc = 0\nfor i in range(m):\n    if c == k:\n        c += 1\nprint(c)\n"}, "499": {"problem_id": 499, "answer": "n = int(input())\ns = input()\nfor i in range(n):\n    s = s.replace('B', 'R')\n    s = s.replace('G', 'B')\n    s = s.replace('R', 'G')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'B')\n    s = s.replace('R', 'G')\n    s = s.replace('B', 'G')\n    s = s.replace('R', 'G')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('G', 'B')\n    s = s.replace('R', 'G')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('G', 'B')\n    s = s.replace('R', 'G')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('G', 'B')\n    s = s.replace('R', 'G')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('G', 'B')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('G', 'B')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')\n    s = s.replace('G', 'R')\n    s = s.replace('G', 'B')\n    s = s.replace('G', 'R')\n    s = s.replace('B', 'G')"}, "500": {"problem_id": 500, "answer": "from math import ceil\nn = int(input())\nl = list(map(int, input().split()))\ns = [0] * n\nfor i in range(n - 1):\n    s[i] = max(l[i] - 1, s[i + 1])\nprint('YES' if s[n - 1] == 'NO' else 'NO')"}, "501": {"problem_id": 501, "answer": "import sys\ninput = sys.stdin.readline\n\nL, R = [int(i) for i in input().split()]\n\n# \u533a\u9593\u53d6\u5f97\u4e8c\u5341\u56de\n# \u4e00\u6b65\uff1a\u5341\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\u56de\n\n\ndef dfs(n, r):\n    nonlocal L\n    nonlocal R\n    \n    if n == 0:\n        return 0\n    elif n % 2 == 0:\n        return r\n    else:\n        return sum(dfs(n//2, r) for r in range(1, int(n**0.5) + 1))\n\nprint(L)"}, "502": {"problem_id": 502, "answer": "from math import sqrt\n\ndef solve(a, b, c):\n    x, y, z = 0, 0, 0\n    for i in range(3):\n        x += a[i]\n        y += b[i]\n        z += c[i]\n        z += x\n        z %= sqrt(y)\n    return z\n\na = sorted(map(int, input().split()))\nb = sorted(map(int, input().split()))\nc = sorted(map(int, input().split()))\n\nprint('Yes' if solve(a, b, c) else 'No')"}, "503": {"problem_id": 503, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nfor i in range(1, n):\n    if a[i] == b[i]:\n        c += 1\nprint(c)"}, "504": {"problem_id": 504, "answer": "from math import ceil, log2\nn, a, b = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    hp, dmg = list(map(int, input().split()))\n    d[hp] = hp\n    if dmg not in d:\n        d[d[d.get(hp, 0)]] = hp\n    else:\n        d[d[d.get(hp, 0)]].append(hp)\nprint(max(d.values()))\n"}, "505": {"problem_id": 505, "answer": "n, m, k = list(map(int, input().split()))\ns = input()\nl = list(map(int, s.split()))\nr = list(map(int, input().split()))\n\nprint(len(l) - k)\n"}, "506": {"problem_id": 506, "answer": "from math import gcd\na, b = list(map(int, input().split()))\nprint(a)"}, "507": {"problem_id": 507, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# \u8981\u7d20\u6570\u5b57\u5217\u8868\ndef is_integer(x):\n    if x not in [1, 2, 3, 4, 5]:\n        return False\n    return True\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(*is_integer(a), sep='\\n')\n\n__starting_point()"}, "508": {"problem_id": 508, "answer": "from math import *\ndef gcd(a, b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return gcd(b, a)\n    else:\n        return gcd(b, a)\n\nn, a = list(map(int, input().split()))\np = [[] for _ in range(n)]\nfor i in range(n):\n    p[i].append(a)\n\nv = list(map(int, input().split()))\n\ng = 998244353\n\nfor i in range(1, n):\n    if v[i] == 0:\n        g = gcd(g, a)\n        continue\n    if len(p[i]) == 3:\n        g = gcd(g, a)\n        continue\n    v[i] = g\n\nprint(g)\n"}, "509": {"problem_id": 509, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if a[0] == a[-1] else \"NO\")\n"}, "510": {"problem_id": 510, "answer": "from sys import stdin,stdout\ndef f(s):\n    return 0 if s[0]==s[1] else s[0]\ndef l(s):\n    return sum(map(int,stdin.readline().split()))\ndef r(s):\n    return sum(map(int,stdin.readline().split()))\ndef s(s):\n    return list(map(int,stdin.readline().split()))\ns=list(map(int,stdin.readline().split()))\nprint(s.count(1))\n"}, "511": {"problem_id": 511, "answer": "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nprint(l[0])"}, "512": {"problem_id": 512, "answer": "def main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    if A[0] == -1:\n        print(\"Yes\")\n    elif A[0] == 1:\n        print(\"Yes\")\n    else:\n        for i in range(1, 2*N):\n            if A[i] == -1:\n                print(\"Yes\")\n            else:\n                print(\"No\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "513": {"problem_id": 513, "answer": "from math import ceil, log2\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef __starting_point():\n    print('start')\n    x, y, z = list(map(int, input().split()))\n    for i in range(1, x+1):\n        if x[i] < y[i]:\n            z[i] += z[i-1]\n        else:\n            z[i] += z[i-1]\n    print('ugly', z)\n__starting_point()"}, "514": {"problem_id": 514, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, d = list(map(int, input().split()))\n    l = [0] * (n + 1)\n    for i in range(n):\n        l[i] = 1\n    print('YES' if l[-1] == 1 else 'NO')\n"}, "515": {"problem_id": 515, "answer": "import math\ndef power(n, k):\n    if k == 0:\n        return 0\n    elif k == 1:\n        return math.floor(n/k)\n    else:\n        return math.floor(n/k) + pow(n, k, k)\n\nn = int(input())\nl = list(map(int, input().split()))\nprint(power(l, k))"}, "516": {"problem_id": 516, "answer": "n, m = list(map(int, input().split()))\ns = input()\nt = input()\n\ndef is_div(a, b):\n    if a == b:\n        return True\n    elif a % b == 0:\n        return False\n    else:\n        return True\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    s = input()\n    t = input()\n    \n    for i in range(n):\n        s = s.replace('?', '\\n')\n        t = t.replace('?', '\\n')\n    \n    print(is_div(s, t))\n\n__starting_point()"}, "517": {"problem_id": 517, "answer": "from collections import deque\nn, d, h = map(int, input().split())\nedges = []\nfor i in range(n):\n    d, h = map(int, input().split())\n    edges.append([d, h])\n\nprint(' '.join(edges))"}, "518": {"problem_id": 518, "answer": "import math\ndef radians(a):\n return (math.sqrt(a) - 1) / 2\n\nn, r = map(int, input().split())\na = [0] + list(map(int, input().split()))\nb = [0] + list(map(int, input().split()))\nfor i in range(1, n):\n a[i] = radians(a[i])\nprint(a[n - 1])"}, "519": {"problem_id": 519, "answer": "import sys\ninput = sys.stdin.readline\n\nL = int(input())\nfor i in range(L):\n    p, q = map(int, input().split())\n    if q < p:\n        print(p)\n    else:\n        print(q)"}, "520": {"problem_id": 520, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n, '\\n'.join(a))"}, "521": {"problem_id": 521, "answer": "n = int(input())\ns = input()\nprint('Yes' if len(s) > n else 'No')"}, "522": {"problem_id": 522, "answer": "def factors(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    else:\n        return 3\n\nn, f, c = list(map(int, input().split()))\nmod = 10 ** 9 + 7\nfor i in range(n):\n    if f % (mod * i) == 0:\n        factors(i)\n    else:\n        factors(i)\n\nprint(f)\n"}, "523": {"problem_id": 523, "answer": "n, m = list(map(int, input().split()))\ns = input()\nl = len(s)\nif m == 0:\n    print(\"0\")\n    return\nfor i in range(m):\n    if s[i]!= s[i-1]:\n        l-=1\n        s[i] = s[i-1]\n    else:\n        l-=1\n        s[i] = s[i-1]\nprint(l)"}, "524": {"problem_id": 524, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef is_power(a):\n    if a[0] == a[1] or a[0] == a[2]:\n        return True\n    else:\n        return False\n\nd = {}\nfor i in range(n):\n    d[a[i]] = i\n\nans = 0\nfor i in range(n-1, -1, -1):\n    if is_power(a[i+1]):\n        ans += 1\n    else:\n        ans += 1\n\nprint(ans)\n"}, "525": {"problem_id": 525, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        a.append(a[i])\n    print(len(a))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "526": {"problem_id": 526, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\na = [[] for _ in range(n)]\nfor i in range(m):\n    a[i] = list(map(int, input().split()))\nq = deque()\nfor i in range(n):\n    q.append(a[i][0])\n    q.append(a[i][1])\n\nfor i in range(n):\n    for j in range(n):\n        if a[i][j] > 0:\n            print('TAK')\n            continue\n        else:\n            print('NIE')\n            break\n\nprint('\\n'.join(map(str, q)))\n"}, "527": {"problem_id": 527, "answer": "from bisect import bisect_left as bl, bisect_right as br, bisect\n\ns = input()\nt = input()\n\n# \u533a\u9593\u306e\u3068\u304d\u306f\u5b58\u5728\u3059\u308b\u3053\u3068\u3067\u3059\ndef dfs(s, t):\n    if s == t:\n        return 1\n    elif s[0] == t[0] or s[-1] == t[-1]:\n        return 0\n    else:\n        return min(dfs(s, t), dfs(s, t) + 1)\n\nprint(min(dfs(s, t), dfs(s, t) + 1))\n"}, "528": {"problem_id": 528, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef check(a, b):\n    if a[0] == b[0]:\n        return True\n    elif a[0] == a[1]:\n        return False\n    else:\n        return False\n\nprint('YES' if check(a, b) else 'NO')\n"}, "529": {"problem_id": 529, "answer": "def __starting_point():\n try:\n  print(True)\n except:\n  print(False)\n\n__starting_point()"}, "530": {"problem_id": 530, "answer": "n = int(input())\ns = input()\nt = input()\nprint('First' if s[0] == t[0] else 'Second')\nprint('Draw' if s[0] > t[0] else 'Second')\n\ndef __starting_point():\n    n = int(input())\n    s = input()\n    t = input()\n    print('First' if s[0] == t[0] else 'Second')\n\n__starting_point()"}, "531": {"problem_id": 531, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nl = list(map(int,input().split()))\nx = [0]*n\ny = [0]*n\nfor i in range(n):\n    x[i] = l[i]\n    y[i] = l[i]\nprint('\\n'.join(map(str,x)))"}, "532": {"problem_id": 532, "answer": "from math import ceil\n\ndef rot(s):\n    return ceil(sum(s.count(c) for c in s))\n\ndef __starting_point():\n    EVAL = 0\n    N = len(s)\n    for i in range(N):\n        print(s[i], end=' ')\n        EVAL |= (1 << ord(s[i]))\n        print(s[i], end=' ')\n        print(s[i], end=' ')\n__starting_point()"}, "533": {"problem_id": 533, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    a = int(input())\n    b = list(map(int, input().split()))\n    n = int(input())\n    s = 0\n    for i in range(n):\n        s += b[i]\n        if s > a:\n            break\n    print(s)\n\nmain()"}, "534": {"problem_id": 534, "answer": "n, t = list(map(int, input().split()))\ns = input()\nprint(''.join(s[:n-1]))\n"}, "535": {"problem_id": 535, "answer": "import math\ndef factorial(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return math.factorial(n-1)\n    else:\n        return math.factorial(n-2)\n\nn, k = list(map(int, input().split()))\nl = [0] * k\nfor i in range(k):\n    l[i] = l[i-1]\n\nans = 0\nfor i in range(k):\n    ans += factorial(i) * (i-1)\nprint(ans)\n"}, "536": {"problem_id": 536, "answer": "n = int(input())\na = [0]*n\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n\nprint(''.join(a))"}, "537": {"problem_id": 537, "answer": "n, k = list(map(int, input().split()))\nw = 0\nfor i in range(n):\n    w += int(input())\n    if w > k:\n        w = k\nprint(w)"}, "538": {"problem_id": 538, "answer": "from sys import stdin, stdout\nn = int(stdin.readline())\nfor i in range(n):\n    x = int(stdin.readline())\n    if x == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "539": {"problem_id": 539, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\nprint(len(a) + len(b) + len(c))"}, "540": {"problem_id": 540, "answer": "n, m = list(map(int, input().split()))\nprint('YES' if m == 1 else 'NO')\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x == \"X\":\n        print(\"\".join(map(str, x)))\n    elif x == \"XX\":\n        print(\"\".join(map(str, xx)))\n    else:\n        print(\"NO\")"}, "541": {"problem_id": 541, "answer": "n, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nnow = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        now += 1\n    else:\n        now -= 1\nprint(now)"}, "542": {"problem_id": 542, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    if a[i] == 0:\n        print(\"first\")\n    else:\n        print(\"second\")\n"}, "543": {"problem_id": 543, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    a[i] += cnt\n    cnt += 1\nprint('YES' if a[i] == 1 else 'NO')"}, "544": {"problem_id": 544, "answer": "def check(s):\n    if s.count('o')>0:\n        return True\n    elif s.count('a')>0:\n        return True\n    elif s.count('z')>0:\n        return True\n    else:\n        return False\n\ndef main():\n    n = int(input())\n    s = input()\n    for i in range(n):\n        s = s.replace('o','')\n        s = s.replace('a','')\n        s = s.replace('z','')\n    print(check(s))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "545": {"problem_id": 545, "answer": "n, t = list(map(int, input().split()))\ns = input()\nfor i in range(n):\n    if s[i] == s[i+1]:\n        s[i] = s[i+1]\nprint(''.join(s))"}, "546": {"problem_id": 546, "answer": "s = input()\nn = len(s)\nfor i in range(n):\n\ts.append(input()[i])\nprint(\"YES\" if s[0] == '*' else \"NO\")"}, "547": {"problem_id": 547, "answer": "n, k = list(map(int, input().split()))\ns = input()\na = [0] * (n + 1)\nfor i in range(n):\n    a[i] = a[i - 1] + s[i - 1]\nprint(a[-1])"}, "548": {"problem_id": 548, "answer": "n = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n):\n    l.append(a[i]%2)\nprint('First' if l[-1]!=l[-2] else 'Second')"}, "549": {"problem_id": 549, "answer": "n = int(input())\nfor i in range(n):\n    print(i-1)\n"}, "550": {"problem_id": 550, "answer": "import sys\ninput = sys.stdin.readline\n\ndef __starting_point():\n    n = int(input())\n    s = input().strip()\n    l = list(map(int,input().split()))\n    u = list(map(int,input().split()))\n    for i in range(n):\n        if s[i] == \"0\":\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\n__starting_point()"}, "551": {"problem_id": 551, "answer": "from collections import deque\n\nn = int(input())\npoints = list(map(int, input().split()))\nx = 0\ny = 0\nfor i in range(n):\n    x += points[i]\n    y += points[i]\nprint('Yes' if x == y else 'No')"}, "552": {"problem_id": 552, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\ns = input()\na = [0] * n\nb = [0] * m\nfor i in range(n):\n    a[i] += s[i]\n    b[i] += s[i]\nans = 0\nfor i in range(m):\n    if a[i] == b[i]:\n        ans += 1\nprint(ans)\n"}, "553": {"problem_id": 553, "answer": "n = int(input())\nl = list(map(int, input().split()))\nfor i in range(n):\n    if l[i] == 0:\n        l[i] = 0\n    else:\n        l[i] = 1\nprint(l[n-1])"}, "554": {"problem_id": 554, "answer": "def fun(n, m, d):\n    if n == 0:\n        return 1\n    elif m == 0:\n        return 0\n    else:\n        res = 0\n        for i in range(n-1, -1, -1):\n            if i % 2 == 0:\n                res += d*(i+1)\n            else:\n                res += d*(i+1)\n        return res\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nprint(fun(n, m, d))\n"}, "555": {"problem_id": 555, "answer": "from math import ceil,sqrt,factorial,sqrtacum of\nn=int(input())\nfor i in range(n):\n    x=int(input())\n    if x==0:\n        print(0)\n    else:\n        print(factorial(x))\n"}, "556": {"problem_id": 556, "answer": "l, r, k = list(map(int, input().split()))\nn = l*r\nfor i in range(n):\n    print(i, end=' ')\n    if i%k == 0:\n        print(-1)\n    else:\n        print(i, end=' ')\n"}, "557": {"problem_id": 557, "answer": "from itertools import takewhile, accumulate, islice\nN, = list(map(int, input().split()))\nprint('YES' if takewhile(islice(*list(map(int, input().split()), 0)) or N == 1 or N == 2 or N == 3 or N == 4 or N == 5 or N == 6 or N == 7 or N == 8 or N == 9) else 'NO')\n"}, "558": {"problem_id": 558, "answer": "def main():\n    N, M = list(map(int, input().split()))\n    d = 998244353\n    ans = 0\n    for i in range(N):\n        d *= d\n        ans += d\n    print(ans % M)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "559": {"problem_id": 559, "answer": "from collections import deque\n\np = int(input())\nq = deque([])\nfor i in range(p):\n    a,b = list(map(int, input().split()))\n    if a%p == 0:\n        q.append(a)\n    else:\n        q.append(b)\n        \nprint('\\n'.join(map(str, q)))"}, "560": {"problem_id": 560, "answer": "r,c = map(int,input().split())\nfor i in range(r):\n    print(max(0,i) + 1)"}, "561": {"problem_id": 561, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(' '.join(map(str, a)))"}, "562": {"problem_id": 562, "answer": "from math import ceil\nn = int(input())\nl, r = map(int, input().split())\na = [0]*(n+1)\nfor i in range(1, n+1):\n    a[i] = ceil(l[i-1]*(i+1)//2)\nprint('YES' if a[-1]==l[-1] else 'NO')"}, "563": {"problem_id": 563, "answer": "from itertools import combinations\n\ndef __starting_point():\n    l, r = list(map(int, input().split()))\n    if l == r:\n        print(-1)\n    elif all(map(int, input().split()) for _ in range(l)):\n        print(l)\n    else:\n        print(l, end=' ')\n\n__starting_point()"}, "564": {"problem_id": 564, "answer": "n, s = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    a = list(map(int, input().split()))\n    l.append(a)\nprint(\"YES\" if l[-1] == 0 else \"NO\")\n"}, "565": {"problem_id": 565, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ns = list(map(int,input().split()))\nn = len(s)\ncnt = 0\nfor i in range(n):\n    if s[i]!=s[i-1]:\n        cnt+=1\n    else:\n        cnt=0\nprint(cnt)"}, "566": {"problem_id": 566, "answer": "r, g, b = list(map(int, input().split()))\nprint(max(r, g))\nfor i in range(len(r)):\n    if r[i] == g[i]:\n        print(i)\n        break\n    elif g[i] == b[i]:\n        print(i)\n        break\n    else:\n        print(max(r, g))\n"}, "567": {"problem_id": 567, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(min(a[0], a[1]))"}, "568": {"problem_id": 568, "answer": "import sys\n\ndef main():\n    input = sys.stdin.readline\n    n = int(input())\n    d = list(map(int, input().split()))\n    d.sort(reverse=True)\n    print(d[0]*3*n)\n    for i in range(n):\n        if d[i]%3 == 0:\n            d[i] += 1\n        else:\n            d[i] = 1\n            break\n    print(d[-1]*3*n)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "569": {"problem_id": 569, "answer": "n = int(input())\ns = input()\nprint(n)\n"}, "570": {"problem_id": 570, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ndef l():\n return list(map(int,input().split()))\ndef r():\n return list(map(int,input().split()))\na,b=l()\nc=0\nfor i in range(a):\n c+=1\n if c>b:\n  print(\"Vladik\")\n else:\n  print(\"Valera\")\n"}, "571": {"problem_id": 571, "answer": "from sys import stdin, stdout\ns = input()\nfor _ in range(0, len(s)):\n    s = s.split()\n    if ')' not in s[0:]:\n        print('1')\n    else:\n        print('2')\n"}, "572": {"problem_id": 572, "answer": "from collections import defaultdict\ndef polynomial(x):\n    return sum(x**i for i in range(2, int(x**0.5) + 1))\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] = polynomial(a[i])\n\nprint(len(a))\n"}, "573": {"problem_id": 573, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nn = int(input())\nl = list(map(int,input().split()))\nc = 0\nfor i in range(n):\n    if l[i]==l[i-1]:\n        c+=1\nprint(c)"}, "574": {"problem_id": 574, "answer": "from math import sqrt\nn = int(input())\nfor i in range(n):\n    x, y, x_1, y_1, x_2, y_2 = map(int, input().split())\n    x_1 = x\n    y_1 = y\n    x_2 = x\n    y_2 = y\n    if x_1 == x_2:\n        x_1, y_1, x_2, y_2 = x, y, x_1, y_1, x_2, y_2\n    elif x_1 == x_2:\n        x_1, y_1, x_2, y_2 = x, y, x_1, y_1, x_2, y_2\n    elif x_1 == x_2:\n        x_1, y_1, x_2, y_2 = x, y, x_1, y_1, x_2, y_2\n    else:\n        x_1, y_1, x_2, y_2 = x, y, x_1, y_1, x_2, y_2\n    print(x_1)\n"}, "575": {"problem_id": 575, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\nif n % 2 == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")"}, "576": {"problem_id": 576, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "577": {"problem_id": 577, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\na = [0] * (n + 1)\nb = [0] * (n + 1)\n\nfor i in range(1, n + 1):\n    a[i] += 1\n    b[i] += 1\n\nc = [0] * (n + 1)\n\nfor i in range(1, n + 1):\n    c[i] += 1\n    b[i] += 1\n\nprint(max(c))\n"}, "578": {"problem_id": 578, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ndef inp(): return list(map(int, input().split()))\ndef inl(): return list(map(int, input().split()))\ndef lmp(): return list(map(int, input().split()))\ndef lm(): return list(map(int, input().split()))\ndef md(n): return int(n) - 1\ndef md(n): return md(n)\n\n#-----------------\n# Dijkstra Algorithm\n#-----------------\n\nclass BIT():\n    def __init__(self, n):\n        self.n = n\n        self.bit = [0] * (n + 1)\n        self.data = [0] * (n + 1)\n        self.s = [0] * (n + 1)\n        self.s[0] = n\n        self.data[0] = n\n        self.data[n] = 0\n        self.s[n - 1] = n\n        self.data[n - 2] = n\n        self.data[n - 3] = n\n        self.data[n - 4] = n\n        self.data[n - 5] = n\n        self.data[n - 6] = n\n        self.data[n - 7] = n\n        self.data[n - 8] = n\n        self.data[n - 9] = n\n        self.data[n - 10] = n\n        self.data[n - 11] = n\n        self.data[n - 12] = n\n        self.data[n - 13] = n\n        self.data[n - 14] = n\n        self.data[n - 15] = n\n        self.data[n - 16] = n\n        self.data[n - 17] = n\n        self.data[n - 18] = n\n        self.data[n - 19] = n\n        self.data[n - 20] = n\n        self.data[n - 21] = n\n        self.data[n - 22] = n\n        self.data[n - 23] = n\n        self.data[n - 24] = n\n        self.data[n - 25] = n\n        self.data[n - 26] = n\n        self.data[n - 27] = n\n        self.data[n - 28] = n\n        self.data[n - 29] = n\n        self.data[n - 30] = n\n        self.data[n - 31] = n\n        self.data[n - 32] = n\n        self.data[n - 33] = n\n        self.data[n - 34] = n\n        self.data[n - 35] = n\n        self.data[n - 36] = n\n        self.data[n - 37] = n\n        self.data[n - 38] = n\n        self.data[n - 39] = n\n        self.data[n - 40] = n\n        self.data[n - 41] = n\n        self.data[n - 42]"}, "579": {"problem_id": 579, "answer": "from bisect import bisect_left as bl, bisect_right as br, bisect_left as bl_right, bisect_left as br_right, bisect_right as br_left\r\n\r\nN, K = list(map(int, input().split()))\r\np = [int(x) for x in input().split()]\r\n\r\n# \u305d\u306e\u307e\u307e\u30b9\u30bf\u30fc\u30c8\u306b\u5bfe\u3057\u3066\u8003\u3048\u3089\u308c\u308b\u3053\u3068\u306b\u6c17\u306a\u3044\r\nmod = 10**9+7\r\n\r\ndef solve(n, k):\r\n    if k == 0:\r\n        return 0\r\n    else:\r\n        return max(p[k-1] + solve(n-1, k-2), p[k-2] + solve(n-1, k-3))\r\n\r\nsolve(10, 10)\r\nprint(solve(10, 10))"}, "580": {"problem_id": 580, "answer": "n, m, s, t = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef DFS(d, t):\n    if d[t] == 0:\n        return True\n    else:\n        return False\n\ndef DFS(d, t):\n    if d[t] == 0:\n        return True\n    else:\n        return False\n\nd = dict()\nfor i in range(m):\n    a, b, l = list(map(int, input().split()))\n    if DFS(a, b):\n        print('NO')\n    else:\n        print('YES')\n"}, "581": {"problem_id": 581, "answer": "n = int(input())\nedges = []\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    edges.append((a, b, c))\n\nprint(max(edges))\n\n# cook your dish here\n"}, "582": {"problem_id": 582, "answer": "n = int(input())\na = list(map(int, input().split()))\nt = list(map(int, input().split()))\nfor i in range(t):\n    print(a[i], t[i])"}, "583": {"problem_id": 583, "answer": "n = int(input())\ns = input()\nl = len(s)\nr = n-l\nfor i in range(l):\n    if s[i] == s[i+1]:\n        print(i+1)\n    else:\n        r = i+1\n        break\n"}, "584": {"problem_id": 584, "answer": "n = int(input())\ns = input()\nl = len(s)\na = [0]*n\nfor i in range(n):\n    a[i] = 1\n    for j in range(i+1,n):\n        a[j] = a[j-1] + a[j]\n        a[j] = a[j-1] - a[j]\n        a[j] = a[j-1] + a[j]\nprint(0, end = '\\n')\n"}, "585": {"problem_id": 585, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ns = 998244353\nfor i in range(n):\n    if a[i] == b[i]:\n        s += pow(i, m - 1, s)\n    else:\n        s = pow(i, m - 1, s)\nprint(s)\n"}, "586": {"problem_id": 586, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\n# \u5176\u5b83\u6587\u4ef6\u5411\u6587\u5b57\ndef calc(x, y):\n    if x == 0:\n        return 0\n    elif x == 1:\n        return 1\n    else:\n        return (calc(x, y) - calc(x-1, y)) % (10**9 + 7)\n\n# \u4f7f\u7528\u65b9\u6cd5\ndef calc_lcm(x, y):\n    if x == y:\n        return y\n    elif x < y:\n        return (x + y) // 2\n    else:\n        return (x * y) % (10**9 + 7)\n\n# \u4f7f\u7528\u65b9\u6cd5\ndef calc_gcd(x, y):\n    if x == y:\n        return 1\n    elif x == 1:\n        return 0\n    else:\n        return int(x)\n\n# \u4f7f\u7528\u65b9\u6cd5\ndef calc_lcm_gcd(x, y):\n    if x == y:\n        return y\n    elif x < y:\n        return (x + y) // 2\n    else:\n        return (x * y) % (10**9 + 7)\n\n# \u4f7f\u7528\u65b9\u6cd5\ndef calc_lcm_acos(x, y):\n    if x == y:\n        return y\n    elif x == 1:\n        return (x + y) // 2\n    else:\n        return (x * y) % (10**9 + 7)\n\n# \u4f7f\u7528\u65b9\u6cd5\ndef calc_gcd_lcm(x, y):\n    if x == y:\n        return 1\n    elif x == 1:\n        return 0\n    else:\n        return (x * y) % (10**9 + 7)\n\n# \u4f7f\u7528\u65b9\u6cd5\ndef calc_lcm_lcm(x, y):\n    if x == y:\n        return y\n    elif x == 1:\n        return 0\n    else:\n        return (x * y) % (10**9 + 7)\n\n# \u4f7f\u7528\u65b9\u6cd5\ndef calc_gcd_gcd(x, y):\n    if x == y:\n        return 1\n    elif x == 1:\n        return 0\n    else:\n        return (x * y) % (10**9 + 7)\n\n# \u4f7f\u7528\u65b9\u6cd5\ndef calc_lcm_lcm(x, y):\n    if x == y:\n        return y\n    elif x == 1:\n        return 0\n    else:\n        return (x * y) % (10**9 + 7)\n\n# \u4f7f\u7528\u65b9\u6cd5\ndef calc_gcd_gcd_lcm(x, y):\n    if x == y:\n        return y\n    elif x == 1:\n        return 0\n    else:\n        return (x * y) % (10**9 + 7)\n\n# \u4f7f\u7528\u65b9\u6cd5\ndef calc_lcm_lcm_gcd(x, y):\n    if x == y:\n        return y\n    elif x == 1:\n        return"}, "587": {"problem_id": 587, "answer": "import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nt = list(map(int, input().split()))\ndel = [0]*N\nfor i in range(K):\n    t[i] = min(t[i], 1+K)\n    del t[i]\n\nsatisfaction = 0\nfor i in range(K):\n    if t[i] == 0:\n        satisfaction += sum(del)\n    elif t[i] == 1:\n        satisfaction += sum(del)\n    else:\n        print(satisfaction)"}, "588": {"problem_id": 588, "answer": "from collections import defaultdict as dd\nn = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\nd = dd(defaultdict(list))\nfor i in range(n):\n    x[i] = x.pop(i)\nd[x[0]].append(x[1])\nd[x[1]].append(x[0])\nd[x[0]].append(x[1])\nd[x[1]].sort()\nprint('%.6f' % d[x[0]])"}, "589": {"problem_id": 589, "answer": "s = input()\nb = {'0':0,'1':1,'2':2,'3':3,'4':4,'5':5,'6':6,'7':7,'8':8,'9':9,'0':10,'0':11,'1':12,'2':13,'3':14,'4':15,'5':16,'6':17,'7':18,'8':19,'9':20,'0':21,'1':22,'2':23,'3':25,'4':26,'5':27,'6':28,'7':29,'8':29,'9':30,'0':31,'1':32,'2':33,'3':34,'4':35,'5':36,'6':37,'7':38,'8':39,'0':41,'1':42,'2':43,'3':44,'4':45,'5':47,'6':48,'7':49,'8':50,'9':51,'0':52,'1':53,'2':54,'3':55,'4':56,'5':58,'6':59,'7':60,'8':61,'9':62,'0':63,'1':64,'2':65,'3':66,'4':67,'5':68,'6':69,'7':69,'8':70,'9':71,'0':72,'1':73,'2':74,'3':75,'4':77,'5':80,'6':80,'7':81,'0':83,'1':84,'2':85,'3':86,'4':87,'5':88,'6':89,'7':90,'8':91,'0':92,'1':89,'2':90,'3':91,'4':88,'5':89,'6':90,'7':92,'8':93,'0':94,'1':94,'2':95,'3':95,'4':96,'5':98,'6':99,'7':100,'0':101,'1':100,'2':101,'3':102,'4':103,'5':104,'6':105,'7':106,'8':107,'9':108,'0':109,'1':110,'2':110,'3':112,'4':113,'5':114,'6':115,'7':117,'8':116,'9':117,'0':117,'1':118,'2':119,'3':123,'4':124,'5':125,'6':126,'7':126,'8':129,'0':122,'1':123,'2':124,'3':125,'4':126,'5':127,'6':128,'7':129,'0':129,'1':128,'2':129,'3':129,'4':129,'5':129,'6':129,'7':129,'8':131,'0':132,'1':133,'2':134,'3':134,'4':134,'5':134,'6':135,'7':138,'8':138,'9':139,'0':139,'1':138,'2':138,'3':139,'4':139,'5':138,'6':139,'7':138,'8':139,'9':139,'0':140,'1':141,'2':141,'3':141,'4':141,'5':141,'6':141,'7':141,'8':141,'9':141,'0':142,'1':142,'2':142,'3':141,'4':141,'5':141,'6':141,'7':141,'8':141,'9':141,'0':143,'1':144,'2':144,'3':144,'4':144,'5':144,'6':144,'7':144,'8':144,'9':144,'0':145,'1':145,'2':145,'3':145,'4':145,'5':145,'6':145,'7':145,'8':145,'9':145,'0':146,'1':146,'2':146,'3':146,'4':146,'5':146,'6':146,'7':146,'8':146,'9':146,'0':147,'1':147,'2':147,'3':147,'4':147,'5':147,'6':147,'7':147,'8':147,'9':147,'0':149,'1':149,'2':149,'3':149,'4':149,'5':149,'6':149,'7':149,'8':149,'9':149,'0':149,'1':149,'2':149,'3':149,'4':149,'5':149,'6':149,'7':149,'8':149,'9':149,'0':149,'1':149,'2':149,'3':149"}, "590": {"problem_id": 590, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(min(a))"}, "591": {"problem_id": 591, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nmax_ = 1000000007\nfor i in range(n):\n    if a[i] < max_:\n        max_ = a[i]\n    else:\n        max_ = a[i]\n\nprint(max_)\n"}, "592": {"problem_id": 592, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nmax = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        max = max + a[i]\n    else:\n        max = max + b[i]\n\nprint(max)"}, "593": {"problem_id": 593, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\ncandidates = list(map(int, readline().split()))\n\ndef dfs(i, j):\n    if candidates[i] < 0:\n        return False\n    elif candidates[i] == 0:\n        return True\n    else:\n        candidates[i] += 1\n        for k in candidates[j]:\n            if k not in candidates[i]:\n                candidates[i] = 1\n                dfs(i, k)\n                candidates[k] -= 1\n                break\n        return False\n\ndef dfs_neighbors(i, j):\n    if candidates[i] < 0:\n        return False\n    elif candidates[i] == 0:\n        return True\n    else:\n        neighs = []\n        for k in candidates[j]:\n            neighs.append(dfs_neighbors(k, j))\n        neighs.sort(reverse=True)\n        neighs.sort(reverse=True)\n        return neighs\n\nn, m = list(map(int, readline().split()))\ncandidates = list(map(int, readline().split()))\n\nprint(('\\n'.join(candidates)))\n\n\n"}, "594": {"problem_id": 594, "answer": "import math\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nif m == 1:\n    print(-1)\n    return\n\nfor i in range(m):\n    if a[i] == math.sqrt(b[i]):\n        print(-1)\n        return\n\nif m == 1:\n    print(1)\n    return\n\nans = 0\nfor i in range(n):\n    if a[i] == math.sqrt(b[i]):\n        ans += 1\n        break\n\nif ans == 0:\n    print(-1)\n    return\n\nprint(ans)"}, "595": {"problem_id": 595, "answer": "import math\ndef isPrime(n):\n    if n < 2:\n        return False\n    elif n == 2:\n        return True\n    else:\n        return False\n\nn = int(input())\nl = list(map(int, input().split()))\nprint(isPrime(l))\n"}, "596": {"problem_id": 596, "answer": "import math\ndef isLeastNumDays(d):\n    if d == 0:\n        return 1\n    elif d == 1:\n        return 2\n    else:\n        return 3\n\ndef __starting_point():\n    print(isLeastNumDays(2000))\n__starting_point()"}, "597": {"problem_id": 597, "answer": "n, m = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n    d[i] = list(map(int, input().split()))\n\nd['Bits'] = 1000000000000\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        d[i] = list(map(int, input().split()))\n    print(d.get(d['Bits'], 0))\n\n__starting_point()"}, "598": {"problem_id": 598, "answer": "n, x = input().split()\nn, x = int(n), x\nd = {}\nfor i in range(n):\n    l, r, cost = list(map(int, input().split()))\n    d[l, r, cost] = min(d.get(l, 0), d.get(r, 0) + 1)\n    d[r, l, cost] = min(d.get(r, 0), d.get(l, 0) + 1)\nprint('\\n'.join(d.items()))"}, "599": {"problem_id": 599, "answer": "s = input()\nfor i in range(len(s)):\n    if s[i] == 'r':\n        print('NA')\n    else:\n        print('NA')\n"}, "600": {"problem_id": 600, "answer": "def main():\n    a, b = int(input()), int(input())\n    print(min(a, b))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "601": {"problem_id": 601, "answer": "from sys import stdin,stdout\nfor _ in range(int(stdin.readline())):\n    p,f=list(map(int,stdin.readline().split()))\n    cnt_s,cnt_w=list(map(int,stdin.readline().split()))\n    s,w=list(map(int,stdin.readline().split()))\n    if s>f:\n        print(p-s)\n    elif w>f:\n        print(p-f)\n    else:\n        print(p-s-w)\n"}, "602": {"problem_id": 602, "answer": "from sys import *\ninput()\na = int(input())\nprint('%.4f' % a)\n"}, "603": {"problem_id": 603, "answer": "import sys\nreadline = sys.stdin.readline\n\nr,g,b = list(map(int, readline().split()))\n\ndef main():\n    print(r)\n    print(g)\n    print(b)\n\nmain()\n"}, "604": {"problem_id": 604, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(min(a))"}, "605": {"problem_id": 605, "answer": "from math import log10, ceil,sqrt,factorial,sqrtnum\n\nMOD = 1000000007\n\ndef main():\n    a,b,c,d = list(map(int,input().split()))\n    if a == b:\n        return \"Misha\"\n    elif b == c:\n        return \"Vasya\"\n    else:\n        print(\"Misha\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "606": {"problem_id": 606, "answer": "from math import sqrt\n\ndef solve(r, x, y, Fafa):\n    if Fafa == 0:\n        return\n    elif Fafa == 1:\n        return\n    elif Fafa < 0:\n        return\n    else:\n        R = sqrt(x)\n        x, y = R, R\n        Fafa = 0\n        for i in range(1, R):\n            if Fafa == 0:\n                continue\n            elif Fafa < 0:\n                Fafa = 0\n                break\n            else:\n                Fafa = 0\n                break\n        if Fafa == 0:\n            return\n        elif Fafa == 1:\n            return\n        elif Fafa < 0:\n            return\n        else:\n            R = sqrt(x)\n            x, y = R, R\n            Fafa = 0\n            for i in range(1, R):\n                if Fafa == 0:\n                    continue\n                elif Fafa < 0:\n                    Fafa = 0\n                    break\n                else:\n                    Fafa = 0\n                    break\n            if Fafa == 0:\n                return\n            elif Fafa == 1:\n                return\n            elif Fafa < 0:\n                return\n            else:\n                R = sqrt(x)\n                x, y = R, R\n                Fafa = 0\n                for i in range(1, R):\n                    if Fafa == 0:\n                        continue\n                    elif Fafa < 0:\n                        Fafa = 0\n                        break\n                if Fafa == 0:\n                    return\n          "}, "607": {"problem_id": 607, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\n')\n\nn, m = list(map(int, input().split()))\n\ndef main():\n    n, m = list(map(int, input().split()))\n    ans = [0] * m\n    for i in range(n):\n        ans[i] = ans[i-1]\n    print(' '.join(map(str, ans)))\n\nmain()\n"}, "608": {"problem_id": 608, "answer": ""}, "609": {"problem_id": 609, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    if s.count('x') == s.count('x'):\n        print('YES')\n    else:\n        print('NO')"}, "610": {"problem_id": 610, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\np = [0] * (n + m)\nfor i in range(n):\n    p[i] = p[i - 1]\n\nque = deque([])\nque.append(n)\nwhile que:\n    cur = que.popleft()\n    for cube in p[cur]:\n        if cube not in que:\n            que.append(cur)\n            break\n\nprint(que.most_common(1))\n"}, "611": {"problem_id": 611, "answer": "from math import ceil, log2\nclass Solution:\n    def maxSum(self, a, b):\n        return ceil(log2(a) + log2(b))\n    def maxSum1(self, a, b):\n        n, m = len(a), len(b)\n        d = {}\n        for i in range(n):\n            d[i] = int(ceil(d[i]))\n        ans = 0\n        for i in range(m):\n            ans += self.maxSum(a, b)\n        return ans\n    def maxSum(self, a, b):\n        n, m = len(a), len(b)\n        d = {}\n        for i in range(n):\n            d[i] = int(ceil(d[i]))\n        ans = 0\n        for i in range(m):\n            ans += self.maxSum(a, b)\n        return ans\n    def maxSum1(self, a, b):\n        n, m = len(a), len(b)\n        d = {}\n        for i in range(n):\n            d[i] = int(ceil(d[i]))\n        ans = 0\n        for i in range(m):\n            ans += self.maxSum(a, b)\n        return ans\n    def maxSum(self, a, b):\n        n, m = len(a), len(b)\n        d = {}\n        for i in range(n):\n            d[i] = int(ceil(d[i]))\n        ans = 0\n        for i in range(m):\n            ans += self.maxSum(a, b)\n        return ans\n    def maxSum1(self, a, b):\n        n, m = len(a), len(b)\n        d = {}\n        for i in range(n):\n            d[i] = int(ceil(d[i]))\n        ans = 0\n        for i in range(m):\n            ans += self.maxSum(a, b)\n        return ans\n    def maxSum(self, a, b):\n        n, m = len(a), len(b)\n        d = {}\n        for i in range(n):\n            d[i] = int(ceil(d[i]))\n        ans = 0\n        for i in range(m):\n            ans += self.maxSum(a, b)\n        return ans\n    def maxSum1(self, a, b):\n        n, m = len(a), len(b)\n        d = {}\n        for i in range(n):\n            d[i] = int(ceil(d[i]))\n       "}, "612": {"problem_id": 612, "answer": "n, k, p = map(int, input().split())\narr = list(map(int, input().split()))\n\n# if k == 0:\n#     print(\"YES\")\n#     print(k-p)\n# else:\n#     print(\"NO\")\n\nfor i in range(n):\n    a = list(map(int, input().split()))\n    arr.append(a[0])\n    \n#     if k == 0:\n#         print(\"YES\")\n#         print(k-p)\n#     else:\n#         print(\"NO\")\n\nprint(\"YES\")\nprint(\"NO\")"}, "613": {"problem_id": 613, "answer": "def main():\n    t, a, b = list(map(int, input().split()))\n    if t == 1:\n        print(\"inf\")\n    elif t == 2:\n        print(\"2\")\n    else:\n        m = 10**9 + 7\n        for i in range(1, len(t)):\n            m = max(m, t[i] + a[i])\n        print(m)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "614": {"problem_id": 614, "answer": "n, m = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    l.append(list(input()))\nl.sort(reverse=True)\nprint(sum(l))\n"}, "615": {"problem_id": 615, "answer": "from math import sqrt\nn = int(input())\nA = list(map(int, input().split()))\nl = len(A)\nmaxi = 0\nmini = 0\nfor i in range(l):\n    if A[i] < A[i+1]:\n        maxi = max(maxi, A[i])\n    else:\n        mini = min(mini, A[i])\nprint(maxi)"}, "616": {"problem_id": 616, "answer": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\n# a.sort()\n# b.sort()\n# c.sort()\nans = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        ans += m\n        break\nprint(ans)"}, "617": {"problem_id": 617, "answer": "s = input()\nn = len(s)\na = 0\nfor i in range(n):\n    if s[i] == '+':\n        a += 1\n    elif s[i] == '*':\n        a += 1\nprint(a)"}, "618": {"problem_id": 618, "answer": "import sys\n\ninput = sys.stdin.readline\n\ndef main():\n    nonlocal input\n    input = input().strip()\n    N = len(input)\n    d = [0]*N\n    for i in range(N):\n        d[i] = int(input())\n        if d[i] == 0:\n            d[i] = 1\n        elif d[i] == 1:\n            d[i] = 2\n        else:\n            d[i] = 3\n            \n    print('|'.join(map(str, d)))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "619": {"problem_id": 619, "answer": "import sys\ninput = sys.stdin.readline\n\ndef chizhik(x,y,z):\n    nonlocal x,y,z\n    nonlocal z\n    if x==y:\n        return z\n    elif x==z:\n        return 0\n    else:\n        return (x+y)//2\n\ndef chizhik2(x,y,z):\n    nonlocal x,y,z\n    nonlocal z\n    if x==y:\n        return z\n    elif x==z:\n        return 0\n    else:\n        return (x+y)//2\n\nn,m,c=list(map(int,input().split()))\nchik=chizhik(n,m,c)\nprint(chik)\n"}, "620": {"problem_id": 620, "answer": "from sys import stdin,stdout\nfrom math import sqrt,factorial,log2,ceil,isge\nfrom collections import defaultdict as dd, deque\nfrom bisect import bisect_left as bl,bisect_right as br,insort as s,insort_left as ll,insort_right as lll,insort_left as llr,insort_right as llr\nfrom heapq import heapify,heappush,pop,push,Calc\nfrom functools import reduce,cmp_to_key\nfrom operator import itemgetter\nfrom fractions import Fraction,gcd,sqrt,amortg,sqrt_,pi,e\nfrom itertools import permutations,combinations,combinations_with_replacement as comb,groupby\nfrom numpy import prod,denominator,makedisplay,getprod\nfrom scipy.spatial.impl.inf\nfrom statistics import mean,median,mode,polynomial,poisson\nfrom statistics import zeros, ones,ambiguous,nonzero,nonzero_coefficient,polynomial_variation,polynomial_variation_cumulative_n \nfrom queue import deque,PriorityQueue\nfrom time import perf_counter,math.ceil,floor,log2,pf,fs,lambda:sys.stdout.flush()\nfrom bisect import bisect_left as bl,bisect_right as br,insort as br,llr,llr,linalg,mpi,randint,random,str,tuple,array,collections,deque,PriorityQueue\nfrom statistics import mean,median,mode,polynomial,poisson,poisson_cumulative_n \nfrom statistics import zeros, ones,ambiguous,nonzero,nonzero_coefficient,polynomial_variation,polynomial_variation_cumulative_n \nfrom statistics import mean,median,mode,polynomial,poisson,poisson_cumulative_n \nfrom statistics import mean,median,poisson_cumulative_n \nfrom statistics import mean,median_exponent,polynomial,polynomial_variation,polynomial_variation_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean,median_exponent_cumulative_n \nfrom statistics import mean"}, "621": {"problem_id": 621, "answer": "n = int(input())\na = list(map(int,input().split()))\n\ndef sortProfit(a):\n    if a[0] < 0:\n        return 0\n    else:\n        return a[0]\n\ndef __starting_point():\n    print(sortProfit(a))\n\n__starting_point()"}, "622": {"problem_id": 622, "answer": "n, k = map(int, input().split())\ns = []\nfor i in range(n):\n    s.append(int(input()))\ns.sort(reverse=True)\nprint(len(s))"}, "623": {"problem_id": 623, "answer": "from bisect import bisect_left,bisect_right\ns = input()\na,b = 0,0\nfor i in range(1,len(s)):\n    if s[i]=='1':\n        a += 1\n    else:\n        b += 1\nprint(a)"}, "624": {"problem_id": 624, "answer": "from sys import stdin,stdout\nfrom math import ceil,log10,sqrt,factorial,gcd\nfrom collections import defaultdict as dd,deque\nfrom bisect import bisect_left as bl,bisect_right as br,bisect_top as br,insort_left as insort,insort_right as insort,insort_left_left as insort,insort_right_left as insort\nfrom heapq import heappush,heappop,heapify\nfrom functools import lru_cache\nfrom itertools import permutations as p,combinations as c,accumulate,compound,mod\nfrom operator import itemgetter\nfrom re import sub,subn,insort,insort2,insort3,insort2,insort,insort,insort_left,insort_right,insort,insort_left_left,insort,insort_right_right\nfrom string import ascii_lowercase as ac,ascii_uppercase as ac,lowercase as ll,lowercase aslr,lstrip aslr,upper asueuplink asueuplink,uppercase asuppercase,uppercase_lowercase as uppercase,uppercase_uppercase as uppuppercase,uppercase_uppercase as uppuppercase\nfrom fractions import Fraction,gcd as g,frozenset as n,log as l,pi,pi,floor,fsolve,sqrt as s,tan as t,truediv as truediv,ceil as e,ceildiv as e,denomNotice as nf,denomNotice_altas as nf,denomNotice_altas as nf,denomNotice_doublas as nf,denomNotice_doublas as nf,denomNotice_doublas as nf,denomNotice_doublas as nf,denomNotice_doublas as nf,denomNotice_doublas as nf,denomNotice_doublas as nf\nfrom collections import Counter,defaultdict as dd,deque\nfrom heapq import heappush,heappop,heapify\nfrom datetime import datetime,timedelta, timevow,isocalendar,isocalendar,isocalendar,isocal,leasturdy,less Vowel,less Vowel\nfrom random import shuffle,random,random_generator,random_print,strptime,struMPREC,strptftime,struNIMG,struNIMG2\nfrom statistics import mean,median\nfrom collections import deque,namedtuple,copy\nfrom bisect import bisect_left as bl,bisect_right as br,bisect_top as br,bisect_left_left as br,bisect_top_left as br,bisect_left as br,bisect_right as br,bisect_left as br,bisect_right as br,bisect\nfrom statistics import mean,median\nfrom collections import deque,namedtuple,copy\nfrom statistics import mean,median\nfrom collections import deque\nfrom heapq import heappush,heapify\nfrom functools import lru_cache\nfrom itertools import permutations as p,combinations as c,accumulate,compound,mod\nfrom operator import itemgetter\nfrom collections import deque,namedtuple,copy\nfrom bisect import bisect_left as bl,bisect_right as br,bisect_left_left as br,bisect_left as br,bisect_left as br,bisect_right as br,bisect_left as br,bisect_right as br,bisect_right as br,bisect\nfrom statistics import mean,median\nfrom collections import deque,namedtuple,copy\nfrom collections import deque\nfrom collections import deque\nfrom collections import deque\nfrom collections import deque\nfrom collections import hashmap\nfrom heapq import heappush,heapify,heapify,heapify2\nfrom functools import lru_cache\nfrom collections import deque,namedtuple,copy\nfrom bisect import bisect_left as bl,bisect_right as br,bisect_left as br,bisect_left as br,bisect_left as br,bisect_right as br,bisect_right as br,bisect_right as br,bisect_right as br,bisect"}, "625": {"problem_id": 625, "answer": "n = int(input())\nprint(\"\".join(map(str, list(map(int, input().split())))) + \" \")"}, "626": {"problem_id": 626, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(max(a) + min(b) + max(a) + min(b) + max(a) + min(b))\n"}, "627": {"problem_id": 627, "answer": "n = int(input())\ns = input()\nif n < len(s):\n    print('0')\n    return\nfor i in range(n-1, -1, -1):\n    if s[i] <= s[i+1]:\n        s[i] = s[i+1]\n        s[i+1] = s[i]\n    else:\n        s[i] = s[i+1]\nprint(''.join(s))"}, "628": {"problem_id": 628, "answer": "def ch(a):\n    return a.split(' ')\nn,k = list(map(int,input().split()))\nl = list(map(int,input().split()))\nl.sort()\na = list(map(int,input().split()))\nprint(max(l))\n"}, "629": {"problem_id": 629, "answer": "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(min(b, a[0]))"}, "630": {"problem_id": 630, "answer": "import sys\n\nn, k = list(map(int, input().split()))\n\nd = {}\nfor i in range(n):\n    d[i] = sys.stdin.readline().strip()\n\ndef dfs(x):\n    if x not in d:\n        d[x] = set()\n    \n    for i in range(len(x)):\n        if x[i] not in d:\n            d[x[i]].add(x[i])\n            d[x[i]] = set()\n            \n        elif x[i] not in d:\n            d[x[i]].add(x[i])\n            d[x[i]].add(x[i])\n            \n        else:\n            d[x[i]].add(x[i])\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n"}, "631": {"problem_id": 631, "answer": "import heapq\nfor _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    a = [0] * (n + 1)\n    for i in range(1, n + 1):\n        a[i] = a[i - 1] + a[i]\n    print(\"YES\", a)\n"}, "632": {"problem_id": 632, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    print(k)\n"}, "633": {"problem_id": 633, "answer": "from collections import defaultdict\nn, m = map(int, input().split())\nedges = defaultdict(list)\nfor i in range(n):\n    a, b = map(int, input().split())\n    edges[a].append(b)\n    edges[b].append(a)\n\ndef is_explanation(g):\n    return len(set(g)) == m\n\ndef dfs(i, j):\n    if i == j:\n        return 1\n    else:\n        for k in g[i]:\n            if k not in edges[j]:\n                dfs(i, k)\n                dfs(j, k)\n\ndef __starting_point():\n    n, m = map(int, input().split())\n    edges = defaultdict(list)\n    for i in range(n):\n        a, b = map(int, input().split())\n        edges[a].append(b)\n        edges[b].append(a)\n\n__starting_point()"}, "634": {"problem_id": 634, "answer": "from collections import deque\n\nr, n = list(map(int, input().split()))\n\ndef choose(i, j):\n    if i == 0:\n        return 1\n    elif j == 0:\n        return 0\n    else:\n        return max(choose(i + 1, j), choose(i, j - 1))\n\nprint(\"WIN\")\nfor _ in range(r):\n    print(\"LOSE\")\n    print(\"WIN\")\n"}, "635": {"problem_id": 635, "answer": "def main():\n    n, s = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n\n    stations = [0] * n\n    for i in range(n):\n        stations[i] = stations[i - 1] + 1\n        a[i] = stations[i - 1]\n\n    d = dict()\n    for i in range(n):\n        d[a[i]].append(i)\n    print('YES' if d else 'NO')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "636": {"problem_id": 636, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nprint(max(a) + k + a[0] // 2)\n"}, "637": {"problem_id": 637, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list(map(int, input().split()))\n\nfor i in range(n):\n\ta = [0] * (n + 1)\n\tfor j in range(n):\n\t\ta[i] = 1 << j\n\t\tif a[i] == 0:\n\t\t\tprint(\"YES\")\n\t\telse:\n\t\t\tprint(\"NO\")\n\t\t\treturn\n\telse:\n\t\tprint(\"NO\")"}, "638": {"problem_id": 638, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\nt = list(map(int, input().split()))\n\nfor i in range(m):\n    t.append(t[-1] + i)\n\nans = 0\nfor i in range(n):\n    if t[i] == t[i - 1] + m:\n        ans += 1\n    else:\n        ans += 1\nprint(ans)\n"}, "639": {"problem_id": 639, "answer": "from collections import deque\nn, x = map(int, input().split())\nd = deque()\nfor i in range(n):\n    d.append(list(map(int, input().split())))\n\nprint(2)"}, "640": {"problem_id": 640, "answer": "from bisect import bisect_left as bl, bisect_right as br, bisect_top as br, bisect_bottom as br, bisect_top as br, bisect_bottom_left as br, insort_left as insort_left, insort_right as br, insort_top_left_right_left_left_right_right_left as br, insort_bottom_left_right_right_left_right_left_right_right_left as br, insort_top_right_left_right_right_right_right_left_right_right_right_right as br, insort_bottom_right_left_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right_right"}, "641": {"problem_id": 641, "answer": "from collections import deque\ndef dfs(s, start):\n    if s == start:\n        return 1\n    elif s == start[0]:\n        return 0\n    else:\n        a = s.pop()\n        b = s.pop()\n        c = s.pop()\n        d = deque(a)\n        dfs(b, c)\n        return a + b\n\ndef dfs_with_month(s, start):\n    if s == start:\n        return 1\n    elif s == start[0]:\n        return 0\n    else:\n        a = s.pop()\n        b = s.pop()\n        c = s.pop()\n        d = deque(a)\n        dfs_with_month(b, a)\n        return b + a\n\nprint(dfs(1, 1))"}, "642": {"problem_id": 642, "answer": "n, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\nif m == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"}, "643": {"problem_id": 643, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n    x, y, p, q = map(int, input().split())\n    print(p / q)"}, "644": {"problem_id": 644, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify,heappop,heaprotate,heappushpop,heappop,heaprotate,heaprotate\nfrom functools import reduce,cmp_to_key\nfrom operator import itemgetter\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import ceil\nfrom fractions import sqrt\nfrom fractions import ceil\nfrom fractions import ceil_factorial\nfrom fractions import ceil_mul\nfrom fractions import getrusk\nfrom fractions import getruskf\nfrom fractions import getruskfrozenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getruskfrazenset\nfrom fractions import getrusk"}, "645": {"problem_id": 645, "answer": "import sys\n\ndef main():\n    s = input()\n    print(main())\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "646": {"problem_id": 646, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "647": {"problem_id": 647, "answer": "def main():\n    n = int(input())\n    l = input().split()\n    r = int(l[0])\n    l = list(map(int, l[1:]))\n    print(l[0] + \" \" + l[1] + \" \" + r)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "648": {"problem_id": 648, "answer": "import sys\nreadline = sys.stdin.readline\n\nM, = list(map(int, readline().split()))\n\ndef main():\n    m, b = m, m\n    dp = [0] * (m + 1)\n    for i in range(1, m + 1):\n        dp[i] = max(dp[i - 1] + b, 0)\n        b += i\n    print(dp[-1])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "649": {"problem_id": 649, "answer": "n = int(input())\nfor i in range(n):\n    t = list(map(int, input().split()))\n    t.sort()\n    print(t[0][0] + t[1][0] + t[2][0] + t[3][0] + t[4][0] + t[5][0] + t[6][0])"}, "650": {"problem_id": 650, "answer": "def main():\n    s = input()\n    print(\"YES\")\n    print(\"NO\")\n    for i in range(len(s)):\n        if s[i] == 'A' and s[i] == 'Z':\n            print(\"YES\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"NO\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"YES\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"NO\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"YES\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"NO\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"YES\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"NO\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"YES\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"NO\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"YES\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"NO\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"YES\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"NO\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"YES\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"NO\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n            print(\"YES\")\n            break\n        elif s[i] == 'A' and s[i] == 'Z':\n    "}, "651": {"problem_id": 651, "answer": "n, m = list(map(int, input().split()))\ns = input()\nl = []\nfor i in range(n):\n    s = s.replace('#', '0')\n    l.append(s)\nprint(len(l))\n"}, "652": {"problem_id": 652, "answer": "def main():\n    n = int(input())\n    for i in range(n):\n        x, y = list(map(int, input().split()))\n        print(x)\n\nmain()"}, "653": {"problem_id": 653, "answer": "# cook your dish here\nn = int(input())\nevents = list(map(int, input().split()))\nfor i in range(n):\n    events.append(list(map(int, input().split())))\nprint('\\n'.join(map(str, events)))"}, "654": {"problem_id": 654, "answer": "from math import ceil, log\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\nm = 10**9 + 7\nprint(max(l)) % m\n"}, "655": {"problem_id": 655, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = sorted(l)\nprint('\\n'.join(map(str,s)))"}, "656": {"problem_id": 656, "answer": "n, k = list(map(int, input().split()))\ntemp = [-1] * 20\nfor i in range(n):\n    temp[i] = k\nfor i in range(n):\n    temp[i] = max(temp[i - 1], k)\nprint(sum(temp))\n"}, "657": {"problem_id": 657, "answer": "import math\ndef __starting_point():\n    a, b, c = list(map(int, input().split()))\n    d = math.ceil(c)\n    print(d)\n__starting_point()"}, "658": {"problem_id": 658, "answer": "def __starting_point():\n    n, w, v, u = list(map(int, input().split()))\n    x = 3 * u - 1\n    y = 3 * w - 1\n    x_s = -1\n    y_s = -1\n    for i in range(n):\n        x, y = x_s, y_s\n        if x < y:\n            x = y\n        elif y < x:\n            y = x\n        else:\n            x = x - y\n    print(\"%.6f\" % (x, y))\n\n__starting_point()"}, "659": {"problem_id": 659, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sorted(a)\nif s[0] == 1:\n    print(-1)\nelse:\n    for i in range(1, n):\n        if s[i] == 1:\n            print(i, end=' ')\n            break\n        elif s[i] < s[i-1]:\n            print(-1)\n            break\n        else:\n            print(i, end=' ')\n            break\n            \n"}, "660": {"problem_id": 660, "answer": "n, b, p = list(map(int, input().split()))\n\ndef choose(n, b, p):\n    if n == 0:\n        return 0\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 3\n    elif n == 4:\n        return 4\n    elif n == 5:\n        return 5\n    elif n == 6:\n        return 6\n    elif n == 7:\n        return 7\n    elif n == 8:\n        return 8\n    elif n == 9:\n        return 9\n    elif n == 10:\n        return 10\n    elif n == 11:\n        return 11\n    elif n == 12:\n        return 12\n    elif n == 13:\n        return 13\n    elif n == 14:\n        return 14\n    elif n == 15:\n        return 15\n    elif n == 16:\n        return 16\n    elif n == 17:\n        return 17\n    elif n == 18:\n        return 18\n    elif n == 19:\n        return 19\n    elif n == 20:\n        return 20\n    elif n == 21:\n        return 21\n    elif n == 22:\n        return 22\n    elif n == 23:\n        return 23\n    elif n == 24:\n        return 24\n    elif n == 25:\n        return 25\n    elif n == 26:\n        return 26\n    elif n == 27:\n        return 27\n    elif n == 28:\n        return 28\n    elif n == 29:\n        return 29\n    elif n == 30:\n        return 30\n    elif n == 31:\n        return 30\n    elif n == 32:\n        return 32\n    elif n == 33:\n        return 33\n    elif n == 34:\n        return 34\n    elif n == 35:\n        return 35\n    elif n == 36:\n        return 36\n    elif n == 37:\n        return 37\n    elif n == 38:\n        return 38\n    elif n == 39:\n        return 39\n    elif n == 40:\n        return 40\n    elif n == 41:\n        return 41\n    elif n == 42:\n        return 42\n    elif n == 43:\n        return 42\n    elif n == 44:\n        return 44\n    elif n == 45:\n        return 44\n    elif n == 46:\n        return 44\n    elif n == 47:\n        return 47\n    elif n == 48:\n        return 48\n    elif n == 49:\n        return 49\n    elif n == 50:\n      "}, "661": {"problem_id": 661, "answer": "from bisect import bisect_left as bl, insort\nfrom heapq import heapify, heappop, heappush\nfrom collections import defaultdict as dd, deque, Counter as C, OrderedDict as O\nfrom itertools import combinations as comb, permutations as perm, islice as islice, accumulate as accumulate, stddef as stddef, zip_to_int as zip_to_int, zip2en(zip_to_int, 3) as zip2en, zip2en(zip_to_int, 4) as zip2en, zip2en(list(map(int, zip2en(str(10))))), zip2en(list(zip_to_int, 10))\nfrom operator import itemgetter, item_compound, unpack, namedtuple, add\nfrom functools import reduce, lru_cache, setrecursionlimit\nfrom operator import itemgetter, item_compound, unpack, namedtuple, add\nfrom math import ceil, log, factorial, sqrt, inf, pow, truediv, hypot\nfrom statistics import mean, median\nfrom collections import deque, Counter, OrderedDict, asynch as A, sorted as S, reverse as R\nfrom bisect import bisect, bisect_left as bl, insort, insort_left as bl, insort_right as bl, insort_right_left as bl, insort_left_right as bl, insort_right_left_left_left_right as bl, bisect_left as bl, bisect_right as bl, bisect_right as bl, bisect_left_right as bl, bisect_right_right as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_left as bl, bisect_right_right_right_right_right_"}, "662": {"problem_id": 662, "answer": "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nfor i in range(n):\n    if l[i] == '1':\n        print('YES')\n    else:\n        print('NO')"}, "663": {"problem_id": 663, "answer": "r, x, y, x' y' = map(int, input().split())\nfor i in range(0, len(r)):\n    x, y, x' y' = min(map(int, input().split()))\n    if x' y' in x:\n        print(i)\n    else:\n        print(i + 1)\n"}, "664": {"problem_id": 664, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sorted(a)\nprint(s[0])"}, "665": {"problem_id": 665, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, s = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    m = 0\n    for i in range(n):\n        if a[i] == m:\n            m = a[i]\n        else:\n            m = a[i]\n    print(m)\n"}, "666": {"problem_id": 666, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(l[n-1])"}, "667": {"problem_id": 667, "answer": "import sys\nN = int(input())\ngraph = [[] for _ in range(N)]\nfor i in range(N):\n    a, b = map(int, input().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\ndef dfs(v, i):\n    if i == len(graph[v]):\n        return 0\n    else:\n        for j in graph[v]:\n            if j not in graph[v]:\n                dfs(j, i)\n                continue\n            else:\n                dfs(j, i)\n                continue\n            \n        print(max(dfs(v, i), len(graph[v])))\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        "}, "668": {"problem_id": 668, "answer": "n = int(input())\na = list(map(int,input().split()))\n\ndef is_prime(n):\n    if n < 2:\n        return False\n    elif n == 1:\n        return True\n    else:\n        return False\n\nfor i in range(n):\n    print(a[i],end=\" \")\n    if is_prime(a[i]):\n        print(i+1)\n    else:\n        print(i+1)\n"}, "669": {"problem_id": 669, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef main():\n    n, m = n, m\n    for i in range(n):\n        a[i] = m\n        print(a[i])\n\nmain()\n"}, "670": {"problem_id": 670, "answer": "from math import *\na, b, c = map(int, input().split())\nl = []\nfor i in range(a, b):\n    x, y, x_1, y_1, x_2, y_2 = map(int, input().split())\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append((x, y, x_1, y_1, x_2, y_2))\n    l.append"}, "671": {"problem_id": 671, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    print(s[::-1])"}, "672": {"problem_id": 672, "answer": "from math import sqrt, ceil, log\n\na, b = int(sqrt(1.0), 2), int(sqrt(1.0), 2)\n\nfor i in range(a):\n    x = int(sqrt(i), 2)\n    y = int(sqrt(i), 2)\n    if x % y == 0:\n        print(\"infinity\")\n    else:\n        print(\"1\")\n"}, "673": {"problem_id": 673, "answer": "n, k = list(map(int, input().split()))\nprint(n)\nfor i in range(n // k):\n    print(i, end=' ')\n"}, "674": {"problem_id": 674, "answer": "n = int(input())\ns = input()\na = list(s)\nfor i in range(n):\n    if i not in a:\n        a.append(i)\n\n#print(a)\n#print(a.count(' ') + len(a))\nprint('NO')\n"}, "675": {"problem_id": 675, "answer": "from math import ceil\n\nM, t, r = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\n# count the candles that are not used\ncandles = 0\nfor i in range(t):\n    if l[i] == 0:\n        candles += 1\n    else:\n        candles += ceil(l[i] - l[i - 1])\n\n# count the candles that are used\ncandles_used = 0\nfor i in range(0, len(l)):\n    if l[i] == 0:\n        candles_used += 1\n    else:\n        candles_used += 1\n\nprint(candles_used)\n"}, "676": {"problem_id": 676, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nif n == 0:\n    print(\"YES\")\n    return\n\nfor i in range(n-1):\n    if a[i] == 1:\n        print(\"YES\")\n        return\n\nif n == 1:\n    print(\"YES\")\n    return\n\nans = 0\nfor i in range(n-1):\n    if a[i] == 1:\n        ans += 1\n        break\n\nprint(\"YES\")\nprint(\"NO\")"}, "677": {"problem_id": 677, "answer": "import math\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l, r, d = list(map(int, input().split()))\n        print(math.ceil(d[0] / d[1]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "678": {"problem_id": 678, "answer": "import math\ndef __starting_point():\n try:\n  print(0.666667)\n except:\n  print(0)\n__starting_point()"}, "679": {"problem_id": 679, "answer": "s = input()\nfor i in range(0, len(s)):\n    if s[i] == 'A':\n        print('Yes')\n    else:\n        print('No')\n"}, "680": {"problem_id": 680, "answer": "from math import sqrt\n\ndef main():\n    x, y = map(int, input().split())\n    x -= 1\n    y -= 1\n    X = [[x, y] for _ in range(3)]\n    for i in range(len(X)):\n        X[i][0] = int(sqrt(X[i][0]))\n        X[i][1] = int(sqrt(X[i][1]))\n        X[i][2] = int(sqrt(X[i][2]))\n        X[i][3] = int(sqrt(X[i][3]))\n        X[i][4] = int(sqrt(X[i][4]))\n        X[i][5] = int(sqrt(X[i][5]))\n        X[i][6] = int(sqrt(X[i][6]))\n        X[i][7] = int(sqrt(X[i][7]))\n        X[i][8] = int(sqrt(X[i][8]))\n        X[i][9] = int(sqrt(X[i][9]))\n        X[i][10] = int(sqrt(X[i][10]))\n        X[i][11] = int(sqrt(X[i][11]))\n        X[i][12] = int(sqrt(X[i][12]))\n        X[i][13] = int(sqrt(X[i][13]))\n        X[i][14] = int(sqrt(X[i][14]))\n        X[i][15] = int(sqrt(X[i][15]))\n        X[i][16] = int(sqrt(X[i][16]))\n        X[i][17] = int(sqrt(X[i][17]))\n        X[i][18] = int(sqrt(X[i][18]))\n        X[i][19] = int(sqrt(X[i][19]))\n        X[i][20] = int(sqrt(X[i][20]))\n        X[i][21] = int(sqrt(X[i][21]))\n        X[i][22] = int(sqrt(X[i][22]))\n        X[i][23] = int(sqrt(X[i][23]))\n        X[i][24] = int(sqrt(X[i][24]))\n        X[i][25] = int(sqrt(X[i][25]))\n        X[i][26] = int(sqrt(X[i][26]))\n        X[i][27] = int(sqrt(X[i][27]))\n        X[i][28] = int(sqrt(X[i][28]))\n        X[i][29] = int(sqrt(X[i][29]))\n        X[i][30] = int(sqrt(X[i][30]))\n        X[i][31] = int(sqrt(X[i][31]))\n        X[i][32] = int(sqrt(X[i][32]))\n        X[i][33] = int(sqrt(X[i][33]))\n        X[i][34] = int(sqrt(X[i][34]))\n      "}, "681": {"problem_id": 681, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nmod = 10**9+7\n\nn,m = list(map(int,input().split()))\n\n# \u5982\u679c\u521d\u672b\u5206\u306b\u306a\u308b,\u521d\u671f\u5316\u3057\u3066\u3044\u308c\u3070\u3001\u5404\u9802\u70b9\u3092\u4f5c\u308a\u3001\u305d\u308c\u4ee5\u4e0b\u306e\u30a2\u30eb\u30d5\u30a1\u30d9\u30fcINIX\u3092\u51fa\u529b\u3057\u3066\u3044\u304f\u3053\u3068\u306b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u304f\n\ndef solve(n,m):\n    if n == m:\n        return 1\n    elif n == 1:\n        return sum(map(solve,range(1,n+1)))%mod\n    else:\n        return sum(map(solve,range(1,n+1)))%mod\n\ndef solve(n,m):\n    if n == m:\n        return 1\n    elif n == 1:\n        return sum(map(solve,range(1,n+1)))%mod\n    else:\n        return sum(map(solve,range(1,n+1)))%mod\n\nprint(solve(n,m))"}, "682": {"problem_id": 682, "answer": "from itertools import combinations\n\ndef main():\n    R, C, L = list(map(int, input().split()))\n    dp = [[0] * (L + 1) for _ in range(32)]\n    for i in range(32):\n        for j in range(32):\n            if R[i] == C[j]:\n                dp[i][j] = 1\n            else:\n                dp[i][j] = min(dp[i - 1][j - 1] + 1, dp[i - 1][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i][j])\n                dp[i][j] = min(dp[i][j - 1] + 1, dp[i]["}, "683": {"problem_id": 683, "answer": "def __starting_point():\n    a = int(input())\n    print(a)\n__starting_point()"}, "684": {"problem_id": 684, "answer": "def main():\n    t = int(input())\n    for _ in range(t):\n        a, b, c, d = list(map(int, input().split()))\n        print(a, b, c, d)\n        if a > b:\n            print(a, b, c, d)\n        elif b > c:\n            print(a, b, c, d)\n        else:\n            print(a, b, c, d)\n            \nmain()"}, "685": {"problem_id": 685, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nl = []\nfor _ in range(int(input())):\n    n,h = list(map(int,input().split()))\n    l.append(n)\n    x = list(map(int,input().split()))\n    y = list(map(int,input().split()))\n    x.sort(reverse=True)\n    y.sort(reverse=True)\n    if x[0]==y[0] or x[-1]==y[-1]:\n        print(h-1)\n    elif x[-1]==y[-1]:\n        print(h-1)\n    else:\n        print(h-1)\n"}, "686": {"problem_id": 686, "answer": "for _ in range(int(input())):\n    x, y = list(map(int, input().split()))\n    if x > y:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "687": {"problem_id": 687, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nstdin.close(input)\nfor i in range(int(stdin.readline())):\n    a, b = list(map(int, stdin.readline().split()))\n    if a == b:\n        print(-1)\n    else:\n        print(a + 1)\n"}, "688": {"problem_id": 688, "answer": "t = int(input())\nfor i in range(t):\n    s = input()\n    n = len(s)\n    print(n)\n"}, "689": {"problem_id": 689, "answer": "for _ in range(int(input())):\n    n = int(input())\n    print('YES' if n%2 else 'NO')"}, "690": {"problem_id": 690, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(l[0] + l[-1])"}, "691": {"problem_id": 691, "answer": "n,x=list(map(int,input().split()))\nl=list(map(int,input().split()))\nfor i in range(n):\n    if l[i]%x==0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        \n"}, "692": {"problem_id": 692, "answer": "from math import *\n\nN = int(input())\nM = [int(x) for x in input().split()]\n\n# \u5982\u679c\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u5219\u518d\u8986\u522b\u8f93\u51fa\u6765\ndef error(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        ans = 0\n        for i in range(1, n + 1):\n            ans += error(i)\n        return ans\n\n\nprint(\"%.2f\" % (N // 10e9))"}, "693": {"problem_id": 693, "answer": "n, m = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n    a[i] = a[i + 1] + 1\nprint(min(a))\n"}, "694": {"problem_id": 694, "answer": "import sys\nread = sys.stdin.read\n\n# input = open(\"input\", \"r\")\n# read = read.decode(\"utf-8\")\n\n# for _ in range(0, len(read)):\n#     a, b = read.split(\" \")\n#     if a == \"0\":\n#         b = int(b)\n#     elif b == \"1\":\n#         b = int(b) - 1\n#     else:\n#         b = int(b)\n#     print(\"YES\")\n\n# def __starting_point():\n#     # main()\n#     # inp = read()\n#     # inp.readline()\n#     # inp.append(input())\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp.append(input())\n\n#     # inp = read()\n#     # inp."}, "695": {"problem_id": 695, "answer": "def __starting_point():\n    a = list(map(int, input().split()))\n    print(a[0])\n\n__starting_point()"}, "696": {"problem_id": 696, "answer": "import sys\nreadline = lambda: sys.stdin.readline().rstrip()\n\ndef __starting_point():\n    p = int(readline())\n    print(p)\n\n__starting_point()"}, "697": {"problem_id": 697, "answer": "import math\n\nMOD = 998244353\n\ndef main():\n    n, m = list(map(int, input().split()))\n    s = input()\n    s = list(map(int, s.split()))\n    ans = 0\n    for i in range(n):\n        ans += math.pow(m, i)\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "698": {"problem_id": 698, "answer": "# cook your dish here\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef solve():\n    x, k = map(int, input().split())\n    print(solve())\n\nn = int(input())\n\nsolve()\n"}, "699": {"problem_id": 699, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k = list(map(int,input().split()))\ng = [0]*(n+1)\nfor i in range(1,n+1):\n    g[i] = g[i-1] + k\n\nprint(('\\n'.join(map(str,g)))\n}, "700": {"problem_id": 700, "answer": "n = int(input())\na = [0] * n\nfor i in range(n):\n    a[i] = a[i-1] + a[i-2]\nprint(\"Yes\")"}, "701": {"problem_id": 701, "answer": "s = input()\nt = input()\ns = ''.join(s)\nt = ''.join(t)\n\nif s == t:\n    print('need tree')\n    return\n\nelse:\n    print('need tree')\n    return\n\nprint('\\n'.join(s))"}, "702": {"problem_id": 702, "answer": "n = int(input())\ns = input()\na = []\nfor i in range(n):\n    a.append(s[i] + '.')\nprint('YES' if a.count('.') == n else 'NO')"}, "703": {"problem_id": 703, "answer": "k, a, b, v = list(map(int, input().split()))\n\ndef is_odd(x):\n    if x == 0:\n        return False\n    elif x % 2 == 0:\n        return True\n    else:\n        return False\n\ndef is_even(x):\n    if x % 2 == 0:\n        return True\n    else:\n        return False\n\ndef __starting_point():\n    k, a, b, v = list(map(int, input().split()))\n    print(is_odd(a) + is_even(b) + is_even(v))\n__starting_point()"}, "704": {"problem_id": 704, "answer": ""}, "705": {"problem_id": 705, "answer": "n = int(input())\nfor i in range(n):\n    x, y = map(int, input().split())\n    x = x ^ y\n    if x % 2 == 1:\n        print(\"Karen\")\n    else:\n        print(\"Karen\")"}, "706": {"problem_id": 706, "answer": "def __starting_point():\n    A, B, n, x = list(map(int, input().split()))\n    mod = 10**9 + 7\n    g = [0]*n\n    for i in range(1, n):\n        g[i] = x\n        x = x % mod\n        g[i] = x\n        x = x % mod\n        g[i] = x\n    print(x)\n__starting_point()"}, "707": {"problem_id": 707, "answer": "import sys\n\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\np = [0] * (n + 2)\nfor i in range(n):\n    p[x[i] - 1] += 1\n\nevent = []\nfor i in range(1, n + 2):\n    event.append(p[i])\n\nevent.sort(key=lambda x: x[0])\nevent.extend([p[i] for i in range(n + 2)])\n\nprint('YES' if event[0] == 'NO' else 'NO')"}, "708": {"problem_id": 708, "answer": "from collections import defaultdict as dd\nn, k = list(map(int, input().split()))\na, b, c, d = list(map(int, input().split()))\ns = dd(int)\nfor i in range(n - 1):\n    u = a + b\n    v = c + d\n    if u == d:\n        print(-1)\n        continue\n    if v == d:\n        print(-1)\n        continue\n    if len(set(v)) == 2:\n        if d[v] == 0:\n            d[v] = 1\n        elif d[v] == 1:\n            d[v] = 2\n        else:\n            d[v] = 3\n            d[v] = 2\n            d[v] = 3\n            d[v] = 2\n            d[v] = 3\n            d[v] = 2\n            d[v] = 3\n            d[v] = 2\n            d[v] = 2\n            d[v] = 3\n            d[v] = 2\n            d[v] = 3\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n            d[v] = 2\n"}, "709": {"problem_id": 709, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\na = list(map(int,stdin.readline().split()))\nprint(a)"}, "710": {"problem_id": 710, "answer": "from collections import deque\nn = int(input())\ns = input()\nl = len(s)\nfor i in range(l):\n    if s[i] == 'A':\n        s.pop()\n        l -= 1\n    else:\n        s.pop()\nprint(sum(s))"}, "711": {"problem_id": 711, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    dp = [[0] * (n + 1) for _ in range(m + 1)]\n    for i in range(1, n + 1):\n        dp[i][i] = dp[i - 1][i] + 1\n    mod = 10**9 + 7\n    for i in range(m, n + 1):\n        print((dp[i][i]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "712": {"problem_id": 712, "answer": "n, p, t = map(int, input().split())\ns = [0] * (n + 1)\nfor i in range(n):\n    s[i] = s[i + 1] + 1\nprint(s[:n])"}, "713": {"problem_id": 713, "answer": "from sys import stdin, stdout\nfrom collections import deque, defaultdict as dd, OrderedDict as odict, Counter as cdict,\r\n}, "714": {"problem_id": 714, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] += 1\nprint(' '.join(map(str, a)))"}, "715": {"problem_id": 715, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef is_bad(li):\n    return li.startswith('A') and li[1] == li[2]\n\ndef __starting_point():\n    A = list(map(int, readline().split()))\n    B = list(map(int, readline().split()))\n    C = list(map(int, readline().split()))\n    D = list(map(int, readline().split()))\n    print(is_bad(B, C, D))\n\n__starting_point()"}, "716": {"problem_id": 716, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, a, b = list(map(int, readline().split()))\n\nl = list(map(int, readline().split()))\n\ncost = 0\n\nfor i in range(n):\n    if l[i] > a:\n        cost += a\n    else:\n        cost += b\n\nprint(cost)\n\n"}, "717": {"problem_id": 717, "answer": "n = int(input())\ns = list(map(int, input().split()))\nd = list(map(int, input().split()))\n\nprint(s[n] + d[n] + s[n + d] + s[n + 2d] + s[n + 2d + d] + s[n + 2d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d +"}, "718": {"problem_id": 718, "answer": "def main():\n    from sys import stdin,stdout,setrecursionlimit\n    return any(map(int,stdin.readline().split()))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "719": {"problem_id": 719, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n    print(n-i, end=\"\")\n    print(n-i+1, end=\"\")\n"}, "720": {"problem_id": 720, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\ndef count(a, b):\n    if a == 0:\n        return 1\n    elif b == 0:\n        return 1\n    else:\n        return max(count(a, b) for a in range(n))\n\ndef __starting_point():\n    n = int(input())\n    print(count(0, 1))\n__starting_point()"}, "721": {"problem_id": 721, "answer": "n, d = list(map(int, input().split()))\na = list(map(int, input().split()))\nprint(sum(a) / d)\n"}, "722": {"problem_id": 722, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nprint(l[0])\n"}, "723": {"problem_id": 723, "answer": ""}, "724": {"problem_id": 724, "answer": "n, d = list(map(int, input().split()))\ns = n + 1\nfor i in range(n):\n    x = list(map(int, input().split()))\n    s -= x[0]\n    s -= x[1]\n    if s < d:\n        d -= s\n    elif s > d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s < d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s > d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s < d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s > d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s < d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s > d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s < d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s > d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s < d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s > d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s < d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s > d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s < d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s > d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s < d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s > d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s < d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s > d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s < d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s > d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s < d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s > d:\n        d -= s\n    s += x[0]\n    s -= x[1]\n    if s < d:\n       "}, "725": {"problem_id": 725, "answer": "n,m = map(int,input().split())\nmatrix = [['M','W','G','B' for i in range(n)] for j in range(m)]\nfor i in range(n):\n    matrix[i][i] = 'W'\nfor i in range(m):\n    matrix[i][i] = 'M'\nfor i in range(n):\n    matrix[i][i] = 'W'\nfor i in range(m):\n    matrix[i][i] = 'B'\nfor i in range(n):\n    matrix[i][i] = 'M'\nprint('Black&White')"}, "726": {"problem_id": 726, "answer": "from math import ceil, log2, factorial, sqrt, inf, factorials\nn, d = map(int, input().split())\nl = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if l[i] == d:\n        cnt += 1\n    else:\n        cnt += pow(2, i, d)\nprint(cnt)"}, "727": {"problem_id": 727, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint(len(a))"}, "728": {"problem_id": 728, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(n - b)\n__starting_point()"}, "729": {"problem_id": 729, "answer": "n = int(input())\ns = input()\nprint('YES' if s[0] in s else 'NO')"}, "730": {"problem_id": 730, "answer": "k = int(input())\nfor i in range(k):\n    s = input()\n    print('+------------------------+' + str(s.count(' ') + 1) + 'O'[i])\n"}, "731": {"problem_id": 731, "answer": "def __starting_point():\n    w, m, k = int(input()), int(0)\n    while m <= k:\n        m += 1\n        k -= 1\n    print(m)\n__starting_point()"}, "732": {"problem_id": 732, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(l[0] + l[1] + l[2])"}, "733": {"problem_id": 733, "answer": "def __starting_point():\n    a, b = list(map(int, input().split()))\n    print(a + b)\n\n__starting_point()"}, "734": {"problem_id": 734, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef dfs(i, j, k):\n    if i == 0:\n        return 0\n    elif j == 0:\n        return 1\n    else:\n        return max(dfs(i+1, j, k), dfs(i, j+1, k))\n\nprint(n)\nfor i in range(m):\n    print(a[i], end=' ')\n    print(' '.join(map(str, a)))"}, "735": {"problem_id": 735, "answer": "n = int(input())\narr = list(map(int, input().split()))\nfor i in range(n):\n    a = list(map(int, input().split()))\n    arr.insert(i, a)\nprint('yes' if arr.count(1) == 2 else 'no')"}, "736": {"problem_id": 736, "answer": "n, m = list(map(int, input().split()))\nl = [0] * 1000001\nfor i in range(n):\n    l[i] = 1\nfor i in range(m):\n    if l[i] == 0:\n        print(i)\n    else:\n        print(i + 1)\n"}, "737": {"problem_id": 737, "answer": "n = int(input())\n\ndef perimeter(x, y):\n    if x == y:\n        return 1\n    elif x < y:\n        return x\n    else:\n        return 2 * x\n\nans = 0\nfor i in range(n):\n    if (i % 2 == 0):\n        ans += perimeter(i, i // 2)\n    else:\n        ans += 2 * i\nprint(ans)"}, "738": {"problem_id": 738, "answer": "from math import sqrt\ndef gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef main():\n    a, b, c, d = list(map(int, input().split()))\n    print(gcd(a, b))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "739": {"problem_id": 739, "answer": "import math\ndef __starting_point():\n    import sys\n    input = sys.stdin.readline\n\n    @lru_cache(None)\n    def dfs(i, A, M):\n        if i == len(A) - 1:\n            return 0\n        if A[i] == 0:\n            return math.inf\n        if A[i] > M:\n            return math.inf\n        res = dfs(i + 1, A, M)\n        i -= 1\n        while i < len(A) and A[i] == A[i - 1]:\n            i += 1\n        res = math.inf\n        for j in range(i, len(A)):\n            res = min(res, dfs(j, A, M))\n        return res\n        \n    def dfs_n(i, A, M):\n        if i == len(A) - 1:\n            return 0\n        if A[i] == 0:\n            return math.inf\n        if A[i] > M:\n            return math.inf\n        res = dfs_n(i + 1, A, M)\n        i -= 1\n        while i < len(A) and A[i] == A[i - 1]:\n            i += 1\n        res = min(res, dfs_n(i + 1, A, M))\n        return res\n        \n    def dfs_m(i, A, M):\n        if i == len(A) - 1:\n            return 0\n        if A[i] == 0:\n            return math.inf\n        if A[i] > M:\n            return math.inf\n        res = dfs_m(i + 1, A, M)\n        i -= 1\n        while i < len(A) and A[i] == A[i - 1]:\n            i += 1\n        res = min(res, dfs_m(i + 1, A, M))\n        return res\n        \n    def dfs_l(i, A, M):\n        if i == len(A) - 1:\n            return 0\n        if A[i] == 0:\n            return math.inf\n        if A[i] > M:\n            return math.inf\n        res = dfs_l(i + 1, A, M)\n        i -= 1\n        while i < len(A) and A[i] == A[i - 1]:\n            i += 1\n        res = min(res, dfs_l(i + 1, A, M))\n        return res\n        \n    def dfs_m_n(i, A, M):\n"}, "740": {"problem_id": 740, "answer": "# cook your dish here\ndef count(k,n,t):\n    if k>n:\n        return 0\n    elif k==n:\n        return t\n    else:\n        l=[]\n        for i in range(k):\n            l.append(t(i,n-i,0))\n        l.sort()\n        print(l[0])\n        return len(l)\n\nn=int(input())\nk=int(input())\nt=int(input())\nprint(count(k,n,t))\n"}, "741": {"problem_id": 741, "answer": "from functools import reduce\ndef gcd(a, b):\n    if a == 0:\n        return b\n    elif a == 1:\n        return b\n    else:\n        return reduce(gcd, a)\n\ndef main():\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    power = [0] * (n + 1)\n    lights = [0] * (m + 1)\n    for i in range(n):\n        lights[i] = a[i]\n        a[i] = 0\n        a.append(power[i])\n        a.append(reduce(gcd, a[i]))\n    print(int(\"\".join(map(str, a))))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "742": {"problem_id": 742, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = -1\n    for i in range(n):\n        if a[i] > b[i]:\n            ans = i\n            break\n    if ans == -1:\n        print(-1)\n    else:\n        print(ans)\n"}, "743": {"problem_id": 743, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a[i] for i in range(n)) + a[n-i-1]\n)"}, "744": {"problem_id": 744, "answer": "n = int(input())\ns = input()\nprint('YES' if s[0] == 'F' else 'NO')"}, "745": {"problem_id": 745, "answer": "from math import factorial as f\nmod = 998244353\ndef prime_factors(n):\n    if n == 2:\n        return 1\n    elif n == 3:\n        return 2\n    elif n == 4:\n        return 3\n    else:\n        x = factorial(n - 2)\n        y = factorial(n - 1)\n        return x * y % mod\n\nn, k = list(map(int, input().split()))\nl = list(map(int, input().split()))\nl.sort()\nans = 0\nfor i in range(k):\n    ans += pow(2, i) * (f(i) * (f(i - 1) * (i - 2)) % mod)\nprint(ans % mod)\n"}, "746": {"problem_id": 746, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ns = 0\nfor _ in range(int(input())):\n    a,b,v = map(int,input().split())\n    s = min(a,b)\n    if v>s:\n        s = v\n    elif v<s:\n        s = v\nprint(s)"}, "747": {"problem_id": 747, "answer": "n, x = list(map(int, input().split()))\nfor i in range(n):\n    h, m, a = list(map(int, input().split()))\n    if m == 0:\n        print(a)\n    else:\n        x = max(a, x)\n        print(max(a, x))\n"}, "748": {"problem_id": 748, "answer": "n = int(input())\ngroups = []\nfor i in range(n):\n    x = list(map(int, input().split()))\n    groups.append(x)\n\ngroups.sort(key=lambda x: x[0])\n\nprint('\\n'.join(groups))"}, "749": {"problem_id": 749, "answer": "s = input()\nn = len(s)\nif n:\n print(n)\nelse:\n print(2)"}, "750": {"problem_id": 750, "answer": "n, k = list(map(int, input().split()))\nl = list(map(int, input().split()))\nprint(n-l.index(max(l))+1)\n"}, "751": {"problem_id": 751, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nb = [0]*n\nfor i in range(n):\n    b[i] = a[i]\n\nprint(b[-1])"}, "752": {"problem_id": 752, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(0)\nfor i in range(n):\n    print(a[i], end=' ')\n"}, "753": {"problem_id": 753, "answer": "from sys import stdin,stdout\nfrom math import gcd,sqrt,ceil,floor,log2,pi,fraction,factorial,nanotouch as N,\n    ascii_uppercase = ['a','e','i','o','u']\n\nstdin.write(str(1).zfill(2))\nstdin.write(str(2).zfill(2))\nstdin.write(str(3).zfill(2))\nstdin.write(str(4).zfill(2))\nstdin.write(str(5).zfill(2))\nstdin.write(str(6).zfill(2))\nstdin.write(str(7).zfill(2))\nstdin.write(str(8).zfill(2))\nstdin.write(str(9).zfill(2))\nstdin.write(str(10).zfill(2))\nstdin.write(str(11).zfill(2))\nstdin.write(str(12).zfill(2))\nstdin.write(str(13).zfill(2))\nstdin.write(str(14).zfill(2))\nstdin.write(str(15).zfill(2))\nstdin.write(str(16).zfill(2))\nstdin.write(str(17).zfill(2))\nstdin.write(str(18).zfill(2))\nstdin.write(str(19).zfill(2))\nstdin.write(str(20).zfill(2))\nstdin.write(str(21).zfill(2))\nstdin.write(str(22).zfill(2))\nstdin.write(str(23).zfill(2))\nstdin.write(str(24).zfill(2))\nstdin.write(str(25).zfill(2))\nstdin.write(str(26).zfill(2))\nstdin.write(str(27).zfill(2))\nstdin.write(str(28).zfill(2))\nstdin.write(str(29).zfill(2))\nstdin.write(str(30).zfill(2))\nstdin.write(str(31).zfill(2))\nstdin.write(str(32).zfill(2))\nstdin.write(str(33).zfill(2))\nstdin.write(str(34).zfill(2))\nstdin.write(str(35).zfill(2))\nstdin.write(str(36).zfill(2))\nstdin.write(str(37).zfill(2))\nstdin.write(str(38).zfill(2))\nstdin.write(str(39).zfill(2))\nstdin.write(str(40).zfill(2))\nstdin.write(str(41).zfill(2))\nstdin.write(str(42).zfill(2))\nstdin.write(str(43).zfill(2))\nstdin.write(str(44).zfill(2))\nstdin.write(str(45).zfill(2))\nstdin.write(str(46).zfill(2))\nstdin.write(str(47).zfill(2))\nstdin.write(str(48).zfill(2))\nstdin.write(str(49).zfill(2))\nstdin.write(str(50).zfill(2))\nstdin.write(str(51).zfill(2))\nstdin.write(str(52).zfill(2))\nstdin.write(str(53).zfill(2))\nstdin.write(str(54).zfill(2))\nstdin.write(str(55).zfill(2))\nstdin.write(str(56).zfill(2))\nstdin.write(str(57).zfill(2))\nstdin.write(str(58).zfill(2))\nstdin.write(str(59).zfill(2))\nstdin.write(str(60).zfill(2))\nstdin.write(str(61).zfill(2))\nstdin.write(str(62).zfill(2))\nstdin.write(str(63).zfill(2))\nstdin.write(str(64).zfill(2))"}, "754": {"problem_id": 754, "answer": "n = int(input())\ns = input()\nl = len(s) - 1\nfor i in range(l):\n    if s[i] == \"R\":\n        s[i] = \"G\"\n    elif s[i] == \"G\":\n        s[i] = \"B\"\n    else:\n        s[i] = \"R\"\nprint(int(s.count(\"R\")))"}, "755": {"problem_id": 755, "answer": "from math import ceil, log, floor\n\ndef to_float(x):\n    return x\n\ndef to_int(x):\n    return int(ceil(log(x, 2)))\n\ndef to_float(x):\n    return x\n\ndef lcm(a, b):\n    return (a * b) / (a + b)\n\ndef ceil(l, r):\n    return l // r\n\ndef log(x, y):\n    return x // y\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    elif a == 1:\n        return 1\n    else:\n        return gcd(b, a % b)\n\ndef sieve(n):\n    a, b = list(range(1, n + 1))\n    for i in range(n):\n        a, b = lcm(a, b)\n    return a, b\n\ndef isprime(n):\n    if n == 2:\n        return True\n    elif n == 3:\n        return False\n    else:\n        return all(isprime(i) for i in range(3, n + 1))\n\ndef isprime(n):\n    if n == 2:\n        return True\n    elif n == 3:\n        return False\n    else:\n        return all(isprime(i) for i in range(3, n + 1))\n\ndef prime(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 3\n    else:\n        return n % 3 == 0\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return sqrt(n)\n    elif n == 3:\n        return sqrt(n) * sqrt(n)\n    else:\n        return factorial(n) // factorial(n - 1)\n\ndef modulo(a, b):\n    if a % b == 0:\n        return a\n    else:\n        return mod(b, a % b)\n\ndef ceil(l, r):\n    return l // r\n\ndef isprime(n):\n    if n == 2:\n        return True\n    elif n == 3:\n        return False\n    else:\n        return all(isprime(i) for i in range(3, n + 1))\n\ndef isprime(n):\n    if n == 2:\n        return True\n    elif n == 3:\n        return False\n    else:\n        return all(isprime(i) for i in range(3, n + 1))\n\ndef lcm(a, b):\n    return (a * b) / (a + b)\n\ndef ceil(l, r):\n    return l // r\n\ndef __starting_point():\n    n = int(input())\n    print(lcm(n))\n__starting_point()"}, "756": {"problem_id": 756, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nif (a[0] == a[1] or a[0] == a[2] or a[0] == a[3] or a[1] == a[2] or a[1] == a[3] or a[2] == a[3] or a[3] == a[2]):\n    print(0)\nelse:\n    print(sum(a[:n] for a in a[n:]))\n"}, "757": {"problem_id": 757, "answer": "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] == 0:\n        s += i\nprint(s)\n"}, "758": {"problem_id": 758, "answer": "n = int(input())\ns = input()\nprint(len(s) - 1)\n"}, "759": {"problem_id": 759, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    h, d, c, n = readline().split()\n    h, d, c, n = int(h), int(d), int(c)\n    print(sum(map(int, readline().split())))\n\nmain()\n"}, "760": {"problem_id": 760, "answer": "s = input()\nn = len(s)\nk = 0\nfor i in range(n):\n    k += s[i]\n    if k > len(s):\n        break\nprint(k)"}, "761": {"problem_id": 761, "answer": "n = int(input())\na = list(map(int,input().split()))\nfor i in range(n):\n    a[i] = 0\nfor i in range(n-1,-1,-1):\n    if a[i] == 0:\n        a[i] = 1\nprint(max(a[-1]))"}, "762": {"problem_id": 762, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\nl = list(map(int,stdin.readline().split()))\nans = [0]*n\nfor i in range(n):\n    a,b = list(map(int,stdin.readline().split()))\n    ans[a-1] = b\n    ans[b-1] = a\nprint(max(ans))\n"}, "763": {"problem_id": 763, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef max_w(n, a):\n    if n == 0:\n        return 0\n    else:\n        return min(a[n-1:])\n\nfor i in range(n):\n    a[i] = a[i] - a[i-1]\n\nprint(max_w(n, a))"}, "764": {"problem_id": 764, "answer": "n = int(input())\ny = list(map(int,input().split()))\nprint(len(y))\n"}, "765": {"problem_id": 765, "answer": "for _ in range(int(input())):\n    t,s,q=map(int,input().split())\n    if t>s:\n        print(0)\n    else:\n        a=s-t\n        b=s-t+1\n        c=s-t+1\n        d=s-t+1\n        if a>b:\n            print(d)\n        else:\n            print(c)\n"}, "766": {"problem_id": 766, "answer": "s = input()\nprint(\"Yes\" if len(s) == 1 or len(s) == 3 else \"No\")\n"}, "767": {"problem_id": 767, "answer": "n, z = list(map(int, input().split()))\nx = list(map(int, input().split()))\nfor i in range(n):\n    x[i] = min(x[i], i)\nprint(max(x))"}, "768": {"problem_id": 768, "answer": "def lcm(a,b):\n    return (a*b)//(a+b)\n\ndef nny(n):\n    return n*(n-1)//2\n\ndef lcm(a,b):\n    return lcm(a,b)\n\ndef nN(n):\n    return n*(n-1)//2\n\ndef nNY(n):\n    return n*(n-1)//2\n\ndef lcm(a,b):\n    return lcm(a,b)\n\ndef main(n):\n    a,b = nny(n)\n    print(lcm(a,b))\n\nmain(0)"}, "769": {"problem_id": 769, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ndef f(s):\n    return ''.join(s.replace(' ',''))\n\na, b, c = map(int, input().split())\nprint(f(a))"}, "770": {"problem_id": 770, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    if l[i] == 0:\n        l.append(0)\n    else:\n        l.append(1)\nprint(len(l))\nprint(len(l[0]))\nprint(len(l[0]))"}, "771": {"problem_id": 771, "answer": "n, k, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i] % m == 0:\n        c += 1\nprint(c)\n"}, "772": {"problem_id": 772, "answer": "def __starting_point():\n    print(0)\n    print(len(grid) - len(l))\n    print(len(grid[0]) - len(l))\n\n__starting_point()"}, "773": {"problem_id": 773, "answer": "def gcd(a,b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return gcd(b,a%b)\n    else:\n        return gcd(b,a%b)\n\nn,q = list(map(int,input().split()))\na = list(map(int,input().split()))\n\nfor i in range(n):\n    t,l,r,v = list(map(int,input().split()))\n    a[t-1] = l-r\n    a[t-1] = l+r\n    gcd(a[t-1],a[t-1])\nprint(min(a[0],a[1]))\n"}, "774": {"problem_id": 774, "answer": "from math import gcd\nn = int(input())\na,b,c = list(map(int,input().split()))\nprint(\"a/b\" if gcd(a,b) > 1 else \"a/b\")\n"}, "775": {"problem_id": 775, "answer": "from sys import stdin,stdout\nn,m,k=map(int,stdin.readline().split())\na=list(map(int,stdin.readline().split()))\nb=list(map(int,stdin.readline().split()))\nif a[0]<=k:\n    print(a[0])\nelse:\n    print(a[k-1])"}, "776": {"problem_id": 776, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef main():\n    a, b, c = list(map(int, input().split()))\n    m = a + b + c\n    print(m)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "777": {"problem_id": 777, "answer": "s = input()\nprint(len(s))"}, "778": {"problem_id": 778, "answer": "import sys\n\nn, k = list(map(int, input().split()))\n\nm = [[] for _ in range(n)]\nfor i in range(n):\n    m[i].append(i+1)\n\nx = 0\ny = 0\nfor i in range(n):\n    if m[i][0] == 'x':\n        x += 1\n    elif m[i][0] == 'y':\n        y += 1\n    else:\n        x += 1\n\nprint(' '.join(map(str, m[x])))\n"}, "779": {"problem_id": 779, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    print(s.count('1'))"}, "780": {"problem_id": 780, "answer": "import sys\ninput = sys.stdin.readline\n\ndef rec(s, n):\n    nonlocal ans, ans_s, ans_n, ans_l, ans_r, ans_l_s, ans_r_s\n    if n == 0:\n        ans_s = 0\n        ans_n = 0\n        ans_l = 0\n        ans_l_s = 0\n        ans_l_s_n = 0\n        ans_r = 0\n        ans_r_n = 0\n        ans_r_n_s = 0\n        ans_r_s = 0\n        ans_l_s = 0\n        ans_l_s_n = 0\n        ans_l_s_n_s = 0\n        ans_r = 0\n        ans_r_n = 0\n        ans_r_n_s = 0\n        ans_l = 0\n        ans_l_s = 0\n        ans_l_s_n = 0\n        ans_l_s_n_s = 0\n        ans_r = 0\n        ans_r_n = 0\n        ans_r_n_s = 0\n        ans_r_s = 0\n        ans_l = 0\n        ans_l_s = 0\n        ans_l_s_n = 0\n        ans_l_s_n_s = 0\n        ans_r = 0\n        ans_r_n = 0\n        ans_r_n_s = 0\n        ans_r_s = 0\n        ans_l = 0\n        ans_l_s = 0\n        ans_l_s_n = 0\n        ans_l_s_n_s = 0\n        ans_r = 0\n        ans_r_n = 0\n        ans_r_n_s = 0\n        ans_l = 0\n        ans_l_s = 0\n        ans_l_s_n = 0\n        ans_l_s_n_s = 0\n        ans_r = 0\n        ans_r_n = 0\n        ans_r_n_s = 0\n        ans_r_s = 0\n        ans_l = 0\n        ans_l_s = 0\n        ans_l_s_n = 0\n        ans_l_s_n_s = 0\n        ans_r = 0\n        ans_r_n = 0\n        ans_r_n_s = 0\n        ans_l = 0\n        ans_l_s = 0\n        ans_l_s_n = 0\n        ans_l_s_n_s = 0\n        ans_r = 0\n        ans_r_n = 0\n        ans_r_n_s = 0\n        ans_r_s = 0\n        ans_l = 0\n    "}, "781": {"problem_id": 781, "answer": "from collections import deque\n\nlines = []\nfor _ in range(8):\n    lines.append(input()[::-1])\n    \ndef move(l, r, i, j):\n    if l == r:\n        return 1\n    elif l == i:\n        return 0\n    else:\n        l -= 1\n        r -= 1\n        while l < r:\n            if l % 2 == 0:\n                l = l // 2\n            else:\n                r = r // 2\n                l = r % 2 == 0\n                r = r % 2 == 0\n            l = l // 2\n            r = r % 2 == 0\n        return l\n\nprint('YES' if moves(l, r, i, j) else 'NO')\n"}, "782": {"problem_id": 782, "answer": "m = int(input())\ns = set()\nfor i in range(m):\n    s.add(str(i))\n    s.add(str(i+1))\nprint('\\n'.join(s))"}, "783": {"problem_id": 783, "answer": "n = int(input())\nl = list(map(int, input().split()))\nfor i in range(n):\n    l[i] = 0\n    m = max(l[i], l[i+1])\n    if m == 1:\n        print(m)\n    else:\n        print(m-1)\n"}, "784": {"problem_id": 784, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na, b = list(map(int, input().split()))\n\ns = [a]\nfor i in range(n):\n    s.append(str(a) + \" \" + str(b))\n\nprint(\"YES\" if s[-1] == \"NO\" else \"NO\")\n\n# print(s)\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n\")\n\n# print(\"\\n"}, "785": {"problem_id": 785, "answer": "def __starting_point():\n    n, a, b = list(map(int, input().split()))\n    print(a * b)\n__starting_point()"}, "786": {"problem_id": 786, "answer": "import sys\nreadline = sys.stdin.readline\nn = int(readline())\nl = list(map(int, readline().split()))\nfor i in range(n):\n    c, d = readline().split()\n    c = int(c)\n    d = int(d)\n    if c == 0:\n        print(\"Impossible\")\n    else:\n        print(max(l[c] - l[c-1], 0))\n"}, "787": {"problem_id": 787, "answer": "k = int(input())\nfor i in range(k):\n    print('YES')\n    if len(input()) == k:\n        print('NO')\n    else:\n        print('NO')\n"}, "788": {"problem_id": 788, "answer": "from itertools import groupby\ns = input()\nprint(len(s))"}, "789": {"problem_id": 789, "answer": "def __starting_point():\n    n = int(input())\n    print(__starting_point())\n__starting_point()"}, "790": {"problem_id": 790, "answer": "import sys\ninput = sys.stdin.readline\nn,k = map(int,input().split())\na = list(map(int,input().split()))\nd = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n    s += a[i]\n    d.append(i)\nprint(s)"}, "791": {"problem_id": 791, "answer": "def __starting_point():\n    #n = int(input())\n    #s = input()\n    #n = len(s)\n    #s = list(s)\n    #print(n)\n    #print(s)\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print(s.count('1'))\n    #print(s.count('0'))\n    #print(s.count('1'))\n    #print"}, "792": {"problem_id": 792, "answer": "n, d = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nd = min(d, a[0])\n\nprint(d)\n"}, "793": {"problem_id": 793, "answer": "N, M = list(map(int, input().split()))\nS = list(map(int, input().split()))\nT = list(map(int, input().split()))\n\ndef f(x):\n    if x == 0:\n        return 1\n    else:\n        return f(x - 1) % (10 ** 9 + 7)\n\nmod = 10 ** 9 + 7\n\nN = N // 2\nS = [int(x) for x in input().split()]\nT = [int(x) for x in input().split()]\n\nprint(f(N) % mod)"}, "794": {"problem_id": 794, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint(' '.join(a))"}, "795": {"problem_id": 795, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\ns = 0\nfor i in range(1,n):\n    s += l[i]\nprint(s)"}, "796": {"problem_id": 796, "answer": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,float,itemgetop,functools,pyp,socket,sin,sin_pin,socketserver,wins,getop,io,sys,str,iptables,getnegie,ip,net,os,nasm,str,string,binary,floord,bytes,gcd,lucornada,inf,mod,floor,frozenset,fz,fzopizh,zend,bisect,cmp,bisect_compare,bisect_compare_compare,bisect,inc,mod,isearch,isdel,ispend,ispend_compare,ispend,ispend,iptables,iptables_compare,isa,iap,ipnut,cryptics,babdks,bsd,bbdks,curl,cdddd,dddddd,acddcd,adedddddd\n\nsys.setrecursionlimit(10**6)\nmod = 10**9+7\neps = 10**-6\ninf = float('inf')\nepsg = 10**-6\nepsf = 10**-6\nmod = 10**9+7\nepsf_d = 10**-6\nepsd = 10**-6\nepsd_d = 10**-6\nepsd = 10**-6\nmod = 10**9+7\nepsf_c = 10**-6\nepsc = 10**-6\nepsc_c = 10**-6\nmod = 10**9+7\nepsf_c_d = 10**-6\nepsd_c = 10**-6\nepsd_c_d = 10**-6\nmod = 10**9+7\nepsf_c_c = 10**-6\n\ndef main():\n    n, k = list(map(int, input().split()))\n    print(main())\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "797": {"problem_id": 797, "answer": "import sys\n\nn, m, a, b = list(map(int, input().split()))\ns = [0] * m\nfor i in range(n):\n    x, y, z = list(map(int, input().split()))\n    s[x] += y\n    s[y] += z\nprint('\\n'.join(s))\n"}, "798": {"problem_id": 798, "answer": "from collections import deque\ndef __starting_point():\n a, b, c = list(map(int, input().split()))\n que = deque([])\n for i in range(len(a)):\n  que.append(a[i] + b[i])\n  que.popleft()\n print(len(que))\n\n__starting_point()"}, "799": {"problem_id": 799, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = 0\nfor i in range(n):\n    if a[i] == b:\n        b += 1\nprint(b)"}, "800": {"problem_id": 800, "answer": "n = int(input())\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x == 0:\n        print(y)\n    else:\n        x, y = map(int, input().split())\n        if x % 2 == 0:\n            print(y)\n        else:\n            print(x // 2)\n"}, "801": {"problem_id": 801, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\na = list(map(int,stdin.readline().split()))\nl = 0\nfor i in range(n):\n    if l == 0:\n        l = i\n    else:\n        l = i - 1\nprint(l)\n"}, "802": {"problem_id": 802, "answer": "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(min(b[0], b[1] - a[0] + a[1] - b[2]))"}, "803": {"problem_id": 803, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nprint(n - l[0] + l[-1] + l[-2])"}, "804": {"problem_id": 804, "answer": "s = input()\nk = int(input())\nfor i in range(k):\n    s = s.replace('a','')\n    s = s.replace('b','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y','')\n    s = s.replace('a','')\n    s = s.replace('h','')\n    s = s.replace('o','')\n    s = s.replace('y"}, "805": {"problem_id": 805, "answer": "n = int(input())\nl, r = 0, 0\nfor i in range(n):\n    l += int(input())\n    r += int(input())\nprint(l, r)"}, "806": {"problem_id": 806, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nn,l,r = list(map(int,input().split()))\na = list(map(int,input().split()))\nm = 10**9 + 7\nfor i in range(n):\n    if a[i]%3 == 0:\n        m = max(m,a[i]-a[i-1])\n    else:\n        m = min(m,a[i]-a[i-1])\nprint(m%3)\n"}, "807": {"problem_id": 807, "answer": "import sys\ninput = sys.stdin.readline\n\nn,c = list(map(int,input().split()))\nd = {}\nfor i in range(n):\n    x = list(map(int,input().split()))\n    d[x] = i\n\ndef maxi(i):\n    if i in d:\n        return d[i]\n    else:\n        return max(d[i],i+d[i])\n\n# \u5148\u521d\u59cb\u5316\u4e00\u4e0b\uff0c\u9700\u8981\u4e00\u4e2a\u6570\u5b57\uff0c\u540c\u4e00\u4e2a\u6570\u5b57\u521d\u59cb\u5316\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bb0\u5f55\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u5019\uff0c\u5199\u6210\u4e00\u4e2a\u65b0\u7684\ufffd"}, "808": {"problem_id": 808, "answer": "import math\ndef __starting_point():\n    a, b = list(map(int, input().split()))\n    print(a)\n__starting_point()"}, "809": {"problem_id": 809, "answer": "n, k, a, b = list(map(int, input().split()))\ns = input()\nl = [0] * (n + 1)\nfor i in range(1, n + 1):\n    if s[i] == 'G':\n        l[i] += 1\n    else:\n        l[i] = 1\nprint('\\n'.join(l))\n"}, "810": {"problem_id": 810, "answer": "MOD = 1000000007\ndef factorial(n):\n    return pow(n, 2)\n\ndef mod(n, k):\n    if k == 1:\n        return 1\n    elif k == 2:\n        return n // k\n    else:\n        return n % k\n\ndef digit_sum(n):\n    return int(str(n)[1:])\n\ndef factorial(n):\n    return factorial(n) // factorial(n - 1)\n\nmod = 1000000007\n\n# Function to calculate mod\ndef f(n):\n    return mod\n\n# Driver code\nmod = 1000000007\n\nprint(f(10))"}, "811": {"problem_id": 811, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef readline():\n    return list(map(int, readline().split()))\n\ndef readline_int():\n    return int(readline())\n\ndef readline():\n    return list(map(int, readline().split()))\n\ndef readline_int():\n    return list(readline())\n\ndef __starting_point():\n    sys.setrecursionlimit(10**6)\n\n__starting_point()"}, "812": {"problem_id": 812, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] > a[i-1]:\n        s += i\n    else:\n        s += a[i]\nprint(s)"}, "813": {"problem_id": 813, "answer": "n, a, b = list(map(int, input().split()))\nprint(''.join(map(str, a)))\nfor i in range(n):\n    print(i, end=' ')\n    print(''.join(map(str, a)))\n"}, "814": {"problem_id": 814, "answer": "from math import gcd\nn = int(input())\nprint(1, n)\nfor i in range(n):\n    g = gcd(i, n)\n    print(g)"}, "815": {"problem_id": 815, "answer": "s = input()\nn = len(s)\na = 0\nfor i in range(n):\n    if s[i] <= a:\n        a += 1\n    else:\n        a = 0\nprint(a)"}, "816": {"problem_id": 816, "answer": "n, x = map(int, input().split())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in range(n):\n    b[i] = a[i] ^ b[i-1]\nprint(sum(b))"}, "817": {"problem_id": 817, "answer": "s = input()\nn = len(s)\nl = []\nfor i in range(n):\n    if s[i] == '0':\n        l.append(i)\n    else:\n        l.append(s[i].upper())\nprint(''.join(l))"}, "818": {"problem_id": 818, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n)"}, "819": {"problem_id": 819, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nl = 0\nfor i in range(n):\n    if a[i] < k:\n        l += 1\n    else:\n        l = max(l, min(a[i], a[i+k]))\nprint(l)"}, "820": {"problem_id": 820, "answer": "n = int(input())\na = list(map(int,input().split()))\nm = 10**5\nfor i in range(n):\n    a[i] = min(a[i],m)\nprint(sum(a))"}, "821": {"problem_id": 821, "answer": "s,v,t = input(),int(input()),int(input()),0\nfor _ in range(s):\n    t = t_1 + t_2\n    if t == t_1:\n        v = v_1 + t_2\n    elif t == t_2:\n        v = v_1 + t_2\n    elif t_1 == t_2:\n        v = v_1 + t_2\n    else:\n        print(\"Draw!\")\n        break\n        \n"}, "822": {"problem_id": 822, "answer": "from math import ceil\ndef lcm(x, y):\n    return (x*y) // (x*y)\nn, m, z = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += lcm(i, m)\nprint(s)\n"}, "823": {"problem_id": 823, "answer": "from sys import stdin, stdout\nfrom math import ceil, gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nmod = pow(10, 9) + 7\ndef __starting_point():\n    x, y = list(map(int, stdin.readline().split()))\n    print(0)\n__starting_point()"}, "824": {"problem_id": 824, "answer": "from sys import stdin\ninput = stdin.readline\n\ndef solve():\n    s = list(input())\n    for i in range(len(s)):\n        if s[i] == '(':\n            s[i] = ')'.format(i)\n        elif s[i] == ')':\n            s[i] = ')'\n        else:\n            s[i] = ')'\n    print(solve())\n\nsolve()"}, "825": {"problem_id": 825, "answer": "def main():\n    n = int(input())\n    for i in range(n):\n        a = list(map(int, input().split()))\n        print(max(a))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "826": {"problem_id": 826, "answer": "def main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(min(l))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "827": {"problem_id": 827, "answer": "def __starting_point():\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n * 2)\n__starting_point()"}, "828": {"problem_id": 828, "answer": "n, s = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(1, n + 1):\n    a[i] = s\nprint(len(a))\n"}, "829": {"problem_id": 829, "answer": "n = int(input())\ns = input()\nfor i in range(n):\n    s = list(s)\n    if len(s) == 1:\n        print(1)\n        continue\n    else:\n        print(n-1)\n        continue\n    if len(s) == 0:\n        print(0)\n        continue\n    ans = 0\n    for j in range(len(s)):\n        if s[j] == s[j-1] == '0':\n            ans += 1\n        elif s[j] == s[j-1] == '1':\n            ans += 1\n        else:\n            ans += 1\n    print(ans)"}, "830": {"problem_id": 830, "answer": "from collections import deque\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    towers = list(map(int, input().split()))\n    \n    for i in range(n):\n        towers[i] = int(input())\n    \n    # print(towers)\n    # print(towers.pop())\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n    \n    # print(towers)\n"}, "831": {"problem_id": 831, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    s = list(map(int, readline().split()))\n    d = {}\n    for i in range(n):\n        d[s[i]].append(i)\n    \n    res = float('inf')\n    for i in range(n):\n        res = min(res, d[s[i]][0])\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "832": {"problem_id": 832, "answer": "n = int(input())\nfor i in range(n):\n    h, a = list(map(int, input().split()))\n    color = list(map(int, input().split()))\n    d = {}\n    for j in h:\n        if j == color[j] and color[j] in d:\n            d[color[j]] = 1\n        else:\n            d[color[j]] += 1\n    print(sum(d.values()))\n"}, "833": {"problem_id": 833, "answer": "n, v = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(max(a, b))\n"}, "834": {"problem_id": 834, "answer": "from collections import Counter\nn = int(input())\nc = Counter(map(int, input().split()))\nprint(min(c.values()))"}, "835": {"problem_id": 835, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\np = list(map(int, input().split()))\n\ns = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if p[i] == 'B':\n        ans += 1\n        p[i] -= 1\n    elif p[i] == 'S':\n        ans += 1\n        p[i] -= 1\n    elif p[i] == 'C':\n        ans += 1\n        p[i] -= 1\n    else:\n        ans += 1\nprint(ans)\n"}, "836": {"problem_id": 836, "answer": "n, t = map(int, input().split())\nst = list(map(int, input().split()))\nh = [0] * n\nst[0] = st[0]\nfor i in range(1, n):\n    if st[i] == \"H\":\n        st[i] = \"S\"\n    elif st[i] == \"S\":\n        st[i] = \"H\"\nprint(min(st[n-1] - st[n-2], st[n-1] - st[n-3]))"}, "837": {"problem_id": 837, "answer": "from sys import setrecursionlimit\nsetrecursionlimit(10**5)\n\nn, x, y = map(int, input().split())\n\nif y == 0:\n    print(0)\nelif y == 1:\n    print(n)\nelse:\n    print(n*x)\n\n# cook your dish here\n"}, "838": {"problem_id": 838, "answer": "n, m = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if i == 0:\n        s += 1\n    else:\n        s -= 1\nprint(s)\n"}, "839": {"problem_id": 839, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nst = list(map(int, stdin.readline().split()))\n\ndef main():\n    n = int(input())\n    a = list(map(int, stdin.readline().split()))\n    b = list(map(int, stdin.readline().split()))\n    ans = 0\n    for i in range(n):\n        ans += a[i]\n        b.append(i)\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "840": {"problem_id": 840, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(sum(a) - sum(b))"}, "841": {"problem_id": 841, "answer": "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    print(''.join(s))"}, "842": {"problem_id": 842, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    print(s[::-1])"}, "843": {"problem_id": 843, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint('in' if l[0] == '1' else 'fin')"}, "844": {"problem_id": 844, "answer": "n = int(input())\ns = input()\nif n == 1:\n    print(0)\nelse:\n    for i in range(n-1):\n        if s[i] == s[i+1]:\n            print(i+1)\n            break\n    else:\n        print(n-1)"}, "845": {"problem_id": 845, "answer": "def __starting_point():\n    s = input()\n    print(s.count('L'))\n\n__starting_point()"}, "846": {"problem_id": 846, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n, m = list(map(int, readline().split()))\n    light = list(map(int, readline().split()))\n    b = [0] * n\n    for i in range(n):\n        b[i] = b[i] + 1\n    print(' '.join(map(str, b)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "847": {"problem_id": 847, "answer": "n, x = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += x\nprint(s)\n"}, "848": {"problem_id": 848, "answer": "n, k = list(map(int, input().split()))\nt = list(map(int, input().split()))\nfor i in range(n):\n    if t[i] == 0:\n        t[i] -= 1\n    elif t[i] == 1:\n        t[i] += 1\n    else:\n        t[i] += 1\nprint(t[0] + t[1])\n"}, "849": {"problem_id": 849, "answer": "from math import *\ndef factorial(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return n // 2\n    else:\n        return factorial(n // 2)\n\ndef __starting_point():\n    test = int(input())\n    print(factorial(test))\n__starting_point()"}, "850": {"problem_id": 850, "answer": "def main():\n    k = int(input())\n    d = list(map(int, input().split()))\n    print(max(d[0], d[1]))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "851": {"problem_id": 851, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\nl = list(map(int, readline().split()))\n\nmax_break = 0\nmax_break_time = 0\nfor i in range(n):\n    if l[i] == 0:\n        max_break_time += 1\n    else:\n        max_break_time = max(max_break_time, k - 1)\n        max_break_time = max(max_break_time, k - 1)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, k)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n        max_break_time = max(max_break_time, max_break_time)\n     "}, "852": {"problem_id": 852, "answer": ""}, "853": {"problem_id": 853, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(0)"}, "854": {"problem_id": 854, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nfrom collections import defaultdict as dd, deque\nfrom functools import reduce,cmp_to_key\nfrom itertools import permutations as p\nfrom operator import xor,take,ceil\nfrom fractions import Fraction\nfrom math import gcd,floor,floor_factorial,floor_accumulate\nfrom operator import mul,mul,truediv\n\n\ndef main():\n    n,t = map(int,input().split())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    d = dd(defaultdict(int))\n    for i in range(n):\n        a[i] += a[i]*b[i]\n        b[i] += b[i]*(b[i]-1)\n        d[a[i]]+=1\n        heappush(d,a[i])\n    print(sum(reduce(mul,dp) for dp in d.values()))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "855": {"problem_id": 855, "answer": "def calc(n, k):\n    if k < n:\n        return 0\n    elif k == n:\n        return 1\n    else:\n        return (n - k) * (n - k) // k\n\ndef __starting_point():\n    k, a, b = list(map(int, input().split()))\n    print(calc(k, a))\n__starting_point()"}, "856": {"problem_id": 856, "answer": "from math import ceil\nfor _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(ceil(k * a[0]))\n"}, "857": {"problem_id": 857, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    ans = []\n    for i in range(m):\n        x, y = list(map(int, input().split()))\n        if x == y:\n            ans.append(x)\n        else:\n            ans.append(y)\n    print(' '.join(map(str, ans)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "858": {"problem_id": 858, "answer": "n = int(input())\nprint(n)\nfor i in range(n):\n    print(n-1, end='')\n"}, "859": {"problem_id": 859, "answer": "from sys import stdin, stdout\ninput = stdin.readline\ns = list(input())\n#print(s)\n#s.sort()\n#s.append(0)\n#s.append(s[0])\n#s.append(s[-1])\n#s.append(s[-2])\n#s.append(s[-3])\n#s.append(s[-4])\n#s.append(s[-5])\n#s.append(s[-6])\n#s.append(s[-7])\n#s.append(s[-8])\n#s.append(s[-9])\n#s.append(s[-10])\n#s.append(s[-11])\n#s.append(s[-12])\n#s.append(s[-13])\n#s.append(s[-14])\n#s.append(s[-15])\n#s.append(s[-16])\n#s.append(s[-17])\n#s.append(s[-18])\n#s.append(s[-19])\n#s.append(s[-20])\n#s.append(s[-21])\n#s.append(s[-22])\n#s.append(s[-23])\n#s.append(s[-24])\n#s.append(s[-25])\n#s.append(s[-26])\n#s.append(s[-27])\n#s.append(s[-28])\n#s.append(s[-29])\n#s.append(s[-30])\n#s.append(s[-31])\n#s.append(s[-32])\n#s.append(s[-33])\n#s.append(s[-34])\n#s.append(s[-35])\n#s.append(s[-36])\n#s.append(s[-37])\n#s.append(s[-38])\n#s.append(s[-39])\n#s.append(s[-40])\n#s.append(s[-41])\n#s.append(s[-42])\n#s.append(s[-43])\n#s.append(s[-44])\n#s.append(s[-45])\n#s.append(s[-46])\n#s.append(s[-47])\n#s.append(s[-48])\n#s.append(s[-49])\n#s.append(s[-50])\n#s.append(s[-51])\n#s.append(s[-52])\n#s.append(s[-53])\n#s.append(s[-54])\n#s.append(s[-55])\n#s.append(s[-56])\n#s.append(s[-57])\n#s.append(s[-58])\n#s.append(s[-59])\n#s.append(s[-60])\n#s.append(s[-61])\n#s.append(s[-62])\n#s.append(s[-63])\n#s.append(s[-64])\n#s.append(s[-65])\n#s.append(s[-66])\n#s.append(s[-67])\n#s.append(s[-68])\n#s.append(s[-69])\n#s.append(s[-70])\n#s.append(s[-71])\n#s.append(s[-72])\n#s.append(s[-73])\n#s.append(s[-74])\n#s.append(s[-75])\n#s.append(s[-76])\n#s.append(s[-77])\n#s.append(s[-78])\n#s.append(s[-79])\n#s.append(s[-80])\n#s.append(s[-81])\n#s.append(s[-82])\n#s.append(s[-83])\n#s.append(s[-84])\n#s.append(s[-85])\n#s.append(s[-86])\n#s.append(s[-87])\n#s.append(s[-88])\n#s"}, "860": {"problem_id": 860, "answer": ""}, "861": {"problem_id": 861, "answer": "from math import log2\n\ndef solve(m, R, x, y):\n    if m == 1:\n        return x\n    elif m == 2*R:\n        return y\n    else:\n        x = log2(m)\n        y = log2(m)\n        return x*y\n\ndef __starting_point():\n    solve(1, 0, 0)\n__starting_point()"}, "862": {"problem_id": 862, "answer": "from sys import stdin, stdout\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\na.sort()\nprint(n)\n"}, "863": {"problem_id": 863, "answer": "import sys\n\ndef main():\n    a, b, t = list(map(int, sys.stdin.readline().split()))\n    t = int(t)\n    print(t)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "864": {"problem_id": 864, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(m):\n    a.append(i)\n\nprint(max(a))"}, "865": {"problem_id": 865, "answer": "from bisect import bisect_left as bl\nfrom heapq import heappush,heappop\nN, T = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ndef main():\n    N, T = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print(main())\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "866": {"problem_id": 866, "answer": "def gcd(a,b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return b\n    else:\n        return gcd(b,a%b)\n\nX = int(input())\nY = int(input())\n\nprint(gcd(X,Y))"}, "867": {"problem_id": 867, "answer": "from itertools import combinations\n\nn = int(input())\n\ncombinations = list(combinations(range(n)), key=lambda x: x[1])\n\ncandidates = []\n\ndef find(x):\n    if x == 0:\n        return x\n    else:\n        i = x.index(candidates[x])\n        return find(i)\n\ndef union(x, y):\n    x = find(x)\n    y = find(y)\n    if x == y:\n        return\n    elif x == y:\n        return\n\ndef inpl():\n    return list(combinations(map(int,combinations(range(n))))).pop()\n\ndef inpl2():\n    return list(combinations(map(int,combinations(range(n))))).pop()\n\ndef __starting_point():\n    n = int(input())\n    print(len(combinations(inpl())))\n__starting_point()"}, "868": {"problem_id": 868, "answer": "n = int(input())\nfor i in range(n):\n    s = ''.join(str(i) for i in input().split())\n    print(s.isdigit())"}, "869": {"problem_id": 869, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    a, b = readline().split()\n    print(a)\n    print(b)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "870": {"problem_id": 870, "answer": "from math import log2\n\ndef lcm(a, b):\n    return abs(a[0] - b[0]) / abs(a[1] - b[1])\n\n\ndef main():\n    d, v_1, v_2 = list(map(int, input().split()))\n    l, v = 0, 0\n    for i in range(d):\n        l += v_1\n        v_1 += v_2\n        v_2 += v_1\n        if l <= v_1:\n            l = max(l, v_1)\n        elif l <= v_2:\n            l = max(l, v_2)\n    print(l)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "871": {"problem_id": 871, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, s = list(map(int, readline().split()))\nl = list(map(int, readline().split()))\n\ndef main():\n    n, s = list(map(int, readline().split()))\n    l.append(s)\n    h, m = list(map(int, readline().split()))\n    print(min(l[-1] + h, m))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "872": {"problem_id": 872, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(len(a))"}, "873": {"problem_id": 873, "answer": "n = int(input())\ns = input()\nd = dict()\nfor i in range(n):\n    d[i] = list(s.count('1'))\n    d[i].append(i)\nprint(max(d.values()))"}, "874": {"problem_id": 874, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\np = list(map(int, input().split()))\n\n# print(p)\n\ndef solve():\n    n = int(input())\n    p = list(map(int, input().split()))\n    print(solve())\n\ndef __starting_point():\n    solve()\n\n__starting_point()"}, "875": {"problem_id": 875, "answer": "n = int(input())\np = [[0]*n for _ in range(n)]\nfor i in range(n):\n    p[i][0] = list(map(int, input().split()))\n    p[i][1] = list(map(int, input().split()))\n\ndef dfs(i, j):\n    if j == 0:\n        return 1\n    elif i % 2 == j % 2:\n        return -1\n    else:\n        return min(dfs(i//2, j//2), dfs(i//2, j//2+1))\n\nprint(len(p))\nfor i in range(n):\n    print(p[i][0], p[i][1])\n"}, "876": {"problem_id": 876, "answer": "from sys import stdin,stdout\nn,k = list(map(int,stdin.readline().split()))\na = list(map(int,stdin.readline().split()))\nl = [0]*n\nfor i in range(n):\n    l[i] = a[i]\n    k = i\nprint(l)\n"}, "877": {"problem_id": 877, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\npairs = [0] * (n + 1)\nfor i in range(n):\n    pairs[i] += 1\n\nd = {}\nfor i in range(m):\n    d[i] = set()\n\nfor i in range(n):\n    u, v = list(map(int, readline().split()))\n    u -= 1\n    v -= 1\n    if u == v:\n        continue\n    if len(d.keys()) == 0:\n        d[u].add(v)\n        d[v].add(u)\n    elif len(d.keys()) == 1:\n        d[u].add(v)\n        d[v].add(u)\n\nprint(len(d))\n"}, "878": {"problem_id": 878, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef find_le(x):\n    if x == 0:\n        return x\n    elif x == 1:\n        return find_le(x - 1)\n    else:\n        return x\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        x = a[i]\n        d[x] = 0\n        for j in range(i + 1, n):\n            x = a[j]\n            if x == 0:\n                continue\n            elif x == 1:\n                continue\n            elif x == 3:\n                x = find_le(x - 1)\n                d[x] = d[x - 1]\n                break\n            elif x == 4:\n                x = find_le(x + 1)\n                d[x] = d[x + 1]\n                break\n            elif x == 8:\n                x = find_le(x + 1)\n                d[x] = d[x + 1]\n                break\n            elif x == 16:\n                x = find_le(x + 1)\n                d[x] = d[x + 1]\n                break\n            elif x == 32:\n                x = find_le(x + 1)\n                d[x] = d[x + 1]\n                break\n            elif x == 64:\n                x = find_le(x + 1)\n                d[x] = d[x + 1]\n                break\n            elif x == 32:\n                x = find_le(x + 1)\n                d[x] = d[x + 1]\n                break\n            elif x == 32:\n                x = find_le(x + 1)\n                d[x] = d[x + 1]\n                break\n            elif x == 64:\n                x = find_le(x + 1)\n"}, "879": {"problem_id": 879, "answer": "n = int(input())\nfor i in range(n):\n    p = list(map(int, input().split()))\n    if p[0] < p[1]:\n        print(i, end=' ')\n    else:\n        print(i, end=' ')\n"}, "880": {"problem_id": 880, "answer": "from collections import Counter\nn = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i]\nprint(s)"}, "881": {"problem_id": 881, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] += 1\nprint(sum(a))"}, "882": {"problem_id": 882, "answer": "from collections import Counter\ns = input()\nn = len(s)\nc = Counter(s)\nprint(len(c), end=' ')\nfor i in range(n):\n    if c[i] == 'w' and c[i] == 'w':\n        print(i+1)\n    elif c[i] == 'w' and c[i] == 'w':\n        print(i+1)\n    else:\n        print(i+1)\n"}, "883": {"problem_id": 883, "answer": "n = int(input())\nd = dict()\nfor i in range(n):\n    d[i] = list(map(int, input().split()))\n\nprint(('\\n'.join(d.get(x, 0) for x in d.items())))"}, "884": {"problem_id": 884, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 998244353\n\ndef solve(a, b, c):\n    return (a + b + c) % MOD\n\ndef __starting_point():\n    solve(1, 1, 1)\n\n__starting_point()"}, "885": {"problem_id": 885, "answer": "import math\nn = int(input())\nedges = []\nfor i in range(n):\n    u,v = list(map(int,input().split()))\n    edges.append(u-1)\n    edges.append(v-1)\nedges.sort(reverse=True)\nsum = 0\nfor e in edges:\n    sum += math.ceil(math.pow(2,e[0]))\nprint(sum)"}, "886": {"problem_id": 886, "answer": "n = int(input())\nif n%2 == 0:\n    print(-1)\nelse:\n    a = n//2\n    b = n%2\n    if a == 0:\n        a = b\n    elif a == 1:\n        a = b\n    else:\n        a = b\n    print(a)\n"}, "887": {"problem_id": 887, "answer": "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    if a[0] == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")"}, "888": {"problem_id": 888, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n    s.append(a[i])\n\nprint(len(s))\nfor i in range(1, n):\n    print(s[i], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n    print(s[i-1], end=\" \")\n   "}, "889": {"problem_id": 889, "answer": "def main():\n    \"\"\"Main program.\"\"\"\n    n, m = list(map(int, input().split()))\n    if m == 0:\n        print(\"NO\")\n    else:\n        for i in range(m):\n            print(\"\".join(map(str, i)))\n            if i == m:\n                print(\"YES\")\n            else:\n                print(\"NO\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "890": {"problem_id": 890, "answer": "n, l, r, x = list(map(int, input().split()))\nc = [0] * (n + 1)\nfor i in range(1, n + 1):\n    if c[i] == x:\n        c[i] = x\n    elif c[i] < x:\n        c[i] = x\nprint(len(c))\n"}, "891": {"problem_id": 891, "answer": "from sys import stdin,stdout\nn,k = list(map(int,stdin.readline().split()))\ns = input()\nl = list(map(int,stdin.readline().split()))\nc = 0\nfor i in range(k):\n    if s[i]=='W':\n        c+=1\n    else:\n        print('B')\n        break\nif c==n:\n    print('B')\nelse:\n    print('W')"}, "892": {"problem_id": 892, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nprint(l, k)\nfor i in range(1, n):\n    if a[i] > a[i-1]:\n        l = i\n    else:\n        k = i\n        break\nprint(l, k)\n"}, "893": {"problem_id": 893, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 1000000007\nINF = 10**9 + 7\n\ndef main():\n    d, n = list(map(int, input().split()))\n    a = [0]*n\n    for i in range(n):\n        a[i] = 1\n        d[i] = 1\n        for j in range(n):\n            u, v = list(map(int, input().split()))\n            a[u] = max(a[u], a[v] - d[u] - 1)\n            a[v] = max(a[v], a[u] - d[v] - 1)\n            d[u] = max(d[u], d[v] - 1)\n            d[v] = max(d[v], d[u] - 1)\n        print((a[-1]))\n        \n        \ndef __starting_point():\n    main()\n\n__starting_point()"}, "894": {"problem_id": 894, "answer": "from math import sqrt\ndef __starting_point():\n x, y = list(map(int, input().split()))\n print(sqrt(x**2 - y**2))\n\n__starting_point()"}, "895": {"problem_id": 895, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nt = list(map(int, input().split()))\nfor i in range(t):\n    t[i] = int(input())\nprint(max(t))"}, "896": {"problem_id": 896, "answer": "from sys import stdin,stdout\nn,m = list(map(int,stdin.readline().split()))\na = [0]*n\nb = [0]*n\nfor i in range(m):\n    a[i] = 1\n    b[i] = 1\n    for j in range(n):\n        if a[i]==0:\n            a[i] = 1\n            b[i] = 1\n        else:\n            a[i] = 0\n            b[i] = 0\n            break\n    if a[i]==0:\n        a[i] = 1\n        b[i] = 1\n    else:\n        a[i] = 0\n        b[i] = 0\nprint('YES' if a[i]==0 else 'NO')"}, "897": {"problem_id": 897, "answer": "import math\nn, m = list(map(int, input().split()))\na = [0] * m\nfor i in range(n):\n    a[i] = a[i] + a[i - 1]\nprint(''.join(map(str, a)))\n"}, "898": {"problem_id": 898, "answer": "from bisect import bisect_left as bl\nN, M = list(map(int, input().split()))\nl = [0] * N\nfor i in range(N):\n    a, b = list(map(int, input().split()))\n    l[a] += b\nprint(max(l))"}, "899": {"problem_id": 899, "answer": "from collections import defaultdict, deque\nn, m = list(map(int, input().split()))\ng = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b, c = list(map(int, input().split()))\n    g[a].append((b, c))\n    g[b].append((a, c))\n    g[c].append((a, b))\nvisited = set()\nvisited.add((0, 0))\nd = defaultdict(list)\nd[0].append((0, 0))\nvisited.add((0, 0))\nq = deque([(0, 0)])\nwhile q:\n    x, y = q.popleft()\n    if x == n:\n        continue\n    for i in g[x]:\n        if i not in visited:\n            continue\n        visited.add(i)\n        q.append((i, x))\nprint(len(visited))"}, "900": {"problem_id": 900, "answer": "def main():\n    s = input()\n    if len(s) == 0:\n        return 0\n    else:\n        a = int(s[0])\n        b = int(s[1])\n        print(a % 13)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "901": {"problem_id": 901, "answer": "n, m = list(map(int, input().split()))\nl = [0] * m\nfor i in range(m):\n    if l[i] == 0:\n        l[i] = 1\n    else:\n        l[i] = 0\n\ns = set()\nfor i in range(n):\n    if l[i] == 0:\n        s.add(i)\n    else:\n        s.add(l[i])\n\nprint('YES' if s.issubset(s) else 'NO')"}, "902": {"problem_id": 902, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i]%2 == 0:\n        c += 1\n    elif a[i]%2 == 1:\n        c += 1\n    else:\n        c += 1\nprint(c)\n\n"}, "903": {"problem_id": 903, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nm = max(a)\nfor i in range(k):\n    if i <= m:\n        m = i\nprint(m)"}, "904": {"problem_id": 904, "answer": "n = int(input())\ns = input()\nprint(5)\nfor i in range(n):\n    print(s[i] + s[i+1])"}, "905": {"problem_id": 905, "answer": "n, s = list(map(int, input().split()))\nl = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if l[i] == 0:\n        c += 1\nprint(c)\n"}, "906": {"problem_id": 906, "answer": "import sys\nreadline = sys.stdin.readline\ninput = lambda: readline().rstrip()\n\nn, m, k = list(map(int, readline().split()))\nblocks = list(map(int, readline().split()))\n\ndef is_prime(n):\n    if n < 2:\n        return False\n    elif n % 2 == 0:\n        return True\n    else:\n        return False\n\ndef __starting_point():\n    n, m, k = list(map(int, readline().split()))\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    # print(blocks)\n    #"}, "907": {"problem_id": 907, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef check(x, y):\n    if x == y:\n        return True\n    elif x % y == 0:\n        return False\n    else:\n        return True\n\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    if check(a, b):\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "908": {"problem_id": 908, "answer": "n = int(input())\ncnt = [0] * 100001\nfor i in range(n):\n    cnt[i] = 1\nfor i in range(n):\n    l = list(map(int, input().split()))\n    if l[0] == 'a':\n        cnt[i] += 1\n    elif l[0] == 'a':\n        cnt[i] -= 1\n    else:\n        cnt[i] += 1\nprint(cnt[n])"}, "909": {"problem_id": 909, "answer": "import sys\n\ndef main():\n    a, b, c = map(int, input().split())\n    print(a + b + c)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "910": {"problem_id": 910, "answer": "n, a, b = list(map(int, input().split()))\nprint('\\n'.join(map(str, list(map(int, input().split())))) + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n' + '\\n"}, "911": {"problem_id": 911, "answer": ""}, "912": {"problem_id": 912, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n    n, s, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    d = {}\n    for i in d:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    print(min(d.values()))\n"}, "913": {"problem_id": 913, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nmat = [[0 for i in range(n)] for i in range(n)]\nfor i in range(n):\n    mat[i][i] = 1\n\nfor i in range(n):\n    x = list(map(int, input().split()))\n    mat[x].append(i)\n\ndef solve(i, j):\n    if mat[i][j] == 0:\n        return 0\n    else:\n        return mat[i][j]\n\ndef floyd_sums(i, j):\n    return mat[i][j]\n\ndef __starting_point():\n    n = int(input())\n    mat = [[0 for i in range(n)] for i in range(n)]\n    for i in range(n):\n        x = list(map(int, input().split()))\n        mat[x].append(i)\n\n__starting_point()"}, "914": {"problem_id": 914, "answer": "s = input()\nn = len(s)\nif s[0] == 'nab':\n print(-1)\nelse:\n s = input()\nn = len(s)\nif s[0] == 'nab':\n print(n)\nelse:\n s = input()\nn = len(s)\nif s[0] == 'ab':\n print(n)\nelse:\n s = input()\nn = len(s)\nif s[0] == 'a':\n print(n)\nelse:\n s = input()\nn = len(s)\nif s[0] == 'a':\n print(n)\nelse:\n s = input()\nn = len(s)\nif s[0] == 'b':\n print(n)\nelse:\n s = input()\nn = len(s)\nif s[0] == 'b':\n print(n)\nelse:\n s = input()\nn = len(s)\nif s[0] == 'b':\n print(n)\nelse:\n s = input()\nn = len(s)\nif s[0] == 'b':\n print(n)\n\n# cook your dish here\n"}, "915": {"problem_id": 915, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\n')\n\ndef main():\n    n = int(input())\n    print(''.join(map(str, input().split())))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "916": {"problem_id": 916, "answer": "n = int(input())\na = list(map(int, input().split()))\np = [0]*n\nfor i in range(n):\n    x = a[i]\n    p[x] = i\n\ndef swap(root, i, j):\n    if root == j:\n        return 1\n    elif root == i:\n        return 0\n    else:\n        return 1 + swap(root, i, j)\n\nprint(swap(root, 0, n))"}, "917": {"problem_id": 917, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, h, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\na = [0] * m\nfor i in range(m):\n    a[i] = max(l[i] - a[i], a[i])\nprint(sum(a))\n"}, "918": {"problem_id": 918, "answer": "n, m = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    s.add(input()[i])\n\ns.add(0)\n\nfor i in range(n-1, -1, -1):\n    if s.intersection(s[i]):\n        print(i)\n        continue\n    else:\n        print(\"?\")\n\nprint(s.symmetric_difference(s[0]))"}, "919": {"problem_id": 919, "answer": "from sys import stdin,stdout\nn,k = list(map(int,stdin.readline().split()))\ns = input()\nprint(n)\nfor i in range(n):\n    if s[i] == 'a':\n        print(-1)\n    elif s[i] == 'b':\n        print(i+1)\n    elif s[i] == 'c':\n        print(i+2)\n    elif s[i] == 'd':\n        print(i+3)\n    else:\n        print(-1)\n"}, "920": {"problem_id": 920, "answer": "n = int(input())\ng = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n    a, b, c, d = list(map(int, input().split()))\n    if d.get(a, 0) > d.get(b, 0):\n        d[a] = b\n    elif d.get(b, 0) > d.get(c, 0):\n        d[b] = c\n    else:\n        d[c] = c\nprint(' '.join(map(str, d.values())))"}, "921": {"problem_id": 921, "answer": "n,w = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n    a[i]+=1\nprint(sum(a))\n"}, "922": {"problem_id": 922, "answer": "import sys\n\nn, a, b = list(map(int, input().split()))\ndice = list(map(int, input().split()))\n\ndice.sort()\n\nprint(a, b)\n\nfor i in range(n):\n    if a[i] > b[i]:\n        print(i, end=' ')\n    else:\n        print(i, end=' ')\n"}, "923": {"problem_id": 923, "answer": "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print('Yes' if a[0] == b[0] else 'No')\n"}, "924": {"problem_id": 924, "answer": "from sys import stdin,stdout\ndef lcm(a,b):\n    return (a*b)//(a+b)\nn,l=map(int,stdin.readline().split())\na=list(map(int,stdin.readline().split()))\nb=list(map(int,stdin.readline().split()))\nans=0\nfor i in range(n):\n    ans+=lcm(a[i],b[i])\nprint(ans)"}, "925": {"problem_id": 925, "answer": "def main():\n    n = int(input())\n    print(n)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "926": {"problem_id": 926, "answer": "from collections import defaultdict\nn = int(input())\nd = defaultdict(list)\nfor i in range(n):\n    a, b, c = list(map(int, input().split()))\n    d[a].append(b)\n    d[b].append(c)\nprint(' '.join(map(str, d[1])))"}, "927": {"problem_id": 927, "answer": "from sys import stdin,stdout\ndef main():\n    input = stdin.readline\n    n,m = map(int,input().split())\n    a = list(map(int,input().split()))\n    ans = 0\n    for i in range(n):\n        if a[i]==1:\n            ans += 1\n        else:\n            ans -= 1\n    print(ans)\nmain()"}, "928": {"problem_id": 928, "answer": "from itertools import combinations\ndef factorial(n):\n    return 2**n\ndef lcm(a,b):\n    return (a*b)//(a+b)\ndef ceil(a,b):\n    return (a+b)//(a*b)\ndef sqrt(a,b):\n    return (a**2+b**2)//(a*b)\ndef log(a,b):\n    return (a**0.5+b**0.5)//(a*b)\ndef ceil(a,b):\n    return (a**0.5+b**0.5)//(a*b)\nn,k = list(map(int,input().split()))\na = list(map(int,input().split()))\nc = []\nfor i in range(n):\n    c.append(a[i])\nfor i in range(k):\n    print(c[-1][i],end=\" \")\n"}, "929": {"problem_id": 929, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve(H,W,a):\n    # \u5982\u4f55\u6267\u884c\u4e00\u4e2a\u65b9\u6cd5\n    if a == 0:\n        return 0\n    elif a == 1:\n        return W\n    elif a == 2:\n        return a\n    elif a == 3:\n        return W\n    elif a == 4:\n        return W\n    elif a == 5:\n        return W\n    elif a == 6:\n        return W\n    elif a == 7:\n        return W\n    elif a == 8:\n        return W\n    elif a == 9:\n        return W\n    elif a == 10:\n        return W\n    elif a == 11:\n        return W\n    elif a == 12:\n        return W\n    elif a == 13:\n        return W\n    elif a == 14:\n        return W\n    elif a == 15:\n        return W\n    elif a == 16:\n        return W\n    elif a == 17:\n        return W\n    elif a == 18:\n        return W\n    elif a == 19:\n        return W\n    elif a == 20:\n        return W\n    elif a == 21:\n        return W\n    elif a == 22:\n        return W\n    elif a == 23:\n        return W\n    elif a == 24:\n        return W\n    elif a == 25:\n        return W\n    elif a == 26:\n        return W\n    elif a == 27:\n        return W\n    elif a == 28:\n        return W\n    elif a == 29:\n        return W\n    elif a == 30:\n        return W\n    elif a == 30:\n        return W\n    elif a == 31:\n        return W\n    elif a == 32:\n        return W\n    elif a == 33:\n        return W\n    elif a == 33:\n        return W\n    elif a == 34:\n        return W\n    elif a == 34:\n        return W\n    elif a == 35:\n        return W\n    elif a == 36:\n        return W\n    elif a == 37:\n        return W\n    elif a == 38:\n        return W\n    elif a == 39:\n        return W\n    elif a == 40:\n        return W\n    elif a == 41:\n        return W\n    elif a == 42:\n        return W\n    elif a == 43:\n        return W\n    elif a == 44:\n        return W\n    elif a == 45:\n        return W\n "}, "930": {"problem_id": 930, "answer": "def __starting_point():\n    n, k = list(map(int, input().split()))\n    dp = [[0] * (k + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        dp[i][i] = 1\n    MOD = 10**9 + 7\n    for i in range(1, n + 1):\n        dp[i][i] = (dp[i][i] + dp[i - 1][i - 1]) % MOD\n    print((dp[-1][-1]))\n__starting_point()"}, "931": {"problem_id": 931, "answer": "from sys import stdin, stdout\n\ndef main():\n    n, m, x, y, z, p = list(map(int, stdin.readline().split()))\n    l = list(map(int, stdout.readline().split()))\n    r = list(map(int, stdin.readline().split()))\n    ans = []\n    for i in range(n):\n        ans.append(l[i] * x)\n        ans.append(l[i] * y)\n    print(*ans, sep='\\n')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "932": {"problem_id": 932, "answer": "from collections import defaultdict\n\nM = 10**9\nn = int(input())\nfor i in range(n):\n    M = max(M, defaultdict(int))\n    n = min(n, M)\n    d = defaultdict(int)\n    for j in range(n):\n        d[j] = 0\n        for k in range(n):\n            if d[j] == 0:\n                d[j] += 1\n            else:\n                d[j] = 1\n                break\n    print('NO' if d[0] == 0 else 'YES')\n"}, "933": {"problem_id": 933, "answer": "s = input()\nfor i in range(len(s)):\n    if s[i] == 'h':\n        print(i, end ='')\n    else:\n        print(''.join(s[i:i+3]))"}, "934": {"problem_id": 934, "answer": "from collections import deque\ns = input()\nn = len(s)\nc = 0\nfor i in range(n):\n    if s[i] == 'A':\n        c += 1\n    else:\n        c = 0\n        for j in range(i,n):\n            if s[j] == 'C':\n                c += 1\n            elif s[j] == 'H':\n                c += 1\n            else:\n                break\nprint('YES' if c == n else 'NO')"}, "935": {"problem_id": 935, "answer": "from collections import deque\n\nn, m = list(map(int, input().split()))\n\ndef main():\n    n, m = list(map(int, input().split()))\n    d = [[] for _ in range(n)]\n    for _ in range(m):\n        d[n].append(n)\n        d[n].append(m)\n        \n    for i in range(n):\n        for j in range(m):\n            if i == j:\n                continue\n            if d[i][j] == 0:\n                d[i][j] = 1\n            else:\n                d[i][j] = d[i][j-1] + 1\n                \n    print('Akshat' if d[n][m] == 0 else 'Malvika')\n\nmain()"}, "936": {"problem_id": 936, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a[0] + \" \" + a}, "937": {"problem_id": 937, "answer": "def rec(n, k, a):\n    if n < k:\n        return 0\n    elif n == k:\n        return a\n    else:\n        m = 1\n        for i in range(n):\n            if a % i == 0:\n                m = m + 1\n            else:\n                m = 1\n        return m\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(rec(n, k, a))"}, "938": {"problem_id": 938, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    a, b = [int(x) for x in input().split()]\n    n = a + b\n    m = b + n\n    print(m)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "939": {"problem_id": 939, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\ndists = []\n\nfor i in range(n):\n    if m[i] < 3:\n        dists.append(i)\n    elif m[i] == 3:\n        dists.append(i)\n    else:\n        dists.append(i)\n\nprint(' '.join(map(str, dists)))\n"}, "940": {"problem_id": 940, "answer": "from math import ceil\n\ndef main():\n    a, b, c = list(map(int, input().split()))\n    if a <= b <= c:\n        print(ceil(c))\n    else:\n        print(min(a, b, c))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "941": {"problem_id": 941, "answer": "import sys\ninput = sys.stdin.readline\n\nB, k = map(int, input().split())\nB = sorted(map(int, input().split()))\n\nfor i in range(k):\n    a, b = B.pop(0)\n    if b % 2 == 1:\n        print('even')\n    else:\n        print('odd')\n\nprint('even')"}, "942": {"problem_id": 942, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\n\ndef dfs(a, b):\n    if a == b:\n        return 1\n    elif a == 0:\n        return 0\n    else:\n        return max(dfs(a, b), dfs(a-1, b-1))\n\nans = []\nfor i in range(n):\n    a, b = A[i]\n    ans.append(dfs(a, b))\n\nprint(*ans, sep='\\n')\n"}, "943": {"problem_id": 943, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a[0]))"}, "944": {"problem_id": 944, "answer": "n = int(input())\nfor i in range(n):\n    u, v, d, s = list(map(int, input().split()))\n    if d < n:\n        d = n\n    else:\n        d = d + 1\n    print(d)\n"}, "945": {"problem_id": 945, "answer": "n = int(input())\nx = list(map(int, input().split()))\nprint('yes' if x[0] == x[-1] else 'no')"}, "946": {"problem_id": 946, "answer": "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    if a[0] == 1:\n        print(\"EASY\")\n    elif a[0] == 0:\n        print(\"easy\")\n    else:\n        print(\"HARD\")"}, "947": {"problem_id": 947, "answer": "import math\nfor _ in range(int(input())):\n n = int(input())\n a, b = 0, 0\n for i in range(n):\n  if i % 2 == 0:\n   a += math.gcd(a, b)\n  else:\n   b += math.gcd(b, a)\n print(a, b)"}, "948": {"problem_id": 948, "answer": "n, m = list(map(int, input().split()))\nprint(n // 2)\nfor i in range(n // 2):\n    print(i + \"face\")\n"}, "949": {"problem_id": 949, "answer": "def find_gcd(a, b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return b\n    else:\n        a, a + 1, a + 2, a + 2, a + 3, a + 3, a + 4, a + 4, a + 5, a + 5, a + 6, a + 6, a + 7, a + 7\n        return gcd(a, a + 1) + gcd(a, a + 2) + gcd(a, a + 3) + gcd(a, a + 4) + gcd(a, a + 5) + gcd(a, a + 6)\n\ndef __starting_point():\n    a, b = list(map(int, input().split()))\n    print(find_gcd(a, b))\n\n__starting_point()"}, "950": {"problem_id": 950, "answer": "n, m = map(int, input().split())\ns = input()\na = list(map(int, s.split()))\nfor i in range(n):\n    b = a[i]\n    if b.count('*') == 3:\n        b.pop()\n    elif b.count('*') == 2:\n        b.pop()\n    elif b.count('*') == 1:\n        b.pop()\nprint(len(s))"}, "951": {"problem_id": 951, "answer": "def main():\n    k = int(input())\n    n = int(input())\n    print(len(n))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "952": {"problem_id": 952, "answer": "from bisect import bisect_left as b, bisect_right as b, insort_right as b, insort_left as b, insort_left as b, l1_right as b, l1_left as b, l2_right as b, l2_left as b, residual_costs as l1_right[i] or residual_costs[i] or l1_right[i] or l2_right[i]\n\ndef solve(n, m, p, d):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return d\n    else:\n        ans = min(pow(2, m - 1, p) + b, bisect_left(d, p, m))\n        ans = min(ans, d[p] + residual_costs[p])\n        return ans\n\nn, m = map(int, input().split())\nd = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v, c = map(int, input().split())\n    d[u].append(v)\n    d[v].append(u)\n\nresidual_costs = [None] * n\nresidual_costs[0] = 0\nresidual_costs[1] = 0\nfor i in range(1, n):\n    if residual_costs[i] is None:\n        residual_costs[i] = residual_costs[i - 1]\n\nprint(solve(n, m, d))"}, "953": {"problem_id": 953, "answer": "n = int(input())\nmat = [[0] * n for _ in range(n)]\nfor i in range(n):\n    mat[i] = [0] * n\nfor i in range(n):\n    for j in range(n):\n        mat[i][j] = mat[i][j] + 1\nprint(''.join(map(str, mat)))"}, "954": {"problem_id": 954, "answer": "s = input()\nn = len(s)\nd = {}\nfor i in range(n):\n    if s[i] in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\nprint(d.get(s[i], 0))"}, "955": {"problem_id": 955, "answer": "n = int(input())\nfor i in range(n):\n    c, s = list(map(int, input().split()))\n    if s == \"A\":\n        print(0)\n    elif s == \"B\":\n        print(1)\n    elif s == \"C\":\n        print(2)\n    elif s == \"A\":\n        print(3)\n    else:\n        print(n-1)\n"}, "956": {"problem_id": 956, "answer": ""}, "957": {"problem_id": 957, "answer": "s = input()\nfor i in range(0, len(s)):\n    if s[i] in \"abcdefghijklmnopqrstuvwxyz\" or s[i] in \"ABCDEFGHIJKLMNOPRSTUVWXYZ\" or s[i] in \"01234567890123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s[i] in \"0123456789012345678\" or s"}, "958": {"problem_id": 958, "answer": "n, k = list(map(int, input().split()))\ns = input()\nd = {}\nfor i in range(n):\n    d[i] = 0\nfor i in range(n):\n    if s[i] in d:\n        d[s[i]] += 1\n    else:\n        d[s[i]].append(i)\nprint('-'*(n-k+1) + ''.join(map(str, d[k:])))\n"}, "959": {"problem_id": 959, "answer": "n, m, mod = map(int, input().split())\ns = [[0] * (n + 1) for _ in range(m + 1)]\nfor i in range(1, m + 1):\n    s[i][i] = s[i][i - 1] = 1\n\nfor i in range(n):\n    for j in range(m):\n        if s[i][j] == s[i - 1][j]:\n            s[i][j] = s[i][j - 1] = s[i][j]\n            break\n\nprint(s[n][m] % mod)"}, "960": {"problem_id": 960, "answer": "from math import *\nn, k = map(int, input().split())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] % k == 0:\n        s += a[i]\n    else:\n        s += a[i]\nprint(s)"}, "961": {"problem_id": 961, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint(sum(a))"}, "962": {"problem_id": 962, "answer": "from collections import defaultdict\nn, m = list(map(int, input().split()))\nG = defaultdict(list)\nfor _ in range(n):\n    a, b = list(map(int, input().split()))\n    G[a].append(b)\n    G[b].append(a)\n\n#print(G)\n#print(G[0])\n#print(G[n-1])\n\ndef dfs(G, i):\n    if i == 0:\n        return 1\n    else:\n        return 0\n\ndfs(G, 0)\n\nans = 0\nfor i in range(n):\n    if G[i] == (0, 0):\n        ans += 1\n        continue\n    if len(G[i]) == 1:\n        ans += 1\n        continue\n    ans += dfs(G, i)\n\nprint(ans)\n"}, "963": {"problem_id": 963, "answer": "from collections import defaultdict\nn,k = map(int,input().split())\nl = list(map(int,input().split()))\nmod = 998244353\ns = [0]*(n+1)\nfor i in range(1,n+1):\n    s[i] = s[i-1]<<1\nmod2 = pow(10,mod,2)\n\ndef is_valid(s):\n    return s[0]==s[-1]\n\ndef can_take(s):\n    return s[0]==s[-1]\n\ndef can_take_all(s):\n    return len(s)==1\n\ndef can_take_mod(s):\n    return mod%pow(10,998244353,2)\n\ndef can_get(s):\n    return all(x.is_integer() for x in s)\n\ndef can_get_mod(s):\n    return mod%pow(10,998244353,2)\n\nMOD = 998244353\n\ndef can_get_mod(s):\n    return all(x.is_integer() for x in s)\n\ndef can_get_pow(s):\n    return pow(10,MOD,2)\n\ndef can_get_mod(s):\n    return mod%pow(10,MOD,2)\n\ndef can_get_mod_pow(s):\n    return pow(10,MOD,2)\n\ndef can_get_pow(s):\n    return pow(10,MOD,2)\n\ndef can_get_mod(s):\n    return mod%pow(10,MOD,2)\n\n# \u5982\u679c\u6700\u591a\u90e8\u5206\u4e0d\u7528\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u91cd\u5199\u51fa\u73b0\ndef can_get_mod(s):\n    return sum(map(can_take,s))%MOD\n\n# \u5982\u679c\u6700\u591a\u90e8\u5206\u4e0d\u7528\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u91cd\u5199\u51fa\u73b0\ndef can_get_mod(s):\n    return sum(map(can_take,s))%MOD\n\n# \u5982\u679c\u6700\u591a\u90e8\u5206\u4e0d\u7528\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u91cd\u5199\u51fa\u73b0\ndef can_get_mod(s):\n    return mod%pow(10,MOD,2)\n\n# \u5982\u679c\u6700\u591a\u90e8\u5206\u4e0d\u7528\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u91cd\u5199\u51fa\u73b0\ndef can_get_mod_pow(s):\n    return pow(10,MOD,2)\n\n# \u5982\u679c\u6700\u591a\u90e8\u5206\u4e0d\u7528\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u91cd\u5199\u51fa\u73b0\ndef can_get_mod(s):\n    return mod%pow(10,MOD,2)\n\n# \u5982\u679c\u6700\u591a\u90e8\u5206\u4e0d\u7528\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u91cd\u5199\u51fa\u73b0\ndef can_get_mod_mod(s):\n    return mod%pow(10,MOD,2)\n\n# \u5982\u679c\u6700\u591a\u90e8\u5206\u4e0d\u7528\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u91cd\u5199\u51fa\u73b0\ndef can_get_mod(s):\n    return mod%pow(10,MOD,2)\n\n# \u5982\u679c\u6700\u591a\u90e8\u5206\u4e0d\u7528\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u91cd\u5199\u51fa\u73b0\ndef can_get_mod(s):\n    return pow(10,MOD,2)\n\n# \u5982\u679c\u6700\u591a\u90e8\u5206\u4e0d\u7528\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6570\u91cd\u5199\u51fa\u73b0\ndef can_get_mod(s):\n"}, "964": {"problem_id": 964, "answer": "from sys import stdin,stdout\nfrom itertools import permutations,combinations\nn = int(stdin.readline().strip())\nprint('%.4f' % n)"}, "965": {"problem_id": 965, "answer": "n = int(input())\ncows = []\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    cows.append(a)\ncows.sort()\nprint(len(cows))\n"}, "966": {"problem_id": 966, "answer": "def __starting_point():\n    s = int(input())\n    while s>9000:\n        s = s//1000\n        s = s%1000\n    print(s)\n\n__starting_point()"}, "967": {"problem_id": 967, "answer": "n = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(n-1)\n"}, "968": {"problem_id": 968, "answer": "n = int(input())\nprint('NO' if n % 2 else 'YES')\nfor i in range(n):\n    print(' '.join(map(str, input())))"}, "969": {"problem_id": 969, "answer": "s = input()\nt = list(s)\n\ndef make(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return 2\n\nprint(make(t))\n"}, "970": {"problem_id": 970, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(l[0] + l[1] + l[2])"}, "971": {"problem_id": 971, "answer": "n, b, d = list(map(int, input().split()))\na = sorted(list(map(int, input().split())))\ns = 0\nfor i in range(n):\n    if a[i] <= b:\n        s += 1\nprint(s)\n"}, "972": {"problem_id": 972, "answer": "n, m = list(map(int, input().split()))\ngrid = [[] for i in range(n)]\nfor i in range(n):\n    grid[i].append(i+1)\n\nprint(\"YES\\n\")\nfor i in range(m):\n    print(\" \".join(map(str, grid[i].split())))\n"}, "973": {"problem_id": 973, "answer": "R, C = list(map(int, input().split()))\nfor _ in range(R):\n    s = input()\n    d = list(map(int, s.split()))\n    if d[0] == 'W':\n        d[1] = 'W'\n    elif d[0] == 'S':\n        d[1] = 'S'\n    else:\n        d[1] = 'W'\n    print('Yes')\n"}, "974": {"problem_id": 974, "answer": "n = int(input())\nfor i in range(n):\n    print(2*(n-i), end=' ')\n    if n%2 == 0:\n        print(i+1)\n    else:\n        print(i+1)"}, "975": {"problem_id": 975, "answer": "n = int(input())\nl = [int(i) for i in input().split()]\nprint(l[0])"}, "976": {"problem_id": 976, "answer": "n, x = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\ndef max(x):\n    if x == l[x]:\n        return x\n    elif x == l[x-1]:\n        return x\n    else:\n        return min(l[x:])\n\nfor i in range(n):\n    l.append(int(input()))\n\nmax(l)\n\nprint(max(l))"}, "977": {"problem_id": 977, "answer": "import sys\ninput = sys.stdin.readline\n\nn, a = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nfor i in range(n):\n    x = a[i]\n    if x not in xor(a[i]):\n        xor(a[i])\n    elif x % a[i] == 0:\n        xor(a[i])\n    else:\n        xor(a[i])\n\nprint(len(x))\n"}, "978": {"problem_id": 978, "answer": "import sys\ninput = sys.stdin.readline\n\nk = int(input())\n\ndef func(x):\n    if x == 0:\n        return 1\n    elif x == 1:\n        return 2\n    else:\n        return 3\n\nl = []\nfor i in range(k):\n    l.append(func(i))\n\nprint('YES' if l[0] == '1' else 'NO')\n"}, "979": {"problem_id": 979, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nMOD = 10**9 + 7\n\n# A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, SX, TX, X, Y, Z\n\ndef main():\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    e = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    h = list(map(int, input().split()))\n    i = 0\n    j = 0\n    k = 0\n    l = 0\n    mx = 0\n    for i in range(n):\n        if a[i] - a[i - 1] == 0:\n            mx = max(mx, a[i] - a[i - 1])\n        elif a[i] - a[i - 1] == 1:\n            mx = max(mx, a[i] - a[i - 1])\n        else:\n            mx = max(mx, a[i] - a[i - 1])\n        if mx == mx:\n            print(mx)\n            break\n        elif mx == mx:\n            print(mx)\n            break\n        elif mx % mx == 0:\n            print(mx)\n            break\n        elif mx % mx == 1:\n            print(mx)\n            break\n        elif mx % mx == 2:\n            print(mx)\n            break\n        elif mx % mx == 3:\n            print(mx)\n            break\n        elif mx % mx == 4:\n            print(mx)\n            break\n        elif mx % mx == 5:\n            print(mx)\n            break\n        elif mx % mx == 6:\n            print(mx)\n            break\n        elif mx % mx == 7:\n            print(mx)\n            break\n        elif mx % mx == 8:\n            print(mx)\n            break\n        elif mx % mx == 9:\n            print(mx)\n            break\n    "}, "980": {"problem_id": 980, "answer": "k,n = list(map(int,input().split()))\ns = input()\nfor i in range(k):\n    s.append(input())\nprint(''.join(sorted(s[::-1])))"}, "981": {"problem_id": 981, "answer": "def __starting_point():\n    s = input()\n    print(s.count('0'))\n\n__starting_point()"}, "982": {"problem_id": 982, "answer": "for _ in range(int(input())):\n    l,r = map(int,input().split())\n    a = (r//2)%len(a)\n    b = (r//2)//a\n    if a == b:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "983": {"problem_id": 983, "answer": "n,p,r = map(int,input().split())\na = list(map(int,input().split()))\na.sort()\ns = 0\nfor i in range(n):\n    if a[i] == 0:\n        s += p*a[i]\n    else:\n        s += p*a[i]\nprint(s)"}, "984": {"problem_id": 984, "answer": "from collections import defaultdict, deque\nn = int(input())\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x == y:\n        print(1)\n    else:\n        print(0)\n"}, "985": {"problem_id": 985, "answer": "import sys\n\ndef dijkstra(n, d, s):\n    if n == 0:\n        return d\n    else:\n        ds = []\n        for i in range(n):\n            ds.append(sorted(list(d.copy())))\n        ds.extend(list(d.copy()))\n        ds.extend(list(range(n, 0, -1)))\n        return ds\n\nn = int(input())\nd = dijkstra(n, d, 0)\nprint(d[0])"}, "986": {"problem_id": 986, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef dfs(i, s):\n    if s == 0:\n        return 1\n    elif s == 1:\n        return 0\n    else:\n        return min(a[i] + b[i] for i in range(n))\n\nprint(dfs(0, k - 1))"}, "987": {"problem_id": 987, "answer": "n, m = list(map(int, input().split()))\np = list(map(str, input().split()))\na = list(map(str, input().split()))\n\ndef is_max(a, b):\n    if len(a) == len(b):\n        return True\n    elif len(a) == len(b):\n        return False\n    else:\n        return False\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    p = list(map(str, input().split()))\n    a = list(map(str, input().split()))\n    b = list(map(str, input().split()))\n    print(is_max(a, b))\n__starting_point()"}, "988": {"problem_id": 988, "answer": "from sys import stdin\ninput = stdin.readline\n\ndef max_l(s):\n    return list(map(int, s.split('-')))\n\ndef max_r(s):\n    return list(map(int, s.split('-')))\n\ndef main():\n    n = int(input())\n    s = input()\n    print(''.join(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "989": {"problem_id": 989, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nmax = 0\nmin = 0\nfor i in range(n):\n    if a[i] > max:\n        max = a[i]\n    else:\n        min = a[i]\n        a[i] = min\nprint(max)\n"}, "990": {"problem_id": 990, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef dfs(vertex, parent):\n    if parent ==vertex:\n        return 1\n    elif parent ==vertex:\n        return 0\n    else:\n        return dfs(vertex, parent) + 1\n\n# \u8981\u7d20\u6570\u7ec4\n# dfs(vertex, parent)\n# print(dfs(vertex, parent))\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\n# \u8981\u7d20\u6570\u7ec4\n# dfs(vertex, parent)\n# print(dfs(vertex, parent))\n\nans = 0\nfor i in range(N-1):\n    if A[i] == B[i]:\n        ans += 1\n        continue\n    else:\n        ans += dfs(vertex, A[i] - B[i])\n\nprint(ans)\n"}, "991": {"problem_id": 991, "answer": "from collections import deque\nN,M,S = list(map(int,input().split()))\nG = [[] for _ in range(N)]\nfor i in range(1,N):\n    G[i].append(S)\n    G[i-1].append(S)\n\ndef main():\n    N,M = list(map(int,input().split()))\n    S = 10**100\n    A = [int(i) for i in input().split()]\n    B = [int(i) for i in input().split()]\n    u = 0\n    v = 0\n    for i,c in enumerate(G[N-1]):\n        if A[i] == c:\n            u += 1\n        elif A[i] == 0:\n            v += 1\n        else:\n            u -= 1\n            v -= 1\n        if u == 0:\n            print(u)\n        else:\n            print(u-1)\n\nmain()"}, "992": {"problem_id": 992, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 998244353\n\ndef main():\n    N, S = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    MOD = 998244353\n    \n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2,3]\n    # Base case: A = [1,2"}, "993": {"problem_id": 993, "answer": "def pair(l, r):\n    a = 0\n    for i in range(l):\n        a += i\n    return a\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\npair(1, N)\npair(2, N)\npair(3, N)\npair(4, N)\npair(5, N)\npair(6, N)\npair(7, N)\npair(8, N)\npair(9, N)\npair(10, N)\npair(11, N)\npair(12, N)\npair(13, N)\npair(14, N)\npair(15, N)\npair(16, N)\npair(17, N)\npair(18, N)\npair(19, N)\npair(20, N)\npair(21, N)\n\nprint(sum(A))"}, "994": {"problem_id": 994, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\nd, h = [], []\nfor i in range(n):\n    d.append(int(input()))\n    h.append(0)\n\nd[0] = 1\nh[0] = 1\nfor i in range(1, 10**8):\n    if d[i] == 0:\n        d[i] = 1\n    elif d[i] == 1:\n        d[i] = max(d[i], d[i-1] + 1)\n    else:\n        d[i] = max(d[i], d[i-1] - 1)\n\nprint(max(d))\n"}, "995": {"problem_id": 995, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    if a[i] == a[i-1]:\n        l.append(i)\n    else:\n        l.append(i-1)\nprint(sum(l))"}, "996": {"problem_id": 996, "answer": "from collections import deque\ndef main():\n    n, m, k = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    d = deque([0])\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n        d.append(l[-1])\n        k += 1\n    print(len(l), end=' ')\n    for i in range(len(l)):\n        print(i, end=' ')\n        if l[i] == '1':\n            print(k)\n        elif l[i] == '0':\n            print(k)\n        else:\n            print(k - 1)\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n          "}, "997": {"problem_id": 997, "answer": "s = input()\nn = len(s)\nif s[0] == '0' or s[-1] == '0':\n    print(''.join(s[::-1]))\nelse:\n    print(''.join(s[n::-1]))"}, "998": {"problem_id": 998, "answer": "n,x=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\nans=0\nfor i in range(len(l)):\n    if l[i]!=l[i-1]:\n        ans+=1\n        break\nprint(ans)\n"}, "999": {"problem_id": 999, "answer": "n = int(input())\nl = list(map(int,input().split()))\n\ndef maxDistance(a,b):\n    return abs(a[0]-b[0]) + abs(a[1]-b[1])\n\ndef maxDistanceB(a,b):\n    return maxDistance(a,b)\n\ndef maxDistance(a,b):\n    return maxDistanceB(a,b)\n\ndef maxDistanceB(a,b):\n    return maxDistance(a,b)\n\ndef main():\n    n = int(input())\n    l = list(map(int,input().split()))\n    m = int(input())\n    print(maxDistanceB(l,m))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1000": {"problem_id": 1000, "answer": "n,v = list(map(int,input().split()))\nc = v\nfor i in range(n-1):\n    if i == 1:\n        c += 1\n    else:\n        c -= 1\nprint(c)\n"}, "1001": {"problem_id": 1001, "answer": "from bisect import bisect_left as bl\nn = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n    s += bl(l[i])\nprint(s)"}, "1002": {"problem_id": 1002, "answer": "import math\nn, d = list(map(int, input().split()))\nt = list(map(int, input().split()))\nfor i in range(n):\n    t[i] += 1\nprint(math.ceil(t[0]/2))"}, "1003": {"problem_id": 1003, "answer": "n, m = list(map(int, input().split()))\ns = set()\nfor i in range(m):\n    s.add(input()[i])\nprint(sum(s))"}, "1004": {"problem_id": 1004, "answer": ""}, "1005": {"problem_id": 1005, "answer": "for _ in range(int(input())):\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for i in range(d):\n        if a[i] == 1:\n            ans += 1\n        else:\n            ans += min(k - d, ans)\n    print(ans)\n"}, "1006": {"problem_id": 1006, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    print('YES')\n    if s[0] == '.':\n        print('.')\n    else:\n        print('NO')"}, "1007": {"problem_id": 1007, "answer": "import math\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return math.factorial(n - 1)\n\ndef __starting_point():\n    k, p = list(map(int, input().split()))\n    print(factorial(k))\n\n__starting_point()"}, "1008": {"problem_id": 1008, "answer": "s = input()\nfor i in range(len(s)):\n    if s[i] in s:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "1009": {"problem_id": 1009, "answer": "n, k = map(int, input().split())\ns = list(map(int, input().split()))\n\nmax_k = 0\nfor i in range(n):\n    if s[i] < max_k:\n        max_k = s[i]\n        s[i] = max_k\n\nprint(max_k)"}, "1010": {"problem_id": 1010, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = 1\nprint(len(a))"}, "1011": {"problem_id": 1011, "answer": "from collections import deque, defaultdict\nn = int(input())\nd = defaultdict(int)\nfor _ in range(n):\n    a, b = map(int, input().split())\n    d[a] = b\n    d[b] = a\nprint(sum(d[b]))"}, "1012": {"problem_id": 1012, "answer": "t = int(input())\nfor i in range(t):\n    s = input()\n    l = len(s)\n    if s[0] == 'a' or s[-1] == 'b' or s[-1] == 'c' or s[-1] == 'd' or s[-1] == 'e' or s[-1] == 'f' or s[-1] == 'g':\n        print(-1)\n    elif s[0] == 'a' or s[-1] == 'b' or s[-1] == 'c' or s[-1] == 'd' or s[-1] == 'e' or s[-1] == 'f':\n        print(l)\n    elif s[0] == 'a' or s[-1] == 'b' or s[-1] == 'c' or s[-1] == 'd' or s[-1] == 'e' or s[-1] == 'f':\n        print(l-1)\n    elif s[0] == 'a' or s[-1] == 'b' or s[-1] == 'c' or s[-1] == 'd' or s[-1] == 'e' or s[-1] == 'f':\n        print(l-1)\n    elif s[0] == 'a' or s[-1] == 'b' or s[-1] == 'c' or s[-1] == 'd' or s[-1] == 'e' or s[-1] == 'f':\n        print(l-1)\n    elif s[0] == 'a' or s[-1] == 'b' or s[-1] == 'c' or s[-1] == 'd' or s[-1] == 'e' or s[-1] == 'f':\n        print(l-1)\n    elif s[0] == 'a' or s[-1] == 'b' or s[-1] == 'c' or s[-1] == 'd' or s[-1] == 'e' or s[-1] == 'f':\n        print(l-1)\n    elif s[0] == 'a' or s[-1] == 'b' or s[-1] == 'c' or s[-1] == 'd' or s[-1] == 'e' or s[-1] == 'f':\n        print(l-1)\n    elif s[0] == 'a' or s[-1] == 'b' or s[-1] == 'c' or s[-1] == 'd' or s[-1] == 'e' or s[-1] == 'f':\n        print(l-1)\n    elif s[0] == 'a' or s[-1] == 'b' or s[-1] == 'c' or s[-1] == 'd' or s[-1] == 'e' or s[-1] == 'f':\n        print(l-1)\n    elif s[0] == 'a' or s[-1] == 'b' or s[-1] == 'c' or s[-1] == 'd' or s[-1] == 'e' or s[-1] == 'f':\n        print(l-1)\n    elif s[0] == 'a' or s[-1] == 'b' or s[-1] == 'c' or s[-1] == 'd' or s[-1] == 'e' or s[-1] == 'f':\n        print(l-1)\n    elif s[0] == 'a' or s[-1] == 'b' or s[-1] == 'c' or s[-1] == 'd' or s[-1] =="}, "1013": {"problem_id": 1013, "answer": "from sys import stdin\n\nn, m = list(map(int, stdin.readline().split()))\n\ns = 0\nfor i in range(n):\n    x, y = list(map(int, stdin.readline().split()))\n    s += x\n    y += x\n\nprint(s)\n"}, "1014": {"problem_id": 1014, "answer": "n = int(input())\nd = {}\nfor i in range(n):\n    d[i] = list(map(int,input().split()))\nl = len(d)\ns = 0\nfor i in range(n):\n    if d[i] == d[i-1]:\n        s += 1\nprint(s)"}, "1015": {"problem_id": 1015, "answer": "n = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n    a[i] = 1\n    if i == 0:\n        a[i] = 0\n    elif i == n-1:\n        a[i] = max(a[i],0)\n    else:\n        a[i] = max(a[i],a[i-1])\nprint(max(a))"}, "1016": {"problem_id": 1016, "answer": "def __starting_point():\n    n, m = list(map(int, input().split()))\n    x, y = list(map(int, input().split()))\n    d = [0] * m\n    for i in range(n):\n        x[i] += x[i - 1]\n        y[i] += y[i - 1]\n        d[i] = max(d[i], x[i] - y[i])\n    print(m)\n__starting_point()"}, "1017": {"problem_id": 1017, "answer": "from sys import setrecursionlimit\nsetrecursionlimit(10**6)\nn = int(input())\ns = list(map(int, input().split()))\nprint(max(s[0], s[-1]))"}, "1018": {"problem_id": 1018, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] += 1\nprint(a[n])"}, "1019": {"problem_id": 1019, "answer": "n, d = map(int, input().split())\nif n == 0:\n    print(\"0\")\n    return\nfor i in range(n-1, -1, -1):\n    if i % 2 == 0:\n        d[i] = d[i+1] + d[i]\n    elif i % 3 == 0:\n        d[i] = d[i+1] + d[i]\n    elif i % 4 == 0:\n        d[i] = d[i+1] + d[i]\n    elif i % 6 == 0:\n        d[i] = d[i+1] + d[i]\n    elif i % 8 == 0:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 0:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 1:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 2:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 3:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 4:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 5:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 6:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 7:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 8:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 9:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 10:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 11:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 12:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 13:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 14:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 15:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 16:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 17:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 18:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 19:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 20:\n        d[i] = d[i+1] + d[i]\n    elif i % 12 == 21:\n        d[i] = d[i+1] + d[i]\n    elif"}, "1020": {"problem_id": 1020, "answer": "from bisect import *\nfrom heapq import *\nfrom collections import deque\n\ndef dijkstra(s, n, d):\n    q = deque()\n    q.append(s)\n    while len(q) > 0:\n        curr = q.popleft()\n        for i in range(len(q)):\n            if curr[0] == d[i]:\n                d[i] = curr[1] + 1\n                q.append(curr[1])\n                continue\n            elif curr[0] == d[i]:\n                d[i] = curr[1] + 1\n                q.append(curr[1])\n                continue\n            else:\n                q.append(curr[1])\n                continue\n        q.append(curr[1])\n    return q\n\ndef bisect(l, r, start=0):\n    if start == len(l) - 1:\n        return l[start]\n    else:\n        r += bisect(l[start], r, start+1)\n        return r\n\ndef dijkstra(s, n, d):\n    q = deque()\n    q.append(s)\n    while len(q) > 0:\n        curr = q.popleft()\n        for i in range(len(q)):\n            if curr[0] == d[i]:\n                d[i] = curr[1] + 1\n                q.append(curr[1])\n                continue\n            elif curr[0] == d[i]:\n                d[i] = curr[1] + 1\n                q.append(curr[1])\n                continue\n            else:\n                q.append(curr[1])\n                continue\n        q.append(curr[1])\n    return q\n\ndef main():\n    n, m = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        d[s[i]] = i\n        s[i] = s[i] // 2\n    q = dijkstra(s, n, d)\n    print(q.popleft())\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1021": {"problem_id": 1021, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nfor i in range(n-1):\n    if l[i]%2 == 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"}, "1022": {"problem_id": 1022, "answer": ""}, "1023": {"problem_id": 1023, "answer": "n, m, t = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nfor i in range(m):\n    if b[i] > a[i]:\n        c += 1\n    elif b[i] == a[i]:\n        c += 1\nprint(c)"}, "1024": {"problem_id": 1024, "answer": "n = int(input())\na = [0]*n\nfor i in range(n):\n    a[i] = (a[i] + 1) % 2\nprint(a[n-1])"}, "1025": {"problem_id": 1025, "answer": "n = int(input())\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x == 0:\n        print(0)\n    elif y == 0:\n        print(1)\n    else:\n        a = x * y\n        b = x * y\n        c = x * y\n        d = x * y\n        e = x * y\n        f = x * y\n        g = x * y\n        h = x * y\n        i = 0\n        j = 0\n        while i < n and j < n:\n            if x[i] == x[j]:\n                i += 1\n            elif y[i] == y[j]:\n                j += 1\n            elif x[i] == x[j]:\n                j += 1\n            elif y[i] == y[j]:\n                e += 1\n            else:\n                e += 1\n                i += 1\n                j += 1\n                break\n                \n        print(a, b, c, d, e, f, h, i, j, k)\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n  "}, "1026": {"problem_id": 1026, "answer": "n = int(input())\nl = list(map(int, input().split()))\na = [0]*n\nfor i in range(n):\n    a[i] = l[i]\n\nd = {}\nfor i in range(n):\n    d[i] = max(l[i], a[i])\n\nprint(max(d.values()))\n"}, "1027": {"problem_id": 1027, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    if a[0] % 2 == 1:\n        print(a[1])\n    else:\n        print(a[0])"}, "1028": {"problem_id": 1028, "answer": "n, m = map(int, input().split())\npairs = [0] * (n + 1)\nfor i in range(n):\n    pairs[i] = min(pairs[i], i + 1)\nprint(len(pairs))"}, "1029": {"problem_id": 1029, "answer": "from collections import deque\ndef f(a,b):\n    if a>b:\n        return 0\n    elif b>a:\n        return 1\n    else:\n        return f(a,b)\n\np=int(input())\nq=deque([int(x) for x in input().split()])\nwhile q:\n    q.popleft()\n    a,b=q.popleft()\n    if a==b:\n        print(2)\n        return\n    elif a>b:\n        a,b=b,a\n        print(a)\n        return\n    else:\n        print(a)\n"}, "1030": {"problem_id": 1030, "answer": "def main():\n    n, p, k = list(map(int, input().split()))\n    if n == 1:\n        print(\"<<\\n\")\n    elif n == 2:\n        print(\"<<\\n\")\n    else:\n        x = int(input())\n        for i in range(n - 1):\n            x *= i\n        print(\"<<\\n\")\n\nmain()\n"}, "1031": {"problem_id": 1031, "answer": "from sys import stdin, stdout\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\nx = [0]*n\nfor i in range(n):\n    x[i] = int(stdin.readline())\nprint('\\n'.join(map(str, x)))"}, "1032": {"problem_id": 1032, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, a = list(map(int, input().split()))\np = list(map(int, input().split()))\nfor i in range(n):\n    x = list(map(int, input().split()))\n    print(x.count(1))\n"}, "1033": {"problem_id": 1033, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn,h = list(map(int,input().split()))\ns = list(map(int,input().split()))\nprint(int(stdin.readline()))\n\n\n"}, "1034": {"problem_id": 1034, "answer": "import sys\ninput = sys.stdin.readline\n\nX, Y, Z = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nfor i in range(1, X + Y + Z):\n    sum = 0\n    for j in range(i, X + Y + Z):\n        sum += A[j]\n        sum -= B[j]\n        sum += C[j]\n    print(sum)"}, "1035": {"problem_id": 1035, "answer": "def main():\n    A, B = map(int, input().split())\n    ans = 0\n    for i in range(A):\n        if i % A == 0:\n            ans += 1\n        else:\n            ans += 2\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1036": {"problem_id": 1036, "answer": "n, k = list(map(int, input().split()))\ns = input()\nl = len(s)\nr = len(s)\nprint(('\\n'.join(map(str, l))))\n"}, "1037": {"problem_id": 1037, "answer": "N = int(input())\nA = list(map(int, input().split()))\ncnt = 0\nfor i in range(N):\n    cnt += sum(A[i]*(i-1) + A[i+1]*(i-2) + A[i+2]*(i-3) + A[i+3]*(i-4) + A[i+4]*(i-5) + A[i+5]*(i-6) + A[i+6]*(i-7) + A[i+7]*(i-8) + A[i+8]*(i-9) + A[i+9]*(i-10)) for j in range(i+1, i+2)\n}, "1038": {"problem_id": 1038, "answer": "def f(A, B):\n    if A%2==0:\n        x = bin(A)\n        y = int(x)\n        return y\n    else:\n        x = '1'\n        y = '0'\n        return y\n\nn = int(input())\nfor i in range(n):\n    print(f(i, \" \"))\n"}, "1039": {"problem_id": 1039, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nq = int(input())\nfor _ in range(q):\n    a.append(list(map(int, input().split())))\nprint('\\n'.join(map(str, a)))"}, "1040": {"problem_id": 1040, "answer": "def main():\n    n = int(input())\n    s = list(map(int, input().split()))\n    print(len(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1041": {"problem_id": 1041, "answer": "n = int(input())\npoints = list(map(int, input().split()))\nfor i in range(n):\n    s = input()\n    if s[0] == s[1] or s[0] == s[2]:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "1042": {"problem_id": 1042, "answer": "def factorial(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return n * factorial(n // 2)\n    else:\n        return n\n\nn = int(input())\nmod = 10**9 + 7\nfor i in range(n):\n    x, y = map(int, input().split())\n    x %= mod\n    y %= mod\nprint(factorial(mod))"}, "1043": {"problem_id": 1043, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n    b.append(a[i])\n    a.append(b[-1] + int(input()))\n\nprint(len(b))"}, "1044": {"problem_id": 1044, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    x = list(map(int, input().split()))\n    if x[0] == x[1]:\n        print(1)\n        continue\n    else:\n        print(2)\n        continue\n    print(3)\n    \n"}, "1045": {"problem_id": 1045, "answer": "n = int(input())\nfor i in range(n):\n    print(max(map(int, input().split())))"}, "1046": {"problem_id": 1046, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\ndef func(s):\n    return 0 if s == '0' else 1 if s == '1' else 0\n\ndef __starting_point():\n    n = int(input())\n    s = list(map(int, input().split()))\n    print(func(s))\n\n__starting_point()"}, "1047": {"problem_id": 1047, "answer": "n = int(input())\nprint(\"\".join(map(str, list(map(int, input().split()))) for i in range(n)))"}, "1048": {"problem_id": 1048, "answer": "n = int(input())\ns = input()\ns = list(s)\nfor i in range(n):\n    x, y = list(map(int, s.split()))\n    if x == y:\n        print(1)\n    elif x + y == y:\n        print(1)\n    else:\n        print(max(s, x, y))\n"}, "1049": {"problem_id": 1049, "answer": "n, d = list(map(int, input().split()))\ns = input()\na = 0\nfor i in range(n):\n    if s[i] == '1':\n        a += 1\nprint(a)\n"}, "1050": {"problem_id": 1050, "answer": "from math import ceil\nn,m,k = map(int,input().split())\npts = list(map(int,input().split()))\nnums = list(map(int,input().split()))\npts.sort()\nnums.sort()\npts.reverse()\n\nfor i in range(m):\n    if nums[i] == 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n"}, "1051": {"problem_id": 1051, "answer": "def main():\n    from collections import deque\n    input = lambda: list(map(int, input().split()))\n    l = len(input())\n    q = deque()\n    q.append(input())\n    for i in range(q[0]):\n        if q[i] in l:\n            print(i)\n        else:\n            q.append(i)\n    q.append(input())\n    return int(input())"}, "1052": {"problem_id": 1052, "answer": "n, k = list(map(int, input().split(' ')))\nans = 0\nfor i in range(1, n + 1):\n    ans += i\nprint(ans)\n"}, "1053": {"problem_id": 1053, "answer": "from sys import stdin,stdout\nfrom math import ceil,sqrt,log,gcd,isf,fsdd,fsgeorussian,inf,factorial,fmod,copysign,copysign2,copysign,mod,sqrt,pi,sin,pi,sinf,sgn,sqrt,asin,sinfmod,sinfmod2,sinfmod2f,asinasin,asinasin2,asinasin2f\nfrom collections import defaultdict as dd, deque,OrderedDict \nfrom heapq import heappop,heappush,heapify,heappushpop,heappop,heappoppoppop,heappoppoppoppop\nfrom bisect import bisect_left as bl,bisect_right as br,bisect_top as br,bisect_toppop as br,bisect_left as br,bisect_right as br,primes\nfrom bisect import bisect_left as bl,bisect_right as br,bisect_top as br,bisect_left as br,bisect_right as br,primes as prd,digits as dp,compress as compress\nfrom itertools import permutations as p,combinations as comb,groupby as gcd,accumulate as accumulate\nfrom collections import deque,OrderedDict \nfrom functools import lru_cache as lc, reduce as reduce\nfrom operator import mul as mulp,mul asul,ul asul_mul,ul_mul_mul\nfrom numpy import phi,floating,array,array_precision as abc,power as pfac,power_fac,power_div,power_mul\nfrom scipy.special import combi as comb,power as power,power_power,power_denom,power_div as div,power_mul as power_denom,power_denom_mul as div,power_power as power_denom\nfrom heapq import heapify,heappop,heappush,heapifypop,heappoppoppop,heappoppoppoppop\nfrom datetime import datetime as dt, timegm from mem to timegm from mem to timegm from timegm\nfrom statistics import mean as mpg,sl++++++++>I,S,MM,S,64,64.64,64.64d,d\nfrom statistics import mean as mpg,sl++++++++>I,S,MM,S,64,64.64d,delta\nfrom fractions import Fraction as F,gcd as g,fmod as mod,fmod2 as mod,fmod2f as mod,fmod2f2 as mod,fmod2f2f as mod,fmod2f2f2 as mod,fmod2f2f2f as mod,fmod2f2f2f2.pow\nfrom time import perf_inf as perf,get_time as get_time,join as get_join,joinpop as get_joinpop\nfrom decimal import Decimal,isos,str,binary as isos,float as isos,int as isos,float as isos,int as isos,int as isos,int as hex,int as hex,int as hex,int as oct,binary as oct,binaryoct as oct,binaryoct4 as binaryoct,binaryoct4 as binaryoct4\nfrom random import shuffle,randrange,cmp as compare,georussian asussian,isos as isos,numpy as numpy,quant asquant,quantize asquant,quantize2quant,quantize2quant2,round as round,sqaol as SQUAILABLE,sqrtsqrtsqrtsqrtsqrtsqrtsqrt\nfrom heapq import *\nfrom collections import deque,OrderedDict as dd,RUNTIME,heapq = [],{},{},{}\nfrom bisect import bisect_left as bl,bisect_left as br,bisect_top as br,bisect_right as br,bisect_left as br,bisect_right as br,primes as prd,digits as dp,compress as compress\nfrom functools import lru_cache as lc,reduce as reduce,mod as mod,sqrt as square,pi as sin,sqaol as SQUAILABLE,truediv assqurored,unpow as pow,factorial as fact,factorialmod as fact,factorialmod2 as fact,factorialmod2f as fact,factorialmod2f2"}, "1054": {"problem_id": 1054, "answer": "def __starting_point():\n    n = int(input())\n    print(n)\n\n__starting_point()"}, "1055": {"problem_id": 1055, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] % 2 == 0:\n        s += 1\nprint(s)"}, "1056": {"problem_id": 1056, "answer": ""}, "1057": {"problem_id": 1057, "answer": "n = int(input())\ns = input()\nl = len(s)\nfor i in range(l):\n    if s[i] not in s[i+1:]:\n        s[i+1:i+1] = s[i]\nprint(sum(s.count(0)%(n-1) for i in range(l)))\n\n"}, "1058": {"problem_id": 1058, "answer": "n = int(input())\nl = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if l[i] == 1:\n        cnt += 1\n        l[i] = 0\n    elif l[i] == 0:\n        cnt += 1\n        l[i] = 0\n    else:\n        cnt += 1\n        l[i] = 0\nprint(cnt)"}, "1059": {"problem_id": 1059, "answer": "import sys\ninput = sys.stdin.readline\n\nk = int(input())\nfor _ in range(k):\n    n = int(input())\n    d = {}\n    for i in range(n):\n        d[i] = list(map(int,input().split()))\n    s = ''.join(d.items())\n    print(s)"}, "1060": {"problem_id": 1060, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    if a[i] % 2 == 0:\n        s.add(i)\n        continue\n    else:\n        print(s.pop(i))\n"}, "1061": {"problem_id": 1061, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    sys.setrecursionlimit(100000)\n    input = lambda: readline().rstrip('\\n')\n    \n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input-------------------input-------------------\n    #-------------------input"}, "1062": {"problem_id": 1062, "answer": "def hamming_distance(s,t):\n    if len(s)<=len(t):\n        return 0\n    else:\n        i,j=0,len(s)-1\n        while i<len(s) and t[i]==s[i]:\n            i+=1\n            j+=1\n        return hamming_distance(s,t)\n\nn = int(input())\ns = input()\nt = input()\n\ns = list(s)\nt = list(t)\n\n#print(s)\n#print(t)\n\nfor i in range(n):\n    s.append(s[i])\n\n#print(s)\n#print(t)\n\nprint(hamming_distance(s,t))\n"}, "1063": {"problem_id": 1063, "answer": "n = int(input())\nfor i in range(n):\n    a = list(map(int,input().split()))\n    print(a[0])\n"}, "1064": {"problem_id": 1064, "answer": "from collections import deque\nn, m, k = list(map(int, input().split()))\npos = [0]*n\nfor i in range(n-1):\n    if pos[i] == 0:\n        pos[i] = 1\n    else:\n        pos[i] = 2\n\n# a list of integers which represents the positions of post lamps\n# pos[i] = 0\n# pos[i] = 1\n# pos[i] = 2\n# pos[i] = 3\n# pos[i] = 4\n# pos[i] = 5\n# pos[i] = 6\n# pos[i] = 7\n# pos[i] = 8\n# pos[i] = 9\n# pos[i] = 10\n# pos[i] = 11\n# pos[i] = 12\n# pos[i] = 13\n# pos[i] = 14\n# pos[i] = 15\n# pos[i] = 16\n# pos[i] = 17\n# pos[i] = 18\n# pos[i] = 19\n# pos[i] = 20\n# pos[i] = 21\n# pos[i] = 22\n# pos[i] = 23\n# pos[i] = 24\n# pos[i] = 25\n# pos[i] = 26\n# pos[i] = 27\n# pos[i] = 28\n# pos[i] = 29\n# pos[i] = 30\n# pos[i] = 31\n# pos[i] = 32\n# pos[i] = 33\n# pos[i] = 34\n# pos[i] = 35\n# pos[i] = 36\n# pos[i] = 37\n# pos[i] = 38\n# pos[i] = 39\n# pos[i] = 40\n# pos[i] = 41\n# pos[i] = 42\n# pos[i] = 43\n# pos[i] = 44\n# pos[i] = 45\n# pos[i] = 46\n# pos[i] = 47\n# pos[i] = 48\n# pos[i] = 49\n# pos[i] = 50\n# pos[i] = 51\n# pos[i] = 52\n# pos[i] = 53\n# pos[i] = 54\n# pos[i] = 55\n# pos[i] = 56\n# pos[i] = 57\n# pos[i] = 58\n# pos[i] = 59\n# pos[i] = 60\n# pos[i] = 61\n# pos[i] = 62\n# pos[i] = 63\n# pos[i] = 64\n# pos[i] = 65\n# pos[i] = 66\n# pos[i] = 67\n# pos[i] = 68\n# pos[i] = 69\n# pos[i] = 70\n# pos[i] = 71\n# pos[i] = 72\n# pos[i] = 73\n# pos[i] = 74\n# pos[i] = 75\n# pos[i] = 76\n# pos[i] = 77\n# pos[i] = 78\n# pos[i] = 79\n# pos[i] = 80\n# pos[i] = 81\n# pos[i] = 82\n# pos[i] = 83\n# pos[i] = 84\n# pos[i] = 85\n# pos[i] = 86\n# pos[i] = 87\n# pos[i] = 88\n# pos[i] = 89\n# pos[i] = 90\n# pos[i] = 91\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos[i] = 92\n# pos"}, "1065": {"problem_id": 1065, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k, M, D = list(map(int, input().split()))\n\ndef maxCandies(n, k, M, D):\n    if n == 1:\n        return M\n    elif k == 1:\n        return M\n    else:\n        res = 0\n        for i in range(1, M + 1):\n            res += k\n            res %= M\n        return res\n\ndef maxCandi(n, k, M, D):\n    if n == 1:\n        return M\n    elif k == 1:\n        return M\n    else:\n        res = 0\n        for i in range(1, M + 1):\n            res += k\n            res %= M\n        return res\n\ndef maxProfit(n, k, M, D):\n    if n == 1:\n        return M\n    elif k == 1:\n        return M\n    else:\n        res = 0\n        for i in range(1, M + 1):\n            res += k\n            res %= M\n        return res\n\ndef maxVowel(n, k, M, D):\n    if n == 1:\n        return M\n    elif k == 1:\n        return M\n    else:\n        res = 0\n        for i in range(1, M + 1):\n            res += k\n            res %= M\n        return res\n\ndef maxChowlene(n, k, M, D):\n    if n == 1:\n        return M\n    elif k == 1:\n        return M\n    else:\n        res = 0\n        for i in range(1, M + 1):\n            res += k\n            res %= M\n        return res\n\ndef maxChowlene(n, k, M, D):\n    if n == 1:\n        return M\n    elif k == 1:\n        return M\n    else:\n        res = 0\n        for i in range(1, M + 1):\n            res += k\n            res %= M\n        return res\n\ndef maxVowel(n, k, M, D):\n    if n == 1:\n        return M\n    elif k == 1:\n        return M\n    else:\n        res = 0\n        for i in range(1, M + 1):\n            res += k\n            res %= M\n        return res\n\ndef maxCandi(n, k, M, D):\n    if n == 1:\n        return M\n    elif k == 1:\n        return M\n    else:\n        res ="}, "1066": {"problem_id": 1066, "answer": "n, k = list(map(int, input().split()))\nif k % 2 == 0:\n    print(n)\nelse:\n    print(k)\n"}, "1067": {"problem_id": 1067, "answer": "from bisect import bisect_left as bl\nn = int(input())\na = list(map(int, input().split()))\nb = sorted(a)\nprint(min(b[0], b[-1]))"}, "1068": {"problem_id": 1068, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    s = input().strip()\n    l = len(s)\n    for i in range(l):\n        if s[i] == '+':\n            s[i] = '+'\n        else:\n            s[i] = '='\n            \n    print('+', s)\n    \n    \ndef __starting_point():\n    solve()\n\n__starting_point()"}, "1069": {"problem_id": 1069, "answer": "n = int(input())\nl = [int(i) for i in input().split()]\nprint(l[n] % 1000000007)"}, "1070": {"problem_id": 1070, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] += 1\nprint(max(a))\n"}, "1071": {"problem_id": 1071, "answer": "import sys\ninput = sys.stdin.readline\n\nclass Solution:\n    def __init__(self):\n        self.d = {}\n        self.s = 0\n        self.max_len = 0\n        self.max_len_cnt = 0\n        self.max_len = max(self.max_len, 0)\n        self.s = max(self.s, 0)\n        self.max_len_cnt = max(self.max_len, 2)\n        self.max_len = max(self.max_len, 3)\n        self.s = max(self.s, 0)\n        self.max_len_cnt = max(self.max_len, 4)\n        self.max_len = max(self.max_len, 5)\n        self.s = max(self.s, 0)\n        self.max_len_cnt = max(self.max_len, 6)\n        self.max_len = max(self.max_len, 7)\n        self.s = max(self.s, 0)\n        self.max_len_cnt = max(self.max_len, 8)\n        self.max_len = max(self.max_len, 9)\n        self.s = max(self.s, 0)\n        self.max_len_cnt = max(self.max_len, 10)\n        self.max_len = max(self.max_len, 11)\n        self.s = max(self.s, 0)\n        self.max_len = max(self.max_len, 12)\n        self.s = max(self.s, 0)\n        self.max_len_cnt = max(self.max_len, 13)\n        self.max_len = max(self.max_len, 14)\n        self.s = max(self.s, 0)\n        self.max_len_cnt = max(self.max_len, 15)\n        self.max_len = max(self.max_len, 16)\n        self.s = max(self.s, 0)\n        self.max_len_cnt = max(self.max_len, 17)\n        self.max_len = max(self.max_len, 18)\n        self.s = max(self.s, 0)\n        self.max_len = max(self.max_len, 19)\n        self.s = max(self.s, 0)\n        self.max_len_cnt = max(self.max_len, 20)\n        self.max_len = max(self.max_len, 21)\n        self.max_len = max(self.max_len, 22)\n        self.s = max(self.s, 0)\n        self.max_len = max(self.max_len, 23)\n        self.s = max(self.s, 0)\n        self.max_len = max(self.max_len, 24)\n        self.s = max(self.s, 0)\n        self.max_len = max(self.max_len, 25)\n        self.s = max(self.s, 0)\n        self."}, "1072": {"problem_id": 1072, "answer": "def solve(n, m, c):\n    if n < 0:\n        return 0\n    elif m < 0:\n        return 0\n    else:\n        return min(solve(n-1, m, c), solve(n-1, m, c-1))\n\nn, m = list(map(int, input().split()))\ns = input()\nt = input()\nc = list(map(int, input().split()))\nprint(solve(n, m, c))"}, "1073": {"problem_id": 1073, "answer": "n = int(input())\nfor i in range(n):\n    cmd = list(input())\n    d = []\n    l = []\n    r = []\n    for i in cmd:\n        if i == 'U':\n            l.append(i)\n        elif i == 'R':\n            r.append(i)\n        elif i == 'D':\n            d.append(i)\n        elif i == 'L':\n            d.append(i)\n        elif i == 'D':\n            d.append(i)\n        elif i == 'L':\n            d.append(i)\n        elif i == 'R':\n            d.append(i)\n        elif i == 'D':\n            d.append(i)\n        elif i == 'L':\n            d.append(i)\n        elif i == 'R':\n            d.append(i)\n        elif i == 'D':\n            d.append(i)\n        elif i == 'L':\n            d.append(i)\n        elif i == 'R':\n            d.append(i)\n        elif i == 'D':\n            d.append(i)\n        elif i == 'L':\n            d.append(i)\n        elif i == 'R':\n            d.append(i)\n        elif i == 'D':\n            d.append(i)\n        elif i == 'L':\n            d.append(i)\n        elif i == 'R':\n            d.append(i)\n        elif i == 'D':\n            d.append(i)\n        elif i == 'L':\n            d.append(i)\n        elif i == 'R':\n            d.append(i)\n        elif i == 'D':\n            d.append(i)\n        elif i == 'L':\n            d.append(i)\n        elif i == 'R':\n            d.append(i)\n        elif i == 'D':\n            d.append(i)\n        elif i == 'L':\n            d.append(i)\n        elif i == 'R':\n            d.append(i)\n        elif i == 'D':\n            d.append(i)\n        elif i == 'L"}, "1074": {"problem_id": 1074, "answer": "from collections import deque\n\ndef main():\n    s = input()\n    d = {}\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = set()\n        else:\n            d[s[i]].add(s[i])\n            s[i] = ''.join(d[s[i]])\n    print(len(d))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1075": {"problem_id": 1075, "answer": "n = int(input())\nfor i in range(n):\n    if i % 2 == 0:\n        print(-1)\n    else:\n        print(i*(i+1)//2)\n"}, "1076": {"problem_id": 1076, "answer": "from sys import stdin,stdout\nn,m = map(int,stdin.readline().split())\nl = list(map(int,stdin.readline().split()))\nl.sort()\nans = 0\nfor i in range(m):\n    if l[i]%2==0:\n        ans += (l[i]//2)\n    else:\n        ans += (l[i]//2)\nprint(ans)"}, "1077": {"problem_id": 1077, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(m):\n    a[i] = max(a[i], a[i-1] + 1)\n\ns = 0\nfor i in range(n):\n    s += a[i]\n\nprint(s)\n"}, "1078": {"problem_id": 1078, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    print(a[i], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print(a[i-1], end=' ')\n    print("}, "1079": {"problem_id": 1079, "answer": "s = input()\nn = len(s)\n\ndef is_2(n):\n    return n > 2 and n & (-n)\n\ndef is_2(n):\n    return n == 2 and n & (-n)\n\ndef sum_2(n):\n    return sum(map(sum, input().split()))\n\ndef sum_2(n):\n    return sum(map(sum, input().split()))\n\ndef __starting_point():\n    print(sum_2(int(input())))\n__starting_point()"}, "1080": {"problem_id": 1080, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = min(a[i], a[i-1] + 1)\nprint('YES')\n"}, "1081": {"problem_id": 1081, "answer": "def main():\n    a=int(input())\n    if a%2==0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nmain()"}, "1082": {"problem_id": 1082, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a) % a)"}, "1083": {"problem_id": 1083, "answer": "n = int(input())\na = list(map(int, input().split()))\nsums = []\nfor i in range(n):\n    if a[i] == 0:\n        sums.append(i)\n    else:\n        a[i] = 0\nprint(sums[0])"}, "1084": {"problem_id": 1084, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\ns = input()\nr = list(map(int, input().split()))\nc = list(map(int, input().split()))\nfor i in range(n):\n    r[i] = '#'\n    c[i] = '#'\n    s.append(' '.join(r))\nprint('Yes') if s[0] == '#':\n    print('Yes')\n"}, "1085": {"problem_id": 1085, "answer": "#!/usr/bin/env python3\n\ndef __starting_point():\n    import sys\n    input = sys.stdin.readline\n    \n    n = int(input())\n    print(n)\n__starting_point()"}, "1086": {"problem_id": 1086, "answer": "from collections import deque\nH, W = list(map(int, input().split()))\nA = [0] + list(map(int, input().split()))\nB = [0] + list(map(int, input().split()))\nfor i in range(H):\n    A[i] += A[i-1]\n    B[i] += B[i-1]\nprint(min(min(A), min(B)))"}, "1087": {"problem_id": 1087, "answer": "import sys\ninput = sys.stdin.readline\nN,K = map(int,input().split())\nA = list(map(int,input().split()))\n\ndef bs(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return A[0]\n    else:\n        return A[n-1]\n\ndef lcm(a,b):\n    return (a * b) // (b * a)\n\ndef main():\n    n,k = lcm(A,K),lcm(A)\n    print(main())\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1088": {"problem_id": 1088, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn,k = list(map(int,input().split()))\na = list(map(int,input().split()))\nm = 998244353\nfor i in range(n):\n    x,y = list(map(int,input().split()))\n    a[i] -= 1\n    if a[i] == 0:\n        print(m)\n        continue\n    m = pow(10,m,pow(10,n-i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow(10,i-1,pow("}, "1089": {"problem_id": 1089, "answer": "def main():\n    from math import ceil\n    N, M = list(map(int, input().split()))\n    K = int(input())\n    dp = [[0]*N for _ in range(K)]\n    for i in range(K):\n        dp[i][0] = ceil(sum(dp[i-1]))\n        dp[i][1] = sum(dp[i-1])\n    ans = 0\n    for i in range(K-1):\n        ans += dp[i][0]\n        ans %= 10**9+7\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1090": {"problem_id": 1090, "answer": "N,K=map(int,input().split())\nS=list(input())\nfor i in range(N):\n    a,b=map(int,input().split())\n    if a==b:\n        print(0)\n    elif a==b:\n        print(1)\n    else:\n        print(2)\n        \n        \n"}, "1091": {"problem_id": 1091, "answer": "from collections import deque\nn = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for j in range(len(a)):\n        if a[j] > b[j]:\n            ans += b[j]\n        else:\n            ans += b[j]\n    print(ans)\n"}, "1092": {"problem_id": 1092, "answer": "n, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\ndef power(x, y):\n    if x == y:\n        return 1\n    elif x % y == 0:\n        return power(x // y, y)\n    else:\n        return power(x % y, y)\n\ndef mod(x, y):\n    return 10 ** 9 + 7\n\nn, m = list(map(int, input().split()))\n\n# print(l)\n# print(l[0])\n# print(l[1])\n\nfor i in range(n):\n    x = list(map(int, input().split()))\n    l.append(x)\n    l.pop(0)\n    l.append(x)\n\n# print(l)\n# print(l[0])\n# print(l[1])\n\nprint(mod(m, 100000007))\n"}, "1093": {"problem_id": 1093, "answer": ""}, "1094": {"problem_id": 1094, "answer": "n = int(input())\nlist = []\nfor i in range(n):\n    print(list[i], end=' ')\n    if len(list) == 0:\n        list.append(i)\n    else:\n        list.append(i)\nprint(' '.join(list))"}, "1095": {"problem_id": 1095, "answer": "import sys\ninput = sys.stdin.readline\n\nn, y = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\ndef __starting_point():\n    n, y = list(map(int, input().split()))\n    s.append(y)\n\ndef __starting_point_int():\n    n, y = list(map(int, input().split()))\n    s.append(y)\n\ndef __starting_point_int_int():\n    n, y = list(map(int, input().split()))\n    s.append(y)\n\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\ndef dfs(s, start):\n    print(s[start])\n\ndef main():\n    n, y = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    dfs(s, 0)\n\nmain()\n\n__starting_point()"}, "1096": {"problem_id": 1096, "answer": "import sys\nreadline = sys.stdin.readline\ndef __starting_point():\n    # readline = readline.rstrip('\\n')\n    # readline = readline.rstrip('\\n')\n    # readline = readline.readline().split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # readline = readline.split('\\n')\n    # print(readline)\n__starting_point()"}, "1097": {"problem_id": 1097, "answer": "from collections import defaultdict as dd\nn, t, k = list(map(int, input().split()))\nd = dd.from_iterable(t)\ns = 0\nfor i in range(n):\n    d[i] = dd(s)\nprint(' '.join(map(str, d.items())))\n"}, "1098": {"problem_id": 1098, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    if s.startswith(\"hh:mm\"):\n        print(max(0, i - s.startswith(\"hh:mm\")))\n    else:\n        print(max(0, i - s.endswith(\"hh:mm\")))"}, "1099": {"problem_id": 1099, "answer": "n = int(input())\nedges = []\nfor i in range(n):\n    u, v = list(map(int, input().split()))\n    edges.append((u, v))\nedges.sort(reverse=True)\ncnt = 0\ndef dfs(u, v):\n    if u == v:\n        return 1\n    elif u == 0:\n        return 0\n    else:\n        cnt += 1\n        for i in edges[u]:\n            if i == v:\n                return cnt\n            else:\n                cnt += 1\n        return cnt\ndfs(0, 1)\nprint(cnt)"}, "1100": {"problem_id": 1100, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nfor i in range(n):\n    n = int(input())\n    print(n)\n"}, "1101": {"problem_id": 1101, "answer": "n, k = list(map(int, input().split()))\ncows = []\nfor i in range(k):\n    if i == 0:\n        cows.append(0)\n    else:\n        cows.append(cows[-1] + i)\n\nd = {}\nfor i in range(n):\n    if cows[i] == 0:\n        d[cows[i]] = 1\n    else:\n        d[cows[i]] = min(d[cows[i]], cows[i] + 1)\n\nprint(d.get(cows[i]))\n"}, "1102": {"problem_id": 1102, "answer": "n,a = list(map(int,input().split()))\ncounschens = list(map(int,input().split()))\nfor i in range(a):\n    counschens[i] = list(counschens[i].count(i))\nprint(len(counschens))"}, "1103": {"problem_id": 1103, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\ndef check(s):\n    if len(s) == 0:\n        return False\n    elif len(s) == 1:\n        return True\n    else:\n        for i in range(1, len(s) - 1):\n            if s[i] - s[i - 1] == s[i - 1] - s[i] not in s:\n                return False\n        return True\n\nans = 0\nfor i in range(n):\n    if check(i):\n        ans += 1\nprint(ans)"}, "1104": {"problem_id": 1104, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\ndef is_prime(n):\n    if n == 1:\n        return True\n    elif n % 2 == 0:\n        return False\n    else:\n        return True\n\ndef main():\n    n = int(input())\n    a = [0]*n\n    b = [0]*n\n    for i in range(n-1, -1, -1):\n        a[i] = is_prime(a[i])\n        b[i] = is_prime(b[i])\n    print(\"YES\" if is_prime(a[0]) else \"NO\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1105": {"problem_id": 1105, "answer": "n = int(input())\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x == y:\n        print(\"YES\")\n    else:\n        if x == y:\n            print(\"NO\")\n        else:\n            print(\"YES\")\n"}, "1106": {"problem_id": 1106, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef is_safe(a, b):\n    if a[b] == b:\n        return True\n    else:\n        return False\n\nfor i in range(n):\n    a.append(a[-1] + b)\n\nprint(is_safe(a, b))"}, "1107": {"problem_id": 1107, "answer": "n = int(input())\na = [0]*n\nfor i in range(n):\n    a[i] = list(map(int,input().split()))\nprint(sum(a))"}, "1108": {"problem_id": 1108, "answer": "def main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    for i in range(n):\n        p, q = l[i]\n        if q < p:\n            print(p)\n        else:\n            print(q)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1109": {"problem_id": 1109, "answer": "def f(n):\n    if n == 1:\n        return 1\n    else:\n        return n % k\n\nn, k = input().split()\nn, k = int(n), int(k)\n\na = [0] * k\nfor i in range(1, n):\n    a[i] = 1\n\nprint(len(a))\nfor i in range(k):\n    print(a[i], end ='')\n"}, "1110": {"problem_id": 1110, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(2)\nfor i in range(n):\n    if a[i] == 1:\n        print(i)\n    else:\n        print(i+1)\n"}, "1111": {"problem_id": 1111, "answer": "n, k = list(map(int, input().split()))\nw = list(map(int, input().split()))\nmod = 10**9 + 7\nfor i in range(1, n):\n    w[i] = w[i-1]\n\nprint(w[n-1])\n"}, "1112": {"problem_id": 1112, "answer": "from itertools import combinations\ndef __starting_point():\n    s = input()\n    print(sum(combinations(s, 3) for s in combinations(range(1, len(s), 2))) + sum(combinations(s, 3) for s in combinations(range(1, len(s), 2))) + sum(combinations(s, 4) for s in combinations(range(1, len(s), 2))) for s in combinations(range(1, len(s), 2)))\n__starting_point()"}, "1113": {"problem_id": 1113, "answer": "from collections import deque\nn = int(input())\na = list(map(int,input().split()))\ns = set()\nfor i in range(n):\n    a.append(list(map(int,input().split())))\nprint(s.intersection(a))"}, "1114": {"problem_id": 1114, "answer": "n, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\ndef main():\n    n, m = n, m\n    l.append(1)\n    l.append(2)\n    l.append(3)\n    print('Possible')\n    for i in range(n):\n        if l[i] == l[i - 1] and l[i] == l[i - 2]:\n            l[i] = l[i - 1]\n            l[i] = l[i - 2]\n        else:\n            l[i] = l[i - 1]\n            l[i] = l[i - 2]\n            l[i] = l[i - 3]\n            l[i] = l[i - 4]\n            l[i] = l[i - 5]\n            l[i] = l[i - 6]\n            l[i] = l[i - 7]\n            l[i] = l[i - 8]\n            l[i] = l[i - 9]\n            l[i] = l[i - 10]\n            l[i] = l[i - 11]\n            l[i] = l[i - 12]\n            l[i] = l[i - 13]\n            l[i] = l[i - 14]\n            l[i] = l[i - 15]\n            l[i] = l[i - 16]\n            l[i] = l[i - 17]\n            l[i] = l[i - 18]\n            l[i] = l[i - 19]\n            l[i] = l[i - 20]\n            l[i] = l[i - 21]\n            l[i] = l[i - 22]\n            l[i] = l[i - 23]\n            l[i] = l[i - 24]\n            l[i] = l[i - 25]\n            l[i] = l[i - 26]\n            l[i] = l[i -27]\n            l[i] = l[i -28]\n            l[i] = l[i -29]\n            l[i] = l[i -30]\n            l[i] = l[i -31]\n            l[i] = l[i -32]\n            l[i] = l[i -33]\n            l[i] = l[i -34]\n            l[i] = l[i -35]\n            l[i] = l[i - 36]\n            l"}, "1115": {"problem_id": 1115, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nfor i in range(m):\n    l, r = [int(x) for x in input().split()]\n    print(l-1)\n"}, "1116": {"problem_id": 1116, "answer": "for _ in range(int(input())):\n    r, b, k = map(int, input().split())\n    if r % 2 == 0:\n        print(reb elb)\n    else:\n        print(reb)"}, "1117": {"problem_id": 1117, "answer": "n = int(input())\nfor i in range(n):\n    w, h = list(map(int, input().split()))\n    if h == w:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "1118": {"problem_id": 1118, "answer": "n = int(input())\nc = list(map(int, input().split()))\nfor i in range(n):\n    c.append(list(map(int, input().split())))\nprint(n-c[-1])"}, "1119": {"problem_id": 1119, "answer": "k, p, pb = list(map(int, input().split()))\n\ndef recur(k, p, pb):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return pb + p\n    else:\n        return pb + pb\n\n# dp[i][j] = max(dp[i][j] for i in range(k))\n# dp[i][j] = recur(i, p, pb)\n\nn = int(input())\ndp = [[0] * (n + 1) for _ in range(n + 1)]\nfor i in range(1, n + 1):\n    dp[i][i] = 1\n    for j in range(i, n + 1):\n        dp[i][j] = recur(i, p, pb)\n\nprint(dp[-1][-1])\n"}, "1120": {"problem_id": 1120, "answer": "from math import gcd\nn = int(input())\nfor i in range(n):\n    g = int(input())\n    if g%3 == 0:\n        print(0)\n    else:\n        print(gcd(int(g),int(g**0.5)))\n"}, "1121": {"problem_id": 1121, "answer": "n, m = list(map(int, input().split()))\nl = [0] * n\nfor i in range(n):\n    l[i] = 1\nfor i in range(m):\n    if l[i] == 0:\n        l[i] = 0\n    elif l[i] == 1:\n        l[i] = 1\nprint('\\n'.join(l))"}, "1122": {"problem_id": 1122, "answer": "from collections import deque\nN, M = list(map(int, input().split()))\nd = [-1] * N\nfor i in range(N):\n    d[i] = 1\nans = []\nfor i in range(M):\n    if d[i] == -1:\n        ans.append(i)\nprint(' '.join(map(str, ans)))\n"}, "1123": {"problem_id": 1123, "answer": "def gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\nMOD = 10**9+7\nn, K = map(int, input().split())\na = list(map(int, input().split()))\ns = sum(a)\nm = 10**9+7\nfor i in range(len(a)):\n    if a[i]%m == 0:\n        s //= m\n    else:\n        s //= m\nprint(s)"}, "1124": {"problem_id": 1124, "answer": "from collections import deque\nN = int(input())\na = list(map(int, input().split()))\ncnt = [0]*N\nfor i in range(N):\n    cnt[i] = cnt[i-1] + 1\nprint(cnt[-1])"}, "1125": {"problem_id": 1125, "answer": "from collections import deque\nN = int(input())\nA = list(map(int, input().split()))\npos = [-1]*N\nfor i in range(N):\n    A[i] = A[i-1] + 1\n    if A[i] == -1:\n        print(-1)\n    else:\n        print(1)"}, "1126": {"problem_id": 1126, "answer": "def main():\n    n, m = map(int, input().split())\n    X = int(input())\n    A = list(map(int, input().split()))\n    res = 0\n    for i in range(X):\n        res += sum(A[i:i+X])\n    print(res)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1127": {"problem_id": 1127, "answer": "for _ in range(int(input())):\n    n = int(input())\n    digits = list(map(int, input().split()))\n    if len(digits) == 1:\n        print('1')\n    else:\n        print('2')\n        for i in range(1, len(digits) - 1):\n            if digits[i] % 2 == 0:\n                print('1')\n                break\n        elif len(digits) == 1:\n            print('2')\n            for i in range(1, len(digits) - 1):\n                if digits[i] % 2 == 0:\n                    print('1')\n                    break\n            else:\n                print('2')\n                break\n        else:\n            print('3')\n            for i in range(1, len(digits) - 1):\n                if digits[i] % 2 == 0:\n                    print('1')\n                    break\n            else:\n                print('2')\n                break\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n         "}, "1128": {"problem_id": 1128, "answer": "import math\n\ndef main():\n    a, m = list(map(int, input().split()))\n    print((a % m) * m)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1129": {"problem_id": 1129, "answer": "n = int(input())\nx = list(map(int, input().split()))\nprint(x[0])"}, "1130": {"problem_id": 1130, "answer": "n, m, k = list(map(int, input().split()))\ns = input()\nl = 0\nfor i in range(n):\n    if s[i] == '1':\n        l += 1\n    else:\n        l = 0\nprint(l)\n"}, "1131": {"problem_id": 1131, "answer": "import sys\n\ndef main():\n    a, b, w, x, c = map(int, sys.stdin.readline().split())\n    print(a)\n    print(b)\n    print(w)\n    print(x)\n    print(c)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1132": {"problem_id": 1132, "answer": "from sys import stdin\ninput = lambda: stdin.readline().strip()\nn, m = list(map(int, input().split()))\ng = [[] for _ in range(n+1)]\nfor _ in range(m):\n    x, y = list(map(int, input().split()))\n    g[x].append(y)\n    g[y].append(x)\n\ndef dfs(node, u, v):\n    if node == u:\n        return\n    if node == v:\n        return\n    q = deque()\n    q.append(node)\n    while q:\n        node = q.popleft()\n        if node not in g[u]:\n            g[u].append(node)\n            q.append(node)\n        else:\n            g[u].append(node)\n            q.append(node)\n    return\n\ndfs(1, 0, True)\nprint(\"\\n\".join(map(str, g[1])))\n"}, "1133": {"problem_id": 1133, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(len(a) - a[0])"}, "1134": {"problem_id": 1134, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n    if l[i] == 0:\n        s += l[i]\nprint(s)"}, "1135": {"problem_id": 1135, "answer": "def main():\n    n = int(input())\n    s = input()\n    if n == 1:\n        print(\"\".join(map(str, s)))\n    else:\n        for i in range(n-2, -1, -1):\n            if s[i] == \"o\":\n                s[i] = \"b\"\n            elif s[i] == \"l\":\n                s[i] = \"a\"\n            else:\n                s[i] = \"g\"\n                s[i] = \"o\"\n                break\n        print(s[::-1])\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1136": {"problem_id": 1136, "answer": "from math import ceil, log10\nn, m = list(map(int, input().split()))\ns = 0\nfor i in range(1, n):\n    s += pow(i, m, 10**9 + 7)\nprint(s)\n"}, "1137": {"problem_id": 1137, "answer": "n, m, k = map(int, input().split())\ns = input()\nt = input()\n\n# A string S is represented by A[i] = A[i+1] = A[i+2] =... = A[i+k] = A[i]\n# A string T is represented by A[i] = A[i+1] =... = A[i+k] = A[i] =... = A[i+k] =...\n# A string S is represented by A[i] = A[i+1] =... = A[i+k] =... =...\n# A string T is represented by A[i] =... =... =... =... =... =...\n\n# We are interested in the maximum length of string S.\n# If length is k, then S must appear lexicographically k times.\n# If length is not k, then S must appear lexicographically k times.\n# If length is not k, then S must appear k times.\n# If length is not k, then S must appear k times.\n# If length is not k, then S must appear k times.\n# If length is not k, then S must appear k times.\n# If length is not k, then S must appear k times.\n# If length is not k, then S must appear k times.\n# If length is not k, then S must appear k times.\n# If length is not k, then S must appear k times.\n# If length is not k, then S must appear k times.\n# If length is not k, then S must appear k times.\n# If length is not k, then S must be a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S must be a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S is a palindromic string.\n# If length is not k, then S must be a palindrome.\n# If length is not k, then S must be a palindrome.\n# If length is not k, then S must be a palindrome.\n\n# Check the code below and inform your language if you need it.\n# Note: you can use Python if you like this Kata.\n\ndef isPalindrome(string):\n    return len(string) == k\n\n# Check the code below and inform your language if you like this Kata.\n# Note: you can use Python if you like this Kata.\n\ndef isPalindrome_with_exists(string):\n    if not isPalindrome(string):\n        return False\n    else:\n        return string.lower() == string[0]\n\n# Calculate the length of string S.\n# If length is k, then S must appear lexicographically k times."}, "1138": {"problem_id": 1138, "answer": "s = input()\nn = len(s)\nprint(n)"}, "1139": {"problem_id": 1139, "answer": "from sys import stdin,stdout\nfrom math import ceil,sqrt,log,factorial,gcd,floor,insort,islice,inf,mod,frozenset,unflatten,reduce,heapq,collections,re,array,bisect,sys,time,copy,functools,heapq,memo,os,pow,rsoray,solve,visit,str,cmp,time,gettimeofab,math.log10,math.floor,floor,floor_,floor__,floor,floor__,floor_,floor,floor,floor,floor\nn,m = list(map(int,stdin.readline().split()))\nn,m = sorted(map(int,stdin.readline().split()),reverse=True)\ndef solve(l,r):\n    if l == r:\n        return 0\n    elif l == 0:\n        return sum(map(int,stdin.readline().split()))\n    else:\n        res = 0\n        for i in range(m):\n            res += pow(2,i,m)**l**r**(i-1)\n        return res\n\ndef __starting_point():\n    n,m = list(map(int,stdin.readline().split()),reverse=True)\n    print(solve(n,m))\n\n__starting_point()"}, "1140": {"problem_id": 1140, "answer": "n = int(input())\nl = list(map(int, input().split()))\na = [0]*(n+1)\nfor i in range(1, n+1):\n    a[i] = l[i-1]\n    if a[i] == 1:\n        l[i] = 1\n    else:\n        l[i] = 2\nprint(l[n])"}, "1141": {"problem_id": 1141, "answer": "n, m = map(int, input().split())\ns = ''\nfor i in range(n):\n    l, r, c = map(int, input().split())\n    s += str(c) + '\\n'\nprint(s)"}, "1142": {"problem_id": 1142, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\nprint(n)\nfor i in range(1, n + 1):\n    print(int(input()))\n"}, "1143": {"problem_id": 1143, "answer": "n = int(input())\np = [int(i) for i in input().split()]\n\nfor i in range(n):\n    m, d, p = list(map(int, input().split()))\n    p.append(m)\n    p.append(d)\n\nprint(len(p))\n"}, "1144": {"problem_id": 1144, "answer": "n = int(input())\ns = input()\na = list(s.split())\nfor i in range(n):\n    if s[i] == '?':\n        a.append(i+1)\n    else:\n        a.append(i+1)\nprint(max(a))"}, "1145": {"problem_id": 1145, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "1146": {"problem_id": 1146, "answer": "n, m = list(map(int, input().split()))\nx = int(input())\ny = int(input())\nprint('YES' if x == y else 'NO')\n"}, "1147": {"problem_id": 1147, "answer": "n, x, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nfor i in range(n):\n    if a[i] in b:\n        print(i)\n    else:\n        b.remove(a[i])\n        a[i] -= x\n        x -= x\n\nprint(n)\n"}, "1148": {"problem_id": 1148, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a) + 1)"}, "1149": {"problem_id": 1149, "answer": "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nans = \"I am the guy\"\nprint(ans)\nfor i in range(n):\n    if l[i] == l[i-1]:\n        ans += \"I become the guy\"\n    else:\n        ans += \"Oh, my keyboard!\"\nprint(\"Hello, \"+str(ans)+\"!\")"}, "1150": {"problem_id": 1150, "answer": "n = int(input())\nfor i in range(n):\n    x, y, a = map(int, input().split())\n    moles = list(map(int, input().split()))\n    print(min(moles), end=' ')"}, "1151": {"problem_id": 1151, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nn,u = list(map(int,input().split()))\nl = [int(i) for i in input().split()]\nl.sort()\nans = 0\nfor i in range(n):\n    if l[i] > u:\n        ans += max(0,i-u)\nprint(ans)\n"}, "1152": {"problem_id": 1152, "answer": "from collections import deque\n\nn, m = list(map(int, input().split()))\nA = [[] for _ in range(n)]\nfor _ in range(n):\n    x, y = list(map(int, input().split()))\n    A[x].append(y)\n    A[y].append(x)\n    A[x].append(y)\n\ns = 0\nans = []\nfor i in range(n):\n    s += A[i]\n    ans.append(s)\n\nprint('Yes' if ans[-1] == '\\n')\n"}, "1153": {"problem_id": 1153, "answer": "n, m = list(map(int, input().split()))\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\n\ndef main():\n    n, m = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans += x[i]\n    print(ans)\n\nmain()\n"}, "1154": {"problem_id": 1154, "answer": "n, h, k = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\ns = 0\nfor i in range(n):\n    if a[i] <= h:\n        s += 1\nprint(s)\n"}, "1155": {"problem_id": 1155, "answer": "n, m = list(map(int, input().split()))\na = [0]*n\nb = [0]*n\nfor i in range(n):\n    a[i] = a[i-1] + b[i]\nprint('%.6f' % a[m] % m)\n"}, "1156": {"problem_id": 1156, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = 0\nfor i in range(n):\n    if a[i] == 1:\n        b += 1\n    else:\n        a[i] = 0\nprint(b)"}, "1157": {"problem_id": 1157, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i] * a[i + 1]\nprint(s)"}, "1158": {"problem_id": 1158, "answer": "def solve(n, k):\n    if k == 0:\n        return 0\n    elif k == 1:\n        return 1\n    else:\n        res = 0\n        for i in range(1, k + 1):\n            if i % 2 == 0:\n                res += 1\n        return res\n\nn, k = map(int, input().split())\nl = list(map(int, input().split()))\nprint(solve(n, k))"}, "1159": {"problem_id": 1159, "answer": "from collections import deque\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\ngraph = [[] for _ in range(n)]\nfor i in range(n):\n    u, v = map(int, input().split())\n    graph[u].append(v)\n    graph[v].append(u)\n    graph[u].append(v)\n    graph[v].append(u)\n\ndef dfs(u, v):\n    if u in graph[v]:\n        return 1\n    else:\n        degree = 0\n        for nei in graph[u]:\n            if nei not in graph[v]:\n                degree += 1\n                continue\n            degree = 0\n            for nei in graph[v]:\n                if nei not in graph[v]:\n                    degree += 1\n                    continue\n            if degree == 0:\n                return degree\n        return degree\n\ndfs(0, 1)\nprint(-1)\n"}, "1160": {"problem_id": 1160, "answer": "def __starting_point():\n    s = list(map(int, input().split()))\n    print(\"YES\")\n    print(\"NO\")\n__starting_point()"}, "1161": {"problem_id": 1161, "answer": "s = input()\nfor i in range(len(s)):\n    if s[i] == '[':\n        s.pop()\n    else:\n        s.append(s[i])\nprint(\"[\")\nprint(\"\\n\".join(s))"}, "1162": {"problem_id": 1162, "answer": "from math import factorial as f\nfrom functools import reduce as R\ndef factor(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return n//2\n    else:\n        return reduce(f, R(n-1, n//2))\n\ndef sum_heap(n, l, r):\n    if n < l:\n        return 0\n    ans = 0\n    while n > 0:\n        ans += f(n, l, r)\n        n //= 2\n    return ans\n\ndef main():\n    p, s = map(int, input().split())\n    l = list(map(int, input().split()))\n    r = list(map(int, input().split()))\n    q = int(input())\n    ans = factor(s)\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1163": {"problem_id": 1163, "answer": "n, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\nfor i in range(1, n + m):\n    if l[i] == 'G':\n        l[i] = 'B'\n    else:\n        l[i] = 'G'\nprint(''.join(l))\n"}, "1164": {"problem_id": 1164, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    sys.setrecursionlimit(10**6)\n    n = int(readline())\n    s = list(readline().strip())\n    d = {}\n    for i in range(n):\n        s[i] = '0'\n        d[s[i]] = 0\n        for j in range(10):\n            if s[i] == '1':\n                d[s[i]].append(j)\n            elif s[i] == '2':\n                d[s[i]].append(j)\n            elif s[i] == '3':\n                d[s[i]].append(j)\n            elif s[i] == '4':\n                d[s[i]].append(j)\n            elif s[i] == '5':\n                d[s[i]].append(j)\n            elif s[i] == '6':\n                d[s[i]].append(j)\n            elif s[i] == '7':\n                d[s[i]].append(j)\n            elif s[i] == '8':\n                d[s[i]].append(j)\n            elif s[i] == '9':\n                d[s[i]].append(j)\n            elif s[i] == 'a':\n                d[s[i]].append(j)\n            elif s[i] == 'b':\n                d[s[i]].append(j)\n            elif s[i] == 'c':\n                d[s[i]].append(j)\n            elif s[i] == 'd':\n                d[s[i]].append(j)\n            elif s[i] == 'e':\n                d[s[i]].append(j)\n            elif s[i] == 'f':\n                d[s[i]].append(j)\n            elif s[i] == 'g':\n                d[s[i]].append(j)\n            elif s[i] == 'h':\n                d[s[i]].append(j)\n            elif s[i] == 'i':\n                d[s[i]].append(j)\n            elif s[i] == 'j"}, "1165": {"problem_id": 1165, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nl, r, x = 0, 0, 0\nfor i in range(m):\n    l += a[i]\n    r += a[i]\n    x += a[i]\nprint(l, r, x)\n"}, "1166": {"problem_id": 1166, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\ns = input()\nfor i in range(n):\n    if a[i] > a[i-1]:\n        s.append(a[i])\n    else:\n        s.append(a[i])\nprint('BAAAABAB' if s[-1] == 'A' else 'A')"}, "1167": {"problem_id": 1167, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    a, b, c, d, k = list(map(int, input().split()))\n    print(-1)\n"}, "1168": {"problem_id": 1168, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef is_zeros(x):\n    return x == x[0]\n\ndef dfs(i, x):\n    if x == x[0]:\n        return 0\n    elif x[1] == x[0]:\n        return 1\n    else:\n        return 0\n\nfor i in range(n):\n    a[i] = dfs(i, a[i])\n\nprint(('\\n'.join(map(str, a)))\n"}, "1169": {"problem_id": 1169, "answer": "from sys import stdin,stdout\nfrom math import gcd,sqrt,log,ceil,floor,log2,factorial,fmod,log10,pow,factorials,gcd,acos,isfactorial,sqrt,sqrt-log10,mod,floor,mod-1,floor-1,floor,-1\nfrom collections import defaultdict as dd, deque,OrderedDict as OD_D,nullbdddd,nonnullbdddd\nfrom heapq import merge,heappop,heappush,heapify,heappop,heap munge,merge,popov,popov-1,popov,push,push-1,push,push,push,push,pop\nfrom bisect import bisect_left as bl,bisect_right as br,bisect_top as brs,bisect_left as bl,bisect_right as brs\nfrom functools import reduce,cmp_to_key\nfrom fractions import Fraction as F,floor \nfrom fractions import gcd \nfrom itertools import permutations as p,combinations as it,combinations as it,permutations as it,permutations-1,permutations-denominator\nfrom operator import mul,sub,sub-1,sub-denominator,sub-denominator-1,sub-denominator-denom,sub-denominator as submul,sub-subdenominator,sub-subdenominator-submul\nfrom statistics import mean,variance,log\nfrom collections import deque,OrderedDict as OD_D,nullbdddd as nbdd,nonnullbdd as ndon't give \nany feedback on this kata :)\n\ndef main():\n    n,m=map(int,stdin.readline().split())\n    graph=defaultdict(list)\n    for i in range(n):\n        graph[i].append(i+1)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].clear()\n        graph[i].append(i+1)\n        graph[i].append(i+1)\n        graph[i].extend(graph[i])\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].clear()\n        graph[i].append(i+1)\n        graph[i].extend(graph[i])\n        graph[i].sort(reverse=True)\n        graph[i].clear()\n        graph[i].append(i+1)\n        graph[i].sort(reverse=True)\n        graph[i].clear()\n        graph[i].append(i+1)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n        graph[i].sort(reverse=True)\n    "}, "1170": {"problem_id": 1170, "answer": "t = int(input())\nfor _ in range(t):\n    x = [int(i) for i in input().split()]\n    print(x[0] + x[1])\n"}, "1171": {"problem_id": 1171, "answer": "N,K = list(map(int,input().split()))\nV = list(map(int,input().split()))\n\ndef main():\n    N,K = list(map(int,input().split()))\n    V = list(map(int,input().split()))\n    \n    if K == 0:\n        print(sum(V))\n    elif K == 1:\n        print(sum(V) + max(V))\n    else:\n        a = 0\n        b = 0\n        for i in range(N):\n            a += V[i]\n            b += V[i]\n            if b < a:\n                a = b\n                b = 0\n                \n        print(a)\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    "}, "1172": {"problem_id": 1172, "answer": "def main():\n    s = input()\n    mod = 10**9 + 7\n    for i in range(len(s)):\n        s[i] = 'A'\n        s[i].replace('A', 'A')\n    print((sum(map(int, s))) % mod)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1173": {"problem_id": 1173, "answer": "from itertools import combinations\n\nN = int(input())\nA = list(map(int, input().split()))\n\ncombinations = list(combinations)\n\ndef is_valid(a, b):\n    if a == b:\n        return True\n    elif a == 0:\n        return False\n    else:\n        return True\n\ns = 0\nfor i in range(N):\n    if is_valid(A[i], A[i]):\n        s += 1\n    else:\n        print(-1)\n"}, "1174": {"problem_id": 1174, "answer": "def main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = [0]*n\n    for i in range(m):\n        d[i] = a[i]\n    print(min(d))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1175": {"problem_id": 1175, "answer": "from math import sqrt\n\ndef mod_pow(x, y):\n    if x == 0:\n        return y\n    elif x == 1:\n        return pow(y, x)\n    else:\n        return x % y\n\nMOD = 1000000007\n\ndef __starting_point():\n    L, R = list(map(int, input().split()))\n    d = []\n    for i in range(L):\n        d.append(int(input()))\n    d.sort(reverse=True)\n    ans = 0\n    for i in range(len(d)):\n        ans += d[i]\n    print(ans)\n__starting_point()"}, "1176": {"problem_id": 1176, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print(max(B, 0))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1177": {"problem_id": 1177, "answer": "MOD = 1000000007\nn, s = list(map(int, input().split()))\nA = list(map(int, input().split()))\nmod = 998244353\nfor i in range(n):\n    A[i] = pow(A[i], MOD-2, MOD)\nprint(sum(A))"}, "1178": {"problem_id": 1178, "answer": "from sys import stdin,stdout\nn,k = map(int,stdin.readline().split())\ns = list(map(int,stdin.readline().split()))\nprint(s)"}, "1179": {"problem_id": 1179, "answer": "n, k = map(int, input().split())\nids = input()\nprint(ids[0])"}, "1180": {"problem_id": 1180, "answer": "n, k = map(int, input().split())\ns = input()\nmod = 10**9 + 7\nfor i in range(n):\n    if s[i] == '+':\n        s[i] = s[i-1] + '+'\n    else:\n        s[i] = s[i-1] + '-'\nprint(s[n:])"}, "1181": {"problem_id": 1181, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef solve(a, b):\n    if a[b] == b:\n        return 0\n    elif a[b] < b:\n        return 1\n    else:\n        return max(a[b] - a[a[b]], solve(a, b))\n\nprint(solve(10, n) + solve(10, m) + solve(10, m - 1))\n"}, "1182": {"problem_id": 1182, "answer": "r,c,n,k = list(map(int,input().split()))\nfor i in range(n):\n    x,y = list(map(int,input().split()))\n    if x+y == r:\n        print(k)\n    else:\n        print(r-x-y)\n"}, "1183": {"problem_id": 1183, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, x = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(max(a, x - a[x]))\n"}, "1184": {"problem_id": 1184, "answer": "def __starting_point():\n    t = int(input())\n    for i in range(t):\n        print(__starting_point()[i])\n__starting_point()"}, "1185": {"problem_id": 1185, "answer": "n, m, k = list(map(int, input().split()))\np = list(map(int, input().split()))\n\nfor i in range(n):\n    p[i] = max(p[i], p[i-1] + p[i-2])\n\nprint(max(p))\n"}, "1186": {"problem_id": 1186, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    if a[i] > a[i - 1]:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n"}, "1187": {"problem_id": 1187, "answer": "from collections import deque\ndef dfs(edges, n, m):\n    if n == 0:\n        return\n    for i in range(n):\n        if all(dfs(i, n-1, m) for j in edges[i]):\n            continue\n        else:\n            dfs(i, n-1, m)\n            n -= 1\n    return\n\nn, m = list(map(int, input().split()))\nedges = []\nfor _ in range(m):\n    u, v = list(map(int, input().split()))\n    edges.append((u, v))\n\nprint(len(edges))\nfor _ in range(n):\n    k = dfs(edges, n-1, m)\n    print(k)\n"}, "1188": {"problem_id": 1188, "answer": "n = int(input())\na = list(map(int, input().split()))\nsumm = [0] * n\nfor i in range(n):\n    summ[i] += 1\nans = 0\nfor i in range(n):\n    if a[i] == 1:\n        ans += 1\n    elif a[i] == 3:\n        ans += 1\n    else:\n        ans += a[i] - a[i - 1]\nprint(ans)\n\n"}, "1189": {"problem_id": 1189, "answer": "import sys\ninput = sys.stdin.readline\n\nn,c = list(map(int,input().split()))\n\ndef dfs(i,j):\n    if i==n:\n        return 1\n    elif j==c:\n        return max(dfs(i+1,j),dfs(i+1,j-1),dfs(i+1,j-1))\n    else:\n        return max(dfs(i+1,j),dfs(i+1,j-1),dfs(i+1,j-1))\n\nans = 10**6 + 3\n\nprint(ans)\n"}, "1190": {"problem_id": 1190, "answer": "from math import ceil\n\ndef area(x, y):\n    return (x * y) - (x * (y - x)) // 2\n\ndef bfs(x, y, area):\n    if area == 0:\n        return 0\n    elif area == 1:\n        return 1\n    else:\n        return (bfs(x, y, area - 1) + bfs(x, y, area - 1)) // 2\n\ndef bfs_lcm(a, b):\n    return a * b // ceil(a / b)\n\ndef bfs_gcd(a, b):\n    return a % b\n\ndef bfs_lcm(a, b):\n    return a * b // b % ceil(a / b)\n\ndef bfs_sqa(x, y, area):\n    if area == 0:\n        return 0\n    elif area == 1:\n        return 1\n    else:\n        return (bfs_lcm(x, y) + bfs_sqa(x, y, area)) // 2\n\ndef bfs_mul(a, b):\n    return a % b\n\ndef bfs_pow(a, b):\n    return a * b // b % mod(a, b)\n\ndef bfs_factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return pow(n, mod(n, 2))\n\ndef bfs_factorial_lcm(a, b):\n    return a * b // mod(a, b)\n\ndef bfs_factorial_gcd(a, b):\n    return a % b\n\ndef bfs_factorial_lcm(a, b):\n    return a * b // b % mod(a, b)\n\ndef bfs_factorial_gcd_lcm(a, b):\n    return a % b\n\ndef bfs_factorial_gcd_gcd(a, b):\n    return a * b // b % mod(a, b)\n\ndef bfs_factorial_fib(n):\n    if n == 0:\n        return 1\n    else:\n        return pow(n, mod(n, 2))\n\ndef bfs_factorial_fib_lcm(a, b):\n    return a * b // b % mod(a, b)\n\ndef bfs_factorial_fib_gcd_lcm(a, b):\n    return a * b // b % mod(a, b)\n\ndef bfs_factorial_fib_gcd_gcd(a, b):\n    return a * b // b % mod(a, b)\n\ndef bfs_factorial_fib_gcd_gcd_lcm(a, b):\n    return a * b // b % mod(a, b)\n\ndef bfs_factorial_gcd_gcd_gcd_lcm(a, b):\n    return a * b // b % mod(a, b)\n\ndef bfs_factorial_gcd_gcd_gcd_lcm(a, b):\n    return a * b // b % mod(a, b)\n\ndef bfs_factorial_gcd_gcd_gcd_lcm(a, b):\n    return a * b // b % mod(a, b)\n\ndef bfs_factorial_fib_fib_lcm(a, b):\n    return a * b // b % mod(a, b)\n\ndef bfs_factorial_fib_fib_gcd_lcm(a, b):\n    return a * b // b % mod(a, b)\n\ndef bfs_factorial_fib_fib_gcd_lcm(a, b):\n    return a * b // b % mod(a, b)\n"}, "1191": {"problem_id": 1191, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn, k = list(map(int, input().split()))\nl = [0] * (n + 1)\nfor i in range(n):\n    l[i] = 1\nfor i in range(k):\n    x = int(input())\n    if x == 0:\n        print(1)\n    else:\n        print(k + 1)\n"}, "1192": {"problem_id": 1192, "answer": "from math import ceil, log2\nn, k = list(map(int, input().split()))\np = [0] * n\nfor i in range(n):\n    p[i] = p[i - 1] + 1\nans = 0\nfor i in range(n):\n    ans += pow(2, k, i)\nprint(ans)\n"}, "1193": {"problem_id": 1193, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(max(a, b))\n"}, "1194": {"problem_id": 1194, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n - 1):\n    s += a[i] - 1\nprint(s)"}, "1195": {"problem_id": 1195, "answer": "import sys\n\nn = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    print(a[0])\n"}, "1196": {"problem_id": 1196, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\nt = list(map(int, input().split()))\n\nfor i in range(n):\n    t.append(input())\n\nans = 0\n\nfor i in range(m):\n    ans += ans // n\n    ans %= n\n\nprint(ans)\n"}, "1197": {"problem_id": 1197, "answer": "from sys import stdin, stdout\ninput = stdin.readline\ndef f(s):\n    return list(map(int, s.split(' ')))\nn = int(input())\ns = list(map(int, input().split(' ')))\nl = [0]*n\nfor i in range(n):\n    l[i] = s[i]\nans = 0\nfor i in range(n):\n    if l[i] == \"*\":\n        ans += 1\nprint(ans)"}, "1198": {"problem_id": 1198, "answer": "n,c = list(map(int,input().split()))\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nprint(sum(a) + sum(b) + c)\n"}, "1199": {"problem_id": 1199, "answer": "n, m = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\ndef dfs(i, j):\n    if i == 0:\n        return 0\n    elif j == 0:\n        return 1\n    else:\n        return max(dfs(i-1, j-1), dfs(i, j-1))\n\nans = 0\nfor i in range(n):\n    ans += dfs(i, n-1)\nprint(ans)\n"}, "1200": {"problem_id": 1200, "answer": "n = int(input())\nfor i in range(n):\n    x = list(map(int,input().split()))\n    print(m-x)"}, "1201": {"problem_id": 1201, "answer": "n = int(input())\nfor i in range(n):\n    t, d, p, s = list(map(int, input().split()))\n    s.append(t)\n    s.append(d)\n    s.append(p)\n    s.append(p)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append(0)\n    s.append"}, "1202": {"problem_id": 1202, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef time(a, b):\n    if a[0] == b[0]:\n        return a[0]\n    elif a[0] == 1:\n        return b[0]\n    else:\n        return a[1]\n\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    print(time(a, b))\n"}, "1203": {"problem_id": 1203, "answer": "import math\ndef solve(H,L,A):\n    if H<=L:\n        return 0\n    elif L<=H:\n        return math.inf\n    else:\n        return (1+math.log(H,2))/math.log(L,2)\n\nprint(solve(H,L,A))"}, "1204": {"problem_id": 1204, "answer": "from sys import stdin,stdout\nn,k=list(map(int,stdin.readline().split()))\nl=list(map(int,stdin.readline().split()))\nprint(n)\nfor i in range(n):\n    l.pop()\n    if l[i]>k:\n        print(-1)\n    else:\n        print(l[i])\n"}, "1205": {"problem_id": 1205, "answer": "n = int(input())\nfor i in range(n):\n    x, y = map(int, input().split())\n    x -= 1\n    y -= 1\n    print(x*y)"}, "1206": {"problem_id": 1206, "answer": "import math\nn = int(input())\nl = list(map(int, input().split()))\nd = 1000000007\nfor i in range(n):\n    d = math.pow(i, d)\n    l.append(d)\nprint(\"%.6f\" % (d // 0.5))"}, "1207": {"problem_id": 1207, "answer": "import sys\ninput = sys.stdin.readline\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    d = {}\n    for i in range(m):\n        u, v = list(map(int, input().split()))\n        if u < n:\n            d[u] = v\n        elif v < n:\n            d[v] = u\n        else:\n            d[u] = v\n    print(d.get(u, 0))\n__starting_point()"}, "1208": {"problem_id": 1208, "answer": "n = int(input())\nevents = []\nfor i in range(n):\n    events.append(list(map(int, input().split())))\nprint(events)"}, "1209": {"problem_id": 1209, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0] * n\nfor i in range(n):\n    a[i] = int(input())\n    l[i] = 0\nfor i in range(n):\n    print(l[i])"}, "1210": {"problem_id": 1210, "answer": "# cook your dish here\nn,p = map(int,input().split())\nl = list(map(int,input().split()))\na = [0]*(n+1)\nb = [0]*(n+1)\nfor i in range(1,n+1):\n    a[i] = l[i-1]\n    b[i] = b[i-1]\n#print(a)\n#print(b)\nans = 0\nfor i in range(n):\n    ans += sum(l[i-1]*l[i])\nprint(ans)"}, "1211": {"problem_id": 1211, "answer": "def __starting_point():\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[0])\n    print(a[1])\n    print(a[2])\n    print(a[3])\n    print(a[4])\n    print(a[5])\n    print(a[6])\n    print(a[7])\n    print(a[8])\n    print(a[9])\n    print(a[10])\n    print(a[11])\n    print(a[12])\n    print(a[13])\n    print(a[14])\n    print(a[15])\n    print(a[16])\n    print(a[17])\n    print(a[18])\n    print(a[19])\n    print(a[20])\n    print(a[21])\n    print(a[22])\n    print(a[23])\n    print(a[24])\n    print(a[25])\n    print(a[26])\n    print(a[27])\n    print(a[28])\n    print(a[29])\n    print(a[30])\n    print(a[31])\n    print(a[32])\n    print(a[33])\n    print(a[34])\n    print(a[35])\n    print(a[36])\n    print(a[37])\n    print(a[38])\n    print(a[39])\n    print(a[40])\n    print(a[41])\n    print(a[42])\n    print(a[43])\n    print(a[44])\n    print(a[45])\n    print(a[46])\n    print(a[47])\n    print(a[48])\n    print(a[49])\n    print(a[50])\n    print(a[51])\n    print(a[52])\n    print(a[53])\n    print(a[54])\n    print(a[55])\n    print(a[56])\n    print(a[57])\n    print(a[58])\n    print(a[59])\n    print(a[60])\n    print(a[61])\n    print(a[62])\n    print(a[63])\n    print(a[64])\n    print(a[66])\n    print(a[68])\n    print(a[69])\n    print(a[70])\n    print(a[69a])\n    print(a[70a])\n    print(a[70b])\n    print(a[70c])\n    print(a[70d])\n    print(a[70e])\n    print(a[70f])\n    print(a[70g])\n    print(a[70h])\n    print(a[70i])\n    print(a[70j])\n    print(a[70k])\n    print(a[70m])\n    print(a[70n])\n    print(a[70o])\n    print(a[70o])\n    print(a[70o])\n    print(a[70o])\n    print(a[70o])\n    print(a[70o])\n    print(a[70o])\n    print(a[70o])\n    print(a[70o])\n    print(a[70o])\n    print(a[70o])\n    print(a[70"}, "1212": {"problem_id": 1212, "answer": "n, k = list(map(int, input().split()))\nh = [0] * (n + 1)\nfor i in range(n):\n    h[i] = min(h[i], k - 1)\nprint(h[n])\n"}, "1213": {"problem_id": 1213, "answer": "n, k = list(map(int, input().split()))\ns = input()\nl = len(s)\nprint('R' if l > 1 else 'L' +'' + s[l-1:l])\n"}, "1214": {"problem_id": 1214, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        a[i] = int(input())\n    print('Yes')\n\nmain()"}, "1215": {"problem_id": 1215, "answer": "n = int(input())\nprint(n)"}, "1216": {"problem_id": 1216, "answer": "n = int(input())\ns = input()\ni = 0\nwhile i < n:\n    if s[i] == 'a':\n        i += 1\n    else:\n        i += 1\nprint(''.join(map(str, s)))\n"}, "1217": {"problem_id": 1217, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(n - a)\nprint(b - a)\nprint(m - b)\n"}, "1218": {"problem_id": 1218, "answer": "def main():\n    n, k = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[i] = 1\n        for j in range(i, n):\n            if d[i] == 1:\n                d[j] = 0\n            else:\n                d[j] += 1\n                break\n    print((n-k))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1219": {"problem_id": 1219, "answer": "from itertools import groupby\nn = int(input())\na = list(map(int, input().split()))\nm = 0\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n    m += 1\nprint(m)"}, "1220": {"problem_id": 1220, "answer": "n, m = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    edges[x].append(y)\n    edges[y].append(x)\n\ndef dfs(x, y):\n    if x == y:\n        return 1\n    else:\n        return 0\n\ndfs(0, 0)\n\nfor i in range(1, n):\n    x, y = list(map(int, input().split()))\n    edges[x].append(y)\n    edges[y].append(x)\n\nvisited = set()\nvisited.add(0)\n\nans = 0\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    edges[x].append(y)\n    edges[y].append(x)\n\ndfs(0, 0)\n\nfor i in range(1, n):\n    print(ans)\n"}, "1221": {"problem_id": 1221, "answer": "from collections import deque\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(sum(a) * sum(b) // 2)"}, "1222": {"problem_id": 1222, "answer": "from math import floor\n\ndef lau(n):\n    return int(n**0.5)\n\ndef __starting_point():\n    K = int(input())\n    print(lau(K))\n__starting_point()"}, "1223": {"problem_id": 1223, "answer": "N = int(input())\nP = list(map(int, input().split()))\n\ndef main():\n    a = []\n    for i in range(N):\n        a.append(list(map(int, input().split())))\n    a.sort()\n    print(sum(a[i]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1224": {"problem_id": 1224, "answer": "N = int(input())\ndef func(n):\n    if n == 0:\n        return 1\n    else:\n        a = n % 2\n        b = n % 2\n        if a == 0:\n            return a\n        elif a == 1:\n            return b\n        else:\n            return func(a) + func(b)\n\nprint(func(10))\n"}, "1225": {"problem_id": 1225, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    h = int(readline())\n    if h == 0:\n        return 0\n    elif h == 1:\n        return 3\n    elif h%2 == 0:\n        h //= 2\n    else:\n        h //= 3\n    print(h)\n\nmain()\n"}, "1226": {"problem_id": 1226, "answer": "import math\nn,a,b = map(int,input().split())\nl = list(map(int,input().split()))\nprint(sum(l)%1000000007)"}, "1227": {"problem_id": 1227, "answer": "def __starting_point():\n try:\n  n = int(input())\n except:\n  pass\n__starting_point()"}, "1228": {"problem_id": 1228, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    sys.setrecursionlimit(10**6)\n    n = int(input())\n    d = list(map(int,input().split()))\n    d.sort(reverse=True)\n    print(d[0])\n    for i in range(1,n):\n        print(d[i],end=\" \")\n        if d[i]==0:\n            print(0)\n        else:\n            print(d[i]*2)\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n   "}, "1229": {"problem_id": 1229, "answer": "n, m = list(map(int, input().split()))\na = list(input())\nc = []\nfor i in range(n):\n    a.append(c[i])\n\nprint(sum(a) + sum(c))\n"}, "1230": {"problem_id": 1230, "answer": "n = int(input())\na = [0]*n\nfor i in range(n):\n    a[i] = list(map(int,input().split()))\nprint(*a)"}, "1231": {"problem_id": 1231, "answer": "def rec(a, b, c):\n    if c == 0:\n        return \"NO\"\n    elif b == 0:\n        return \"YES\"\n    else:\n        return \"NO\"\n\ndef __starting_point():\n    input()\n    print(rec(2, 3, 4))\n__starting_point()"}, "1232": {"problem_id": 1232, "answer": "n, m = list(map(int, input().split()))\nk, m = n, m\nfor i in range(k):\n    a, b = list(map(int, input().split()))\n    if a > b:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "1233": {"problem_id": 1233, "answer": "from bisect import bisect_left as bl\nfrom heapq import heappush,heappop,heapify\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import permutations as p,combinations as cc\nfrom operator import add,sub,merge,and,and_,and_,and_,mul,truediv,floordiv,unruediv,squeeber as UF\nfrom functools import reduce,cmp_to_key\nfrom fractions import Fraction\nfrom operator import mul,factorial,logificial as lcom,sqrt,copysign,factorial as mod,factorialsign as mod\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = dd(defaultdict(list))\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n        d[a[i]].append(i)\n\n    inv = defaultdict(lambda: 1)\n    for i in a:\n        inv[i] = 1\n        inv[i[0]].append(i[0])\n        inv[i[1]].append(i[1])\n\n    m}, "1234": {"problem_id": 1234, "answer": "n, m, k = list(map(int, input().split()))\na = [int(i) for i in input().split()]\n\ndef merge(a, b):\n    m = min(m, a[m])\n    k = min(k, b[k])\n    return a[k] + b[k]\n\nfor i in range(n):\n    a[i] = a[i] + m\n\nans = 0\nfor i in range(m, n):\n    ans += a[i]\n    ans -= a[i]\n\nprint(ans)\n"}, "1235": {"problem_id": 1235, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nb = list(map(int, input().split()))\n\nfor i in range(n):\n    if a[i] == b[i]:\n        print(i, end=' ')\n    else:\n        print(a[i], end=' ')\n        \n"}, "1236": {"problem_id": 1236, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[-1]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[-1]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis' if a[0]%2 else 'Daenerys')\nprint('Stannis"}, "1237": {"problem_id": 1237, "answer": "n, s = list(map(int, input().split()))\nl = list(map(int, input().split()))\nfor i in range(n):\n    f, t = 0, 0\n    for j in range(i, n):\n        if j < s:\n            f += 1\n        else:\n            t += 1\n    if f == 0:\n        print(0)\n    else:\n        print(s - l[i] + 1)\n"}, "1238": {"problem_id": 1238, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nk = sorted(a, reverse=True)\nprint(n)\n"}, "1239": {"problem_id": 1239, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef minDistance(a, b):\n    return abs(a[0] - b[0]) if a[0] > b[0] else 0\n\ndef minDistance(a, b):\n    return min(minDistance(a, b), minDistance(a, b))\n\nprint(minDistance(3, 6))"}, "1240": {"problem_id": 1240, "answer": "n = int(input())\nfor i in range(n):\n    l, r = list(map(int, input().split()))\n    if l == r:\n        print(0)\n    else:\n        print(l + r)\n"}, "1241": {"problem_id": 1241, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nd = [[0] * k for i in range(n)]\nfor i in range(n):\n    d[i] = max(d[i][0], d[i][1])\nprint(max(d[-1][0], d[-1][1]))"}, "1242": {"problem_id": 1242, "answer": "s = input()\nfor i in range(len(s)):\n    if s[i] == 'a':\n        print(i, end=' ')\n    elif s[i] == 'b':\n        print(i, end=' ')\n    else:\n        print(i, end=' ')\n"}, "1243": {"problem_id": 1243, "answer": "n = int(input())\nfor i in range(n):\n    m = int(input())\n    if m % 2 == 0:\n        print(m)\n    else:\n        print(m-1)"}, "1244": {"problem_id": 1244, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if a[0] == 1 else \"NO\")"}, "1245": {"problem_id": 1245, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = [0]*n\nfor i in range(n):\n    s[i] = '(' + str(i) + ')'\n\nprint('\\n'.join(s))"}, "1246": {"problem_id": 1246, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(len(a))"}, "1247": {"problem_id": 1247, "answer": "s = input()\nfor i in range(0, len(s)):\n    if s[i] == s[i+1]:\n        print(\"First\")\n    else:\n        print(\"Second\")"}, "1248": {"problem_id": 1248, "answer": "from sys import stdin\ninput = stdin.readline\n\nd1, d2, d3 = list(map(int, input().split()))\n\nn = len(d1)\nm = len(d2)\n\nfor i in range(n):\n    if d1[i] < d2[i]:\n        m = min(m, d1[i])\n        d1[i] = m\n\nprint(m)\n"}, "1249": {"problem_id": 1249, "answer": ""}, "1250": {"problem_id": 1250, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n, a)"}, "1251": {"problem_id": 1251, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(n-a.count(max(a)))"}, "1252": {"problem_id": 1252, "answer": "n, m, t = list(map(int, input().split()))\nvisited = [0] * m\nfor i in range(n):\n    u, v, t = list(map(int, input().split()))\n    visited[u] = t\n    visited[v] = t\nprint(len(visited))\nfor i in range(m):\n    print(visited[i])"}, "1253": {"problem_id": 1253, "answer": "from collections import deque\nn, k = map(int, input().split())\nl = list(map(int, input().split()))\ns = [-1] * n\nfor i in range(n):\n    s[i] = k - s[i]\nprint(max(s))"}, "1254": {"problem_id": 1254, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nMOD = 10**9+7\nINF = 10**18\ndef inp(): return int(input())\ndef inl(): return list(map(int, input().split()))\ndef lr(): return int(input())\ndef sm(n, m, d):\n    if n%2==0:\n        return d\n    elif n==1:\n        return math.inf\n    else:\n        return math.inf\ndef sm2(n, m, d):\n    if n%2==0:\n        return d\n    elif n==1:\n        return math.inf\n    else:\n        return math.inf\ndef sm3(n, m, d):\n    if n%2==0:\n        return d\n    elif n==1:\n        return math.inf\n    else:\n        return math.inf\ndef sm4(n, m, d):\n    if n%2==0:\n        return d\n    elif n==1:\n        return math.inf\n    else:\n        return math.inf\ndef sm5(n, m, d):\n    if n%2==0:\n        return d\n    elif n==1:\n        return math.inf\n    else:\n        return math.inf\ndef sm6(n, m, d):\n    if n%2==0:\n        return d\n    elif n==1:\n        return math.inf\n    else:\n        return math.inf\ndef sm7(n, m, d):\n    if n%2==0:\n        return d\n    elif n==1:\n        return math.inf\n    else:\n        return math.inf\ndef sm8(n, m, d):\n    if n%2==0:\n        return d\n    elif n==1:\n        return math.inf\n    else:\n        return math.inf\ndef sm9(n, m, d):\n    if n%2==0:\n        return d\n    elif n==1:\n        return math.inf\n    else:\n        return math.inf\ndef sm10(n, m, d):\n    if n%2==0:\n        return d\n    elif n==1:\n        return math.inf\n    else:\n        return math.inf\ndef sm11(n, m, d):\n    if n%2==0:\n        return d\n    elif n==1:\n        return math.inf\n    else:\n        return math.inf\ndef sm12(n, m, d):\n    if n%2==0:\n        return d\n    elif n==1:\n        return math.inf\n    else:\n        return math.inf\ndef sm13(n, m, d):\n    if n%2==0:\n        return d\n    elif n==1:\n "}, "1255": {"problem_id": 1255, "answer": "def __starting_point():\n    n = int(input())\n    h = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[h[i]] = min(d.get(h[i], 0), m[i])\n    print(d.get(h[0], 0))\n__starting_point()"}, "1256": {"problem_id": 1256, "answer": "s = input()\nprint(s)\nfor i in range(len(s)):\n    print(sum(map(int, s[i])))"}, "1257": {"problem_id": 1257, "answer": "n,k = list(map(int,input().split()))\nl = list(map(int,input().split()))\ns = 0\nfor i in range(1,n+1):\n    if l[i] > k:\n        s += l[i]\n    else:\n        s += l[i]\nprint(s)\n"}, "1258": {"problem_id": 1258, "answer": "from collections import Counter\nn = int(input())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\n\ndef solve(l, r, p):\n    if p not in l:\n        return\n    \n    m = len(p)\n    for i in range(m):\n        if p[i] in q:\n            q[p[i]] = q[p[i]]\n        else:\n            q[p[i]] = p[i]\n            \n        if p[i] == p[i-1]:\n            r.append(p[i])\n            p.pop(i)\n            \n        if p[i] == p[i-1]:\n            r.append(p[i])\n            p.pop(i)\n            \n        if p[i] == p[i-1]:\n            r.append(p[i])\n            p.pop(i)\n            \n        if p[i] == p[i-1]:\n            r.append(p[i])\n            p.pop(i)\n            \n        if p[i] == p[i-1]:\n            r.append(p[i])\n            p.pop(i)\n            \n        if p[i] == p[i-1]:\n            r.append(p[i])\n            p.pop(i)\n            \n        if p[i] == p[i-1]:\n            r.append(p[i])\n            p.pop(i)\n            \n        if p[i] == p[i-1]:\n            r.append(p[i])\n            p.pop(i)\n            \n        if p[i] == p[i-1]:\n            r.append(p[i])\n            p.pop(i)\n            \n        if p[i] == p[i-1]:\n            r.append(p[i])\n            p.pop(i)\n            \n        if p[i] == p[i-1]:\n            r.append(p[i])\n            p.pop(i)\n            \n        if p[i] == p[i-1]:\n            r.append(p[i])\n            p.pop(i)\n  "}, "1259": {"problem_id": 1259, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\ngraph = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v = list(map(int, input().split()))\n    graph[u].append(v)\n    graph[v].append(u)\n\n# Dijkstra\ninf = 10**9+7\nvisited = [False]*n\nvisited[0] = True\ndef dfs(u, v):\n    if visited[u] and visited[v]:\n        return\n    visited[u] = True\n    visited[v] = True\n    for j in graph[u]:\n        if not visited[j]:\n            dfs(j, v)\n            visited[j] = False\n            break\n\ndfs(0, 0)\nprint('\\n'.join(map(str, visited)))\n"}, "1260": {"problem_id": 1260, "answer": ""}, "1261": {"problem_id": 1261, "answer": "n = int(input())\nfor i in range(n):\n    print(max(map(lambda x: x[0], list(map(int, str(x[0]))))), end=' ')\n"}, "1262": {"problem_id": 1262, "answer": ""}, "1263": {"problem_id": 1263, "answer": "import heapq\nn,k = list(map(int,input().split()))\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\ndef max_d(a,b):\n    return a[b]\n\ndef heapify(a,b):\n    if a.count(b)==len(a):\n        return b\n    else:\n        a.append(b)\n        b.append(a)\n        heapify(a,b)\n        return a\n\nheapq.heapify(a,b)\nprint(max_d(a,b))\n"}, "1264": {"problem_id": 1264, "answer": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] == 1:\n        ans += 1\nprint(ans)\n"}, "1265": {"problem_id": 1265, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nstdin.readline = stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    print('YES' if a[0] == b[0] else 'NO')\n\nmain()"}, "1266": {"problem_id": 1266, "answer": "n = int(input())\nx, y = list(map(int, input().split()))\nprint(\"YES\" if x[0] == y[0] else \"NO\")\n"}, "1267": {"problem_id": 1267, "answer": "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    if a[0] == 0:\n        print(1)\n    else:\n        print(0)\n"}, "1268": {"problem_id": 1268, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint('YES' if a[0] <= b[0] else 'NO')\n\n# cook your dish here\n"}, "1269": {"problem_id": 1269, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nMOD = 998244353\ndef factorial(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return n // 2\n    else:\n        return pow(n, 2, MOD)\ndef gcd(a, b):\n    if a == 0:\n        return b\n    else:\n        a = a * b\n        b = b % MOD\n    return a\ndef main():\n    n, m = list(map(int, input().split()))\n    colours = list(map(int, input().split()))\n    dp = [0] * (m + 1)\n    for i in range(n):\n        dp[i] = dp[i - 1] + gcd(colours[i] % MOD, colours[i] % MOD)\n    print(dp[m])\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1270": {"problem_id": 1270, "answer": "import math\nn = int(input())\nfor i in range(n):\n    s = input()\n    print(s.count(1), end = \" \")\n    print(s.count(2), end = \" \")\n    print(s.count(3), end = \" \")\n    print(s.count(4), end = \" \")\n    print(s.count(5), end = \" \")\n    print(s.count(6), end = \" \")\n    print(s.count(7), end = \" \")\n    print(s.count(8), end = \" \")\n    print(s.count(9), end = \" \")\n    print(s.count(10), end = \" \")\n    print(s.count(11), end = \" \")\n    print(s.count(12), end = \" \")\n    print(s.count(13), end = \" \")\n    print(s.count(14), end = \" \")\n    print(s.count(15), end = \" \")\n    print(s.count(16), end = \" \")\n    print(s.count(17), end = \" \")\n    print(s.count(18), end = \" \")\n    print(s.count(19), end = \" \")\n    print(s.count(20), end = \" \")\n    print(s.count(21), end = \" \")\n    print(s.count(22), end = \" \")\n    print(s.count(23), end = \" \")\n    print(s.count(24), end = \" \")\n    print(s.count(25), end = \" \")\n    print(s.count(26), end = \" \")\n    print(s.count(27), end = \" \")\n    print(s.count(28), end = \" \")\n    print(s.count(29), end = \" \")\n    print(s.count(30), end = \" \")\n    print(s.count(31), end = \" \")\n    print(s.count(32), end = \" \")\n    print(s.count(33), end = \" \")\n    print(s.count(34), end = \" \")\n    print(s.count(35), end = \" \")\n    print(s.count(36), end = \" \")\n    print(s.count(37), end = \" \")\n    print(s.count(38), end = \" \")\n    print(s.count(39), end = \" \")\n    print(s.count(40), end = \" \")\n    print(s.count(41), end = \" \")\n    print(s.count(42), end = \" \")\n    print(s.count(43), end = \" \")\n    print(s.count(44), end = \" \")\n    print(s.count(45), end = \" \")\n    print(s.count(46), end = \" \")\n    print(s.count(47), end = \" \")\n    print(s.count(48), end = \" \")\n    print(s.count(49), end = \" \")\n    print(s.count(50), end = \" \")\n    print(s.count(51), end = \" \")\n    print(s.count(52), end = \" \")\n    print(s.count(53), end = \" \")\n    print(s.count(54), end = \" \")\n    print(s.count(55), end = \" \")\n    print(s.count(56), end = \" \")\n    print(s.count(57), end = \" \")\n    print(s.count(58), end = \" \")\n    print(s.count(60), end"}, "1271": {"problem_id": 1271, "answer": "n, s, k = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\n# R, G, B = [0] * n, [0] * n\n# We are interested in the number of different colors.\n# We can take the max-colors, and find the max-colors.\n# max-colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n\n# We want the number of different colors in each box.\n# We can take the max-colors, and find the max-colors.\n# max-colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n\n# We want the number of different colors in each candy.\n# We can take the max-colors, and find the max-colors.\n# max-colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n\n# We want the number of different colors in each box.\n# We can take the max-colors, and find the max-colors.\n# max-colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n\n# We want the number of different colors in each window.\n# We can take the max-colors, and find the max-colors.\n# max-colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n\n# We want the number of different colors in each window.\n# We can take the max-colors, and find the max-colors.\n# max-colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n\n# We want the number of different colors in each candy.\n# We can take the max-colors, and find the max-colors.\n# max-colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n\n# We want the number of different colors in each candy.\n# We can take the max-colors, and find the max-colors.\n# max-colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n\n# We want the number of different colors in each candy.\n# We can take the max-colors, and find the max-colors.\n# max-colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n\n# We want the number of different colors in each window.\n# We can take the max-colors, and find the max-colors.\n# max-colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n\n# We want the number of different colors in each window.\n# We can take the max-colors, and find the max-colors.\n# max-colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n\n# We want the number of different colors in each candy.\n# We can take the max-colors, and find the max-colors.\n# max-colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range(n))\n\n# We want the number of different colors in each candy.\n# We can take the max-colors, and find the max-colors.\n# max-colors = max(r[i] for i in range(n))\n# colors = max(r[i] for i in range"}, "1272": {"problem_id": 1272, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\ndef dfs(i, j):\n    if i == j:\n        return 0\n    elif i == 0:\n        return 1\n    else:\n        res = float('inf')\n        for a, b in A:\n            if a == b:\n                res = min(res, dfs(i - 1, j - 1) + 1)\n            else:\n                res = min(res, dfs(i - 1, j) + 1)\n        return res\n\n# dfs(i, j)\n# res = float('inf')\n# for a, b in A:\n#     if a == b:\n#         res = min(res, dfs(i - 1, j) + 1)\n#     else:\n#         res = min(res, dfs(i - 1, j) + 1)\n# return res\n\nn, m = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\ndfs(0, n - 1)\nprint(dfs(0, n - 1))\n"}, "1273": {"problem_id": 1273, "answer": "from math import ceil,sqrt\nn = int(input())\nedges = [[] for _ in range(n)]\nfor i in range(n):\n    a, b = map(int, input().split())\n    edges[a-1].append(b-1)\n    edges[b-1].append(a-1)\n\nprint(ceil(sqrt(n)))"}, "1274": {"problem_id": 1274, "answer": "N,M = list(map(int,input().split()))\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\n\ndef total_reward(job):\n    return max(A[job] - B[job] for job in A)\n\ndef total_broad(job):\n    return max(A[job] - B[job] for job in B)\n\ndef total_broad_sum(job):\n    return sum(A[job] - B[job] for job in A)\n\ndef total_broad_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted(job):\n    return sorted(list(range(1, N+1)), key=total_broad_sorted)\n\ndef total_broad_sorted_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sum_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sum_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sorted_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sorted_sum_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sorted_sum_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sorted_sum_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sorted_sum_sum_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sorted_sum_sum_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sorted_sum_sum_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sorted_sum_sum_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sorted_sum_sum_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sorted_sorted_sum_sum_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_sorted_sorted_sorted_sum_sum_sum_sum(job):\n    return sum(A[job] - B[job] for job in B)\n\ndef total_broad_sorted_s"}, "1275": {"problem_id": 1275, "answer": "N, K = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\nd = list(map(int, input().split()))\nprint(c, d)"}, "1276": {"problem_id": 1276, "answer": "def main():\n    N = int(input())\n    S = list(map(int, input().split()))\n    for i in range(N):\n        S[i] = S[i-1]\n    print(len(S))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1277": {"problem_id": 1277, "answer": "from bisect import bisect_left, bisect_right\nN, u, v = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ndef dfs(graph, x):\n    if x == 0:\n        return 1\n    else:\n        for i in graph[x]:\n            if i not in A:\n                A[i] = dfs(graph, i)\n                dfs(graph, x)\n        return 1\n\nvisited = set()\nvisited.add(A)\n\ndfs(A)\n\nans = 0\nfor i in range(N):\n    if A[i] == A[i - 1] and visited:\n        ans += 1\n        visited.add(i)\n        dfs(A)\n\nprint(ans)"}, "1278": {"problem_id": 1278, "answer": "import sys\ninput = sys.stdin.readline\n\nn, x, y = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef count(day):\n    if day == 0:\n        return 1\n    elif day == 1:\n        return sum(a[0] - a[day-1] for a in a[1:])\n    else:\n        return sum(a[day] - a[day-1] for a in a[day+1:])\n\nprint(count(1))\n"}, "1279": {"problem_id": 1279, "answer": "from sys import stdin,stdout\nn,m = list(map(int,stdin.readline().split()))\na = list(map(int,stdin.readline().split()))\nb = list(map(int,stdin.readline().split()))\n\n# a,b = sorted(a),sorted(b)\n\nans = 0\nfor i in range(n):\n    ans += a[i] + b[i]\n\nprint(ans)\n"}, "1280": {"problem_id": 1280, "answer": "s = input()\nk = 0\nfor i in range(k):\n    s = s.replace('0','')\n    k += 1\nprint(k)"}, "1281": {"problem_id": 1281, "answer": "from sys import stdin\ninput = stdin.readline\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nfor i in range(k):\n    a[i] = a[i]*i\nans = 0\nfor i in range(n):\n    ans += a[i]\nprint(ans)"}, "1282": {"problem_id": 1282, "answer": "import sys\n\nsys.setrecursionlimit(10 ** 6)\ninf = 10 ** 20\n\ndef main():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    for i in range(n):\n        print(lst[i])\n\nmain()\n"}, "1283": {"problem_id": 1283, "answer": "n, k = list(map(int, input().split()))\n\ndef max_b(x, y, z):\n    if x == y:\n        return z\n    elif x == z:\n        return 1\n    else:\n        return (max(x, y, z))\n\nl = list(map(int, input().split()))\n\nprint(l[k] + max_b(l[k], k, k))\n"}, "1284": {"problem_id": 1284, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i]%2 == 0:\n        c += a[i]//2\n    else:\n        c += a[i]//2\nprint(c)"}, "1285": {"problem_id": 1285, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nmatrix = [[0] * n for _ in range(n)]\nfor i in range(n):\n    matrix[i][i] = 1\n\nfor i in range(n):\n    x = list(map(int, input().split()))\n    for j in range(n):\n        if matrix[i][j] == x[j]:\n            matrix[i][j] = x[j]\n            break\n\nprint(max(matrix[n - 1][n - 1]))"}, "1286": {"problem_id": 1286, "answer": "def divide(a, b):\n    return a % b\n\ndef gcd(a, b):\n    if a == 0:\n        return 1\n    elif b == 0:\n        return 0\n    else:\n        return gcd(b, a % b)\n\ndef __starting_point():\n    k = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(divide(a, b))\n__starting_point()"}, "1287": {"problem_id": 1287, "answer": "n = int(input())\nA = []\nfor i in range(n):\n    A.append(input().split(' '))\nA.sort(key=lambda x: x[0])\nprint(0.0)"}, "1288": {"problem_id": 1288, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef find(x):\n    if x not in a:\n        return x\n    else:\n        a[x] = find(a[x])\n        return a[x]\n\ndef find_lcm(x, y):\n    if x < y:\n        return y\n    else:\n        return find_lcm(x, y)\n\ndef lcm(x, y):\n    return abs(x - y) // abs(x)\n\ndef max(x, y):\n    if x < y:\n        return x\n    else:\n        return max(y, x)\n\ndef min(x, y):\n    if x < y:\n        return x\n    else:\n        return min(y, x)\n\ndef max_lcm(x, y):\n    if x < y:\n        return x\n    else:\n        return max(y, x)\n\ndef min_lcm(x, y):\n    if x < y:\n        return x\n    else:\n        return min(y, x)\n\ndef solve(n, k):\n    if k == 0:\n        return 0\n    elif k == 1:\n        return 1\n    else:\n        m = n // k\n        m = min(m, k)\n        print(m)\n        return m\n\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(find_lcm(a, k))\n\n__starting_point()"}, "1289": {"problem_id": 1289, "answer": "n = int(input())\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    if a[0] < b[0] and a[1] < b[1]:\n        print(-1)\n    else:\n        print(len(list(map(int, input().split()))) + 1)\n"}, "1290": {"problem_id": 1290, "answer": "n, m = list(map(int, input().split()))\nc = list(map(int, input().split()))\nprint(sum(c) // m)"}, "1291": {"problem_id": 1291, "answer": "n, m = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\nfor i in range(n):\n    m -= 1\n    s[i] = m\n\nprint('YES' if s[-1] == '-1' else 'NO')\n"}, "1292": {"problem_id": 1292, "answer": "from sys import stdin, stdout\nfrom math import *\ninput = stdin.readline\nn, m, p = [int(x) for x in input().split()]\ns = [int(x) for x in input().split()]\n\ndef main():\n    n, m, p = [int(x) for x in input().split()]\n    s = [int(x) for x in input().split()]\n    d = [[] for _ in range(n)]\n    for i in range(m):\n        d[i].append(i)\n    d = [[] for _ in range(n)]\n    for i in range(n):\n        d[i].append(i)\n    d = [[0] * n for _ in range(n)]\n    for i in range(n):\n        for j in range(n):\n            if s[i] == s[j]:\n                continue\n            elif s[i] == s[j]:\n                d[i].pop(j)\n            else:\n                d[i].append(i)\n    print(len(d))\n    for i in range(n):\n        print(d[i][0],d[i][1])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1293": {"problem_id": 1293, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(b[0])"}, "1294": {"problem_id": 1294, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    s = input().rstrip()\n    print(s.count('a') + s.count('z') + s.count('b') + s.count('ab') + s.count('a') + s.count('b') + s.count('z') + s.count('a') + s.count('z'))\n"}, "1295": {"problem_id": 1295, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for i in range(n):\n        x, y = a[i]\n        if x-y == 0:\n            print(i)\n        else:\n            print(b[i] + x + y)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1296": {"problem_id": 1296, "answer": "from fractions import Fraction\ndef factorize(a):\n    if a[0]<=1:\n        return a[0]\n    else:\n        return a[1]\n\nn,s = list(map(int,input().split()))\na = list(map(int,input().split()))\n\nf = Fraction(s)\n\nk,t = 0,0\nfor i in range(n):\n    if a[i]<=s:\n        k += 1\n    elif a[i]==s:\n        t += 1\nprint(k,t)\n"}, "1297": {"problem_id": 1297, "answer": "s = input()\nl = len(s)\nfor i in range(l):\n    if s[i] == 'G':\n        s[i] = 'A'\n    else:\n        s[i] = 'T'\nprint(int(s[0]))"}, "1298": {"problem_id": 1298, "answer": "n = int(input())\ns = input()\nif n <= 2:\n    print(0)\nelse:\n    print(n-2)\n"}, "1299": {"problem_id": 1299, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nm = 2**(n-1)\na = [0]*n\nb = [0]*n\nfor i in range(1, n):\n    a[i] = a[i-1] + b[i-1]\n    b[i] = b[i-1] + a[i-1]\n\nprint(a[n-1])\nprint(b[n-1])\nprint(a[n-1])\nprint(b[n-1])\n\n# a.sort()\n# b.sort()\n\n# print(a)\n# print(b)\n\nans = 0\nfor i in range(n):\n    ans += a[i]\n    a[i] = max(a[i], b[i])\n\nprint(ans)\n"}, "1300": {"problem_id": 1300, "answer": "n,c = map(int,input().split())\na = list(map(int,input().split()))\nl = 0\nr = n-1\nfor i in range(l):\n    if a[i] == 0:\n        a[i] = 1\n        l += 1\n    else:\n        a[i] = 0\n        r -= 1\nprint(c)"}, "1301": {"problem_id": 1301, "answer": "n = int(input())\ns = input()\nl = list(s)\nfor i in range(n):\n    if i.startswith(s[i]):\n        l.append(s[i])\nprint(''.join(l))"}, "1302": {"problem_id": 1302, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\n\nd = {}\nfor i in range(n):\n    d[i] = max(d.get(i, 0), i)\n\n#print(d)\n\ndef __starting_point():\n    n, k = map(int, input().split())\n    d = {}\n    for i in range(n):\n        d[i] = max(d.get(i, 0), i)\n    print(*d)\n__starting_point()"}, "1303": {"problem_id": 1303, "answer": "from sys import stdin,stdout\n\nn,m = map(int,stdin.readline().split())\n\nl,r = 0,0\n\nfor i in range(n):\n    l += int(stdin.readline())\n    r += int(stdin.readline())\n\nprint(l)"}, "1304": {"problem_id": 1304, "answer": ""}, "1305": {"problem_id": 1305, "answer": "n = int(input())\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    if a == 100:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "1306": {"problem_id": 1306, "answer": "n, h = map(int, input().split())\na = [0] + list(map(int, input().split()))\nfor i in range(n):\n    a.append(a[-1] + a[-2])\nprint(sum(a))"}, "1307": {"problem_id": 1307, "answer": "n = int(input())\na = 0\nfor i in range(n):\n    if a%i == 0:\n        a = a//i\n    else:\n        a = 1\nprint(\"Ehab\")"}, "1308": {"problem_id": 1308, "answer": "n, m = list(map(int, input().split()))\ns = input()\nt = input()\n\ndef is_same(x, y):\n    if x == y:\n        return True\n    else:\n        return False\n\nfor i in range(1, n + 1):\n    x, y = list(map(int, input().split()))\n    if is_same(x, y):\n        print('YES')\n    else:\n        print('NO')\n\nprint('YES')\nprint('NO')\n"}, "1309": {"problem_id": 1309, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn = int(input())\nw = list(map(int, input().split()))\nfor i in range(n):\n    w[i] = 1\n    if w[i] > 0:\n        w[i] += 1\nprint(w[n-1] + 2*w[n-2])"}, "1310": {"problem_id": 1310, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    x = a[i]\n    if x == '^':\n        print(max(a[i]))\n    else:\n        print(max(a[i]))"}, "1311": {"problem_id": 1311, "answer": "n = int(input())\nedges = []\nfor i in range(n):\n    x, w = map(int, input().split())\n    edges.append([x, w])\nedges.sort(key=lambda x: x[0])\ns = 0\nfor i in range(n):\n    s += x[0] - x[1]\nprint(s)"}, "1312": {"problem_id": 1312, "answer": "def ai(n, m):\n    if n % m == 0:\n        return 1\n    elif n % m == 1:\n        return m\n    else:\n        return 0\n\nn, m = list(map(int, input().split()))\nl = []\nfor i in range(1, n + 1):\n    l.append(sum(l[i]))\n\nprint(''.join(map(str, l)))\n"}, "1313": {"problem_id": 1313, "answer": "n,k = list(map(int,input().split()))\nl = []\nfor i in range(n):\n    l.append(input())\nl.sort(reverse=True)\ns = 0\nfor i in range(len(l)):\n    if s == 0:\n        s = 1\n    else:\n        s = 0\nprint(\"Second\")\nif s == 0:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 1:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 2:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 3:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 4:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 5:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 6:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 7:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 8:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 9:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 10:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 11:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 12:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 13:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 14:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 15:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 16:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 17:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 18:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 19:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 20:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 21:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 22:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 23:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 24:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 25:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 26:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 27:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 28:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 29:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 30:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 30:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 32:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 33:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 33:\n    print(\"First\")\n    return\nprint(\"Second\")\nif s == 33:\n    print(\"Second\")\n    return\nprint(\"Second\")\nif s == 33:\n    print(\"Second\")\n    return\nprint(\"Second\")\nif s == 33:\n    print(\"Second\")\n    return\nprint(\"Second\")\nif s == 33:\n  "}, "1314": {"problem_id": 1314, "answer": ""}, "1315": {"problem_id": 1315, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(':(' if sum(a) == sum(b) else ':')\n    for i in range(1, n + 1)):\n        print(a[i], b[i])\n"}, "1316": {"problem_id": 1316, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k = list(map(int,input().split()))\ns = list(map(str,input().split()))\n\ndef find(x):\n    if x == x[0]:\n        return x\n    else:\n        return find(x)\n\ndef union(x,y):\n    x = find(x)\n    y = find(y)\n    if x == y:\n        return\n    elif x[0] < y[0]:\n        x.remove(y[0])\n        y.remove(x[0])\n    else:\n        x.insert(0,y[0])\n        y.insert(0,x[0])\n\ndef main():\n    n,k = list(map(int,input().split()))\n    s = list(map(str,input().split()))\n    print(find(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1317": {"problem_id": 1317, "answer": "from sys import stdin,stdout\nn,m = list(map(int,stdin.readline().split()))\nl = []\nfor i in range(n):\n    l.append(int(stdin.readline()))\nl.sort(reverse=True)\nans = 0\nfor i in range(n):\n    ans += sum(l[i] for i in range(m))\nprint(ans)\n"}, "1318": {"problem_id": 1318, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\ns = 0\nfor i in range(n):\n    s += int(input())\n    if s == 0:\n        print(i, end=' ')\n    elif s == 1:\n        print(i, end=' ')\n    else:\n        print(s, end=' ')\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n   "}, "1319": {"problem_id": 1319, "answer": "m = int(input())\ndef factors(n):\n    if n<2:\n        return 0\n    else:\n        return factors(n//2)\n\nfactors(2)\n\nfor i in range(m):\n    print(i*factors(i))"}, "1320": {"problem_id": 1320, "answer": "from sys import stdin,stdout\nfrom collections import defaultdict as dd, deque\nfrom bisect import bisect_left as bl, bisect_right as br, insort_left as br, insort_right as br, insort_top as br, bisect_left as br, bisect_right as br, window_size as w\nfrom functools import reduce as rpl, mas_of_ints as mp\nfrom heapq import heappush, heappop, heappushpop, heapify, heappop, heappush, heappop\nfrom itertools import permutations as p\nfrom operator import itemgetter\nfrom collections import Counter as c\nfrom fractions import Fraction \nfrom functools import reduce, lru_cache\nfrom operator import itemgetter\nfrom time import perf_counter\nfrom random import randint, factorial, random_randint, factorial_unobst = 106, 1e9, 1e6\nfrom bisect import bisect_left as bl, bisect_right as br, bisect_left as br, bisect_right as br, bisect_right as br, bisect\n\ndef main():\n    n = int(input())\n    print(main())\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1321": {"problem_id": 1321, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(max(l[0],l[1]))\n"}, "1322": {"problem_id": 1322, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nn = int(input())\nans = 0\nfor i in range(n):\n    ans += (str(i) +'' + str(i+1))\nprint(ans)"}, "1323": {"problem_id": 1323, "answer": "from sys import stdin,stdout\nfrom math import ceil,sqrt\nfrom bisect import bisect_left as bl,bisect_right as br\nfrom collections import defaultdict as dd,deque\nfrom heapq import *\nfrom functools import reduce,cmp_to_key\nfrom operator import xor\nfrom functools import reduce,cmp_to_matrix\nfrom re import sub,reduce,mul,ulmod,floordiv,truediv,wekhtmel,heapq\nfrom itertools import permutations,combinations,accumulate,takewhile,lru,geodes=-1,-2,-1,-1,-1,-1\nfrom operator import mul,floor,mul\nfrom functools import reduce,cmp_to_key,compress\nfrom heapq import *\nfrom decimal import Decimal,Median,Pow,Modulus,Invariant,Decreasing,Constant,Integers,Inverse,Multiplies,Remainder,Sqrt,sqrt,mul,and,and_,factorial,prod,denominator,divmod,insignal,invmod,is_integer,is_integer_integer,integer=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,64,67,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,18,19,20,21,22,23,24,25,27,28,30,32,34,37,38,41,42,43,44,46,47,48,50,54,57,60,61,64,69,70,72,74,76,77,80,81,84,86,89,90,91,94,97,100,101,104,106,109,110,111,112,113,114,116,118,19,20,21,22,23,24,25,28,30,33,34,37,38,41,42,43,44,46,47,48,50,54,57,64,66,68,69,70,72,74,76,78,81,84,86,90,91,94,99,100,101,106,109,110,111,112,113,116,118,19,20,21,22,23,24,28,30,33,34,37,38,41,42,43,44,46,47,48,50,54,57,64,66,68,70,72,74,76,78,81,84,86,90,91,94,99,100,101,106,109,110,111,112,113,116,118,19,20,21,22,23,24,28,30,33,34,37,38,41,42,43,44,46,47,48,50,54,57,60,61,64,69,70,72,74,76,80,81,84,86,89,90,91,94,99,100,101,106,109,110,111,112,113,116,118,19,20,21,22,23,24,28,30,33,34,37,38,41,42,43,44,46,47,48,50,54,57,64,66,68,69,72,74,76,78,81,84,86,90,91,94,99,100,101,106,109,110,111,112,113,116,118,19,20,21,22,23,24,28,30,33,34,37,38,41,42,43,44,46,47,48,50,54,57,"}, "1324": {"problem_id": 1324, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nstdin.readline = stdin.readline\n\ndef lcm(a,b):\n    return (a*b)//(a+b)\n\n# Driver code\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is Even\n# Function to check if n is Even\n# Function to check if n is odd\n# Function to check if n is Even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n# Function to check if n is odd\n# Function to check if n is odd\n# Function to check if n is even\n#"}, "1325": {"problem_id": 1325, "answer": "n,p = list(map(int,input().split()))\ns = list(map(str,input().split()))\nl = [0]*n\nfor i in range(n):\n    l[i] = int(s[i])\nprint(len(l))\n"}, "1326": {"problem_id": 1326, "answer": "n = int(input())\na = [0]*n\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint(sum(a))"}, "1327": {"problem_id": 1327, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\nz = list(map(int, input().split()))\nprint(max(y[0], z[0]))"}, "1328": {"problem_id": 1328, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef __starting_point():\n    N, M = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    d = 0\n    for i in range(N):\n        d += a[i]\n        a.pop(i)\n        b.pop(i)\n        c = 0\n        for j in range(len(a)):\n            if a[j] == 0:\n                c += 1\n            elif a[j] == 1:\n                c += 1\n            else:\n                break\n        if c > 0:\n            print(d)\n        else:\n            print(-1)\n__starting_point()"}, "1329": {"problem_id": 1329, "answer": "def main():\n    n = int(input())\n    for i in range(n):\n        print(i)\n\nmain()\n"}, "1330": {"problem_id": 1330, "answer": ""}, "1331": {"problem_id": 1331, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m, k = list(map(int, readline().split()))\na = [int(x) for x in readline().split()]\n\ndef dfs(i):\n    if i == 0:\n        return 0\n    elif i == n-1:\n        return 1\n    else:\n        return 0\n\nfor i in range(m):\n    a[i] = min(a[i], k)\n\nprint(dfs(0))\n"}, "1332": {"problem_id": 1332, "answer": "from sys import stdin\ninput = stdin.readline\n\nc, = list(map(int, input().split()))\n\nb = 0\nfor i in range(1, len(c)):\n    if c[i] == 0:\n        b += 1\n    elif c[i] > b:\n        b = c[i]\n    else:\n        break\nprint(b)"}, "1333": {"problem_id": 1333, "answer": "n, m = list(map(int, input().split()))\nr, c = 0, 0\nfor i in range(n):\n    if c == '#':\n        r += 1\n    else:\n        c += '.'\nprint(''.join(map(str, r)))"}, "1334": {"problem_id": 1334, "answer": "def main():\n    n, k = list(map(int, input().split()))\n    s = list(input())\n    for i in range(n):\n        if s[i] == 'a':\n            s[i] = 'a'\n        else:\n            s[i] = 'a'\n    print(''.join(s))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1335": {"problem_id": 1335, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k=list(map(int,input().split()))\na=[int(x) for x in input().split()]\ns=set()\nfor i in range(n):\n    a[i]=list(s.add(a[i]))\n\ndef solve(s):\n    d=0\n    ans=0\n    while s:\n        d+=1\n        s.remove(d)\n        ans+=1\n    print(ans)\n    return\n\n# solve(10)\n# solve(100)\n# solve(1000)\n# solve(500)\n# solve(10,500)\n# solve(100,500)\n# solve(500,1000)\n# solve(100,1000)\n# solve(500,500)\n# solve(100,500)\n# print(solve(10))\n# print(solve(10,500,1000))\n"}, "1336": {"problem_id": 1336, "answer": "from sys import stdin\n\nn = int(stdin.readline())\ninp = list(map(int, stdin.readline().split()))\nm = 10**9 + 7\nans = 0\nfor i in range(n):\n    ans += inp[i]\nprint(ans)"}, "1337": {"problem_id": 1337, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(max(a[0], b[0]))\n"}, "1338": {"problem_id": 1338, "answer": "from collections import deque\nn, m = map(int, input().split())\ns = set()\nfor i in range(n):\n    s.add(i)\n    if m in s:\n        s.add(m)\n    else:\n        s.add(m)\nprint(' '.join(s))"}, "1339": {"problem_id": 1339, "answer": "from collections import deque\ndef lcm(a,b):\n    return a*b//(a+b)\nn=int(input())\nl=list(map(int,input().split()))\nl.sort()\nans=0\nfor i in range(n):\n    ans+=l[i]\nprint(ans)\n"}, "1340": {"problem_id": 1340, "answer": "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nans = 0\nfor i in range(n):\n    if l[i] > l[i-1]:\n        ans += 1\n        l[i] -= l[i-1]\nprint(ans)\n"}, "1341": {"problem_id": 1341, "answer": "s = input()\nt = input()\n\ndef search(s):\n    if s == t:\n        return 1\n    elif s[0] == 'R':\n        return 1\n    elif s[0] == 'G':\n        return 1\n    elif s[0] == 'B':\n        return 1\n    else:\n        return 0\n\ns = input()\nt = input()\n\nprint(search(s))\n"}, "1342": {"problem_id": 1342, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i] > b[i]:\n        c += 1\n    else:\n        break\nprint(c)"}, "1343": {"problem_id": 1343, "answer": "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nf = [[0] * m for _ in range(n)]\nfor i in range(1, n):\n    f[i][0] = a[i]\nfor i in range(1, m):\n    for j in range(i, n):\n        if j == 0:\n            f[i][j] = f[i-1][j] + f[i][j-1]\n        else:\n            f[i][j] = f[i][j-1] + f[i-1][j]\nprint(sum(f[-1]))\n"}, "1344": {"problem_id": 1344, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a))"}, "1345": {"problem_id": 1345, "answer": "n = int(input())\na = list(map(int, input().split()))\nsumm = \"-\"\nfor i in range(n):\n    if a[i] == \"-\":\n        summ += \"+\"\n    else:\n        summ += \"-\"\nprint(summ)\n"}, "1346": {"problem_id": 1346, "answer": "import math\nn, m, p = list(map(int, input().split()))\na = [0] * (m + 1)\nb = [0] * (m + 1)\nfor i in range(1, n + 1):\n    if a[i] == 0:\n        a[i] = 1\n    elif a[i] == 1:\n        a[i] = a[i - 1]\n    else:\n        a[i] = a[i - 1]\nprint(' '.join(map(str, a)))\n"}, "1347": {"problem_id": 1347, "answer": "from collections import defaultdict\nn = int(input())\ns = input()\nl = defaultdict(list)\nfor i in range(n):\n    x, y = map(int, input().split())\n    l[x].append(y)\n    l[y].append(x)\n\ndef solve(s):\n    if len(s) == 0:\n        return 0\n    ans = 0\n    for i in range(len(s)):\n        if s[i] in l[s[i]]:\n            ans += 1\n    return ans\n\nprint(solve(s))"}, "1348": {"problem_id": 1348, "answer": "from collections import defaultdict, deque\nn, k = list(map(int, input().split()))\nedges = defaultdict(set)\nfor i in range(1, n):\n    if i in edges:\n        edges[i].add(i)\n    else:\n        edges[i].add(i)\n\ndef dfs(vertex):\n    if len(edges[vertex]) == 0:\n        return 1\n    else:\n        return 0\n\ndef main():\n    n, k = list(map(int, input().split()))\n    edges = defaultdict(list)\n    for i in range(n):\n        if i not in edges:\n            edges[i].append(i)\n        else:\n            edges[i].extend(edges[i])\n    print(sum(edges[k] for k in range(1, n) if dfs(vertex) or k == 1))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1349": {"problem_id": 1349, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    print(min(x, y))\n"}, "1350": {"problem_id": 1350, "answer": "n, k = list(map(int, input().split()))\ns = input()\nl = 0\nfor i in range(k):\n    if s[i] not in l:\n        l = s[i]\n    else:\n        l = len(s)\nprint(l)\n"}, "1351": {"problem_id": 1351, "answer": "import sys\n\ndef solve():\n    l, r = map(int, input().split())\n    print(solve())\n\ndef __starting_point():\n    solve()\n__starting_point()"}, "1352": {"problem_id": 1352, "answer": "n, x = map(int, input().split())\na = list(map(int, input().split()))\nfor i in range(n):\n    if a[i] > x:\n        a[i] -= x\n    else:\n        a[i] += x\nprint(sum(a))"}, "1353": {"problem_id": 1353, "answer": "n, m, a, b = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += input()\nprint(s)\n"}, "1354": {"problem_id": 1354, "answer": "n, k, a = list(map(int, input().split()))\nshots = []\nfor i in range(n):\n    shots.append(int(input()))\nshots.sort(key = lambda x: x[0])\nshots.sort(key = lambda x: x[1])\npos = shots[0][0]\npos.swapcase()\nprint(len(shots))\n"}, "1355": {"problem_id": 1355, "answer": "from math import sqrt, ceil, log\n\ndef lcm(a, b):\n    return ceil(sqrt(a*a + b*b) / 2)\n\nn, m = list(map(int, input().split()))\n\ng = [[] for _ in range(n)]\nfor i in range(m):\n    g[i].append(i)\n\nd = dict()\nfor i in range(n):\n    d[i] = 1\n\nfor i in range(m):\n    for j in range(n):\n        if i == j:\n            continue\n        d[i] += d[j]\n\nprint(d.get(0, 0))\n"}, "1356": {"problem_id": 1356, "answer": "s = input()\nn = len(s)\nl = 0\nfor i in range(n):\n    if s[i]!= 'a' and s[i]!= 'b' and s[i]!= 'c' and s[i]!= 'd' and s[i]!= 'e' and s[i]!= 'i' and s[i]!= 'j' and s[i]!= 'k' and s[i]!= 'l' and s[i]!= 'o' and s[i]!= 'p' and s[i]!= 'q' and s[i]!= 'r' and s[i]!='s' and s[i]!= 't' and s[i]!= 't' and s[i]!= 'u' and s[i]!= 'u' and s[i]!= 'u' and s[i]!= 'u':\n        l += 1\nprint(l)"}, "1357": {"problem_id": 1357, "answer": "n,m = list(map(int,input().split()))\na = list(map(int,input().split()))\na.sort()\nprint(n-a[0])\n"}, "1358": {"problem_id": 1358, "answer": "def __starting_point():\n    k, n = list(map(int, input().split()))\n    s = input()\n    for i in range(n):\n        s = s.replace('0', '')\n        s = s.replace('0', '')\n        s = s.replace('0', '0')\n    print(max(s, 0))\n__starting_point()"}, "1359": {"problem_id": 1359, "answer": "from collections import deque\ndef main():\n    n, m = list(map(int, input().split()))\n    d = {}\n    for i in range(m):\n        if i not in d:\n            d[i] = set()\n        else:\n            d[i].add(i)\n            d[i] |= set()\n    q = deque([0])\n    q.append(0)\n    while len(q) > 0:\n        i = q.pop()\n        if i in d:\n            print(i)\n            continue\n        for j in d[i]:\n            if j not in d:\n                d[j] = set()\n            else:\n                d[j].add(i)\n                d[i].add(j)\n        q.append(i)\n    return q\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1360": {"problem_id": 1360, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(day)\n"}, "1361": {"problem_id": 1361, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = 0\nfor i in range(n):\n    if a[i] < a[i - 1]:\n        l += 1\n    else:\n        l += a[i]\nprint(l)"}, "1362": {"problem_id": 1362, "answer": "n, p, m = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[i] = 1\nfor i in range(m):\n    if d[i] < d[i-1]:\n        d[i] = d[i-1]\nprint(d.get(0, 0))\n"}, "1363": {"problem_id": 1363, "answer": ""}, "1364": {"problem_id": 1364, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\nt = list(map(int,stdin.readline().split()))\nl = [0]*n\nfor i in range(n):\n    t[i]+=1\nans = 0\nfor i in range(n):\n    if t[i]%2==1:\n        ans+=1\n        break\nprint(ans)\n"}, "1365": {"problem_id": 1365, "answer": "from collections import deque\nn, k = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor _ in range(n - 1):\n    u, v = list(map(int, input().split()))\n    edges[u].append(v)\n    edges[v].append(u)\n\nd = 10**9 + 7\ng = 10**9 + 7\nans = 0\nfor i in range(n - 1):\n    if i % 2 == 0:\n        ans += d\n        d = min(d, g)\n    elif i % 2 == 1:\n        ans += d\n        d = min(d, g)\n    else:\n        ans += d\n        d = min(d, g)\n    print(ans % (10**9 + 7))\n"}, "1366": {"problem_id": 1366, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(n-b)"}, "1367": {"problem_id": 1367, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef is_interpreter(a):\n    return a[0] == a[1]\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(is_interpreter(a))\n__starting_point()"}, "1368": {"problem_id": 1368, "answer": "n,a,b = map(int,input().split())\nl = list(map(int,input().split()))\nm = a*b\nans = 0\nfor i in range(n):\n    ans += l[i]\n    m = max(m,l[i])\nprint(ans)"}, "1369": {"problem_id": 1369, "answer": "N = int(input())\nx, y = map(int, input().split())\np = [[0]*1000 for _ in range(y)]\nfor i in range(N):\n    x, y = map(int, input().split())\n    p[x].append(y)\n    p[y].append(x)\nprint(p[N-1][0])"}, "1370": {"problem_id": 1370, "answer": "# coding: utf-8\n# Your code here!\nimport sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\ndef main():\n    H, W = list(map(int, read().split()))\n    S = list(map(int, read().split()))\n    K = 0\n    for i in range(H):\n        S.append(0)\n        K += 1\n        if S[i] == 0:\n            K -= 1\n        elif S[i] == 1:\n            W -= 1\n        else:\n            W -= W\n            K -= 1\n        if K == 0:\n            print(K)\n            return\n        W -= 1\n        K -= 1\n        if W == 0:\n            print(K)\n            return\n        W -= 1\n        K -= 1\n        if K == 0:\n            print(K)\n            return\n        W -= 1\n        K -= 1\n        if K == 0:\n            print(K)\n            return\n        W -= 1\n        K -= 1\n        if W == 0:\n            print(K)\n            return\n        W -= 1\n        K -= 1\n        if K == 0:\n            print(K)\n            return\n        W -= 1\n        K -= 1\n        if K == 0:\n            print(K)\n            return\n        W -= 1\n        K -= 1\n        if K == 0:\n            print(K)\n            return\n        W -= 1\n        K -= 1\n        if K == 0:\n            print(K)\n            return\n        W -= 1\n        K -= 1\n        if K == 0:\n            print(K)\n            return\n        W -= 1\n        K -= 1\n        if K == 0:\n            print(K)\n            return\n        W -= 1\n        K -= 1\n        if K == 0:\n            print(K)\n            return\n        W -= 1\n        K -= 1\n        if K == 0:\n            print(K)\n  "}, "1371": {"problem_id": 1371, "answer": "S = input()\nMOD = 10**9 + 7\n\nfor i in range(1,S+1):\n    print(i*(i+1),end=' ')\n"}, "1372": {"problem_id": 1372, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    import heapq\n    import numpy as np\n    from collections import defaultdict as dd\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = dd(a)\n    d.sort(key=lambda x: x[0])\n    ans = 0\n    for i in range(n):\n        ans += d[a[i]].get(a[i], 0)\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1373": {"problem_id": 1373, "answer": "import math\ndef factorial(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return math.factorial(n // 2)\n    else:\n        return math.factorial(n // 3)\n\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    s = sum(n)\n    print(forial(s))\n\n__starting_point()"}, "1374": {"problem_id": 1374, "answer": "from bisect import bisect_left,bisect_right\nN = int(input())\na = list(map(int, input().split()))\nb = [0]*N\nfor i in range(N):\n    b[i] = sorted(b[i+1:], reverse=True)[:bisect_left(b, i+1)].pop()\nprint('\\n'.join(map(str, b)))"}, "1375": {"problem_id": 1375, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i]\nprint(s)"}, "1376": {"problem_id": 1376, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\n\ndef calc(A, i):\n    if i == 0:\n        return A[i]\n    elif i == len(A):\n        return A[i]\n    else:\n        return float('inf')\n\nd = {}\nfor i in range(n):\n    d[A[i]].append(i)\n\nans = 0\nfor i in range(n):\n    ans += calc(A, i)\n\nprint(ans)\n"}, "1377": {"problem_id": 1377, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint('YES' if a[0]==1 else 'NO')"}, "1378": {"problem_id": 1378, "answer": "n = int(input())\nB = [0]*n\nfor i in range(n):\n    B[i] = list(map(int,input().split()))\n\ndef rec(B,start,end):\n    if B[start] == end:\n        return 0\n    elif B[start] == 0:\n        return 1\n    else:\n        res = rec(B,start+1,end)\n        if res == 0:\n            return 1\n        else:\n            res = rec(B,start,end+1)\n            if res == 0:\n                return 1\n            else:\n                res = rec(B,start,end+1)\n                if res == 0:\n                    return 1\n                else:\n                    res = rec(B,start,end+1)\n                    if res == 0:\n                        return 1\n                    else:\n                        res = rec(B,start,end+1)\n                        if res == 0:\n                            return 1\n                        else:\n                            res = rec(B,start,end+1)\n                            if res == 0:\n                                return 1\n                            else:\n                                res = rec(B,start,end+1)\n                                if res == 0:\n                                    return 1\n                                else:\n                                    res = rec(B,start,end+1)\n                                    if res == 0:\n                                        return 1\n                                    else:\n               "}, "1379": {"problem_id": 1379, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, d = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(1, n):\n    if a[i] == m:\n        cnt += 1\n        continue\n    elif a[i] == 0:\n        cnt += 1\n        continue\n    else:\n        print(cnt)\n        break\n\nprint(cnt)\n"}, "1380": {"problem_id": 1380, "answer": "from collections import deque\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nl = deque(sorted(a))\nfor i in range(1, n):\n    if i + 1 - l[i] < k:\n        l.pop()\n    else:\n        l.append(i + 1 - l[i])\nprint(len(l))\n"}, "1381": {"problem_id": 1381, "answer": "from sys import stdin,stdout\nfrom math import ceil,log2,gcd,insort,sqrt,factorial,log10,inf,floor,sqrt,ceil,copysign,acos,asin,cos,tan,atan2,atanpi,atan(1),pow,floor,floormod,fmod,fmod2\nfrom heapq import *,heappop,heappush,heapify,heapdec,heappop,heapquot,*\nfrom bisect import *,bisect,tright,load,loaddis,loadmul,loadflo,loadmulmod,loadmulmod2,loadreduce,reduce_,reducemod,reducemod2\nfrom collections import defaultdict as dd,deque,recover,merges,compress,hex,nsmall,nth,nonlocal\nfrom itertools import combinations as comb,permutations as perm\nfrom functools import reduce,cmp_to_key\nfrom operator import mul,geometric,mod,sqrt,time,sqrtmod,factorial,log10,inf,floor,inf,floormod,linalg,INF,INF64,INF128,INF256,INF268,INF3064,INF3066,INF3066,INF3068,INF3069,INF3070,INF3071,INF3074,INF3076,INF3077,INF3078,INF3079,INF3080,INF3081,INF3082,INF3083,INF3084,INF3085,INF3086,INF3087,INF3088,INF3089,INF3089_,INF3090,INF3091,INF3092,INF3093,INF3094,INF3095,INF3096,INF3098,INF3099,INF3099_,INF30A0,INF30A1,INF30A2,INF30A3,INF30A4,INF30A5,INF30A6,INF30A7,INF30A8,INF30A9,INF30AA,INF30AB,INF30AC,INF30AD,INF30B0,INF30B1,INF30B2,INF30B3,INF30B4,INF30B5,INF30B6,INF30B7,INF30B8,INF30B9,INF30BC,INF30BE,INF30BF,INF30BF1,INF30BF2,INF30BF3,INF30BF4,INF30BF5,INF30BF6,INF30BF7,INF30B0,INF30B1,INF30B2,INF30B3,INF30B4,INF30B5,INF30B6,INF30B7,INF30B8,INF30B9,INF30BC,INF30BE,INF30BF,INF30BE1,INF30BE2,INF30BE3,INF30BE4,INF30BE5,INF30BE6,INF30BE7,INF30BE8,INF30BE9,INF30BE0,INF30BE1,INF30BE2,INF30BE3,INF30BE4,INF30BE5,INF30BE6,INF30BE7,INF30BE8,INF30BE9,INF30BE0,INF30BE1,INF30BE2,INF30BE3,INF30BE4,INF30BE5,INF30BE6,INF30BE7,INF30BE8,INF30BE9,INF30BE0,INF30BE1,INF30BE2,INF30BE3,INF30BE4,INF30BE5,INF30BE6,INF30BE7,INF30BE8,INF30BE9,INF30BE0,INF30BE1,INF30BE2,INF30BE3,INF30BE4,INF30BE5,INF30BE6,INF30BE7,INF30BE8,INF30BE9,INF30BE0,INF30BE"}, "1382": {"problem_id": 1382, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nedges = [[] for _ in range(m)]\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    edges[a].append(b)\n    edges[b].append(a)\n\ndef dfs(v):\n    if len(edges[v]) == 0:\n        return 0\n    else:\n        v.append(v[0])\n        for i in range(1, len(edges[v])):\n            if v[i] == v[i - 1]:\n                v.pop()\n                continue\n            elif v[i] == v[i - 1]:\n                v.pop()\n                continue\n            else:\n                v.append(v[i])\n                dfs(v)\n                break\n            \nprint(' '.join(map(str, v)))\n\n"}, "1383": {"problem_id": 1383, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m=map(int,input().split())\na=[int(i) for i in input().split()]\nb=[int(i) for i in input().split()]\n\nif m%2==0:\n    print(1)\nelse:\n    print(0)\n"}, "1384": {"problem_id": 1384, "answer": "n = int(input())\ns = list(map(int, input().split()))\nprint(max(s))"}, "1385": {"problem_id": 1385, "answer": "def is_prime(n):\n    if n < 2:\n        return False\n    elif n == 1:\n        return True\n    else:\n        i = 2\n        while i <= n:\n            if n % i == 0:\n                return False\n            i += 1\n        return True\n\ndef __starting_point():\n    input = input().strip()\n    print(*is_prime(input()))\n__starting_point()"}, "1386": {"problem_id": 1386, "answer": "from fractions import gcd\ndef gcd(a, b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return gcd(b % a, a)\n    else:\n        return b // a\n\ndef __starting_point():\n    n = int(input())\n    print(__starting_point())\n__starting_point()"}, "1387": {"problem_id": 1387, "answer": "n, t = map(int, input().split())\na = list(map(int, input().split()))\np = [0] * (n + 1)\nfor i in range(n):\n    p[i] = a[i]\nprint('YES')"}, "1388": {"problem_id": 1388, "answer": "from sys import stdin\ninput = stdin.readline\nn = int(input())\nl = list(map(int,input().split()))\nl.sort()\nans = [0]*n\nfor i in range(n):\n    a,b,c = l[i]\n    if a not in ans:\n        ans[a] = c\n    else:\n        ans[a] = b\nprint(ans[-1])"}, "1389": {"problem_id": 1389, "answer": ""}, "1390": {"problem_id": 1390, "answer": "n, m = list(map(int, input().split()))\nf = [0] * (n + 1)\nfor i in range(1, n + 1):\n    if f[i] < m:\n        f[i] += m\n    else:\n        f[i] = m\nprint(n)"}, "1391": {"problem_id": 1391, "answer": "n, m, p = list(map(int, input().split()))\nb = list(map(int, input().split()))\np = list(map(int, input().split()))\n\ndef maxcost(b, p):\n    if p[p[0]] < b[p[0]]:\n        return b[p[0]]\n    elif p[p[0]] > b[p[0]]:\n        return maxcost(b, p)\n    else:\n        return maxcost(b, p)\n\nprint(maxcost(b, p))\n"}, "1392": {"problem_id": 1392, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(len(a))"}, "1393": {"problem_id": 1393, "answer": "s = input()\nn = len(s)\nl = []\nfor i in range(n):\n    if s[i] == 'A':\n        l.append(i)\n    else:\n        l.append(i)\nprint(''.join(l))\n"}, "1394": {"problem_id": 1394, "answer": "def main():\n    s = input()\n    for i in range(len(s)):\n        if s[i] == \"0\":\n            print(\":(\")\n            break\n        else:\n            s = s[:i] + s[i+1:]\n            print(\"\".join(s))\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            "}, "1395": {"problem_id": 1395, "answer": "from math import ceil\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        print(ceil(n / i))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1396": {"problem_id": 1396, "answer": "n, k, x = list(map(int, input().split()))\nc = list(map(int, input().split()))\nfor i in range(n):\n    if x == c[i]:\n        c.pop()\n    else:\n        c.append(x)\n\nprint(max(c))\n"}, "1397": {"problem_id": 1397, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ns = 0\nfor _ in range(int(input())):\n    n,m = list(map(int,input().split()))\n    if m%2==0:\n        s += 1\n    else:\n        s += m//2\nprint(s)"}, "1398": {"problem_id": 1398, "answer": "n = int(input())\nfor i in range(n):\n    c = list(map(int, input().split()))\n    l = len(c)\n    m = min(c[0], c[1])\n    if m == 0:\n        print(0)\n    else:\n        print(m)\n"}, "1399": {"problem_id": 1399, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nc = [int(i) for i in input().split()]\n\ndef find(x, y):\n    if x < 0 or y < 0:\n        return None\n    elif x == 0 or y == 0:\n        return None\n    else:\n        x, y = y, x % 10\n        return find(x, y)\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    c = [int(i) for i in input().split()]\n    d = [int(i) for i in input().split()]\n    e = [int(i) for i in input().split()]\n    f = [int(i) for i in input().split()]\n    g = [int(i) for i in input().split()]\n    h = [int(i) for i in input().split()]\n    i = 0\n    j = 0\n    while i < n:\n        if find(a[i], b[j]) == find(c[j], g[i]):\n            i += 1\n            j += 1\n        else:\n            i += 1\n            j += 1\n            continue\n        f.append(i)\n        g.append(j)\n        e.append(i)\n        e.append(j)\n        e.append(j)\n    print(sum(f))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1400": {"problem_id": 1400, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, t = list(map(int, input().split()))\na = [0] * n\nfor i in range(t):\n    a[i] += 1\nprint(a[-1])"}, "1401": {"problem_id": 1401, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ntree = list(map(int, input().split()))\n\ndef dfs(node, parent):\n    if parent == node:\n        return 1\n    elif parent == None:\n        return 0\n    else:\n        p, c = node.p, parent.p\n        if p == None:\n            return 0\n        else:\n            return sum(dfs(i, parent) for i in range(p, c))\n\ndef __starting_point():\n    n = int(input())\n    tree = list(map(int, input().split()))\n    dfs(0, tree)\n__starting_point()"}, "1402": {"problem_id": 1402, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n\n    n = int(input())\n    l = list(map(int, input().split()))\n\n    ans = 1000000007\n    for i in range(n):\n        if l[i] == \"?\":\n            ans = max(ans, 1000000007)\n        else:\n            ans = max(ans, l[i] - l[i - 1])\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1403": {"problem_id": 1403, "answer": "def solve(n, k):\n    if n == 0:\n        return 0\n    elif k == 1:\n        return n\n    else:\n        return solve(n-1, k-1) + solve(n-1, k-1)\n\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(solve(n, k))\n__starting_point()"}, "1404": {"problem_id": 1404, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 998244353\nfor i in range(n):\n    if a[i] == -1:\n        m = m + 1\nprint(m)"}, "1405": {"problem_id": 1405, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a[0])"}, "1406": {"problem_id": 1406, "answer": "n, k, d = list(map(int, input().split()))\ns = sorted(list(range(1, n+1)))\nprint('1\\n'.join(s))\n"}, "1407": {"problem_id": 1407, "answer": "n, m = list(map(int, input().split()))\na = [0] * n\nfor i in range(n):\n    a[i] += 1\nprint(min(a))\n"}, "1408": {"problem_id": 1408, "answer": "n = int(input())\nfor i in range(n):\n    print(n-i-1)\n"}, "1409": {"problem_id": 1409, "answer": "n, k = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n    s[i] += s[i-1]\nprint(sum(s))"}, "1410": {"problem_id": 1410, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nedges = list(map(int, input().split()))\n\nedges.sort(key=lambda x: x[0])\n\ndef dfs(i, visited):\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n    visited.add(i)\n  "}, "1411": {"problem_id": 1411, "answer": "import sys\ninput = sys.stdin.readline\n\nn,s = list(map(int,input().split()))\np = list(map(int,input().split()))\n\ns = sorted(list(map(int,input().split())))\n\nans = 0\nfor i in range(n):\n    ans += s[i]\n    s[i] = s[i] + s[i - 1]\n\nprint(ans)\n"}, "1412": {"problem_id": 1412, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\n\nd = {}\nfor i in range(n):\n    d[i] = list(map(int, readline().split()))\n\ndef max_prod(a, b):\n    if a not in d:\n        d[a] = []\n    elif b not in d:\n        d[b] = []\n    else:\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[b].append(a)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a].append(b)\n        d[a]."}, "1413": {"problem_id": 1413, "answer": "n = int(input())\ns = list(map(str, input()))\nprint(len(s))"}, "1414": {"problem_id": 1414, "answer": "n, m = list(map(int, input().split()))\ns = list(map(int, input().split()))\nfor i in range(n):\n    s.append(input())\nprint('\\n'.join(s))"}, "1415": {"problem_id": 1415, "answer": "from sys import stdin,stdout\ndef main():\n    x,y,x_0,y_0,y_0,x,y = list(map(int,stdin.readline().split()))\n    stdout.write(str(x) + \" \" + str(y) + \" \" + str(x_0) + \" \" + str(y_0) + \" \" + str(x_0_0) + \" \" + str(y_0_0) + \" \" + str(x_0_0_0) + \" \" + str(y_0_0_0_0))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1416": {"problem_id": 1416, "answer": "n,w = list(map(int,input().split()))\na = list(map(int,input().split()))\n\ndef dfs(x,y):\n    if x<y:\n        return 0\n    elif x>y:\n        return 1\n    else:\n        return 0\n\nfor i in range(n):\n    x,y = list(map(int,input().split()))\n    a[x-1] += 1\n    a[y-1] += 1\n\nprint(max(a))\n"}, "1417": {"problem_id": 1417, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 998244353\nfor i in range(n):\n    if a[i] % m == 0:\n        m = a[i] // m\nprint(m)"}, "1418": {"problem_id": 1418, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a[n-1])"}, "1419": {"problem_id": 1419, "answer": "import math\ndef wr(s, w):\n    if w == '-':\n        return 0\n    elif w == '+':\n        return 1\n    elif w == '*':\n        return 2\n    elif w == '+':\n        return 3\n    elif w == '*':\n        return 4\n    elif w == '+':\n        return 5\n    elif w == '*':\n        return 6\n    elif w == '+':\n        return 7\n    elif w == '*':\n        return 8\n    elif w == '+':\n        return 9\n    elif w == '*':\n        return 10\n    elif w == '+':\n        return 11\n    elif w == '*':\n        return 12\n    elif w == '+':\n        return 13\n    elif w == '*':\n        return 14\n    elif w == '+':\n        return 15\n    elif w == '*':\n        return 16\n    elif w == '+':\n        return 17\n    elif w == '*':\n        return 18\n    elif w == '+':\n        return 19\n    elif w == '*':\n        return 20\n    elif w == '+':\n        return 21\n    elif w == '*':\n        return 22\n    elif w == '+':\n        return 23\n    elif w == '*':\n        return 24\n    elif w == '+':\n        return 25\n    elif w == '*':\n        return 26\n    elif w == '+':\n        return 27\n    elif w == '*':\n        return 28\n    elif w == '+':\n        return 29\n    elif w == '*':\n        return 30\n    elif w == '+':\n        return 31\n    elif w == '*':\n        return 32\n    elif w == '+':\n        return 33\n    elif w == '*':\n        return 34\n    elif w == '+':\n        return 35\n    elif w == '*':\n        return 36\n    elif w == '+':\n        return 37\n    elif w == '*':\n        return 38\n    elif w == '+':\n        return 38\n    elif w == '*':\n        return 39\n    elif w == '+':\n        return 39\n    elif w == '*':\n        return 40\n    elif w == '+':\n        return 40\n    elif w == '*':\n        return 41\n    elif w == '+':\n        return 41\n    elif w == '*':\n        return 42\n    elif w == '+':\n        return 42\n    elif w"}, "1420": {"problem_id": 1420, "answer": "import sys\n\nn, l = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nd = 0.0\nfor i in range(n):\n    d += atan2(a[i], i)\n    d = min(d, atan2(a[i], i))\nprint(d)\n\n"}, "1421": {"problem_id": 1421, "answer": "n = int(input())\ng = []\nfor i in range(n):\n    g.append(list(map(int, input().split())))\n\nl = len(g)\ns = 0\nfor i in range(n-1):\n    if g[i] == 0:\n        s += 1\n        break\n    elif g[i] == 1:\n        s += 1\n        break\n    else:\n        s += g[i]\nprint(s)"}, "1422": {"problem_id": 1422, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = 10**9\n    for i in range(n-1):\n        if a[i]==0:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n            break\n    else:\n        print(\"NO\")\n        \nsolve()\n"}, "1423": {"problem_id": 1423, "answer": "def __starting_point():\n    n, l, r = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(''.join(map(str, a)))\n\n__starting_point()"}, "1424": {"problem_id": 1424, "answer": "def main():\n    n, m, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    for i in range(n - 1):\n        x = a[i]\n        if x > 0:\n            print(x)\n        else:\n            print(x, end ='')\n            break\n            \ndef __starting_point():\n    main()\n__starting_point()"}, "1425": {"problem_id": 1425, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a.append(i)\nprint('YES' if a[-1]<=a[-2] else 'NO')"}, "1426": {"problem_id": 1426, "answer": "import sys\nsys.setrecursionlimit(10**7)\n\ndef dijkstra(graph, n, m):\n    if graph[n] is None:\n        return 0\n    d = dijkstra(graph, n-1, m)\n    if d == 0:\n        return 0\n    else:\n        res = float('inf')\n        for i in range(n):\n            if graph[i] is None:\n                continue\n            res = min(res, d + 1)\n        graph[i] = graph[i].copy()\n        d = d + 1\n        for j in range(n):\n            if graph[j] is None:\n                continue\n            res = min(res, d + 1)\n        graph[j].remove(graph[i].copy())\n        return res\n\ndef dijkstra_n(graph, n, m):\n    if graph[n] is None:\n        return 0\n    d = dijkstra(graph, n-1, m)\n    if d == 0:\n        return 0\n    else:\n        res = float('inf')\n        for i in range(n):\n            if graph[i] is None:\n                continue\n            res = min(res, d + 1)\n        graph[i].remove(graph[i].copy())\n        return res\n\ndef dijkstra_m(graph, n, m):\n    if graph[n] is None:\n        return 0\n    m = m + 1\n    if m == 0:\n        return 0\n    else:\n        res = float('inf')\n        for i in range(n):\n            if graph[i] is None:\n                continue\n            res = min(res, d + 1)\n        graph[i].remove(graph[i].copy())\n        return res\n\ndef dijkstra_n_m(graph, n, m):\n    if graph[n] is None:\n        return 0\n    m = m + 1\n    if m == 0:\n        return 0\n    else:\n        res = float('inf')\n        for i in range(n):\n            if graph[i] is None:\n                continue\n            res = min(res, d + 1)\n        graph[i].remove(graph[i].copy())\n        return res\n\ndef dijkstra_l(graph, n, m):\n    if graph[n] is None:\n        return 0\n    m = m + 1\n    if m == 0:\n        return 0\n    else:\n        res = float('inf')\n        for i in range(n):\n            if graph[i] is None:\n  "}, "1427": {"problem_id": 1427, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(main())\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1428": {"problem_id": 1428, "answer": "import sys\ninput = sys.stdin.readline\n\nn,c = list(map(int,input().split()))\nd = {}\nfor i in range(n):\n    x,y,d = list(map(int,input().split()))\n    x -= 1\n    y -= 1\n    d[x] = y\n    d[y] = x\n    c[x] = y\n    c[y] = x\n\nans = 0\nfor i in range(n):\n    ans += d.get(i,0)\n    ans -= d.get(i,1)\n    ans += d.get(i,0)\n    ans -= d.get(i,1)\n    ans += d.get(i,0)\nprint(ans)\n"}, "1429": {"problem_id": 1429, "answer": "def func(lst,ind,n):\n if ind==n:\n  return 0\n else:\n  res=0\n  for i in range(ind,n):\n   if lst[i]==lst[i+ind] and lst[i]==lst[i+ind+ind]:\n    res+=1\n  return res\nn=int(input())\nlst=list(map(int,input().split()))\nlst.sort()\nprint(len(lst))\n"}, "1430": {"problem_id": 1430, "answer": "from collections import deque\nN,K=map(int,input().split())\ns=list(input())\nfor i in range(N):\n    if s[i]==1:\n        s.pop(i)\n    else:\n        s.append(i+1)\nprint(len(s))"}, "1431": {"problem_id": 1431, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = 0\n    for i in range(n):\n        if a[i] == 1:\n            m = m + 1\n    print(m)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1432": {"problem_id": 1432, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    rain = 0\n    for i in range(n):\n        rain += a[i]\n        if rain <= a[i]:\n            rain -= a[i]\n    print(rain)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1433": {"problem_id": 1433, "answer": "n, m = list(map(int, input().split()))\npositions = []\nfor i in range(n):\n    if i % 2 == 0:\n        positions.append(i)\n    else:\n        positions.append(i)\nprint(len(positions))\nfor i in range(n):\n    print(positions[i][0], positions[i][1])\n"}, "1434": {"problem_id": 1434, "answer": "n = int(input())\nl = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n    ans += l[i]\n    l[i] = l[i+1]\nprint(ans)"}, "1435": {"problem_id": 1435, "answer": "from math import ceil,log10\nn = int(input())\na = list(map(int,input().split()))\ns = \"1234567899999999999999999999987654321\"\nfor i in range(1,n):\n    s += str(i)\nprint(int(s))"}, "1436": {"problem_id": 1436, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n    if s[i] == -1:\n        s[i] = s[i] + 1\nprint(len(s))"}, "1437": {"problem_id": 1437, "answer": "s = input()\nn = len(s)\nm = 10**9 + 7\nfor i in range(n):\n    if s[i] == '_':\n        m = pow(10,m,m)\n        break\nprint(m)\n"}, "1438": {"problem_id": 1438, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef is_magical_pream(a, b):\n    return a[0] == b[0]\n\ndef is_flavoc_pream(a, b):\n    return a[0] == b[0]\n\ndef is_calculator_pream(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_pream(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_magical_pream(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_magical_pream(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return a[0] == b[0]\n\ndef is_memoization_flavoc_flavoc(a, b):\n    return"}, "1439": {"problem_id": 1439, "answer": "n, m = list(map(int, input().split()))\nfor i in range(n):\n    a = list(map(int, input().split()))\n    print(a[0] + a[1]*m)\n"}, "1440": {"problem_id": 1440, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nl = deque(sorted(a))\nfor i in range(n):\n    a.append(i)\nans = 0\nfor i in range(n-1, -1, -1):\n    ans += sum(a[i+1:i+2])\nprint(ans)"}, "1441": {"problem_id": 1441, "answer": "from math import ceil\n\ndef solve(n, d, max_score, max_reach):\n    if max_reach > max_score:\n        raise ValueError\n    if n == 1:\n        return 1\n    elif n == 2:\n        return max_reach\n    elif n == 3:\n        return max_reach + 1\n    else:\n        return max_reach + max(ceil(n / 2), ceil(n / 3))\n\ndef __starting_point():\n    solve(1, 2, 1, 2)\n__starting_point()"}, "1442": {"problem_id": 1442, "answer": "import sys\ninput = sys.stdin.readline\n\nn,s = list(map(int,input().split()))\norder = []\nfor i in range(n):\n    order.append(int(input()))\n\nprint(' '.join(order))\n"}, "1443": {"problem_id": 1443, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(n-l.count(0))"}, "1444": {"problem_id": 1444, "answer": "n = int(input())\na = list(map(int, input().split()))\nk = int(input())\nfor i in range(k):\n    x = input().split()\n    x[0] = int(x[0])\n    x[1] = int(x[1])\n    x[2] = int(x[2])\n    x[3] = int(x[3])\n    x[4] = int(x[4])\n    x[5] = int(x[5])\n    x[6] = int(x[6])\n    x[7] = int(x[7])\n    x[8] = int(x[8])\n    x[9] = int(x[9])\n    x[10] = int(x[10])\n    x[11] = int(x[11])\n    x[12] = int(x[12])\n    x[13] = int(x[13])\n    x[14] = int(x[14])\n    x[15] = int(x[15])\n    x[16] = int(x[16])\n    x[17] = int(x[17])\n    x[18] = int(x[18])\n    x[19] = int(x[19])\n    x[20] = int(x[20])\n    x[21] = int(x[21])\n    x[22] = int(x[22])\n    x[23] = int(x[23])\n    x[24] = int(x[24])\n    x[25] = int(x[25])\n    x[26] = int(x[26])\n    x[27] = int(x[27])\n    x[28] = int(x[28])\n    x[29] = int(x[29])\n    x[30] = int(x[30])\n    x[31] = int(x[31])\n    x[32] = int(x[32])\n    x[33] = int(x[33])\n    x[34] = int(x[34])\n    x[35] = int(x[35])\n    x[36] = int(x[36])\n    x[37] = int(x[37])\n    x[38] = int(x[38])\n    x[39] = int(x[39])\n    x[40] = int(x[40])\n    x[41] = int(x[41])\n    x[42] = int(x[42])\n    x[43] = int(x[43])\n    x[44] = int(x[44])\n    x[45] = int(x[45])\n    x[46] = int(x[46])\n    x[47] = int(x[47])\n    x[48] = int(x[48])\n    x[49] = int(x[49])\n    x[50] = int(x[50])\n    x[51] = int(x[51])\n    x[52] = int(x[52])\n    x[53] = int(x[53])\n    x[54] = int(x[54])\n    x[55] = int(x[55])\n    x[56] = int(x[56])\n    x[57] = int(x[57])\n    x[58] = int(x[58])\n    x[59] = int(x[59])\n    x[60] = int(x[60])\n    x[61] = int(x[61])\n    x[62] = int(x[62])\n    x[63] = int(x[63])\n    x[64] = int(x[64])\n   "}, "1445": {"problem_id": 1445, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint(''.join(a))"}, "1446": {"problem_id": 1446, "answer": "n, m, k = list(map(int, input().split()))\nc = list(map(int, input().split()))\nu = list(map(int, input().split()))\nv = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\nd = [[0] * m for _ in range(n)]\nfor i in range(n):\n    d[i][i] = c[i]\n    c[i] = 0\n\nfor i in range(m):\n    for j in range(n):\n        if c[i] == 0:\n            continue\n        else:\n            x[i] = min(u[i] + v[i], x[i] - c[i])\n            d[i][j] = x[i]\n\nprint(*d, sep='\\n')\n"}, "1447": {"problem_id": 1447, "answer": "from sys import stdin,stdout\nn,m = list(map(int,stdin.readline().split()))\ndeck = [0]*n\nfor i in range(m):\n    deck[i] = deck[i-1] + int(i)\nprint(0.0)"}, "1448": {"problem_id": 1448, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, d = map(int, readline().split())\ng = [[] for _ in range(n)]\nfor i in range(n):\n    x, y = map(int, readline().split())\n    g[x-1].append(y-1)\n    g[y-1].append(x-1)\n\nprint('YES' if g[x-1][y-1] == 'NO' else 'NO')"}, "1449": {"problem_id": 1449, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = -1\n    for i in range(n):\n        if a[i] == b[i]:\n            ans = min(ans, k)\n    print(ans)\n"}, "1450": {"problem_id": 1450, "answer": "s = input()\nn = len(s)\nl = []\nfor i in range(n):\n    if s[i] == s[i+1]:\n        l.append(i)\n    else:\n        l.append(i+1)\n\nprint(len(l))\nprint('\\n'.join(map(str, l)))"}, "1451": {"problem_id": 1451, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] = int(a[i])\n\nprint(a.count(1))"}, "1452": {"problem_id": 1452, "answer": "MOD = 1000000007\ndef main():\n    h, w = list(map(int, input().split()))\n    r, c = list(map(int, input().split()))\n    ans = 0\n    for i in range(h):\n        ans += pow(r, c, MOD)\n    print(ans % MOD)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1453": {"problem_id": 1453, "answer": "import math\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = sum(a)\nfor i in range(1, n):\n    s -= a[i]\n    if s < 0:\n        break\nprint(s)\n"}, "1454": {"problem_id": 1454, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef f(row, col):\n    if row == 0:\n        return 0\n    elif col == 0:\n        return 1\n    else:\n        return max(a[row], a[col])\n\nfor i in range(m):\n    a[i] = f(i, 0)\n\nprint(sum(a))"}, "1455": {"problem_id": 1455, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(min(l))\n"}, "1456": {"problem_id": 1456, "answer": "n = int(input())\ns = input()\nprint('YES' if n % 2 == 0 else 'NO')\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x == 'x':\n        print(''.join(map(str, x)))\n    elif x == 'x+dx':\n        print(''.join(map(str, x + dx)))\n    elif x == 'x+dx+':\n        print(''.join(map(str, x + dy)))\n    else:\n        print('NO')"}, "1457": {"problem_id": 1457, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(len(l))"}, "1458": {"problem_id": 1458, "answer": "n = int(input())\ns = input()\nl, r = 0, len(s) - 1\nfor i in range(n - 1):\n    if s[i + 1] not in l:\n        l = i + 1\n    elif s[i] not in r:\n        r = i + 1\nprint('YES')\nfor i in range(n - 1):\n    print(l, i + 1)\n"}, "1459": {"problem_id": 1459, "answer": "n = int(input())\nstations = list(map(int, input().split()))\n\ndef dist(a, b):\n    return abs(a[0] - b[0]) + abs(a[1] - b[1])\n\ndef dfs(a, b):\n    if a[0] == b[0]:\n        return dist(a, b)\n    elif a[0] < b[0]:\n        return dist(a, b)\n    else:\n        return dist(a, b)\n\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n# dfs(1, 2)\n#"}, "1460": {"problem_id": 1460, "answer": "from math import *\nfrom collections import deque\ndef lcm(a,b):\n    return (a*b)//(a*b)\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n    x,y = l[i]\n    print(int(x-y,2))\n"}, "1461": {"problem_id": 1461, "answer": "from collections import deque\nn, k = list(map(int, input().split()))\ned = deque()\nfor _ in range(n):\n    s, m = input().split()\n    s = int(s)\n    m = int(m)\n    if s == 0:\n        print(0)\n    elif s == 1:\n        print(1)\n    else:\n        for i in range(1, s + 1):\n            if m % i == 0:\n                print(i)\n                break\n        else:\n            print(i)\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n"}, "1462": {"problem_id": 1462, "answer": "n, k = list(map(int, input().split()))\nprint(n-k)"}, "1463": {"problem_id": 1463, "answer": "n = int(input())\nl = list(map(int, input().split()))\nfor i in range(n):\n    l[i] = list(map(int, input().split()))\nprint('Yes' if l[n-1] == l[n-2] else 'No')"}, "1464": {"problem_id": 1464, "answer": "n = int(input())\ns = input()\nfor i in range(n):\n    s.append(s[i])\nprint(''.join(s))"}, "1465": {"problem_id": 1465, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\n\nL = list(map(int, input().split()))\nR = list(map(int, input().split()))\n\n# \u8981\u7d20\u6570\u7ec4\ncnt = 0\nfor i in range(k):\n    if L[i] == R[i]:\n        cnt += 1\n        break\n\nprint(cnt)\n"}, "1466": {"problem_id": 1466, "answer": "from collections import defaultdict, deque\nn, m, k = list(map(int, input().split()))\nedges = defaultdict(list)\nfor i in range(n):\n    x, y, w = list(map(int, input().split()))\n    edges[x].append(y)\n    edges[y].append(x)\n    edges[x].append(y)\nd = defaultdict(list)\nfor i in range(m):\n    x, y, w = list(map(int, input().split()))\n    d[x].append(y)\n    d[y].append(x)\nq = deque()\nq.append(0)\nvisited = set()\nvisited.add(0)\nvisited.add(1)\nvisited.add(2)\nvisited.add(3)\nwhile q:\n    cur = q.popleft()\n    for i in range(len(cur)):\n        if cur[i] not in visited:\n            q.append(cur[i])\n            visited.add(cur[i])\n            continue\n        else:\n            q.append(cur[i])\n            visited.add(cur[i])\n            continue\n        \n        if cur[i] not in visited:\n            q.append(cur[i])\n            visited.add(cur[i])\n            continue\n        \n        if cur[i] not in visited:\n            q.append(cur[i])\n            visited.add(cur[i])\n            continue\n        \n        if len(visited) > k:\n            print(i)\n            return\n        \n        q.append(i)\n        visited.add(i)\n        \n        \n        \n        \n"}, "1467": {"problem_id": 1467, "answer": "n = int(input())\na = list(map(int,input().split()))\n\nseg = 0\nfor i in range(n):\n    seg += a[i]\n    seg -= a[i]\n    if seg == 0:\n        break\n    elif seg == 0:\n        seg = 0\n        seg -= a[i]\n        seg -= a[i]\n        seg -= a[i]\n    else:\n        seg = 0\n        seg -= a[i]\n        seg -= a[i]\n        seg -= a[i]\nprint(seg)\n"}, "1468": {"problem_id": 1468, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    hasht = []\n    for j in range(n):\n        if s[j] == \"#\":\n            hasht.append(j)\n        else:\n            hasht.append(s[j:j+1])\n    print(hashtag(s, hasht))"}, "1469": {"problem_id": 1469, "answer": "from collections import deque\n\ndef dfs(l, n, visited):\n    if l == 0:\n        return visited\n    visited.add(n)\n    q = deque([n])\n    q.append(n)\n    while q:\n        node = q.popleft()\n        for nei in range(n):\n            if node[0] == node[1] and nei[0] == nei[1] and nei[1] == nei[2] and nei[2] == nei[3] and nei[3] == nei[4]:\n                q.append(nei)\n                visited.add(nei)\n    return visited\n\nL = int(input())\n\ngraph = [[] for _ in range(L)]\nfor i in range(L):\n    u, v, w = map(int, input().split())\n    graph[u].append(v)\n    graph[v].append(u)\n\nvisited = [False]*L\n\nfor i in range(L):\n    if visited[i]:\n        continue\n    visited[i] = True\n    q = deque([i])\n    q.append(i)\n    while q:\n        node = q.popleft()\n        for nei in graph[node]:\n            if visited[nei]:\n                continue\n            visited[nei] = True\n            q.append(nei)\n            for nei in graph[nei]:\n                if visited[nei]:\n                    continue\n                visited[nei] = True\n                q.append(nei)\n                \nprint(*visited, sep='\\n')"}, "1470": {"problem_id": 1470, "answer": "from math import sqrt\n\ndef solve(s, e, x, y, x_min, y_min):\n    if x == 0:\n        return 1\n    elif x == 1:\n        return sqrt(x_min)\n    elif x == 2:\n        return sqrt(y_min)\n    else:\n        return solve(s, e, x_min, y_min, x_min, y_min)\n\nsolve(0, 0, 0, 0)\n\nn = int(input())\nprint(solve(0, 0, 0, n))"}, "1471": {"problem_id": 1471, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nu = list(map(int, input().split()))\nv = list(map(int, input().split()))\n\n# \u305d\u306e\u307e\u307e\u306e\u30ce\u30fc\u30c9\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\ndef dfs(u, v):\n    nonlocal u\n    nonlocal v\n    if u[0] == v[0]:\n        return 0\n    elif u[0] == v[0] and u[1] == v[1]:\n        return dfs(u[1:], v[1:])\n    else:\n        return 0\n\n# \u305d\u306e\u307e\u307e\u306e\u30ce\u30fc\u30c9\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\ndef dfs2(u, v):\n    nonlocal u\n    nonlocal v\n    if u[0] == v[0]:\n        return 0\n    elif u[0] == v[0] and u[1] == v[1]:\n        return dfs2(u[1:], v[1:])\n    else:\n        return 0\n\n# \u305d\u306e\u307e\u307e\u306e\u30ce\u30fc\u30c9\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\ndef dfs3(u, v):\n    nonlocal u\n    nonlocal v\n    if u[0] == v[0]:\n        return 0\n    elif u[0] == v[0] and u[1] == v[1]:\n        return dfs3(u[1:], v[1:])\n    else:\n        return 0\n\n# \u305d\u306e\u307e\u307e\u306e\u30ce\u30fc\u30c9\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\ndef dfs4(u, v):\n    nonlocal u\n    nonlocal v\n    if u[0] == v[0]:\n        return 0\n    elif u[0] == v[0] and u[1] == v[1]:\n        return dfs4(u[1:], v[1:])\n    else:\n        return 0\n\n# \u305d\u306e\u307e\u307e\u306e\u30ce\u30fc\u30c9\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\ndef dfs5(u, v):\n    nonlocal u\n    nonlocal v\n    if u[0] == v[0]:\n        return 0\n    elif u[0] == v[0] and u[1] == v[1]:\n        return dfs5(u[1:], v[1:])\n    else:\n        return 0\n\n# \u305d\u306e\u307e\u307e\u306e\u30ce\u30fc\u30c9\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\ndef dfs6(u, v):\n    nonlocal u\n    nonlocal v\n    if u[0] == v[0]:\n        return 0\n    elif u[0] == v[0] and u[1] == v[1]:\n        return dfs6(u[1:], v[1:])\n    else:\n        return 0\n\n# \u305d\u306e\u307e\u307e\u306e\u30ce\u30fc\u30c9\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\ndef dfs7(u, v):\n    nonlocal u\n    nonlocal v\n    if u[0] == v[0]:\n        return 0\n    elif u[0] == v[0] and u[1] == v[1]:\n        return dfs7(u[1:], v[1:])\n    else:\n        return 0\n\n# \u305d\u306e\u307e\u307e\u306e\u30ce\u30fc\u30c9\u756a\u53f7\u3092\u4f5c\u6210\u3059\u308b\ndef dfs8(u, v):\n    nonlocal u\n "}, "1472": {"problem_id": 1472, "answer": "from bisect import bisect_left as bl, bisect_right as br, bisect\nN,X,Y = list(map(int,input().split()))\nG = [[] for _ in range(N)]\nfor i in range(N):\n    x,y = list(map(int,input().split()))\n    G[x].append(y)\n    G[y].append(x)\n\n# \u305d\u3057\u3066\u3001\u30ea\u30b9\u30c8\u306e\u89aa\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u3044\ndef solve(n,x,y):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        for i in range(n-1,0,-1):\n            if x[i] > y[i]:\n                continue\n            else:\n                x[i] = y[i]\n                continue\n            if x[i] == y[i]:\n                print(1)\n                return\n            else:\n                print(2)\n                return\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n  "}, "1473": {"problem_id": 1473, "answer": "n = int(input())\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    if a == 0:\n        print(\"0\")\n    elif b == 0:\n        print(\"1\")\n    else:\n        print(\"0\")\n"}, "1474": {"problem_id": 1474, "answer": "n = int(input())\nfor i in range(n):\n    h, s = list(map(int, input().split()))\n    h.extend(s)\n    s.extend(h)\n    h.extend(s)\n    s.extend(h)\n    h.extend(s)\n    s.extend(h)\n    h.extend(s)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n    s.extend(h)\n"}, "1475": {"problem_id": 1475, "answer": "import math\nn, b, k, x = list(map(int, input().split()))\nd = [0] * (n + 1)\nfor i in range(1, n + 1):\n    d[i] += 1\na = d[n]\nb = d[n - 1]\nprint(math.floor(a * b) % x)"}, "1476": {"problem_id": 1476, "answer": "n = int(input())\nfor i in range(n):\n    print(2,i)\n    if(i%2==0):\n        print(2,i)\n    else:\n        print(1,i)\n"}, "1477": {"problem_id": 1477, "answer": "from collections import deque\n\nn = int(input())\ntasks = list(map(int, input().split()))\n\ndeq = deque(tasks)\n\ndef solve(tasks, d):\n    nonlocal t\n    if d[tasks[0]] == 0:\n        return 1\n    elif d[tasks[0]] == 1:\n        return 2\n    else:\n        d[tasks[0]] -= 1\n        d[tasks[1]] -= 1\n        d[tasks[2]] -= 1\n        d[tasks[3]] -= 1\n        d[tasks[4]] -= 1\n        d[tasks[5]] -= 1\n        d[tasks[6]] -= 1\n        d[tasks[7]] -= 1\n        d[tasks[8]] -= 1\n        d[tasks[9]] -= 1\n        d[tasks[0]] -= 1\n        d[tasks[1]] -= 1\n        d[tasks[2]] -= 1\n        d[tasks[3]] -= 1\n        d[tasks[4]] -= 1\n        d[tasks[5]] -= 1\n        d[tasks[6]] -= 1\n        d[tasks[7]] -= 1\n        d[tasks[8]] -= 1\n        d[tasks[9]] -= 1\n        d[tasks[0]] -= 1\n        d[tasks[1]] -= 1\n        d[tasks[2]] -= 1\n        d[tasks[3]] -= 1\n        d[tasks[4]] -= 1\n        d[tasks[5]] -= 1\n        d[tasks[6]] -= 1\n        d[tasks[7]] -= 1\n        d[tasks[8]] -= 1\n        d[tasks[9]] -= 1\n        d[tasks[0]] -= 1\n        d[tasks[1]] -= 1\n        d[tasks[2]] -= 1\n        d[tasks[3]] -= 1\n        d[tasks[4]] -= 1\n        d[tasks[5]] -= 1\n        d[tasks[6]] -= 1\n        d[tasks[7]] -= 1\n        d[tasks[8]] -= 1\n        d[tasks[9]] -= 1\n        d[tasks[0]] -= 1\n        d[tasks[1]] -= 1\n        d[tasks[2]] -= 1\n        d[tasks[3]] -= 1\n        d[tasks[4]] -= 1\n        d[tasks[5]] -= 1\n        d[tasks[6]] -= 1\n        d[tasks[7]] -= 1\n        d[tasks[8]] -= 1\n        d[tasks[9]] -= 1\n        d[tasks[0]] -= 1\n        d[tasks[1]] -= 1\n        d[tasks[2]] -= 1\n        d["}, "1478": {"problem_id": 1478, "answer": "from collections import deque\n\ndef dfs(l, n):\n    if l[0] == 0:\n        return 0\n    if l[0] == n:\n        return 1\n    res = 0\n    for i in range(1, n + 1):\n        if l[i] == 0:\n            res += 1\n        elif l[i] == n:\n            res += 1\n    return res\n\ndef __starting_point():\n    # input = input().strip()\n    # print(input())\n    # print(dfs(input(), len(input())))\n\n__starting_point()"}, "1479": {"problem_id": 1479, "answer": "def dfs(n, m, k):\n    if k == 0:\n        return 0\n    elif m == 0:\n        return 1\n    else:\n        return max(dfs(n, m - k, k) for k in range(0, m + 1))\n\nn, m, k = list(map(int, input().split()))\ndfs(n, m, k)\n\nprint(len(set(map(int, input().split()))) + 1)\n"}, "1480": {"problem_id": 1480, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = 0\nfor i in range(k):\n    if a[i] == a[i-1]:\n        ans += 1\n    else:\n        ans += a[i]\nprint(ans)"}, "1481": {"problem_id": 1481, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    print(s.count('o'))"}, "1482": {"problem_id": 1482, "answer": "from collections import deque\n\nn, k = map(int, input().split())\n\nseg = [0] * (n + 1)\n\nfor i in range(n):\n    a, b = map(int, input().split())\n    seg[a-1] += 1\n    seg[b-1] += 1\n\nque = deque()\nque.append([0, 1])\n\nwhile que:\n    cur = que.popleft()\n    if cur == 0:\n        break\n    elif cur == n:\n        continue\n    else:\n        que.append([cur, 1])\n\nprint(que.popleft())"}, "1483": {"problem_id": 1483, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nfor i in range(n):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(*a, sep='')\n"}, "1484": {"problem_id": 1484, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nl = [0]*n\nfor i in range(n):\n    if l[i]%2 == 1:\n        l[i] = l[i]//2\n    else:\n        l[i] = l[i]%2\n\nprint(l[n-1]%1000000007)\n"}, "1485": {"problem_id": 1485, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef check(a, b):\n    if a[0] % 2 == 0:\n        return True\n    elif b[0] % 2 == 1:\n        return False\n    else:\n        return False\n\nfor i in range(n):\n    a.append(a[-1] % 2)\n\nprint(check(a, b))\n"}, "1486": {"problem_id": 1486, "answer": "n = int(input())\nl = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if l[i] == l[i-1]:\n        s += 1\n    elif l[i] == 0:\n        s += 1\nprint(s)\n"}, "1487": {"problem_id": 1487, "answer": "s = input()\nt = input()\n\ns,t = s.split(' '),t.split(' ')\n\ndistance = 0\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        distance += 1\n\nprint('\\n'.join(map(str,s)))"}, "1488": {"problem_id": 1488, "answer": "from math import ceil,sqrt,log\nn = int(input())\na = list(map(int,input().split()))\nl = []\nfor i in range(n):\n    x,y = map(int,input().split())\n    l.append(x)\nprint(sum(l))"}, "1489": {"problem_id": 1489, "answer": "n = int(input())\nfor i in range(n):\n    x, y = map(int, input().split())\n    print((x*(x+1) + y*(y+1))%1000000007)"}, "1490": {"problem_id": 1490, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(a, b):\n    if a[0] == b[0]:\n        return 1\n    elif a[0] < b[0]:\n        return 0\n    else:\n        return max(solve(a[1:]), solve(a[1:]) + solve(b[1:]) + solve(b[1:]) + max(a[0:b[0]]))\n\nprint(len(a) + len(b))\nprint(len(a) + len(b))\nprint(len(a) + len(b))\nprint(len(a) + len(b))\n\nfor i in range(n, m):\n    a.append(int(a[i]))\n    b.append(int(b[i]))\n\nprint(len(a) + len(b))\nprint(len(a) + len(b))\nprint(len(a) + len(b))\nprint(len(a) + len(b))\n\nfor i in range(n):\n    a.append(int(a[i]))\n    b.append(int(b[i]))\n\nprint(len(a) + len(b))\nprint(len(a) + len(b))\nprint(len(a) + len(b))\nprint(len(a) + len(b))\n\nfor i in range(n):\n    print(len(a[i]))\n    print(len(a[i] + len(b[i])) + len(b[i] + len(a[i])))\n"}, "1491": {"problem_id": 1491, "answer": "def __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(min(a, n // 2))\n__starting_point()"}, "1492": {"problem_id": 1492, "answer": "from sys import deque, IOB, IOBD, IOW, heappop, IOWN, inf, infd, stderr, bisect, heapq, ator, bfs, cumsum, dijkstra, dsu, dd, euclid, gmp, ldsc, mdsu, r9n, r10n, r11n, r12n, r13n, r14n, r15n, r16n, r17n, r18n, r19n, r20n, r21n, r22n, r23n, r24n, r25n, r26n, r27n, r28n, r29n, r30n, r31n, r32n, r33n, r34n, r36n, r41n, r42n, r43n, r44n, r46n, r48n, r49n, r50n, r51n, r52n, r53n, r54n, r55n, r56n, r57n, r58n, r60n, r61n, r62n, r64n, r66n, r68n, r69n, r70n, r71n, r78n, r79n, r80n, r81n, r82n, r83n, r84n, r90n, r91n, r92n, r93n, r94n, r95n, r96n, r97n, r98n, r99n, r100n, r101n, r110n, r111n, r1129n, r1212n, r1313n, r1414n, r1717n, r1818n, r2020n, r2320n, r2420n, r2520n, r2620n, r2820n, r2920n, r3120n, r3220n, r3320n, r3420n, r3820n, r4320n, r4420n, r4620n, r4820n, r4920n, r5020n, r5120n, r5220n, r5320n, r5420n, r5520n, r5620n, r5720n, r5820n, r6020n, r6120n, r6220n, r6620n, r6820n, r6920n, r7020n, r7120n, r7820n, r8120n, r8220n, r8320n, r9020n, r9520n, r9620n, r9720n, r10020n, r10120n, r10020n, r10120n, r11020n, r11111n, r121112n, r131113n, r141114n, r1717n, r1818n, r2020n, r2317n, r2417n, r2517n, r2617n, r2817n, r2917n, r3117n, r3217n, r3317n, r3417n, r3817n, r4317n, r4417n, r4617n, r4817n, r4917n, r5017n, r5117n, r5217n, r5317n, r5417n, r5517n, r5717n, r5817n, r6017n, r6117n, r6217n, r6617n, r6817n, r6917n, r7017n, r7117n, r7817n, r8117n, r8217n, r8317n, r9017n, r9517n, r9617n, r9717n, r10017n, r10117n, r10017n, r11017n, r11111n, r12111n, r13111n, r14111n, r17111n, r18111n, r23111n, r24111n, r25111n, r26111n, r28111n, r31111n, r32111n, r33111n, r34111n, r38111n, r43111n, r44111n, r46111n, r48111n, r49111n, r50111n, r51111n, r54111n, r55111n, r56111n, r57111n, r"}, "1493": {"problem_id": 1493, "answer": "n, m = list(map(int, input().split()))\ns = input()\nl = []\nfor i in range(n):\n    s = s.replace('.', '-')\n    l.append(s)\n\nprint('B' if s == 'W' else 'WB')\nprint('BW' if s == 'WB' else 'WB')\nprint('B-B' if s == 'B' else 'B')\nprint('BW' if s == 'BW' else 'BW')\nprint('WB' if s == 'WB' else 'WB')\nprint('B' if s == 'B' else 'B')\n\n# Made By Mostafa_Khaled\n"}, "1494": {"problem_id": 1494, "answer": "s = input()\nl = len(s)\nfor i in range(l):\n    s = s.replace('', '')\n    print(s, end ='')\n    if s == '0':\n        print('0')\n    elif s == '1':\n        print('1')\n    else:\n        print('0')\n        if s == '0':\n            print('1')\n        else:\n            print('0')\n            if s == '1':\n                print('1')\n            else:\n                print('0')\n                if s == '1':\n                    print('1')\n                else:\n                    print('0')\n                    if s == '1':\n                        print('1')\n                    else:\n                        print('0')\n                        if s == '1':\n                            print('1')\n                        else:\n                            print('0')\n                            if s == '1':\n                                print('1')\n                            else:\n                                print('0')\n                                if s == '1':\n                                    print('1')\n                               else:\n                                    print('0')\n                                    if s == '1':\n                                        print('1')\n                                   else:\n                                        print('0')\n                     "}, "1495": {"problem_id": 1495, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nprint(min(a))"}, "1496": {"problem_id": 1496, "answer": "n, m, k, s = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nfor i in range(k):\n    a[i] = min(a[i], s)\n    b[i] = min(b[i], s)\n\nprint(' '.join(str(x) for x in a))\n"}, "1497": {"problem_id": 1497, "answer": "n = int(input())\ns = input()\nfor i in range(n):\n    s = s.replace('0', '')\n    s = s.replace('1', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0', '')\n    s = s.replace('0"}, "1498": {"problem_id": 1498, "answer": "def main():\n    n, q = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        t, k, d = list(map(int, input().split()))\n        s += t\n        l.append(s)\n        q += d\n    print(' '.join(map(str, l)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1499": {"problem_id": 1499, "answer": "from collections import OrderedDict\nn, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\nc = 0\nfor i in range(1, n):\n    if l[i] == l[i-1]:\n        c += 1\n    else:\n        c += 1\nprint(c)"}, "1500": {"problem_id": 1500, "answer": ""}, "1501": {"problem_id": 1501, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\ns = input().strip()\n\np = [0] * (n + 1)\nfor i in range(1, n + 1):\n    p[i] = int(p[i - 1] + 1)\n\nans = 0\nfor i in range(n):\n    if p[i] == p[i - 1]:\n        ans += 1\n        break\n\nprint(ans)\n"}, "1502": {"problem_id": 1502, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\n\nprint(int(n))"}, "1503": {"problem_id": 1503, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\ndef dfs(i, j):\n    if i == 0:\n        return 0\n    elif j == 0:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(m):\n    ans += dfs(i, 0)\n    ans -= dfs(i, 1)\n    ans -= dfs(i, 2)\n    ans -= dfs(i, 3)\n    ans -= dfs(i, 4)\n    ans -= dfs(i, 5)\n    ans -= dfs(i, 6)\n    ans -= dfs(i, 7)\n    ans -= dfs(i, 8)\n    ans -= dfs(i, 9)\n    ans -= dfs(i, 10)\n    ans -= dfs(i, 11)\n    ans -= dfs(i, 12)\n    ans -= dfs(i, 13)\n    ans -= dfs(i, 14)\n    ans -= dfs(i, 15)\n    ans -= dfs(i, 16)\n    ans -= dfs(i, 17)\n    ans -= dfs(i, 18)\n    ans -= dfs(i, 19)\n    ans -= dfs(i, 20)\n    ans -= dfs(i, 21)\n    ans -= dfs(i, 22)\n    ans -= dfs(i, 23)\n    ans -= dfs(i, 24)\n    ans -= dfs(i, 25)\n    ans -= dfs(i, 26)\n    ans -= dfs(i, 27)\n    ans -= dfs(i, 28)\n    ans -= dfs(i, 29)\n    ans -= dfs(i, 30)\n    ans -= dfs(i, 31)\n    ans -= dfs(i, 32)\n    ans -= dfs(i, 33)\n    ans -= dfs(i, 34)\n    ans -= dfs(i, 35)\n    ans -= dfs(i, 36)\n    ans -= dfs(i, 37)\n    ans -= dfs(i, 38)\n    ans -= dfs(i, 39)\n    ans -= dfs(i, 40)\n    ans -= dfs(i, 41)\n    ans -= dfs(i, 42)\n    ans -= dfs(i, 43)\n    ans -= dfs(i, 44)\n    ans -= dfs(i, 45)\n    ans -= dfs(i, 46)\n    ans -= dfs(i, 47)\n    ans -= dfs(i, 48)\n    ans -= dfs(i, 49)\n    ans -= dfs(i, 50)\n    ans -= dfs(i, 51)\n    ans -= dfs(i, 52)\n    ans -= dfs(i, 53)\n    ans -= dfs(i, 54)\n    ans -= dfs(i, 55)\n    ans -= dfs(i, 55_so_far)\n    ans -= dfs(i, 57)\n    ans -= dfs(i, 58)\n    ans -= dfs(i, 59)\n    ans -= dfs(i, 60)\n    ans -= dfs(i, 61)\n    ans -= dfs(i, 62)\n    ans -= dfs(i, 63)\n    ans -= dfs(i, 64)\n    ans -= dfs(i, 65)\n    ans -= dfs(i, 66)\n    ans -= dfs(i, 67)\n    ans -= dfs(i, 68)\n    ans -= dfs(i, 69)\n  "}, "1504": {"problem_id": 1504, "answer": ""}, "1505": {"problem_id": 1505, "answer": "from math import ceil\n\np = int(input())\nfor i in range(p):\n    x, y, z = map(int, input().split())\n    x = x*x + y*y\n    y = y*x + z*z\n    print(x, y, z)"}, "1506": {"problem_id": 1506, "answer": "n = int(input())\na = [int(i) for i in input().split()]\n\nf = [0]*n\nfor i in range(1, n):\n    if a[i] > a[i-1]:\n        f[i] = 1\n    else:\n        f[i] = 0\n\nprint(f[n-1])"}, "1507": {"problem_id": 1507, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef read_line(line):\n    return list(map(int,line.split()))\n\ndef read_ints(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints2(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints3(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints4(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints5(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints6(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints7(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints8(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints9(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints10(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints11(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints12(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints13(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints14(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints15(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints16(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints17(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints18(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints19(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints20(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints21(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints22(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints23(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints24(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints25(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints26(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints27(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints28(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints29(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints30(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints31(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints32(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints33(line):\n    return [int(x) for x in readline().split()]\n\ndef read_ints34(line):\n    return [int(x) for x in readline().split()]\n"}, "1508": {"problem_id": 1508, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0]*n\nfor i in range(n):\n    l[i] = a[i]\n    a[i] = 0\nans = []\nfor i in range(n):\n    ans.append(max(l[i], a[i]))\nprint(' '.join(map(str, ans)))"}, "1509": {"problem_id": 1509, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a.append(list(map(int, input().split())))\nprint(sum(a))"}, "1510": {"problem_id": 1510, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(min(a[0], b[0]))\n"}, "1511": {"problem_id": 1511, "answer": "n, m, k = list(map(int, input().split()))\n\ncache = [0] * (n + 1)\n\nfor i in range(m):\n    x = list(map(int, input().split()))\n    cache[x] = 1\n\nfor i in range(n):\n    x = list(map(int, input().split()))\n    cache[x] = 1\n\nprint(cache[0])\n"}, "1512": {"problem_id": 1512, "answer": "n = int(input())\np = list(map(int, input().split()))\n\ndef check(n):\n    if n == 0:\n        return False\n    else:\n        return True\n\nfor i in range(n):\n    print(p[i])\n"}, "1513": {"problem_id": 1513, "answer": "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(n):\n    b = list(map(int, input().split()))\n    a.append(b[-1] + b[-2])\n\nprint(min(a[-1] + a[-2] + a[-3] + a[-4] + a[-5] + a[-6] + a[-7] + a[-8] for _ in range(m)) + k)\n"}, "1514": {"problem_id": 1514, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n-1):\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    a.append(b)\nprint(' '.join(map(str, a)))"}, "1515": {"problem_id": 1515, "answer": "from math import ceil\n\np, x = map(int, input().split())\n\nprint(p)"}, "1516": {"problem_id": 1516, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    l.append(x)\n    l.append(y)\nprint(l[-1])"}, "1517": {"problem_id": 1517, "answer": "n = int(input())\np = list(map(int, input().split()))\n\nfor i in range(n):\n    p[i] = 1\n    for j in range(i+1, n):\n        p[i] = p[j]\n        if j not in p:\n            p[j] = 1\n            break\n        elif j == i:\n            p[j] = 1\n            break\n        else:\n            p[j] = p[j-i]\n            break\nprint(p[n])"}, "1518": {"problem_id": 1518, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0]*n\nfor i in range(n):\n    l[i] = a[i]\n    l[i+1] = a[i+1]\nprint(l[n])"}, "1519": {"problem_id": 1519, "answer": "import sys\ninput = sys.stdin.readline\n\nn, l, a = map(int, input().split())\n\nd = {}\nfor i in range(n):\n    t, l = map(int, input().split())\n    d[t] = max(0, l - 1 - d.get(t, 0) + 1)\n    l = max(l, d.get(t, 0) + 1)\n    d[t] = max(0, l - 1 - d.get(t, 0) + 1)\n\nprint(max(d.values()))"}, "1520": {"problem_id": 1520, "answer": "n = int(input())\ns = input()\na = list(s)\nb = list(s)\n\ndef is_valid(string):\n    nonlocal a\n    nonlocal b\n    if string == a[0]:\n        return True\n    elif string == b[0]:\n        return True\n    else:\n        return False\n\nfor i in range(1,n):\n    if is_valid(string):\n        print(i)\n        continue\n    else:\n        print(len(string))\n"}, "1521": {"problem_id": 1521, "answer": "def f(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return f(n - 1) % p\n\np,n = list(map(int, input().split()))\nans = 0\nfor i in range(p, n + 1):\n    if i % 2 == 0:\n        ans += f(i) % p\n    else:\n        ans += f(i) // p\nprint(ans)\n"}, "1522": {"problem_id": 1522, "answer": "n = int(input())\ns = input()\nl = len(s)\nfor i in range(l):\n\tif s[i] == 'a':\n\t\ts[i] = 'b'\n\telif s[i] == 'b':\n\t\ts[i] = 'a'\n\telif s[i] == 'a':\n\t\ts[i] = 'b'\n\telse:\n\t\ts[i] = 'a'\n\t\tl -= 1\nprint(l)"}, "1523": {"problem_id": 1523, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef is_converged(s):\n    return s.count(b) == k\n\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(is_converged(a[:k]))\n\n__starting_point()"}, "1524": {"problem_id": 1524, "answer": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport bisect\n\ndef main():\n    s = input()\n    for i in range(len(s)):\n        if s[i] == '0':\n            s = s[:i] + s[i+1:]\n        else:\n            s = s[:i] + s[i+1:]\n    print(bisect.bisect_left(s, i) + 1)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1525": {"problem_id": 1525, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nmod = 10**9+7\ndef l(): return list(map(int, input().split()))\ndef r(): return list(map(int, input().split()))\ndef lw(n, m, d): return [x for x in l() if x%d]\ndef rl(n, m, d): return [x for x in r() if x%d]\nMOD = 10**9+7\n#mod = 10**9+7\n#s = input()\n#n = len(s)\n#d = len(d)\n#l = [0]*n\n#s = [0]*n\n#l.sort()\n#l.sort()\n#l.reverse()\n#l.reverse()\n#l.extend(s)\n#print(l)\n#for i in range(1, n):\n#print(l[i-1])\n#print(l[i-1])\n#print(l[n-1])\n#print(l[n-1])\n"}, "1526": {"problem_id": 1526, "answer": "def main():\n    a, b, c = map(int, input().split())\n    print((a + b) % 2)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1527": {"problem_id": 1527, "answer": "def main():\n    s = input()\n    s.append('')\n    for i in range(len(s)-1):\n        s[i] = s[i+1] + s[i+2] + s[i+3] + s[i+4] + s[i+5] + s[i+6] + s[i+7] + s[i+8] + s[i+9] + s[i+10] + s[i+11] + s[i+12] + s[i+13] + s[i+14] + s[i+15] + s[i+16] + s[i+17] + s[i+18] + s[i+19] + s[i+20] + s[i+21] + s[i+22] + s[i+23] + s[i+24] + s[i+25] + s[i+26] + s[i+27] + s[i+28] + s[i+29] + s[i+30] + s[i+31] + s[i+32] + s[i+33] + s[i+34] + s[i+35] + s[i+36] + s[i+37] + s[i+38] + s[i+39] + s[i+40] + s[i+41] + s[i+42] + s[i+43] + s[i+44] + s[i+45] + s[i+45] + s[i+46] + s[i+47] + s[i+49] + s[i+50] + s[i+52] + s[i+54] + s[i+55] + s[i+56] + s[i+57] + s[i+58] + s[i+59] + s[i+60] + s[i+61] + s[i+62] + s[i+63] + s[i+64] + s[i+64] + s[i+65] + s[i+65] + s[i+66] + s[i+67] + s[i+68] + s[i+69] + s[i+70] + s[i+71] + s[i+72] + s[i+73] + s[i+74] + s[i+75] + s[i+76] + s[i+77] + s[i+78] + s[i+79] + s[i+80] + s[i+79] + s[i+80] + s[i+81] + s[i+82] + s[i+83] + s[i+84] + s[i+85] + s[i+86] + s[i+87] + s[i+88] + s[i+89] + s[i+90] + s[i+91] + s[i+92] + s[i+93] + s[i+94] + s[i+95] + s[i+96] + s[i+97] + s[i+98] + s[i+99] + s[i+100] + s[i+101] + s[i+103] + s[i+105] + s[i+106] + s[i+107] + s[i+109] + s[i+110] + s[i+111] + s[i+112] + s[i+113] + s[i+114] + s[i+116] + s[i+118] + s[i+118] + s[i+19] + s[i+21] + s[i+23] + s[i+24] + s[i+25] + s[i+26] + s[i+27] + s[i+28] + s[i+29] + s[i+30] + s[i+31] + s[i+32] + s[i+33] + s[i+34] + s[i+35] + s[i+36] + s[i+37] + s[i+38] + s[i+39] + s[i+40] + s[i+41] + s[i+42] + s[i+43] + s["}, "1528": {"problem_id": 1528, "answer": "import sys\ninput = sys.stdin.readline\n\nN, X = map(int, input().split())\nlis = []\nfor i in range(X):\n    lis.append(0)\n\nlis.sort()\n\nfor i in range(X):\n    print(lis[i], end=' ')\n    print()"}, "1529": {"problem_id": 1529, "answer": "n = int(input())\ns = list(input())\nfor i in range(n):\n    s.append(s[i] +'miao')\nprint('%.6f' %(s[-1]))"}, "1530": {"problem_id": 1530, "answer": "n = int(input())\na = [0]*n\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint('\\n'.join(map(str, a)))"}, "1531": {"problem_id": 1531, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nl = [0]*n\nfor i in range(n):\n    a[i] = sum(l[i] for i in range(n))\nprint(a[0])"}, "1532": {"problem_id": 1532, "answer": "from math import ceil\nn = int(input())\ns = set()\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    s.add(a)\n    s.add(b)\nprint('\\n'.join(s))"}, "1533": {"problem_id": 1533, "answer": "n = int(input())\ns = input()\nprint('YES' if n > 1 else 'NO')\nfor i in range(n):\n    if s[i] in s:\n        print('YES')\n    else:\n        print('NO')"}, "1534": {"problem_id": 1534, "answer": "from collections import deque\ndef solve(s):\n    d = {}\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = set()\n        else:\n            d[s[i]].add(s[i])\n    return d.get(s[0])\n\ndef __starting_point():\n    solve(0)\n\n__starting_point()"}, "1535": {"problem_id": 1535, "answer": "import math\nn, x, y = map(int, input().split())\nprint(math.ceil(n/2.0))"}, "1536": {"problem_id": 1536, "answer": "n = int(input())\nx, y, z = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if x == y:\n        c += 1\n    elif x == z:\n        c += 1\n    else:\n        b.append(c)\nprint(c)"}, "1537": {"problem_id": 1537, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\n# \u533a\u9593\u306e\u3068\u304d\u306f\u3001\u5404\u30af\u30a8\u30ea\u3092\u4f5c\u308a\u305f\u3044\ndef main():\n    n, k = list(map(int, input().split()))\n    d = [[0] * k for _ in range(n)]\n    for i in range(n):\n        d[i][0] = 1\n        for j in range(1, n):\n            if d[i][j] == 0:\n                d[i][j] = 1\n            else:\n                d[i][j] = 0\n                break\n    print(len(d))\n            \n\nmain()\n"}, "1538": {"problem_id": 1538, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(min(a))"}, "1539": {"problem_id": 1539, "answer": "n = int(input())\nl = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[i] = min(d.get(i, 0) + 1, d.get(i, 0) + 1)\nprint(d.values())"}, "1540": {"problem_id": 1540, "answer": "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nevent = []\nfor i in range(n):\n    event.append(a[i] + b[i])\n\nevent.sort(key=lambda x: x[1])\nevent.sort(key=lambda x: x[0])\nevent.extend(event)\n\nprint(' '.join(map(str, event)))\n"}, "1541": {"problem_id": 1541, "answer": "import math\ndef calc(s,n,l):\n if s[n]=='=':\n  return 0\n elif s[n]=='^':\n  return 1\n else:\n  return 0\n\ns=input()\nn=len(s)\nl=int(n)\nleft=calc(s,n,l)\nright=calc(s,n-1,l)\n\nprint(\"left\") if left==n else print(\"right\")\n"}, "1542": {"problem_id": 1542, "answer": "n = int(input())\nfor i in range(n):\n    x = list(map(int, input().split()))\n    m = x[0]\n    for j in range(1, len(x)):\n        m = min(m, x[j])\n    print(m)"}, "1543": {"problem_id": 1543, "answer": "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nl=list(map(int,input().split()))\nc=list(map(int,input().split()))\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    if x==y:\n        print(0)\n        continue\n    c.append(x)\n    c.append(y)\n\nans=0\nfor i in range(n):\n    ans+=min(c[i]*(2*c[i]-1),c[i]*(2*c[i]-1))\nprint(ans)\n"}, "1544": {"problem_id": 1544, "answer": "n = int(input())\nfor i in range(n):\n    print(n, end=' ')\n    print(n-1, end=' ')\n"}, "1545": {"problem_id": 1545, "answer": "n = int(input())\ns = input()\nm = 10**9 + 7\nans = 0\nfor i in range(n):\n    if s[i] == 'a':\n        ans += 1\n    elif s[i] == 'a':\n        ans += 1\n    else:\n        ans += n-i\nprint(ans%m)"}, "1546": {"problem_id": 1546, "answer": "n = int(input())\nfor i in range(n):\n    a, b = map(int, input().split())\n    print(*a, sep='\\n')\n"}, "1547": {"problem_id": 1547, "answer": "from collections import deque\nn, m, k = list(map(int, input().split()))\ns = [int(x) for x in input().split()]\nq = deque()\nfor i in range(k):\n    q.append(i)\n\nans = []\nfor i in range(n):\n    ans.append(list(map(int, input().split())))\n\nprint('\\n'.join(ans))"}, "1548": {"problem_id": 1548, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a.append(list(map(int, input().split())))\nprint(len(a))"}, "1549": {"problem_id": 1549, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m, q = list(map(int, readline().split()))\na = list(map(int, readline().split()))\n\nd = {}\nfor i in range(q):\n    k = a[i]\n    d[k] = set()\n    for j in range(1, len(a)):\n        if a[j] in d:\n            d[a[j]].add(a[j])\n        else:\n            d[a[j]] = set()\n            break\n    if len(d) == 1:\n        d[a[0]] = set()\n        for j in range(1, len(a)):\n            d[a[j]].add(a[j])\n            break\n    elif len(d) == 2:\n        d[a[0]] = set()\n        for j in range(1, len(a)):\n            d[a[j]].add(a[j])\n            break\n    else:\n        d[a[0]] = set()\n        for j in range(1, len(a)):\n            d[a[j]].add(a[j])\n            break\n            \nprint('\\n'.join(map(str, d[a[0]].items())))\n\n"}, "1550": {"problem_id": 1550, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\ns = list(map(int, input().split()))\ns.sort()\nprint(n)\n"}, "1551": {"problem_id": 1551, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, = readline().split()\n\nd = [[0] * (n + 1) for _ in range(n + 1)]\n\ndef inp():\n    return int(readline())\n\n\ndef main():\n    n, = readline().split()\n    d[n].append(1)\n    x = inp()\n    y = inp()\n    ans = float(\"inf\")\n    for i in range(n):\n        ans = min(ans, x[i] + y[i])\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1552": {"problem_id": 1552, "answer": "n = int(input())\nfor i in range(n):\n    t = list(map(int, input().split()))\n    t.sort()\n    print(sum(t[0]*3) + sum(t[1]*3) + sum(t[2]*3) + sum(t[3]*3) + sum(t[4]*3) + sum(t[5]*3) + sum(t[6]*3) + sum(t[7]*3) + sum(t[8]*3) + sum(t[9]*3) + sum(t[10]*3) + sum(t[11]*3) + sum(t[12]*3) + sum(t[13]*3) + sum(t[14]*3) + sum(t[15]*3) + sum(t[16]*3) + sum(t[17]*3) + sum(t[18]*3) + sum(t[19]*3) + sum(t[20]*3) + sum(t[21]*3) + sum(t[22]*3) + sum(t[23]*3) + sum(t[24]*3) + sum(t[25]*3) + sum(t[26]*3) + sum(t[27]*3) + sum(t[28]*3) + sum(t[29]*3) + sum(t[30]*3) + sum(t[31]*3) + sum(t[32]*3) + sum(t[33]*3) + sum(t[34]*3) + sum(t[35]*3) + sum(t[36]*3) + sum(t[37]*3) + sum(t[38]*3) + sum(t[39]*3) + sum(t[40]*3) + sum(t[41]*3) + sum(t[42]*3) + sum(t[43]*3) + sum(t[44]*3) + sum(t[45]*3) + sum(t[46]*3) + sum(t[47]*3) + sum(t[48]*3) + sum(t[49]*3) + sum(t[50]*3) + sum(t[51]*3) + sum(t[52]*3) + sum(t[53]*3) + sum(t[54]*3) + sum(t[55]*3) + sum(t[56]*3) + sum(t[57]*3) + sum(t[58]*3) + sum(t[60]*3) + sum(t[61]*3) + sum(t[62]*3) + sum(t[63]*3) + sum(t[64]*3) + sum(t[65]*3) + sum(t[66]*3) + sum(t[68]*3) + sum(t[69]*3) + sum(t[70]*3) + sum(t[71]*3) + sum(t[72]*3) + sum(t[73]*3) + sum(t[74]*3) + sum(t[75]*3) + sum(t[76]*3) + sum(t[77]*3) + sum(t[78]*3) + sum(t[79]*3) + sum(t[80]*3) + sum(t[81]*3) + sum(t[82]*3) + sum(t[83]*3) + sum(t[84]*3) + sum(t[85]*3) + sum(t[86]*3) + sum(t[87]*3) + sum(t[88]*3) + sum(t[89]*3) + sum(t[90]*3) + sum(t[91]*3) + sum(t[92]*3) + sum(t[93]*3) + sum(t[94]*3) + sum(t[95]*3) + sum(t[96]*3) + sum(t[97]*3) + sum(t[98]*3) + sum(t[99]*3)"}, "1553": {"problem_id": 1553, "answer": "import sys\ninput = sys.stdin.readline\n\nn, h = map(int, input().split())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a.append(a[-1]*h)\n\nprint(max(a))"}, "1554": {"problem_id": 1554, "answer": "n = int(input())\na = list(map(int, input().split()))\nl, r = 0, 0\nfor i in range(n):\n    if a[i] == 1:\n        l += 1\n    else:\n        r += 1\nprint(l)\n"}, "1555": {"problem_id": 1555, "answer": "n, m = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(input())\nprint('Yes', a[0])"}, "1556": {"problem_id": 1556, "answer": "n, k, x = map(int, input().split())\na = [0] + list(map(int, input().split()))\nfor i in range(n):\n    a[i] = x\nfor i in range(k):\n    x = a[i]\n    if x % x == 0:\n        x = x // x\n    else:\n        x = x // x + x\nprint(max(a))"}, "1557": {"problem_id": 1557, "answer": "import sys\ninput = sys.stdin.readline\n\nh, a, c = list(map(int, input().split()))\n\nstart = int(input())\n\ndef main():\n    h, a, c = list(map(int, input().split()))\n    start = max(h, a)\n    print(start)\n\nmain()\n"}, "1558": {"problem_id": 1558, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, r, avg = list(map(int, readline().split()))\n\ndef read_int():\n    return int(readline())\n\ndef read_ints():\n    return list(map(int, readline().split()))\n\ndef read_ints_():\n    return list(map(int, readline().split()))\n\n#-------------------Input-------------------\n#-------------------Output-------------------\n#-------------------Constraints------------------\n1 <= n <= 100000\n\nsys.setrecursionlimit(n)\nINF = float('inf')\neps = 10 ** 18\nepsd = 10 ** 18\n\ndef dfs(i, t):\n    nonlocal INF\n    if t == INF:\n        return\n    elif t == INF:\n        return\n    else:\n        ans = INF\n        for j in range(i, t):\n            ans = min(ans, dfs(j, t-1))\n        print(ans)\n        return\n\ndfs(0, 0)\n\n#-------------------Output-------------------\n#-------------------Constraints------------------\n1 <= n <= 100000\n\nsys.setrecursionlimit(n)\neps = 10 ** 18\nepsd = 10 ** 18\n\ndef dfs(i, t):\n    nonlocal INF\n    if t == INF:\n        return\n    elif t == INF:\n        return\n    else:\n        ans = INF\n        for j in range(i, t):\n            ans = min(ans, dfs(j, t-1))\n        print(ans)\n        return\n\ndfs(0, 0)\n\n#-------------------Input-------------------\n#-------------------Output-------------------\n#-------------------Constraints------------------\n1 <= n <= 100000\n\neps = 10 ** 18\nepsd = 10 ** 18\n\ndef dfs(i, t):\n    nonlocal INF\n    if t == INF:\n        return\n    elif t == INF:\n        return\n    else:\n        ans = INF\n        for j in range(i, t):\n            ans = min(ans, dfs(j, t-1))\n        print(ans)\n        return\n\ndfs(0, 0)\n\n#-------------------Output-------------------\n#-------------------Constraints------------------\n1 <= n <= 100000\n\neps = 10 ** 18\nepsd = 10 ** 18\n\ndef dfs(i, t):\n    nonlocal INF\n    if t == INF:\n        return\n    elif t == INF:\n        return\n    else:\n        ans = INF\n        for j in range(i, t):\n            ans = min(ans, dfs(j, t-1))\n        print(ans)\n        return\n\ndfs(0, 0)\n\n#-------------------Output-------------------\n#-------------------Constraints------------------\n1 <= n <= 100000\n\neps = 10 ** 18\nepsd = 10 ** 18\n\ndef dfs(i, t):\n    nonlocal INF\n    if t == INF:\n        return\n    elif t == INF:\n        return\n    else:\n        ans = INF\n        for j in range(i, t):\n            ans = min(ans, dfs(j, t-"}, "1559": {"problem_id": 1559, "answer": "import sys\ninput = sys.stdin.readline\n\nL = int(input())\n\nfor i in range(L):\n    a = int(input())\n    if a%2 == 0:\n        print(a)\n    else:\n        print(a//2)\n"}, "1560": {"problem_id": 1560, "answer": "n = int(input())\na = input()\nprint(2*a.count('r'))"}, "1561": {"problem_id": 1561, "answer": "n,m,k = map(int,input().split())\ns = list(map(str,input().split()))\nfor i in range(n):\n    if s[i]=='.':\n        s[i]='*'\n    else:\n        s[i]='.'\nprint(len(s))"}, "1562": {"problem_id": 1562, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k, q = list(map(int, input().split()))\n\nL = [[] for _ in range(k)]\nfor i in range(1, m):\n    L[i].append(i+1)\n    L[i].append(i+1)\n\ndef dfs(i, j):\n    if i == j:\n        return 0\n    else:\n        res = float('inf')\n        for k in range(len(L[i])):\n            if L[i][k] == j:\n                res = min(res, dfs(i, k) + 1)\n                break\n        return res\n\ndfs(0, 0)\n\nprint(n)\n"}, "1563": {"problem_id": 1563, "answer": "from collections import defaultdict, deque\nn, m = list(map(int, input().split()))\nedges = defaultdict(set)\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    edges[a].add(b)\n    edges[b].add(a)\n\ndef is_connected(v, u):\n    if len(v) == 0:\n        return False\n    elif len(u) == 0:\n        return True\n    else:\n        return False\n\ndef dfs(v, u):\n    if is_connected(v, u):\n        return True\n    else:\n        v.append(u)\n        return False\n\nvisited = set()\nvisited.add(1)\ndfs(1, 1)\n\nn, m = list(map(int, input().split()))\nedges = defaultdict(set)\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    edges[a].add(b)\n    edges[b].add(a)\n\nans = 0\nfor i in range(m):\n    if is_connected(v, i):\n        ans += 1\n        continue\n    ans += max(0, i - 2 * (n - 1) // 2)\n    dfs(v, i)\n\nprint(ans)\n"}, "1564": {"problem_id": 1564, "answer": "n = int(input())\ns = input()\nt = input()\n\nfor i in range(n):\n    s, t = s.split('a'), t.split('a')\n    if s[i] == 'a':\n        print(-1)\n    else:\n        print(s[i], t[i])\n"}, "1565": {"problem_id": 1565, "answer": "import sys\ninput = sys.stdin.readline\n\ndef __starting_point():\n    l = int(input())\n    n = int(input())\n    print(n)\n\n__starting_point()"}, "1566": {"problem_id": 1566, "answer": "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = []\n    for i in range(n):\n        l.append(ceil(l[-1] + l[-2]))\n    l.sort(reverse=True)\n    x = l[0]\n    y = l[n-1]\n    z = l[n-2]\n    if z > 0:\n        x, y, z = x, y, z\n    else:\n        x, y, z = x, y, z, 0\n    print(\"Yes\")\n"}, "1567": {"problem_id": 1567, "answer": "from sys import stdin,stdout\nn,k=list(map(int,stdin.readline().split()))\nl=list(map(int,stdin.readline().split()))\ns=0\nfor i in range(n):\n    s+=l[i]%998244353\nprint(s)\n"}, "1568": {"problem_id": 1568, "answer": "n, A, B, C, T = list(map(int, input().split()))\n\ndef main():\n    n, A, B, C, T = list(map(int, input().split()))\n    if T == 0:\n        print(0)\n    elif T == 1:\n        print(0)\n    else:\n        for i in range(n):\n            if A == 0:\n                A = T\n                B = 0\n                C = 0\n                T = 0\n            elif B == 0:\n                B = T\n                C = T\n                T = 0\n            elif C == 0:\n                C = T\n                T = 0\n            elif T == 0:\n                T = 0\n            else:\n                print(0)\n                break\n        else:\n            print(0)\n            break\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n           "}, "1569": {"problem_id": 1569, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[i] = list(map(int, input().split()))\nq = deque([])\nvisited = set()\nvisited.add(d[0])\nvisited.add(d[1])\nvisited.add(d[2])\nvisited.add(d[3])\nvisited.rotate(3)\nvisited.extend(d[0])\nvisited.extend(d[1])\nvisited.extend(d[2])\nvisited.extend(d[3])\nvisited.extend(d[4])\nvisited.extend(d[5])\nvisited.extend(d[6])\nvisited.extend(d[7])\nvisited.extend(d[8])\nvisited.extend(d[9])\nvisited.extend(d[10])\nvisited.extend(d[11])\nvisited.extend(d[12])\nvisited.extend(d[13])\nvisited.extend(d[14])\nvisited.extend(d[15])\nvisited.extend(d[16])\nvisited.extend(d[17])\nvisited.extend(d[18])\nvisited.extend(d[19])\nvisited.extend(d[20])\nvisited.extend(d[21])\nvisited.extend(d[22])\nvisited.extend(d[23])\nvisited.extend(d[24])\nvisited.extend(d[25])\nvisited.extend(d[26])\nvisited.extend(d[27])\nvisited.extend(d[28])\nvisited.extend(d[29])\nvisited.extend(d[30])\nvisited.extend(d[31])\nvisited.extend(d[32])\nvisited.extend(d[33])\nvisited.extend(d[34])\nvisited.extend(d[35])\nvisited.extend(d[36])\nvisited.extend(d[37])\nvisited.extend(d[38])\nvisited.extend(d[39])\nvisited.extend(d[40])\nvisited.extend(d[41])\nvisited.extend(d[42])\nvisited.extend(d[43])\nvisited.extend(d[44])\nvisited.extend(d[45])\nvisited.extend(d[46])\nvisited.extend(d[47])\nvisited.extend(d[48])\nvisited.extend(d[49])\nvisited.extend(d[50])\nvisited.extend(d[51])\nvisited.extend(d[52])\nvisited.extend(d[53])\nvisited.extend(d[54])\nvisited.extend(d[55])\nvisited.extend(d[56])\nvisited.extend(d[57])\nvisited.extend(d[58])\nvisited.extend(d[59])\nvisited.extend(d[60])\nvisited.extend(d[61])\nvisited.extend(d[62])\nvisited.extend(d[63])\nvisited.extend(d[64])\nvisited.extend(d[65])\nvisited.extend(d[66])\nvisited.extend(d[67])\nvisited.extend(d[68])\nvisited.extend(d[69])\nvisited.extend(d[70])\nvisited.extend(d[71])\nvisited.extend(d[72])\nvisited.extend(d[73])\nvisited.extend(d[74])\nvisited.extend(d[75])\nvisited.extend(d[76])\nvisited.extend(d[77])\nvisited.extend(d[78])\nvisited.extend(d[79])\nvisited.extend(d[78])\nvisited.extend(d[79])\nvisited.extend("}, "1570": {"problem_id": 1570, "answer": "def rec(n,k,a):\n    if k==0:\n        return 0\n    else:\n        return rec(n-k,k,a)\n\ndef rec(n,k,a):\n    if k==0:\n        return 0\n    else:\n        return rec(n-k,k,a)\n\nprint(rec(10,2,0))"}, "1571": {"problem_id": 1571, "answer": "import sys\ninput = sys.stdin.readline\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return n // 2\n    else:\n        return pow(n, 2)\n\ndef __starting_point():\n    s = input().strip()\n    t = input().strip()\n    mod = 998244353\n    n = len(s)\n    for i in range(n):\n        if s[i] == t[i]:\n            continue\n        else:\n            mod = pow(mod, 2)\n            n -= 1\n    print(mod)\n\n__starting_point()"}, "1572": {"problem_id": 1572, "answer": "n = int(input())\na = list(map(int, input().split()))\nl, r = 0, 0\nfor i in range(n):\n    if a[i] == a[i-1]:\n        l += 1\n    else:\n        r += 1\nprint(l, r)"}, "1573": {"problem_id": 1573, "answer": "import sys\ninput = sys.stdin.readline\n\nn, d = map(int, input().split())\nA = list(map(int, input().split()))\n\nfor m, s in A:\n    if m-s > d:\n        print(m, s)\n    else:\n        A.remove(m)\n\nprint(max(A))"}, "1574": {"problem_id": 1574, "answer": "n, m = list(map(int, input().split()))\ns = set(range(3, n + 1))\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    s.add(a)\n    s.add(b)\nprint(sum(s))\n"}, "1575": {"problem_id": 1575, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n\n    n = int(input())\n    l = list(map(int,input().split()))\n\n    ans = 0\n    for i in range(n):\n        ans += int(input())\n        l.append(ans)\n\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1576": {"problem_id": 1576, "answer": "from collections import deque\ndef encrypt(s):\n    l = len(s)\n    i = 0\n    while i < l:\n        s[i] = s[i]*10 + s[i+1]\n        i += 1\n    return s\n\ndef decrypt(s):\n    l = len(s)\n    i = 0\n    while i < l:\n        s[i] = s[i]*10 + s[i+1]\n        i += 1\n    return s\n\n# encrypts a string\ndef encrypt(s):\n    l = len(s)\n    i = 0\n    while i < l:\n        s[i] = s[i]*10 + s[i+1]\n        i += 1\n    return s\n\n# decrypted string\ndef decrypt(s):\n    l = len(s)\n    i = 0\n    while i < l:\n        s[i] = s[i]*10 + s[i+1]\n        i += 1\n    return s\n\n# encrypts a string\ndef encrypt(s):\n    l = len(s)\n    i = 0\n    while i < l:\n        s[i] = s[i]*10 + s[i+1]\n        i += 1\n    return s\n\n# decrypted string\ndef decrypt(s):\n    l = len(s)\n    i = 0\n    while i < l:\n        s[i] = s[i]*10 + s[i+1]\n        i += 1\n    return s\n\n# encrypts a string\ndef encrypt(s):\n    l = len(s)\n    i = 0\n    while i < l:\n        s[i] = s[i]*10 + s[i+1]\n        i += 1\n    return s\n\n# decrypted string\ndef decrypt(s):\n    l = len(s)\n    i = 0\n    while i < l:\n        s[i] = s[i]*10 + s[i+1]\n        i += 1\n    return s\n\n# encrypts a string\ndef encrypt(s):\n    l = len(s)\n    i = 0\n    while i < l:\n        s[i] = s[i]*10 + s[i+1]\n        i += 1\n    return s\n\n# decrypted string\ndef decrypt(s):\n    l = len(s)\n    i = 0\n    while i < l:\n        s[i] = s[i]*10 + s[i+1]\n        i += 1\n    return s\n\n# encrypts a string\ndef encrypt(s):\n    l = len(s)\n    i = 0\n    while i < l:\n        s[i] = s[i]*10 + s[i+1]\n        i += 1\n    return s\n\n# decrypted string\ndef decrypt(s):\n    l = len(s)\n    i = 0\n    while i < l:\n        s[i] = s[i]*10 + s[i+1]\n        i += 1\n    return s\n\n# encrypts a string\ndef encrypt(s):\n    l = len(s)\n    i = 0\n    while i < l:\n        s[i] = s"}, "1577": {"problem_id": 1577, "answer": "n = int(input())\ns = input()\nprint(\"Anton\" if n%2 else \"Danik\")\n"}, "1578": {"problem_id": 1578, "answer": "# cook your dish here\ndef gcd(x,y):\n    if x==y:\n        return y\n    else:\n        return gcd(x,y)\n\nn = int(input())\nprint(gcd(n,n))"}, "1579": {"problem_id": 1579, "answer": "from bisect import bisect_left as bl\nN = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\nprint(max(x[0], x[1]))"}, "1580": {"problem_id": 1580, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nX = list(map(int, input().split()))\nY = list(map(int, input().split()))\n\ndef dfs(X, Y, X_1, Y_1, X_2, Y_2, X_M):\n    if X_1 == X_M or Y_1 == Y_M:\n        return False\n    elif X_M == X_1 or Y_M == Y_1:\n        return True\n    else:\n        mx = 0\n        for i in range(X_M, Y_M):\n            if X_1 % 2 == 0:\n                mx += 1\n                X_1 //= 2\n            elif X_1 % 2 == 1:\n                mx += 1\n                Y_1 //= 2\n            else:\n                mx += 1\n                Y_1 //= 2\n        print(mx)\n\ndfs(X, Y, X_1, Y_1, X_2, Y_2, X_M)\n# print(X, Y, X_1, Y_1, X_2, Y_2, X_M)\n"}, "1581": {"problem_id": 1581, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nmod = 10**9+7\nN, K = map(int, input().split())\ns = [int(x) for x in input().split()]\n#print(s)\nprint(N*s[-1]%mod)"}, "1582": {"problem_id": 1582, "answer": "N = int(input())\nfor i in range(N):\n    print(i, end=' ')"}, "1583": {"problem_id": 1583, "answer": "import math\na, b = map(int, input().split())\nx = math.sqrt(b)\ny = math.sqrt(a)\nprint(y)"}, "1584": {"problem_id": 1584, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nl = list(map(int, input().split()))\n\n# dp[i][j] = min(l[i] for i in range(n))\n# dp[i][j] = max(l[i] + dp[i+1][j], l[i+1] + dp[i][j+1])\n\n# dp[i][j] = min(l[i] for i in range(n))\n# dp[i][j] = max(l[i] + dp[i+1][j], l[i+1] + dp[i][j+1])\n\n# dp[i][j] = max(l[i] + dp[i][j], l[i+1] + dp[i][j+1])\n# dp[i][j] = min(l[i] + dp[i][j], l[i+1] + dp[i][j+1])\n\n# dp[i][j] = max(l[i] + dp[i][j], l[i+1] + dp[i][j+1])\n# dp[i][j] = min(l[i] + dp[i][j], l[i+1] + dp[i+1][j])\n\n# dp[i][j] = max(l[i] + dp[i][j], l[i+1] + dp[i+1][j])\n# dp[i][j] = min(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n\n# dp[i][j] = max(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n# dp[i][j] = min(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n\n# dp[i][j] = max(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n# dp[i][j] = min(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n\n# dp[i][j] = max(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n# dp[i][j] = min(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n\n# dp[i][j] = max(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n# dp[i][j] = min(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n\n# dp[i][j] = max(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n# dp[i][j] = min(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n\n# dp[i][j] = max(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n# dp[i][j] = min(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n\n# dp[i][j] = max(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n# dp[i][j] = min(l[i] + dp[i][j], l[i+1] + dp[i+1][j+1])\n\n# dp[i][j] = max(l[i] +"}, "1585": {"problem_id": 1585, "answer": "from math import sqrt\ndef f(x,y):\n    if x==y:\n        return 0\n    else:\n        return sqrt(x*x+y*y)\n\nn=int(input())\na=list(map(int,input().split()))\nprint(max(a))\n"}, "1586": {"problem_id": 1586, "answer": "def main():\n    n = int(input())\n    if n < 2:\n        print((0))\n    elif n > 2:\n        print((n // 2))\n    else:\n        print((n % 2))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1587": {"problem_id": 1587, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N = int(readline())\n    c = list(map(int, readline().split()))\n    R = list(map(int, readline().split()))\n    W = list(map(int, readline().split()))\n    # \u5982\u679c\u6700\u5c0f\u306e\u6587\u5b57\u304c\u51fa\u73fe\u3055\u305b\u308b,\u521d\u671f\u5316\n    for i in range(N-1):\n        if c[i] == W[i]:\n            print(i)\n            continue\n        elif c[i] == R[i]:\n            print(i)\n            continue\n        else:\n            R[i] = W[i]\n            W[i] = R[i]\n            print(i)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1588": {"problem_id": 1588, "answer": "n = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += x[i]\n    y.append(s)\nprint(s)"}, "1589": {"problem_id": 1589, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    if m == 2:\n        print(n)\n    elif m == 3:\n        print(n-2)\n    else:\n        a = [0]*m\n        for i in range(n):\n            a[i] = 1\n            if i == m:\n                break\n            if a[i] == 0:\n                a[i] = 0\n            else:\n                a[i] = a[i-1]\n                if a[i] == 0:\n                    a[i] = a[i-2]\n                else:\n                    a[i] = a[i-2]\n                    if a[i] == 0:\n                        a[i] = a[i-2]\n                    else:\n                        a[i] = a[i-2]\n                        if a[i] == 0:\n                            a[i] = a[i-2]\n                        else:\n                            a[i] = a[i-2]\n                            if a[i] == 0:\n                                a[i] = a[i-2]\n                            else:\n                                a[i] = a[i-2]\n                                if a[i] == 0:\n                                    a[i] = a[i-2]\n                                else:\n                                    a[i] = a[i-2]\n                                    if a[i] == 0:\n                                       a[i] = a[i-2]\n           "}, "1590": {"problem_id": 1590, "answer": "from itertools import accumulate\nn = int(input())\na = list(map(int, input().split()))\naccumulate(a)\nprint(sum(accumulate(a[i])) % mod)"}, "1591": {"problem_id": 1591, "answer": "from collections import deque\n\nn, k = map(int, input().split())\n\nd = deque()\nfor _ in range(n):\n    d.append(0)\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 0\n    for drink in l:\n        if drink[0] == 1:\n            ans += 1\n        else:\n            ans += drink[1]\n    print(ans)"}, "1592": {"problem_id": 1592, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nfor _ in range(n):\n    t, c = list(map(int, input().split()))\n    if t == 1:\n        print(c)\n    elif t == 0:\n        print(0)\n    else:\n        ans = 0\n        for i in range(n):\n            if c[i] == 0:\n                ans += t\n                c[i] -= 1\n            else:\n                ans += t\n        print(ans)\n"}, "1593": {"problem_id": 1593, "answer": "from math import sqrt\nn, s = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    l.append((x, y))\nl.sort(key=lambda x: x[0])\nl.reverse()\nl.reverse()\nans = float('inf')\nfor i in range(n):\n    ans = min(ans, sqrt(l[i][0] + l[i][1]))\nprint(ans)\n"}, "1594": {"problem_id": 1594, "answer": "n, m = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    s.append(n)\n    print(s[-1] + m)\n__starting_point()"}, "1595": {"problem_id": 1595, "answer": "def binary_to_int(n):\n    return bin(n)[2:]\n\ndef find_low_bit(n):\n    low = 0\n    while low < n:\n        low += 1\n        if n & 1:\n            low += 1\n        else:\n            low += 1\n    return low\n\ndef find_all_low_bit(n):\n    low = 0\n    while low < n:\n        low += 1\n        if n & 1:\n            low += 1\n        else:\n            low += 1\n    return low\n\ndef __starting_point():\n    print(find_low_bit(1))\n__starting_point()"}, "1596": {"problem_id": 1596, "answer": "s = input()\nm = 10**9+7\nfor i in range(len(s)):\n    if s[i] == \"m\":\n        m = m*10**9+7\nprint(m)"}, "1597": {"problem_id": 1597, "answer": "n = int(input())\nfor i in range(n):\n    print(input())\n"}, "1598": {"problem_id": 1598, "answer": "# cook your dish here\nfrom collections import Counter\ns = str(input())\nfor i in range(len(s)):\n    s = s[:i]\n    cnt = Counter(s)\n    if len(cnt) == len(s):\n        print(s)\n    else:\n        print(s.count(0))\n"}, "1599": {"problem_id": 1599, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\ns = list(stdin.readline().strip())\nfor i in range(n):\n    l,r = list(map(int,stdin.readline().strip().split()))\n    s.append(l)\nprint(''.join(s))"}, "1600": {"problem_id": 1600, "answer": "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\ns = 0\nfor i in range(n - 1):\n    if l[i] == l[i + 1]:\n        s += 1\nprint(s)\n"}, "1601": {"problem_id": 1601, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\nz = list(map(int, input().split()))\n\ndef solve(x, y, z):\n    if x[0] == y[0] == z[0]:\n        return 1\n    elif x[0] == z[0] == y[0] == z[1]:\n        return 2\n    else:\n        return 3\n\nfor i in range(n):\n    x, y, z = sorted(x,reverse = True)\n    print(*solve(x,y,z))"}, "1602": {"problem_id": 1602, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    x = a[i]\n    y = a[i] - x\n    if y:\n        l.append(y)\n    else:\n        l.append(x)\nprint('\\n'.join(map(str, l)))"}, "1603": {"problem_id": 1603, "answer": "n = int(input())\na = list(map(int, input().split()))\nl, r = 0, 0\nfor i in range(n):\n    if a[i] - a[i - 1] > 0:\n        l += 1\n    else:\n        r += 1\nprint(l, r)"}, "1604": {"problem_id": 1604, "answer": "import math\ndef factorial(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return math.factorial(n//2)\n    else:\n        return math.factorial(n//2) * math.factorial(n-1)\n\ndef mod(a, b):\n    if a % b == 0:\n        return pow(a, b, mod)\n    else:\n        return pow(a, b, mod) * mod\n\nn, k = list(map(int, input().split()))\nl, r = list(map(int, input().split()))\nprint(mod(9, k) * 9) % 1000000007\n"}, "1605": {"problem_id": 1605, "answer": "def mergeArrays(s, n}, "1606": {"problem_id": 1606, "answer": "n = int(input())\na = []\nfor i in range(n):\n    a.append(input().split())\nq = int(input())\nfor _ in range(q):\n    s = input().split()\n    s[0] = int(s[0])\n    s[1] = int(s[1])\n    print(''.join(s))"}, "1607": {"problem_id": 1607, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, k = map(int, input().split())\nm = 998244353\nans = 0\nfor i in range(k):\n    ans += pow(2, i, k)\nprint(ans)"}, "1608": {"problem_id": 1608, "answer": "from math import factorial as f\nn = int(input())\na = list(map(int, input().split()))\nm = 10**9 + 7\nf = lambda: factorial(m)\nfor i in range(n):\n    a[i] %= f(m)\nprint(sum(a))"}, "1609": {"problem_id": 1609, "answer": "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    print(a[0], a[1])"}, "1610": {"problem_id": 1610, "answer": "n, k = map(int, input().split())\np = [0] + [list(map(int, input().split())) for _ in range(n)]\nfor i in range(n):\n    p[i] = k\nprint(' '.join(map(str, p)))"}, "1611": {"problem_id": 1611, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\nl = list(map(int,stdin.readline().split()))\nprint(l[0])"}, "1612": {"problem_id": 1612, "answer": "n = int(input())\nl = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += l[i]\n\tif s%2 == 0:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\t\tbreak\n\telse:\n\t\tprint(\"NO\")\n\t\tbreak\n\t\t\n"}, "1613": {"problem_id": 1613, "answer": ""}, "1614": {"problem_id": 1614, "answer": "from sys import stdin,stdout\nn,h = list(map(int,stdin.readline().split()))\na = list(map(int,stdin.readline().split()))\nb = 0\nfor i in range(n):\n    if a[i] > h:\n        b += 1\n    else:\n        a[i] = h\nprint(b)\n"}, "1615": {"problem_id": 1615, "answer": "n, k = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\nmaxi = 0\nfor i in range(n):\n    if l[i] > maxi:\n        maxi = l[i]\n    elif l[i] < maxi:\n        maxi = l[i]\n\nans = float('inf')\n\nfor i in range(n):\n    if l[i] > maxi:\n        ans = min(ans, maxi)\n    else:\n        ans = min(ans, maxi)\n\nprint(ans)\n\n"}, "1616": {"problem_id": 1616, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = min(a[i], i)\nprint(len(a))"}, "1617": {"problem_id": 1617, "answer": "from sys import stdin\ninput = stdin.readline\nn = int(input())\nl = [int(x) for x in input().split()]\nl.sort()\nans = [0]*n\nfor i in range(n-1):\n    ans[i] = sum(l[i+1:i+n-1])\nprint(*ans)"}, "1618": {"problem_id": 1618, "answer": "from sys import stdin, stdout\nn = int(input())\na = list(map(int, stdin.readline().split()))\nm = int(input())\nboxes = []\nfor i in range(n):\n    w, h = list(map(int, stdin.readline().split()))\n    boxes.append((w, h))\nprint(boxes[-1][0])\n"}, "1619": {"problem_id": 1619, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\ndef dfs(x, y, z):\n    nonlocal n, m, g, s, e, f, l, r\n    if x == n:\n        return 1\n    elif y == m:\n        return 2\n    elif z == n:\n        return 3\n    else:\n        return 4\n\nfor _ in range(n):\n    x, y, z = map(int, input().split())\n    x -= 1\n    y -= 1\n    z -= 1\n    if x == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "1620": {"problem_id": 1620, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    print(''.join(s))"}, "1621": {"problem_id": 1621, "answer": "s = input()\nn = len(s)\nk = 0\nfor i in range(n):\n    k += int(s[i])\n    if k > 0:\n        s[i] = '|' + s[i]\n    else:\n        s[i] = '|' + s[i]\nprint(k)"}, "1622": {"problem_id": 1622, "answer": "n, m = list(map(int, input().split()))\nevents = []\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    events.append(x)\n    events.append(y)\nprint('YES' if events[0] == '1' else 'NO')"}, "1623": {"problem_id": 1623, "answer": "from bisect import bisect_left as bl\nn, l, r = map(int, input().split())\na = list(map(int, input().split()))\nb = sorted(a)\ns = 0\nfor i in range(n):\n    if i % 2 == 0:\n        s += bl(i)\n    else:\n        s += bl(i)\nprint(s)"}, "1624": {"problem_id": 1624, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            ans += a[i]\n        else:\n            ans += a[i] * (i - 1)\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1625": {"problem_id": 1625, "answer": "import sys\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef maxBits(n):\n    return [0] * n\n\ndef maxMins(n):\n    m = 0\n    for i in range(n):\n        if n % i == 0:\n            m += 1\n        else:\n            m += m // i\n    return m\n\n# a = list(map(int, input().split()))\n# a.sort()\n# print(maxBits(a))\n\n# b = list(map(int, input().split()))\n# b.sort()\n# print(maxMins(b))\n\n# print(maxBits(a))\n\nsys.stdout.write('\\n'.join(map(str, a)))\n"}, "1626": {"problem_id": 1626, "answer": "n, k = list(map(int, input().split()))\np = 10**9 + 7\nd = [0] * k\nfor i in range(1, k):\n    d[i] += p\nans = pow(10, 9, p)\nprint(ans % 1000000007)"}, "1627": {"problem_id": 1627, "answer": "n = int(input())\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    l, r = 0, 0\n    for j in range(a, b):\n        if j % 2 == 0:\n            r += 1\n        else:\n            l += 1\n        elif j % 2 == 1:\n            l += 1\n        else:\n            r += 1\n    print(l, r)\n"}, "1628": {"problem_id": 1628, "answer": "s = input()\nn = len(s)\nl = []\nfor i in range(n):\n    if s[i] == \"x\":\n        l.append(i)\n    else:\n        l.append(i)\nl.sort(reverse=True)\nprint(\"\".join(l))\n"}, "1629": {"problem_id": 1629, "answer": "n, x = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef is_valid(a):\n    if a[0] == x:\n        return True\n    else:\n        return False\n\nfor i in range(n-1, -1, -1):\n    a[i] = a[i+1]\n\ns = sum(a)\nprint(''.join(map(str, s)))\n"}, "1630": {"problem_id": 1630, "answer": "n = int(input())\nname = input().split()\nn = len(name)\nname = list(name[0])\nname = list(name[1:])\n\nif n % 2 == 0:\n name.append('D')\nname.append('DIB')\nname.append('D')\nname.append('DI')\nname.append('D')\nname.append('DIIB')\n\nprint('YES' if name.count('D') == n else 'NO')\n"}, "1631": {"problem_id": 1631, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nfor _ in range(n):\n    name = input().strip()\n    s = list(name)\n    t = list(name)\n    l = []\n    for i in range(len(s)):\n        if s[i] not in l:\n            l.append(s[i])\n        else:\n            t.append(s[i])\n    print('Impossible')\n"}, "1632": {"problem_id": 1632, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(max(a[0], a[1]))"}, "1633": {"problem_id": 1633, "answer": "from sys import stdin,stdout\nn,m,k = list(map(int,stdin.readline().split()))\nl = []\nfor i in range(n):\n    l.append([])\n    l[i].append(i+1)\nl = sorted(l,key=lambda x:x[0])\nprint('\\n'.join(map(str,l)))\n"}, "1634": {"problem_id": 1634, "answer": "def __starting_point():\n    c, m = list(map(int, input().split()))\n    n, m = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        s += c * m\n        if i % 2 == 0:\n            s += m\n    print(s)\n__starting_point()"}, "1635": {"problem_id": 1635, "answer": "n = int(input())\ncafes = list(map(int, input().split()))\nfor i in range(n):\n    c.append(c[-1] + i)\nprint(cafes)"}, "1636": {"problem_id": 1636, "answer": "n = int(input())\npoints = list(map(int, input().split()))\npoints.sort()\nfor i in range(n):\n    x, y = points[i]\n    if x == 0:\n        print(\"YES\")\n        continue\n    else:\n        print(\"NO\")\n        continue\n    x_set = set()\n    y_set = set()\n    x_set.add(x)\n    y_set.add(y)\n    y_set.add(x)\n    x_set.add(y)\n    y_set.add(x)\n    x_set.discard(y_set)\n    y_set.discard(x_set)\n    x_set.extend(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(y_set)\n    x_set.discard(x_set)\n    y_set.extend(y_set)\n    x_set.discard(x_set)\n    y_set.extend(y_set)\n    x_set.discard(y_set)\n    y_set.extend(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n    x_set.discard(y_set)\n    y_set.extend(x_set)\n "}, "1637": {"problem_id": 1637, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\nL = [0] * (n + 1)\n\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    L[x] += 1\n    L[y] += 1\n\nc = 0\n\nfor i in range(n):\n    if L[i] == 0:\n        c += 1\n        break\n\nprint(c)\n"}, "1638": {"problem_id": 1638, "answer": "n = int(input())\nm = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(n):\n    a[i] = m[i]\n\nmax = 10 ** 9\nfor i in range(n):\n    if max < a[i]:\n        max = a[i]\n\nprint(max)"}, "1639": {"problem_id": 1639, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = 0\nfor i in range(n):\n    if a[i] <= l:\n        l = i\nprint(l)"}, "1640": {"problem_id": 1640, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] += a[i-1]\nprint(sum(a))"}, "1641": {"problem_id": 1641, "answer": "n, k, s, t = list(map(int, input().split()))\nc = list(map(int, input().split()))\nd = [0] * (k + 1)\nfor i in range(n):\n    d[i] = min(c[i], d[i - k] + c[i - k - 1])\nprint(d[n])"}, "1642": {"problem_id": 1642, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x == y:\n        s += 1\nprint(s)"}, "1643": {"problem_id": 1643, "answer": "from bisect import bisect_left as bl\ns = str(input())\nfor i in range(len(s)):\n    if s[i] not in bl:\n        bl.append(s[i])\n    else:\n        bl.append(s[i])\nprint(''.join(map(str, bl)))"}, "1644": {"problem_id": 1644, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef inner(r, b, h):\n    return max(a[r:b] - a[b:])\n\ndef h(r, b, h):\n    return max(a[r:b] - a[b:])\n\ndef inner(r, b, h):\n    return max(a[r:b] - a[b:])\n\ndef max(a):\n    return max(a)\n\ndef l(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef r(r):\n    return max(a[:r] - a[:b])\n\ndef h(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef l(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef r(r):\n    return max(a[:r] - a[:b])\n\ndef h(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef r(r):\n    return max(a[:r] - a[:b])\n\ndef l(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef r(r):\n    return max(a[:r] - a[:b])\n\ndef h(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef l(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef r(r):\n    return max(a[:r] - a[:b])\n\ndef h(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef r(r):\n    return max(a[:r] - a[:b])\n\ndef l(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef h(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef r(r):\n    return max(a[:r] - a[:b])\n\ndef l(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef h(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef r(r):\n    return max(a[:r] - a[:b])\n\ndef l(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef h(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef r(r):\n    return max(a[:r] - a[:b])\n\ndef l(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef h(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef r(r):\n    return max(a[:r] - a[:b])\n\ndef l(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef h(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef r(r):\n    return max(a[:r] - a[:b])\n\ndef l(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef h(r, b, h):\n    return max(a[:r] - a[:b])\n\ndef r(r):\n    return max(a[:r] - a[:b])\n\ndef l"}, "1645": {"problem_id": 1645, "answer": "from collections import Counter\nn = int(input())\na = list(map(int,input().split()))\nc = Counter(a)\nfor i in range(n):\n    c[a[i] - a[i-1]] += 1\nprint(sum(c.values()))"}, "1646": {"problem_id": 1646, "answer": "n = int(input())\na = list(map(int,input().split()))\nprint(a[0])"}, "1647": {"problem_id": 1647, "answer": "n = int(input())\na = list(input())\nfor i in range(n):\n    if a[i] == 'b':\n        a.insert(0, i)\n    else:\n        a.insert(0, i + 1)\nprint(''.join(map(str, a)))"}, "1648": {"problem_id": 1648, "answer": "def fac(n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 2\n    else:\n        return 3\n\ndef main():\n    N, K = map(int, input().split())\n    K -= 1\n    a = list(map(int, input().split()))\n    print(fac(N-K))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1649": {"problem_id": 1649, "answer": "def main():\n    s = int(input())\n    for i in range(s):\n        a, b, c, d = map(int, input().split())\n        if a + b + c == d:\n            print(\"Yes\")\n        else:\n            print(\"No\")\ndef __starting_point():\n    main()\n__starting_point()"}, "1650": {"problem_id": 1650, "answer": "import sys\ninput = sys.stdin.readline\n\ndef inp(): return int(input())\ndef inl(): return list(map(int, input().split()))\ndef inr(): return list(map(int, input().split()))\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LI2(n): return [1] + MI()\ndef MI2(n): return [1] + LI()\ndef LI3(n): return [1] + LI()\ndef LI4(n): return [1] + LI()\ndef SR(n): return [1]\ndef XOR(a,b): return pow(a,b,10)\n\nMOD = 10**9 + 7\n\ndef main():\n    n = LI()\n    for i in range(n):\n        a,b = LI()\n        a,b = inp()\n        a,b = a^b, a^a\n        print(a)\n        print(b)\n        print(a^b)\n\nmain()\n"}, "1651": {"problem_id": 1651, "answer": "def main():\n    S,P = list(map(int,input().split()))\n    print(S)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1652": {"problem_id": 1652, "answer": "S = input()\n\ndef dfs(S):\n    if S == \"\".join(sorted(S, key=lambda x: x[1], reverse=True) for x in S):\n        print(\"YES\")\n        return\n    else:\n        print(\"NO\")\n\nS = input()\n\ndfs(S)\n"}, "1653": {"problem_id": 1653, "answer": "s = input()\na = list(s)\nb = list(s)\nc = list(s)\nd = list(s)\n\nfor i in range(len(a)):\n    if a[i] == '1':\n        c.append(c[-1] + 1)\n    else:\n        c.append(c[-1] + 1)\n\nprint(''.join(c))"}, "1654": {"problem_id": 1654, "answer": "s = input()\nt = input()\n\nfor i in range(len(s)):\n    if s[i] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and t[-1] == '?':\n        t.append('?')\n    elif s[i] == '?' and"}, "1655": {"problem_id": 1655, "answer": "n = int(input())\nl = list(map(int, input().split()))\nprint(len(l))"}, "1656": {"problem_id": 1656, "answer": "s = input()\nn = len(s)\nw = 0\nfor i in range(n):\n    if s[i] == \"w\":\n        w += 1\n    else:\n        print(w)\n        break\n"}, "1657": {"problem_id": 1657, "answer": "n, p = list(map(int, input().split()))\na = [0] * (n + 1)\nb = [0] * (n + 1)\nfor i in range(n):\n    a[i] += b[i]\n    b[i] += a[i]\nprint(sum(a))"}, "1658": {"problem_id": 1658, "answer": "n, x = list(map(int, input().split()))\nd = [0]*1001\nfor i in range(1001):\n    d[i] = x\n    x = min(d[i], x)\nprint(d[x])\n"}, "1659": {"problem_id": 1659, "answer": "from sys import stdin,stdout\nn,x=map(int,stdin.readline().split())\nl=list(map(int,stdin.readline().split()))\nl.sort(key=lambda x:x[0])\nprint(sum(l))"}, "1660": {"problem_id": 1660, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\ngraph = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v, w = list(map(int, input().split()))\n    graph[u].append(v)\n    graph[v].append(u)\n    graph[u].append(v)\n\nedges = []\nvisited = set()\nvisited.add((0, 0))\n\ndef dfs(u, v):\n    if u in visited:\n        return\n    visited.add(u)\n    for i in graph[u]:\n        if i not in visited:\n            dfs(i, v)\n            visited.add(i)\n            \ndfs(u, v)\n        \nprint(len(edges))\nprint(len(visited))\nprint(dfs(edges, 0))\n"}, "1661": {"problem_id": 1661, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nbills = list(map(int, input().split()))\n\nmemo = [0] * m\nfor i in range(n):\n    memo[i] = 0\n    if i == 0:\n        memo[i] = 1\n        continue\n    else:\n        memo[i] = memo[i-1] + max(memo[i-1], memo[i])\n\nprint(memo[n-1])"}, "1662": {"problem_id": 1662, "answer": "m = int(input())\nfor i in range(m):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(sum(b[0:i] - 1 for i in range(1, len(b))) + sum(b[i:i + len(b) - 1] - 1 for i in range(1, len(b))) - 1)"}, "1663": {"problem_id": 1663, "answer": "from math import ceil\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\nl.sort()\ns = 0\nfor i in range(n):\n    s += l[i]\nprint(s%1000000007)\n"}, "1664": {"problem_id": 1664, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn=int(input())\nl=list(map(int,input().split()))\nl.sort()\ns=0\nfor i in range(n):\n    if l[i]=='1':\n        s+=1\n    else:\n        s-=1\nprint(s)"}, "1665": {"problem_id": 1665, "answer": "from collections import deque\nN = int(input())\nedges = []\nfor i in range(N):\n    u, v = list(map(int, input().split()))\n    edges.append([u, v])\n\n# print edges\nedges.sort()\nn = len(edges)\nq = deque()\nq.append(0)\nvisited = set()\nvisited.add(0)\nvisited.add(0)\nvisited.add(n-1)\nvisited.add(n-1)\nvisited.add(n-1)\nvisited.add(n-1)\nvisited.add(n-1)\nvisited.rotate(n-1)\nvisited.rotate(n-1)\nvisited.extend(visited)\nvisited.extend(visited)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvisited.append(n-1)\nvis"}, "1666": {"problem_id": 1666, "answer": "def __starting_point():\n    x, y, a, b = list(map(int, input().split()))\n    print(n)\n__starting_point()"}, "1667": {"problem_id": 1667, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = [0] * n\nfor i in range(n):\n    l[i] = a[i]\n    a[i] = max(a[i], l[i])\nprint(sum(l))"}, "1668": {"problem_id": 1668, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    p = [0] * (n + 1)\n    for i in range(4):\n        p[i] = p[i - 1] + 1\n    print(p[n])"}, "1669": {"problem_id": 1669, "answer": ""}, "1670": {"problem_id": 1670, "answer": "def main():\n    n = int(input())\n    for i in range(n):\n        print('h',i)\n        if i == 0:\n            print('a',i)\n        elif i == 1:\n            print('h',i)\n        else:\n            print('a',i-1)\n            \n            \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n  "}, "1671": {"problem_id": 1671, "answer": "n = int(input())\nM = list(map(int,input().split()))\nfor i in range(n):\n    M.append(M[i] - M[i-1])\nprint(M[-1] - M[-2])"}, "1672": {"problem_id": 1672, "answer": "def __starting_point():\n    n = int(input())\n    d = {}\n    for i in range(n):\n        d[i] = list(map(int,input().split()))\n    print(2)\n__starting_point()"}, "1673": {"problem_id": 1673, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nm = 998244353\nmod =998244353\nfor i in range(n):\n    m = min(m, a[i] + a[i-1])\n    a[i] = m\nprint(m % mod)\n"}, "1674": {"problem_id": 1674, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nd = {}\nfor i in range(n):\n    d[i] = set()\n    for j in range(i, n):\n        if j not in d:\n            d[j].add(i)\n        elif j not in d:\n            d[j].add(i)\n        else:\n            d[j] = set()\n            break\n            \nprint(d.get(a[0]))\nprint(d.get(a[1]))\n"}, "1675": {"problem_id": 1675, "answer": "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nprint(sum(l[0]*(n-1)//2) // 2)"}, "1676": {"problem_id": 1676, "answer": "from collections import deque\nn, b = map(int, input().split())\nt = tuple(map(int, input().split()))\nfor _ in range(n):\n    t, d = tuple(map(int, input().split()))\n    if t == t[0]:\n        print(-1)\n    elif d == d[0]:\n        print(b)\n    else:\n        print(b)"}, "1677": {"problem_id": 1677, "answer": "from collections import deque\nn = int(input())\nfor i in range(n):\n    a, b = map(int, input().split())\n    print(a[0] + b[0] + a[1] + b[2] + b[3] + b[4] + b[5] + b[6] + b[7] + b[8] + b[9] + b[10] + b[11] + b[12] + b[13] + b[14] + b[15] + b[16] + b[17] + b[18] + b[19] + b[20] + b[21] + b[22] + b[23] + b[24] + b[25] + b[26] + b[27] + b[28] + b[29] + b[30] + b[31] + b[32] + b[33] + b[34] + b[35] + b[36] + b[37] + b[38] + b[39] + b[4A] + b[4B] + b[4C] + b[4D] + b[4E] + b[4F] + b[4G] + b[4H] + b[4I] + b[4J] + b[4K] + b[4L] + b[4M] + b[4N] + b[4O] + b[4P] + b[4Q] + b[4R] + b[4R] + b[4S] + b[4T] + b[4U] + b[4V] + b[4V] + b[4W] + b[4X] + b[4Y] + b[4Z] + b[4Y] + b[4Z] + b[4X] + b[4X] + b[4X] + b[4Y] + b[4Z] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4X] + b[4"}, "1678": {"problem_id": 1678, "answer": "from sys import stdin, stdout\nfrom collections import defaultdict, deque\ninput = stdin.readline\ndef f():\n    return list(map(int, input().split()))\ndef g():\n    return list(map(int, input().split()))\ndef l():\n    return list(map(int, input().split()))\ndef r():\n    return list(map(int, input().split()))\ndef s():\n    return input()\ndef u():\n    return input()\ndef v():\n    return [int(x) for x in input().split()]\n\nn, t = l()\na = defaultdict(list)\nfor i in range(n):\n    a[i].append(i)\n\nfor i in range(t):\n    a[i] = a[i] + a[i-1]\n\nprint(sum(a))"}, "1679": {"problem_id": 1679, "answer": "n = int(input())\ns = input()\nnum = 0\nfor i in range(n):\n    if s[i] == '0':\n        num += 1\nprint(num)\n"}, "1680": {"problem_id": 1680, "answer": "n, k = map(int, input().split())\nd = [[0 for i in range(n)] for i in range(n)]\nfor i in range(n):\n    d[i][0] = 1\nfor i in range(1, n):\n    for j in range(i + 1, n):\n        if d[i][j]!= 0:\n            d[i][j] = 1\n            break\nprint(d[n][k] + d[n - k][k])"}, "1681": {"problem_id": 1681, "answer": "import sys\nread = sys.stdin.read\n\nn = int(read())\n\nfor i in range(n):\n    s = read().split()\n    s = list(s)\n    print(int(s[0]))\n"}, "1682": {"problem_id": 1682, "answer": "n, k = list(map(int, input().split()))\na = [0] * (n + 1)\nb = [0] * (n + 1)\nfor i in range(1, n + 1):\n    a[i] += a[i - 1]\n    b[i] += b[i - 1]\nprint(min(a, b))\n"}, "1683": {"problem_id": 1683, "answer": "n = int(input())\na = [int(i) for i in input().split()]\n\nMOD = 998244353\n\ndef f(a, b):\n    return a[b] % MOD\n\nfor i in range(n):\n    a.append(f(a[-1], i))\n\nprint(MOD)"}, "1684": {"problem_id": 1684, "answer": "import math\ndef main():\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print('Yes')\n    for i in range(n):\n        a[i] *= math.gcd(a[i], b[i])\n    print('\\n'.join(map(str, a)))\n\nmain()"}, "1685": {"problem_id": 1685, "answer": "import sys\ninput = sys.stdin.readline\n\nn, q = list(map(int, input().split()))\n\ndef dfs(root, l, r, visited, visited[root]) :\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited[root] = 1\n    visited["}, "1686": {"problem_id": 1686, "answer": "n, k = map(int, input().split())\nl = list(map(int, input().split()))\nl.sort()\nfor i in range(n):\n    print(l[i], end=' ')\nprint(-1)"}, "1687": {"problem_id": 1687, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a[0] % 1000000007)"}, "1688": {"problem_id": 1688, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = [0]*n\nfor i in range(n):\n    if a[i]<c[i]:\n        c[i] = c[i] + 1\n    else:\n        c[i] = c[i] + 1\nprint(c[n-1])"}, "1689": {"problem_id": 1689, "answer": "n = int(input())\nfor i in range(n):\n    x, y = input().split()\n    x = int(x)\n    y = int(y)\n    if x == y:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "1690": {"problem_id": 1690, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a.append(a[i] + a[i-1])\n\nprint(max(a))"}, "1691": {"problem_id": 1691, "answer": "from collections import defaultdict, deque\nn, k = map(int, input().split())\ngcd = defaultdict(set)\nfor _ in range(n):\n    gcd[k] = 1\n    for i in range(k):\n        gcd[i] += gcd[k-i]\n    print(gcd[k])"}, "1692": {"problem_id": 1692, "answer": "s = input()\nn = len(s)\nif s[0] == '0':\n    print(1)\nelse:\n    for i in range(1, n):\n        if s[i] == '0':\n            print(i+1)\n        else:\n            print(i+1)\n"}, "1693": {"problem_id": 1693, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\nm = int(stdin.readline())\na = [0]*n\nfor i in range(n):\n    m = int(stdin.readline())\n    a[i] = m\nprint(a[n-1])"}, "1694": {"problem_id": 1694, "answer": "n, m, s, f = list(map(int, input().split()))\nt, l, r = 0, 0, 0\nfor i in range(m):\n    t += int(input())\n    l += t\n    r += t\nprint(('Xenia' * (n - 1) +''.join(map(str, l))))\n"}, "1695": {"problem_id": 1695, "answer": "n, m = list(map(int, input().split()))\ns = input()\na = [0] * (n + 1)\nfor i in range(m):\n    a[i] += s[i]\nprint(max(a))\n"}, "1696": {"problem_id": 1696, "answer": "def main():\n    n, m, k = list(map(int, input().split()))\n    center = [0] * (n + 1)\n    for i in range(k + 1):\n        center[i] = center[i - 1] + 1\n    dp = [float('inf')] * (n + 1)\n    dp[0] = 0\n    for i in range(1, n + 1):\n        for j in range(i):\n            if j - i + 1 < n:\n                dp[i] = min(dp[i], dp[j] + 1)\n            else:\n                dp[i] = min(dp[i], dp[j] + 1)\n    print(dp[n])\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1697": {"problem_id": 1697, "answer": "n, m = list(map(int, input().split()))\ns = input()\nc = 0\nfor i in range(n):\n    if s[i] == 'A':\n        c += 1\n    else:\n        c = 0\n        break\nprint('Yes')\nprint('No')\n"}, "1698": {"problem_id": 1698, "answer": "from collections import deque\n\nn, k = list(map(int, input().split()))\nf = [0] * (n + 1)\nfor i in range(n):\n    f[i] = f[i] + (i + 1) * (i + 1)\n\ndef dfs(i):\n    if i == 0:\n        return 0\n    else:\n        if f[i] == 0:\n            return 1\n        else:\n            return dfs(i + 1)\n\nprint(n)\nprint(k)\n"}, "1699": {"problem_id": 1699, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    print(list(map(int, input().split())))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1700": {"problem_id": 1700, "answer": "def main():\n    n = int(input())\n    s = input()\n    r = []\n    for i in range(n):\n        if s[i] == '(':\n            r.append('0')\n        elif s[i] == ')':\n            r.append('1')\n        else:\n            r.append('0')\n            \n    #print(r)\n    #print(r.pop())\n    #print(r.pop())\n    \n    #print(s)\n    #print(s.pop())\n    \n    #print(s.pop())\n    \n    #print(s.pop())\n    \n    #print(s.pop())\n    \n    \n    \nmain()\n"}, "1701": {"problem_id": 1701, "answer": "n, m = list(map(int, input().split()))\n\ndef main():\n    n, m = list(map(int, input().split()))\n    s = input()\n    for i in range(n):\n        s = s.replace(' ', '')\n        print(s[:i])\n        \n    return\n\nmain()\n"}, "1702": {"problem_id": 1702, "answer": ""}, "1703": {"problem_id": 1703, "answer": "n = int(input())\ns = list(map(str,input().split()))\nfor i in range(n):\n    s.append(input())\nprint(len(s))"}, "1704": {"problem_id": 1704, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip()\n\ndef DFS(s):\n    if s == \"0\":\n        return 0\n    elif s == \"1\":\n        return 1\n    else:\n        return max(map(int, s.split()))\n\nans = 0\nfor i in range(n):\n    if s[i] == \"1\":\n        ans += DFS(s[i:])\n    else:\n        ans += DFS(s[i:])\nprint(ans)\n"}, "1705": {"problem_id": 1705, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    if a[i] == 0:\n        l.append(i)\n    else:\n        l.append(i-1)\nprint(len(l))"}, "1706": {"problem_id": 1706, "answer": "s = input()\nn = len(s)\nl = 0\nr = 0\nfor i in range(n-1):\n    if s[i] == s[i+1]:\n        l += 1\n    else:\n        r += 1\nprint(l,r)"}, "1707": {"problem_id": 1707, "answer": "n = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    x,y = l[i]\n    if x==y:\n        ans += 1\n    elif x!=y:\n        ans += 1\nprint(ans)"}, "1708": {"problem_id": 1708, "answer": ""}, "1709": {"problem_id": 1709, "answer": "n, m, k = list(map(int, input().split()))\nc = [int(x) for x in input().split()]\n\ndef color(x):\n    return min(c[x] if x else 0)\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef bfs(n, l, bfs):\n    if n == m:\n        return -1\n    elif n == 0:\n        return bfs\n    else:\n        return gcd(l, bfs(n - 1, n - 1))\n\ndef __starting_point():\n    n, m, k = list(map(int, input().split()))\n    c = [int(x) for x in input().split()]\n    g = [0] * (n + 1)\n    for i in range(n):\n        g[i] = c[i]\n        c[i] = 0\n    print(g.count(0))\n\n\n__starting_point()"}, "1710": {"problem_id": 1710, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ns = 0\nfor i in range(int(input())):\n    a,b = map(int,input().split())\n    s += a\n    b -= b\n    if b == 0:\n        print(1)\n    else:\n        print(2)\n"}, "1711": {"problem_id": 1711, "answer": "from sys import stdin,stdout\nn,m=map(int,stdin.readline().split())\na=list(map(int,stdin.readline().split()))\nans=0\nfor i in range(n):\n    if a[i]>a[i+1]:\n        ans+=1\n    else:\n        ans+=a[i]\nprint(ans)"}, "1712": {"problem_id": 1712, "answer": "def main():\n    n,x,y = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    hit = 0\n    for i in range(n):\n        hit += a[i] * (x - y)\n        hit -= a[i] * (y - x)\n    print('Both', hit)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1713": {"problem_id": 1713, "answer": "n,s,t = list(map(int,input().split()))\np = list(map(int,input().split()))\n\nans = 0\nfor i in range(n):\n    if p[i] == t:\n        ans += 1\n        p[i] = t\n    else:\n        ans += 1\nprint(ans)\n"}, "1714": {"problem_id": 1714, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(n):\n    if a[i] == 0:\n        a[i] = 1\n    else:\n        a[i] = a[i - 1] + 1\n\nprint(' '.join(map(str, a)))\n"}, "1715": {"problem_id": 1715, "answer": "from bisect import bisect_left as bl\nfrom heapq import heapify, heappush, heappop\nfrom functools import reduce,cmp_to_key\nfrom operator import itemgetter_specificata as pq\nfrom collections import deque,defaultdict\nfrom itertools import combinations as comb,permutations as permutations\nfrom queue import deque,PriorityQueue\nfrom time import perf_counter\nfrom fractions import Fraction\nfrom operator import itemgetter\nfrom random import shuffle,randint,decimal\nfrom types import GeneratorType,str\nfrom typing import ListDict,deque,bisect,OrderedDict,fractions,heapq,int\nimport decimal\nimport re\nimport numpy as np\nimport sys\nimport math\nimport heapq\nimport itertools\nimport bisect\nimport copy\nsetx = lambda x:set(x)\nsety = lambda x:x[0]\n\nINF = 10**9+7\nMOD = 10**9+7\n\ndef main():\n    input = sys.stdin.readline\n    sys.setrecursionlimit(20000)\n    d = dict()\n    for _ in range(int(input())):\n        input = input().strip()\n        d[input] = list(map(int,input().split()))\n    print(*d)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1716": {"problem_id": 1716, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\n\nQ = int(input())\n\nfor _ in range(Q):\n    l, r = map(int, input().split())\n    if l < r:\n        print(l, end=\" \")\n    elif r < l:\n        print(r, end=\" \")\n    else:\n        print(l, end=\" \")\n        \n        \n"}, "1717": {"problem_id": 1717, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef main():\n    n = int(input())\n    d = {}\n    for i in range(n):\n        d[i] = int(i % 10)\n    print(str(d.get(0, 0)) + '\\n')\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1718": {"problem_id": 1718, "answer": "from collections import deque\nN,K = list(map(int,input().split()))\nA = list(map(int,input().split()))\nG = [None]*N\nfor i in range(N):\n    G[i] = A[i]\n#print(G)\ncnt = 0\nfor i in range(N):\n    if cnt == 0:\n        cnt += 1\n    elif cnt == N-1:\n        cnt -= 1\n    else:\n        cnt += 1\nprint(cnt)\n"}, "1719": {"problem_id": 1719, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    s = list(map(int, input().split()))\n    mod = 10**9+7\n    for i in range(n):\n        s[i] = ''.join(sorted(s, key=lambda x: x[1]))\n    print(s.count('A'))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1720": {"problem_id": 1720, "answer": "n, m, k = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    x, y, xi, yi = list(map(int, input().split()))\n    if xi == yi:\n        cnt += 1\n    elif xi == 0:\n        cnt += 1\n    else:\n        cnt += (n - i) // m\nprint(cnt)\n\n"}, "1721": {"problem_id": 1721, "answer": "n = int(input())\ns = input()\nif s[0] == 'a' or s[-1] == 'a':\n    print(1)\nelse:\n    print(0)"}, "1722": {"problem_id": 1722, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(l[n-1] + \" is in classroom \" + l[n-2])"}, "1723": {"problem_id": 1723, "answer": "n = int(input())\ndef main():\n    n = 2\n    tree = []\n    for i in range(n):\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n        tree.append([])\n"}, "1724": {"problem_id": 1724, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*(n+1)\nfor i in range(n):\n    b[i] = a[i]\n\nmax = 0\nfor i in range(n-1, -1, -1):\n    if b[i] == 0:\n        max = max + a[i]\nprint(max)"}, "1725": {"problem_id": 1725, "answer": "n, m, d = list(map(int, input().split()))\nmatrix = [[0] * n for _ in range(m)]\nfor i in range(n):\n    matrix[i][i] = 1\nfor i in range(m):\n    matrix[i][i] = matrix[i - 1][i] + matrix[i - 1][i - 1]\n\nans = 0\nfor i in range(n):\n    ans += min(matrix[i][i] - matrix[i][i - matrix[i - 1][i]], matrix[i - 1][i] - matrix[i - 1][i - matrix[i - 1][i]])\nprint(ans)\n"}, "1726": {"problem_id": 1726, "answer": "n, t = list(map(int, input().split()))\na = list(map(int, input().split()))\nprint(min(a[0], a[1]))\n"}, "1727": {"problem_id": 1727, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\nl = list(map(int,stdin.readline().split()))\nprint(n)"}, "1728": {"problem_id": 1728, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\np = list(map(int, input().split()))\nc = list(map(int, input().split()))\nedges = []\nfor i in range(n):\n    v = list(map(int, input().split()))\n    edges.append(v)\n    if len(edges) == 0:\n        continue\n    for j in edges:\n        if j not in c:\n            c[j] = 0\n            continue\n        if c[j] == 0:\n            c[j] = 1\n            continue\n        if c[j] == 1:\n            c[j] = 2\n            continue\n        if c[j] == 3:\n            c[j] = 3\n            continue\n        if c[j] == 4:\n            c[j] = 4\n            continue\n        if c[j] == 5:\n            c[j] = 5\n            continue\n        if c[j] == 6:\n            c[j] = 6\n            continue\n        if c[j] == 7:\n            c[j] = 7\n            continue\n        if c[j] == 8:\n            c[j] = 8\n            continue\n        if c[j] == 9:\n            c[j] = 9\n            continue\n        if c[j] == 10:\n            c[j] = 10\n            continue\n        if c[j] == 11:\n            c[j] = 11\n            continue\n        if c[j] == 12:\n            c[j] = 12\n            continue\n        if c[j] == 13:\n            c[j] = 13\n            continue\n        if c[j] == 14:\n            c[j] = 14\n            continue\n        if c[j] == 15:\n            c[j] = 15\n            continue\n        if c[j] == 16:\n            c[j] = 16\n            continue\n        if c[j] == 17:\n            c[j] = 17\n            continue\n        if c[j] == 18:\n            c[j] = 18\n            continue\n        if"}, "1729": {"problem_id": 1729, "answer": "n, q = list(map(int, input().split()))\ns = list(map(str, input().split()))\nd = dict()\nfor i in range(n):\n    if s[i] == '0':\n        d[s[i]] += 1\n    else:\n        d[s[i]].append(i)\nprint('\\n'.join(d.items()))\n"}, "1730": {"problem_id": 1730, "answer": "n, m, k = list(map(int, input().split()))\nedges = set()\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    edges.add((a, b))\n\nd = {}\nfor i in range(n):\n    d[i] = 1\n\nk = k + 1\nans = 0\nfor i in range(m):\n    if d[i] == 0:\n        ans += 1\n        d[i] = 1\n    elif d[i] == 1:\n        ans += 1\n        d[i] = 2\n    else:\n        ans += 1\n        d[i] = 2\n\nprint(ans)\n"}, "1731": {"problem_id": 1731, "answer": "n, m = list(map(int, input().split()))\na = [0]*n\nb = [0]*n\nfor i in range(1, n):\n    if a[i] > b[i]:\n        a[i] = b[i]\n    else:\n        b[i] = a[i]\nprint(sum(a))\n"}, "1732": {"problem_id": 1732, "answer": "import math\nn = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n    s += math.ceil(i/2)\nprint(s)"}, "1733": {"problem_id": 1733, "answer": "from collections import deque\nn, x, y = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(sum(a) + sum(b) + sum(a) + sum(b) + a) + b)"}, "1734": {"problem_id": 1734, "answer": "n = int(input())\nfor i in range(n):\n    s = list(map(int, input().split()))\n    print(s[0], s[1:])\n"}, "1735": {"problem_id": 1735, "answer": "s = input()\nif s[0] == 'a' or s[-1] == 'a':\n    print('Yes')\nelse:\n    print('No')"}, "1736": {"problem_id": 1736, "answer": "n, t = list(map(int, input().split()))\na = list(map(int, input().split()))\nprint(max(a) + max(a[0]) + max(a[-1]))\n"}, "1737": {"problem_id": 1737, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nl = list(map(int,input().split()))\n\ndef solve(s):\n    d = {}\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = []\n        else:\n            d[s[i]].append(i)\n            d[s[i]].append(i)\n            \n    ans = []\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = []\n        else:\n            d[s[i]].append(i)\n            d[s[i]].append(i)\n            \n        ans.append(d[s[i]].pop())\n        \n    print(*ans)\n    return\n\nsolve(0)\nprint(len(solve(0)))\nprint(len(solve(0)))\nprint(len(solve(0)))\n"}, "1738": {"problem_id": 1738, "answer": "s = input()\ns = list(s)\nfor i in range(len(s)):\n    if s[i] == s[i-1]:\n        s[i] = s[i-1] + s[i-2] + s[i-3] + s[i-4] + s[i-5] + s[i-6] + s[i-7] + s[i-8] + s[i-9] + s[i-10] + s[i-11] + s[i-12] + s[i-13] + s[i-14] + s[i-15] + s[i-16] + s[i-17] + s[i-18] + s[i-19] + s[i-20] + s[i-21] + s[i-22] + s[i-23] + s[i-24] + s[i-25] + s[i-26] + s[i-27] + s[i-28] + s[i-29] + s[i-30] + s[i-31] + s[i-32] + s[i-33] + s[i-34] + s[i-35] + s[i-36] + s[i-37] + s[i-38] + s[i-39] + s[i-40] + s[i-41] + s[i-42] + s[i-43] + s[i-44] + s[i-45] + s[i-46] + s[i-47] + s[i-48] + s[i-49] + s[i-50] + s[i-51] + s[i-52] + s[i-53] + s[i-54] + s[i-55] + s[i-56] + s[i-57] + s[i-58] + s[i-59] + s[i-60] + s[i-61] + s[i-62] + s[i-63] + s[i-64] + s[i-65] + s[i-66] + s[i-67] + s[i-68] + s[i-69] + s[i-70] + s[i-71] + s[i-72] + s[i-73] + s[i-74] + s[i-75] + s[i-76] + s[i-77] + s[i-78] + s[i-79] + s[i-80] + s[i-81] + s[i-82] + s[i-83] + s[i-84] + s[i-85] + s[i-86] + s[i-87] + s[i-88] + s[i-89] + s[i-90] + s[i-91] + s[i-92] + s[i-93] + s[i-94] + s[i-95] + s[i-96] + s[i-97] + s[i-98] + s[i-99] + s[i-100] + s[i-101] + s[i-101] + s[i-102] + s[i-103] + s[i-103] + s[i-104] + s[i-105] + s[i-106] + s[i-107] + s[i-108] + s[i-109] + s[i-10] + s[i-10] + s[i-11] + s[i-11] + s[i-12] + s[i-13] + s[i-14] + s[i-15] + s[i-16] + s[i-17] + s[i-18] + s[i-19] + s[i-20] + s[i-21] + s[i-22] + s[i-23] + s[i-24] + s[i-25] + s[i-26] + s[i-27] + s[i-28] + s[i-29] + s[i-30] + s[i-31] + s[i-32] + s[i-33] + s[i-34] + s[i-35] +"}, "1739": {"problem_id": 1739, "answer": "n,x = map(int,input().split())\na = list(map(int,input().split()))\nm = 1000000007\nfor i in range(n):\n    m = max(a[i]*i,m)\nprint(m)"}, "1740": {"problem_id": 1740, "answer": "n = int(input())\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x == 1:\n        print(y)\n    elif y == 1:\n        print(x)\n    else:\n        print(x-1)\n"}, "1741": {"problem_id": 1741, "answer": "from sys import stdin,stdout\nn = int(stdin.readline().strip())\nl = list(map(int,stdin.readline().strip().split()))\na = [0]*n\nfor i in range(n):\n    x,y = l[i]\n    a[x] = y\n    a[y] = x\nprint(a[0])"}, "1742": {"problem_id": 1742, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn, m = list(map(int, input().split()))\np = [0] * (m + 1)\nfor i in range(1, n + 1):\n    p[i] = p[i - 1] + 1\nans = 0\nfor i in range(1, m + 1):\n    if p[i] > ans:\n        ans = p[i]\nprint(ans)\n"}, "1743": {"problem_id": 1743, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        ans += 1\n    else:\n        ans += (c[i] - c[b[i]])\nprint(ans)\n"}, "1744": {"problem_id": 1744, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nt = [0] * m\nfor i in range(n):\n    t[i] = t[i] + 1\n\nans = 0\nfor i in range(m):\n    ans += t[i]\n    if ans < m:\n        ans = i\n        break\nprint(ans)\n"}, "1745": {"problem_id": 1745, "answer": ""}, "1746": {"problem_id": 1746, "answer": "import math\nn = int(input())\nfor i in range(n - 1):\n    p = list(map(int, input().split()))\n    if p[0] == 1:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"}, "1747": {"problem_id": 1747, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nif k > 0:\n    print(0, end=' ')\nelse:\n    print(1, end=' ')\n    for i in range(k-1):\n        print(a[i], end=' ')\n    print()"}, "1748": {"problem_id": 1748, "answer": "n = int(input())\nV = list(map(int, input().split()))\n\nd = [-1] * n\nfor i in range(n):\n    d[i] = min(V[i] - V[i-1], 0)\n\nprint(' '.join(map(str, d[1:])))\n"}, "1749": {"problem_id": 1749, "answer": "n, l, r = map(int, input().split())\npositions = list(map(int, input().split()))\n\nfor i in range(n):\n    if l == r:\n        print(\"LIE\")\n    else:\n        l -= 1\n        r -= 1\n\nif len(positions) == 0:\n    print(\"TRUTH\")\nelse:\n    print(\"LIE\")"}, "1750": {"problem_id": 1750, "answer": "n = int(input())\nx, y = map(int, input().split())\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x == y:\n        print(1)\n    elif x % 2 == 0:\n        print(2)\n    else:\n        print(3)\n"}, "1751": {"problem_id": 1751, "answer": "from collections import defaultdict as d\nn = int(input())\ngraph = [[] for _ in range(n)]\nfor i in range(n):\n    graph[i].append(i)\n\ndef dfs(i):\n    if i not in graph[i]:\n        return\n    m = 10**9+7\n    for j in graph[i]:\n        if j not in graph[i]:\n            m = max(m, dfs(j))\n    graph[i].append(j)\n\ndfs(0)\nprint(0)"}, "1752": {"problem_id": 1752, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    l.append(a[i] - a[i-1])\nl.sort(reverse=True)\nprint(*l)"}, "1753": {"problem_id": 1753, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m = list(map(int, input().split()))\np = [0] * (m + 1)\nfor i in range(1, m + 1):\n    x, y = list(map(int, input().split()))\n    p[x] += y\n    p[y] += x\nprint('\\n'.join(map(str, p)))"}, "1754": {"problem_id": 1754, "answer": "def main():\n    n, m, k = list(map(int, input().split(' ')))\n    p = list(map(int, input().split(' ')))\n    s = list(map(int, input().split(' ')))\n    for i in range(n):\n        p[i] = s[i]\n        s.append(p[i])\n    print(len(s))\n    for i in range(n):\n        if s[i] in p:\n            print(i)\n            continue\n        print(len(s))\n        k = 0\n        for j in range(i, n):\n            if s[j] in p:\n                k += 1\n                break\n        print(k)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1755": {"problem_id": 1755, "answer": "from math import ceil,log\nn,k = map(int,input().split())\na = list(map(int,input().split()))\nl = []\nfor i in range(n):\n    l.append(a[i]-1)\nl.sort()\nans = -1\nfor i in range(k):\n    if l[i][0] == 1:\n        ans = min(ans,l[i][1])\nprint(ans)"}, "1756": {"problem_id": 1756, "answer": "from bisect import bisect_left as bl\nn, x = map(int, input().split())\nd = [int(i) for i in input().split()]\nbl = {i:bl.get(i) for i in d}\nbl.update({i:1})\nbl.update({i:d[i-1]})\nprint(bl.most_common(1))"}, "1757": {"problem_id": 1757, "answer": "def __starting_point():\n    n = int(input())\n    name = list(map(int, input().split()))\n    print(name[0])\n\n__starting_point()"}, "1758": {"problem_id": 1758, "answer": "from bisect import bisect_left as bl\nn = int(input())\ns = input()\nt = input()\nl = len(s)\nk = 0\nfor i in range(k):\n\tif s[i] == '0':\n\t\tl -= 1\n\telse:\n\t\tl -= 1\n\t\tk += 1\nprint(l)"}, "1759": {"problem_id": 1759, "answer": "from math import ceil, log2\n\ndef is_possible(s, n, d):\n    if s[0] == '1':\n        return True\n    elif s[0] == '0':\n        return False\n    else:\n        return ceil(log2(s[1])) % 1000000007\n\n\ndef __starting_point():\n    m, n = list(map(int, input().split()))\n    print(is_possible(5, n, 1))\n\n__starting_point()"}, "1760": {"problem_id": 1760, "answer": "n = int(input())\ns = input()\nl = list(s)\nfor i in range(n):\n    if l[i] == 'U':\n        l[i] = 'D'\n    else:\n        l[i] = 'U'\nprint(l[n-1])"}, "1761": {"problem_id": 1761, "answer": "n = int(input())\nfor i in range(n):\n    print('yes' if i.count('3') > 1 else 'no')"}, "1762": {"problem_id": 1762, "answer": "n, k = map(int, input().split())\nl = list(map(int, input().split()))\nfor i in range(n):\n    s = input()\n    l.append(s)\nprint(len(l))"}, "1763": {"problem_id": 1763, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nn, a, R, M = map(int, input().split())\nh = [0] + list(map(int, input().split()))\nfor i in range(n):\n    h[i] = h[i] + a\n\ncost = 0\nc = 0\nfor i in range(n):\n    if h[i] == 0:\n        c += min(M, R)\n        break\n    elif h[i] == R:\n        c += min(M, M)\n        break\n    else:\n        cost += min(M, R)\nprint(cost)"}, "1764": {"problem_id": 1764, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nt = 0\nfor i in range(n):\n    if a[i] == 1:\n        s += 1\n    elif a[i] == 2:\n        t += 1\n    else:\n        s += 1\nprint(s, t)\n"}, "1765": {"problem_id": 1765, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(b[0] + b[1] +... + b[k - 1])\n\n# a.sort()\n# b.sort()\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 0:\n        ans += 1\n    else:\n        ans += i\nprint(ans)\n"}, "1766": {"problem_id": 1766, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] == 1:\n        s += 1\nprint(s)"}, "1767": {"problem_id": 1767, "answer": "def main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    r = list(map(int, input().split()))\n    \n    for i in range(n):\n        l[i] = 0\n        r[i] = 0\n    \n    for i in range(n):\n        print(l[i], end=' ')\n        \ndef __starting_point():\n    main()\n__starting_point()"}, "1768": {"problem_id": 1768, "answer": "n = int(input())\nprint(n)\nfor i in range(n):\n    s = input()\n    k = 0\n    for j in range(n):\n        if s[j] == 'o':\n            k += 1\n        else:\n            k = 0\n            break\n    print(k)"}, "1769": {"problem_id": 1769, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    if s[0] == s[1]:\n        print(i, end = \" \")\n    else:\n        print(s[0], end = \" \")\n"}, "1770": {"problem_id": 1770, "answer": "for _ in range(int(input())):\n    n,x,y,d = map(int,input().split())\n    if x>y:\n        print(-1)\n    elif y>d:\n        print(d)\n    else:\n        print(n)"}, "1771": {"problem_id": 1771, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nn, l, w = list(map(int, input().split()))\n\nA = [list(map(int, input().split())) for i in range(n)]\n\ns = sum(A)\n\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    s -= x\n    s -= y\n    if A[i] == -1:\n        continue\n    A[i] += 1\n    print(s)\n"}, "1772": {"problem_id": 1772, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a) + 1)\n"}, "1773": {"problem_id": 1773, "answer": "n = int(input())\nl = list(map(int, input().split()))\nx = 0\nfor i in range(n):\n    x = x + l[i]\nprint(x)"}, "1774": {"problem_id": 1774, "answer": "s = input()\nfor i in range(1,len(s)):\n    if s[i] == 'H' or s[i] == 'Q' or s[i] == 'L':\n        print('Yes')\n    else:\n        print('No')"}, "1775": {"problem_id": 1775, "answer": "import sys\n\nn, m, k = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[i] = sys.stdin.readline().strip()\n    m = int(m)\n    if m in d:\n        d[m].append(i)\n    else:\n        d[m] = [i]\n\n# d = {}\n# d[0] = 0\n# d[1] = 0\n# d[2] = 0\n# d[3] = 0\n# d[4] = 0\n# d[5] = 0\n# d[6] = 0\n# d[7] = 0\n# d[8] = 0\n# d[9] = 0\n# d[10] = 0\n# d[11] = 0\n# d[12] = 0\n# d[13] = 0\n# d[14] = 0\n# d[15] = 0\n# d[16] = 0\n# d[17] = 0\n# d[18] = 0\n# d[19] = 0\n# d[20] = 0\n# d[21] = 0\n# d[22] = 0\n# d[23] = 0\n# d[24] = 0\n# d[25] = 0\n# d[26] = 0\n# d[27] = 0\n# d[28] = 0\n# d[29] = 0\n# d[30] = 0\n# d[31] = 0\n# d[32] = 0\n# d[33] = 0\n# d[34] = 0\n# d[35] = 0\n# d[36] = 0\n# d[37] = 0\n# d[38] = 0\n# d[39] = 0\n# d[40] = 0\n# d[41] = 0\n# d[42] = 0\n# d[43] = 0\n# d[44] = 0\n# d[45] = 0\n# d[46] = 0\n# d[47] = 0\n# d[48] = 0\n# d[49] = 0\n# d[50] = 0\n# d[51] = 0\n# d[52] = 0\n# d[53] = 0\n# d[54] = 0\n# d[55] = 0\n# d[56] = 0\n# d[57] = 0\n# d[58] = 0\n# d[59] = 0\n# d[60] = 0\n# d[61] = 0\n# d[62] = 0\n# d[63] = 0\n# d[64] = 0\n# d[66] = 0\n# d[67] = 0\n# d[68] = 0\n# d[69] = 0\n# d[70] = 0\n# d[71] = 0\n# d[72] = 0\n# d[73] = 0\n# d[74] = 0\n# d[75] = 0\n# d[76] = 0\n# d[77] = 0\n# d[78] = 0\n# d[78] = 0\n# d[79] = 0\n# d[80] = 0\n# d[81] = 0\n# d[81] = 0\n# d[82] = 0\n# d[83] = 0\n# d[84] = 0\n# d[85] = 0\n# d[86] = 0\n# d[87] = 0\n# d[88] = 0\n# d[88] = 0\n# d[89] = 0\n# d[90] = 0\n# d[91] = 0\n# d[91] = 0\n# d[92] = 0\n# d[93] = 0\n# d[94] = 0\n# d[95] = 0\n# d[96] = 0\n# d[97] = 0\n# d[98] = 0\n# d[99] = 0\n# d[100] = 0\n# d[101] = 0\n# d[101] = 0\n# d[102] = 0\n# d[103] = 0\n# d[103] = 0\n# d[104] = 0\n# d[105] = 0\n# d[106] = 0\n# d[107] = 0\n# d[108"}, "1776": {"problem_id": 1776, "answer": "from itertools import combinations\n\ndef is_prime(n):\n    if n < 3:\n        return False\n    elif n % 2 == 0:\n        return True\n    else:\n        return False\n\n\ndef __starting_point():\n    print(is_prime(1))\n    print(is_prime(2))\n\n__starting_point()"}, "1777": {"problem_id": 1777, "answer": "from sys import stdin, stdout\nn = int(stdin.readline())\ns = list(map(int, stdin.readline().split()))\ns.sort()\nans = 0\nfor i in range(n):\n    if s[i] == '(':\n        ans += 1\nprint(ans)\n"}, "1778": {"problem_id": 1778, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef calc(l, r):\n    if l == r:\n        return 0\n    elif l == 0:\n        return 1\n    else:\n        return 2*(r-l)\n\nd = {}\nfor i in range(n):\n    d[i] = calc(a[i], b[i])\n\nprint(d.get(0, 0))"}, "1779": {"problem_id": 1779, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ns = list(input())\nfor _ in range(s):\n    s.append(input())\nprint(''.join(s))"}, "1780": {"problem_id": 1780, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\na = [-1] * (n + 1)\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n    a[l] += 1\n    a[r] -= 1\nprint(' '.join(map(str, a)))"}, "1781": {"problem_id": 1781, "answer": ""}, "1782": {"problem_id": 1782, "answer": "n, k = map(int, input().split())\ns = set(map(int, input().split()))\nfor i in range(k):\n    s.add(i)\nprint(' '.join(s))"}, "1783": {"problem_id": 1783, "answer": "import bisect\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = sum(a)\nl = bisect.bisect_left(a, k)\nprint(s/l)\n"}, "1784": {"problem_id": 1784, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef paint(p, color):\n    if p == color:\n        return \"NO\"\n    elif p == \"\":\n        return \"YES\"\n    else:\n        return \"NO\"\n\nprint(\"YES\")\nfor i in range(n):\n    for j in range(k):\n        if paint(p, a[i]):\n            print(\"NO\")\n            continue\n        else:\n            print(\"YES\")\n            break\n"}, "1785": {"problem_id": 1785, "answer": "n = int(input())\ns = input()\nt = input()\nmod = 10**9 + 7\nl = []\nfor i in range(n):\n    s = s.replace('C','').replace('T','').replace('A','').replace('C','').replace('A','').replace('G','').replace('C','').replace('G','').replace('T','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('G','').replace('C','').replace('A','').replace('G','').replace('G','').replace('C','').replace('A','').replace('G','').replace('G','').replace('C','').replace('A','').replace('G','').replace('G','').replace('C','').replace('A','').replace('G','').replace('G','').replace('C','').replace('A','').replace('G','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','').replace('C','').replace('A','').replace('G','')."}, "1786": {"problem_id": 1786, "answer": "from math import factorial as f\nn = int(input())\nw,h,n = list(map(int,input().split()))\ncuts = []\nfor i in range(n):\n    cut = w-cut*i\n    h = h-cut*i\n    if cut >= h:\n        cuts.append(cut)\ncuts.sort(key=lambda x:x[0])\ncuts.extend([0]*h)\ncuts.extend([0]*h)\nprint('\\n'.join(cuts))\n"}, "1787": {"problem_id": 1787, "answer": "s = input()\nn = len(s)\nm = 10**9 + 7\nans = 0\nfor i in range(n):\n    if s[i] == 'a':\n        ans += pow(2,i,m)\n    else:\n        ans += pow(2,i,m)\nprint(ans)"}, "1788": {"problem_id": 1788, "answer": "# cook your dish here\ndef solve():\n    a, b = map(int, input().split())\n    print(a + b)\n\nsolve()\n"}, "1789": {"problem_id": 1789, "answer": "from sys import stdin, stdout\nfrom math import ceil, floor, gcd, fabs, factorial, fmod, sqrt, inf, log, accel, log2, cos, sin\nfrom heapq import merge, heapify, heappop, heappush, nsmallest, nlargest, nsmallest, ncompute, dsu, cdsu, dsu2, cdsu2a, cdsu2b\nfrom collections import defaultdict as dd, deque, itertools as target\nfrom bisect import bisect, bisect_left, bisect_right, insort, pop, scan, make_bisect\nfrom heapq import atMost, heappush, heappush2, heappushll, heappop, nsmallest, nlargest, nsmallest2, ncompute, dsu, cdsu2, cdsu2a, cdsu2b\nfrom functools import lru_cache\nfrom fractions import Fraction as f\nfrom decimal import ROUND_HALF_UP, ROUND_HALF_DOWN as ROUND_HALF_UP, LIMIT = 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7, 10**9+7]\nn = int(input())\ndd = dd(int)\nfor _ in range(n):\n    x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(min(a, b))"}, "1790": {"problem_id": 1790, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nm = list(map(int, readline().split()))\n\nfor i in range(n):\n    m.append(int(readline()[i]))\n\n#print(m)\n\ns = 0\nfor i in range(n):\n    s += m[i]\n\nprint('\\n'.join(map(str, m)))"}, "1791": {"problem_id": 1791, "answer": ""}, "1792": {"problem_id": 1792, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nE = [[] for _ in range(n)]\nfor i in range(m):\n    u, v = list(map(int, input().split()))\n    E[u].append(v)\n    E[v].append(u)\n\ndummy = [[0] * n for _ in range(n)]\nbase = [[0] * n for _ in range(n)]\nfor i in range(n):\n    if len(E[i][0]) == 0:\n        dummy[i][0] = 0\n        break\n    elif len(E[i][0]) == 1:\n        dummy[i][0] = min(dummy[i][0], E[i][0][1] + 1)\n        break\n\ncost = 0\nbase_saved = False\nfor i in range(n):\n    if len(E[i][0]) == 0:\n        base[i][0] = 0\n        break\n    elif len(E[i][0]) == 1:\n        base[i][0] = min(base[i][0], E[i][0][1] + 1)\n        break\n\ncost += base[n][0]\nbase_saved = True\nfor i in range(n):\n    if len(E[i][0]) == 0:\n        base[i][0] = 0\n        break\n    elif len(E[i][0]) == 1:\n        base[i][0] = min(base[i][0], E[i][0][1] + 1)\n        break\n\ncost += base[n][1]\nbase_saved = True\nfor i in range(n):\n    if len(E[i][0]) == 0:\n        base[i][0] = 0\n        break\n    elif len(E[i][0]) == 1:\n        base[i][0] = min(base[i][0], E[i][0][1] + 1)\n        break\n\ncost += base[n][2]\nbase_saved = True\nfor i in range(n):\n    if len(E[i][0]) == 0:\n        base[i][0] = 0\n        break\n    elif len(E[i][0]) == 1:\n        base[i][0] = min(base[i][0], E[i][0][1] + 1)\n        break\n\ncost += base[n][3]\nbase_saved = True\nfor i in range(n):\n    if len(E[i][0]) == 0:\n        base[i][0] = 0\n        break\n    elif len(E[i][0]) == 1:\n        base[i][0] = min(base[i][0], E[i][0][1] + 1)\n        break\n\ncost += base[n][4]\nbase_saved = True\nfor i in range(n):\n    if len(E[i][0]) == 0:\n        base[i][0] = 0\n        break\n    elif len(E[i][0]) == 1:\n        base[i][0] = min(base[i][0], E[i][0][1] + 1)\n        break\n\ncost += base[n][5]\nbase_saved = True\nfor i in range(n):\n    if len(E[i][0]) =="}, "1793": {"problem_id": 1793, "answer": "import sys\ninput = sys.stdin.readline\n\nn, L, S = list(map(int, input().split()))\nvertices = list(map(int, input().split()))\n\n# \u5de8\u6728\u306e\u30ce\u30fc\u30c9\u3092\u4f7f\u308f\u306a\u308f\u308c\u3066\u3044\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\ndef dfs(n, l, s):\n    if l == s:\n        return 0\n    elif l == 0:\n        return 1\n    else:\n        for i in range(n - 1):\n            if i == s:\n                return 1\n            else:\n                break\n        return -1\n\ndef __starting_point():\n    n, l, s = list(map(int, input().split()))\n    vertices = list(map(int, input().split()))\n    q = deque()\n    q.append((1, 0))\n    q.append((1, 1))\n    q.append((1, 2))\n    q.append((1, 3))\n    q.append((1, 4))\n    q.append((1, 5))\n    q.append((1, 6))\n    q.append((1, 7))\n    q.append((1, 8))\n    q.append((1, 9))\n    q.append((1, 10))\n    q.append((1, 11))\n    q.append((1, 12))\n    q.append((1, 13))\n    q.append((1, 14))\n    q.append((1, 15))\n    q.append((1, 16))\n    q.append((1, 17))\n    q.append((1, 18))\n    q.append((1, 19))\n    q.append((1, 20))\n    q.append((1, 21))\n    q.append((1, 22))\n    q.append((1, 23))\n    q.append((1, 24))\n    q.append((1, 25))\n    q.append((1, 26))\n    q.append((1, 27))\n    q.append((1, 28))\n    q.append((1, 29))\n    q.append((1, 30))\n    q.append((1, 31))\n    q.append((1, 32))\n    q.append((1, 32))\n    q.append((1, 33))\n    q.append((1, 33))\n    q.append((1, 34))\n    q.append((1, 34))\n    q.append((1, 35))\n    q.append((1, 35))\n    q.append((1, 36))\n    q.append((1, 37))\n    q.append((1, 37))\n    q.append((1, 38))\n    q.append((1, 39))\n    q.append((1, 39))\n    q.append((1, 40))\n    q.append((1, 41))\n    q.append((1, 41))\n    q.append((1, 42))\n    q.append((1, 43))\n    q.append((1, 44))\n    q.append((1, 44))\n    q.append((1, 45))\n    q.append((1, 45))\n    q.append((1, 46))\n    q.append((1, 47))\n    q.append((1, 47))\n    q.append((1, 48))\n    q.append((1, 49))\n    q.append((1, 49))\n    q.append((1, 500))"}, "1794": {"problem_id": 1794, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] > a[i - 1]:\n        s += 1\nprint(s)"}, "1795": {"problem_id": 1795, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint('YES' if l[0]==l[1] else 'NO')"}, "1796": {"problem_id": 1796, "answer": "n = int(input())\nfor i in range(n):\n    x = input()\n    if x.count('X') == 0:\n        print(x)\n    else:\n        print(x.count('X') + 1)"}, "1797": {"problem_id": 1797, "answer": "n = int(input())\np = list(map(int, input().split()))\n\ndef max_so_far(x, y):\n    return abs(x - y) // 2\n\n# print(max_so_far(0, n))\n\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x == y:\n        print(max_so_far(i, n - 1) + 1)\n    elif x % 2 == y % 2:\n        print(max_so_far(i, n - 1) + 1)\n    else:\n        print(max_so_far(i, n - 1) + 1)\n"}, "1798": {"problem_id": 1798, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    x = a[i]\n    if x not in l:\n        l.append(x)\n    else:\n        l.append(x)\nprint(len(l))\nfor i in range(len(l)):\n    print(i, end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end='"}, "1799": {"problem_id": 1799, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(max(a) + 1)\n"}, "1800": {"problem_id": 1800, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\noperations = []\nfor i in range(n):\n    operations.append(list(map(int, input().split())))\n\noperations.sort(key=lambda x: x[1], reverse=True)\n\nprint(' '.join(operations))\n"}, "1801": {"problem_id": 1801, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(m)\n"}, "1802": {"problem_id": 1802, "answer": "n = int(input())\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    x.sort()\n    y.sort()\n    if x[0] - y[0] > y[1]:\n        print(1)\n    else:\n        print(0)\n"}, "1803": {"problem_id": 1803, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    a[x-1] += y\n    a[y-1] += x\nprint(sum(a))"}, "1804": {"problem_id": 1804, "answer": "n, m = map(int, input().split())\nd = 0\nfor i in range(n):\n\td += int(input())\n\tif d > m:\n\t\td = m\n\telse:\n\t\td = m - d\nprint(d)"}, "1805": {"problem_id": 1805, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    print(2 * (n - 1) + 1)"}, "1806": {"problem_id": 1806, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nl = list(map(int, input().split()))\n\nqueries = [0] * (m + 1)\nfor query in range(m):\n    x, y = map(int, input().split())\n    queries[x] = min(queries[x], queries[y] + 1)\n\nprint(queries[-1])"}, "1807": {"problem_id": 1807, "answer": "import sys\n\ndef __starting_point():\n    a, b = list(map(int, sys.stdin.readline().split()))\n    print(a)\n\n__starting_point()"}, "1808": {"problem_id": 1808, "answer": "n, k, x = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nl = 0\nfor i in range(k):\n    if a[i] - 1 >= x:\n        l += x\n        a[i] -= 1\nprint(l)\n"}, "1809": {"problem_id": 1809, "answer": "n, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\ndef get_weight(book):\n    return sum(x[i] for x in book)\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    l.sort()\n    print(get_weight(l[1]))\n\n__starting_point()"}, "1810": {"problem_id": 1810, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    if s[-1] == 2:\n        print(1)\n    else:\n        print(n-s[-1])"}, "1811": {"problem_id": 1811, "answer": "from sys import stdin,stdout\nn,k = list(map(int,stdin.readline().split()))\ns = input()\na = ''.join(sorted(s,key=lambda x:x[1]))\nif n==1:\n    print('YES')\nelse:\n    print('NO')\n"}, "1812": {"problem_id": 1812, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    print(a[i], end=' ')\n    print()"}, "1813": {"problem_id": 1813, "answer": "def solve():\n    n, s, l = list(map(int, input().split()))\n    a = [-1] * (n + 1)\n    for i in range(n):\n        a[i] = i\n    print(solve())\n\nn, s, l = list(map(int, input().split()))\na = [-1] * (n + 1)\nfor i in range(n):\n    a[i] = i\n\nprint(solve())\n"}, "1814": {"problem_id": 1814, "answer": "from collections import deque\ndef solve(n, m, l, r, v, v1, l1, r1, v2, l2, r2, v3, l3, r3):\n    if n < 0:\n        return 0\n    elif m < 0:\n        return 0\n    else:\n        return max(que.popleft(), key=lambda x: x[1], value=0)\n\nn, m, l, r = list(map(int, input().split()))\nq = int(input())\ns = set(range(1, n+1))\ns.add(0)\nq = int(input())\nfor _ in range(q):\n    x, y, x1, y1, x2, y2, x3, y3 = list(map(int, input().split()))\n    if x1 <= y1 and x2 <= y2 and x3 <= y3:\n        print(s.add(x1, x2, y3))\n        continue\n    if x1 == 0 and x2 == 0 and y1 == 0 and y2 == 0:\n        print(s.add(x1, x2, y3))\n        continue\n    if x3 == 0 and y3 == 0 and x1 == 0 and x2 == 0 and y3 == 0:\n        print(s.add(x1, x2, y3))\n        continue\n    if x1 == 0 and x2 == 0 and y1 == 0 and y2 == 0:\n        print(s.add(x1, x2, y3))\n        continue\n    if x1 == 0 and x2 == 0 and y1 == 0 and y2 == 0:\n        print(s.add(x1, x2, y3))\n        continue\n    if x3 == 0 and y3 == 0 and x1 == 0 and x2 == 0 and y3 == 0:\n        print(s.add(x1, x2, y3))\n        continue\n    if x1 == 0 and x2 == 0 and y1 == 0 and y2 == 0:\n        print(s.add(x1, x2, y3))\n        continue\n    if x3 == 0 and y3 == 0 and x1 == 0 and x2 == 0 and y3 == 0:\n        print(s.add(x1, x2, y3))\n        continue\n    if x1 == 0 and x2 == 0 and y1 == 0 and y2 == 0:\n        print(s.add(x1, x2, y3))\n        continue\n    if x1 == 0 and x2 == 0 and y1 == 0 and y2 == 0:\n        print(s.add(x1, x2, y3))\n        continue\n    if x3 == 0 and y3 == 0 and x1 == 0 and x2 == 0 and y3 == 0:\n        print(s.add(x1, x2, y3))\n        continue\n    if x1 == 0 and x2 == 0 and y1 == 0 and y2 == 0:\n        print(s.add(x1, x2, y3))\n        continue\n    if x1 == 0 and x2 == 0 and y1 == 0 and y2 == 0:\n        print(s.add(x1, x2, y3))\n        continue\n    if x3 == 0 and y3 == 0 and x1 == 0 and x2 == 0 and y3 == 0:\n        print(s.add("}, "1815": {"problem_id": 1815, "answer": "from collections import Counter\nn = int(input())\nl = list(map(int,input().split()))\nc = Counter(l)\nfor i in range(n):\n    c[l[i]] += 1\nprint(max(c.values()))"}, "1816": {"problem_id": 1816, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n    s += int(input())\nprint(s)"}, "1817": {"problem_id": 1817, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n-1)\n"}, "1818": {"problem_id": 1818, "answer": "from bisect import bisect_left, bisect_right\nN = int(input())\nA = [list(map(int, input().split())) for i in range(N)]\nB = [list(map(int, input().split())) for i in range(N)]\n\ndef rec(x):\n    if x == 0:\n        return 0\n    elif x == 1:\n        return 1\n    else:\n        return rec(x - 1) + 1\n\nn = int(input())\nA = [list(map(int, input().split())) for i in range(N)]\nB = [list(map(int, input().split())) for i in range(N)]\n\n# \u5de5\u5178\u5185\u5bb9\nprint(bisect_left(A, N) + 1)\nprint(bisect_right(A, N) + 1)\n\n# \u5982\u679c\u6700\u4f1d\u5904\u7406\nans = 0\nfor i in range(N):\n    ans += rec(A[i])\n    # print(i, ans)\n    # print(A[i], ans)\n    # print(B[i], ans)\n    # print(B[i], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B[N-i-1], ans)\n    # print(B["}, "1819": {"problem_id": 1819, "answer": "for _ in range(int(input())):\n    n,x=map(int,input().split())\n    a=list(map(int,input().split()))\n    print(a[x-1]*x)"}, "1820": {"problem_id": 1820, "answer": "from math import factorial as f\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(f(a))"}, "1821": {"problem_id": 1821, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 0\nfor i in range(n):\n    if a[i] == a[i-1]:\n        m += 1\nprint(m)"}, "1822": {"problem_id": 1822, "answer": "n,x=list(map(int,input().split()))\na=list(map(int,input().split()))\nif x%2==0:\n    print(0)\nelse:\n    for i in range(1,n+1):\n        if a[i]==0:\n            a[i]+=1\n        elif a[i]==1:\n            a[i]+=1\n        else:\n            a[i]+=1\n            \n    print(a[n-1])"}, "1823": {"problem_id": 1823, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(1, n):\n    if a[i] == k:\n        print(i)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == k:\n        print(i + 1)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == k:\n        print(i + 1)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == k:\n        print(i + 1)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == k:\n        print(i + 1)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == k:\n        print(i + 1)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == k:\n        print(i + 1)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == k:\n        print(i + 1)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == k:\n        print(i + 1)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == k:\n        print(i + 1)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == k:\n        print(i + 1)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == k:\n        print(i + 1)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == k:\n        print(i + 1)\n        continue\n    if a[i] == 1:\n        print(i + 1)\n        continue\n    if a[i] == k:\n        print(i + 1)\n        continue\n    if a"}, "1824": {"problem_id": 1824, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] = sorted(a[i])\n    b[i] = sorted(b[i])\n\nprint(' '.join(map(str, a)))"}, "1825": {"problem_id": 1825, "answer": "def main():\n    n = int(input())\n    s = input()\n    for i in range(n):\n        k, x, y, z = list(map(int, input().split()))\n        print(s[x] + s[y] + s[z])\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1826": {"problem_id": 1826, "answer": "n = int(input())\nfor i in range(n):\n    u, r = input().split(' ')\n    if u[0] == 'R':\n        r = min(r, r)\n    else:\n        u.pop(0)\n    print(min(r, u))"}, "1827": {"problem_id": 1827, "answer": ""}, "1828": {"problem_id": 1828, "answer": "import sys\nread = sys.stdin.read\n\ndef main():\n    n = int(read())\n    d = {}\n    for i in range(n):\n        d[i] = list(map(int, read().split()))\n        d[i].sort()\n    print(len(d))\n    for i in range(n-1):\n        print(d[i], end=' ')\n        print(' '.join(map(str, d[i])))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1829": {"problem_id": 1829, "answer": "from collections import deque\nn, m = map(int, input().split())\nd = {}\nfor i in range(n):\n    d[i] = list(map(int, input().split()))\n    if len(d) == 1:\n        d[i] = 'NO'\n    else:\n        d[i] = 'YES'\nprint('YES' if d[n] == 'NO' else 'NO')"}, "1830": {"problem_id": 1830, "answer": "n, m = map(int, input().split())\npos = [0]*n\nfor i in range(n):\n    pos[i] = list(map(int, input().split()))\ncnt = 0\nfor i in range(m):\n    if pos[i] == 0:\n        cnt += 1\n    elif pos[i] == n-1:\n        cnt += 1\n    else:\n        break\nprint(cnt)"}, "1831": {"problem_id": 1831, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    if a < b:\n        a, b = b, a\n    else:\n        a, b = a, b\n\nprint('yes')\nprint('no')\n"}, "1832": {"problem_id": 1832, "answer": "from collections import deque\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print('a' if a[0] == a[-1] else 'neighbor')\n"}, "1833": {"problem_id": 1833, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = sum(a[i] for i in range(n))\nprint(sum(a))"}, "1834": {"problem_id": 1834, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint('\\n'.join(a))"}, "1835": {"problem_id": 1835, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        n = int(input())\n        s = input()\n        a, b, c, d = 0, 0, 0, 0\n        for i in s:\n            if i[0] == '0':\n                a += 1\n            elif i[0] == '1':\n                b += 1\n            else:\n                c += 1\n            if a == b:\n                print(1)\n            else:\n                print(2)\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n               \n                \n               \n               \n               \n               \n               \n             "}, "1836": {"problem_id": 1836, "answer": "import math\nn,m=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\ns=0\nfor i in range(m):\n    if l[i]==l[i-1]:\n        s+=1\nprint(s)\n"}, "1837": {"problem_id": 1837, "answer": "n = int(input())\na = [0] + list(map(int, input().split()))\nfor i in range(n):\n    a[i] = 1\nprint(max(a))"}, "1838": {"problem_id": 1838, "answer": "from collections import Counter\nn, m, q = list(map(int, input().split()))\nd = dict(map(int, input().split()))\nfor _ in range(m):\n    a, b = list(map(int, input().split()))\n    d[a] = b\n    d[b] = a\nprint('YES')\n"}, "1839": {"problem_id": 1839, "answer": "n = int(input())\nfor i in range(n):\n    h,v = list(map(int,input().split()))\n    if h not in [1,2,3,4,5,6,7,8,9,10]:\n        print(1,8)\n        continue\n    elif h == 1:\n        print(3,9)\n        continue\n    elif h == 2:\n        print(5,10)\n        continue\n    elif h == 3:\n        print(7,11)\n        continue\n    elif h == 4:\n        print(8,12)\n        continue\n    elif h == 5:\n        print(9,13)\n        continue\n    elif h == 6:\n        print(11,14)\n        continue\n    elif h == 7:\n        print(12,15)\n        continue\n    elif h == 8:\n        print(13,16)\n        continue\n    elif h == 9:\n        print(17,17)\n        continue\n    elif h == 10:\n        print(18,18)\n        continue\n    elif h == 11:\n        print(19,19)\n        continue\n    elif h == 12:\n        print(20,20)\n        continue\n    elif h == 11:\n        print(21,21)\n        continue\n    elif h == 12:\n        print(22,22)\n        continue\n    elif h == 13:\n        print(23,23)\n        continue\n    elif h == 12:\n        print(24,24)\n        continue\n    elif h == 13:\n        print(25,25)\n        continue\n    elif h == 13:\n        print(26,26)\n        continue\n    elif h == 14:\n        print(27,27)\n        continue\n    elif h == 14:\n        print(28,28)\n        continue\n    elif h == 15:\n        print(29,29)\n        continue\n    elif h == 15:\n        print(30,30)\n        continue\n    elif h == 16:\n        print(31,31)\n        continue\n    elif h == 16:\n        print(32,32)\n        continue\n    elif h == 17:\n        print(33,33)\n        continue\n    elif h == 17:\n        print(34,34)\n        continue\n    elif h == 18:\n        print(35,35)\n        continue\n    elif h == 18:\n        print(36,36)\n        continue\n    elif h == 19:\n    "}, "1840": {"problem_id": 1840, "answer": "s,b = list(map(int,input().split()))\na = list(map(int,input().split()))\nd = int(input())\ng = int(input())\nfor i in range(b):\n    d,g = list(map(int,input().split()))\n    if d == g:\n        print(1)\n    else:\n        print(d)\n"}, "1841": {"problem_id": 1841, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(n):\n    l = list(map(int, input().split()))\n    a.append(l)\n\nprint('\\n'.join(a))\n"}, "1842": {"problem_id": 1842, "answer": "from math import sqrt, ceil, log\n\ndef f(x, y):\n    return sqrt(x*x + y*y)\n\ndef is_impossible(x, y):\n    return all(x <= y for x, y in zip(map(int, map(sqrt, x))) if x < y)\n\ndef is_miseratic(x, y):\n    return all(x <= y for x, y in zip(map(int, map(sqrt, x))) if x < y)\n\ndef log(a, b, c):\n    return ceil(log(a, b, c))\n\ndef main():\n    a, b, c = map(int, input().split())\n    print(is_impossible(a, b))\n    print(is_miseratic(a, b))\n    print(is_impossible(b, c))\n    return\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1843": {"problem_id": 1843, "answer": "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n)"}, "1844": {"problem_id": 1844, "answer": "n = int(input())\na = list(map(int, input().split()))\nif n % 2 == 0:\n    print(-1)\n    return\nfor i in range(n//2):\n    if a[i] == 1:\n        print(i)\n        return\na.sort()\nprint(a[n//2-1])"}, "1845": {"problem_id": 1845, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 0\nfor i in range(n):\n    m = min(a[i] for i in range(n))\n    a.append(m)\nprint(m)"}, "1846": {"problem_id": 1846, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\na = list(map(int,stdin.readline().split()))\nfor i in range(n):\n    print(a[i])"}, "1847": {"problem_id": 1847, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn = int(input())\nseg = [0] * 10 ** 9\nfor i in range(n):\n    x, y, xi, yi = list(map(int, input().split()))\n    seg[x - 1] = y - 1\n    seg[y - 1] = x - 1\n\nmoves = 0\nfor i in range(n):\n    x, y, xi, yi = list(map(int, input().split()))\n    moves += 1\n\nprint(moves)\n"}, "1848": {"problem_id": 1848, "answer": "n = int(input())\nl = list(map(int, input().split()))\nfor i in range(n):\n    print(l[i])"}, "1849": {"problem_id": 1849, "answer": "from math import factorial as f\nn = int(input())\nmod = 998244353\nfor i in range(n):\n    mod = (f(i) * factorial(i)) % mod\n    print(mod)"}, "1850": {"problem_id": 1850, "answer": "from collections import deque\nn = int(input())\ns = list(map(int, input().split()))\nq = deque(s)\nfor i in range(n):\n    q.append(i)\n\ndef solve(q, s):\n    if len(q) == 0:\n        return 0\n    else:\n        return max(s[q[0]], s[q[1]])\n\ndef __starting_point():\n    solve(200000)\n__starting_point()"}, "1851": {"problem_id": 1851, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    print(a[i] + 1)"}, "1852": {"problem_id": 1852, "answer": "import sys\nreadline = sys.stdin.readline\ninput = sys.stdin.readline\n\nn = int(readline())\nedges = []\nfor _ in range(n):\n    a, b = map(int, readline().split())\n    edges.append([a, b])\n\n#print(edges)\n#print(edges[0])\n#print(edges[-1])\n\ndef is_leaf(v):\n    if v == None:\n        return False\n    return True\n\ndef is_parent(v):\n    if v == None:\n        return False\n    return True\n\ndef is_leaf_exists(v):\n    if v == None:\n        return False\n    return True\n\ndef dfs(v, parent):\n    if parent == None:\n        return 0\n    else:\n        v = dfs(v, parent)\n        if is_leaf_exists(v):\n            return 0\n\ndfs(0, 0)\n"}, "1853": {"problem_id": 1853, "answer": "n, m = map(int, input().split())\na = list(map(int, input().split()))\nc = sorted(a)\nfor i in range(m):\n    if i not in c:\n        print('NO')\n    else:\n        print('YES')\n"}, "1854": {"problem_id": 1854, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nedges = [int(x) for x in input().split()]\n\ndef DSU(n):\n    d = [0]*n\n    for i in range(n-1, -1, -1):\n        d[i] = 1\n        for j in range(i+1, n):\n            d[j] = d[i]*(j-i)\n    return d\n\ndef main():\n    n = int(input())\n    edges = list(map(int, input().split()))\n    DSU(n)\n    print('YES\\n'+' '.join(edges))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1855": {"problem_id": 1855, "answer": "MOD = 10**9 + 7\ndef main():\n    n, k = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    mod = 998244353\n    dp = [[0] * k for _ in range(n)]\n    for i in range(k):\n        dp[i][0] = p[i]\n        dp[i][1] = p[i]\n        for j in range(1, n):\n            if j - i - 1 >= 0:\n                dp[i][j] = max(dp[i - 1][j - 1] + dp[i - 1][j - 1] + dp[i - 1][j], dp[i - 1][j])\n            else:\n                dp[i][j] = max(dp[i - 1][j] + dp[i - 1][j], dp[i][j - 1])\n                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])\n    print(dp[-1][-1])\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1856": {"problem_id": 1856, "answer": "n = int(input())\nfor i in range(n):\n    s = input().strip()\n    l = len(s)\n    if l>50:\n        print(1)\n    else:\n        print(0)\n"}, "1857": {"problem_id": 1857, "answer": "from math import sqrt\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(len(b) - 1)"}, "1858": {"problem_id": 1858, "answer": "n = int(input())\ns = set()\nfor i in range(n):\n    s.add(i)\n    if i in s:\n        print('No')\n    else:\n        print('Yes')\n"}, "1859": {"problem_id": 1859, "answer": "n = int(input())\nprint(n)"}, "1860": {"problem_id": 1860, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(max(l))"}, "1861": {"problem_id": 1861, "answer": "from collections import Counter\n\ndef count_sets(c, k):\n    cnt = Counter(c)\n    return len(cnt) // k\n\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    print(count_sets(n, k))\n\n__starting_point()"}, "1862": {"problem_id": 1862, "answer": "from sys import setrecursionlimit\nsetrecursionlimit(10**5)\nn = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if y == 0:\n        print(0)\n    else:\n        print(s[y-1] + s[y-2])\n"}, "1863": {"problem_id": 1863, "answer": "n = int(input())\na,g = list(map(int,input().split()))\nprint(\"G\" if g[0] == \"A\" else \"A\")\nprint(\"A\" if g[0] == \"G\" else \"G\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"A\" if g[0] == \"A\" else \"A\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"A\" if g[0] == \"A\" else \"A\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"A\" if g[0] == \"A\" else \"A\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"A\" if g[0] == \"A\" else \"A\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"A\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"A\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \"S\" else \"S\")\nprint(\"S\" if g[0] == \""}, "1864": {"problem_id": 1864, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(min(a))\n"}, "1865": {"problem_id": 1865, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = sorted(a)\nprint(0)\nfor i in range(n-1):\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end=' ')\n    print(i, end='"}, "1866": {"problem_id": 1866, "answer": "from collections import defaultdict\nn = int(input())\nfor _ in range(n):\n    a, b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(a[0], b[0])\n"}, "1867": {"problem_id": 1867, "answer": "def main():\n    n = int(input())\n    l = int(input())\n    r = int(input())\n    ans = 0\n    for i in range(n):\n        if l == i:\n            ans += 1\n        else:\n            ans -= 1\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1868": {"problem_id": 1868, "answer": "import sys\n\nMOD = 998244353\n\ndef chr_solve(s, n, a):\n    if len(s) == n:\n        return 0\n    ans = 0\n    for i in range(n):\n        if s[i] == a:\n            ans += 1\n    return ans % MOD\n\ndef chr_solve_n(s, n, a):\n    if len(s) == n:\n        return 0\n    ans = 0\n    for i in range(n):\n        if s[i] == a:\n            ans += 1\n    return ans % MOD\n\ndef chr_solve(s, n, a):\n    if len(s) == n:\n        return 0\n    ans = 0\n    for i in range(n):\n        if s[i] == a:\n            ans += 1\n    return ans % MOD\n\ndef __starting_point():\n    n, m, a = int(input()), list(map(int, input().split()))\n    a.sort()\n    print(chr_solve_n(a, n, a))\n__starting_point()"}, "1869": {"problem_id": 1869, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a.append(a[i] + '1')\nprint(len(a))"}, "1870": {"problem_id": 1870, "answer": "n, c = list(map(int, input().split()))\nt = list(map(int, input().split()))\n\ndef main():\n    n, c = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    print(t[0])\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1871": {"problem_id": 1871, "answer": "n, x = map(int, input().split())\nc = [int(x) for x in input().split()]\n\ndef dfs(i, j):\n    if i == j:\n        return 0\n    elif i == 0:\n        return 1\n    else:\n        return max(dfs(i - 1, j), dfs(i, j - 1) + 1)\n\nprint(n)"}, "1872": {"problem_id": 1872, "answer": "n, r = map(int, input().split())\ns = 0.0\nfor i in range(n):\n    s += (r**i)\nprint(s)"}, "1873": {"problem_id": 1873, "answer": "n, m = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if s == m:\n        s += 1\nprint(s)\n"}, "1874": {"problem_id": 1874, "answer": "from math import ceil, log2\n\nl = list(map(float, input().split()))\n\nfor i in range(1, len(l)):\n    print(l[i], end ='')\n\nprint(2.0)\n"}, "1875": {"problem_id": 1875, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\na = 0\nfor i in range(n):\n    x,y = l[i]\n    a += x*y\n    if x<0:\n        a = 0\n    elif x>0:\n        a = max(a,y)\nprint(a)"}, "1876": {"problem_id": 1876, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, k = list(map(int, input().split()))\nedges = [set() for _ in range(n)]\ng = [set() for _ in range(n)]\n\ndef main():\n    n, k = list(map(int, input().split()))\n    edges.sort()\n    g.sort()\n    #print(edges)\n    dp = [[0]*(k+1) for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(1, n):\n        dp[i][0] = 1\n        for j in range(i-1, -1, -1):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]\n            if len(dp[i][j]) == k:\n                dp[i][j] = max(dp[i][j], dp[i][k] + dp[i-1][j])\n            else:\n                dp[i][j] = max(dp[i][j], dp[i][k] + dp[i-1][j])\n                if len(dp[i][j]) == k:\n                    dp[i][j] = max(dp[i][j], dp[i][k] + dp[i-1][j])\n                elif len(dp[i][j]) == k-1:\n                    dp[i][j] = max(dp[i][j], dp[i][k] + dp[i-1][j])\n                else:\n                    dp[i][j] = max(dp[i][j], dp[i][k] + dp[i-1][j])\n                    if len(dp[i][j]) == k:\n                        dp[i][j] = max(dp[i][j], dp[i][k] + dp[i-1][j])\n                    else:\n                        dp[i][j] = max(dp[i][j], dp[i][k] + dp[i-1][j])\n                        if len(dp[i][j]) == k:\n                            dp[i][j] = max(dp[i][j], dp[i][k] + dp[i-1][j])\n                        else:\n                            dp[i][j] = max(dp[i][j], dp[i][k] + dp[i-1][j])\n                            if len(dp[i][j]) == k:\n                    "}, "1877": {"problem_id": 1877, "answer": "from collections import deque\nn = int(input())\ns = input()\nl = [0]*n\nfor i in range(n):\n    s[i] = 'U'\n    l[i] = s[i]\n    s[i] = 'R'\n\nprint(len(l))\nfor i in range(n):\n    print(l[i], end=' ')\n    print(s[i], end=' ')\n"}, "1878": {"problem_id": 1878, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nans = 0\nfor i in range(n):\n    x,y,x1,y1,x2,y2 = l[i]\n    if x == x1 or y == x2 or x == x1 or y == x2:\n        ans += x1*y1 + x2*y2\nprint(ans)"}, "1879": {"problem_id": 1879, "answer": "import sys\ninput = sys.stdin.readline\n\nt,s,e,n = map(int,input().split())\n\nfor i in range(t):\n    x,y,s = map(int,input().split())\n    if s[0]==y:\n        x += 1\n    elif s[0]==x:\n        x -= 1\n    elif s[0]==e:\n        x -= 1\n    elif s[0]==n:\n        y -= 1\n    else:\n        print(-1)\n        return\n\nif x<0 or y<0:\n    print(-1)\n    return\n\ndef main():\n    t,s,e,n = map(int,input().split())\n    if s[0]==y:\n        x += 1\n    elif s[0]==x:\n        x -= 1\n    elif s[0]==e:\n        x -= 1\n    elif s[0]==n:\n        y -= 1\n    else:\n        print(-1)\n        return\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1880": {"problem_id": 1880, "answer": "from itertools import permutations\n\ndef __starting_point():\n    input()\n    print(12345)\n__starting_point()"}, "1881": {"problem_id": 1881, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\np = list(map(int, input().split()))\n\nfor i in range(n):\n    p[i] = p[i] & 255\n\n# print(p)\n\nans = []\n\nfor i in range(k):\n    ans.append(p[i] +'' + str(p[i]))\n\nprint(' '.join(ans))"}, "1882": {"problem_id": 1882, "answer": "import sys\ninput = sys.stdin.readline\nn, t = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] == t:\n        s += 1\nprint(s)\n"}, "1883": {"problem_id": 1883, "answer": "n = int(input())\ns = list(map(int, input().split()))\n\ndef dfs(i, j, s):\n    if i == 0:\n        return 1\n    elif j == 0:\n        return 0\n    else:\n        return max(dfs(i-1, j, s[i:]) for i in range(1, len(s)))\n\n# print(s)\n# print(s[0])\n\nt = int(input())\n\nfor i in range(t):\n    a = list(map(int, input().split()))\n    s.append(a)\n\n# print(s)\n# print(s[0])\n\nans = 0\n\nfor i in range(1, len(s)):\n    if s[i] == 0:\n        ans += 1\n        break\n\nprint(ans)\n"}, "1884": {"problem_id": 1884, "answer": "n,x1,x2=list(map(int,input().split()))\nc=list(map(int,input().split()))\nif n==1:\n    print(\"No\")\nelse:\n    for i in range(1,n+1):\n        if x1[i]!=x2[i]:\n            print(\"Yes\")\n            break\n    else:\n        print(\"No\")\n        \n"}, "1885": {"problem_id": 1885, "answer": "n = int(input())\nfor i in range(n):\n    print(i, end=' ')\n"}, "1886": {"problem_id": 1886, "answer": "def capitalize(word):\n    if len(word) <= 1:\n        return word\n    elif len(word) == 1:\n        return \"\".join(word[::-1])\n    else:\n        return \"\".join(word[::-1])\n\ndef __starting_point():\n    print(capitalize(__import__('re').sub('[a-zA-Z]','',__ingest_word)))\n__starting_point()"}, "1887": {"problem_id": 1887, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\ns = 0\nfor i in range(n):\n    if l[i] > l[i-1]:\n        s += 1\nprint(s)"}, "1888": {"problem_id": 1888, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(a, b):\n    return min(a[0] - b[0], a[1] - b[1])\n\nprint(solve(a, b))"}, "1889": {"problem_id": 1889, "answer": "from collections import deque\nn, m, q = map(int, input().split())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = 1\nfor i in range(m):\n    a[i] = max(a[i], q)\nprint(sum(a))"}, "1890": {"problem_id": 1890, "answer": "from sys import stdin,stdout\ns = stdin.readline().strip()\nn = int(s[0])\nm = 10**9 + 7\nfor i in range(n):\n    m = max(m, int(s[i])%m)\nprint(m)"}, "1891": {"problem_id": 1891, "answer": "from sys import stdin,stdout\nn,k,a,b = list(map(int,stdin.readline().split()))\nl = list(map(int,stdin.readline().split()))\nfor i in range(k):\n    l.append(a*b)\nprint(min(l))\n"}, "1892": {"problem_id": 1892, "answer": "def gcd(a, b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return gcd(b, a % b)\n    else:\n        return b\n\nn = int(input())\nc = list(map(int, input().split()))\nprint(gcd(c[0], c[1]))"}, "1893": {"problem_id": 1893, "answer": "from math import ceil\nn, t = map(int, input().split())\nfor i in range(n):\n    t = int(ceil(t ** 0.5))\n    print(t)"}, "1894": {"problem_id": 1894, "answer": "def is_empty(n,m,l):\n if m==0 or n==0:\n  return False\n if m==0 or n==0:\n  return True\n if m==0 or n==0:\n  return False\n if m==0 or n==0:\n  return True\n return False\n\nn,m=map(int,input().split())\nl=list(map(int,input().split()))\nl.sort()\ns=0\nfor i in range(n-1):\n if l[i]==\".\":\n  s+=1\n else:\n  if is_empty(l[i+1]-l[i]):\n   s+=1\nprint(s)"}, "1895": {"problem_id": 1895, "answer": "# -*- coding: utf-8 -*-\n\n\nimport math\nn, m = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\n# print(s)\n\ndef max_freq(s):\n    if s[0] == s[-1]:\n        return 1\n    elif s[0] < s[-1]:\n        return max(s[1:])\n    else:\n        return 0\n\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    print(max_freq(s))\n\n\n__starting_point()"}, "1896": {"problem_id": 1896, "answer": "n = int(input())\nprint(n)"}, "1897": {"problem_id": 1897, "answer": "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n    if s[i] == \"A\":\n        cnt += 1\n    elif s[i] == \"O\":\n        cnt += 1\n    elif s[i] == \"U\":\n        cnt += 1\n    elif s[i] == \"Y\":\n        cnt += 1\nprint(cnt)"}, "1898": {"problem_id": 1898, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(str(i))\nprint(\"I hate it\")\n"}, "1899": {"problem_id": 1899, "answer": "import sys\ninput = sys.stdin.readline\n\nn, s, m, k = list(map(int, input().split()))\n\ndef rec(l, r):\n    if l < 0:\n        return -1\n    elif r < 0:\n        return 0\n    else:\n        return max(l, r)\n\nl, r = list(map(int, input().split()))\n\nans = rec(l, r)\nprint(ans)\n"}, "1900": {"problem_id": 1900, "answer": "n, k, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef dfs(start, end):\n    if end - start <= n:\n        return 0\n    elif end - start >= m:\n        return 1\n    else:\n        return dfs(start + 1, end + 1)\n\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\nprint(len(a))\nfor i in range(len(a)):\n    print(i)"}, "1901": {"problem_id": 1901, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\nc = list(map(int, input().split()))\nq = deque()\nfor i in range(n):\n    q.append(c[i] + q[-1].pop())\nprint(len(q))\n"}, "1902": {"problem_id": 1902, "answer": "s = input()\nn = len(s)\nl = []\nfor i in range(n):\n    if s[i] =='':\n        l.append(s[i])\n    else:\n        l.append(s[i])\nprint(len(l))"}, "1903": {"problem_id": 1903, "answer": "n, m, d = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\ndef max_signi(x, y):\n    return max(c[x] - c[y], 0, x, y)\n\n# \u533a\u9593c[i]\u8868\u793a\u6700\u5c0f\u6728\u63a5\u53d7\u5206\u5206\u940e\n# \u533a\u9593c[i]\u8868\u793a\u6700\u5c0f\u6728\u63a5\u53d7\u5206\u5206\u940e\n\n# \u533a\u9593c[i]\u8868\u793a\u6700\u5c0f\u6728\u63a5\u53d7\u5206\u5206\u940e\n\n# \u533a\u9593c[i]\u8868\u793a\u6700\u5c0f\u6728\u63a5\u53d7\u5206\u5206\u940e\n\n# \u533a\u9593c[i]\u8868\u793a\u6700\u5c0f\u6728\u63a5\u53d7\u5206\u5206\u940e\n\n# \u533a\u9593c[i]\u8868\u793a\u6700\u5c0f\u6728\u63a5\u53d7\u5206\u5206\u940e\n\n# \u533a\u9593c[i]\u8868\u793a\u6700\u5c0f\u6728\u63a5\u53d7\u5206\u5206\u940e\n\n# \u533a\u9593c[i]\u8868\u793a\u6700\u5c0f\u6728\u63a5\u53d7\u5206\u5206\u940e\n\n# \u533a\u9593c[i]\u8868\u793a\u6700\u5c0f\u6728\u63a5\u53d7\u5206\u5206\u940e\n\n# \u533a\u9593c[i]\u8868\u793ac[j]\u8868\u793ac[k]\u8868\u793ac[l]\u8868\u793ac[r]\u8868\u793ac[j]\u8868\u793ac[k]\u8868\u793ac[l]\u8868\u793ac[r]\u8868\u793ac[j]\u8868\u793ac[k]\u8868\u793ac[l]\u8868\u793ac[r]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\u793ac[k]\u8868\ufffd"}, "1904": {"problem_id": 1904, "answer": "n = int(input())\ns = input()\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if s[i] == 'h':\n        ans += 1\n    else:\n        ans += min(a[i] - a[i - 1], a[i] - a[i - 2])\nprint(ans)\n"}, "1905": {"problem_id": 1905, "answer": "from sys import stdin,stdout\nn,m,q = list(map(int,stdin.readline().split()))\na = list(map(int,stdin.readline().split()))\nfor i in range(n):\n    t = int(stdin.readline().strip())\n    if t == 1:\n        print(a[i])\n    else:\n        print(a[i-1])\n"}, "1906": {"problem_id": 1906, "answer": "def __starting_point():\n    n = int(input())\n    s = input().split()\n    s.sort()\n    for i in range(10):\n        if i not in s:\n            s[i] += 1\n        else:\n            s[i] = 1\n    print(s[n-1] - s[n-2])\n\n__starting_point()"}, "1907": {"problem_id": 1907, "answer": "n = int(input())\nd = dict()\nfor i in range(n):\n    x, y, r = list(map(int, input().split()))\n    d[x].append(y)\n    d[y].append(x)\n\nd = dict()\nfor i in range(n):\n    x, y, r = list(map(int, input().split()))\n    d[x].append(y)\n    d[y].append(x)\n\nprint('%.6f' % (d.get(0) * (d.get(1) * (d.get(2) * (d.get(3) * (d.get(4) * (d.get(5) * (d.get(6) * (d.get(7) * (d.get(8) * (d.get(9) * (d.get(10) * (d.get(11) * (d.get(12) * (d.get(13) * (d.get(14) * (d.get(15) * (d.get(16) * (d.get(17) * (d.get(18) * (d.get(19) * (d.get(20) * (d.get(21) * (d.get(22) * (d.get(23) * (d.get(24) * (d.get(25) * (d.get(26) * (d.get(27) * (d.get(28) * (d.get(29) * (d.get(30) * (d.get(31) * (d.get(32) * (d.get(33) * (d.get(34) * (d.get(37) * (d.get(38) * (d.get(39) * (d.get(40) * (d.get(41) * (d.get(42) * (d.get(43) * (d.get(44) * (d.get(45) * (d.get(46) * (d.get(47])))):\nprint('\\n'.join(map(str,d.items())))\n"}, "1908": {"problem_id": 1908, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\ndef dfs(i, j):\n    if i == l[i]:\n        return 1\n    elif j == l[i]:\n        return 0\n    else:\n        return 1 + dfs(i + 1, j + 1)\n\nans = 0\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    ans += dfs(i + 1, x) + dfs(i + 1, y)\n\nprint('\\n'.join(map(str, ans)))\n"}, "1909": {"problem_id": 1909, "answer": "from collections import deque\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    s.add(a[i])\n    a.append(i)\n\ndef solve(a, k):\n    if len(a) == k:\n        return 0\n    m = len(a)\n    for i in range(1, m):\n        if a[i] == a[i - 1] and k == 1:\n            return i\n        elif a[i] == a[i - 1] and k == 1:\n            return i\n    return 0\n\nprint(solve(a, k))\n"}, "1910": {"problem_id": 1910, "answer": "n = int(input())\nc = 0\nfor i in range(n):\n    if i % 4 == 0:\n        c += 1\nprint(c)"}, "1911": {"problem_id": 1911, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = max(a[i-1], a[i]) + k\nprint(n-k)\n"}, "1912": {"problem_id": 1912, "answer": "def is_pal(n):\n    if n == 0:\n        return True\n    else:\n        return False\n\nfor _ in range(int(input())):\n    r, g, b, w = map(int, input().split())\n    if is_pal(r):\n        print(\"Yes\")\n    else:\n        print(\"No\")"}, "1913": {"problem_id": 1913, "answer": "import math\ndef __starting_point():\n n = int(input())\n a = list(map(int, input().split()))\n for i in range(n):\n  if i == 0:\n   print(a[i]*math.pow(2,i))\n  else:\n   print(a[i]*math.pow(2,i-1))\n__starting_point()"}, "1914": {"problem_id": 1914, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    t = input().strip()\n    n = len(t)\n    s = list(map(int, t.split()))\n    l = 0\n    for i in range(n):\n        l += s[i]\n        if l > 0:\n            l -= s[l-1]\n        else:\n            l -= s[l-1]\n    print(l)\n\ndef __starting_point():\n    solve()\n__starting_point()"}, "1915": {"problem_id": 1915, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = max(a)\nfor i in range(n):\n    print(m, end=' ')\n    print(' '.join(str(i) for i in a[::-1]))"}, "1916": {"problem_id": 1916, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort_left as ins, insort_right as ins, bisect_left as bl, bisect_right as br, insort_left as br, insort_right as br, bisect_left as br, insort_right as br, insort_left as br, insort_left as br, insort_left as br, insort_left as br, insort_left as br, insort_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_left as br, br_"}, "1917": {"problem_id": 1917, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k = list(map(int,input().split()))\na = list(map(int,input().split()))\n\ndef is_prime(n):\n    if n<=1:\n        return False\n    elif n%2==0:\n        return True\n    else:\n        return False\n\ndef prime_factors(n):\n    if n!=1:\n        return [2,3,4,5,6,7,8,9]\n    else:\n        return [2,3,4,5,6,7,8,9]\n\ndef factorization(n,lst):\n    if n==1:\n        return lst\n    else:\n        lst=[]\n        for i in range(n):\n            if is_prime(i):\n                lst.append(i)\n            else:\n                lst.append(n-i)\n        lst.sort(reverse=True)\n        return lst\n\ndef main():\n    n,k=list(map(int,input().split()))\n    a=[int(i) for i in input().split()]\n    b=[int(i) for i in input().split()]\n    f=factorization(n,a)\n    print(b[k]*f)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1918": {"problem_id": 1918, "answer": "n = int(input())\nfor i in range(n):\n    string = input()\n    string = string[::-1]\n    \n    l = len(string)\n    \n    if l == 0:\n        print(0)\n        continue\n    \n    a = string.count('A')\n    b = string.count('B')\n    \n    if a == b:\n        print(a)\n        continue\n    \n    ans = max(a, b)\n    \n    if ans == 0:\n        print(ans)\n    else:\n        print(ans)\n        \n        \n"}, "1919": {"problem_id": 1919, "answer": "n = int(input())\nfor i in range(n):\n    print(1,end=\" \")\n    print(2)"}, "1920": {"problem_id": 1920, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(len(a) - len(b))"}, "1921": {"problem_id": 1921, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    f.sort()\n    d = [[] for _ in range(n)]\n    for i in range(m):\n        x, y = list(map(int, input().split()))\n        d[x].append(y)\n        d[y].append(x)\n    print(min(d[n-1]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1922": {"problem_id": 1922, "answer": "def main():\n    n, m = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    print(sum(l))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1923": {"problem_id": 1923, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nl = [int(i) for i in input().split()]\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u7528\u5230\u6587\u5b57\uff0c\u5219\u518d\u5e30\u6587\u5b57\u6574\n# print(l)\n\ndef max_extract(l):\n    x = 0\n    for i in range(1, len(l)):\n        x += l[i]\n    return x\n\ndef __starting_point():\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    print(max_extract(l))\n__starting_point()"}, "1924": {"problem_id": 1924, "answer": "import sys\nreadline = sys.stdin.readline\n\nsys.setrecursionlimit(10**6)\ninf = 10**20\neps = 1.0\nmod = 10**9+7\nN = int(readline())\nfor _ in range(N):\n    r, c = list(map(int, readline().split()))\n    if r-r_1 == c-c_2:\n        print((r-r_1)%mod)\n        continue\n    ans = 0\n    for i in range(r, c):\n        ans += (1<<i)\n        ans %= mod\n    print((ans%mod)%mod)"}, "1925": {"problem_id": 1925, "answer": "import math\ndef ceil(x):\n    if x<0:\n        return -1\n    else:\n        return x\ndef floor(n):\n    if n<0:\n        return -1\n    else:\n        return math.floor(n)\nprint(floor(10))"}, "1926": {"problem_id": 1926, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\n\ndef find(x):\n    if x == a[x]:\n        return x\n    else:\n        return find(x)\n\ndef union(x, y):\n    x = find(x)\n    y = find(y)\n    if x == y:\n        return\n    elif x < y:\n        x, y = y, x\n    else:\n        x, y = y, x\n\nd = {}\nfor i in range(n):\n    d[i] = find(i)\n\nprint(' '.join(map(str, d.items())))\n"}, "1927": {"problem_id": 1927, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] = a[i] + 1\n\nans = 0\nfor i in range(m):\n    if a[i] == 0:\n        ans += 1\n        break\nprint(ans)\n"}, "1928": {"problem_id": 1928, "answer": "n, m, k = list(map(int, input().split()))\ns = [[0] * m for _ in range(n)]\nfor i in range(n):\n    s[i][0] = 1\nfor i in range(m):\n    for j in range(n):\n        s[i][j] = (s[i][j] + s[i][j - 1]) * k\nprint(' '.join(map(str, s)))\n"}, "1929": {"problem_id": 1929, "answer": "def main():\n    n, t, c = list(map(int, input().split()))\n    if t == 0:\n        return 0\n    elif t == 1:\n        return c\n    else:\n        for i in range(n):\n            if c[i] > t:\n                t = c[i]\n                c[i] += 1\n            else:\n                break\n        print(t)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1930": {"problem_id": 1930, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\na = list(map(int, input().split()))\n\nfor i in range(n):\n    p = list(map(int, input().split()))\n    if p[0] == -1:\n        a.append(p[1])\n    else:\n        a.append(p[1] + -1)\n\nans = 0\nprint(ans)\n"}, "1931": {"problem_id": 1931, "answer": "for _ in range(int(input())):\n    n = int(input())\n    print(1)\n    print(n-1)"}, "1932": {"problem_id": 1932, "answer": "n = int(input())\ns = input()\nd = set()\nfor i in range(n):\n    s.append(\" \")\n    d.add(s[i])\n\nprint(sum(d.union(set(d.intersection(set(d))))))\n"}, "1933": {"problem_id": 1933, "answer": "def main():\n    n, m, k = list(map(int, input().split()))\n    matrix = [[0] * n for _ in range(m)]\n    for i in range(m):\n        matrix[i][i] = 1\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] == 1:\n                matrix[i][j] = 1\n            else:\n                matrix[i][j] = matrix[i][j - 1]\n    return \"\\n\".join(map(str, matrix))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1934": {"problem_id": 1934, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nl = [0]*n\nr = [0]*n\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x == y:\n        l[i] = min(l[i], r[i])\n    else:\n        r[i] = min(r[i], l[i])\nprint(l[n-1])\n"}, "1935": {"problem_id": 1935, "answer": ""}, "1936": {"problem_id": 1936, "answer": "def isLeetCode(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return -1\n    else:\n        return int(n)\n\ndef __starting_point():\n    t = int(input())\n    for _ in range(t):\n        l, r = list(map(int, input().split()))\n        print(isLeetCode(r))\n__starting_point()"}, "1937": {"problem_id": 1937, "answer": "from bisect import bisect_left as bl\nn = int(input())\nl = list(map(int, input().split()))\nprint(bisect_left(l, bl))"}, "1938": {"problem_id": 1938, "answer": "from math import factorial as f\n\nMOD = 1000000007\n\ndef main():\n    n, k = list(map(int, input().split()))\n    l, r = list(map(int, input().split()))\n    \n    # Initialize result\n    result = [0] * (n + 1)\n    for i in range(1, n + 1):\n        result[i] = f(l, i)\n    \n    # Calculate mod\n    result[0] = 1\n    for i in range(1, n + 1):\n        result[i] = (result[i] * (i + 1) + 1) % MOD\n    \n    # Compute result\n    result[n] = result[n - 1]\n    for i in range(1, n + 1):\n        result[i] = (result[i] * (i + 1) + 1) % MOD\n    \n    # Compute mod\n    result[k] = result[k - 1]\n    for i in range(1, n + 1):\n        result[i] = (result[i] * (i + 1) + 1) % MOD\n    \n    # Compute result\n    result[k] = result[k - 1]\n    for i in range(1, n + 1):\n        result[i] = (result[i] * (i + 1) + 1) % MOD\n    \n    # Compute mod\n    result[k] = result[k - 1]\n    for i in range(1, n + 1):\n        result[i] = (result[i] * (i + 1) + 1) % MOD\n    \n    # Compute result\n    result[k] = result[k - 1]\n    for i in range(1, n + 1):\n        result[i] = (result[i] * (i + 1) + 1) % MOD\n    \n    # Compute mod\n    result[k] = result[k - 1]\n    for i in range(1, n + 1):\n        result[i] = (result[i] * (i + 1) + 1) % MOD\n    \n    # Compute mod\n    result[k] = result[k - 1]\n    for i in range(1, n + 1):\n        result[i] = (result[i] * (i + 1) + 1) % MOD\n    \n    # Compute mod\n    result[k] = result[k - 1]\n    for i in range(1, n + 1):\n        result[i] = (result[i] * (i + 1) + 1) % MOD\n    \n    # Compute mod\n    result[k] = result[k - 1]\n    for i in range(1, n + 1):\n        result[i] = (result[i] * (i + 1) + 1) % MOD\n    \n    # Compute mod\n    result[k] = result[k - 1]\n    for i in range(1, n + 1):\n        result[i] = (result[i] * (i + 1) + 1) % MOD\n    \n    # Compute mod\n    result[k] = result[k - 1]\n    for i in range(1, n + 1):\n        result[i] = (result[i] * (i + 1) + 1) % MOD\n    \n    # Compute mod\n    result[k] = result[k - 1]\n    for i in range(1, n + 1):\n  "}, "1939": {"problem_id": 1939, "answer": "n, k = map(int, input().split())\nt = list(map(int, input().split()))\nfor i in range(n):\n    t.append(t[i] +'' + t[i - 1])\nprint('\\n'.join(t))"}, "1940": {"problem_id": 1940, "answer": "n, k = list(map(int, input().split()))\nw = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if s == 0:\n        s += 1\n    else:\n        s -= 1\nprint(s)\n"}, "1941": {"problem_id": 1941, "answer": "from bisect import bisect_left as bl\n\nA,B = list(map(int,input().split()))\n\ndef dfs(i,j):\n    if i == 0:\n        return 1\n    else:\n        return 0\n    \n    # print(i,j)\n    if A[i] == A[j]:\n        return -1\n    elif B[i] == B[j]:\n        return 1\n    else:\n        return -1\n    \n    # print(i,j)\n    if A[i] == A[j]:\n        return -1\n    elif B[i] == B[j]:\n        return 1\n    else:\n        return -1\n    \n    # print(i,j)\n    if A[i] == A[j]:\n        return -1\n    elif B[i] == B[j]:\n        return 1\n    else:\n        return -1\n    \n    # print(i,j)\n    if A[i] == A[j]:\n        return -1\n    elif B[i] == B[j]:\n        return 1\n    else:\n        return -1\n    \n    # print(i,j)\n    if A[i] == A[j]:\n        return -1\n    elif B[i] == B[j]:\n        return 1\n    else:\n        return -1\n    \n    # print(i,j)\n    if A[i] == A[j]:\n        return -1\n    elif B[i] == B[j]:\n        return 1\n    else:\n        return -1\n    \n    # print(i,j)\n    if A[i] == A[j]:\n        return -1\n    elif B[i] == B[j]:\n        return 1\n    else:\n        return -1\n    \n    # print(i,j)\n    if A[i] == A[j]:\n        return -1\n    elif B[i] == B[j]:\n        return 1\n    else:\n        return -1\n    \n    # print(i,j)\n    if A[i] == A[j]:\n        return -1\n    elif B[i] == B[j]:\n        return 1\n    else:\n        return -1\n    \n    # print(i,j)\n    if A[i] == A[j]:\n        return -1\n    elif B[i] == B[j]:\n        return 1\n    else:\n        return -1\n    \n    # print(i,j)\n    if A[i] == A[j]:\n        return -1\n    elif B[i] == B[j]:\n        return 1\n    else:\n        return -1\n    \n    # print(i,j)\n    if A[i] == A[j]:\n        return"}, "1942": {"problem_id": 1942, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, l, r = list(map(int, input().split()))\n    graph = [[] for _ in range(n)]\n    for i in range(n):\n        graph[i].append(i)\n        if i not in graph:\n            graph[i].append(i)\n        else:\n            graph[i].append(i)\n    print(' '.join(map(str, graph)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1943": {"problem_id": 1943, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nn = int(input())\nl = list(map(int, input().split()))\nfor i in range(n):\n    l.append(list(map(int, input().split())))\nprint(2**(n-1))"}, "1944": {"problem_id": 1944, "answer": "n = int(input())\nlamein = list(map(int, input().split()))\nalice = list(map(int, input().split()))\nalice.sort()\ns = 0\nfor i in range(n):\n    if lamein[i] > s:\n        s = lamein[i]\n    else:\n        break\nprint(\"Happy Alex\")\n"}, "1945": {"problem_id": 1945, "answer": "q = int(input())\nfor i in range(q):\n a = input().split()\n a = list(set(a))\n n = len(a)\n m = len(a)\n for i in range(n):\n  if a[i] == a[i-1] == 'A':\n   m = m + 1\n print(m)\n"}, "1946": {"problem_id": 1946, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nc = list(map(int, input().split()))\n\ndef get_income(a):\n    return max(c[a] - a[a] for a in a)\n\ndef dfs(a):\n    if a not in c:\n        return 0\n    return max(dfs(a), 0)\n\n# dfs(a)\n# print(dfs(a))\n\nans = 0\nfor i in range(n):\n    a, x = a[i]\n    ans += get_income(a)\n\nprint(ans)\n"}, "1947": {"problem_id": 1947, "answer": "from sys import stdin,stdout\nn,m,l = list(map(int,stdin.readline().split()))\na = list(map(int,stdin.readline().split()))\nl = max(a)\nprint(l)\n"}, "1948": {"problem_id": 1948, "answer": "from collections import deque\nn, x = map(int, input().split())\nedges = []\nfor _ in range(n-1):\n    a, b = map(int, input().split())\n    edges.append((a, b))\n\ndef dfs(v, start):\n    if v == x:\n        return 1\n    elif v == x:\n        return 0\n    else:\n        x = v\n        y = x\n        for i in edges[v]:\n            if i == x:\n                return 1\n            else:\n                x = i\n                y = y\n        return 0\n\n# \u5982\u4f59\u4e8c\u5206\u679d\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199\u6210\u4e00\u4e2a\u6570\u5b57\n# \u4e00\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u7528\u5230\u8fd9\u91cc\u9762\u7684\u65b9\u5f0f\uff0c\u5199"}, "1949": {"problem_id": 1949, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nprint(sum(a) * k)\n"}, "1950": {"problem_id": 1950, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i] == 1:\n        c += 1\n    else:\n        c = 0\nprint(c)"}, "1951": {"problem_id": 1951, "answer": "n = int(input())\narr = []\nfor i in range(n):\n    arr.append(int(input()))\narr.sort()\nprint('YES' if arr[-1] == '1' else 'NO')"}, "1952": {"problem_id": 1952, "answer": ""}, "1953": {"problem_id": 1953, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\nfor _ in range(n):\n    a = int(stdin.readline())\n    print(a)"}, "1954": {"problem_id": 1954, "answer": "import sys\n\nmod = 10 ** 9 + 7\n\ndef main():\n    n, f = list(map(int, sys.stdin.readline().split()))\n    \n    if n == 1:\n        return 1\n    \n    dp = [0] * (n + 1)\n    dp[0] = 1\n    for i in range(1, n + 1):\n        dp[i] = pow(2, i, mod)\n        \n    for i in range(1, n + 1):\n        dp[i] = max(dp[i - 1], dp[i] + dp[i - 1] % mod)\n    \n    print(dp[-1])\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1955": {"problem_id": 1955, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(m):\n    if a[i] == 0:\n        print(-1)\n    else:\n        if a[i] < 0:\n            a[i] += 1\n        else:\n            a[i] = 1\n\nprint(n)\n"}, "1956": {"problem_id": 1956, "answer": "import sys,math\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s,e = list(map(int,input().split()))\n    print(1+s*e)\n"}, "1957": {"problem_id": 1957, "answer": "import sys\ninput = sys.stdin.readline\n\nn, a, b = list(map(int, input().split()))\ns = sorted(list(map(int, input().split())))\n\n# a = a + b\n# b = b + a\n\ndef calc(a, b):\n    return a * b\n\ndef __starting_point():\n    n, a, b = list(map(int, input().split()))\n    s = sorted(list(map(int, input().split())))\n    print(calc(s, a))\n\n__starting_point()"}, "1958": {"problem_id": 1958, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, p = list(map(int, readline().split()))\n\nif n % 2 == 0:\n    print(n)\nelse:\n    print(n // 2)\n"}, "1959": {"problem_id": 1959, "answer": "n, m = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n    d[i] = list(map(int, input().split()))\nans = 0\nfor i in range(m):\n    if d[i] == list(reversed(d[i])) and i % 2 == 0:\n        ans += 1\nprint(ans)\n"}, "1960": {"problem_id": 1960, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef findLIS(a):\n    if a[0] == a[-1]:\n        return a[0]\n    else:\n        return a[-1]\n\ndef findLIS2(a):\n    if a[0] == a[-1]:\n        return a[0]\n    else:\n        return a[-1]\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(' '.join(map(str, a)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1961": {"problem_id": 1961, "answer": "n, m = list(map(int, input().split()))\nprint('YES' if n % 2 == 0 else 'NO')\nfor i in range(m):\n    print(''.join(str(i) for i in map(str, input())))"}, "1962": {"problem_id": 1962, "answer": "n, k, l = list(map(int, input().split()))\na = list(map(int, input().split()))\nm = n\u00b7k + l\nprint(max(a))\n"}, "1963": {"problem_id": 1963, "answer": "n = int(input())\na = list(map(int, input().split()))\nl, r = 0, 0\nfor i in range(n):\n    if a[i] % a[i] == 0:\n        l += 1\n    else:\n        r += 1\nprint(l, r)"}, "1964": {"problem_id": 1964, "answer": "n = int(input())\nk = list(map(int, input().split()))\nfor i in range(n):\n    k[i] += 1\nprint(int(k[0]))"}, "1965": {"problem_id": 1965, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n,x=map(int,input().split())\n    a=list(map(int,input().split()))\n    print(min(a))"}, "1966": {"problem_id": 1966, "answer": "from collections import defaultdict\n\ndef main():\n    n = int(input())\n    d = defaultdict(int)\n    for i in range(n):\n        d[i] += 1\n    print(d.values())\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1967": {"problem_id": 1967, "answer": "def main():\n    w,h=list(map(int,input().split()))\n    n=len(w)\n    if n==1:\n        print(\"*\")\n    elif n==2:\n        print(\"*\",end=\"\")\n    else:\n        for i in range(n-2):\n            if w[i]==\".\":\n                w[i]=\".\"\n            else:\n                w[i]=\"*\"\n                break\n        print(\"\".join(map(str,w)))\nmain()"}, "1968": {"problem_id": 1968, "answer": "n,v = list(map(int,input().split()))\ns = list(map(int,input().split()))\n\ndef dfs(s,i):\n    if i in s:\n        return s[i]\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    k = int(input())\n    ans += dfs(s[i],i)\nprint(ans)\n"}, "1969": {"problem_id": 1969, "answer": "from collections import deque\nn = int(input())\nmatrix = list(map(int, input().split()))\nfor i in range(n):\n    matrix[i] = list(map(int, input().split()))\n\ndef dfs(i, row, col, curr):\n    if curr == 0:\n        return 1\n    elif curr == 1:\n        return 0\n    else:\n        res = 0\n        for j in range(i, len(matrix)):\n            if matrix[i][j] == 'X':\n                res += dfs(i, j, col, curr)\n                res %= n\n            else:\n                res += dfs(i, j, col, curr)\n        return res\n\nprint(dfs(0, 0, n, 0))"}, "1970": {"problem_id": 1970, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve(matrix, board):\n    # print(matrix)\n    m = len(matrix)\n    n = len(board)\n    for i in range(m):\n        if board[i] == \"K\":\n            board[i] = \"#\"\n        elif board[i] == \"K\" and board[i] == \"#\":\n            board[i] = \"#\"\n        else:\n            board[i] = \"#\"\n            m -= 1\n            n -= 1\n    if board[0] == \"K\":\n        return \"YES\"\n    else:\n        return \"NO\"\n\ndef __starting_point():\n    solve(0,1)\n__starting_point()"}, "1971": {"problem_id": 1971, "answer": "n = int(input())\np = list(map(int, input().split()))\nfor i in range(n):\n    p[i] = int(input())\nprint(p[n])"}, "1972": {"problem_id": 1972, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        x, y, z = list(map(int, input().split()))\n        print((x, y, z))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "1973": {"problem_id": 1973, "answer": "from sys import stdin,stdout\nn=int(stdin.readline())\nl=list(map(int,stdin.readline().split()))\na=[]\nfor i in range(n):\n    a.append(list(map(int,stdin.readline().split())))\nprint('\\n'.join(a))"}, "1974": {"problem_id": 1974, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\nsafe = [False] * (m + 1)\nsafe[0] = True\nsafe[1] = True\nsafe[2] = True\nsafe[3] = True\nsafe[4] = True\nsafe[5] = True\nsafe[6] = True\nsafe[7] = True\nsafe[8] = True\nsafe[9] = True\nsafe[10] = True\nsafe[11] = True\nsafe[12] = True\nsafe[13] = True\nsafe[14] = True\nsafe[15] = True\nsafe[16] = True\nsafe[17] = True\nsafe[18] = True\nsafe[19] = True\nsafe[20] = True\nsafe[21] = True\nsafe[22] = True\nsafe[23] = True\nsafe[24] = True\nsafe[25] = True\nsafe[26] = True\nsafe[27] = True\nsafe[28] = True\nsafe[29] = True\nsafe[30] = True\nsafe[31] = True\nsafe[32] = True\nsafe[33] = True\nsafe[34] = True\nsafe[35] = True\nsafe[36] = True\nsafe[37] = True\nsafe[38] = True\nsafe[39] = True\nsafe[40] = True\nsafe[41] = True\nsafe[42] = True\nsafe[43] = True\nsafe[44] = True\nsafe[45] = True\nsafe[45] = True\nsafe[46] = True\nsafe[47] = True\nsafe[48] = True\nsafe[49] = True\nsafe[50] = True\nsafe[51] = True\nsafe[52] = True\nsafe[53] = True\nsafe[54] = True\nsafe[55] = True\nsafe[56] = True\nsafe[57] = True\nsafe[58] = True\nsafe[59] = True\nsafe[60] = True\nsafe[61] = True\nsafe[62] = True\nsafe[63] = True\nsafe[64] = True\nsafe[65] = True\nsafe[66] = True\nsafe[67] = True\nsafe[68] = True\nsafe[69] = True\nsafe[70] = True\nsafe[71] = True\nsafe[72] = True\nsafe[73] = True\nsafe[74] = True\nsafe[75] = True\nsafe[76] = True\nsafe[77] = True\nsafe[78] = True\nsafe[79] = True\nsafe[80] = True\nsafe[81] = True\nsafe[82] = True\nsafe[83] = True\nsafe[84] = True\nsafe[85] = True\nsafe[86] = True\nsafe[87] = True\nsafe[88] = True\nsafe[89] = True\nsafe[90] = True\nsafe[91] = True\nsafe[92] = True\nsafe[93] = True\nsafe[94] = True\nsafe[95] = True\nsafe[96] = True\nsafe[97] = True\nsafe[98] = True\nsafe[99] = True\nsafe[100] = True\nsafe[101] = True\nsafe[102] = True\nsafe[103] = True\nsafe[105] = True\nsafe[106] = True\nsafe[107] = True\nsafe[108] = True\nsafe[109] = True\nsafe[110] = True\nsafe[111] = True\nsafe[112] = True\nsafe[113] = True\nsafe[114] = True\nsafe[115] = True\nsafe[116] = True\nsafe[118] = True\nsafe[119] = True\nsafe[118] = True\nsafe[119] = True\nsafe[119a] = 0\nsafe[119b] = 0\nsafe[119c] = 0\nsafe[119d] = 0\nsafe[119e] = 0\nsafe[119f] = 0\nsafe[120] = 0\nsafe[121] = 0\nsafe[122] = 0\nsafe[123] = 0\nsafe[124] = 0\nsafe[125] = 0\nsafe[126] = 0\nsafe[127] = 0\nsafe[128] = 0\nsafe[129] = 0\nsafe[130] = 0\nsafe[131] = 0\nsafe["}, "1975": {"problem_id": 1975, "answer": "n, m = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    s.add(i)\nprint(len(s))\nfor i in range(m):\n    if s.intersection(s[i]):\n        print(i+1)\n    else:\n        print(i+1)\n"}, "1976": {"problem_id": 1976, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m, k = list(map(int, readline().split()))\n\nmatrix = [[] for i in range(n)]\nfor i in range(m):\n    matrix[i][i] = 1\n    for j in range(n):\n        matrix[i][j] = min(matrix[i-1][j], matrix[i][j-1], matrix[i-1][j-1])\n\n#print(matrix)\n\ndef main():\n    n, m, k, q = list(map(int, readline().split()))\n    matrix = [[] for i in range(n)]\n    for i in range(q):\n        x, y, t = list(map(int, readline().split()))\n        matrix[x][y] = t\n        for j in range(n):\n            matrix[x][y].append(t)\n            for k in range(m):\n                matrix[x][k].append(t)\n                for q in range(q):\n                    if q == 0:\n                        break\n                    else:\n                        x += 1\n                        y += 1\n                        t += 1\n                        if t == 0:\n                            break\n                        matrix[x][y].append(t)\n                        break\n                        \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                   \n                    \n                   "}, "1977": {"problem_id": 1977, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\ns = input()\na = list(map(str, s.split()))\nb = list(map(str, s.split()))\n\nfor i in range(n):\n    if a[i] <= b[i]:\n        a[i] = min(a[i], b[i])\n    else:\n        b[i] = min(b[i], a[i])\n\nprint(''.join(a))"}, "1978": {"problem_id": 1978, "answer": "from collections import defaultdict as dd\nn = int(input())\nedges = []\nfor _ in range(n):\n    m = int(input())\n    edges.append(dd(list(map(int, input().split()))))\n    \n    # print(edges)\n    if len(edges) == 0:\n        print(*edges[0])\n        continue\n    \n    d = dd(list(map(int, input().split())))\n    \n    # print(d)\n    d.sort(reverse=True)\n    \n    # print(d)\n    \n    # print(edges)\n    \n    # print(edges[0])\n    \n    # print(edges[1])\n    \n    # print(edges[2])\n    \n    \n    # print(edges[3])\n    \n    \n    # print(edges[4])\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "}, "1979": {"problem_id": 1979, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(a, b):\n    if len(a) == 0:\n        return 0\n    res = 0\n    for i in range(len(a)):\n        res += a[i]\n    return res\n\nprint(solve(a, b))\n"}, "1980": {"problem_id": 1980, "answer": "import sys\ninput = sys.stdin.readline\n\nn, a = list(map(int, input().split()))\nd = list(map(int, input().split()))\n\ndef get_max(l, r):\n    if l == r:\n        return 0\n    elif l == 0:\n        return 1\n    else:\n        return max(d[l] - d[r], get_max(l, r))\n\ndef get_min(l, r):\n    if l == 0:\n        return 0\n    elif l == r:\n        return 1\n    else:\n        return min(d[l] - d[r], get_min(l, r))\n\ndef __starting_point():\n    n, a = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    print(get_max(a, d))\n__starting_point()"}, "1981": {"problem_id": 1981, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\nl = [set() for i in range(n)]\nq = deque([])\nfor i in range(n - 1):\n    q.append(i)\n    l.add(i)\n\ndef find(l, i):\n    if l[i] == i:\n        return i\n    else:\n        return find(l, i)\n\ndef union(l, i, j):\n    r = find(l, i)\n    c = find(l, j)\n    if r!= c:\n        l[r] = c\n        l[c] = r\n\ndef main():\n    n, m = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    q = deque([])\n    for i in range(n - 1):\n        a, b = list(map(int, input().split()))\n        if find(l, i) == find(l, b):\n            break\n        if a > b:\n            l[a] = b\n            l[b] = a\n            union(l, i, b)\n            continue\n        if a == b:\n            l[a] = b\n            l[b] = a\n            union(l, i, b)\n            continue\n        if find(l, i) == find(l, a):\n            l[a] = b\n            l[b] = a\n            union(l, i, b)\n            continue\n        if a == b:\n            l[a] = a\n            l[b] = b\n            union(l, i, a)\n            continue\n        if a == b:\n            l[a] = b\n            l[b] = a\n            union(l, i, b)\n            continue\n        if a == b:\n            l[a] = a\n            l[b] = b\n            union(l, i, a)\n            continue\n        if a == b:\n            l[a] = b\n            l[b] = a\n            union(l, i, b)\n            continue\n        if a == b:\n            l[a] = a\n            l[b] = b\n            union(l, i, a)\n            continue\n        if a == b:\n            l[a] = a\n          "}, "1982": {"problem_id": 1982, "answer": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    if n % 2 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "1983": {"problem_id": 1983, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(len(a) - len(b))\n"}, "1984": {"problem_id": 1984, "answer": "n, m, k, w = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    x, y, x_1, y_1, x_2, y_2, l.append(x)\nl.sort()\nd = {}\nfor i in range(m):\n    if l[i] == \"a\":\n        d[l[i]].append(i)\n    else:\n        d[l[i]].append(i)\nd[0] = 1\nans = 0\nfor i in range(1, n):\n    if l[i] == \"a\":\n        ans += d[l[i]].pop()\n        d[l[i]].pop(0)\nprint(ans)\n"}, "1985": {"problem_id": 1985, "answer": "def main():\n    k,n = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    for i in range(n):\n        a[i] = b[i]\n    print(len(a))\ndef __starting_point():\n    main()\n__starting_point()"}, "1986": {"problem_id": 1986, "answer": "n, k = map(int, input().split())\nl = list(map(int, input().split()))\nmax=0\nfor i in range(n):\n    f, t = map(int, input().split())\n    if t <= k:\n        max = max + f\n    else:\n        max = max + t - k\nprint(max)"}, "1987": {"problem_id": 1987, "answer": "n, c1, c2 = list(map(int, input().split()))\n\ndef __starting_point():\n    n, c1, c2 = list(map(int, input().split()))\n    if n == 1:\n        return 0\n    elif n == 2:\n        return c1 * c2\n    elif n == 3:\n        return c1 * c2 + c2\n    elif n == 4:\n        return c1 * c2 + c2\n    else:\n        m = (c1 - 1)**2 + c2\n        for i in range(n):\n            if i % 2 == 0:\n                m = min(m, i // 2)\n        print(m)\n\n__starting_point()"}, "1988": {"problem_id": 1988, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    l = len(s)\n    k = 0\n    for i in range(n-k+1):\n        if s[i:i+k-1] not in l:\n            l.append(s[i:i+k-1])\n        else:\n            k += 1\n            if k == 0:\n                print(l)\n            else:\n                print(k)\n                break\n            k = 0\n            l.pop(0)\n            k -= 1\n            if k == 0:\n                print(l)\n            else:\n                print(k)\n                break\n            k = 0\n            l.pop(0)\n            k -= 1\n            if k == 0:\n                print(l)\n            else:\n                print(k)\n                break\n            k = 0\n            l.pop(0)\n            k -= 1\n            if k == 0:\n                print(l)\n            else:\n                print(k)\n                break\n            k = 0\n            l.pop(0)\n            k -= 1\n            if k == 0:\n                print(l)\n            else:\n                print(k)\n                break\n            k = 0\n            l.pop(0)\n            k -= 1\n            if k == 0:\n                print(l)\n            else:\n                print(k)\n                break\n            k = 0\n            l.pop(0)\n            k -= 1\n            if k == 0:\n                print(l)\n            else:\n    "}, "1989": {"problem_id": 1989, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = 1\nprint(a[-1])"}, "1990": {"problem_id": 1990, "answer": "def main():\n    n = int(input())\n    s = input()\n    print(len(s))\n    for i in range(n):\n        if s[i] == 'L':\n            print(i)\n        else:\n            print(i + 1)\n            \ndef __starting_point():\n    main()\n\n__starting_point()"}, "1991": {"problem_id": 1991, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(min(a))\n"}, "1992": {"problem_id": 1992, "answer": "n, m, k = list(map(int, input().split()))\napplications = []\nfor i in range(n):\n    actions.append(int(input()))\napplications.sort(reverse=True)\nprint(len(applications))\n"}, "1993": {"problem_id": 1993, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    s = [['.' for i in range(n)] for i in range(m)]\n    print('\\n'.join(s))\n\nmain()\n"}, "1994": {"problem_id": 1994, "answer": "s = input()\nfor i in range(len(s)):\n    s.append(s[i] +'')\nprint(len(s))"}, "1995": {"problem_id": 1995, "answer": "s = input()\nn = len(s)\nl, r, k = 0, 0, 0\nfor i in range(n):\n    l += int(s[i])\n    r += int(s[i])\n    k += 1\n    if k == 0:\n        k = 0\n    elif k == 1:\n        k = 1\n    else:\n        k = 0\nprint(s)"}, "1996": {"problem_id": 1996, "answer": "n = int(input())\ns = input()\nl = len(s)\nfor i in range(n):\n    if s[i] == s[i-1]:\n        l -= 1\n        s[i] = s[i-1]\n    else:\n        l -= 1\nprint(l)"}, "1997": {"problem_id": 1997, "answer": "n = int(input())\nl = list(map(int,input().split()))\n\ndef dfs(node,edges):\n    if node in edges:\n        return edges[node]\n    else:\n        return max(edges[node],edges[node])\n\ndef dfs2(node,edges):\n    if node in edges:\n        return edges[node]\n    else:\n        return min(edges[node],max(edges[node],edges[node]))\n\ndef dfs(node,edges):\n    if node in edges:\n        return edges[node]\n    else:\n        return max(edges[node],dfs(node,edges[node]))\n\nclass Tree:\n    def __init__(self,nodes):\n        self.nodes = nodes\n        self.leafs = []\n        self.edges = []\n        self.max = 0\n        self.min = 0\n        self.max_leafs = 0\n        self.leafs.append(nodes)\n        self.edges.append(nodes)\n        self.max_leaves = 0\n        self.leafs.append(nodes)\n        self.max_leaves = 0\n        self.leafs.append(nodes)\n        self.max_leaves += 1\n        self.leafs.append(nodes)\n        self.max_leaves -= 1\n        self.leafs.append(nodes)\n        self.leafs.append(nodes)\n        self.max_leaves -= 1\n        self.leafs.append(nodes)\n        self.leafs.append(nodes)\n        self.max_leaves += 1\n\ndef main():\n    n = int(input())\n    edges = list(map(int,input().split()))\n    dfs(0,set())\n    print(len(edges))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "1998": {"problem_id": 1998, "answer": "from collections import deque\nn, a, b, k = list(map(int, input().split()))\ns = input()\nd = [[] for _ in range(n)]\nfor i in range(n):\n    d[i].append(i+1)\n    s = s.split()\n    if len(s) == 1:\n        d[i].append(i+1)\n    else:\n        d[i].append(i+1)\nprint(len(d))\nfor i in d:\n    print(i)\n"}, "1999": {"problem_id": 1999, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = set()\nfor i in range(n):\n    s.add(i)\n    print(s.intersection(s))\n"}, "2000": {"problem_id": 2000, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(2)\nfor i in range(n):\n    print(a[i], end=\" \")\n    print(a[i+a[i]], end=\" \")\n"}, "2001": {"problem_id": 2001, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nn, q = list(map(int, input().split()))\ns = input()\nl = list(map(int, input().split()))\n\ndef max_eat(i, j):\n    if i == j:\n        return 1\n    elif i == 0:\n        return 0\n    else:\n        return max(l[i] + l[j] + max_eat(i + 1, j + 1), l[i] + l[j] + max_eat(i + 1, j + 1))\n\nfor i in range(q):\n    l.append(s[i])\n    s[i] = s[i] + '1'\n\nprint(max_eat(0, n - 1))\n"}, "2002": {"problem_id": 2002, "answer": "from sys import stdin, stdout\ninput = lambda: stdin.readline().strip()\nn = int(input())\nedges = [[] for i in range(n)]\nedges[0] = list(map(int, input().split()))\nedges[1] = list(map(int, input().split()))\ndef dfs(vertex):\n    if vertex in edges[vertex]:\n        return sum(edges[vertex].pop() for vertex in edges[vertex] if vertex!=vertex[0]))\n    else:\n        return 0\nfor i in range(2, n):\n    x, y = list(map(int, input().split()))\n    if x == y:\n        print(str(x))\n    elif x % 2 == y % 2:\n        print(str(x // 2))\n    else:\n        print(str(x // 2))"}, "2003": {"problem_id": 2003, "answer": "from itertools import combinations\n\nq = int(input())\nfor _ in range(q):\n    x = input()\n    x.replace('+','')\n    x.replace('?','')\n    x.replace('+','')\n    x.replace('?','')\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n    x.pop(0)\n "}, "2004": {"problem_id": 2004, "answer": "from math import ceil, log2\nn = int(input())\nl = list(map(int, input().split()))\nfor i in range(n):\n    print(l[i], end=' ')\n    l[i] += 1\n\n#print(l)\n#print(l[0])\n#print(l[n-1])\n#print(l[n-2])\n#print(l[n-3])\n#print(l[n-4])\n#print(l[n-5])\n#print(l[n-6])\n#print(l[n-7])\n#print(l[n-8])\n#print(l[n-9])\n#print(l[n-10])\n#print(l[n-11])\n#print(l[n-12])\n#print(l[n-13])\n#print(l[n-14])\n#print(l[n-15])\n#print(l[n-16])\n#print(l[n-17])\n#print(l[n-18])\n#print(l[n-19])\n#print(l[n-20])\n#print(l[n-21])\n#print(l[n-22])\n#print(l[n-23])\n#print(l[n-24])\n#print(l[n-25])\n#print(l[n-26])\n#print(l[n-27])\n#print(l[n-28])\n#print(l[n-29])\n#print(l[n-30])\n#print(l[n-31])\n#print(l[n-32])\n#print(l[n-33])\n#print(l[n-34])\n#print(l[n-35])\n#print(l[n-36])\n#print(l[n-37])\n#print(l[n-38])\n#print(l[n-39])\n#print(l[n-40])\n#print(l[n-41])\n#print(l[n-42])\n#print(l[n-43])\n#print(l[n-44])\n#print(l[n-45])\n#print(l[n-46])\n#print(l[n-47])\n#print(l[n-48])\n#print(l[n-49])\n#print(l[n-50])\n#print(l[n-51])\n#print(l[n-52])\n#print(l[n-53])\n#print(l[n-54])\n#print(l[n-55])\n#print(l[n-56])\n#print(l[n-57])\n#print(l[n-58])\n#print(l[n-59])\n#print(l[n-60])\n#print(l[n-61])\n#print(l[n-62])\n#print(l[n-63])\n#print(l[n-64])\n#print(l[n-66])\n#print(l[n-66])\n#print(l[n-67])\n#print(l[n-68])\n#print(l[n-69])\n#print(l[n-70])\n#print(l[n-71])\n#print(l[n-72])\n#print(l[n-72])\n#print(l[n-73])\n#print(l[n-74])\n#print(l[n-75])\n#print(l[n-76])\n#print(l[n-77])\n#print(l[n-78])\n#print(l[n-79])\n#print(l[n-80])\n#print(l[n-81])\n#print(l[n-82])\n#print(l[n-83])\n#print(l[n-84])\n#print(l[n-85])\n#print(l[n-86])\n#print(l[n-87])\n#print(l[n-88])\n#print(l[n-89])\n#print(l[n-90])\n#print(l[n-91])\n#print(l[n-92])\n#print(l[n-93])\n#print(l[n-"}, "2005": {"problem_id": 2005, "answer": "from math import ceil\nn, n_1, n_2 = list(map(int, input().split()))\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n\ndef find_max(a, b):\n    if a[b[0]] > b[0]:\n        return a[b[0]]\n    else:\n        return b[0]\n\ndef find_min(a, b):\n    if a[b[0]] > b[0]:\n        return a[b[0]]\n    else:\n        return b[0]\n\ndef solve(a, b):\n    if a[b[0]] > b[0]:\n        return a[b[0]]\n    else:\n        return max(find_max(a, b), find_max(b, a))\n\ndef __starting_point():\n    solve(1, 1)\n__starting_point()"}, "2006": {"problem_id": 2006, "answer": "from bisect import *\nn, m = list(map(int, input().split()))\nd = [[] for i in range(n)]\nfor i in range(n):\n    d[i].append(i+1)\ns = input()\nd = [[] for i in range(n)]\nfor i in range(n):\n    s = input()\n    d[s].append(i+1)\n\nprint(max(d))\n"}, "2007": {"problem_id": 2007, "answer": "import math\nn,m=map(int,input().split())\ns=list(input())\nfor i in range(n):\n    x,y=map(str,input().split())\n    if(s[x]=='a'):\n        print(-1)\n    else:\n        print(max(s[x],s[y]))\n"}, "2008": {"problem_id": 2008, "answer": "n = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n    a,b = list(map(int,input().split()))\n    if a>b:\n        print(a)\n    elif b>a:\n        print(b)\n    else:\n        print(a*b)\n"}, "2009": {"problem_id": 2009, "answer": "n = int(input())\nr = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    r[i] = list(map(int, input().split()))\nprint(ans)"}, "2010": {"problem_id": 2010, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nq = [0] * (n + 1)\nfor i in range(m):\n    q[i] += a[i]\n\nfor i in range(n):\n    q[i] += q[i] - a[i]\n\nprint('\\n'.join(map(str, q)))\n"}, "2011": {"problem_id": 2011, "answer": ""}, "2012": {"problem_id": 2012, "answer": "n = int(input())\ns = input()\na = 0\nfor i in range(n):\n    if s[i] == s[i-1]:\n        a += 1\n    else:\n        a += 1\nprint(a)"}, "2013": {"problem_id": 2013, "answer": "from bisect import bisect_left as bl, bisect_right as br, bisect_left as br_right, bisect_right as br_left\nfrom heapq import heapify, heappop, heappush, heappushpop\nfrom collections import deque,defaultdict,defaultr\nfrom functools import reduce,cmp_to_key\nfrom operator import xor,and,lru_cache,mul,floors,sqrt,factorial,ceil,frozenset,squared,ast = lambda: map(int,input().split())\nfrom itertools import combinations,accumulate,combinations,groupby,reduce,power,mod,str,getcontextlib# for I/O\nfrom fractions import Fraction,Decimal\nfrom operator import itemgetter,mul,floors,sqrt,factorial,ceil,frozenset,squared,ast\nfrom statistics import mean,median,round,factorials,coefficient,acos,atan,asin,atan_os,asin_os,asin_asin,asin_atan,asin_atan_os\nfrom math import ceil,floor,sqrt,factorial,log,log2,pi,radix,sin,slope,u,copysorff,cumsum,comparisons,dis,bfs,bisect,insort,insort_bisect,insort_copysorff,insort_comparisons,insort_mul,insort_asin,insort_asin_copysorff,insort_acos,asin_asin,asin_asin_copysorff,asin_asin_mul,asin_asin_copysorff,asin_asin_copysorm,asin_asin_mul_copysorcopysorop,asin_asin_mul_copysorcopysorop\nfrom queue import *\nfrom time import perf_counter,getcontext\nfrom bisect import bisect_left as bl, bisect_right as br, bisect_left as br_right, bisect_right as br_left, bisect_right as br_left, bisect_right as br_left, bisect_right as br_left\nfrom numpy import array,doubled as dot,fill,fill_,isocal,ast as anse,ceil,frozenset,squared,ast_cross,heapq as h,memoize as m\nfrom scipy.signal import convolve,pow,gcd,linalg as lt,inf,gcd,mod,inf,mod_inf,nan\nfrom statistics import mean,median,round,factorial,acos,atan,asin,atan_os,asin_os,asin_asin,asin_atan,asin_atan_os\nfrom functools import lru_cache,reduce,cmp_to_key,lru_statistics,subtract,reduce,timed_query\nfrom heapq import heapify,heappop,heappush,heap,heap_pop,heappushpop,heapify,heappushpoppop,heapifypoppop,heapifypoppop,heapifypoppop,heapifypoppop,heapifypoppop,heapifypoppop,heapifypop\nfrom unittest import shuffle as _,compress as sh, tee_test as tee, minathan as me, maxy as mii, pluv as77588, randon_Dhaka as rDhaka\nfrom bisect import bisect_left as bl, bisect_right as br, bisect_left as br_right, bisect_right as br_left, bisect_right as br_left, bisect_right as br_left, bisect_right as br_left\nfrom functools import lru_cache,reduce,cmp_to_key,lru_statistics,subtract,reduce,timed_query\nfrom operator import itemgetter,mul,floors,sqrt,factorial,ceil,frozenset,squared,ast,ast_cross,heapq as h,memoize as m\nfrom typing import List, Dict, Set, ListQ, Tuple, Union, List, org, OrderedDict, OrderedSet, OrderedSetQ, OrderedSetS, SwigTime, Int\nfrom functools import lru_cache,reduce,cmp_to_key,linalg as l, li, COLS"}, "2014": {"problem_id": 2014, "answer": "from collections import deque\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    l = [set(x) for x in input().split()]\n    print(len(l))\n\n__starting_point()"}, "2015": {"problem_id": 2015, "answer": "def main():\n    t = int(input())\n    for _ in range(t):\n        r, g, b = list(map(int, input().split()))\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if g*3 < b else \"No\"\n        print(\"Yes\") if b*3 < r else \"No\"\n        print(\"Yes\") if b*3 < r else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n        print(\"Yes\") if r*3 < b else \"No\"\n      "}, "2016": {"problem_id": 2016, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    q, m = list(map(int, input().split()))\n    for _ in range(q):\n        k, a, b = list(map(int, input().split()))\n        if a <= b <= 10 ** 6:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2017": {"problem_id": 2017, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = a[i] - a[i-1]\nprint(sum(a))"}, "2018": {"problem_id": 2018, "answer": "n, m, q = map(int, input().split())\ns = list(map(int, input().split()))\ne = list(map(int, input().split()))\n\nans = \"YES\" if q == 1 or m == 1 or s[0] == 1 else \"NO\"\n\nprint(\"YES\" if q == 1 or m == 1 or s[0] == 2 else \"NO\")\n"}, "2019": {"problem_id": 2019, "answer": "for _ in range(int(input())):\n s = input()\n if s[0] == '0':\n  print(\"DA\")\n else:\n  print(\"NET\")\n"}, "2020": {"problem_id": 2020, "answer": "n = int(input())\nx, y = map(int, input().split())\nfor i in range(n):\n    x[i] = x.pop(0)\n    y[i] = y.pop(0)\n\nprint(min(x, y))"}, "2021": {"problem_id": 2021, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nq = list(map(int, input().split()))\ncnt = 0\nfor i in range(m):\n    q.append(a[i])\n    cnt += a[i]\nprint(cnt)"}, "2022": {"problem_id": 2022, "answer": "# cook your dish here\nimport math\nn,m,k=map(int,input().split())\ngraph=[[] for i in range(n)]\nfor i in range(m):\n    u,v=map(int,input().split())\n    graph[u-1].append(v-1)\n    graph[v-1].append(u-1)\n#print(graph)\nedges=[]\nfor i in range(n):\n    if graph[i]:\n        edges.append(i)\n        continue\n    else:\n        edges.append(i)\n#print(edges)\nedges.sort()\nedges.sort(reverse=True)\nq=int(input())\nfor _ in range(q):\n    x,y=map(int,input().split())\n    if x!=y:\n        print(1)\n        continue\n    if len(edges)==k:\n        print(2)\n        continue\n    q=math.ceil(k/2)\n    if q>=2147483647:\n        print(3)\n        continue\n    c=0\n    for i in edges:\n        if i!=x:\n            c+=1\n            q=math.ceil(k/2)\n            if q>=2147483647:\n                print(2)\n                continue\n            else:\n                print(3)\n                continue\n        elif q>=2147483647:\n            print(3)\n            continue\n        else:\n            print(2)\n            continue\n    print(c)"}, "2023": {"problem_id": 2023, "answer": "from collections import defaultdict\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef dfs(i, j, k):\n    if i == 0:\n        return 0\n    elif j == 0:\n        return 1\n    else:\n        i -= 1\n        j -= 1\n        k -= 1\n        if k > 0:\n            k = 0\n            i = 0\n        else:\n            k = 0\n            j = 0\n            while j < len(a) and k > 0:\n                k += 1\n                j += 1\n            if j == 0:\n                return 1\n            elif k == 0:\n                return 0\n            else:\n                return 0\n            \ndfs(0, 0, k)\nprint(a[0])\nprint(b[0])\nprint(a[-1])\nprint(b[-1])\n"}, "2024": {"problem_id": 2024, "answer": "from math import ceil\nn = int(input())\na = list(map(int, input().split()))\nm = 998244353\nfor i in range(n):\n    x = int(input())\n    if x == 0:\n        print(0)\n    else:\n        m = max(m, x)\n        x = 0\n        for j in range(1, x):\n            if j == 0:\n                x = 0\n            elif x == 1:\n                x = x - 1\n            else:\n                x = x - 1\n                x = x - 1\n        print(m)\n"}, "2025": {"problem_id": 2025, "answer": "from math import ceil\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    s = 0\n    for i in range(1, ceil(n**0.5) + 1):\n        if n % i == 0:\n            s += i\n    print(s)\n"}, "2026": {"problem_id": 2026, "answer": "from math import ceil\n\ndef f(x, y, xi, yi):\n    if xi == 0:\n        return 1\n    elif yi == 0:\n        return 1\n    elif xi == xi + 1:\n        return 1\n    elif yi == yi + 1:\n        return 1\n    else:\n        return f(x, y, xi, yi)\n\nn = int(input())\n\npts = [0] * (n + 1)\n\nfor i in range(n):\n    pts[i] = f(pts[i], pts[i - 1], pts[i - 1] + 1, pts[i - 1] + 1)\n\nprint(pts[n])\n"}, "2027": {"problem_id": 2027, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = 0\nprint(' '.join(map(str, a)))"}, "2028": {"problem_id": 2028, "answer": "from math import ceil\n\nMOD = 1000000007\n\ndef calc(n, k):\n    if k == 1:\n        return pow(n, k-1, MOD)\n    elif k == 2:\n        return pow(n, k-1, MOD)\n    else:\n        return calc(n-1, k-1)\n\ndef calc(n, k):\n    if k == 1:\n        return pow(n, k-1, MOD)\n    elif k == 2:\n        return pow(n, k-1, MOD)\n    else:\n        return calc(n-1, k-1)\n\nn = int(input())\nE = []\nfor i in range(n):\n    E.append(calc(i, 1))\n\nE.sort(reverse=True)\n\nprint(sum(E))\n"}, "2029": {"problem_id": 2029, "answer": "from math import ceil\ndef solve(n,s):\n    d = ceil(s**0.5)\n    if n == 0:\n        return 0\n    elif n == 1:\n        return d\n    else:\n        a = [0]*(n-1)\n        b = [0]*(n-1)\n        for i in range(1,n-1):\n            a[i] = max(a[i-1],a[i-2])\n        for i in range(1,n-1):\n            b[i] = max(b[i-1],b[i-2])\n        return d\n\ndef __starting_point():\n    n,s = list(map(int,input().split()))\n    tree = []\n    for i in range(n-1):\n        tree.append(solve(i,s))\n    tree.sort()\n    print(solve(0,0))\n__starting_point()"}, "2030": {"problem_id": 2030, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nmax = 0\nmin = 0\nfor i in range(n):\n    if a[i] == a[i-1]:\n        max = max.copy()\n        min = min.copy()\n    else:\n        min = min.copy()\n        max = max.copy()\n    print(max, min)\n"}, "2031": {"problem_id": 2031, "answer": ""}, "2032": {"problem_id": 2032, "answer": ""}, "2033": {"problem_id": 2033, "answer": ""}, "2034": {"problem_id": 2034, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    cities = [-1] * n\n    for i in range(m):\n        cities[i] = 0\n        for j in range(n):\n            cities[j] = 1\n            if i == 0:\n                cities[i] = 0\n            elif j == 0:\n                cities[i] = 1\n            else:\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n                cities[i] = 0\n                cities[j] = 1\n   "}, "2035": {"problem_id": 2035, "answer": "from sys import stdin,stdout\nn,s = list(map(int,stdin.readline().split()))\nl = list(map(int,stdin.readline().split()))\nr = list(map(int,stdin.readline().split()))\nprint(len(l))\nfor i in range(n):\n    x,y = list(map(int,stdin.readline().split()))\n    if x == y:\n        print(0)\n        continue\n    print(max(l[x] - l[y],r[x] - r[y]))\n"}, "2036": {"problem_id": 2036, "answer": "from collections import deque\nn, m, s = list(map(int, input().split()))\na = [list(map(int, input().split())) for i in range(n)]\ns = [list(map(int, input().split())) for i in range(n)]\nq = deque([0])\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    q.append(x)\n    s[x].append(y)\n    q.append(y)\n\nprint('\\n'.join(map(str, q)))\n"}, "2037": {"problem_id": 2037, "answer": "from collections import deque\ndef solve(d):\n    d.sort()\n    for i in range(d[0]):\n        if d[i] == d[i-1]:\n            d[i] = d[i-1]\n        else:\n            d[i] = d[i-1]\n    return d[0]\n\nn, m = map(int, input().split())\nprint(solve(n))"}, "2038": {"problem_id": 2038, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sorted(a)\nfor i in range(n):\n    if s[i]>s[i-1]:\n        s[i] = s[i-1]\nprint(1)\n"}, "2039": {"problem_id": 2039, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(len(a))"}, "2040": {"problem_id": 2040, "answer": "from collections import deque\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(a[0] + b[0])\n__starting_point()"}, "2041": {"problem_id": 2041, "answer": ""}, "2042": {"problem_id": 2042, "answer": "n, m, k = map(int, input().split())\ns = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    s.append(x*y)\ns.sort()\nprint(max(s[0], len(s)-1))"}, "2043": {"problem_id": 2043, "answer": "from sys import stdin,stdout\ndef main():\n    s = stdin.readline().strip()\n    n = len(s)\n    for i in range(n):\n        s[i] ='' + s[i]\n    print(len(s))\n\nmain()\n"}, "2044": {"problem_id": 2044, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint(len(a))"}, "2045": {"problem_id": 2045, "answer": "n = int(input())\ns = list(map(int, input().split()))\nprint(s[::-1])"}, "2046": {"problem_id": 2046, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    if s[0] == '1':\n        print(s.count('1'))\n    else:\n        print(s.count('1' - s.count('1')))\n"}, "2047": {"problem_id": 2047, "answer": "n = int(input())\nb = sorted(map(int, input().split()))\na = [0]*n\nb.append(a[0])\nfor i in range(1, n):\n    if b[i] == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "2048": {"problem_id": 2048, "answer": "n = int(input())\ns = list(map(int, input().split()))\nc = list(map(int, input().split()))\nfor i in range(n):\n    if s[i] == s[i-1]:\n        c.append(i)\nprint(min(c))"}, "2049": {"problem_id": 2049, "answer": "n, m = map(int, input().split())\na = list(map(int, input().split()))\nq = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    q.append(l)\n    q.append(r)\nprint('Yes\\n' if q[0] =='' else 'No')"}, "2050": {"problem_id": 2050, "answer": "n, k = map(int, input().split())\ns = set(map(int, input().split()))\nprint(min(s, k))"}, "2051": {"problem_id": 2051, "answer": "n, m, k = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\ndef solve(l, r):\n    if l == 0:\n        return 0\n    elif r == 0:\n        return 1\n    elif l == 1:\n        return 2\n    else:\n        return 3\n\ndef __starting_point():\n    n, m, k = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    for i in range(n):\n        l, r = list(map(int, input().split()))\n        print(solve(l, r))\n__starting_point()"}, "2052": {"problem_id": 2052, "answer": "from collections import Counter\ns = 0\nfor i in range(0,len(s)):\n    s += s[i]\n    if s[i] == 0:\n        s += 1\nprint(s)"}, "2053": {"problem_id": 2053, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a[i] - b[i]\n    if s > 0:\n        s -= a[i] - b[i]\n        print(s)\n    else:\n        print(0)\n"}, "2054": {"problem_id": 2054, "answer": "for _ in range(int(input())):\n    a, b = map(int, input().split())\n    print(max(a, b))"}, "2055": {"problem_id": 2055, "answer": "def main():\n    n = int(input())\n    for _ in range(n):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        ans = 0\n        for i in range(n):\n            if a[i] == b[i]:\n                ans += 1\n            else:\n                ans += 1\n        print('YES')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2056": {"problem_id": 2056, "answer": "from sys import stdin, stdout\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\nans = 0\nfor i in range(n):\n    ans += a[i] ^ a[i+1]\nprint(ans)\n"}, "2057": {"problem_id": 2057, "answer": "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nans = 0\nfor i in range(n):\n    if l[i] <= l[i-1]:\n        ans += 1\nprint(ans)\n"}, "2058": {"problem_id": 2058, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort as br\nfrom heapq import heappush,heappop\n\ndef find_sum(a,b):\n    if len(a) == 0:\n        return 0\n    elif len(b) == 0:\n        return bisect_left(a,b)\n    else:\n        res = 0\n        for i in range(len(a)):\n            res += find_sum(a,i)\n        return res\n\ndef __starting_point():\n    print(find_sum(123,123))\n__starting_point()"}, "2059": {"problem_id": 2059, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = int(input())\nprint(a[-1])"}, "2060": {"problem_id": 2060, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nfor i in range(n):\n    x = int(input())\n    if x == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "2061": {"problem_id": 2061, "answer": "n, m, k = list(map(int, input().split()))\nlakes = 0\nfor i in range(n):\n    if i == 0:\n        lakes += 1\n    else:\n        break\nif k == m:\n    print(1)\n    return\nprint(lakes)\n"}, "2062": {"problem_id": 2062, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n)"}, "2063": {"problem_id": 2063, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, w = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef dfs(i, j):\n    if i == 0:\n        return 0\n    elif j == 0:\n        return 1\n    else:\n        return max(dfs(i-1, j), dfs(i, j-1))\n\ndef dfs2(i, j):\n    if i == 0:\n        return 0\n    elif j == 0:\n        return 1\n    else:\n        return max(dfs2(i-1, j), dfs2(i, j-1))\n\ndef dfs1(i, j):\n    if i == 0:\n        return 0\n    elif j == 0:\n        return 1\n    else:\n        return max(dfs1(i-1, j), dfs1(i, j-1))\n\ndef dfs2(i, j):\n    if i == 0:\n        return 0\n    elif j == 0:\n        return 1\n    else:\n        return max(dfs2(i-1, j), dfs2(i, j-1))\n\nprint(dfs1(0, 0))\nprint(dfs2(0, 1))\nprint(dfs1(1, 0))\nprint(dfs2(1, 1))\nprint(dfs1(2, 0))\nprint(dfs2(2, 1))\nprint(dfs1(3, 0))\nprint(dfs2(3, 1))\nprint(dfs1(4, 0))\nprint(dfs2(4, 1))\nprint(dfs1(5, 0))\nprint(dfs2(5, 1))\nprint(dfs1(6, 0))\nprint(dfs2(6, 1))\nprint(dfs1(7, 1))\nprint(dfs2(7, 2))\nprint(dfs1(8, 2))\nprint(dfs2(8, 3))\nprint(dfs1(9, 3))\nprint(dfs2(9, 4))\nprint(dfs1(10, 4))\nprint(dfs2(10, 5))\nprint(dfs1(10, 6))\nprint(dfs2(10, 7))\nprint(dfs1(10, 8))\nprint(dfs2(10, 9))\nprint(dfs1(11, 9))\nprint(dfs2(11, 10))\nprint(dfs1(12, 10))\nprint(dfs2(12, 11))\nprint(dfs1(13, 11))\nprint(dfs2(13, 12))\nprint(dfs1(14, 12))\nprint(dfs2(14, 13))\nprint(dfs1(15, 13))\nprint(dfs2(15, 14))\nprint(dfs1(16, 14))\nprint(dfs2(16, 15))\nprint(dfs1(17, 15))\nprint(dfs2(17, 16))\nprint(dfs1(18, 16))\nprint(dfs2(18, 17))\nprint(dfs1(19, 17))\nprint(dfs2(19, 18))\nprint(dfs1(20, 18))\nprint(dfs2(20, 19))\nprint(dfs1(21, 19))\nprint(dfs2(21, 22))\nprint(dfs1(22, 22))\nprint(dfs2(22, 23))\nprint(dfs1(23, 23))\nprint(dfs2(23, 24))\nprint(dfs1(25, 24))\nprint(dfs2(25, 25))\nprint(dfs1(26, 25))\nprint(dfs2(26, 26))\nprint(dfs1(27, 26))\nprint(dfs2"}, "2064": {"problem_id": 2064, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\ns = list(map(int,stdin.readline().split()))\nprint(s[0])"}, "2065": {"problem_id": 2065, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\na = [int(x) for x in input().split()]\nfor i in range(m):\n    a[i] = a[i] + 1\nprint(*a)"}, "2066": {"problem_id": 2066, "answer": "for _ in range(int(input())):\n    s = input()\n    if len(s) == 0:\n        print('No answer')\n    else:\n        for i in range(len(s)):\n            if s[i] == s[i - 1]:\n                print(''.join(s[i:i + 1]))\n                break\n        else:\n            print(''.join(s[:i]))"}, "2067": {"problem_id": 2067, "answer": ""}, "2068": {"problem_id": 2068, "answer": "n = int(input())\nname1 = []\nname2 = []\n\nfor i in range(n):\n    name1.append(input())\n    name2.append(input())\n\nname1.sort()\nname2.sort()\n\ns = 0\nfor i in range(len(name1)):\n    if name1[i] in name2:\n        s += 1\n    else:\n        s = 0\n\nprint(s)"}, "2069": {"problem_id": 2069, "answer": "n, m = list(map(int, input().split()))\np = [0] * (n + 1)\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    p[a] += b\n    p[b] += a\n\nprint(p[n])\n"}, "2070": {"problem_id": 2070, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort_left as insort, insort_right as ir, insort_top as iir, bisect_bottom as bs, bisect_left as left, bisect_right as right, insort_top as top, insort_bottom as bottom\n\ndef __starting_point():\n    x, y, z = list(map(int, input().split()))\n    print(bisect_left(x, y, z))\n\n__starting_point()"}, "2071": {"problem_id": 2071, "answer": "from collections import defaultdict\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nm = 0\nfor i in range(n):\n    m += a[i]\n    b.append(i)\nprint(m)"}, "2072": {"problem_id": 2072, "answer": "import sys\nread = sys.stdin.read\n\nn = int(read())\nx = list(map(int, read().split()))\n\ndef inp():\n    return int(read())\n\ndef read_int():\n    return int(read())\n\ndef read_ints():\n    return list(map(int, read().split()))\n\ndef read_ints_f():\n    return list(map(int, read().split()))\n\ndef read_ints_l():\n    return list(map(int, read().split()))\n\ndef read_ints_r():\n    return list(map(int, read().split()))\n\ndef read_ints_s():\n    return list(map(int, read().split()))\n\ndef read_ints_s_f():\n    return list(map(int, read().split()))\n\ndef read_ints_r_f():\n    return list(map(int, read().split()))\n\ndef read_ints_l_f():\n    return list(map(int, read().split()))\n\ndef read_ints_s_f():\n    return list(map(int, read().split()))\n\ndef read_ints_r_f():\n    return list(map(int, read().split()))\n\ndef read_ints_l_f():\n    return list(map(int, read().split()))\n\ndef read_ints_s_f():\n    return list(map(int, read().split()))\n\ndef read_ints_r_f():\n    return list(map(int, read().split()))\n\ndef read_ints_s_f():\n    return list(map(int, read().split()))\n\ndef read_ints_r_l():\n    return list(map(int, read().split()))\n\ndef read_ints_s_l():\n    return list(map(int, read().split()))\n\ndef read_ints_r_l():\n    return list(map(int, read().split()))\n\ndef read_ints_s_l():\n    return list(map(int, read().split()))\n\ndef read_ints_r_l():\n    return list(map(int, read().split()))\n\ndef read_ints_s_l():\n    return list(map(int, read().split()))\n\ndef read_ints_r_l():\n    return list(map(int, read().split()))\n\ndef read_ints_s_l():\n    return list(map(int, read().split()))\n\ndef read_ints_r_l():\n    return list(map(int, read().split()))\n\ndef read_ints_l_l():\n    return list(map(int, read().split()))\n\ndef read_ints_r_l():\n    return list(map(int, read().split()))\n\ndef read_ints_s_l():\n    return list(map(int, read().split()))\n\ndef read_ints_r_l():\n    return list(map(int, read().split()))\n\ndef read_ints_s_l():\n    return list(map(int, read().split()))\n\ndef read_ints_r_l():\n    return list(map(int, read().split()))\n\ndef read_ints_s_l():\n    return list(map(int, read().split()))\n\ndef read_ints_r_l():\n    return list(map(int, read().split()))\n\ndef read_ints_s_l():\n    return list(map(int, read().split()))\n\ndef read_ints_r_l():\n    return list(map(int, read().split()))\n\ndef read_ints_s_l():\n    return list(map(int, read().split()))\n\ndef read_ints_r_l():\n    return list(map(int, read().split()))\n\ndef read_ints_s_l():\n    return list(map(int, read().split()))"}, "2073": {"problem_id": 2073, "answer": "n = int(input())\na = list(map(int, input().split()))\nmod = 10**9 + 7\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n\ns = [[0]*n for _ in range(n)]\nfor i in range(n):\n    s[i][0] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if s[i][j] == 0:\n            s[i][j] = 1\n            break\n        elif s[i][j] == 1:\n            s[i][j] = 0\n            break\n        else:\n            s[i][j] = 0\n            break\n\nprint(s[n-1][n] % mod)"}, "2074": {"problem_id": 2074, "answer": "n, m = map(int, input().split())\nc = list(map(int, input().split()))\nprint(c[0])"}, "2075": {"problem_id": 2075, "answer": "from itertools import combinations\ndef gcd(a, b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return gcd(b, a % b)\n    else:\n        return gcd(b, a % b)\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    s = input()\n    s = list(combinations(s, 3))\n    print(gcd(s, m))\n\n__starting_point()"}, "2076": {"problem_id": 2076, "answer": "for _ in range(int(input())):\n    a,b,c = list(map(int,input().split()))\n    if a>b:\n        a,b,c = b,a-b,c-a\n    elif a>b:\n        a,b,c = b,a,c-b\n    else:\n        a,b,c = a-b,a,c-a\n    print(c)\n"}, "2077": {"problem_id": 2077, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(a, b):\n    d = {}\n    for i in range(m):\n        d[a[i]] = i\n        d[b[i]] = i\n    return d.get(a[i], 0) + d.get(b[i], 0)\n\ndef main():\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(*solve(a, b))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2078": {"problem_id": 2078, "answer": "from sys import stdin,stdout\nfrom math import ceil,sqrt,log2,factorial,gcd,isgeq as isgeq\nfrom bisect import bisect_left as bl,bisect_right as br,insort\nfrom heapq import heapify,heappop,heappush,makedb,ndiv,nsmallarr,ndiv_smallarr,nsmallarr_smallarr\nfrom collections import defaultdict as dd,deque\nfrom itertools import permutations as p,combinations as comb,accumulate,takewhile,merge,fractions,heapify\nfrom operator import itemgetter\nfrom functools import reduce,cmp_to_key\nfrom re import sub, wild_escape,str,hex,bin,statistics,insr,memo,pand,Time Complexity\nfrom string import ascii_lowercase as A,ascii_uppercase as B,ascii_upper as C,acos_lowercase as D,acos_uppercase as E,atoi as A,atoi_lowercase as B,bosh_uppercase as C,bsutchelvin_uppercase as D,bsutchelvin_uppercase as E,digits as I,digits as J\n\n\ndef solve():\n    n,m = map(int,stdin.readline().split())\n    d = {}\n    for i in range(n):\n        x,y,lx,lcy = map(int,stdin.readline().split())\n        x,lx,lcy = x%4,y%4,lx%4\n        d[lx] = x\n        d[lcy] = y\n        if x == 10:\n            d[lx] = 1\n        elif x == 10**6:\n            d[lx] = 10**6\n        else:\n            d[lx] = 10**6\n        if y == 10**6:\n            d[lcy] = 10**6\n        elif y == 10**6:\n            d[lcy] = 10**6\n        else:\n            d[lcy] = 10**6\n        if x == 10**6:\n            d[lcy] = 10**6\n        elif x == 10**6:\n            d[lcy] = 10**6\n        elif y == 10**6:\n            d[lcy] = 10**6\n        elif y == 10**6:\n            d[lcy] = 10**6\n        else:\n            d[lcy] = 10**6\n        if y == 10**6:\n            d[lcy] = 10**6\n        elif y == 10**6:\n            d[lcy] = 10**6\n        elif y == 10**6:\n            d[lcy] = 10**6\n        else:\n            d[lcy] = 10**6\n        if x == 10**6:\n            d[lcy] = 10**6\n        elif x == 10**6:\n            d[lcy] = 10**6\n      "}, "2079": {"problem_id": 2079, "answer": "n = int(input())\nfor i in range(n):\n    w = list(map(int,input().split()))\n    w.sort()\n    if w[0] == w[-1] or w[0] == w[-1-w[0]]:\n        print('1')\n    elif w[0] == w[-1] or w[0] == w[-1-w[0]]:\n        print('1')\n    else:\n        print('0')\n"}, "2080": {"problem_id": 2080, "answer": "from collections import defaultdict, deque\ndef dfs(n):\n    if n == 0:\n        return 1\n    else:\n        return max(dfs(n-1), dfs(n-2) + 1)\n\ndef __starting_point():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        graph = defaultdict(list)\n        for i in range(n):\n            graph[i].append(i+1)\n            graph[i].append(i+1)\n            graph[i].append(i+1)\n            \n        print(len(graph))\n        print(len(graph[0]))\n\n__starting_point()"}, "2081": {"problem_id": 2081, "answer": "n = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    l.append(a[i] - a[i - 1])\nl.sort()\nprint(sum(l))"}, "2082": {"problem_id": 2082, "answer": "from math import ceil\nn, m = map(int, input().split())\na = [int(x) for x in input().split()]\nprint(sum(a))"}, "2083": {"problem_id": 2083, "answer": ""}, "2084": {"problem_id": 2084, "answer": "from collections import Counter\nn,k,c = map(int,input().split())\na = list(map(int,input().split()))\nc.sort()\nfor i in range(n):\n    if c[i]%2==0:\n        print(i)\n    else:\n        print(c[i]//2)\n"}, "2085": {"problem_id": 2085, "answer": "from math import log2\nn = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += log2(a[i])\nprint(s)"}, "2086": {"problem_id": 2086, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\ns = list(map(int, input().split()))\nf = list(map(int, input().split()))\n\n# a.sort()\n# a.pop()\n# a.append(0)\n\n# a.append(n)\n# a.append(n-1)\n\n# a.sort()\n# a.pop()\n# a.append(n-1)\n\n# print(a[n-1])\n\n# print(a[n-1])\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    print(max(s, f))\n\n__starting_point()"}, "2087": {"problem_id": 2087, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 998244353\ndef inp(): return map(int, input().split())\ndef out(n, m, s): return list(map(int, s[:n]))\ndef lmp(): return list(mp())\ndef ln(): return list(n())\ndef rl(): return list(map(int, input().split()))\ndef rn(): return list(map(int, input().split()))\ndef smp(): return map(str, input().split())\ndef smn(): return map(str, input().split())\ndef smp2(n, m, s): return smp()[n] + smp2(m, s)\ndef smn2(n, m, s): return smn()[n] + smn2(m, s)\ndef smp(n, m, s): return smp()[n] + smp2(m, s)\ndef smn(n, m, s): return smn()[n] + smn2(m, s)\n# --------------------------------------\n# \u3042\u308b\u3079\u304f\u304a\u906d\u3044\u306a\u3044\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u5834\u5408\u306f\u3001\u305d\u308c\u305e\u308c\u3070\u3044\u3044\u307b\u3046\u304b\u304c\u3088\u3044\uff01\uff01\uff1f\n# \u307e\u305a\u3001\u305d\u3046\u3044\u3046\u4f53\u5206\u6570\u3092\u4f5c\u308b\u3088\u3046\u306b\u3059\u308b\u5834\u5408\u306f\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u3070\u3001\u305d\u308c"}, "2088": {"problem_id": 2088, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = set(l)\nfor i in range(n-1):\n    print(i+1,end=\" \")\n    s.add(i+1)\n    print(i+1,end=\" \")\n    \n"}, "2089": {"problem_id": 2089, "answer": "from collections import deque\nn, m, s, t = list(map(int, input().split()))\ndef dfs(i, j):\n    if i == 0:\n        return 0\n    elif j == 0:\n        return min(dfs(i-1, j-1), dfs(i, j-1))\n    else:\n        return min(dfs(i-1, j), dfs(i, j-1))\n\n\ndef __starting_point():\n    n, m, s, t = list(map(int, input().split()))\n    dfs(0, n)\n\n__starting_point()"}, "2090": {"problem_id": 2090, "answer": "n, k = map(int, input().split())\nl = list(map(int, input().split()))\ns = sum(l)\nmaxi = 0\nfor i in range(n):\n    if s % 2 == 0:\n        maxi += 1\n    elif s % 2 == 1:\n        maxi += 1\n    else:\n        maxi += 1\nprint(maxi)"}, "2091": {"problem_id": 2091, "answer": "from collections import Counter\ndef lca(s):\n    c = Counter(s)\n    for i in range(len(c)):\n        if c[i] not in c.keys():\n            c[i] = 0\n        else:\n            c[i] += 1\n    return c\n\ndef __starting_point():\n    t = int(input())\n    for _ in range(t):\n        s = input()\n        print(lca(s))\n__starting_point()"}, "2092": {"problem_id": 2092, "answer": "import sys\ninput = sys.stdin.readline\n\nM, N, K = list(map(int, input().split()))\nstudents = [0]*N\nstudents[0] = 0\nstudents[1] = 0\nstudents[2] = 0\nstudents[3] = 0\nstudents[4] = 0\nstudents[5] = 0\nstudents[6] = 0\nstudents[7] = 0\nstudents[8] = 0\nstudents[9] = 0\nstudents[10] = 0\nstudents[11] = 0\nstudents[12] = 0\nstudents[13] = 0\nstudents[14] = 0\nstudents[15] = 0\nstudents[16] = 0\nstudents[17] = 0\nstudents[18] = 0\nstudents[19] = 0\nstudents[20] = 0\nstudents[21] = 0\nstudents[22] = 0\nstudents[23] = 0\nstudents[24] = 0\nstudents[25] = 0\nstudents[26] = 0\nstudents[27] = 0\nstudents[28] = 0\nstudents[29] = 0\nstudents[29] = 0\nstudents[30] = 0\nstudents[31] = 0\nstudents[31] = 0\nstudents[32] = 0\nstudents[33] = 0\nstudents[34] = 0\nstudents[35] = 0\nstudents[36] = 0\nstudents[37] = 0\nstudents[38] = 0\nstudents[39] = 0\nstudents[40] = 0\nstudents[41] = 0\nstudents[42] = 0\nstudents[43] = 0\nstudents[44] = 0\nstudents[45] = 0\nstudents[46] = 0\nstudents[47] = 0\nstudents[48] = 0\nstudents[49] = 0\nstudents[50] = 0\nstudents[51] = 0\nstudents[52] = 0\nstudents[53] = 0\nstudents[54] = 0\nstudents[55] = 0\nstudents[56] = 0\nstudents[57] = 0\nstudents[58] = 0\nstudents[59] = 0\nstudents[60] = 0\nstudents[60] = 0\nstudents[61] = 0\nstudents[61] = 0\nstudents[62] = 0\nstudents[62] = 0\nstudents[63] = 0\nstudents[64] = 0\nstudents[64] = 0\nstudents[65] = 0\nstudents[65] = 0\nstudents[66] = 0\nstudents[67] = 0\nstudents[68] = 0\nstudents[69] = 0\nstudents[70] = 0\nstudents[71] = 0\nstudents[72] = 0\nstudents[73] = 0\nstudents[74] = 0\nstudents[75] = 0\nstudents[76] = 0\nstudents[77] = 0\nstudents[78] = 0\nstudents[79] = 0\nstudents[80] = 0\nstudents[81] = 0\nstudents[81] = 0\nstudents[82] = 0\nstudents[83] = 0\nstudents[84] = 0\nstudents[85] = 0\nstudents[86] = 0\nstudents[87] = 0\nstudents[88] = 0\nstudents[89] = 0\nstudents[90] = 0\nstudents[91] = 0\nstudents[92] = 0\nstudents[93] = 0\nstudents[94] = 0\nstudents[95] = 0\nstudents[96] = 0\nstudents[97] = 0\nstudents[98] = 0\nstudents[99] = 0\nstudents[100] = 0\nstudents[101] = 0\nstudents[100] = 0\nstudents[101] = 0\nstudents[100] = 0\nstudents[101] = 0\nstudents[100] = 0\nstudents[101] = 0\nstudents[100] = 0\nstudents[101] = 0\nstudents[100] = 0\nstudents[101] = 0\nstudents[100] = 0\nstudents[101] = 0\nstudents[100] = 0"}, "2093": {"problem_id": 2093, "answer": "n = int(input())\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    a -= 1\n    b -= 1\n    if a == 0:\n        print(0)\n    else:\n        print(sum(a) * sum(b))\n"}, "2094": {"problem_id": 2094, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = [0] + list(map(int, input().split()))\nfor i in range(n):\n    a[i] = a[i-1] + a[i-2]\n\nMOD = 998244353\n\nfor _ in range(k):\n    x = int(input())\n    if x % MOD == 0:\n        print(a[x])\n    else:\n        print(a[x%MOD] + sum(a[x%MOD] for x in range(n) if x%MOD == 0))\n"}, "2095": {"problem_id": 2095, "answer": "n = int(input())\nmatrix = [[0] * n for _ in range(n)]\nfor i in range(n):\n    matrix[i][i] = 1\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 1:\n            matrix[i][j] = 0\n            continue\n        elif matrix[i][j] == 2:\n            matrix[i][j] = matrix[i - 1][j]\n            continue\n        else:\n            matrix[i][j] = matrix[i][j - 1]\n            continue\n        else:\n            matrix[i][j] = matrix[i - 1][j]\n            continue\nprint(matrix[n][n])"}, "2096": {"problem_id": 2096, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef count(a, b):\n    if a[0] == b[0]:\n        return len(a)\n    else:\n        return max(a) + len(b)\n\nfor i in range(n):\n    a.append(a[-1] * b[-1])\n\nprint(count(a, b))"}, "2097": {"problem_id": 2097, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(min(a))\n"}, "2098": {"problem_id": 2098, "answer": "from collections import deque\nn = int(input())\nedges = []\nfor i in range(n-1):\n    a, b = list(map(int, input().split()))\n    edges.append(a)\n    edges.append(b)\n\ndef dfs(i, x):\n    if x == 0:\n        return \"NO\"\n    elif x == 1:\n        return \"YES\"\n    else:\n        i = 0\n        while i < len(edges) and edges[i][0] == x:\n            i += 1\n        if i == len(edges) - 1:\n            return \"YES\"\n        else:\n            return \"NO\"\n\ndfs(0, 0)\nprint(\"YES\")\nfor i in range(1, n-1):\n    print(\" \".join(edges[i] for edges in dfs(i, 1)))\n"}, "2099": {"problem_id": 2099, "answer": "n, m, t = list(map(int, input().split()))\ns = set()\nfor _ in range(n):\n    h, mm = list(map(int, input().split()))\n    s.add(h)\n    s.add(mm)\n    s.add(h + 1)\nprint(len(s))\nfor i in range(m):\n    for j in range(n):\n        if s.intersection(s[i]):\n            print(i)\n            break\n"}, "2100": {"problem_id": 2100, "answer": "n = int(input())\nl = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n\ts += l[i]\n\tl.pop(i)\nprint(s)"}, "2101": {"problem_id": 2101, "answer": "R,G,B = map(int,input().split())\ng = [0]*B\nfor i in range(R):\n    g[i] = 1\nfor i in range(G):\n    g[i] = 1\nans = 0\nfor i in range(B):\n    if g[i] == 0:\n        ans += min(g[i] - g[i-1], R)\n    elif g[i] == R-1:\n        ans += min(g[i] - g[i-1], R)\n    else:\n        ans += min(g[i] - g[i-1], R)\nprint(ans)"}, "2102": {"problem_id": 2102, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    a = list(map(int, input().split()))\n    n = int(input())\n    notes = [0] * n\n    frets = [0] * n\n    for i in range(n):\n        notes[i] = a[i] + notes[i]\n        frets[i] = 1\n        \n    #print(notes)\n    #print(frets)\n    print(min(max(frets), min(frets)))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2103": {"problem_id": 2103, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    if a[i] == 0:\n        print(-1)\n    else:\n        print(a[i], end=' ')\n        \n"}, "2104": {"problem_id": 2104, "answer": "import sys\ninput = sys.stdin.readline\n\nL,R = map(int,input().split())\n\n# \u5982\u6dfb\u52a0\u4e00\u4e2a\u6570\u5b57\ndef dfs(i,j):\n    if i!=j:\n        return 0\n    else:\n        for k in range(i,j):\n            if k%2==0:\n                dfs(k,j)\n                return 1\n        return 0\n\nans = []\nfor i in range(L):\n    ans.append(dfs(i,L-1))\nprint(\"YES\")\n"}, "2105": {"problem_id": 2105, "answer": "n, m = map(int, input().split())\ns = list(map(int, input().split()))\nfor i in range(m):\n    s.append(s[-1] + 'a')\nprint('sinyu' if s[-1] == 'a' else 'imsin')"}, "2106": {"problem_id": 2106, "answer": "from heapq import heappush, heappop, heappush, heapify\nm, k = list(map(int, input().split()))\nd = list(map(int, input().split()))\ns = list(map(int, input().split()))\nheapify(s)\nfor i in range(m):\n    d[i] += 1\nprint(min(d[-1] - k, len(d)))"}, "2107": {"problem_id": 2107, "answer": "n, m, k, s = map(int, input().split())\nd = {}\nfor _ in range(n):\n    a, b = map(int, input().split())\n    d[a] = b\n    d[b] = a\n\nsums = list(d.keys())\nfor i in range(len(sums)):\n    if sums[i] == 0:\n        print(i)\n    else:\n        sums.pop(i)\n\nans = 0\nfor i in range(len(sums)):\n    if sums[i] == 0:\n        ans += 1\n        break\n\nprint(ans)"}, "2108": {"problem_id": 2108, "answer": "from collections import defaultdict, deque\nn, m = list(map(int, input().split()))\nedges = defaultdict(list)\nfor _ in range(m):\n    u, v = list(map(int, input().split()))\n    edges[u].append(v)\n    edges[v].append(u)\n\ndef find(x):\n    if x!= x:\n        return x\n    else:\n        return find(x)\n\ndef union(x, y):\n    x = find(x)\n    y = find(y)\n    if x!= y:\n        x, y = y, x\n    elif y!= x:\n        x, y = x, y\n    else:\n        x, y = y, x\n\ndef main():\n    n, m = list(map(int, input().split()))\n    edges = defaultdict(list)\n    for _ in range(n):\n        u, v = list(map(int, input().split()))\n        edges[u].append(v)\n        edges[v].append(u)\n    # print(edges)\n    q = deque()\n    q.append((n, m))\n    q.append((n, m))\n    q.append((n, m))\n    q.append((n, m))\n    print('YES')\n    for i in range(m):\n        print(' '.join(map(str, q[i])))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2109": {"problem_id": 2109, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set(a)\nfor i in range(n):\n    if i % 3 == 0:\n        s.add(i)\n        break\nprint(n)"}, "2110": {"problem_id": 2110, "answer": "import sys\ninput = sys.stdin.readline\n\nn, h, m, k = list(map(int, input().split()))\n\nt = [0]*n\nfor i in range(k):\n    t[i] = int(input())\n    if t[h] < m:\n        t[h] += 1\n    elif t[h] > m:\n        t[h] -= 1\n    else:\n        t[h] += 1\n\nprint(t[h])\n"}, "2111": {"problem_id": 2111, "answer": "from collections import deque\nn, q = list(map(int, input().split()))\ns = sorted(list(map(int, input().split())))\nans = 0\nfor i in range(n):\n    q.append(s[i][0] + s[i][1])\n    q.append(s[i][0] + s[i][1])\nans += q.pop()\nprint('\\n'.join(map(str, q)))\n"}, "2112": {"problem_id": 2112, "answer": "from collections import deque\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef spell(s):\n    if s == s[::-1]:\n        return 0\n    elif s == s[::-1]:\n        return 1\n    else:\n        return -1\n\nd = deque()\nd.append(0)\nd.append(-1)\n\nfor i in range(n):\n    x, k, y = map(int, input().split())\n    a[x] += 1\n    b[y] += 1\n    if spell(a[x]):\n        d.append(x)\n        d.append(-1)\n    else:\n        d.append(-1)\n\nprint(d.size())"}, "2113": {"problem_id": 2113, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n-1):\n    u, v = list(map(int, input().split()))\n    if v == 0:\n        print(0)\n        continue\n    d = {}\n    for j in range(len(a)):\n        if a[j] not in d:\n            d[a[j]] = 1\n        else:\n            d[a[j]] += 1\n            a[j] = d[a[j]]\n            break\n    if d.get(a[i], 0) == 0:\n        print(0)\n        continue\n    d[a[i]].append(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n    d[a[i]].pop(i)\n "}, "2114": {"problem_id": 2114, "answer": "from sys import stdin,stdout\nfrom math import ceil,sqrt\ninput = stdin.readline\nn = int(input())\nque = [[] for i in range(n)]\nfor i in range(n):\n    x,y = map(int,input().split())\n    que[x].append(y)\n    que[y].append(x)\ns = 0\nfor i in range(n):\n    s += que[que[i][0]][0]\nprint(s)"}, "2115": {"problem_id": 2115, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a.append(i)\nprint(len(a))"}, "2116": {"problem_id": 2116, "answer": "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n\nprint(sum(a))\n"}, "2117": {"problem_id": 2117, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(list(map(int,input().split())))\nprint(max(l))"}, "2118": {"problem_id": 2118, "answer": "from collections import defaultdict\nn, k = list(map(int, input().split()))\na = defaultdict(list)\nfor i in range(n):\n    a[i].append(i+1)\n\ndef merge(a, l, r):\n    if len(a) == k:\n        return -1\n    else:\n        a[len(a) - 1] = a[len(a) - 1] + a[len(a) - 2]\n        return a[len(a) - 1]\n\ndef mergesort(a, l, mid):\n    if mid - 1 in a:\n        return mid\n    elif mid - 1 in a:\n        return sorted(a, reverse=True)\n    else:\n        return -1\n\nprint(len(a))\nfor i in range(1, len(a)):\n    print(mergesort(a, i, mid))"}, "2119": {"problem_id": 2119, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 998244353\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return n // 2\n    else:\n        return pow(n, 2)\n\ndef main():\n    a = int(input())\n    l = list(map(int, input().split()))\n    r = list(map(int, input().split()))\n    print(factorial(l))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2120": {"problem_id": 2120, "answer": "n, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\ndef f(i, j):\n    if i == 0:\n        return 0\n    elif j == 0:\n        return 1\n    else:\n        res = float('inf')\n        for k in range(1, m):\n            res = min(res, f(i - k, j - k))\n        return res\n\nprint(f(0, n))\n"}, "2121": {"problem_id": 2121, "answer": "n, k = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[i] = list(map(int, input().split()))\n\ns = 0\nfor i in range(n-1, -1, -1):\n    s += d[i]\n    if i not in d:\n        d[i] = list(d.get(i, 0))\n\nprint(s)\n"}, "2122": {"problem_id": 2122, "answer": "from bisect import insort as insort, I\nn = int(input())\nk = int(input())\nprint(2)\nprint(3)\nprint(4)\nprint(5)\nfor i in range(k):\n    insort(l, l[i])\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print(l[i], end=' ')\n    print("}, "2123": {"problem_id": 2123, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n    if i+1 < n:\n        s += l[i]\n    else:\n        s += l[i+1]\nprint(s)"}, "2124": {"problem_id": 2124, "answer": "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input().split(' ')\n    m = int(input())\n    print(['Impossible' if m == 1 else 'Impossible' for m in a])"}, "2125": {"problem_id": 2125, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\ndef dfs(i, j):\n    if i == n:\n        return 1\n    elif j == m:\n        return 0\n    else:\n        return sum(dfs(i+1, j) for j in range(n))\n\nl = []\nfor i in range(n):\n    l.append(list(map(int, input().split())))\n\nprint('\\n'.join(map(str, l)))\n"}, "2126": {"problem_id": 2126, "answer": "from sys import stdin, stdout\nn, m, h = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\ns = [0] * m\nfor i in range(n):\n    s[i] = a[i]\n\nfor i in range(m):\n    x = list(map(int, input().split()))\n    if x[0] == 0:\n        print(i)\n        continue\n    else:\n        print(i + 1)\n        continue\n\nprint(*s, sep='\\n')\n"}, "2127": {"problem_id": 2127, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nfor _ in range(n):\n    x,y = map(int,input().split())\n    if x==y:\n        print('YES')\n    else:\n        print('NO')\n"}, "2128": {"problem_id": 2128, "answer": "from math import ceil\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        ans += 1\nprint(ans)"}, "2129": {"problem_id": 2129, "answer": "for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    d = {}\n    for i in range(m):\n        d[i] = 0\n    for i in range(n):\n        if d[i] == 0:\n            d[i] += 1\n        else:\n            d[i] = 1\n    print(d.get(0, 0))\n"}, "2130": {"problem_id": 2130, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    b = [int(x) for x in input().split()]\n    a.append(b)\nprint('Yes' if a[0] == b[0] else 'No')"}, "2131": {"problem_id": 2131, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nn = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\ndef main():\n    a,b = [],[]\n    for i in range(n):\n        a.append(a[i])\n        b.append(b[i])\n    \n    ans = []\n    for i in range(n-1):\n        if a[i]!=b[i]:\n            ans.append(str(i+1)+\" \"+str(a[i]))\n        else:\n            ans.append(str(i+1)+\" \"+str(b[i]))\n    print(*ans)\n    \ndef __starting_point():\n    main()\n\n__starting_point()"}, "2132": {"problem_id": 2132, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    d = list(map(int, readline().split()))\n    \n    # Dijkstra\n    d.sort()\n    s = 0\n    for i in range(n):\n        if d[i] == s:\n            s += 1\n        else:\n            d[i] = s\n            s -= 1\n            \n    print(s)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2133": {"problem_id": 2133, "answer": "from collections import deque\nn = int(input())\nedges = []\nfor i in range(n):\n    q = deque([int(x) for x in input().split()])\n    edges.append([q, 0])\n    q.popleft()\n    if len(edges) == 0:\n        print(0)\n        continue\n    for j in range(len(edges)):\n        if q[j] == 0:\n            q.popleft()\n        elif q[j] == 1:\n            q.popleft()\n        else:\n            q.pop()\n            q.append(j)\n            q.popleft()\n            q.pop()\n            q.append(j)\n            q.pop()\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q.extend([q[j] for j in range(len(q))])\n            q"}, "2134": {"problem_id": 2134, "answer": "n = int(input())\n\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] = sum(a[i] for i in a)\n\nprint(sum(a))"}, "2135": {"problem_id": 2135, "answer": "import sys\ninput = sys.stdin.readline\n\nH,W = map(int,input().split())\nfor _ in range(H):\n    r,c,x = map(int,input().split())\n    print(sum(r*c)//W)"}, "2136": {"problem_id": 2136, "answer": "for _ in range(int(input())):\n    n = int(input())\n    print(bin(n)[2:][::-1])"}, "2137": {"problem_id": 2137, "answer": "from math import *\ninput = lambda: list(map(int, input().split()))\nn, a, b = map(int, input().split())\nx, y = map(int, input().split())\nprint('\\n'.join(map(str, x+y)))"}, "2138": {"problem_id": 2138, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nedges = [[] for _ in range(n)]\nedges[0].append(0)\nedges[1].append(0)\nedges[2].append(0)\nedges[3].append(0)\nedges[4].append(0)\nedges[5].append(0)\nedges[6].append(0)\nedges[7].append(0)\nedges[8].append(0)\nedges[9].append(0)\nedges[10].append(0)\nedges[11].append(0)\nedges[12].append(0)\nedges[13].append(0)\nedges[14].append(0)\nedges[15].append(0)\nedges[16].append(0)\nedges[17].append(0)\nedges[18].append(0)\nedges[19].append(0)\nedges[20].append(0)\nedges[21].append(0)\nedges[22].append(0)\nedges[23].append(0)\nedges[24].append(0)\nedges[25].append(0)\nedges[26].append(0)\nedges[27].append(0)\nedges[28].append(0)\nedges[29].append(0)\nedges[30].append(0)\nedges[31].append(0)\nedges[32].append(0)\nedges[33].append(0)\nedges[34].append(0)\nedges[35].append(0)\nedges[36].append(0)\nedges[37].append(0)\nedges[38].append(0)\nedges[39].append(0)\nedges[40].append(0)\nedges[41].append(0)\nedges[42].append(0)\nedges[43].append(0)\nedges[44].append(0)\nedges[45].append(0)\nedges[46].append(0)\nedges[47].append(0)\nedges[48].append(0)\nedges[49].append(0)\nedges[50].append(0)\nedges[51].append(0)\nedges[52].append(0)\nedges[53].append(0)\nedges[54].append(0)\nedges[55].append(0)\nedges[55].append(0)\nedges[56].append(0)\nedges[56].append(0)\nedges[57].append(0)\nedges[58].append(0)\nedges[59].append(0)\nedges[60].append(0)\nedges[61].append(0)\nedges[62].append(0)\nedges[63].append(0)\nedges[64].append(0)\nedges[64].append(0)\nedges[65].append(0)\nedges[65].append(0)\nedges[66].append(0)\nedges[66].append(0)\nedges[67].append(0)\nedges[68].append(0)\nedges[69].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\nedges[70].append(0)\ned"}, "2139": {"problem_id": 2139, "answer": "s = input()\nfor i in range(len(s)):\n    s.append(s[i])\nprint(s[len(s) - 1])"}, "2140": {"problem_id": 2140, "answer": "s = input()\nn = len(s)\na = [0]*(n+1)\nfor i in range(n):\n    if s[i] == 'a':\n        a[i] = 1\n    else:\n        a[i] = -1\nprint(''.join(a))"}, "2141": {"problem_id": 2141, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nfor _ in range(n):\n    x, y = map(int, input().split())\n    if x == y:\n        print(\"WBW\")\n    else:\n        a = x - y\n        b = y - x\n        if a == b:\n            print(\"BB\")\n        else:\n            print(\"WBW\")\n"}, "2142": {"problem_id": 2142, "answer": "for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if len(a) == len(b):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "2143": {"problem_id": 2143, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(a, b):\n    if a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[a["}, "2144": {"problem_id": 2144, "answer": "def main():\n    t = int(input())\n    for i in range(t):\n        a, m = map(int, input().split())\n        print(a + m, m)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2145": {"problem_id": 2145, "answer": "import math\nt = int(input())\nfor _ in range(t):\n    x, y = list(map(int, input().split()))\n    if x % 2 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "2146": {"problem_id": 2146, "answer": "from math import ceil\nn = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    l.append(list(map(int, input().split())))\nprint('\\n'.join(l))"}, "2147": {"problem_id": 2147, "answer": ""}, "2148": {"problem_id": 2148, "answer": "import math\nn, r = list(map(int, input().split()))\nx = [0]*n\nfor i in range(n):\n    x[i] = 10**100\nprint(' '.join(map(str, x)))"}, "2149": {"problem_id": 2149, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nMOD = 998244353\n\nfor i in range(n):\n    if a[i] == 1:\n        print(0)\n        continue\n    if a[i] % MOD == 0:\n        print(MOD)\n        continue\n    MOD = 998244353\n    a[i] = 1\n    for j in range(i, len(a)):\n        if a[j] % MOD == 0:\n            print(MOD)\n            continue\n        MOD = 998244353\n        a[j] = 1\n        for k in range(i, len(a)):\n            if a[k] % MOD == 0:\n                print(MOD)\n                continue\n            MOD = 998244353\n            a[k] = 1\n            for kk in range(i, len(a)):\n                if a[kk] % MOD == 0:\n                    print(MOD)\n                    continue\n                MOD = 998244353\n                a[kk] = 1\n                for kkk in range(i, len(a)):\n                    if a[kk] % MOD == 0:\n                        print(MOD)\n                        continue\n                    MOD = 998244353\n                    a[kk] = 1\n                    for kkk in range(i, len(a)):\n                        if a[kk] % MOD == 0:\n                            print(MOD)\n                            continue\n                        MOD = 998244353\n                        a[kk] = 1\n                        break\n                        \n                        \n                        \n                        \n                        \n                      "}, "2150": {"problem_id": 2150, "answer": "import sys\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\ndef check(x):\n    if x == 0:\n        return True\n    else:\n        return False\n\nfor i in range(n):\n    x = list(map(int,sys.stdin.readline().strip().split()))\n    print(check(x))"}, "2151": {"problem_id": 2151, "answer": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    s = input()\n    print('YES' if len(s)==2 else 'NO')\n    print(*s)"}, "2152": {"problem_id": 2152, "answer": "n = int(input())\na,p = list(map(int,input().split()))\n\nd = {}\nfor i in range(n):\n    d[i] = min(a,p)\n    d[i] = max(a,p)\n\nprint(d.get(a,0))"}, "2153": {"problem_id": 2153, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nprint(n)\n"}, "2154": {"problem_id": 2154, "answer": "n = int(input())\nprimes = list(map(int, input().split()))\nprimes.sort()\nprimes.insert(0, 0)\nprimes.insert(0, 1)\nprimes.insert(0, 2)\nprimes.insert(0, 3)\nprimes.insert(0, 4)\nprimes.insert(0, 5)\nprimes.insert(0, 6)\nprimes.insert(0, 7)\nprimes.insert(0, 8)\nprimes.insert(0, 9)\nprimes.insert(0, 10)\nprimes.insert(0, 11)\nprimes.insert(0, 12)\nprimes.insert(0, 13)\nprimes.insert(0, 14)\nprimes.insert(0, 15)\nprimes.insert(0, 16)\nprimes.insert(0, 17)\nprimes.insert(0, 18)\nprimes.insert(0, 19)\nprimes.insert(0, 20)\nprimes.insert(0, 21)\nprimes.insert(0, 22)\nprimes.insert(0, 23)\nprimes.insert(0, 24)\nprimes.insert(0, 25)\nprimes.insert(0, 26)\nprimes.insert(0, 27)\nprimes.insert(0, 28)\nprimes.insert(0, 29)\nprimes.insert(0, 30)\nprimes.insert(0, 31)\nprimes.insert(0, 32)\nprimes.insert(0, 33)\nprimes.insert(0, 34)\nprimes.insert(0, 35)\nprimes.insert(0, 36)\nprimes.insert(0, 37)\nprimes.insert(0, 38)\nprimes.insert(0, 39)\nprimes.insert(0, 40)\nprimes.insert(0, 41)\nprimes.insert(0, 42)\nprimes.insert(0, 42)\nprimes.insert(0, 43)\nprimes.insert(0, 44)\nprimes.insert(0, 45)\nprimes.insert(0, 46)\nprimes.insert(0, 47)\nprimes.insert(0, 48)\nprimes.insert(0, 49)\nprimes.insert(0, 50)\nprimes.insert(0, 51)\nprimes.insert(0, 52)\nprimes.insert(0, 54)\nprimes.insert(0, 55)\nprimes.insert(0, 56)\nprimes.insert(0, 57)\nprimes.insert(0, 58)\nprimes.insert(0, 59)\nprimes.insert(0, 60)\nprimes.insert(0, 61)\nprimes.insert(0, 62)\nprimes.insert(0, 63)\nprimes.insert(0, 64)\nprimes.insert(0, 65)\nprimes.insert(0, 66)\nprimes.insert(0, 67)\nprimes.insert(0, 68)\nprimes.insert(0, 69)\nprimes.insert(0, 70)\nprimes.insert(0, 71)\nprimes.insert(0, 72)\nprimes.insert(0, 73)\nprimes.insert(0, 74)\nprimes.insert(0, 75)\nprimes.insert(0, 75)\nprimes.insert(0, 76)\nprimes.insert(0, 77)\nprimes.insert(0, 78)\nprimes.insert(0, 79)\nprimes.insert(0, 80)\nprimes.insert(0, 82)\nprimes.insert(0, 83)\nprimes.insert(0, 84)\nprimes.insert(0, 85)\nprimes.insert(0, 86)\nprimes.insert(0, 87)\nprimes.insert(0, 88)\nprimes.insert(0, 89)\nprimes.insert(0, 90)\nprimes.insert(0, 91)\nprimes.insert(0, 92)\nprimes.insert(0, 93)\nprimes.insert(0, 94)\nprimes.insert(0, 95)\nprimes.insert(0, 96)\nprimes.insert(0, 97)\nprimes.insert(0, 102)\nprimes.insert(0"}, "2155": {"problem_id": 2155, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = [-1] * m\n    for i in range(n):\n        if a[i] == b[i]:\n            ans[i] = 1\n        else:\n            ans[i] = max(ans[i], a[i] - b[i])\n    print(*ans)"}, "2156": {"problem_id": 2156, "answer": ""}, "2157": {"problem_id": 2157, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify,heappushpop,heappoppoppop,heapifypoppop,heapifypoppoppoppop\nfrom collections import deque,defaultdict,Counter,OrderedDict,defaultto,heapify,heapifypop\nfrom itertools import permutations,combinations,accumulate,groupby,compress,decompress,insort,insortpop,insortpoppop,insortpoppoppop\nfrom operator import xor,take,and,andnot,andnot,andandor,andorand,andorandor,frozenset,functools,reduce,str,bisect,bisectpop,bisectpoppoppop\nfrom operator import mul,muland,mulmul,mulandor,mulmuland,mulmulandor,mulispur,sub,suband,subandor,subandorand,sorted,sortedpop,sortedpoppoppop\nfrom functools import lru,ru,factorial,sqrt,and,andor,andoror,frozenset,rozensetpop,rozensetpoppoppop,reduce,str,bisect,bisectpop,bisectpoppoppoppop,merge,mergepop,mergepoppoppop,mergepoppoppop\n\n\ndef __starting_point():\n    n, q = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(max(a[0], b[0]))\n\n__starting_point()"}, "2158": {"problem_id": 2158, "answer": "n = int(input())\nl = []\nfor i in range(n - 1):\n    a, b, c = map(int, input().split())\n    l.append(a + b)\nl.sort()\ncost = 0\nfor i in range(n - 1):\n    if l[i] < cost:\n        cost += l[i]\nprint(cost)"}, "2159": {"problem_id": 2159, "answer": "n = int(input())\nl = list(map(int,input().split()))\nc = [0]*n\nfor i in range(n):\n    c[i] = c[i-1]\nans = 0\nfor i in range(n):\n    if c[i] not in l:\n        ans += 1\nprint(ans)"}, "2160": {"problem_id": 2160, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k = list(map(int,input().split()))\nx = list(map(int,input().split()))\n\ns = [0]*(n+1)\nfor i in range(1,n+1):\n    s[i] = s[i-1] + x[i-1]\n\nprint(sum(s))\n"}, "2161": {"problem_id": 2161, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nfor _ in range(n):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(' '.join(map(str, b)))"}, "2162": {"problem_id": 2162, "answer": "def main():\n    k, l = list(map(int, input().split()))\n    a = sorted(map(int, input().split()), reverse=True)\n    b = sorted(map(int, input().split()), reverse=True)\n    ans = 0\n    for i in range(k):\n        ans += a[i]\n        b[i] = b[i]\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2163": {"problem_id": 2163, "answer": "def f(a):\n    return sum(a[i] for i in range(1, len(a)) if a[i] == a[i-1])\n\nn, m = list(map(int, input().split()))\n\n# a = list(map(int, input().split()))\n\n# print(f(a))\n\nprint(sum(map(tuple, list(range(n, n+1)))[1:]) % 1000000007)\n"}, "2164": {"problem_id": 2164, "answer": "for _ in range(int(input())):\n\ts = input()\n\tl = len(s)\n\tif l == 0:\n\t\tprint(\"a\")\n\telse:\n\t\tprint(\"\".join(s))\n\t\t\n"}, "2165": {"problem_id": 2165, "answer": "def solve(a,b):\n    if b == 0:\n        return 0\n    elif b == 1:\n        return a\n    else:\n        a.sort()\n        b.sort()\n        print(a[0], b[0])\n\nn,t = list(map(int,input().split()))\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n\nsolve(a,b)\n\n# cook your dish here\n"}, "2166": {"problem_id": 2166, "answer": "import sys\n\ndef fact(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 2\n    else:\n        return 1 + fact(n // 2)\n\nMOD = 1000000007\n\ndef __starting_point():\n    n = int(input())\n    print(__starting_point())\n\n__starting_point()"}, "2167": {"problem_id": 2167, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    print(a[i] + 1)\n"}, "2168": {"problem_id": 2168, "answer": "n = int(input())\nfor i in range(n):\n    m = list(map(int,input().split()))\n    max_so_far = m[0]\n    max_in_so_far = m[1]\n    max_so_far_in_so_far = m[2]\n    max_so_far_in_so_far_in_far = m[3]\n    max_so_far_in_so_far_in_far = m[4]\n    max_so_far_in_so_far_in_far_in_far = m[5]\n    max_so_far_in_so_far_in_far_in_far = m[6]\n    max_so_far_in_so_far_in_far_in_far = m[7]\n    max_so_far_in_so_far_in_far_in_far = m[8]\n    max_so_far_in_so_far_in_far_in_far = m[9]\n    max_so_far_in_so_far_in_far_in_far = m[10]\n    max_so_far_in_so_far_in_far_in_far = m[11]\n    max_so_far_in_so_far_in_far_in_far = m[12]\n    max_so_far_in_so_far_in_far_in_far = m[13]\n    max_so_far_in_so_far_in_far_in_far = m[14]\n    max_so_far_in_so_far_in_far_in_far = m[15]\n    max_so_far_in_so_far_in_far_in_far = m[16]\n    max_so_far_in_so_far_in_far_in_far = m[17]\n    max_so_far_in_so_far_in_far_in_far = m[18]\n    max_so_far_in_so_far_in_far_in_far = m[19]\n    max_so_far_in_so_far_in_far_in_far = m[20]\n    max_so_far_in_so_far_in_far_in_far = m[21]\n    max_so_far_in_so_far_in_far_in_far = m[22]\n    max_so_far_in_so_far_in_far_in_far = m[23]\n    max_so_far_in_so_far_in_far_in_far = m[24]\n    max_so_far_in_so_far_in_far_in_far = m[25]\n    max_so_far_in_so_far_in_far_in_far = m[26]\n    max_so_far_in_so_far_in_far_in_far = m[27]\n    max_so_far_in_so_far_in_far_in_far = m[28]\n    max_so_far_in_so_far_in_far_in_far = m[29]\n    max_so_far_in_so_far_in_far_in_far = m[30]\n    max_so_far_in_so_far_in_far_in_far = m[31]\n    max_so_far_in_so_far_in_far_in_far = m[32]\n    max_so_far_in_so_far_in_far_in_far = m[33]\n    max_so_far_in_so_far_in_far_in_far = m[34]\n    max_so_far_in_so_far_in_far_in_far = m[35]\n    max_so_far_in_so_far_in_far_in_far = m[36"}, "2169": {"problem_id": 2169, "answer": "import sys\ninput = sys.stdin.readline\n\ndef is_prime(n):\n    if n < 2:\n        return False\n    else:\n        return True\n\ndef can_write(n, val=0):\n    if n == 0:\n        return False\n    elif n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_n(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_x(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_y(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_x_n(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_x_y(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_x_x(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_x_y(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_x_x(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_y(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_y_n(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_y_x(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_x_x(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_x_y(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_x_x_y(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_x_y_n(n, val=0):\n    if n == 1:\n        return True\n    else:\n        return False\n\ndef can_write_prime_x_x_y(n, val=0):\n    if n == 1:\n        return True\n   "}, "2170": {"problem_id": 2170, "answer": "import sys\ndef factorial(n):\n    return int(n**0.5)\nmod = 10**9+7\nn,m = map(int,sys.stdin.readline().split())\nfor i in range(m):\n    a,b = map(int,sys.stdin.readline().split())\n    if a%2 == 0:\n        print((a//2)+1)\n    else:\n        print((a//2)+1)\n"}, "2171": {"problem_id": 2171, "answer": "from sys import stdin, stdout\ninput = stdin.readline\ns = \"yes\"\nfor _ in range(int(input())):\n    a = int(input())\n    if a == 1:\n        print(\"yes\")\n    else:\n        print(\"no\")"}, "2172": {"problem_id": 2172, "answer": "from collections import defaultdict\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = defaultdict(list)\nfor i in range(m):\n    c[a[i]].append(i)\nfor i in range(n):\n    b[c[i]].append(i)\nprint(' '.join(map(str, b)))"}, "2173": {"problem_id": 2173, "answer": "n = int(input())\na = [int(i) for i in input().split()]\nprint(a[0])"}, "2174": {"problem_id": 2174, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef count(a):\n    return len(a) - min(a)\n\n# a.sort()\n# print(a)\n\nfor i in range(n):\n    print(count(a[i]))\n"}, "2175": {"problem_id": 2175, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(max(a) + min(b) + max(a) - min(b))\n"}, "2176": {"problem_id": 2176, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\ns = list(map(int,stdin.readline().split()))\nfor i in range(n):\n    a,b = list(map(int,stdin.readline().split()))\n    s.append(a)\n    s.append(b)\nprint(sum(s))"}, "2177": {"problem_id": 2177, "answer": "for _ in range(int(input())):\n    a, b = list(map(int, input().split()))\n    print(a * b)\n"}, "2178": {"problem_id": 2178, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(sum(a) - sum(b))"}, "2179": {"problem_id": 2179, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\ns = [-1] * (n + 1)\nfor i in range(m):\n    s[i] = 0\n    for j in range(n):\n        if s[i] == 0:\n            s[i] = 1\n            break\n    if s[i] == 0:\n        s[i] = 0\n        break\nprint(len(s))\nfor i in range(n):\n    print(s[i] + s[i - 1] + s[i - 2] + s[i - 3] + s[i - 4] + s[i - 5])"}, "2180": {"problem_id": 2180, "answer": "n = int(input())\nfor i in range(n):\n    x, y, z = map(int, input().split())\n    if x == 'C':\n        print(z)\n    elif y == 'C':\n        print(z + 1)\n    elif z == 'C':\n        print(z + 2)\n    elif z == 'C':\n        print(z + 3)\n    elif z == 'C':\n        print(z + 4)\n    elif z == 'C':\n        print(z + 5)\n    elif z == 'C':\n        print(z + 6)\n    elif z == 'C':\n        print(z + 7)\n    elif z == 'C':\n        print(z + 8)\n    elif z == 'C':\n        print(z + 9)\n    elif z == 'C':\n        print(z + 10)\n    elif z == 'C':\n        print(z + 11)\n    elif z == 'C':\n        print(z + 12)\n    elif z == 'C':\n        print(z + 13)\n    elif z == 'C':\n        print(z + 14)\n    elif z == 'C':\n        print(z + 15)\n    elif z == 'C':\n        print(z + 16)\n    elif z == 'C':\n        print(z + 17)\n    elif z == 'C':\n        print(z + 18)\n    elif z == 'C':\n        print(z + 19)\n    elif z == 'C':\n        print(z + 20)\n    elif z == 'C':\n        print(z + 21)\n    elif z == 'C':\n        print(z + 22)\n    elif z == 'C':\n        print(z + 23)\n    elif z == 'C':\n        print(z + 24)\n    elif z == 'C':\n        print(z + 25)\n    elif z == 'C':\n        print(z + 26)\n    elif z == 'C':\n        print(z + 27)\n    elif z == 'C':\n        print(z + 28)\n    elif z == 'C':\n        print(z + 29)\n    elif z == 'C':\n        print(z + 30)\n    elif z == 'C':\n        print(z + 31)\n    elif z == 'C':\n        print(z + 32)\n    elif z == 'C':\n        print(z + 33)\n    elif z == 'C':\n        print(z + 34)\n    elif z == 'C':\n        print(z + 35)\n    elif z == 'C':\n        print(z + 36)\n    elif z == 'C':\n        print(z + 37)\n    elif z == 'C':\n        print(z + 38)\n    elif z == 'C':\n        print"}, "2181": {"problem_id": 2181, "answer": "from math import *\ndef solve():\n    n, d = map(int, input().split())\n    if n == 0:\n        return 1\n    elif n == 1:\n        return d\n    else:\n        x, y = map(int, input().split())\n        x = int(x)\n        y = int(y)\n        if x == y:\n            return 1\n        else:\n            return 2*(x-y)\n\nsolve()"}, "2182": {"problem_id": 2182, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nfor i in range(n):\n\tx = list(map(int, input().split()))\n\tprint(x)"}, "2183": {"problem_id": 2183, "answer": "import sys\ninput = sys.stdin.readline\n\nclass Trie:\n    def __init__(self, val=0):\n        self.val = val\n        self.root = Trie(val)\n        self.s = set()\n        self.s.add(val)\n        \n    def add(self, val):\n        if val == self.val:\n            self.s.add(val)\n            return\n        else:\n            self.root.add(val)\n            return\n\ndef dfs(root, s):\n    if root == None:\n        return\n    if root.s:\n        return\n    for i in range(len(s)):\n        if s[i] == root.s[i-1]:\n            root.s.pop(i)\n        else:\n            root.s.pop(i)\n    root.s.add(root.val)\n    return\n\ndef main():\n    t = Trie()\n    t.add(1)\n    t.add(2)\n    t.add(3)\n    print(dfs(t))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2184": {"problem_id": 2184, "answer": "n = int(input())\ndef f(n):\n    if n == 0:\n        return \"&\"\n    elif n == 1:\n        return \"&\"\n    elif n == 2:\n        return \"&\"\n    elif n == 3:\n        return \"!&\"\n    elif n == 4:\n        return \"!&\"\n    elif n == 5:\n        return \"!&\"\n    elif n == 6:\n        return \"!&\"\n    elif n == 7:\n        return \"!&\"\n    elif n == 8:\n        return \"!&\"\n    elif n == 9:\n        return \"!&\"\n    else:\n        return f(n-1) + f(n-2) + f(n-3) + f(n-4) + f(n-5)\n\nn = int(input())\nans = []\nfor i in range(n):\n    x, y, z = map(int, input().split())\n    if x == y:\n        ans.append(z)\n    elif x == z:\n        ans.append(y)\n    elif y == z:\n        ans.append(z)\n    else:\n        ans.append(z)\nprint(\"\".join(ans))"}, "2185": {"problem_id": 2185, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    print(\"YES\" if a[0]==b[0] else \"NO\")"}, "2186": {"problem_id": 2186, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\nd = deque()\nfor i in range(n):\n    d.append(input())\nqueries = []\nfor i in range(m):\n    queries.append(list(map(str, input().split())))\nprint('YES' if queries[-1] in d else 'NO')"}, "2187": {"problem_id": 2187, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(min(a, b))\n"}, "2188": {"problem_id": 2188, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int,input().split()))\n\nfor i in range(n):\n    a[i] = list(map(int,input().split()))\n\n# \u540c\u6808\u5185\u90e8\u53f3\u4fa7\ndef is_prime(n):\n    if n == 1:\n        return True\n    elif n % 2 == 0:\n        return False\n    else:\n        return True\n\ndef dfs(i,j):\n    if i == j:\n        return 1\n    else:\n        ans = 0\n        for k in range(2,n+1):\n            if is_prime(i[k]):\n                ans += dfs(i[k],j)\n        return ans\n\nprint(dfs(0,1))\n"}, "2189": {"problem_id": 2189, "answer": "from collections import deque\nn, m = list(map(int, input().split()))\na = [0]*n\nfor i in range(m):\n    a[i] = 1\n    for j in range(n):\n        if a[j] == 1:\n            a[j] = 0\n        else:\n            a[j] = a[j-1] + 1\nprint(' '.join(map(str, a)))"}, "2190": {"problem_id": 2190, "answer": "n,k = map(int,input().split())\na = list(map(int,input().split()))\na.sort()\nfor i in range(n):\n    print(a[i]*k,end=\" \")\n    print(a[i]%k,end=\" \")"}, "2191": {"problem_id": 2191, "answer": "n = int(input())\ns = input()\na = 0\nb = 0\nfor i in range(n):\n    if s[i] == '1':\n        a += 1\n    elif s[i] == '2':\n        b += 1\n    else:\n        a += 2\nprint(a,b)"}, "2192": {"problem_id": 2192, "answer": "n = int(input())\nmatrix = [[0] * n for _ in range(n)]\nfor i in range(n):\n    matrix[i][i] = 1\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] + matrix[i - 1][i - 1]\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] - matrix[i - 1][i - 1]\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] - matrix[i - 1][i - 1]\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] - matrix[i - 1][i]\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] - matrix[i - 1][i]\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] - matrix[i - 1][i]\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] - matrix[i - 1][i]\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] - matrix[i - 1][i]\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] - matrix[i - 1][i]\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] - matrix[i - 1][i]\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] - matrix[i - 1][i]\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] - matrix[i - 1][i]\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] - matrix[i - 1][i]\nfor i in range(n):\n    matrix[i][i] = matrix[i - 1][i] - matrix[i - 1][i]\n\nprint('\\n'.join(map(str, matrix)))"}, "2193": {"problem_id": 2193, "answer": "from sys import stdin\ninput = stdin.readline\nn, m = list(map(int, input().split()))\ngraph = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v, t = list(map(int, input().split()))\n    graph[u].append((v, t))\n    graph[v].append((u, t))\n    if t == 0:\n        continue\n    d = graph[u].pop(0)\n    d[t] = 1\n    for i in range(len(graph[u])):\n        if graph[u][i] == t:\n            continue\n        else:\n            d[t] += 1\n    print(' '.join(map(str, d)))\n"}, "2194": {"problem_id": 2194, "answer": "from sys import stdin,stdout\nn,q = list(map(int,stdin.readline().split()))\na = list(map(int,stdin.readline().split()))\nfor _ in range(q):\n    x,k = list(map(int,stdin.readline().split()))\n    if x%4==0:\n        a[x//4] += 1\n    elif x%4==1:\n        a[x//4] -= 1\n    else:\n        a[x//4] += 1\n    print(a[x//4]//k)\n"}, "2195": {"problem_id": 2195, "answer": "for _ in range(int(input())):\n    a, b = map(int, input().split())\n    print(min(a, b))"}, "2196": {"problem_id": 2196, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a))"}, "2197": {"problem_id": 2197, "answer": "n, x = map(int, input().split())\np = [0] * n\nfor i in range(n):\n    p[i] = p[i] + x\nprint(p[n])"}, "2198": {"problem_id": 2198, "answer": "from sys import stdin,stdout\nn,m = list(map(int,stdin.readline().split()))\ns = list(map(int,stdin.readline().split()))\nprint(n-s)\nfor i in range(m):\n    if s[i]=='.':\n        print(i+1)\n    else:\n        print(i+1)\n"}, "2199": {"problem_id": 2199, "answer": "import sys\ninput = sys.stdin.readline\n\ndef max(s):\n    return max(s) - min(s)\n\n\ndef main():\n    Q = int(input())\n    for _ in range(Q):\n        s = input()\n        print(max(s - s_max(s), 0))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2200": {"problem_id": 2200, "answer": "from sys import stdin, stdout\nn, a, b = list(map(int, stdin.readline().split()))\ntokens = [0] * (n + 1)\nfor i in range(n):\n    tokens[i] += 1\nprint(tokens[0])"}, "2201": {"problem_id": 2201, "answer": "d, n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\nfor i in range(m):\n    if a[i] < d:\n        s += d\n    else:\n        s += a[i]\nprint(s)\n"}, "2202": {"problem_id": 2202, "answer": "def rec(n,p):\n    if n%2==0:\n        return 0\n    else:\n        return (n-1)*(p-1)\n\nn,p = list(map(int,input().split()))\nl = list(map(int,input().split()))\nl.sort()\nans = 0\nfor i in range(len(l)):\n    ans += rec(i,p)\nprint(ans)\n"}, "2203": {"problem_id": 2203, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    h, q = list(map(int, input().split()))\n    n = list(map(int, input().split()))\n    \n    for _ in range(q):\n        i, l, r, ans = list(map(int, input().split()))\n        if i == l:\n            print('Data not sufficient!')\n            return\n        elif i == r:\n            print('Node number not uniquely identified!')\n            return\n        else:\n            ans = 1\n            for j in range(l, r):\n                if j == l:\n                    ans = max(ans, j)\n                    break\n            print(ans)\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n"}, "2204": {"problem_id": 2204, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort_left as bl, insort_right as br, insort_left_right as br, insort_right_left as br, l1_left as l1, l1_right, l1_right_right, d1_left, d1_right\nfrom heapq import heappop, heappush, heapify, nsmallest, nlargest\nfrom collections import defaultdict as dd, deque, Counter\nfrom itertools import combinations as comb, permutations as perm, permutations_with_replacement as permutations_with_replacement, islice\nfrom functools import lru_cache\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    n, m = (int(i) for i in input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = dd(collections.defaultdict(int), 0)\n    ans = 0\n    for i in range(m):\n        a[i] += a[i]\n        b[i] += b[i]\n        d[i] = min(d[i], a[i])\n        ans += a[i]\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2205": {"problem_id": 2205, "answer": "from math import gcd\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    print(q[0]*q[1]*q[2])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2206": {"problem_id": 2206, "answer": "n = int(input())\nl = list(map(int, input().split()))\nmod = 10**9 + 7\nfor i in range(n):\n    if l[i]!= 0:\n        l[i] = 1\n    else:\n        l[i] = 0\nprint(l[n-1])"}, "2207": {"problem_id": 2207, "answer": "R, C = list(map(int, input().split()))\n\ndef main():\n    R, C = list(map(int, input().split()))\n    print(R * C)\n\nmain()\n"}, "2208": {"problem_id": 2208, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef is_even(a):\n    return a % 2 == 0 and a % 3 == 0\n\ndef is_odd(a):\n    return a % 2 == 0 and a % 3 == 0\n\ndef is_even(a):\n    return all(a % 2 == 0 for a in a)\n\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n# a = list(map(int, input().split()))\n# b = list(map(int, input().split()))\n\n# is_even(a) = True\n# is_odd(a) = True\n# is_odd(a) = True\n\n# print(a.count(b))\n\nprint(0)\n"}, "2209": {"problem_id": 2209, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\ns = input()\n\ndef max_freq(freq):\n    freq.sort()\n    freq.pop(0)\n    return freq\n\n#print(max_freq(freq))\n\n#print(max_freq(freq))\n\n#print(max_freq(freq))\n\nprint(max_freq(2))\n\nfor i in range(n):\n    print(max_freq(2),end=' ')\n    print(max_freq(2),end=' ')\n"}, "2210": {"problem_id": 2210, "answer": "for _ in range(int(input())):\n    n, x = list(map(int, input().split()))\n    if x == 1:\n        print(\"Ayush\")\n    else:\n        a = x\n        b = 0\n        for i in range(n):\n            if i == x:\n                a = a + 1\n                b = b + 1\n        print(\"Ashish\")\n"}, "2211": {"problem_id": 2211, "answer": "s = input()\nn = len(s)\np, l, r = 0, 0, 0\nfor i in range(n):\n    if s[i] == s[i].lower():\n        p += 1\n    elif s[i] == s[i].lower():\n        l += 1\n    else:\n        r += 1\nprint(p)"}, "2212": {"problem_id": 2212, "answer": "n = int(input())\nfor i in range(n):\n    print(1)\n"}, "2213": {"problem_id": 2213, "answer": "def main():\n    n, m, k = list(map(int, input().split()))\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    arr.sort()\n    print(arr[0])\n    for i in range(1, len(arr)):\n        if arr[i] > arr[i - 1]:\n            break\n        else:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] < arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] > arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] < arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] > arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] < arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] > arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] < arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] > arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] < arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] > arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] < arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] > arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] < arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] > arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n        if arr[i] < arr[i - 1]:\n            arr[i] = arr[i - 1]\n            continue\n     "}, "2214": {"problem_id": 2214, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\na = [int(x) for x in input().split()]\n\n# \u5168\u90e8\u6570\u7ec4\nfor i in range(m):\n    if a[i] == 0:\n        continue\n    else:\n        print(-1)\n        break\n\nans = 0\nfor i in range(n):\n    if a[i] == 0:\n        ans += 1\n    elif a[i] == 1:\n        ans += 1\n    else:\n        print(-1)\n        break\n\nprint(ans)\n"}, "2215": {"problem_id": 2215, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\nl = list(map(int, readline().split()))\nvisited = [False] * (n + m + 1)\n\nfor i in range(m):\n    l[i] = 0\n    visited[l[i]] = True\n    for j in range(i + 1, n + 1):\n        if l[j] == 0:\n            continue\n        else:\n            if visited[l[j]] == False:\n                l[j] = 0\n                visited[l[j]] = True\n                break\n            else:\n                l[j] = 0\n                visited[l[j]] = True\n                break\n\nprint(visited[0])"}, "2216": {"problem_id": 2216, "answer": "from collections import deque\nn, m, k = list(map(int, input().split()))\nrow = [0] * n\ncol = [0] * m\nfor i in range(n):\n    row[i] = 1\n    col[i] = 1\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    if row[x] == 0:\n        row[x] = 1\n    elif col[x] == 0:\n        col[x] = 1\n    else:\n        x, y = list(map(int, input().split()))\n        if row[x] == 0:\n            row[x] = 1\n        elif col[x] == 0:\n            col[x] = 1\n        else:\n            x, y = list(map(int, input().split()))\n            if row[x] == 0:\n                row[x] = 1\n            elif col[x] == 0:\n                col[x] = 1\n            else:\n                x, y = list(map(int, input().split()))\n                if row[x] == 0:\n                    row[x] = 1\n                elif col[x] == 0:\n                    col[x] = 1\n                else:\n                    x, y = list(map(int, input().split()))\n                    if row[x] == 0:\n                        row[x] = 1\n                    elif col[x] == 0:\n                        col[x] = 1\n                    else:\n                        x, y = list(map(int, input().split()))\n                        if row[x] == 0:\n                            row[x] = 1\n                        elif col[x] == 0:\n                            col[x] = 1\n                        else:\n                            x, y = list(map(int, input().split()))\n                            if row[x] == 0:\n                                row[x] = 1\n   "}, "2217": {"problem_id": 2217, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 998244353\n\ndef factor(n):\n    if n % 2 == 0:\n        return n // 2\n    elif n % 2 == 1:\n        return n // 2\n    else:\n        return pow(n, MOD - 1, MOD)\n\n\ndef main():\n    n = int(input())\n    d = list(map(int, input().split()))\n    q = int(input())\n    \n    for i in range(q):\n        v, u = list(map(int, input().split()))\n        print(factor(v) % MOD)\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n       "}, "2218": {"problem_id": 2218, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(a[0] * k)\nprint(b[0] * k)\n\n# Made By Mostafa_Khaled\n"}, "2219": {"problem_id": 2219, "answer": "import math\ndef rec(n, k):\n if n == 0:\n  return 0\n elif n == 1:\n  return math.floor(math.sqrt(k))\n else:\n  return rec(n-1, k-1)\n\nt = int(input())\nfor _ in range(t):\n n, k = list(map(int, input().split()))\n print(rec(n, k))"}, "2220": {"problem_id": 2220, "answer": "n,m,k = map(int,input().split())\na = list(map(int,input().split()))\nmax_h = 0\nfor i in range(n):\n    if a[i] == a[i-1]:\n        max_h += 1\nprint(max_h)"}, "2221": {"problem_id": 2221, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    x,y = map(int,input().split())\n    for i in range(x):\n        x = int(x)\n        y = int(y)\n        print(len(map(str,x)))\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n      "}, "2222": {"problem_id": 2222, "answer": "n = int(input())\nfor i in range(n):\n    a, b = map(int, input().split())\n    if a == 0:\n        print(1)\n    elif a == 1:\n        print(2)\n    else:\n        print(3)\n"}, "2223": {"problem_id": 2223, "answer": "n = int(input())\nedges = [0] * n\nfor i in range(n):\n    u, v = list(map(int, input().split()))\n    edges[u] += 1\n    edges[v] += 1\nprint(max(edges, -1))"}, "2224": {"problem_id": 2224, "answer": "from sys import stdin,stdout\nfrom collections import defaultdict\nfrom bisect import bisect_left,bisect_right\nfrom heapq import heapify,heappop,heappush\nfrom functools import reduce\nfrom operator import itemgetter\nfrom queue import deque\nfrom time import perf_counter\nfrom random import randint,random\nfrom fractions import Fraction\nfrom functools import reduce\nfrom operator import mul\nfrom math import factorial,gcd,floor,sqrt,ceil\nfrom statistics import mean,median\nfrom math import factorials,gcd,floor,sqrt,ceil\n\n\nmod = 998244353\ndef __starting_point():\n    n,m,d = list(map(int,stdin.readline().split()))\n    p = list(map(int,stdin.readline().split()))\n    q = list(map(int,stdin.readline().split()))\n    print(reduce(itemgetter(0,p,mod) for p in p) + reduce(itemgetter(0,q,mod) for q in q))\n__starting_point()"}, "2225": {"problem_id": 2225, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nq = [0] * (n + 1)\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    if x == y:\n        q[i] = 1\n    else:\n        q[i] = q[i - 1]\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(q[n])\n\n__starting_point()"}, "2226": {"problem_id": 2226, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, q = list(map(int, input().split()))\nedges = [[] for i in range(m)]\npq = [0] * q\n\nfor i in range(m):\n    v, u, w = list(map(int, input().split()))\n    edges[v].append(u)\n    edges[u].append(v)\n    pq[v] += 1\n\ndef dfs(v, u):\n    nonlocal pq\n    if v == u:\n        return 0\n    elif v == v[0]:\n        return 1\n    else:\n        pq[v] += 1\n        for w in edges[v]:\n            if w == u:\n                return q\n        return 0\n\ndfs(0, 0)\nprint(pq[0])\n"}, "2227": {"problem_id": 2227, "answer": "import sys\ninput = sys.stdin.readline\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return a\n    else:\n        return b // gcd(b, a % b)\n\ndef __starting_point():\n    print(lcm(input()))\n__starting_point()"}, "2228": {"problem_id": 2228, "answer": "n = int(input())\na, b, d = 0, 0, 0\nfor i in range(n):\n    a += int(input())\n    b += int(input())\n    d += int(input())\nprint(a, b, d)"}, "2229": {"problem_id": 2229, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(' '.join(map(str, b)))"}, "2230": {"problem_id": 2230, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(n-a[0])"}, "2231": {"problem_id": 2231, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        d = [0]*n\n        for i in range(n):\n            d[i] = a[i] + d[i-1]\n        print(*d)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2232": {"problem_id": 2232, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nedges = [[] for _ in range(n)]\nfor _ in range(n-1):\n    u, v = list(map(int, input().split()))\n    edges[u].append(v)\n    edges[v].append(u)\n\ndef dfs(u, v):\n    if u in edges[v]:\n        return\n    else:\n        edges[v].append(u)\n        dfs(u, v)\n\nvisited = set()\nvisited.add(0)\n\ndfs(0, 0)\n\nprint(*edges[0])\n"}, "2233": {"problem_id": 2233, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    s = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    s.sort()\n    t.sort()\n    print('Yes')\n    for i in range(n):\n        if s[i] == t[i]:\n            print('No')\n        else:\n            print('Yes')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2234": {"problem_id": 2234, "answer": "import math\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    x = math.sqrt(n)\n    y = math.sqrt(k)\n    print(min(x, y))"}, "2235": {"problem_id": 2235, "answer": "n = int(input())\nd = {}\nfor i in range(n):\n    d[i] = list(map(int,input().split()))\na = 0\nb = 0\nfor i in range(n):\n    if d[i] == list(map(int,input().split()))[0]:\n        a += 1\n    else:\n        b += 1\nprint(a - b)"}, "2236": {"problem_id": 2236, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    if a[i] < a[i-1]:\n        a[i] = a[i-1]\nprint(len(a))"}, "2237": {"problem_id": 2237, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nans = 0\nfor i in range(n):\n    ans += l[i]\nprint(ans)"}, "2238": {"problem_id": 2238, "answer": "n = int(input())\nmatrix = '*' + '*' + 'D'\nfor i in range(n):\n    matrix.append(str(i))\nprint(''.join(matrix))"}, "2239": {"problem_id": 2239, "answer": "import math\ndef recur(n, k):\n    if k == 0:\n        return 0\n    elif k == 1:\n        return math.prod(n)\n    else:\n        x = n\n        for i in range(1, k + 1):\n            x = recur(n - i, k - i)\n        return x\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = recur(n, 2)\n    print(x)\n"}, "2240": {"problem_id": 2240, "answer": "s = input()\nt = input()\n\nfor i in range(len(s)):\n    if s[i] == '0':\n        t[i] = 0\n    elif s[i] == '1':\n        t[i] = 1\n    else:\n        t[i] = 0\n\nprint(len(t))"}, "2241": {"problem_id": 2241, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    x, y = a[i]\n    if x + y > b:\n        ans += 1\n        break\n    else:\n        ans += b[x + y]\nprint(ans)"}, "2242": {"problem_id": 2242, "answer": "def main():\n    s = input()\n    d = {}\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = 1\n        else:\n            d[s[i]] += 1\n    print((len(d)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2243": {"problem_id": 2243, "answer": "n, k, q = list(map(int, input().split()))\nt = list(map(int, input().split()))\nprint('YES' if t[0] == 1 else 'NO')\nfor i in range(1, n):\n    if t[i] == 1:\n        print('YES')\n        continue\n    elif t[i] == 2:\n        print('NO')\n        continue\n    else:\n        print('YES')\n"}, "2244": {"problem_id": 2244, "answer": "from collections import defaultdict\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nd = defaultdict(list)\nfor i in range(m):\n    d[a[i]].append(i)\n\nans = []\nfor i in range(n):\n    ans.append(d[a[i]])\n\nprint(*ans, sep='\\n')"}, "2245": {"problem_id": 2245, "answer": "def __starting_point():\n t = int(input())\n while(t>0):\n  t-=1\n  n, k = map(int,input().split())\n  if k%2 == 0:\n   print(\"Alice\")\n  else:\n   print(\"Bob\")\n__starting_point()"}, "2246": {"problem_id": 2246, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(a[0] - b[0])"}, "2247": {"problem_id": 2247, "answer": "for _ in range(int(input())):\n s, a, b, c = map(int, input().split())\n if s == b:\n  print(a)\n elif s == c:\n  print(b)\n else:\n  print(c)"}, "2248": {"problem_id": 2248, "answer": "n, m = list(map(int, input().split()))\na = [0]*n\nb = [0]*n\nfor i in range(1, n):\n    if a[i] < b[i]:\n        a[i] = b[i]\n    else:\n        b[i] = a[i]\nprint(a[n-1])"}, "2249": {"problem_id": 2249, "answer": "from sys import stdin, stdout\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\nm = 10**9 + 7\nfor i in range(n):\n    a[i] = list(map(int, stdin.readline().split()))\nprint(m)\n"}, "2250": {"problem_id": 2250, "answer": "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = len(s)\n    r = len(s) - 1\n    if l == r:\n        print(0)\n    else:\n        print(l + r)\n"}, "2251": {"problem_id": 2251, "answer": "from collections import deque\n\nn, m = list(map(int, input().split()))\nedges = []\nfor i in range(1, n):\n    u, v = list(map(int, input().split()))\n    edges.append((u, v))\n\nq = deque([(0, 0)])\nvisited = set()\nvisited.add((0, 0))\nvisited.add((n, 0))\nvisited.add((m, 0))\n\nq.append((0, 0))\nvisited.add((0, 0))\n\nwhile q:\n    cur, curr = q.popleft()\n    if cur in visited:\n        continue\n    else:\n        print(curr, curr.count(cur))\n        q.append((curr, curr.count(cur)))\n\nprint('\\n'.join(map(str, q)))\n"}, "2252": {"problem_id": 2252, "answer": "from collections import defaultdict\nn, m = list(map(int, input().split()))\np = [i for i in range(m)]\nl, r, x = list(map(int, input().split()))\nans = [0] * (n + 1)\nfor i in range(1, n + 1):\n    if p[i] == x:\n        ans[i] = x\n        break\nprint('Yes')\nfor i in range(m):\n    print(ans[i], end ='')\n"}, "2253": {"problem_id": 2253, "answer": "for _ in range(int(input())):\n    s = input()\n    l = len(s)\n    if s[0] == 'po':\n        print('filipino')\n    elif s[0] == 'desu':\n        print('japanese')\n    elif s[0] =='masu':\n        print('koreAN')\n    elif s[0] == 'nida':\n        print('japanese')\n    elif s[0] == 'nida_po':\n        print('kaijikosu')\n    elif s[0] == 'filipino':\n        print('japanese')\n    elif s[0] == 'japanese':\n        print('kaijikosu')\n    elif s[0] == 'koreAN':\n        print('koreAN')\n    elif s[0] == 'koreAN_po':\n        print('koreAN_po')\n    elif s[0] == 'kaijikosu':\n        print('kaijikosu')\n    elif s[0] == 'filipino':\n        print('koreAN_po')\n    elif s[0] == 'japanese':\n        print('kaijikosu')\n    elif s[0] == 'kaijikosu_po':\n        print('kaijikosu_po')\n    elif s[0] == 'koreAN_po':\n        print('koreAN_po')\n    elif s[0] == 'japanese':\n        print('kaijikosu_po')\n    elif s[0] == 'kaijikosu_po_po':\n        print('kaijikosu_po_po')\n    elif s[0] == 'kaijikosu_po_po_po':\n        print('kaijikosu_po_po_po')\n    else:\n        print('filipino')\n        print('japanese')\n"}, "2254": {"problem_id": 2254, "answer": "def is_good(l, r):\n    if l == r:\n        return True\n    elif l & 1:\n        return False\n    else:\n        return True\n\nn = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    if is_good(l, r):\n        print(i)\n    else:\n        print(0)\n"}, "2255": {"problem_id": 2255, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nedges[0].append(1)\nedges[1].append(2)\nedges[0].append(3)\nedges[1].append(4)\nedges[1].append(5)\nedges[1].append(6)\nedges[0].append(7)\nedges[1].append(8)\nedges[1].append(9)\nedges[0].append(10)\nedges[1].append(11)\nedges[1].append(12)\nedges[1].append(13)\nedges[0].append(14)\nedges[1].append(15)\nedges[1].append(16)\nedges[0].append(17)\nedges[1].append(18)\nedges[1].append(19)\nedges[0].append(20)\nedges[1].append(21)\nedges[0].append(22)\nedges[1].append(23)\nedges[1].append(24)\nedges[0].append(25)\nedges[1].append(26)\nedges[1].append(27)\nedges[1].append(28)\nedges[1].append(29)\nedges[1].append(30)\nedges[1].append(31)\nedges[0].append(32)\nedges[1].append(33)\nedges[1].append(34)\nedges[0].append(35)\nedges[1].append(36)\nedges[1].append(37)\nedges[1].append(38)\nedges[0].append(39)\nedges[1].append(40)\nedges[1].append(41)\nedges[1].append(42)\nedges[0].append(43)\nedges[1].append(44)\nedges[0].append(45)\nedges[1].append(45)\nedges[0].append(46)\nedges[1].append(47)\nedges[1].append(48)\nedges[0].append(49)\nedges[1].append(50)\nedges[0].append(51)\nedges[1].append(52)\nedges[0].append(53)\nedges[1].append(54)\nedges[1].append(55)\nedges[1].append(56)\nedges[1].append(57)\nedges[0].append(58)\nedges[1].append(59)\nedges[1].append(60)\nedges[0].append(61)\nedges[1].append(62)\nedges[0].append(64)\nedges[1].append(66)\nedges[1].append(67)\nedges[1].append(68)\nedges[0].append(69)\nedges[1].append(70)\nedges[1].append(71)\nedges[1].append(72)\nedges[1].append(73)\nedges[1].append(74)\nedges[1].append(75)\nedges[1].append(76)\nedges[1].append(77)\nedges[1].append(78)\nedges[1].append(79)\nedges[1].append(80)\nedges[1].append(81)\nedges[1].append(82)\nedges[1].append(83)\nedges[1].append(84)\nedges[1].append(85)\nedges[1].append(86)\nedges[1].append(87)\nedges[1].append(88)\nedges[1].append(89)\nedges[1].append(90)\nedges[1].append(91)\nedges[1].append(92)\nedges[1].append(93)\nedges[1].append(94)\nedges[1].append(95)\nedges[1].append(96)\nedges[1].append(97)\nedges[1].append(98)\nedges[1].append(99)\ned"}, "2256": {"problem_id": 2256, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nfor _ in range(int(input())):\n    n,x,a,b = list(map(int,input().split()))\n    if x==a:\n        print(max(a,b))\n    elif x==b:\n        print(max(a,b-1))\n    else:\n        print(max(a,b-1-x))\n"}, "2257": {"problem_id": 2257, "answer": "n, x_1, y_1, x_2, y_2 = list(map(int, input().split()))\n\ndef is_flipped(x, y):\n    return x == y\n\ndef f(x, y):\n    if x == y:\n        return 0\n    elif x == 0:\n        return 1\n    else:\n        return f(x - y)\n\ndef min_p(x, y):\n    if x == y:\n        return min(x, y)\n    elif x == 0:\n        return min(x, y)\n    else:\n        return min(x, y)\n\ndef min_p(x, y):\n    if x == y:\n        return min(x, y)\n    elif x == 0:\n        return min(x, y)\n    else:\n        return min(x, y)\n\ndef flo(x, y):\n    if x == y:\n        return 1\n    elif x == 0:\n        return 0\n    else:\n        return min(x, y)\n\ndef is_flipped(x, y):\n    return x == y\n\nn, x_1, y_1, x_2, y_2 = list(map(int, input().split()))\n\nd = [0] * (n + 2)\n\nfor i in range(n + 2):\n    x, y = list(map(int, input().split()))\n    d[x] = min(d[x], y)\n\nprint(min_p(d, y))\n"}, "2258": {"problem_id": 2258, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nl = deque.deque()\nfor i in range(n):\n    a.append(list(map(int, input().split())))\nprint(len(a))"}, "2259": {"problem_id": 2259, "answer": "from collections import deque,defaultdict,bisect,merges,copy\nfrom heapq import heappush,heappop,heappushpop,heappoppoppop\nfrom itertools import permutations,combinations aspm\nfrom operator import add,sub,mul,truediv,wekapotential,insort,insortpop,insortpoppop\nfrom functools import lru_cache,reduce,matrix,bisect,accumulate\nfrom fractions import gcd,sqrt,frozensboukh,isfactorial,factorials,mod,mod_without_replacement\nfrom operator import add,sub,mul,truediv,wekapotential,insort,insortpop,insortpoppop\nfrom operator import sub,mul,sub,mulpop\nfrom functools import lru_cache,reduce,matrix,bisect,accumulate\nfrom math import gcd,sqrt,frozensboukh,isfactorial,factorials,mod,mod_without_replacement\nfrom statistics import mean,median asm,polycourses,polypnuse,power,log,floor,floor_with_replacement asp\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    g = defaultdict(set)\n    for i in range(n - 1):\n        a[i] = a[i] if a[i] > a[i + 1] else a[i]\n\n    ans = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            ans += 1\n        elif a[i] == a[i + 1]:\n            ans += 1\n    print(ans)\n\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            break\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2260": {"problem_id": 2260, "answer": "import math\nn = int(input())\nfor i in range(n):\n    n = int(input())\n    print(math.floor(n))"}, "2261": {"problem_id": 2261, "answer": "from collections import deque\ndef __starting_point():\n    k = int(input())\n    print(__starting_point())\n__starting_point()"}, "2262": {"problem_id": 2262, "answer": "n = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n    s.insert(i, 'a')\nprint(len(s))"}, "2263": {"problem_id": 2263, "answer": ""}, "2264": {"problem_id": 2264, "answer": "from sys import stdin, stdout\nfrom collections import defaultdict,deque\nfrom bisect import bisect_left,bisect\nfrom heapq import heappush,heappop,heapify\nfrom functools import reduce,cmp_to_key\nfrom itertools import permutations,combinations\nfrom operator import add,sub,mul,floordiv,selen,squeeves,ccum_factors,accum_mod,compare_to,insort,insal_point,isort,isort_point\nfrom queue import Queue,PriorityQueue\nfrom string import ascii_lowercase,m,fr,in,ip,os,tex,pr,se,sv,w,uni,uni_uni\nfrom decimal import *\nfrom copy import *\nfrom statistics import mean,median,mex,mex2,means_util,mod,poly,polyfit,polar_mod,power,powermod,reduce,reduce_mod,reduce_power,reduce_power_mod\nfrom fractions import Fraction\nfrom math import ceil,floor,sqrt,coprime,str,bit,n,int,float,fdenv,getattr,getresa,getver,getitem,join,join_,isend,isendend,isfree,isendend\nfrom time import perf,time,math,pq,heap,heapq,memo,set,sorted,str,strr,strtol,timez,timez2,timez,tostr,u,v,visited,r,rq,rq2,rq2l,rq2r,rq2r2\nfrom numpy as np\nfrom scipy.integral.power import gcd,gcd_with_HSuffling,gcd_with_HSuffling_withHs,gcd_with_HSuffling_withHS,gcd_with_HSuffling_withHS_withHs,lambda x: map(int,x)\nfrom statistics import mean,median,mex,mex2,means_util,mod,poly,power,reduce,reduce_mod,reduce_power,reduce_power_mod,reduce_power_mod2,reduce_power_mod2l,reduce_power_mod2r,reduce_power_mod2r2\nfrom functools import lru_cache,ric_to_key,take,lru_cache,do,inf,mod,\u72ec\u5171,reduce,reduce_mod,reduce_power,reduce_power_mod,reduce_power_mod2,reduce_power_mod2l,reduce_power_mod2l2\nfrom operator import add,sub,mex,floordiv,selen,squeeves,ccum_factors,accum_mod,compare_to,insort,insal_point,isort,isort_point\nfrom statistics import mean,median,mex,mex2,means_util,mod,poly,polyfit,polar_mod,power,power_mod,reduce,reduce_mod,reduce_power,reduce_power_mod,reduce_power_mod2,reduce_power_mod2l,reduce_power_mod2l2\nfrom fractions import Fraction\nfrom math import ceil,floor,sqrt,coprime,str,bit,n,int,float,fdenv,getattr,getresa,getver,getitem,join,join_,isend,isendend\nfrom statistics import mean,median,mex,mex2,means_util,mod,poly,polyfit,polar_mod,power,power_mod,reduce,reduce_mod,reduce_power,reduce_power_mod,reduce_power_mod2,reduce_power_mod2l,reduce_power_mod2l2\nfrom fractions import Fraction\nfrom math import ceil,floor,sqrt,coprime,str,bit,n,int,float,fdenv,getattr,getresa,getver,getitem,join,join_,isend,isendend\nfrom statistics import mean,median,mex,mex2,means_util,mod,poly,polyfit,polar_mod,power,power_mod,reduce,reduce_mod,reduce_power,reduce_power_mod"}, "2265": {"problem_id": 2265, "answer": "from collections import deque\ndef f(a):\n    if len(a) == 0:\n        return 0\n    else:\n        l = len(a)\n        for i in range(l):\n            if a[i] == '1':\n                a[i] = '0'\n            else:\n                a[i] = '1'\n        return sum(a[i] for i in range(l))\n\ndef main():\n    input = input().strip()\n    print(f(input()))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2266": {"problem_id": 2266, "answer": "n, k, d = map(int, input().split())\np = [0] * (n + 1)\nfor i in range(n):\n    p[i] = min(k, p[i + 1] + d)\nprint(p[n])"}, "2267": {"problem_id": 2267, "answer": "import sys\nreadline = sys.stdin.readline\ninput = lambda: readline().rstrip('\\n')\n\ndef solve():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    print(''.join(a))\n\ndef __starting_point():\n    solve()\n\n__starting_point()"}, "2268": {"problem_id": 2268, "answer": "n, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    print(__starting_point())\n\n__starting_point()"}, "2269": {"problem_id": 2269, "answer": "for _ in range(int(input())):\n    s = input()\n    if len(s) == 1:\n        print('0')\n    else:\n        print(0)\n"}, "2270": {"problem_id": 2270, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ns = list(map(int,input().split()))\nn = int(input())\n#print(s)\n#s.fillna(n)\n#s.fill(n)\n#s.sort()\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s.extend(s)\n#s."}, "2271": {"problem_id": 2271, "answer": "from itertools import permutations as p\nn = int(input())\np = list(map(permutations,p))\ndef dfs(n,p):\n    if n == 0:\n        return 0\n    else:\n        return p[n-1] + p[n-2]\n\nans = 0\nfor i in range(1,n+1):\n    ans += dfs(n-1,p[i])\nprint(ans)"}, "2272": {"problem_id": 2272, "answer": "n = int(input())\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x < y:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "2273": {"problem_id": 2273, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nedges = set(range(1, n + 1))\n\n# vertices and edges are connected\ndef find_neighbours(n):\n    neighbours = []\n    for i in range(n + 1):\n        if n % i == 0:\n            neighbours.append(i)\n    neighbours.sort()\n    neighbours.extend(find_neighours(n // i))\n    return neighbours\n\ndef main():\n    n, m = list(map(int, input().split()))\n    edges = list(range(n + 1))\n    vertices = list(map(int, input().split()))\n    edges.sort()\n    vertices.sort()\n    edges.sort()\n    \n    # print(edges)\n    # print(vertices)\n    # print(edges)\n    \n    # print(vertices)\n    \n    # print(edges)\n    \n    # print(vertices)\n    \n    # print(vertices)\n    \n    \n    # print(vertices)\n    \n    \n    \nmain()"}, "2274": {"problem_id": 2274, "answer": "for _ in range(int(input())):\n n,m = map(int,input().split())\n l = list(map(int,input().split()))\n r = list(map(int,input().split()))\n if n%2==0:\n  print(1)\n elif m%2==0:\n  print(n//2)\n else:\n  print(n//m)"}, "2275": {"problem_id": 2275, "answer": "for i in range(int(input())):\n    a,p,pp = map(int,input().split())\n    print(pp)"}, "2276": {"problem_id": 2276, "answer": "from sys import stdin,stdout\nfrom math import ceil,log2\nfrom collections import defaultdict as dd,deque\nfrom heapq import merge,heappush,heappop,heapify\nfrom bisect import bisect_left as bl,bisect_right as br,bisect\nfrom functools import reduce\nfrom fractions import Fraction\nfrom itertools import combinations,permutations,accumulate,product,enumerate,merge,insort,insort_left,insort_right\nfrom numpy import factorial,sqrt,arithmetic,mod,mod2,isclose,isclose2,isclose\nfrom queue import deque,append,PriorityQueue\nfrom operator import itemgetter\nfrom time import perf_counter,math_trampoline,pfgetc\nfrom functools import lru_cache,lru_cache_with_cache\nfrom re import compile,find,reduce,cmp,georith\nfrom scipy.sart_of_my_computing_system.math import sin,cos,pi,atan(1/pi,2/pi)\nfrom heapq import atan, heappop,heapify,heapify_2D,heapify_214723359,heapify_2d10,heapify_2d9997,heapify_2d528,heapify_2d655 \u30d5\u30fc\u30c8\u30eb\u3092\u8fd4\u3059\nfrom statistics import mean,pow,factorial,variance_mod,variation_mod2,ast\nfrom statistics import mean,median,slope,slope_with_errors,slope_with_errors_remainder,slope_with_errors_segment,slope_with_errors_segment_2,slope_with_errors_segment_3,slope_with_errors_segment_4,slope_with_errors_segment_5,slope_with_errors_segment_6,slope_with_errors_segment_7,slope_with_errors_segment_8,slope_with_errors_segment_9,slope_with_errors_segment_10,slope_with_errors_segment_11,slope_with_errors_segment_12,slope_with_errors_segment_13,slope_with_errors_segment_14,slope_with_errors_segment_15,slope_with_errors_segment_16,slope_with_errors_segment_17,slope_with_errors_segment_18,slope_with_errors_segment_19,slope_with_errors_segment_20,slope_with_errors_segment_21,slope_with_errors_segment_22,slope_with_errors_segment_23,slope_with_errors_segment_24,slope_with_errors_segment_25,slope_with_errors_segment_26,slope_with_errors_segment_27,slope_with_errors_segment_28,slope_with_errors_segment_29,slope_with_errors_segment_29,slope_with_errors_segment_30,slope_with_errors_segment_31,slope_with_errors_segment_32,slope_with_errors_segment_33,slope_with_errors_segment_34,slope_with_errors_segment_35,slope_with_errors_segment_36,slope_with_errors_segment_37,slope_with_errors_segment_38,slope_with_errors_segment_39,slope_with_errors_segment_40,slope_with_errors_segment_41,slope_with_errors_segment_42,slope_with_errors_segment_43,slope_with_errors_segment_44,slope_with_errors_segment_45,slope_with_errors_segment_45_2,slope_with_errors_segment_46,slope_with_errors_segment_47,slope_with_errors_segment_48,slope_with_errors_segment_49,slope_with_errors_segment_50,slope_with_errors_segment_51,slope_with_errors_segment"}, "2277": {"problem_id": 2277, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nprint('odd' if n % 2 else 'even')\n"}, "2278": {"problem_id": 2278, "answer": "import math\nq = int(input())\nfor _ in range(q):\n    a, b, m = map(int, input().split())\n    if m > a:\n        print(-1)\n    else:\n        print(m-a)"}, "2279": {"problem_id": 2279, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort_left as insort, insort_right as br, insort_left as br, insort_right as br, l1, l2, l3, l4, l1_left, l2_right, l3_left, l4_right, l1_right\n\ndef __starting_point():\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l3 = list(map(int, input().split()))\n    l1_left = sorted(l1, reverse=True)\n    l2_right = sorted(l2, reverse=True)\n    l3_left = sorted(l3, reverse=True)\n    l1_right = sorted(l1, reverse=True)\n    l2_right = sorted(l2, reverse=True)\n    l3_right = sorted(l3, reverse=True)\n    print(l1_left[0] + l1_right[0] + l2_right[0])\n\n__starting_point()"}, "2280": {"problem_id": 2280, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[i] = 0\n        l.append(i)\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    print(max(d.values()))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2281": {"problem_id": 2281, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nfor i in range(n):\n    s = min(s, a[i] - a[i - 1])\nprint(s)"}, "2282": {"problem_id": 2282, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\ns = input()\nl = list(s)\nr = list(s)\nfor i in range(n):\n    if l[i] == 'L':\n        l[i] = 'R'\n    elif l[i] == 'R':\n        l[i] = 'L'\n    elif l[i] == 'L':\n        l[i] = 'R'\nprint(sum(l))"}, "2283": {"problem_id": 2283, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b = list(map(int, input().split()))\n    edges[a].append(b)\n    edges[b].append(a)\n\n# dp = [[0] * n for _ in range(m)]\n# dp[0][0] = 0\n# dp[0][1] = 1\n# dp[0][2] = 1\n# dp[0][3] = 1\n# dp[0][4] = 1\n# dp[0][5] = 1\n# dp[0][6] = 1\n# dp[0][7] = 1\n# dp[0][8] = 1\n# dp[0][9] = 1\n# dp[0][0] = 1\n# dp[0][1] = 1\n# dp[0][2] = 1\n# dp[0][3] = 1\n# dp[0][4] = 1\n# dp[0][5] = 1\n# dp[0][6] = 1\n# dp[0][7] = 1\n# dp[0][8] = 1\n# dp[0][0] = 1\n# dp[0][1] = 1\n# dp[0][2] = 1\n# dp[0][3] = 1\n# dp[0][4] = 1\n# dp[0][5] = 1\n# dp[0][6] = 1\n# dp[0][7] = 1\n# dp[0][8] = 1\n# dp[0][0] = 1\n# dp[0][1] = 1\n# dp[0][2] = 1\n# dp[0][3] = 1\n# dp[0][4] = 1\n# dp[0][5] = 1\n# dp[0][6] = 1\n# dp[0][7] = 1\n# dp[0][8] = 1\n# dp[0][9] = 1\n# dp[0][0] = 1\n# dp[0][1] = 1\n# dp[0][2] = 1\n# dp[0][3] = 1\n# dp[0][4] = 1\n# dp[0][5] = 1\n# dp[0][6] = 1\n# dp[0][7] = 1\n# dp[0][8] = 1\n# dp[0][0] = 1\n# dp[0][1] = 1\n# dp[0][2] = 1\n# dp[0][3] = 1\n# dp[0][4] = 1\n# dp[0][5] = 1\n# dp[0][6] = 1\n# dp[0][7] = 1\n# dp[0][8] = 1\n# dp[0][0] = 1\n# dp[0][1] = 1\n# dp[0][2] = 1\n# dp[0][3] = 1\n# dp[0][4] = 1\n# dp[0][5] = 1\n# dp[0][6] = 1\n# dp[0][7] = 1\n# dp[0][8] = 1\n# dp[0][0] = 1\n# dp[0][1] = 1\n# dp[0][2] = 1\n# dp[0][3] = 1\n# dp[0][4] = 1\n# dp[0][5] = 1\n# dp[0][6] = 1\n# dp[0][7] = 1\n# dp[0][8] = 1\n# dp[0][0] = 1\n# dp[0][1] = 1\n# dp[0][2] = 1\n# dp[0][3] = 1\n# dp[0][4] = 1\n# dp[0][5] = 1\n# dp[0][6] = 1\n# dp[0][7] = 1\n# dp[0][8] = 1"}, "2284": {"problem_id": 2284, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(a, b):\n    if a[0] < b[0]:\n        return a[0]\n    elif a[0] > b[0]:\n        return b[0]\n    else:\n        return solve(a, b)\n\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(a, b))\n__starting_point()"}, "2285": {"problem_id": 2285, "answer": "import sys\nn = int(input())\ns = list(map(int, input().split()))\nprint(''.join(s))"}, "2286": {"problem_id": 2286, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\ns = input()\nprint(s.count('1'))"}, "2287": {"problem_id": 2287, "answer": "def main():\n    t = int(input())\n    for _ in range(t):\n        s = input()\n        print(0)\n        for i in range(len(s)):\n            if s[i] == '1':\n                s[i] = '0'\n            elif s[i] == '0':\n                s[i] = 1\n            else:\n                s[i] = 0\n                break\n        print(s.count('1') + s.count('0') + s.count('1'))\nmain()"}, "2288": {"problem_id": 2288, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    print('Yes' if a[0]==b[0] else 'No')"}, "2289": {"problem_id": 2289, "answer": "from sys import stdin,stdout\nn,q = list(map(int,stdin.readline().split()))\na = list(map(int,stdin.readline().split()))\nk = int(stdin.readline().strip())\nfor i in range(n):\n    k += a[i]\nprint(k)\n"}, "2290": {"problem_id": 2290, "answer": "from collections import defaultdict, deque\nn, m = list(map(int, input().split()))\nedges = defaultdict(list)\nfor i in range(m):\n    u, v = list(map(int, input().split()))\n    edges[u].append(v)\n    edges[v].append(u)\n\ndef is_hilch(graph, n, m):\n    if n == m:\n        return True\n    else:\n        return False\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    graph = defaultdict(list)\n    for i in range(n):\n        u, v = list(map(int, input().split()))\n        graph[u].append(v)\n        graph[v].append(u)\n        \n    q = deque()\n    q.append((0, 0))\n    q.append((n, 0))\n    q.append((n, m))\n    print(min(n, m))\n__starting_point()"}, "2291": {"problem_id": 2291, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    print(a[i]*(1<<i))"}, "2292": {"problem_id": 2292, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(\"Yes\" if n % 2 else \"No\")"}, "2293": {"problem_id": 2293, "answer": "import sys\ninput = sys.stdin.readline\n\nM = int(input())\nfor i in range(M):\n    s = list(map(int, input().split()))\n    print('possible' if s[0] > s[-1] else 'impossible')\n"}, "2294": {"problem_id": 2294, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef is_exceed_time(time):\n    if time == 0:\n        return True\n    return False\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(is_exceed_time(a[0]))\n\n__starting_point()"}, "2295": {"problem_id": 2295, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(a[0] + a[1] + a[2])"}, "2296": {"problem_id": 2296, "answer": "import sys\ninput = sys.stdin.readline\n\nn, q = list(map(int, input().split()))\n\nd = {}\nfor _ in range(n):\n    x, y = list(map(int, input().split()))\n    d[x] = y\n    d[y] = x\n    \ndef calc(x, y):\n    if x == y:\n        return 0\n    elif x not in d:\n        return 1\n    else:\n        return d[x] + d[y]\n\nprint(calc(25, 0))\n"}, "2297": {"problem_id": 2297, "answer": "from sys import stdin,stdout\n\nq = int(stdin.readline())\nfor _ in range(q):\n    l,r = list(map(int,stdin.readline().split()))\n    print(r)\n"}, "2298": {"problem_id": 2298, "answer": "for _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    print(a*b*q)"}, "2299": {"problem_id": 2299, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef solve(l, r):\n    if l == r:\n        return 1\n    elif l == 1:\n        return solve(l - 1, r)\n    else:\n        return solve(l, r)\n\nsolve(1, 1)\nsolve(2, 2)\nsolve(3, 3)\nsolve(4, 5)\nsolve(6, 4)\nsolve(7, 5)\nsolve(8, 6)\nsolve(9, 7)\nsolve(10, 10)\nsolve(11, 12)\nsolve(12, 13)\nsolve(13, 14)\nsolve(14, 15)\nsolve(16, 17)\nsolve(18, 18)\nsolve(19, 20)\nsolve(21, 22)\nsolve(23, 24)\nsolve(25, 25)\nsolve(26, 27)\nsolve(28, 29)\nsolve(29, 30)\nsolve(30, 31)\nsolve(31, 32)\nsolve(32, 33)\nsolve(34, 35)\nsolve(36, 36)\nsolve(37, 38)\nsolve(39, 39)\nsolve(40, 40)\nsolve(41, 42)\nsolve(43, 44)\nsolve(44, 45)\nsolve(46, 47)\nsolve(47, 48)\nsolve(49, 49)\nsolve(50, 50)\nsolve(51, 51)\nsolve(52, 52)\nsolve(53, 54)\nsolve(55, 55)\nsolve(56, 56)\nsolve(57, 58)\nsolve(58, 59)\nsolve(60, 61)\nsolve(61, 62)\nsolve(64, 65)\nsolve(66, 67)\nsolve(67, 68)\nsolve(69, 70)\nsolve(70, 71)\nsolve(72, 73)\nsolve(74, 72)\nsolve(75, 76)\nsolve(77, 77)\nsolve(78, 78)\nsolve(79, 80)\nsolve(80, 81)\nsolve(81, 82)\nsolve(82, 83)\nsolve(84, 84)\nsolve(85, 86)\nsolve(86, 87)\nsolve(87, 88)\nsolve(88, 89)\nsolve(89, 90)\nsolve(90, 91)\nsolve(91, 92)\nsolve(92, 93)\nsolve(94, 95)\nsolve(96, 96)\nsolve(97, 98)\nsolve(97, 99)\nsolve(98, 100)\nsolve(99, 100)\nsolve(99, 101)\nsolve(100, 101)\nsolve(101, 102)\nsolve(103, 103)\nsolve(104, 104)\nsolve(105, 105)\nsolve(106, 106)\nsolve(107, 107)\nsolve(108, 108)\nsolve(109, 108)\nsolve(110, 111)\nsolve(111, 110)\nsolve(111, 111)\nsolve(112, 112)\nsolve(113, 113)\nsolve(114, 114)\nsolve(114, 114)\nsolve(115, 115)\nsolve(116, 116)\nsolve(118, 117)\nsolve(119, 118)\nsolve(119, 120)\nsolve(120, 120)\nsolve(121, 121)\nsolve(122, 121)\nsolve(123, 122)\nsolve(123, 122)\nsolve(124, 123)\nsolve(124, 124)\nsolve(125, 125)\nsolve(126, 126)\nsolve(127, 127)\nsolve(128, 128)\nsolve(129, 129)\nsolve(130, 130)\nsolve(131, 130)\nsolve(131, 132)\nsolve(132, 132)\nsolve(133, 134)\nsolve(134,"}, "2300": {"problem_id": 2300, "answer": "from itertools import combinations\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ns = sum(a)\n\nfor i in range(1, n + 1):\n    if a[i] == 1:\n        s -= a[i - 1]\n        break\n\nprint(s)\n"}, "2301": {"problem_id": 2301, "answer": "from math import ceil\nn = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n    s[i] = ceil(a[i]/2)\nprint(max(s))"}, "2302": {"problem_id": 2302, "answer": ""}, "2303": {"problem_id": 2303, "answer": "class Solution:\n     def reverseWords(self, s: str) -> str:\n         \"\"\"\n         :type s: str\n         :rtype: str\n         \"\"\"\n         words = []\n         for i in range(len(s)):\n             words.append(s[i])\n         words.sort(key=lambda x: x[0])\n         words.extend(s[:i])\n         return ''.join(words)"}, "2304": {"problem_id": 2304, "answer": "from collections import deque\nN, M = map(int, input().split())\nL, R, D = [], []\nfor i in range(N):\n    x, y, z = map(int, input().split())\n    L.append((x, y, z))\n    R.append((x, y, z))\n    D.append((x, y, z))\nprint('\\n'.join(map(str, L)))"}, "2305": {"problem_id": 2305, "answer": "from collections import deque\nN = int(input())\nC = [int(x) for x in input().split()]\nedges = []\nfor i in range(N-1):\n    a, b = list(map(int, input().split()))\n    edges.append([a, b])\n\nq = deque([])\nvisited = set()\nvisited.add(0)\nwhile q:\n    node = q.popleft()\n    if node in visited:\n        continue\n    else:\n        q.append(node)\n        visited.add(node)\n        print(len(visited))\n        for nei in edges:\n            if nei not in visited:\n                q.append(nei)\n                visited.add(nei)\n                print(len(visited))\n                break\n            else:\n                q.append(nei)\n                visited.add(nei)\n                print(len(visited))\n                break\n"}, "2306": {"problem_id": 2306, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nt = list(map(int, input().split()))\n\n# \u8981\u7d20\u6570\u7ec4\u5185\u90e8\u5206\u5909\u6570\u5b57\nd = 1000000000000\nfor i in range(n):\n    d = max(d, t[i] + t[i - 1])\n    print(d)\n"}, "2307": {"problem_id": 2307, "answer": ""}, "2308": {"problem_id": 2308, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = [0] * (n + 1)\n    for i in range(n):\n        s[i] = int(input())\n    print(' '.join(s))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2309": {"problem_id": 2309, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\ns = list(map(int, readline().split()))\n\nl = [0] * n\nfor i in range(n):\n    l[s[i]] += 1\n\nprint(2 * l[-1])"}, "2310": {"problem_id": 2310, "answer": ""}, "2311": {"problem_id": 2311, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\n# \u8981\u7d20\u6570\u91cf\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    a[x] += y\n    a[y] += x\n\n# \u5168\u90e8\u5206\u6700\u540e\u4e00\u4e2a\u6570\u5b57\nans = 0\nfor i in range(n):\n    ans += a[i]\n    ans %= 10**9+1\n\nprint(ans)\n"}, "2312": {"problem_id": 2312, "answer": "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = [0]*n\n    for i in range(n):\n        a[i] = 2*b[i]\n    print(\"YES\" if a[0]==1 else \"NO\")"}, "2313": {"problem_id": 2313, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\nb = list(map(int, stdin.readline().split()))\n\ndef solve(n, a):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a[0]\n    else:\n        res = 0\n        for i in range(1, n):\n            res += a[i]\n        return res\n\nprint(solve(n, a))\n"}, "2314": {"problem_id": 2314, "answer": ""}, "2315": {"problem_id": 2315, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n    l, r = map(int, input().split())\n    if l < 10:\n        print(l, r)\n    else:\n        print(l, r)"}, "2316": {"problem_id": 2316, "answer": "for _ in range(int(input())):\n    x,n,m=map(int,input().split())\n    if m==0:\n        print(\"NO\")\n    else:\n        print(\"YES\")"}, "2317": {"problem_id": 2317, "answer": "from math import ceil\nn, m, a, b = list(map(int, input().split()))\n\ndef dist(x, y):\n    return (x - y) ** 0.5\n\ndef rec(x, y, d):\n    return min(d, x, y)\n\n\ndef __starting_point():\n    n, m, a, b = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    r = list(map(int, input().split()))\n    print(l[0], r[0], rec(l[1], l[2], r[2]))\n\n__starting_point()"}, "2318": {"problem_id": 2318, "answer": "n = int(input())\nwords = []\nfor i in range(n):\n    word = input()\n    words.append(word)\n\nprint('YES' if words[-1] == 'h' else 'NO')\n"}, "2319": {"problem_id": 2319, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    t = list(s)\n    ans = 0\n    for i in range(n):\n        if s[i] == t[i]:\n            ans += 1\n        else:\n            ans += -1\n    print(ans)\n"}, "2320": {"problem_id": 2320, "answer": "import sys\ninput = sys.stdin.readline\n\ndef lcm(a, b):\n    return (a * b) // (b * a)\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    s = input()\n    t = input()\n    l = len(s)\n    r = len(t)\n    ans = 0\n    for i in range(n):\n        if s[i] == t[i]:\n            ans += 1\n        else:\n            ans += lcm(s[i], t[i])\n    print(ans)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2321": {"problem_id": 2321, "answer": "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = input()\n        print(len(s))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2322": {"problem_id": 2322, "answer": ""}, "2323": {"problem_id": 2323, "answer": "from sys import stdin, stdout\nn = int(stdin.readline())\ns = list(map(int, stdin.readline().split()))\nq = int(stdin.readline())\nfor _ in range(q):\n\tl, r = list(map(int, stdin.readline().split()))\n\ts.append(l)\n\tr.append(l)\n\tprint(s[r-1] +'and'+''.join(map(str, s)))"}, "2324": {"problem_id": 2324, "answer": "s = input()\nfor i in range(len(s)):\n    if s[i] in 'abcdef':\n        print(i, end=' ')\n    else:\n        print(i, end=' ')\n"}, "2325": {"problem_id": 2325, "answer": "import sys\n\ninput = sys.stdin.readline\n\ndef solve():\n    x, y = map(int, input().split())\n    print(solve())\n\nq = int(input())\nfor _ in range(q):\n    x, y = map(int, input().split())\n    print(solve())\n"}, "2326": {"problem_id": 2326, "answer": "def fact(n):\n    if n == 0:\n        return 1\n    elif n%2 == 0:\n        return (n//2)%1000000007\n    else:\n        return (fact(n//2) * fact(n-1) %1000000007)%1000000007\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    mod = 998244353\n    dp = [0]*(n+1)\n    for i in range(1, n+1):\n        dp[i] = dp[i-1] + a[i-1]\n    print(dp[n])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2327": {"problem_id": 2327, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int,input().split()))\n    l.sort()\n    print(sum(l[0:n-1]))"}, "2328": {"problem_id": 2328, "answer": "import sys\ninput = sys.stdin.readline\n\ndef find_lcm(a, b):\n    return a*b\n\ndef smol(a, b):\n    return (a - b) // (b - a)\n\ndef kruskal(a, b):\n    return (a + b) // (b - a)\n\ndef lcm(a, b):\n    return (a * b) // (a - b)\n\ndef solve(n, k):\n    d = list(map(int, input().split()))\n    d.sort()\n    ans = 0\n    for i in range(n):\n        ans += smol(d[i], d[i] + kruskal(d[i] + 1, d[i] + 1))\n    return ans\n\ndef main():\n    n, k = int(input()), 0\n    for _ in range(n):\n        a, b = list(map(int, input().split()))\n        print(find_lcm(a, b))\n        print(find_lcm(a - b, b))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2329": {"problem_id": 2329, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\nt = list(map(int, input().split()))\n\nfor _ in range(m):\n    a, b = list(map(int, input().split()))\n    t.append(a)\n    t.append(b)\n\nans = 0\nfor i in range(n):\n    if t[i] == t[i - 1] and ans < m:\n        ans += 1\nprint(ans)\n"}, "2330": {"problem_id": 2330, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    w = max(a)\n    c = 0\n    for i in range(n):\n        if a[i] == 1:\n            c += w\n        else:\n            w = a[i]\n            break\n    if c == m:\n        print(1)\n    else:\n        print(-1)\n"}, "2331": {"problem_id": 2331, "answer": "for _ in range(int(input())):\n\ta,b=map(int,input().split())\n\tif a>b:\n\t\tprint(\"Infinite\")\n\telse:\n\t\tprint(\"Finite\")"}, "2332": {"problem_id": 2332, "answer": "n, k, m = list(map(int, input().split()))\na = list(map(int, input().split()))\ng = [0] * (n + 1)\nfor i in range(k):\n    g[i] += a[i]\nprint(min(g))\n"}, "2333": {"problem_id": 2333, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint(sum(a))"}, "2334": {"problem_id": 2334, "answer": "n = int(input())\na = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n    s += a[i]\nprint(s)"}, "2335": {"problem_id": 2335, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\npoints = list(map(int, input().split()))\n\ndef dfs(p, color):\n    if p[0] == color:\n        return True\n    elif p[0] == p[1]:\n        return False\n    else:\n        p[0] = color\n        for i in range(1, n):\n            if p[i] == p[i-1]:\n                p[i] = p[i-1]\n                continue\n            else:\n                p[i] = min(p[i-1] - p[i], dfs(p, color))\n                p[i] = min(p[i-1] - p[i], dfs(p, color))\n        return True\n\ndfs(0, 0)\nprint(int(round(sum(points) / 2)))\n\n"}, "2336": {"problem_id": 2336, "answer": "import math\nn,k,q = input().split()\nn,k = int(n),int(k)\ncnt = 0\nfor i in range(q):\n    l,r = input().split()\n    l = int(l)\n    r = int(r)\n    cnt += math.ceil(math.log(r,2))\nprint(cnt)"}, "2337": {"problem_id": 2337, "answer": "n, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(min(a) + max(b))"}, "2338": {"problem_id": 2338, "answer": "from sys import stdin, setrecursionlimit\ninput = stdin.readline\nn = int(input())\nsetrecursionlimit(n)\n#print(input())\ndef solve(x,y):\n    if x<0 or y<0:\n        return 0\n    elif x==0 or y==0:\n        return 1\n    else:\n        x,y = map(int,input().split())\n        print(solve(x,y))\n        return 1\n\ndef __starting_point():\n    n = int(input())\n    print(solve(0,n))\n__starting_point()"}, "2339": {"problem_id": 2339, "answer": "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = [0]*n\n    for i in range(n):\n        if a[i] == b[i]:\n            ans[i] = 1\n        else:\n            ans[i] = max(ans[i], b[i])\n    print(' '.join(map(str, ans)))\n"}, "2340": {"problem_id": 2340, "answer": "import sys\ninput = sys.stdin.readline\n\ndef __starting_point():\n    q = int(input())\n    for _ in range(q):\n        h, n = list(map(int, input().split()))\n        p = list(map(int, input().split()))\n        if p[0] == h:\n            print(1)\n        else:\n            print(min(p[1:], p[n-1]))\n\n__starting_point()"}, "2341": {"problem_id": 2341, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\nd = [[0 for _ in range(n)] for _ in range(m)]\n\nfor i in range(n):\n    d[i][i] = 1\n    for j in range(m):\n        if j not in d[i]:\n            d[i][j] = 1\n        else:\n            d[i][j] += d[i][j]\n\nprint(d[n-1][m-1])\n"}, "2342": {"problem_id": 2342, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n    maze = [[] for _ in range(n)]\n    for i in range(m):\n        if '.' in input() or '#' in input() or 'B' in input() or 'G' in input() or 'B' in input() or 'G' in input() or 'B' in input() or 'G' in input() or 'B' in input() or 'G' in input() or 'B' in input() or 'G' in input() or 'B' in input() or 'G' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input()]:\n            print('Yes')\n            continue\n        elif '.' in input() or '#' in input() or 'B' in input() or 'G' in input() or 'B' in input() or 'G' in input() or 'B' in input() or 'G' in input() or 'B' in input() or 'G' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B' in input() or 'B"}, "2343": {"problem_id": 2343, "answer": "for _ in range(int(input())):\n    n,k = map(int,input().split())\n    print('YES' if k%2==0 else 'NO')"}, "2344": {"problem_id": 2344, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int,input().split()))\n\ndef dfs(i,j):\n    if i == j:\n        return 0\n    elif i == 0:\n        return A[i]\n    else:\n        A[i] = A[j]\n        return max(A[i],A[j])\n\nans = 0\nfor i in range(n):\n    ans += dfs(i,0)\nprint(ans)\n"}, "2345": {"problem_id": 2345, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in a:\n        s += i\n    print(s)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2346": {"problem_id": 2346, "answer": ""}, "2347": {"problem_id": 2347, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    p = input()\n    h = p.split(' ')\n    print('NO') if len(h) <= 1 else 'YES'\n    for i in range(len(h)):\n        if h[i] not in ['zero', 'one', 'two', 'three', 'four', 'five','six','seven', 'eight', 'nine']:\n            print('NO')\n        else:\n            print('YES')\n            break\n    else:\n        print('NO')"}, "2348": {"problem_id": 2348, "answer": "def __starting_point():\n    a=int(input())\n    b=0\n    for i in range(a):\n        print(b)\n\n__starting_point()"}, "2349": {"problem_id": 2349, "answer": "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    print(gcd(s[0], s[1]))\n"}, "2350": {"problem_id": 2350, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    x, y, z = map(int, input().split())\n    print((z - 1) // 2)\n"}, "2351": {"problem_id": 2351, "answer": "from math import sqrt\nn, k, l = map(int, input().split())\ns = list(map(int, input().split()))\n\ndef is_good(n):\n    if n == -1:\n        return False\n    elif n == 0:\n        return True\n    else:\n        return False\n\nans = 0\nfor i in range(1, k + 1):\n    if is_good(i):\n        ans += sqrt(n - i)\n    else:\n        ans += sqrt(i)\n\nprint(ans % 1000000007)"}, "2352": {"problem_id": 2352, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, m = list(map(int, input().split()))\n    d = [[0] * m for _ in range(n)]\n    for i in range(n):\n        d[i][0] = 1\n        d[i][1] = 1\n        for j in range(1, m):\n            if i == 0:\n                d[i][0] = 0\n            elif i == 1:\n                d[i][0] = 1\n            elif i == 2:\n                d[i][1] = 1\n            else:\n                d[i][0] = 0\n                d[i][1] = 1\n                \n    print('YES')\n            \ndef __starting_point():\n    main()\n\n__starting_point()"}, "2353": {"problem_id": 2353, "answer": "for _ in range(int(input())):\n    a, b, c, d = map(int, input().split())\n    if a == b == c == d:\n        print(d)\n    else:\n        if d > a:\n            print(-1)\n        else:\n            print(d)"}, "2354": {"problem_id": 2354, "answer": "from sys import stdin,stdout\nfrom math import gcd,sqrt,ceil,log,fmod,factorial,log2,inf,sqrt,copysign,factorial,gcd\nfrom collections import deque,Counter,defaultdict,deque,OrderedDict,nullable,None,None\nfrom heapq import heapify,heappop,heappush,nsmallest,sub,subs,mod,inf,gcd\nfrom bisect import bisect_left,bisect_left,bisect_left,floord,gcd,insort,insort_left,insort_right\nfrom functools import reduce,cmp_to_key\nfrom itertools import permutations,accumulate,groupby\nfrom operator import itemgetter\nfrom queue import deque,PriorityQueue,PriorityTracker,PriorityErrors\nfrom string import ascii_uppercase,ascii_lowercase,truncate,floor,floor_with_replacement,lru_cache,less,mul,rfloor,mul_with_replacement,reduce,str,str_with_replacement\nfrom fractions import Fraction\nfrom fractions. fractions.oshtonn importoshtonn,oscar,oscar_with_replacement,sin,pi,pi_with_replacement,trunc,trunc_with_replacement,traverse,traverse_with_replacement,traverse_with_replacement,traverse_with_replacement,traverse_with_replacement,traverse_with_replacement,traverse_with_replacement,traverse_with_replacement\nfrom statistics import mean,median,slope,coef,exp,ig,ig_with_replacement,power,power_of_two,poly,poly_with_replacement,power_of_two_with_replacement,power_of_two_with_replacement,mean_with_mean,wend,end\n\n\n# \u8981\u79fb\ufffd======\nN = int(input())\nq = int(input())\nfor _ in range(q):\n    x, y = list(map(int, input().split()))\n    print(str(x) + \" \" + str(y) + \" \" + str(abs(x - y)))\n"}, "2355": {"problem_id": 2355, "answer": "from collections import defaultdict, deque\nt = int(input())\nfor _ in range(t):\n    n, p = map(int, input().split())\n    graph = defaultdict(list)\n    for i in range(n):\n        graph[i].append(i+1)\n    for i in range(2, n+p):\n        if i not in graph:\n            graph[i].append(i+1)\n    print(' '.join(map(str, graph)))"}, "2356": {"problem_id": 2356, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*a, sep='')"}, "2357": {"problem_id": 2357, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [-1] * n\n    for i in range(n - 1, 0, -1):\n        ans[i] = a[i]\n    print(ans[-1])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2358": {"problem_id": 2358, "answer": "import sys\n\ndef solve(s):\n    n = len(s)\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n            break\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n            break\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n            break\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n            break\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n            break\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n            break\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n            break\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n            break\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n            break\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n            break\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n"}, "2359": {"problem_id": 2359, "answer": "for _ in range(int(input())):\n\th,c,t=map(int,input().split())\n\tif h>t:\n\t\tprint(h)\n\telse:\n\t\tprint(c)"}, "2360": {"problem_id": 2360, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int,input().split()))\n    l.sort()\n    print(l[0] - 1)\n    print(' '.join(map(str,l)))"}, "2361": {"problem_id": 2361, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, m, k = map(int, input().split())\n    if n % k == 0:\n        print(0)\n    elif m % k == 0:\n        print(k - m)\n    else:\n        p = m // k\n        for i in range(n // k):\n            p += p - m // k\n        print(p)"}, "2362": {"problem_id": 2362, "answer": "from collections import defaultdict,deque,OrderedDict\r\nn = int(input())\r\na = list(map(int,input().split()))\r\n\r\ndef dfs(x,y):\r\n    if x!=y:\r\n        return 0\r\n    else:\r\n        x,y = x,y\r\n        dfs(x,y)\r\n\r\nfor i in range(n-1):\r\n    x,y = list(map(int,input().split()))\r\n    print(dfs(x,y))\r\n"}, "2363": {"problem_id": 2363, "answer": "import sys\n\ndef main():\n    input = sys.stdin.readline\n    for line in input().split(' '):\n        a, b = list(map(int, line.split(' ')))\n        print(a + b)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2364": {"problem_id": 2364, "answer": "from math import gcd\nn = int(input())\na = list(map(int, input().split()))\nd = 10**9 + a[0]\ng = gcd(a[1], d)\nprint(g)"}, "2365": {"problem_id": 2365, "answer": "class Solution:\n     def parseBoolExpr(self, expression: str) -> bool:\n         \"\"\"\n         :type expression: str\n         :rtype: bool\n         \"\"\"\n         self.memo = {}\n         self.memo[expression] = True\n         self.memo[expression] = False\n         return self.dfs(expression, 0, len(expression)-1)\n         \n     def dfs(self, expression, x, y):\n         if x == y:\n             return True\n         elif x == 0:\n             return False\n         elif y == 0:\n             return False\n         else:\n             if self.dfs(expression, x+1, y):\n                 return True\n             elif self.dfs(expression, x, y+1):\n                 return True\n             else:\n                 return False\n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n     "}, "2366": {"problem_id": 2366, "answer": "def solve(n,a):\n    d = sorted(set(a))\n    ans = 0\n    for i in range(n-1):\n        if d[i]>a[i]:\n            ans += d[i]\n        elif d[i]==a[i]:\n            d[i] = a[i]\n    return ans\n\nn = int(input())\na = list(map(int,input().split()))\nprint(solve(n,a))"}, "2367": {"problem_id": 2367, "answer": "def main():\n    H, W = list(map(int, input().split()))\n    A, B = 0, 0\n    for _ in range(H):\n        x, y = list(map(int, input().split()))\n        A = x % W\n        B = y % W\n        if A == 0:\n            A = 1\n        elif A == 1:\n            B = 1\n        else:\n            print((A * (B - 1) % W))\n            A = 1\n            B = 1\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n   "}, "2368": {"problem_id": 2368, "answer": "from collections import deque\nN, M = list(map(int, input().split()))\nedges = [[] for _ in range(N)]\nfor _ in range(M):\n    a, b = list(map(int, input().split()))\n    edges[a].append(b)\n    edges[b].append(a)\n\ndef dfs(vertex, parent):\n    if parent ==vertex:\n        return 1\n    elif parent ==vertex[0]:\n        return 0\n    else:\n        parent[vertex[0]] = parent[vertex[1]] = parent[vertex[2]] = 0\n        dfs(vertex, parent)\n        return 1\n\ndef get_neighbors(vertex):\n    neighbors = []\n    for i in range(N):\n        if vertex[i] ==vertex[i] and neighbors:\n            neighbors.append(i)\n    return neighbors\n\nn, m = list(map(int, input().split()))\nedges = [[] for _ in range(n)]\nfor _ in range(M):\n    c, d = list(map(int, input().split()))\n    edges[c].append(d)\n    edges[d].append(c)\n\ndfs(0, 0)\nprint(yes)\n"}, "2369": {"problem_id": 2369, "answer": "from itertools import combinations\ndef factorial(n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return sqrt(n)\n    else:\n        return factorial(n-1)\n\ndef main():\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    dp = [0] * (N+K+1)\n    for i in range(K):\n        dp[i] = dp[i-1] + A[i] % A[i]\n    print((sum(dp)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2370": {"problem_id": 2370, "answer": "from collections import deque\nN = int(input())\nA = list(map(int, input().split()))\nG = [0]*N\nfor i in range(N):\n    G[i] = min(G[i-1] + 1, A[i])\nprint(len(G))"}, "2371": {"problem_id": 2371, "answer": "def main():\n N, Z, W, A = list(map(int, input().split()))\n A.sort()\n print(sum(A[0] for i in range(N, Z) if A[i] == A[Z-i]))\n"}, "2372": {"problem_id": 2372, "answer": "# https://atcoder.jp/contests/arc082/submissions/arc082_11_with_julia\nfrom collections import deque\nH,W = list(map(int,input().split()))\nC,D = list(map(int,input().split()))\nM = [0]*H\nfor i in range(W):\n    M[i] = min(C[i],C[W-i])\nprint(len(M))\n"}, "2373": {"problem_id": 2373, "answer": "from collections import deque\nN = int(input())\np = list(map(int, input().split()))\nque = deque([p])\nwhile que:\n    a, b = que.popleft()\n    if a == b:\n        print(0)\n        return\n    elif a == 0:\n        print(0)\n        return\n    elif a > b:\n        que.append([a, b])\n    else:\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        a, b = b, a\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n        que.append([a, b])\n        a, b = b, a\n        que.pop()\n   "}, "2374": {"problem_id": 2374, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ndef dfs(i, c):\n    if i == 0:\n        return 1\n    elif i == 1:\n        return 0\n    elif c == 0:\n        return 1\n    else:\n        return 0\n\nfor i in range(M):\n    B[i] = dfs(i, A[i])\n\nprint('\\n'.join(map(str, B)))"}, "2375": {"problem_id": 2375, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort_left as insort, insort_right as insort\nfrom heapq import heapify, heappush, heappop\nmod = 10**9+7\nn = int(input())\nheap = []\nfor i in range(n):\n    x,y = map(int,input().split())\n    if x == y:\n        continue\n    if x%2 == 0:\n        heappush(heap, (x//2,y))\n    else:\n        heappop(heap)\nprint(('brown',i))"}, "2376": {"problem_id": 2376, "answer": "n,w = map(int,input().split())\nl = list(map(int,input().split()))\nl.sort(reverse=True)\ns = 0\nfor i in range(n):\n    if l[i] > l[i-1]:\n        s += l[i]\nprint(s)"}, "2377": {"problem_id": 2377, "answer": "import sys\ninput = sys.stdin.readline\n\nn, h = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef dfs(x, y):\n    if x == y:\n        return 1\n    elif x < y:\n        return 0\n    else:\n        return dfs(x, y)\n\ndef dfs2(x, y):\n    if x == y:\n        return 1\n    elif x < y:\n        return 0\n    else:\n        return dfs(x, y)\n\ndef dfs3(x, y):\n    if x == y:\n        return 1\n    elif x < y:\n        return 0\n    else:\n        return dfs(x, y)\n\ndef main():\n    n, h = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    dfs(a, b)\n    print(h)\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2378": {"problem_id": 2378, "answer": "from collections import deque\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n# A = [0]*N\n# B = [0]*N\n# for i in range(N-1):\n#     A[i] = 1\n#     B[i] = 1\n#     for j in range(i+1, N):\n#         if A[j] == 1:\n#             A[j] = 1\n#         else:\n#             A[j] = 0\n#             B[j] = 1\n#             break\n#     if A[N-1] == 1:\n#         A[N-1] = 1\n#     elif A[N-1] == 0:\n#         A[N-1] = 1\n#     else:\n#         A[N-1] = 0\n#         B[N-1] = 1\n#         break\n#     if B[N-1] == 1:\n#         B[N-1] = 1\n#     elif B[N-1] == 0:\n#         B[N-1] = 1\n#     else:\n#         B[N-1] = 0\n#         break\n#     if A[N-1] == 1:\n#         A[N-1] = 1\n#     elif A[N-1] == 0:\n#         A[N-1] = 1\n#         B[N-1] = 1\n#         break\n#     if B[N-1] == 1:\n#         B[N-1] = 1\n#     elif B[N-1] == 0:\n#         B[N-1] = 1\n#         break\n#     if A[N-1] == 1:\n#         A[N-1] = 1\n#     elif A[N-1] == 0:\n#         A[N-1] = 1\n#         B[N-1] = 1\n#         break\n#     if B[N-1] == 1:\n#         B[N-1] = 1\n#     elif B[N-1] == 0:\n#         B[N-1] = 1\n#         break\n#     if A[N-1] == 1:\n#         A[N-1] = 1\n#     elif A[N-1] == 0:\n#         A[N-1] = 1\n#         B[N-1] = 1\n#         break\n#     if B[N-1] == 1:\n#         B[N-1] = 1\n#         break\n#     if A[N-1] == 1:\n#         A[N-1] = 1\n#     elif A[N-1] == 0:\n#         A[N-1] = 1\n#         B"}, "2379": {"problem_id": 2379, "answer": "import sys\ninput = sys.stdin.readline\n\nN, K = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\ndef dfs(s, i):\n    if i == 0:\n        return 1\n    elif s[i] == 'o':\n        return dfs(s[:i] + s[i+1:], i+1)\n    else:\n        return dfs(s[:i] + s[i+1:], i+1)\n\n# \u7b54\u3048\u306f\u4e00\ufffdansomty\u4e0a\u3052\u306a\u3044\n# \u4eca\u56de\u521d\u671f\u5316\n# \u30b9\u30bf\u30fc\u30c8\u521d\u671f\u5316\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)\u306e\u5834\u5408\n# \u4f4d\u7f6e(\u533a\u9593)"}, "2380": {"problem_id": 2380, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += sum(a[i:i+m])\n    ans -= sum(b[i:i+m])\nprint(ans)"}, "2381": {"problem_id": 2381, "answer": "N,K = map(int,input().split())\nA = list(map(int,input().split()))\n#print(A)\n#print(K)\n#print(A[0])\n#print(A[-1])\nMOD = 10**9+7\nfor i in range(N):\n    if A[i]%2 == 0:\n        print((A[i]//2) * pow(2,i,MOD))\n    else:\n        print((A[i]//2) * pow(2,i,MOD))\n"}, "2382": {"problem_id": 2382, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list(map(int, input().split()))\n\ndef solve(n, s):\n    if n == 0:\n        return \"Yes\"\n    elif n < 0:\n        return \"No\"\n    else:\n        return solve(n-1, s[n:])\n\ndef __starting_point():\n    n = int(input())\n    s = list(map(int, input().split()))\n    print(\"Yes\\n\")\n__starting_point()"}, "2383": {"problem_id": 2383, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nA = list(map(int, readline().split()))\n\ndef main():\n    N = int(readline())\n    A = sorted(A, reverse=True)\n    print(len(A))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2384": {"problem_id": 2384, "answer": "from collections import deque\nN = int(input())\nA = list(map(int, input().split()))\ndeque = deque()\nfor i in range(N):\n    x = A[i]\n    if x not in deque:\n        deque.append(x)\n        A[i] = x\n    else:\n        deque.append(x)\nprint(max(A))"}, "2385": {"problem_id": 2385, "answer": "from collections import deque\nN = int(input())\nA = [int(i) for i in input().split()]\nMOD = 10**9+7\nedges = [[] for _ in range(N)]\nfor i in range(N-1):\n    a, b = list(map(int, input().split()))\n    A[a-1].append(b-1)\n    A[b-1].append(a-1)\n\n# \u5982\u4f55\u8981\u7528\u4e8e\u5faa\u73af\uff0c\u56e0\u4e3a\u4e00\u4e2a\u9762\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u6570\u90fd\u4f1a\u8c61\u66f4\u65b0\uff0c\u800c\u4e0d\u662f\u5faa\u73af\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5224\u65ad\u6709\u591a\u5c11\u4e2a\u6570\u90fd\u4f1a\u8c61\u66f4\u65b0\uff0c\u5426\u5219\u4e0d\u80fd\u51cf\u53bb\uff0c\u56e0\u6b64\u6211\u4eec\u60f3\u5230\u4e86\u5bb9\u6613\u5185\u7684\u81ea\u8eab\ndef dfs(n):\n    if n == 1:\n        return 1\n    dp = [0]*(n+1)\n    for i in range(1, n+1):\n        dp[i] = dp[i-1] + dp[i]\n        dp[i] = max(dp[i-1], dp[i])\n    return dp[n]\n\ndef main():\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    MOD = 10**9+7\n    vertices = [set() for _ in range(n)]\n    mod = pow(10, MOD-2, MOD)\n    for i in range(n-1):\n        a, b = list(map(int, input().split()))\n        A[a-1].append(b-1)\n        A[b-1].append(a-1)\n        dfs(a-1)\n        dfs(b-1)\n        \n    print(len(A))\n    print('\\n'.join(map(str, A)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2386": {"problem_id": 2386, "answer": "N = int(input())\nA = list(map(int, input().split()))\ns = 0\nfor i in range(N):\n    s += A[i] - A[i-1]\nprint(s)"}, "2387": {"problem_id": 2387, "answer": "from collections import deque\n\ndef lcm(a, b):\n    return a*b\n\ndef main():\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    q = deque([])\n    for i in range(n):\n        q.append(s[i])\n    q.append(s[n-1])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s[n])\n    q.append(s["}, "2388": {"problem_id": 2388, "answer": "from sys import stdin\ninput = stdin.readline\nMOD = 998244353\n\ndef solve():\n    N = int(input())\n    X = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    X.sort()\n    D.sort()\n    ans = 0\n    for i in range(N):\n        ans += D[i]\n        ans %= MOD\n    print(ans)\n\nsolve()\n"}, "2389": {"problem_id": 2389, "answer": "def main():\n    n, a, b, c = list(map(int, input().split()))\n    A, B, C = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if A not in d:\n            d[A] = 1\n        else:\n            d[A] += 1\n    for i in range(n):\n        if B not in d:\n            d[B] = 1\n        else:\n            d[B] += 1\n    print(\"Yes\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2390": {"problem_id": 2390, "answer": "import sys\ninput = sys.stdin.readline\n\nn,c = list(map(int,input().split()))\nx = list(map(int,input().split()))\ns = []\nfor i in range(n):\n    x.append(i)\ns.append(x[0])\ns.append(x[-1])\n\nc += 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -= 1\nc -="}, "2391": {"problem_id": 2391, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef modf(a, b):\n    if a[0] == b[0]:\n        return 1\n    elif a[0] == 1:\n        return modf(b[0], b[1])\n    else:\n        return modf(b[1], b[0])\n\nmod = 10**9+7\n\nfor i in range(N-1):\n    k, x = list(map(int, input().split()))\n    a[i] = x\n    b[i] = 1\n    modf(a, b)\n\nprint('\\n'.join(map(str, a)))"}, "2392": {"problem_id": 2392, "answer": "from math import factorial as ff \ndef mod(a, b):\n    if (a, b) in ff:\n        return factorial(a, b)\n    else:\n        return pow(a, b, ff) % mod\n\ndef factorial(a, b):\n    if (a, b) in ff:\n        return ff[(a, b)]\n    else:\n        return factorial(a, b) % mod\n\ndef mod(a, b):\n    if (a, b) in ff:\n        return ff[(a, b)]\n    else:\n        return pow(a, b, ff) % mod\n\ndef pow(a, b, mod):\n    if (a, b) in ff:\n        return ff[(a, b)]\n    else:\n        return pow(a, b, mod) % mod\n\ndef is_pow(a, b, mod):\n    if (a, b) in ff:\n        return ff[(a, b)] == ff[(a, b)]\n    else:\n        return False\n\ndef is_divisor(a, b):\n    if (a, b) in ff:\n        return ff[(a, b)] == ff[(a, b)]\n    else:\n        return False\n\ndef is_power(a, b, mod):\n    if (a, b) in ff:\n        return ff[(a, b)] == ff[(a, b)]\n    else:\n        return False\n\ndef is_subset(a, b, mod):\n    if (a, b) in ff:\n        return ff[(a, b)] == ff[(a, b)]\n    else:\n        return False\n\ndef is_uniq(a, b, mod):\n    if (a, b) in ff:\n        return ff[(a, b)] == ff[(a, b)]\n    else:\n        return False\n\ndef is_nonzero(a, b, mod):\n    if (a, b) in ff:\n        return ff[(a, b)] == ff[(a, b)]\n    else:\n        return False\n\ndef is_power(a, b, mod):\n    if (a, b) in ff:\n        return ff[(a, b)] == ff[(a, b)]\n    else:\n        return False\n\ndef is_divisor(a, b):\n    if (a, b) in ff:\n        return ff[(a, b)] == ff[(a, b)]\n    else:\n        return False\n\ndef is_power(a, b, mod):\n    if (a, b) in ff:\n        return ff[(a, b)] == ff[(a, b)]\n    else:\n        return False\n\ndef is_subset(a, b, mod):\n    if (a, b) in ff:\n        return ff[(a, b)] == ff[(a, b)]\n    else:\n        return False\n\ndef is_nonzero(a, b, mod):\n    if (a, b) in ff:\n        return ff[(a, b)] == ff[(a, b)]\n    else:\n        return False\n\ndef is_divisor(a, b):\n    if (a, b) in ff:\n    "}, "2393": {"problem_id": 2393, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    s = input()\n    l = len(s)\n    print(min(l, 2*l))\n"}, "2394": {"problem_id": 2394, "answer": "n, k = list(map(int, input().split()))\nedges = []\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    edges.append((a, b))\n\ndef dfs(s, t):\n    if s == t:\n        return 0\n    else:\n        return min(dfs(s, t), dfs(s, t - s))\n\nprint(edges)\n"}, "2395": {"problem_id": 2395, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        s = input()\n        print(s[0] + s[1])\n        print(s[-1] + s[-2])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2396": {"problem_id": 2396, "answer": "import sys\ninput = sys.stdin.readline\n\nM = int(input())\n\ndef main():\n    n = len(input())\n    d = {}\n    for i in range(n):\n        d[i] = list(map(int, input().split()))\n        d[i].append(i)\n    print(d.get(0, 0))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2397": {"problem_id": 2397, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(k):\n    if a[i] == 0:\n        ans += 1\n    else:\n        ans += a[i]*(a[i]-1)\nprint(ans)"}, "2398": {"problem_id": 2398, "answer": "t = int(input())\nfor _ in range(t):\n    a, b, c, d = list(map(int, input().split()))\n    x, y, x_1, y_1, x_2, y_2 = list(map(int, input().split()))\n    if x == y:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "2399": {"problem_id": 2399, "answer": "q = int(input())\nfor _ in range(q):\n    a, b = map(int, input().split())\n    s = input()\n    if s == 'X':\n        print('YES')\n    else:\n        print('NO')"}, "2400": {"problem_id": 2400, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(a[0] + b[0] + a[1] + b[2] + b[3] + b[4] + b[5])\n"}, "2401": {"problem_id": 2401, "answer": "def solve(n, r, rank, d):\n    if rank == 0:\n        return 1\n    elif rank == 1:\n        return n\n    else:\n        res = 0\n        for i in range(r):\n            if n[i] == n[i - 1]:\n                res += 1\n            else:\n                res += n[i]\n        return res\n\ndef __starting_point():\n    n = int(input())\n    r = int(input())\n    d = list(map(int, input().split()))\n    print(solve(n, r, d))\n__starting_point()"}, "2402": {"problem_id": 2402, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, x, y = list(map(int, input().split()))\n    n -= 1\n    x -= 1\n    y -= 1\n    if x+y <= n:\n        print(y)\n    else:\n        print(x+y)\n"}, "2403": {"problem_id": 2403, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] == -1:\n        ans += 1\n    elif a[i] == a[i-1]:\n        ans += 1\nprint(ans)\n"}, "2404": {"problem_id": 2404, "answer": "import sys\ninput = sys.stdin.readline\n\ndef __starting_point():\n    a = int(input())\n    print(a)\n__starting_point()"}, "2405": {"problem_id": 2405, "answer": "n, k, a, b, q = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += a\n    s -= b\n    s += a\nprint(s)\n"}, "2406": {"problem_id": 2406, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nl = list(map(int,input().split()))\nl.sort()\ns = 0\nfor i in range(n):\n    s += l[i]\nprint(s)\n"}, "2407": {"problem_id": 2407, "answer": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    n, r = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    print(min(r - x[0], r - x[1]))\n"}, "2408": {"problem_id": 2408, "answer": "from collections import defaultdict, deque\nn = int(input())\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x == y:\n        print(0)\n    else:\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        a.sort()\n        b.sort()\n        ans = 0\n        for i in range(len(a)):\n            if a[i] == b[i]:\n                ans += 1\n        print(ans)"}, "2409": {"problem_id": 2409, "answer": ""}, "2410": {"problem_id": 2410, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print('YES' if sum(a) > sum(a[1] for a in a[2:]) else 'NO')"}, "2411": {"problem_id": 2411, "answer": "from math import gcd\nn = int(input())\npoles = list(map(int, input().split()))\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x == y:\n        print(0)\n    else:\n        print(gcd(poles[i], x, y))\n"}, "2412": {"problem_id": 2412, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ndef I(): return int(input())\ndef MI(): return list(map(int,input().split()))\ndef LI(): return list(map(int,input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef main():\n    n = I()\n    for _ in range(n):\n        s = input()\n        if s[0] == '8':\n            print('YES')\n        else:\n            print('NO')\ndef __starting_point():\n    main()\n__starting_point()"}, "2413": {"problem_id": 2413, "answer": ""}, "2414": {"problem_id": 2414, "answer": "for _ in range(int(input())):\n    a, b = map(int, input().split())\n    if a+b>=0:\n        print(a+b)\n    else:\n        print(a+b)"}, "2415": {"problem_id": 2415, "answer": "def __starting_point():\n    print(\"YES\")\n    print(\"NO\")\n__starting_point()"}, "2416": {"problem_id": 2416, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\nprint('YES' if a[i] == 1 else 'NO')"}, "2417": {"problem_id": 2417, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(n-1)\n"}, "2418": {"problem_id": 2418, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nq = int(input())\nfor i in range(q):\n    l, r, x = list(map(int, input().split()))\n    a[l] = x\n    a[r] = x\n    if x > a[l]:\n        print(0)\n        continue\n    ans = 0\n    for i in range(l):\n        ans += min(a[i], a[i-1])\n    print(ans)\n"}, "2419": {"problem_id": 2419, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    a, b = map(int, input().split())\n    print(min(a, b))"}, "2420": {"problem_id": 2420, "answer": "n, r = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    l.append(x)\n    l.append(y)\nprint(max(l))\n"}, "2421": {"problem_id": 2421, "answer": "from math import ceil\nfor _ in range(int(input())):\n    x,y=list(map(int,input().split()))\n    c=0\n    for i in range(len(x)):\n        if x[i]!=y[i]:\n            c+=x[i]-y[i]\n            x[i]-=y[i]\n    print(c)\n"}, "2422": {"problem_id": 2422, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(*(n-1),sep='\\n')\n"}, "2423": {"problem_id": 2423, "answer": "n = int(input())\nfor i in range(n-1):\n    a,b = list(map(int,input().split()))\n    if a == b:\n        print(1)\n    else:\n        print(2)\n"}, "2424": {"problem_id": 2424, "answer": "from math import gcd\nn = int(input())\na = list(map(int, input().split()))\ns = [0]*n\nfor i in range(n):\n    a[i] = gcd(a[i], a[i-1])\nprint(s[-1])"}, "2425": {"problem_id": 2425, "answer": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    a = int(input())\n    b = int(input())\n    gcd = a[0]\n    xor = a[1]\n    for i in range(2, a[0]):\n        gcd = gcd % a[0]\n        xor = xor % a[0]\n    print(gcd)"}, "2426": {"problem_id": 2426, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            s += i\n        else:\n            s += a[i] // 2\n    print(s)"}, "2427": {"problem_id": 2427, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint(sum(a) - sum(a[0]))"}, "2428": {"problem_id": 2428, "answer": "import math\nfor _ in range(int(input())):\n    s = input()\n    print(\"YES\")\n    if s[0] == \"a\":\n        print(\"\".join(map(str, s)))\n    elif s[0] == \"b\":\n        print(\"\".join(map(str, s)))\n    elif s[0] == \"c\":\n        print(\"\".join(map(str, s)))\n    else:\n        print(\"NO\")"}, "2429": {"problem_id": 2429, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = sum(map(int,input().split()))\n    b = sum(map(int,input().split()))\n    print(a-b)"}, "2430": {"problem_id": 2430, "answer": "def __starting_point():\n    n = int(input())\n    print(__starting_point())\n__starting_point()"}, "2431": {"problem_id": 2431, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, x, y, z = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = list(map(int, input().split()))\n    b.sort()\n    for i in range(n):\n        if a[i] > b[i]:\n            b[i] = b[i] - a[i]\n        elif a[i] > b[i] and b[i] > a[i]:\n            b[i] = b[i] - a[i]\n        else:\n            b[i] = a[i]\n    print((' '.join(map(str, b))) + '\\n')"}, "2432": {"problem_id": 2432, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nstderr = stdout.write\nstdout = open(input)\nstdin = open(stderr)\nstdout.write(str(int(stderr) + 1))"}, "2433": {"problem_id": 2433, "answer": "for _ in range(int(input())):\n    b,p,f = map(int,input().split())\n    h,c = map(int,input().split())\n    if b==p:\n        print(h*c)\n    elif b==f:\n        print(h*c)\n    else:\n        print(h*c-h*c)"}, "2434": {"problem_id": 2434, "answer": "import math\nfor _ in range(int(input())):\n n,m=map(int,input().split())\n if n==1:\n  print(\"YES\")\n else:\n  print(\"NO\")"}, "2435": {"problem_id": 2435, "answer": "from sys import stdin,stdout\nt = int(stdin.readline())\nfor _ in range(t):\n    n,x,m = list(map(int,stdin.readline().split()))\n    l,r = list(map(int,stdin.readline().split()))\n    print(l)\n"}, "2436": {"problem_id": 2436, "answer": ""}, "2437": {"problem_id": 2437, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    print(a[i] - a[i-1])"}, "2438": {"problem_id": 2438, "answer": "from collections import Counter\nn = int(input())\ns = input()\nc = Counter(s)\nfor i in range(n):\n    c[s[i]].append(i)\n\nprint(len(c))\n"}, "2439": {"problem_id": 2439, "answer": ""}, "2440": {"problem_id": 2440, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\ndef main():\n    n = int(input())\n    q = list(map(int, input().split()))\n    for _ in range(n-1):\n        u, v = list(map(int, input().split()))\n        print('YES' if q[u] == v else 'NO')\n        q.pop()\n        q.append(u)\n        q.append(v)\n        \n    return '\\n'.join(q)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2441": {"problem_id": 2441, "answer": "from sys import stdin,stdout\nn = int(stdin.readline().strip())\nst = list(map(int,stdin.readline().strip().split()))\nmod = 1000000007\nfor i in range(n):\n    a,b = list(map(int,stdin.readline().strip().split()))\n    if a<b:\n        print(1)\n    else:\n        print(2)\n        \n"}, "2442": {"problem_id": 2442, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    print(max(a)+max(b)+min(a)+min(b))\n"}, "2443": {"problem_id": 2443, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef lcm(a, b):\n    return a * b // a % b\n\ndef f(n, m):\n    if n < m:\n        return 0\n    elif n == m:\n        return 1\n    else:\n        return f(n, m)\n\nprint(f(0, m))\nfor i in range(1, n):\n    print(i, end=' ')\n    print(f(i, m - 1))\n"}, "2444": {"problem_id": 2444, "answer": "import sys\ninput = sys.stdin.readline\nn, p = list(map(int, input().split()))\nd = {}\nfor _ in range(n):\n    t = list(map(int, input().split()))\n    d[t[0]] += 1\n    if t[1] not in d:\n        d[t[1]] = 1\n    else:\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append(t[1])\n        d[t[1]].append(t[0])\n        d[t[0]].append("}, "2445": {"problem_id": 2445, "answer": "for _ in range(int(input())):\n n = int(input())\n d = {'yellow':0,'red':1, 'green':2, 'blue':3}\n print(min(d.values()))"}, "2446": {"problem_id": 2446, "answer": "n = int(input())\na = list(map(int, input().split()))\nq = int(input())\nfor i in range(q):\n    x, y = list(map(int, input().split()))\n    if x == y:\n        print(0)\n    else:\n        print(x[0] + y[0] + x[1] + y[1])\n"}, "2447": {"problem_id": 2447, "answer": "for _ in range(int(input())):\n    s = input()\n    if s.count('0') == len(s):\n        print(0)\n    else:\n        print(len(s))\n"}, "2448": {"problem_id": 2448, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a, b, c = list(map(int, input().split()))\n    print('YES' if a == c else 'NO')\n    for i in range(n):\n        if a + b + c == n:\n            print(' '.join(map(str, i)))\n        else:\n            print('NO')\n"}, "2449": {"problem_id": 2449, "answer": "MOD = 1000000007\ndef main():\n    n, m = list(map(int, input().split()))\n    for i in range(n):\n        s = input()\n        print(s[:i])\n        if s[i:] == s[i+1:]:\n            print(0)\n        else:\n            print(2**m)\n            m -= 1\n            if m == 0:\n                print(0)\n            else:\n                print(2**m)\n                m = 0\n                break\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n "}, "2450": {"problem_id": 2450, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, m, x, y = list(map(int, input().split()))\n    s = input()\n    cost = 0\n    for i in range(n):\n        if s[i] == '*':\n            cost += x*y\n        else:\n            cost += y*x\n    print(cost)\n"}, "2451": {"problem_id": 2451, "answer": "n = int(input())\nl = list(map(int,input().split()))\ncnt = 0\nfor i in range(n):\n    t,f,t,f1,t1,f2,t2,f3 = list(map(int,input().split()))\n    if t1 - t2 <= 1:\n        cnt += 1\n    elif t1 - t3 <= 1:\n        cnt += 1\n    else:\n        cnt -= 1\n    if cnt == 0:\n        print(0)\n    else:\n        print(cnt)\n"}, "2452": {"problem_id": 2452, "answer": "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(a[b[0]], b[1])"}, "2453": {"problem_id": 2453, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\nl = list(map(int,stdin.readline().split()))\ncnt = [0]*n\nfor i in range(n):\n    l[i] = int(stdin.readline())\n    cnt[i] = l[i] - l[i-1]\nprint(cnt)"}, "2454": {"problem_id": 2454, "answer": "from math import factorial as f\n\nn = int(input())\nd = dict()\nfor i in range(n):\n    d[i] = 1\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 0\n\ndef __starting_point():\n    n = int(input())\n    d = dict()\n    for i in range(n):\n        d[i] = 1\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 0\n    print(d[n])\n__starting_point()"}, "2455": {"problem_id": 2455, "answer": "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return list(map(int, input().split()))\n\ndef inl():\n    return list(map(int, input().split()))\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        x, y = inp()\n        print(x, y)\n\nmain()\n"}, "2456": {"problem_id": 2456, "answer": "from bisect import *\nfor _ in range(int(input())):\n    n, r = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if a[i] == b[i]:\n            ans += 1\n        else:\n            ans += 1\n    print(ans)\n"}, "2457": {"problem_id": 2457, "answer": "for _ in range(int(input())):\n    n,a,b,c,d = map(int,input().split())\n    if n == 1:\n        print(\"Yes\")\n    else:\n        print(\"No\")"}, "2458": {"problem_id": 2458, "answer": "import sys\ninput = sys.stdin.readline\n\nt, k = list(map(int, input().split()))\n\nfor _ in range(t):\n    a, b = list(map(int, input().split()))\n    if a == 1:\n        print((1) * b) % 1000000007\n    elif a == 2:\n        print((2) * b) % 1000000007\n    elif a == 3:\n        print((3) * b) % 1000000007\n    elif a == 4:\n        print((4) * b) % 1000000007\n    else:\n        print((a + b) % 1000000007)\n"}, "2459": {"problem_id": 2459, "answer": "n,q,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nfor i in range(1,n):\n    if a[i]==b[i]:\n        print(i,end=\" \")\n        continue\n    else:\n        print(i,end=\" \")\n        continue\n    \n"}, "2460": {"problem_id": 2460, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    d = [[0 for _ in range(n + m + 1)] for _ in range(n + m + 1)]\n    for i in range(n + m + 1):\n        d[i][0] = 1\n    for i in range(n + m + 1):\n        for j in range(i + 1, n + m + 1):\n            if j < i:\n                d[i][j] += d[i - j][i]\n            else:\n                d[i][j] += d[i - j][i]\n    print(m)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2461": {"problem_id": 2461, "answer": "from collections import deque\nn = int(input())\nedges = []\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    edges.append((x, y))\n\ndef is_vertex(x):\n    return x.isupper()\n\ndef is_vertex_alive(x):\n    return all(x not in x for x in x)\n\ndef dfs(x, y):\n    if x == y:\n        return 0\n    elif x == 1:\n        return 1\n    else:\n        return 0\n\ndef main():\n    n = int(input())\n    edges = []\n    for i in range(n):\n        x, y = list(map(int, input().split()))\n        edges.append((x, y))\n        dfs(x, y)\n        \n    print(edges)\n    \n    \ndef __starting_point():\n    main()\n\n__starting_point()"}, "2462": {"problem_id": 2462, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        print(4, \"NO\")\n        if n % 3 == 0:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n            \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n"}, "2463": {"problem_id": 2463, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = sorted(a)\nfor i in range(n):\n    if a[i] - a[i-1] > 0:\n        s.pop(i)\n    else:\n        s.pop(i)\nprint(s.pop(0))"}, "2464": {"problem_id": 2464, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\nedges = []\nfor i in range(n-1):\n    x, y, z = map(int, input().split())\n    edges.append((x, y, z))\n\ndef dfs(i, j):\n    if i == n-1:\n        return 0\n    if j == 0:\n        return 1\n    if i == n-1:\n        return 0\n    if j == 1:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 2:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 3:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 4:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 5:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 6:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 7:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 8:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 9:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 10:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 11:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 12:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 13:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 14:\n        return dfs(i+1, j+1)\n    if i == n-1:\n        return dfs(i+1, j+1)\n    if j == 15:\n        return dfs(i+1, j+1)\n    if i == n-1:\n"}, "2465": {"problem_id": 2465, "answer": "from math import sqrt\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    print(n - 3)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2466": {"problem_id": 2466, "answer": "class Solution:\n     def permute(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: List[List[int]]\n         \"\"\"\n         if len(nums) == 0:\n             return nums\n         \n         nums.sort()\n         \n         res = []\n         for i in range(len(nums) - 1):\n             if nums[i] == nums[i + 1]:\n                 res.append(nums[i])\n                 \n         return res"}, "2467": {"problem_id": 2467, "answer": "class Solution:\n     def combinationSum3(self, k, n):\n         \"\"\"\n         :type k: int\n         :type n: int\n         :rtype: List[List[int]]\n         \"\"\"\n         res = []\n         for i in range(9):\n             if i % k == 0:\n                 res.append([i, i//k])\n         return res"}, "2468": {"problem_id": 2468, "answer": "class Solution:\n    def longestValidParentheses(self, s: str) -> int:\n        stack = []\n        for i in range(len(s)):\n            if s[i] == '(':\n                stack.append(i)\n            elif s[i] == ')':\n                stack.append(i)\n            else:\n                stack.append(i)\n        return len(stack)"}, "2469": {"problem_id": 2469, "answer": "class Solution:\n     def majorityElement(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: List[int]\n         \"\"\"\n         if len(nums) < 3:\n             return nums\n         res = []\n         for i in range(len(nums)):\n             if nums[i] == nums[i+1]:\n                 res.append(i)\n         return res"}, "2470": {"problem_id": 2470, "answer": "class Solution:\n    def makeArrayIncreasing(self, arr1: List[int], arr2: List[int]) -> int:\n        arr1.sort()\n        arr2.sort()\n        \n        res = 0\n        for i in range(len(arr1)):\n            if arr1[i] > arr2[i]:\n                res += 1\n            else:\n                res += 1\n        return res\n"}, "2471": {"problem_id": 2471, "answer": "# -*- coding: utf-8 -*-\nfrom bisect import bisect_left as bl, bisect_right as br, insort_left as br, insort_right as br, insort_left_right as br, insort_right_left as br, insort_left_right_right_right_right_right\n\nH, W, N = list(map(int, input().split()))\n\nBLANK = 0\nBLANK_RIGHT = 0\nBLANK_LEFT = 0\nBLANK_LEFT_RIGHT = 0\n\ndef main():\n    H, W, N = list(map(int, input().split()))\n    # \u5982\u679c\u6839\u636e\u4e0b\u304b\u3089\u51fa\u73fe\u3057\u3066\u8003\u3048\u308b\u305f\u3081\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u3060\u3051\n    black_rect = []\n    black_rect.append(BLANK)\n    black_rect.append(BLANK_LEFT)\n    black_rect.append(BLANK_LEFT_RIGHT)\n    black_rect.append(BLANK_LEFT_RIGHT_LEFT)\n    \n    for i in range(len(black_rect)):\n        black_rect[i] = black_rect[i] + 1\n        black_rect[i+1] = black_rect[i] + 1\n        black_rect[i+2] = black_rect[i] + 1\n        black_rect[i+3] = black_rect[i] + 1\n        black_rect[i+4] = black_rect[i] + 1\n        black_rect[i+5] = black_rect[i] + 1\n        black_rect[i+6] = black_rect[i] + 1\n        black_rect[i+7] = black_rect[i] + 1\n        black_rect[i+8] = black_rect[i] + 1\n        black_rect[i+9] = black_rect[i] + 1\n        black_rect[i+10] = black_rect[i] + 1\n        black_rect[i+11] = black_rect[i] + 1\n        black_rect[i+12] = black_rect[i] + 1\n        black_rect[i+13] = black_rect[i] + 1\n        black_rect[i+14] = black_rect[i] + 1\n        black_rect[i+15] = black_rect[i] + 1\n        black_rect[i+16] = black_rect[i] + 1\n        black_rect[i+17] = black_rect[i] + 1\n        black_rect[i+18] = black_rect[i] + 1\n        black_rect[i+19] = black_rect[i] + 1\n        black_rect[i+20] = black_rect[i] + 1\n        black_rect[i+21] = black_rect[i] + 1\n        black_rect[i+22] = black_rect[i] + 1\n        black_rect[i+23] = black_rect[i] + 1\n        black_rect[i+24] = black_rect[i] + 1\n        black_rect[i+25] = black_rect[i] + 1\n        black_rect[i+26] = black_rect[i] + 1\n        black_rect[i+27] = black_rect[i] + 1\n        black_rect[i+28] = black_rect[i] +"}, "2472": {"problem_id": 2472, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort_left as br, insort_right as br, insort_left_right as br, insort_left_left as br, insort_right_left as br, insort_left_right_right_left_right_left as br, lru_cache\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\njobs = []\nfor i in range(N):\n    jobs.append(int(input()))\n\n# print(*jobs)\n\nans = float('inf')\n\nfor i in range(N):\n    ans = min(ans, (jobs[i] - jobs[i-1]))\n\nprint(ans)"}, "2473": {"problem_id": 2473, "answer": "import sys\ninput = sys.stdin.readline\nn,k=map(int,input().split())\nd={}\nfor i in range(n):\n    x,y=map(int,input().split())\n    d[x].append(y)\n    d[y].append(x)\nans=0\nfor i in d:\n    ans+=((n-i)*(d[i]-d[i-1]))*(n-i)\nprint(ans)"}, "2474": {"problem_id": 2474, "answer": "MOD = 1000000007\ndef factorial(n):\n    if n == 0:\n        return 1\n    elif n % 2 == 0:\n        return pow(n, 2)\n    else:\n        return pow(n, n // 2)\n\n\ndef main():\n    mod = 10**9+7\n    n = int(input())\n    cnt = [0]*(n+1)\n    for i in range(n):\n        cnt[i] = cnt[i-1] + cnt[i]\n    ans = 0\n    for i in range(n):\n        ans += factorial(i)\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2475": {"problem_id": 2475, "answer": "from collections import defaultdict\nn = int(input())\ns = list(map(int, input().split()))\nd = defaultdict(list)\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    d[x].append(y)\n    d[y].append(x)\n\ndef solve(a, b):\n    if a == 0:\n        return 0\n    if b == 0:\n        return 1\n    if a == n-1:\n        return sum(d[x] for x in d[b])\n    elif b == n-2:\n        return sum(d[x] for x in d[a])\n    else:\n        return sum(d[x] for x in d[b])\n\nprint(solve(0, 0))"}, "2476": {"problem_id": 2476, "answer": "def main():\n    n = int(input())\n    A = list(map(int, input().split()))\n    print(sum(A) - max(A))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2477": {"problem_id": 2477, "answer": "N,K = map(int,input().split())\nA = list(map(int,input().split()))\n#print(A)\n#print(K)\ns = 0\nfor i in range(K):\n    s += A[i]\nprint(s)"}, "2478": {"problem_id": 2478, "answer": "n = int(input())\ns = list(map(int, input().split()))\nprint(('\\n'.join(s)))"}, "2479": {"problem_id": 2479, "answer": "def recur(n, q):\n    if q == 0:\n        return 0\n    elif q == 1:\n        return n\n    else:\n        x, y = n-2, n-1\n        if x == 0:\n            return recur(x, y)\n        elif x == 1:\n            return recur(x+1, y)\n        elif x == 2:\n            return recur(x, y+1)\n        else:\n            x, y = x+1, y+1\n            if x == 0:\n                return recur(x, y)\n            elif x == 1:\n                return recur(x+1, y)\n            elif x == 2:\n                return recur(x, y+1)\n            else:\n                x, y = x+1, y+1\n                if x == 0:\n                    return recur(x, y)\n                elif x == 1:\n                    return recur(x+1, y)\n                elif x == 2:\n                    return recur(x, y+1)\n                else:\n                    x, y = x+1, y+1\n                    if x == 0:\n                        return recur(x, y)\n                    elif x == 1:\n                        return recur(x+1, y)\n                    elif x == 2:\n                        return recur(x, y+1)\n                    else:\n                        x, y = x+1, y+1\n                        if x == 0:\n                            return recur(x, y)\n                        elif x == 1:\n                            return recur(x+1, y)\n                        elif x == 2:\n                            return recur(x, y+1)\n      "}, "2480": {"problem_id": 2480, "answer": "n,k = map(int,input().split())\na = list(map(int,input().split()))\nd = [0]*(n+1)\nfor i in range(n):\n    d[i] = d[i-1]*i\nprint(len(d))"}, "2481": {"problem_id": 2481, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    H,W,c=map(int,input().split())\n    d={}\n    for i in range(H):\n        d[i]=c[i]\n    for i in range(W):\n        d[i]=min(d.get(i,-1),c[i])\n    print(min(d.values()))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2482": {"problem_id": 2482, "answer": "from collections import deque\nN,K,L = map(int,input().split())\nG = [set() for i in range(N)]\nfor i in range(N):\n    p,q,r,s = map(int,input().split())\n    G[p].add(q)\n    G[q].add(r)\n    G[r].add(s)\n    G[s].add(p)\n    G[s].add(p)\nprint(len(G))"}, "2483": {"problem_id": 2483, "answer": "from collections import deque\n\ndef __starting_point():\n    N, C = list(map(int, input().split()))\n    s = input()\n    t = list(map(int, input().split()))\n    d = deque([s])\n    for i, c in enumerate(t):\n        if c == t[i]:\n            d.append(i)\n        elif c == t[i-1]:\n            d.append(i-1)\n        else:\n            d.append(i-1)\n            \n        if len(d) == 1:\n            print(d[0])\n            return\n        d.popleft()\n        \n        if len(d) == 2:\n            print(d[0])\n            return\n        d.popleft()\n        \n        if len(d) == 3:\n            print(d[0])\n            return\n        d.popleft()\n        \n        if len(d) == 4:\n            print(d[0])\n            return\n        d.popleft()\n        \n        if len(d) == 5:\n            print(d[0])\n            return\n        d.popleft()\n        \n        if len(d) == 6:\n            print(d[0])\n            return\n        d.popleft()\n        \n        if len(d) == 7:\n            print(d[0])\n            return\n        d.popleft()\n        \n        if len(d) == 8:\n            print(d[0])\n            return\n        d.popleft()\n        \n        if len(d) == 10:\n            print(d[0])\n            return\n        d.popleft()\n        \n        if len(d) == 11:\n            print(d[0])\n            return\n        d.popleft()\n        \n        if len(d) == 12:\n            print(d[0])\n            return\n        d.popleft()\n        \n        if len(d) == 13:\n            print(d[0])\n            return\n        d.p"}, "2484": {"problem_id": 2484, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nA = [int(x) for x in readline().split()]\n\ndef inp():\n    return list(map(int, readline().split()))\n\ndef main():\n    N = inp()\n    A = [0] + A[0]\n    for i in range(N):\n        x = A[i]\n        A[i] = x\n    print(len(A))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2485": {"problem_id": 2485, "answer": "import sys\ninput = sys.stdin.readline\n\nH, W = map(int, input().split())\nM = W*H\n# M = W*H\n# h_1, w_1 = list(map(int, input().split()))\n# w_1 = list(map(int, input().split()))\n# M = W*H\n# h_2, w_2 = list(map(int, input().split()))\n# w_2 = list(map(int, input().split()))\n# M = W*H\n# h_3, w_3 = list(map(int, input().split()))\n# w_3 = list(map(int, input().split()))\n# M = W*H\n# h_4, w_4 = list(map(int, input().split()))\n# w_4 = list(map(int, input().split()))\n# M = W*H\n# h_5, w_5 = list(map(int, input().split()))\n# w_5 = list(map(int, input().split()))\n# M = W*H\n# h_6, w_6 = list(map(int, input().split()))\n# w_6 = list(map(int, input().split()))\n# M = W*H\n# h_7, w_7 = list(map(int, input().split()))\n# w_7 = list(map(int, input().split()))\n# M = W*H\n# h_8, w_8 = list(map(int, input().split()))\n# w_8 = list(map(int, input().split()))\n# M = W*H\n# h_9, w_9 = list(map(int, input().split()))\n# w_9 = list(map(int, input().split()))\n# M = W*H\n# h_10, w_10 = list(map(int, input().split()))\n# w_10 = list(map(int, input().split()))\n# M = W*H\n# h_11, w_11 = list(map(int, input().split()))\n# w_11 = list(map(int, input().split()))\n# M = W*H\n# h_12, w_12 = list(map(int, input().split()))\n# w_12 = list(map(int, input().split()))\n# M = W*H\n# h_13, w_13 = list(map(int, input().split()))\n# w_13 = list(map(int, input().split()))\n# M = W*H\n# h_14, w_14 = list(map(int, input().split()))\n# w_14 = list(map(int, input().split()))\n# M = W*H\n# h_15, w_15 = list(map(int, input().split()))\n# w_15 = list(map(int, input().split()))\n# M = W*H\n# h_16, w_16 = list(map(int, input().split()))\n# w_16 = list(map(int, input().split()))\n# M = W*H\n# h_17, w_17 = list(map(int, input().split()))\n# w_17 = list(map(int, input().split()))\n# M = W*H\n# h_18, w_18 = list(map(int, input().split()))\n# w_18 = list(map(int, input().split()))\n# M = W*H\n# h_19, w_19 = list(map(int, input().split()))\n# w_19 = list(map(int, input().split()))\n# M = W*H\n# h_20, w_20 = list(map(int, input().split()))\n# w_20 = list(map(int, input().split()))\n# M = W*H\n# h_21, w_21 = list(map(int, input().split()))\n# w_21 = list(map(int, input().split()))\n# M = W*H\n# h_22, w_22 = list(map(int, input().split()))\n# w_22 = list(map(int, input().split()))\n#"}, "2486": {"problem_id": 2486, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k = list(map(int,input().split()))\na = list(map(int,input().split()))\n\n# A = [0]*n\n# A.append(a)\n# for i in range(n):\n#     A[i] = 1\n#     for j in range(i+1,n):\n#         A[j] = A[j-1] + A[j]\n#         if A[j] > k:\n#             k = A[j]\n#             A[j] = A[j-1] + A[j]\n#         else:\n#             A[j] = A[j-1] + A[j]\n#             break\n#     print(A)\n\n# print(sum(A))\n\n# dp = [[0]*(k+1) for _ in range(n+1)]\n# dp[0][k] = 1\n# for i in range(1,n+1):\n#     dp[i][k] = dp[i-1][k-1] + A[i]\n#     for j in range(i+1,n+1):\n#         dp[i][j] = dp[i-1][j-1] + A[i]\n#         for k in range(j+1,n+1):\n#             dp[i][k] = dp[i-1][k-1] + A[i]\n#             for k in range(j+1,n+1):\n#                 dp[i][k] = max(dp[i][k],dp[i-1][k-1])\n#     print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print(dp[n][k])\n\n# print("}, "2487": {"problem_id": 2487, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort_left as br, insort_right as br, insort_left_right as br, l1, l2\nfrom heapq import heapify, heappush, heappop\nfrom collections import defaultdict as dd, deque, Counter as C, OrderedDict as O, uniq as q, truediv\nfrom itertools import combinations as CU, permutations as P,combinations as C, permutations_with_replacement as P, zip_longest as zl, zip_sort as zs, islice_longest as l1, islice_sort as l2, islice_truediv as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with_replacement as l3, islice_with"}, "2488": {"problem_id": 2488, "answer": "import sys\ninput = sys.stdin.readline\n\nN, D = list(map(int, input().split()))\nX = list(map(int, input().split()))\nX.sort()\nX.extend(X[0:N-1])\nX.extend(X[N-1:N+1])\nX.extend(X[N+1:N+2])\nX.extend(X[N+2:N+3])\nX.extend(X[N+3:N+4])\n\n#X = [X[0],X[1]]\n#X.sort()\nX = [X[0],X[1]]\n\ndef dfs(X,X,d):\n    if d == 0:\n        return 0\n    elif d == 1:\n        return 1\n    else:\n        ans = dfs(X,X,d-1)\n        print(ans)\n        return ans\n\nprint(dfs(X,X,0))\n"}, "2489": {"problem_id": 2489, "answer": "N = int(input())\nA = list(map(int, input().split()))\n\ndef count(lst):\n    return len(A) \\\n        for i in range(lst[0], lst[1]):\n            if A[i] \\\n            %= 2**(lst[0] - i)\n        return len(A)\n\nprint(count(A))"}, "2490": {"problem_id": 2490, "answer": "N = 10**100\ndef main():\n    input()\n    print(8)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2491": {"problem_id": 2491, "answer": "from itertools import combinations\nN, M = list(map(int, input().split()))\nedges = [[] for _ in range(N)]\nfor _ in range(M):\n    a, b, c = list(map(int, input().split()))\n    edges[a].append(b)\n    edges[b].append(a)\n    edges[b].append(a)\n\nd = {}\ndef dfs(n, d):\n    if n not in d:\n        return\n    if n == 0:\n        return 0\n    if d[n] == 0:\n        return d[n]\n    res = 0\n    for i in edges[n]:\n        res += dfs(i, d[n])\n    d[n] = res\n    return res\n\ndfs(0, set())\nprint(dfs(0, set()))"}, "2492": {"problem_id": 2492, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N, K = map(int, readline().split())\n    A = list(map(int, readline().split()))\n    for i in range(N):\n        A[i] = A[i] % K\n    print(*A)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2493": {"problem_id": 2493, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nMOD = 10**9+7\n\ndef inp():\n    return list(map(int, input().split()))\n\ndef main():\n    n = int(input())\n    a = list(map(inp(), a))\n    print(len(a))\n\nmain()\n"}, "2494": {"problem_id": 2494, "answer": "from sys import factorial as f\ndef solve():\n    n = int(f())\n    digits = list(map(int, f().split()))\n    print(solve())\n    return sum(digits)\n\ndef __starting_point():\n    solve()\n__starting_point()"}, "2495": {"problem_id": 2495, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in range(n):\n    b[i] = a[i] + b[i-1]\nprint(sum(b))"}, "2496": {"problem_id": 2496, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\nG = set(A)\n#print(G)\ncnt = 0\nfor i in range(N):\n    if A[i] not in G:\n        cnt += 1\n    elif A[i] in G:\n        cnt += 1\n    else:\n        print(cnt)\n        break\n\nif cnt == 0:\n    print(None)\nelse:\n    print(cnt)\n"}, "2497": {"problem_id": 2497, "answer": "from heapq import heappush,heappop\nn = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\nd = R, L, U\nm = 10**9\nfor i in range(n):\n    x[i] = min(x[i], m)\n    y[i] = min(y[i], m)\nprint('%.6f' % (x[n] - x[m]))\n"}, "2498": {"problem_id": 2498, "answer": "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nprint(sum(a) // m)\n"}, "2499": {"problem_id": 2499, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\n\ndef f(x):\n    return x & 0xffffffff\n\ndef main():\n    n = int(input())\n    A = list(map(int, input().split()))\n    print(f(A))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2500": {"problem_id": 2500, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\ndef inp(): return list(map(int, input().split()))\ndef out(n, MOD): sys.stdout.write(str(n)+\"\\n\")\ndef outa(n, MOD): sys.stdout.write(' '.join(map(str, n)))\ndef lmp(): return list(map(int, input().split()))\ndef lpn(): return list(map(int, input().split()))\ndef lsh(): return list(map(int, input().split()))\ndef lshp(): return list(map(int, input().split()))\ndef lshq(): return list(map(int, input().split()))\ndef lshqp(): return list(map(int, input().split()))\ndef lshqpq(): return list(map(int, input().split()))\nmod = 10**9+7\nN = int(input())\nans = [0]*N\nfor i in range(N):\n    ans[i] = ans[i]%MOD\nprint(ans[-1]%MOD)"}, "2501": {"problem_id": 2501, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort(reverse=True)\n    b.sort(reverse=True)\n    ans = 0\n    for i in range(n):\n        if a[i] < b[i]:\n            ans += i\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2502": {"problem_id": 2502, "answer": "from bisect import bisect_left as bl\ns,t = list(map(int,input().split()))\ndef find(x):\n    if x!=s[x]:\n        return x\n    else:\n        return find(s[x:x+s.index(s[x:x+s.index(s.lower())])])\ndef main():\n    s,t = list(map(int,input().split()))\n    print(find(t))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2503": {"problem_id": 2503, "answer": "from collections import deque\nN,K,x_i,y_i,c_i = map(int,input().split())\nX = list(map(int,input().split()))\nY = list(map(int,input().split()))\nfor i in range(N):\n    X.append(X[i]*X[i-1] + X[i-1]*X[i-2])\nprint(sum(X))"}, "2504": {"problem_id": 2504, "answer": "from collections import deque\nN,M = list(map(int,input().split()))\nA = list(map(int,input().split()))\n\ndef fuel(u,v):\n    if u>=M:\n        return -1\n    elif v>=C:\n        return -1\n    else:\n        return fuel(u,v)\n\ndef dfs(u,v):\n    if u>=M:\n        return -1\n    elif v>=C:\n        return -1\n    else:\n        return fuel(u,v)\n\nq = int(input())\nfor _ in range(q):\n    s,t = list(map(int,input().split()))\n    A.append(s)\n    B.append(t)\n    Q = int(input())\n    s,t = list(map(int,input().split()))\n    A.sort()\n    B.sort()\n    if len(A)>1:\n        print(-1)\n        return\n    else:\n        print(sum(A))"}, "2505": {"problem_id": 2505, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\nxs = [0]*n\nxs[0] = 1\nfor i in range(1,n):\n    xs[i] = (xs[i-1]*xs[i])%1000000007\nprint(sum(xs))"}, "2506": {"problem_id": 2506, "answer": "from bisect import bisect_right as br\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\nbr = lambda x: A[x]\ndef get_power(x):\n    return x % 2 == 0\nf = get_power(10)\nans = 0\nfor i in range(N):\n    x = br(get_power(x))\n    if x == 0:\n        ans += 1\n    elif x == 1:\n        ans += 1\nprint(ans)"}, "2507": {"problem_id": 2507, "answer": "def main():\n    N, K = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    d = {}\n    for _ in range(K):\n        d[A[0]].append(A[1] + 1)\n    for _ in range(K):\n        d[A[1]].append(A[0] + 1)\n    print(min(d.values()))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2508": {"problem_id": 2508, "answer": "import sys\ninput = sys.stdin.readline\n\nH,W,K = map(int,input().split())\nX = list(map(int,input().split()))\nX.sort()\nX.insert(0,0)\nX.append(H)\nX.append(W)\nX.append(K)\n\n# \u5de5\u4f5c\u7528\u65b9\u6cd5\u6765\u5230\u4e00\u4e2a\u6587\u4ef6\uff0c\u540c\u65f6\u6709\u4e00\u4e2a\u591a\u5c0f\u6587\u4ef6\uff0c\u9700\u8981\u8bb0\u5f55\u6587\u4ef6\uff0c\u5373\u53ef\u4ee5\u5229\u7528\u6765\u5230\u4e00\u4e2a\u6587\u4ef6\uff0c\u8003\u8651\u8fd9\u4e24\u6761\u663e\u7136\u4f1a\u6267\u884c\u4e00\u6b21\ndef rec(x,y):\n    return x+y\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u540e\u9762\uff0c\u5219\u4f1a\u51cf\u53bb\u5199\u6210\u56de\u5230\u5b83\ndef rec_helper(x,y):\n    return rec(x,y)\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u540e\u9762\uff0c\u5219\u4f1a\u51cf\u53bb\u5199\u6210\u56de\u5230\u5b83\ndef rec_helper_s(x,y):\n    return rec(x,y)\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u540e\u9762\uff0c\u5219\u4f1a\u51cf\u53bb\u5199\u6210\u56de\u5230\u5b83\ndef rec_helper(x,y):\n    return rec(x,y)\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u540e\u9762\uff0c\u5219\u4f1a\u51cf\u53bb\u5199\u6210\u56de\u5230\u5b83\ndef rec_helper_s(x,y):\n    return rec(x,y)\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u540e\u9762\uff0c\u5219\u4f1a\u51cf\u53bb\u5199\u6210\u56de\u5230\u5b83\ndef rec_linalg(x,y):\n    return x+y\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u540e\u9762\uff0c\u5219\u4f1a\u51cf\u53bb\u5199\u6210\u56de\u5230\u5b83\ndef rec_linalg_s(x,y):\n    return x+y\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u540e\u9762\uff0c\u5219\u4f1a\u51cf\u53bb\u5199\u6210\u56de\u5230\u5b83\ndef rec_linalg_s(x,y):\n    return x+y\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u540e\u9762\uff0c\u5219\u4f1a\u51cf\u53bb\u5199\u6210\u56de\u5230\u5b83\ndef rec_linalg_s(x,y):\n    return x+y\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u540e\u9762\uff0c\u5219\u4f1a\u51cf\u53bb\u5199\u6210\u56de\u5230\u5b83\ndef rec_linalg_s(x,y):\n    return x+y\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u540e\u9762\uff0c\u5219\u4f1a\u51cf\u53bb\u5199\u6210\u56de\u5230\u5b83\ndef rec_linalg_s(x,y):\n    return x+y\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u540e\u9762\uff0c\u5219\u4f1a\u51cf\u53bb\u5199\u6210\u56de\u5230\u5b83\ndef rec_linalg_s(x,y):\n    return x+y\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u540e\u9762\uff0c\u5219\u4f1a\u51cf\u53bb\u5199\u6210\u56de\u5230\u5b83\ndef rec_linalg_s(x,y):\n    return x+y\n\n# \u5982\u679c\u6700\u5c0f\u4e0d\u80fd\u540e\u9762\uff0c\u5219\u4f1a\u51cf\u53bb\u5199\u6210\u56de\u5230\u5b83\ndef rec_linalg"}, "2509": {"problem_id": 2509, "answer": "def main():\n    n, k = map(int, input().split())\n    d = {}\n    for i in range(n):\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    print((len(d)))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2510": {"problem_id": 2510, "answer": "n,m = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = 0\nfor i in range(m):\n    if a[i] == b[i]:\n        c += 1\nprint(c)"}, "2511": {"problem_id": 2511, "answer": "import sys\ninput = sys.stdin.readline\nN,K = list(map(int,input().split()))\ng = [[] for i in range(N)]\nfor i in range(N-1):\n    a,b = list(map(int,input().split()))\n    g[a].append(b)\n    g[b].append(a)\n\ndef dfs(vertex,ind,cur):\n    if ind == len(g[vertex]):\n        return 0\n    elif (ind == len(g[vertex])) or (ind == len(g[vertex])) or (ind == len(g[vertex])) and cur == 0:\n        return 1\n    else:\n        return 0\n\ndef main():\n    n,k = list(map(int,input().split()))\n    g = [[] for i in range(n)]\n    for i in range(n-1):\n        a,b = list(map(int,input().split()))\n        g[a].append(b)\n        g[b].append(a)\n        dfs(a,ind+1,cur)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n        dfs(a,ind+1,cur+1)\n        dfs(b,ind+1,cur+1)\n "}, "2512": {"problem_id": 2512, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort_left as insort, insort_right as insort\nfrom heapq import heappush,heappop\n\nR, C = list(map(int, input().split()))\narr = list(map(int, input().split()))\n\n# \u5176\u5b8c\ufffdidian\u4e0a\u9762\uff0c\u4e00\u76f4\u6240\u6709\u9664\u591a\u5c11\u90fd\u8981\u6c42\u89e3\u628a\u5176\u5b83\u6570\u5b57\u4e3a\u4e2d\u95f4\u6570\u5b57\u4e3a\u65ad\u70b9\nfor i in range(R):\n    x, y = list(map(int, input().split()))\n    arr[x] = y\n    bl, br = 0, len(arr) - 1\n    for j in range(C):\n        if arr[j] == x:\n            heappush(heap, (arr[j], j))\n        else:\n            br = max(br, arr[j])\n            heappush(heap, (arr[j], j))\n            break\n    print(sum(arr[1:]) + max(br, arr[-1]))"}, "2513": {"problem_id": 2513, "answer": "n = int(input())\ns = input()\nw = list(map(int, input().split()))\nq = [0] * n\nfor i in range(n):\n    if s[i] == 'o':\n        q[i] = 1\n    else:\n        q[i] = 0\nfor i in range(n):\n    if q[i] == 0:\n        print(-1)\n    elif q[i] == 1:\n        print(w[i])\n    else:\n        print(w[i] + 1)\n"}, "2514": {"problem_id": 2514, "answer": "N = int(input())\nA = list(map(int, input().split()))\nQ = int(input())\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\ndef func(a, b, c):\n    nonlocal A, Q, B, C\n    if a == 0:\n        return\n    elif b == 0:\n        return\n    else:\n        a, b = b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b = a + b, a + b\n        a, b"}, "2515": {"problem_id": 2515, "answer": "def is_prime(n):\n    if n % 2 == 0:\n        return False\n    else:\n        return True\n\ndef __starting_point():\n    import sys\n    input = sys.stdin.readline\n    Q = int(input())\n    for _ in range(Q):\n        l, r = list(map(int, input().split()))\n        if is_prime(l) and is_prime(r):\n            print(r)\n        elif is_prime(l) and is_prime(r):\n            print(l)\n        else:\n            print(r)\n__starting_point()"}, "2516": {"problem_id": 2516, "answer": "import sys\ninput = sys.stdin.readline\n\nN, P = list(map(int, input().split()))\nS = list(map(str, input().split()))\n\ndef is_prime(n):\n    if n == 1:\n        return True\n    elif n % 2 == 0:\n        return False\n    else:\n        return True\n\ndef divisors(n):\n    d = [0] * (n + 1)\n    for i in range(1, n + 1):\n        d[i] += 1\n    return d\n\ndef is_subset(n, p):\n    d = [0] * (n + 1)\n    for i in range(1, n + 1):\n        d[i] += p\n    return d\n\ndef main():\n    N, P = list(map(int, input().split()))\n    S = list(map(str, input().split()))\n    S = list(map(str, S.split()))\n    print(divisors(N - 1, P - 1))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2517": {"problem_id": 2517, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nR = int(input())\n\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\n\ndist = [float('inf') for x in range(N+1)]\n\nfor i in range(M):\n    dist[i] = min(dist[i], R-R+1)\n\nprint(dist[N])"}, "2518": {"problem_id": 2518, "answer": "from collections import deque\nN,A,B = map(int,input().split())\nH = list(map(int,input().split()))\nans = 0\nfor i in range(N):\n    if H[i] < 0:\n        H[i] = 0\n    else:\n        H[i] += 1\nprint(ans)"}, "2519": {"problem_id": 2519, "answer": "N, K = list(map(int, input().split()))\nA = [0] * N\nfor i in range(N):\n    A[i] += A[i - 1]\nprint(sum(A))"}, "2520": {"problem_id": 2520, "answer": "import sys\ninput = sys.stdin.readline\n\nn,m = list(map(int,input().split()))\nA = list(map(int,input().split()))\n\ndef dfs(i,j):\n    if i==0:\n        return 0\n    elif j==0:\n        return 1\n    else:\n        res = 0\n        for k in range(m):\n            if A[i]!=k:\n                res+=dfs(i+1,j)\n                res-=dfs(i+1,j)\n        return res\n\nfor i in range(n):\n    a,b = list(map(int,input().split()))\n    a.sort(key=lambda x:x[0])\n    b.sort(key=lambda x:x[1])\n    dfs(i,j)\n\nprint(len(A))\nprint(len(B))\nprint(len(C_i))\nprint(len(D_i))\nprint(len(C_j))\nprint(len(D_k))\nprint(len(C_l))\nprint(len(C_r))\nprint(len(D_k))\nprint(len(C_l))\nprint(len(D_l))\nprint(len(C_r))\nprint(len(D_r))\nprint(len(C_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D_r))\nprint(len(D"}, "2521": {"problem_id": 2521, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] = min(a[i], i+1)\n\nprint(max(a))"}, "2522": {"problem_id": 2522, "answer": "n = int(input())\ndef sort(a, b):\n if a == b:\n  return a\n else:\n  return b\n\nl = sorted(a, reverse=True)\nl.sort()\nprint(\"No\")\n"}, "2523": {"problem_id": 2523, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    S = input()\n    num = 0\n    for i in range(len(S)):\n        if S[i] == 0:\n            num += 1\n        else:\n            num += 1\n    print(num)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2524": {"problem_id": 2524, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(n-1):\n        ans += a[i]\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2525": {"problem_id": 2525, "answer": "from bisect import bisect_left as bl\ns = input()\nqueries = []\nfor i in range(len(s)):\n    queries.append(s[i] + bl(s[i]))\nqueries.sort(key=lambda x: x[1])\nq = int(input())\nfor q in queries:\n    print(q)"}, "2526": {"problem_id": 2526, "answer": "import sys\ninput = sys.stdin.readline\n\nX,Y,A,B,C = list(map(int,input().split()))\n\ndef fun(x):\n    return x**2 + (x-1)*(x-1)//2\n\ndef fun2(x):\n    return fun(x)\n\ndef fun3(x):\n    return fun2(fun(x))\n\ndef fun4(x):\n    return fun3(fun(x))\n\ndef fun5(x):\n    return fun3(fun(x))\n\ndef fun6(x):\n    return fun3(fun(x))\n\ndef fun7(x):\n    return fun3(fun(x))\n\ndef fun8(x):\n    return fun3(fun(x))\n\ndef fun9(x):\n    return fun3(fun(x))\n\ndef fun10(x):\n    return fun3(fun(x))\n\ndef fun11(x):\n    return fun3(fun(x))\n\ndef fun12(x):\n    return fun3(fun(x))\n\ndef fun13(x):\n    return fun3(fun(x))\n\ndef fun14(x):\n    return fun3(fun(x))\n\ndef fun15(x):\n    return fun3(fun(x))\n\ndef fun16(x):\n    return fun3(fun(x))\n\ndef fun17(x):\n    return fun3(fun(x))\n\ndef fun18(x):\n    return fun3(fun(x))\n\ndef fun19(x):\n    return fun3(fun(x))\n\ndef fun20(x):\n    return fun3(fun(x))\n\ndef fun21(x):\n    return fun3(fun(x))\n\ndef fun22(x):\n    return fun3(fun(x))\n\ndef fun23(x):\n    return fun3(fun(x))\n\ndef fun24(x):\n    return fun3(fun(x))\n\ndef fun25(x):\n    return fun3(fun(x))\n\ndef fun26(x):\n    return fun3(fun(x))\n\ndef fun27(x):\n    return fun3(fun(x))\n\ndef fun28(x):\n    return fun3(fun(x))\n\ndef fun29(x):\n    return fun3(fun(x))\n\ndef fun30(x):\n    return fun3(fun(x))\n\ndef fun31(x):\n    return fun3(fun(x))\n\ndef fun32(x):\n    return fun3(fun(x))\n\ndef fun33(x):\n    return fun3(fun(x))\n\ndef fun34(x):\n    return fun3(fun(x))\n\ndef fun35(x):\n    return fun3(fun(x))\n\ndef fun36(x):\n    return fun3(fun(x))\n\ndef fun37(x):\n    return fun3(fun(x))\n\ndef fun38(x):\n    return fun3(fun(x))\n\ndef fun39(x):\n    return fun3(fun(x))\n\ndef fun40(x):\n    return fun3(fun(x))\n\ndef fun41(x):\n    return fun3(fun(x))\n\ndef fun42(x):\n    return fun3(fun(x))\n\ndef fun43(x):\n    return fun3(fun(x))\n\ndef fun44(x):\n    return fun3(fun(x))\n\ndef fun45(x):\n    return fun3(fun(x))\n\ndef fun46(x):\n    return fun3(fun(x))\n\ndef fun47(x):\n    return fun3(fun(x))\n\ndef fun48(x):\n    return fun3(fun(x))\n\ndef fun49(x):\n    return fun3(fun(x))\n\ndef fun"}, "2527": {"problem_id": 2527, "answer": "def solve(s):\n l = 0\n for i in range(len(s)):\n  if s[i] == '1':\n   l += 1\n  else:\n   break\n if l == 0:\n  return \"sad\"\n return \"happy\"\n\ns = input()\nprint(solve(s))"}, "2528": {"problem_id": 2528, "answer": "import math\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\nans = 0\nfor i in range(n):\n    if l[i] == 0:\n        ans += 1\nprint(ans)"}, "2529": {"problem_id": 2529, "answer": "import math\ntry:\n    t = int(input())\n    for i in range(t):\n        print(math.gcd(t, 50))\nexcept:\n    pass"}, "2530": {"problem_id": 2530, "answer": "# cook your dish here\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nfor i in range(m):\n    a[i]=['0']*n\nc=0\nfor i in range(n):\n    if a[i]!=a[i-1]:\n        c+=1\nprint(c)\n"}, "2531": {"problem_id": 2531, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(sum(l)//2)"}, "2532": {"problem_id": 2532, "answer": "import math\ndef func(a,b):\n    if a==0:\n        return 1\n    elif b==0:\n        return 0\n    else:\n        res = 0\n        for i in range(1,len(a)):\n            res = (res + a[i]*b)%math.pow(10,i)\n        return res\n\nMOD = 10**6 + 7\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nprint(func(a,b))"}, "2533": {"problem_id": 2533, "answer": "n, e = list(map(int, input().split()))\na, b = list(map(int, input().split()))\ng = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\nfor i in range(n):\n    if a[i] == b[i]:\n        g += 1\nprint(\"YES\")\n"}, "2534": {"problem_id": 2534, "answer": "R,C = list(map(int,input().split()))\nfor _ in range(R):\n x,y = list(map(int,input().split()))\n if x>y:\n  print('GUESS')\n else:\n  print('NO Argument')\n"}, "2535": {"problem_id": 2535, "answer": "def __starting_point():\n X,N = input().split()\n x = int(x)\n for i in range(N):\n  if x[i] == '1':\n   print(x)\n  elif x[i] == '0':\n   print(x)\n__starting_point()"}, "2536": {"problem_id": 2536, "answer": "# cook your dish here\nn,m=list(map(int,input().split()))\nl=list(map(int,input().split()))\nA=[]\nfor i in range(n):\n A.append(list(map(int,input().split())))\nl.sort()\nprint(max(A[-1]))\n"}, "2537": {"problem_id": 2537, "answer": "from collections import defaultdict\nq = int(input())\nfor _ in range(q):\n    s = input()\n    t = input()\n    p = input()\n    q = int(input())\n    print('YES' if p.count('a') == q else 'NO')\n"}, "2538": {"problem_id": 2538, "answer": "def solve():\n    n = int(input())\n    st = list(map(int, input().split()))\n    exp = 10**8\n    for i in range(n):\n        st[i] = st[i]*exp\n        exp = 10**8\n    print(solve())\n\nT = int(input())\nfor _ in range(T):\n    solve()"}, "2539": {"problem_id": 2539, "answer": "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    x, p, k = list(map(int, input().split()))\n    l = sorted(x, reverse=True)\n    print(l[k])\n"}, "2540": {"problem_id": 2540, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nedges = [[] for i in range(n)]\nfor i in range(n-1):\n    x, y = map(int, input().split())\n    edges[x].append(y)\n    edges[y].append(x)\n\ndef find_sum(x, y):\n    if x == y:\n        return 0\n    else:\n        return sum(find_sum(x, y) for x in edges[y])\n\ndef main():\n    n = int(input())\n    edges = [[] for i in range(n)]\n    for i in range(n-1):\n        x, y = map(int, input().split())\n        edges[x].append(y)\n        edges[y].append(x)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2541": {"problem_id": 2541, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    Q = int(readline())\n    l, r = list(map(int, readline().split()))\n    print(2)\n    for i in range(Q):\n        l, r = list(map(int, readline().split()))\n        print(l, r)\n        if l < r:\n            print(l, r)\n        else:\n            print(l, r)\n\nmain()"}, "2542": {"problem_id": 2542, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    s = input().strip()\n    n = len(s)\n    l = 0\n    for i in range(n):\n        if s[i] == '0':\n            l += 1\n        else:\n            break\n    print(l)"}, "2543": {"problem_id": 2543, "answer": "n, m, q = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(min(a, b))\n"}, "2544": {"problem_id": 2544, "answer": "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    # a.sort()\n    # b.sort()\n    # print(a)\n    print(math.ceil(n/2))\n    print(math.ceil(n/2))\n"}, "2545": {"problem_id": 2545, "answer": "for _ in range(int(input())):\n    a, b = map(int, input().split())\n    if a == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "2546": {"problem_id": 2546, "answer": "from sys import stdin, setrecursionlimit\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    n, s = list(map(int, input().split()))\n    l = [int(i) for i in input().split()]\n    r = [int(i) for i in input().split()]\n    print(max(l, r))"}, "2547": {"problem_id": 2547, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\n\nset = set()\n\nfor _ in range(n):\n    t, a, b = list(map(int, input().split()))\n    t.add(a)\n    t.add(b)\n    if a == 0:\n        t.add(b)\n    elif b == 0:\n        t.add(a)\n    else:\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n        t.add(a)\n        t.add(b)\n "}, "2548": {"problem_id": 2548, "answer": "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(len(str(n)))\n\nmain()"}, "2549": {"problem_id": 2549, "answer": "from math import factorial as f\nn, m = list(map(int, input().split()))\nd = {}\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    d[a] = b\n    d[b] = a\n\ndef f(a, b):\n    if b == 0:\n        return 0\n    if b == 1:\n        return 1\n    if a == 0:\n        return f(b - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a - 1, b) % f(a"}, "2550": {"problem_id": 2550, "answer": "for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(max(a[:n]))\n"}, "2551": {"problem_id": 2551, "answer": "for _ in range(int(input())):\n s,t = input().strip().split()\n s = list(s)\n t = list(t)\n if len(s)!= len(t):\n  print(-1)\n else:\n  print(len(s) - len(t))"}, "2552": {"problem_id": 2552, "answer": ""}, "2553": {"problem_id": 2553, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nfor _ in range(int(input())):\n    n,x=map(int,input().split())\n    a=list(map(int,input().split()))\n    if x%2==0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"}, "2554": {"problem_id": 2554, "answer": "import sys\ninput = sys.stdin.readline\n\ndef l():\n    return list(map(int, input().split()))\n\ndef r():\n    return list(map(int, input().split()))\n\ndef main():\n    n = int(input())\n    a = [0]*n\n    for i in range(n):\n        a[i] = l()\n        l()\n    print(max(a))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2555": {"problem_id": 2555, "answer": ""}, "2556": {"problem_id": 2556, "answer": "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\ns = 0\nfor i in range(n):\n    s += l[i] * sum(l[i:])\nprint(s)"}, "2557": {"problem_id": 2557, "answer": "from sys import stdin,stdout\nfrom math import ceil,sqrt,log2,log10,log10n,log2pow,factorial,gcd,is_integer,inf,mod,sqrt\nfrom collections import defaultdict,deque,OrderedDict,defaultdict as dd,nullchars as mn,nullchunks as nd,nonnullchunks as nu\nfrom bisect import bisect_left as bl,bisect_right as br,bisect_top as br,bisect_top_right as br,insort_left as insort,insort_right as br,insort_left_left as insort\nfrom functools import reduce,cmp_to_key\nfrom itertools import combinations,permutations,accumulate,groupby\nfrom operator import itemgetter\nfrom heapq import heapify,heappop,heappush,heappushpop,heappop\nfrom re import compile,find,lru_OSEDq,findall,union,unionall,merge\nfrom queue import deque,PriorityQueue as Q\nfrom time import perf_counter\nfrom statistics import mean,median\nfrom statistics import theta,slope,poisson\n\n\n# segfault: I2O\n# segfault: I/3O\n# segfault: I2O\n# segfault: I/3O\n# segfault: I2O\n# segfault: I/3O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault: I2O\n# segfault:"}, "2558": {"problem_id": 2558, "answer": "import math\nt = int(input())\nfor _ in range(t):\n    a, b, c, d = list(map(int, input().split()))\n    skill_cost = math.ceil((a + b + c) / d)\n    health_points = []\n    for i in range(len(skill_cost)):\n        if skill_cost[i] == 0:\n            health_points.append(i)\n        else:\n            health_points.append(0)\n    print(max(health_points))\n"}, "2559": {"problem_id": 2559, "answer": ""}, "2560": {"problem_id": 2560, "answer": "import bisect\ndef __starting_point():\n    t = int(input())\n    for _ in range(t):\n        n, l, r = list(map(int, input().split()))\n        bisect.insort(n, r)\n        if n[0] == l:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n__starting_point()"}, "2561": {"problem_id": 2561, "answer": "import math\nt = int(input())\nfor _ in range(t):\n    a = int(input())\n    x = 0\n    y = 0\n    for i in range(1, len(x)):\n        if x[i] == 0:\n            x.append(i)\n        else:\n            x.pop(i)\n            y += x[i]\n    print(sum(x) + sum(y))"}, "2562": {"problem_id": 2562, "answer": "n = int(input())\na = list(map(int, input().split()))\nm = 10**9 + 7\nfor i in range(n):\n    if a[i] % m == 0:\n        m = a[i] // m\nprint(m)\n"}, "2563": {"problem_id": 2563, "answer": "for _ in range(int(input())):\n    a = int(input())\n    n = int(input())\n    z = 0\n    for i in range(n):\n        if a % 2 == 0:\n            z += 1\n        else:\n            z -= 1\n    print(z)"}, "2564": {"problem_id": 2564, "answer": "def main():\n    t = int(input())\n    for _ in range(t):\n        a, b, n = list(map(int, input().split()))\n        print(n-1)\n        a *= n\n        b *= n\n        n -= 1\n        print(a)\n        a += b\n        b += a\n        print(b-1)\n        a *= n\n        b -= 1\n        print(a-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(a-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n        print(b-1)\n        a *= n\n        b -= 1\n   "}, "2565": {"problem_id": 2565, "answer": "import sys\r\ninput = sys.stdin.readline\r\nfor _ in range(int(input())):\r\n    x, y, z = map(int, input().split())\r\n    if z%2 == 0:\r\n        print(x)\r\n    else:\r\n        x = x + y\r\n        y = y + z\r\n        print(x)"}, "2566": {"problem_id": 2566, "answer": "from math import ceil\nfor _ in range(int(input())):\n k = int(input())\n l = []\n for i in range(k):\n  l.append(ceil(i/k))\n print(len(l))"}, "2567": {"problem_id": 2567, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = input()\n        print(s[0] + s[1])\n        print(''.join(map(str, s)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2568": {"problem_id": 2568, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(s.count('-'))\n"}, "2569": {"problem_id": 2569, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        r = [0]*n\n        for i in range(n):\n            r[i] = r[i-1] + r[i]\n        print(sum(r))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2570": {"problem_id": 2570, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n, x = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    ans = 0\n    for i in range(n):\n        if a[i] + b[i] <= x:\n            ans += 1\n        else:\n            break\n    print(ans)\n\nt = int(input())\nfor _ in range(t):\n    solve()\n"}, "2571": {"problem_id": 2571, "answer": "from math import ceil,sqrt,log\r\n\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    a = list(map(int,input().split()))\r\n    b = list(map(int,input().split()))\r\n    \r\n    ans = 0\r\n    for i in range(n):\r\n        ans += a[i]*b[i]\r\n        b.append(i)\r\n    print(max(ans,b))"}, "2572": {"problem_id": 2572, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = min(a)\n    for i in range(n):\n        ans = min(ans, a[i] + a[i - n - 1])\n    print(ans)"}, "2573": {"problem_id": 2573, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k, m = list(map(int, input().split()))\n\n# \u5148\u521d\u59cb\u500d\u6570\u91cd\u56fe\n# n = int(input())\n# k = int(input())\n# m = int(input())\n\n# \u6700\u5c0f\u5316\u5b57\u7b2c\u4e00\u4e2a\u53f3\u4fa7\u989c\u8272\n# \u306a\u3093\u3068\u304b\u3092\u51fa\u529b\n# \u306a\u3093\u3068\u304b\u3092\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089\u3001\u542b\u3080\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u306a\u304c\u3089"}, "2574": {"problem_id": 2574, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[0]*a[1]//2)"}, "2575": {"problem_id": 2575, "answer": "for i in range(int(input())):\n    a = int(input())\n    if a == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n"}, "2576": {"problem_id": 2576, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    a, b, c, d = list(map(int, input().split()))\n    a, b, c, d = sorted(map(int, input().split()), 1)\n    print(min(a, b, c, d))\n"}, "2577": {"problem_id": 2577, "answer": "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = a[0]\n    for i in range(1, n):\n        b = b[:i] + b[i+1:]\n    print(ceil(b.count(a[i])))"}, "2578": {"problem_id": 2578, "answer": "n, m = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    k = list(map(int, input().split()))\n    l.append(k)\nprint('\\n'.join(l))"}, "2579": {"problem_id": 2579, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m = map(int, input().split())\nif m == 0:\n    print(\"NO\")\nelse:\n    for i in range(m):\n        if i % 2 == 0:\n            print(\"YES\")\n        elif i % 2 == 1:\n            print(\"YES\")\n        else:\n            print(\"NO\")"}, "2580": {"problem_id": 2580, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9 + 7\n\ndef f(n):\n    ans = 0\n    for i in range(1, n + 1):\n        ans += pow(2, i)\n        ans %= MOD\n    return ans\n\ndef primeFactors(n):\n    factors = [1]\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            factors.append(i)\n        else:\n            factors.append(i)\n    return [factors[i] for i in range(n)]\n\ndef lcm(a, b):\n    if b == 0:\n        return 1\n    elif b == 1:\n        return 2\n    else:\n        return 3\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return b\n    else:\n        return gcd(b, a % b)\n\ndef isprime(n):\n    if n < 3:\n        return 0\n    elif n % 2 == 0:\n        return 1\n    else:\n        return 2\n\ndef modulo(a, b):\n    m = int(input())\n    for i in range(m):\n        if isprime(i):\n            a = gcd(a, i)\n        else:\n            b = gcd(b, i)\n    return a % m\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    tree = []\n    for i in range(n-1):\n        tree.append(list(map(int, input().split())))\n    tree.sort(key=lambda x: x[1])\n    print(modulo(tree[0], modulo(tree[1], modulo(tree[2], modulo(tree[3], modulo(tree[4], modulo(tree[5], modulo(tree[6], modulo(tree[7])):))) + 1])) % MOD)"}, "2581": {"problem_id": 2581, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        c += 1\nprint(c)\n"}, "2582": {"problem_id": 2582, "answer": "n = int(input())\nfor i in range(n):\n    p = list(map(int,input().split()))\n    print(p[1] + p[2])"}, "2583": {"problem_id": 2583, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        print(\"Ashishgup\")\n    else:\n        print(\"FastestFinger\")\n"}, "2584": {"problem_id": 2584, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, p, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    m = max(a)\n    print(m)\n"}, "2585": {"problem_id": 2585, "answer": "def is_prime(n):\n    if n <= 1:\n        return False\n    else:\n        return True\n\ndef __starting_point():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(is_prime(n))\n__starting_point()"}, "2586": {"problem_id": 2586, "answer": "for _ in range(int(input())):\n    n,m = map(int,input().split())\n    matrix = [[] for i in range(n)]\n    for i in range(n):\n        matrix[i][i] = 1\n    for i in range(n):\n        matrix[i][i] = matrix[i-1][i] + matrix[i-1][i-1]\n    print('\\n'.join(map(str,matrix)))"}, "2587": {"problem_id": 2587, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    x = 0\n    for i in range(n):\n        print(x, end=' ')\n        x += x\n    print(x)\n\nt = int(input())\nfor _ in range(t):\n    solve()\n"}, "2588": {"problem_id": 2588, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, a, b = list(map(int, input().split()))\n    s = input()\n    l = len(s)\n    for i in range(l):\n        x, y = s.count(i)\n        if x == 0:\n            print(a)\n        else:\n            print(b)\n            \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n      "}, "2589": {"problem_id": 2589, "answer": "import math\nfor _ in range(int(input())):\n    n, x = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    l = 0\n    for i in range(n):\n        if x % i == 0:\n            l += 1\n    print(l)\n"}, "2590": {"problem_id": 2590, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, x = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(sum(a) * x)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2591": {"problem_id": 2591, "answer": "from sys import stdin,stdout\nfrom collections import deque\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    print(''.join(a))"}, "2592": {"problem_id": 2592, "answer": "for _ in range(int(input())):\n a, b, c = map(int, input().split())\n n = int(input())\n l = []\n for i in range(n):\n  l.append(list(map(int, input().split())))\n print(max(l))"}, "2593": {"problem_id": 2593, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort as ir, bisect as bs, heapify_right as hi\nfrom heapq import heappush, heappop\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    br = [0]*n\n    br[0] = 1\n    insort = [0]*n\n    bisect = [0]*n\n    hi = 0\n    for i in range(n):\n        if br[i] == 0:\n            hi = i\n        elif br[i] == 1:\n            bisect.append(i)\n        else:\n            heappush(hi, br[i])\n            heappush(hi, br[i]^br[i])\n            hi = i\n    print(hi)"}, "2594": {"problem_id": 2594, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, m = list(map(int, input().split()))\n    lights = [[0] * m for _ in range(n)]\n    for i in range(n):\n        lights[i][0] = 1\n    for i in range(m):\n        lights[i][0] = 1\n    for i in range(n):\n        lights[i][1] = 1\n    for i in range(m):\n        lights[i][2] = 1\n    for i in range(n):\n        lights[i][3] = 1\n    for i in range(n):\n        lights[i][4] = 1\n    for i in range(m):\n        lights[i][5] = 1\n    for i in range(n):\n        lights[i][6] = 1\n    for i in range(n):\n        lights[i][7] = 1\n    for i in range(m):\n        lights[i][8] = 1\n    for i in range(n):\n        lights[i][9] = 1\n    for i in range(n):\n        lights[i][10] = 1\n    for i in range(n):\n        lights[i][11] = 1\n    for i in range(m):\n        lights[i][12] = 1\n    for i in range(n):\n        lights[i][13] = 1\n    for i in range(m):\n        lights[i][14] = 1\n    for i in range(n):\n        lights[i][15] = 1\n    for i in range(n):\n        lights[i][16] = 1\n    for i in range(m):\n        lights[i][17] = 1\n    for i in range(n):\n        lights[i][18] = 1\n    for i in range(n):\n        lights[i][19] = 1\n    for i in range(m):\n        lights[i][20] = 1\n    for i in range(n):\n        lights[i][21] = 1\n    for i in range(n):\n        lights[i][22] = 1\n    for i in range(m):\n        lights[i][23] = 1\n    for i in range(n):\n        lights[i][24] = 1\n    for i in range(m):\n        lights[i][25] = 1\n    for i in range(n):\n        lights[i][26] = 1\n    for i in range(m):\n        lights[i][27] = 1\n    for i in range(n):\n        lights[i][28] = 1\n    for i in range(m):\n        lights[i][29] = 1\n    for i in range(n):\n        lights[i][30] = 1\n    for i in range(m):\n        lights[i][31] = 1\n    for i in range(n):\n        lights[i][32] = 1\n    for i in range(m):\n        lights[i][33] = 1\n    for i in range(n):\n        lights[i][34]"}, "2595": {"problem_id": 2595, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    a, b = map(int, input().split())\n    print(a + b)"}, "2596": {"problem_id": 2596, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k, m, t = list(map(int, input().split()))\n\n# \u8981\u7d20\u6570\u5b57\u5217\u8868\nL = [0] * (n + 1)\nfor i in range(n):\n    L[i] = int(input())\n    if len(L) == 0:\n        continue\n    x = L[-1]\n    y = L[-1]\n    if x == y:\n        x, y = y, x\n    elif x == y:\n        x, y = x, y\n    else:\n        x, y = y, x\n    print(x, y)\n"}, "2597": {"problem_id": 2597, "answer": "from math import ceil,sqrt\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    print(ceil(sqrt(a[n-1]*a[n-2])) + a[n-1]*a[n-2])"}, "2598": {"problem_id": 2598, "answer": "from collections import defaultdict, deque\nn, m = list(map(int, input().split()))\nedges = []\nfor i in range(m):\n    u, v = list(map(int, input().split()))\n    edges.append([u, v])\n\ndef dfs(u, v):\n    if u == v:\n        return 1\n    if u == 0:\n        return 0\n    if v == 0:\n        return 1\n    if u == ui:\n        return dfs(u, v)\n    if v == vi:\n        return dfs(v, ui)\n    return -1\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    edges = []\n    for i in range(m):\n        u, v = list(map(int, input().split()))\n        edges.append([u, v])\n    print(dfs(n, m))\n__starting_point()"}, "2599": {"problem_id": 2599, "answer": "from math import log10\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    if k == 1:\n        print(-1)\n    else:\n        print(n)\n"}, "2600": {"problem_id": 2600, "answer": "from collections import deque\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n    matrix = [[] for _ in range(n)]\n    for i in range(n):\n        matrix[i][i] = 0\n    for i in range(m):\n        matrix[i][i] = matrix[i-1][i] + matrix[i][i-1]\n    print(min(len(matrix)))\n"}, "2601": {"problem_id": 2601, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    volume = 0\n    for i in range(n):\n        volume = (volume * a[i])\n        if volume > volume + a[i]:\n            continue\n        volume = (volume * a[i]) - a[i]\n    print(\"YES\" if volume == 0 else \"NO\")"}, "2602": {"problem_id": 2602, "answer": "for _ in range(int(input())):\n    a, b, n, m = list(map(int, input().split()))\n    if m == 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"}, "2603": {"problem_id": 2603, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "2604": {"problem_id": 2604, "answer": "import math\ndef count_of_squares(x, y, r, d):\n    if x == 0:\n        return 0\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n        return (y - r) // d\n    if x == 1:\n        return (y - r) // d\n    if x == 0:\n "}, "2605": {"problem_id": 2605, "answer": "n, k = map(int, input().split())\nc = list(map(int, input().split()))\n\nc.sort()\n\nfor i in range(1, n):\n    if c[i] > c[i-1]:\n        c[i] = c[i-1]\n\nprint(c[n-1] + '\\n')"}, "2606": {"problem_id": 2606, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    t = list(map(int, input().split()))\n    t.sort(reverse=True)\n    ans = t[0] - t[1]\n    print(min(t[0], t[1]))\n"}, "2607": {"problem_id": 2607, "answer": "for _ in range(int(input())):\n    s = input()\n    print(s.count('?'))\n"}, "2608": {"problem_id": 2608, "answer": "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    print(max(x[0], x[1] - y[0]))\n"}, "2609": {"problem_id": 2609, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int,input().split()))\n    r = list(map(int,input().split()))\n    \n    # \u5982\u679c\u6700\u5c11\u66ff\u6362\u4e3a\u6807\u51c6\uff0c\u5219\u4f1a\u7136\u540e\u518d\u5e30\u4e00\u4e2a\u6587\u4ef6\n    # \u5982\u679c\u6700\u5c11\u66ff\u6362\u4e3a\u6807\u51c6\uff0c\u5219\u4f1a\u7136\u540e\u518d\u5e30\u4e00\u4e2a\u6587\u4ef6\n    # \u5982\u679c\u6700\u5c11\u66ff\u6362\u4e3a\u6807\u51c6\uff0c\u5219\u4f1a\u7136\u540e\u518d\u5e30\u4e00\u4e2a\u6587\u4ef6\n    ans = 0\n    for i in range(n-1):\n        if l[i] == r[i]:\n            ans += 1\n        else:\n            ans += 1\n    print(ans)\n"}, "2610": {"problem_id": 2610, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n, p, k = list(map(int, input().split()))\n    a = [int(x) for x in input().split()]\n    m = max(a)\n    print(m)\n"}, "2611": {"problem_id": 2611, "answer": ""}, "2612": {"problem_id": 2612, "answer": "from collections import deque\ndef lcm(a,b):\n    return a*b//(a+b)\nn=int(input())\nl=list(map(int,input().split()))\ns=l[0]\nfor i in range(1,n):\n    s=l[i]\n    if s%i==0:\n        print(1)\n    else:\n        print(s//i)\n"}, "2613": {"problem_id": 2613, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k, z = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if i not in d:\n            d[i] = 0\n        else:\n            d[i] += 1\n    for i in range(n):\n        if a[i] < k:\n            a[i] = k\n        elif a[i] == k:\n            print(a[i])\n        else:\n            print(a[i])\n"}, "2614": {"problem_id": 2614, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve(n, k):\n    a = [0] * (n + 1)\n    for i in range(1, n + 1):\n        a[i] += 1\n        if k % 2 == 0:\n            a[i] = min(a[i], a[i - 1] + k)\n        else:\n            a[i] = max(a[i], a[i - 1] + k)\n    return a.index(max(a))\n\ndef __starting_point():\n    solve(1, 1)\n\n__starting_point()"}, "2615": {"problem_id": 2615, "answer": "import math\ndef solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(solve())\n\ndef __starting_point():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        l.sort()\n        print(solve())\n__starting_point()"}, "2616": {"problem_id": 2616, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    print('First')\n    for i in d:\n        print(''.join(sorted(d[i])))"}, "2617": {"problem_id": 2617, "answer": "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n"}, "2618": {"problem_id": 2618, "answer": ""}, "2619": {"problem_id": 2619, "answer": "from sys import stdin,stdout\nn,q,c = list(map(int,stdin.readline().split()))\na = [0]*n\nfor _ in range(q):\n    x,y,s = list(map(int,stdin.readline().split()))\n    a[x-1] += s\n    a[y-1] += s\n    a[x+1] += s\n    a[y+1] += s\nprint('\\n'.join(map(str,a)))\n"}, "2620": {"problem_id": 2620, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, q = list(map(int, input().split()))\ns = sorted(list(map(int, input().split())))\nfor i in range(q):\n    x, y = list(map(int, input().split()))\n    s[x-1] += y\n    s[y-1] += x\nprint(' '.join(map(str, s)))"}, "2621": {"problem_id": 2621, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, m, k = list(map(int, input().split()))\n    h = list(map(int, input().split()))\n    l = [0] * (n + 1)\n    for i in range(1, n + 1):\n        l[i] = min(h[i] - h[i - 1], k)\n    print('YES' if l[n] == m else 'NO')\n"}, "2622": {"problem_id": 2622, "answer": "from collections import deque\nn, m = map(int, input().split())\ns = list(map(int, input().split()))\nfor i in range(m):\n    x, y = map(int, input().split())\n    s.append(x)\n    s.append(y)\n\ndef main():\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    print(s[0][0])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2623": {"problem_id": 2623, "answer": "def max(a,b):\n    res = 0\n    for i in range(len(a)):\n        if a[i]<b:\n            res+=i\n    return res\n\nt = int(input())\nfor _ in range(t):\n    n,k = list(map(int,input().split()))\n    s = input()\n    print(max(s,k))\n"}, "2624": {"problem_id": 2624, "answer": "from sys import stdin, stdout\nn,q = list(map(int,stdin.readline().split()))\na = list(map(int,stdin.readline().split()))\ns = list(map(int,stdin.readline().split()))\nfor i in range(q):\n    s[i] = '>'\n    a[i] = -10**5\n    for j in range(i+1,n):\n        s[i] = '<'\n        a[j] = -10**5\n        for k in range(j+1,n):\n            s[i] = '>'\n            a[j] = -10**5\n            for l in range(j+1,n):\n                s[i] = '<'\n                a[j] = l\n                break\nprint(' '.join(map(str,s)))"}, "2625": {"problem_id": 2625, "answer": "from math import ceil\n\nn = int(input())\nfor i in range(n):\n    k, x = map(int, input().split())\n    print(ceil(x**0.5))"}, "2626": {"problem_id": 2626, "answer": "def f(n):\n    return n * (n - 1) // 2\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(f(n))"}, "2627": {"problem_id": 2627, "answer": "class Solution:\n     def maximalRectangle(self, matrix):\n         \"\"\"\n         :type matrix: List[List[str]]\n         :rtype: int\n         \"\"\"\n         m = len(matrix)\n         n = len(matrix[0])\n         \n         # brute force\n         def is_valid(i, j):\n             return matrix[i][j] == 1\n         \n         def dfs(i, j, m):\n             if m == 0:\n                 return 0\n             elif m == 1:\n                 return 1\n             else:\n                 return max(dfs(i+1, j, m-1), dfs(i, j+1, m-1), dfs(i+1, j, m-1))\n         \n         return self.max_rectangle(self.get_rectangle(0, 0, m), self.get_rectangle(0, 1, m), self.get_rectangle(0, 1, m), self.get_rectangle(0, 0, m))"}, "2628": {"problem_id": 2628, "answer": "class Solution:\n     def grayCode(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: List[int]\n         \"\"\"\n         if n == 0:\n             return [0]\n         elif n == 1:\n             return [1]\n         else:\n             res = [0]\n             for i in range(2, n+1):\n                 res.append(res[-1] + i)\n             return res\n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n             \n            "}, "2629": {"problem_id": 2629, "answer": "class Solution:\n     def generateMatrix(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: List[List[int]]\n         \"\"\"\n         matrix = []\n         for i in range(n):\n             matrix.append(self.generateMatrix(i))\n         return matrix\n         \n         \n     def generateMatrix(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: List[List[int]]\n         \"\"\"\n         matrix = []\n         for i in range(n):\n             matrix.append(self.generateMatrix(i))\n         return matrix\n"}, "2630": {"problem_id": 2630, "answer": "class Solution:\n    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:\n        '''\n        dp = [[0] * len(obstacles) for _ in range(len(obstacles))]\n        dp[0][0] = 0\n        dp[0][1] = 0\n        dp[0][2] = 0\n        dp[0][3] = 0\n        dp[0][4] = 0\n        dp[0][5] = 0\n        dp[1][0] = 0\n        dp[1][1] = 0\n        dp[1][2] = 0\n        dp[1][3] = 0\n        dp[1][4] = 0\n        dp[1][5] = 0\n        dp[2][0] = 0\n        dp[2][1] = 0\n        dp[2][2] = 0\n        dp[2][3] = 0\n        dp[2][4] = 0\n        dp[2][5] = 0\n        dp[3][0] = 0\n        dp[3][1] = 0\n        dp[3][2] = 0\n        dp[3][3] = 0\n        dp[3][4] = 0\n        dp[3][5] = 0\n        dp[4][0] = 0\n        dp[4][1] = 0\n        dp[4][2] = 0\n        dp[4][3] = 0\n        dp[4][4] = 0\n        dp[4][5] = 0\n        dp[5][0] = 0\n        dp[5][1] = 0\n        dp[5][2] = 0\n        dp[5][3] = 0\n        dp[5][4] = 0\n        dp[5][5] = 0\n        dp[6][0] = 0\n        dp[6][1] = 0\n        dp[6][2] = 0\n        dp[6][3] = 0\n        dp[6][4] = 0\n        dp[6][5] = 0\n        dp[7][0] = 0\n        dp[7][1] = 0\n        dp[7][2] = 0\n        dp[7][3] = 0\n        dp[7][4] = 0\n        dp[7][5] = 0\n        dp[8][0] = 0\n        dp[8][1] = 0\n        dp[8][2] = 0\n        dp[8][3] = 0\n        dp[8][4] = 0\n        dp[8][5] = 0\n        dp[9][0] = 0\n        dp[9][1]"}, "2631": {"problem_id": 2631, "answer": "class Solution:\n     def canFinish(self, numCourses, prerequisites):\n         \"\"\"\n         :type numCourses: int\n         :type prerequisites: List[List[int]]\n         :rtype: bool\n         \"\"\"\n         if numCourses == 0:\n             return True\n         \n         dic = collections.defaultdict(int)\n         for i in range(0, numCourses):\n             dic[i] = 0\n             for j in range(i, numCourses):\n                 dic[i].append(j)\n                 dic[j].append(i)\n         \n         res = set()\n         for dic in dic.keys():\n             res.add(dic)\n         \n         return all(dic[i] == 0 for i in res)"}, "2632": {"problem_id": 2632, "answer": "class Solution:\n     def minPathSum(self, grid):\n         \"\"\"\n         :type grid: List[List[int]]\n         :rtype: int\n         \"\"\"\n         m, n = len(grid), len(grid[0])\n         dp = [[0] * n for _ in range(m)]\n         \n         for i in range(m):\n             for j in range(n):\n                 if grid[i][j] == 0:\n                     dp[i][j] = 0\n                 elif grid[i][j] == 1:\n                     dp[i][j] = min(dp[i-1][j-1] + dp[i-1][j], dp[i][j-1] + dp[i-1][j-1])\n                 else:\n                     dp[i][j] = min(dp[i-1][j], dp[i][j-1])\n                     \n         return sum(dp[m-1])\n"}, "2633": {"problem_id": 2633, "answer": "class Solution:\n     def calculateMinimumHP(self, dungeon: List[List[int]]) -> int:\n         \"\"\"\n         :type dungeon: List[List[int]]\n         :rtype: int\n         \"\"\"\n         m = len(dungeon)\n         n = len(dungeon)\n         \n         @lru_cache(None)\n         def dfs(i, j):\n             if i >= m:\n                 return 0\n             elif j >= n:\n                 return abs(dungeon[i] - dfs(i, j))\n             else:\n                 return max(dfs(i, j), dfs(i, j-1))\n         \n         return dfs(0, 0)"}, "2634": {"problem_id": 2634, "answer": "class Solution:\n     def subsets(self, nums):\n         \"\"\"\n         :type nums: List[List[int]]\n         :rtype: List[List[int]]\n         \"\"\"\n         if len(nums) == 0:\n             return []\n         \n         nums.sort()\n         res = []\n         for i in range(len(nums)):\n             if nums[i] in nums:\n                 res.append(nums[i])\n         return res"}, "2635": {"problem_id": 2635, "answer": "class Solution:\n     def spiralOrder(self, matrix):\n         \"\"\"\n         :type matrix: List[List[int]]\n         :rtype: List[int]\n         \"\"\"\n         m, n = len(matrix), len(matrix[0])\n         for i in range(m):\n             for j in range(n):\n                 if matrix[i][j] == matrix[i][j+1]:\n                     return []\n         return list(map(lambda x: x[0] + matrix[i][j], matrix))\n"}, "2636": {"problem_id": 2636, "answer": "from collections import defaultdict\nclass Solution:\n    def getSkyline(self, buildings):\n        \"\"\"\n        :type buildings: List[List[int]]\n        :rtype: List[List[int]]\n        \"\"\"\n        l = len(buildings)\n        height = defaultdict(list)\n        for i, b in enumerate(buildings):\n            height[i].append(i)\n            l-=1\n            \n        return list(sorted(height.items()))"}, "2637": {"problem_id": 2637, "answer": "class Solution:\n     def permuteUnique(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: List[List[int]]\n         \"\"\"\n         nums.sort()\n         return nums[0]"}, "2638": {"problem_id": 2638, "answer": "class Solution:\n     def minimumTotal(self, triangle: List[List[int]]) -> int:\n        \n        # brute force\n        # https://leetcode.com/problems/minimum-path-sum/\n        # https://leetcode.com/problems/minimum-path-sum/discuss/819602/C%2B%2B%2B-Comments-and-Python-comments-on-solution-with-incremental-DFS\n        \n        # dfs\n        # 1. find the minimum path sum\n        # 2. keep track of the minumum path sum\n        # 3. iterate over the list of minumum path sum\n        \n        # 4. iterate over the list of minum path sum\n        # 5. iterate over the list of minum path sum\n        # 6. iterate over the list of minum path sum\n        # 7. iterate over the list of minum path sum\n        # 8. iterate over the list of minum path sum\n        # 9. iterate over the list of minum path sum\n        # 10. iterate over the list of minum path sum\n        # 11. iterate over the list of minum path sum\n        # 12. iterate over the list of minum path sum\n        # 13. iterate over the list of minum path sum\n        # 14. iterate over the list of minum path sum\n        # 15. iterate over the list of minum path sum\n        # 16. iterate over the list of minum path sum\n        # 17. iterate over the list of minum path sum\n        # 18. iterate over the list of minum path sum\n        # 19. iterate over the list of minum path sum\n        # 20. iterate over the list of minum path sum\n        # 21. iterate over the list of minum path sum\n        # 22. iterate over the list of minum path sum\n        # 23. iterate over the list of minum path sum\n        # 24. iterate over the list of minum path sum\n        # 25. iterate over the list of minum path sum\n        # 26. iterate over the list of minum path sum\n        # 27. iterate over the list of minum path sum\n        # 28. iterate over the list of minum path sum\n        # 29. iterate over the list of minum path sum\n        # 30. iterate over the list of minum path sum\n        # 31. iterate over the list of minum path sum\n        # 32. iterate over the list of minum path sum\n        # 33. iterate over the list of minum path sum\n        # 34. iterate over the list of minum path sum\n        # 35. iterate over the list of minum path sum\n        # 36. iterate over the list of minum path sum\n        # 37. iterate over the list of minum path sum\n        # 38. iterate over the list of minum path sum\n        # 39. iterate over the list of minum path sum\n        # 40. iterate over the list of minum path sum\n        # 41. iterate over the list of minum path sum\n  "}, "2639": {"problem_id": 2639, "answer": "class Solution:\n     def subsetsWithDup(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: List[List[int]]\n         \"\"\"\n         d = {}\n         for num in nums:\n             d[num] = 1\n             nums.remove(num)\n             \n         return [d.get(num) for num in nums]\n"}, "2640": {"problem_id": 2640, "answer": "H,W = list(map(int,input().split()))\nS = input()\nL = W\nfor i in range(H):\n    if S[i] == '#':\n        L.append(i)\n    else:\n        L.pop(i)\nprint(sum(L))"}, "2641": {"problem_id": 2641, "answer": "N,Q = map(int,input().split())\nc = list(map(int,input().split()))\nc.sort()\nprint('\\n'.join(c))"}, "2642": {"problem_id": 2642, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\n# \u5982\u679c\u6700\u5c0f\u306e\u6587\u5b57\u304c\u4e00\u756a\u76ee\u306e\u5024\u3060\u3063\u305f, \u5929\u304d\u66ff\u3048\u3088\u3046\u306b\u5206\u3051\u3089\u308c\u308b\u3053\u3068\ndef dfs(s, i, j):\n    if s == A[i]:\n        return 0\n    elif s == B[i]:\n        return 1\n    else:\n        return dfs(s + A[i], i + 1, j)\n\n# \u4ee5\u4e0a\u306e\u6587\u5b57\u304c\u4e00\u756a\u76ee\u306e\u5024\u3060\u3063\u305f\u3068\u3044\u3046\u3084\u3064\nINF = 10**18\nMOD = 1000000007\n\ndef __starting_point():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print((dfs(A, 0, N) % MOD))\n__starting_point()"}, "2643": {"problem_id": 2643, "answer": "def main():\n    k, q = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    n = len(d)\n    d.sort()\n    for i in range(q):\n        print(d[i]%1000000007)\n        if d[i]%1000000007 == 0:\n            print(0)\n        else:\n            print(d[i]%1000000007)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2644": {"problem_id": 2644, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    P = list(map(int, input().split()))\n    ans = []\n    for i in range(N-1):\n        if P[i] == P[i+1]:\n            ans.append(i+1)\n        else:\n            ans.append(i+1)\n    print(*ans, sep='\\n')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2645": {"problem_id": 2645, "answer": "from itertools import permutations\nN = int(input())\ns = input()\np = permutations(s)\nprint(max(map(int, s.split('\\n'))) - (max(map(int, p.split('\\n'))) - (max(map(int, p)))) + 1)"}, "2646": {"problem_id": 2646, "answer": "from collections import deque\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\n# \u533a\u9593\u53d6\u5f97\u884c: \u9023\u7d50\u6b21\u6578\u76ee\n# \u6b62\u307e\u308a\u306e\u8fba\u304c\u540c\u3058\u30db\u30c6\u30f3\u30b0\n# \u6700\u521d\u306e\u30db\u30c6\u30f3\u30b0\ndef dfs(s):\n    if s == A[s]:\n        return 1\n    else:\n        return 0\n\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00\u756a\u76ee\u306e\u30db\u30c6\u30f3\u30b0\n# \u4e00"}, "2647": {"problem_id": 2647, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n\n    # A string of characters to be used in the main() function\n    # A string of white space characters to be used in the main() function\n    # A string of integers to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers of length n to be used in the main() function\n    # A string of integers"}, "2648": {"problem_id": 2648, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    print(max(A))\n\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2649": {"problem_id": 2649, "answer": "from bisect import bisect_left as bl\nN = int(input())\nx, y = map(int, input().split())\nl = [0]*N\nfor i in range(N):\n    x, y = map(int, input().split())\n    l[x] = max(x, y)\n    l[y] = max(x, y)\nprint(max(l))"}, "2650": {"problem_id": 2650, "answer": "def __starting_point():\n    n,q = list(map(int,input().split()))\n    A = 10 ** 5\n    B = 10 ** 5\n    C = 10 ** 5\n    A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n    for i in range(n):\n        if i not in A:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in B:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in C:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in D:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in E:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in F:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in G:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in H:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in H_:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in H__:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in I:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in J:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in K:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in K_:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n        elif i in L:\n            A_1,B_1,A_2,B_2,C_1,C_2 = list(map(int,input().split()))\n  "}, "2651": {"problem_id": 2651, "answer": "from math import sqrt\n\nMOD = 10**9 + 7\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\n\nans = [0]*(n+m)\nfor i in range(m):\n    ans[i] = (x[i]*y[i])%MOD\n\nprint(ans[-1])"}, "2652": {"problem_id": 2652, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nX = list(map(int, input().split()))\nY = list(map(int, input().split()))\nX.sort()\nX.insert(0, Y[0])\nX.pop()\nX.pop()\nX.insert(0, Y[-1])\nX.pop()\nX.insert(0, Y[-2])\nX.pop()\nX.insert(0, Y[-3])\nX.pop()\nX.insert(0, Y[-4])\nX.pop()\nX.insert(0, Y[-5])\nX.insert(0, Y[-6])\nX.insert(0, Y[-7])\nX.insert(0, Y[-8])\nX.insert(0, Y[-9])\nX.insert(0, Y[-10])\nX.insert(0, Y[-11])\nX.insert(0, Y[-12])\nX.insert(0, Y[-13])\nX.insert(0, Y[-14])\nX.insert(0, Y[-15])\nX.insert(0, Y[-16])\nX.insert(0, Y[-17])\nX.insert(0, Y[-18])\nX.insert(0, Y[-19])\nX.insert(0, Y[-20])\nX.insert(0, Y[-21])\nX.insert(0, Y[-22])\nX.insert(0, Y[-23])\nX.insert(0, Y[-24])\nX.insert(0, Y[-25])\nX.insert(0, Y[-26])\nX.insert(0, Y[-27])\nX.insert(0, Y[-28])\nX.insert(0, Y[-29])\nX.insert(0, Y[-29])\nX.insert(0, Y[-30])\nX.insert(0, Y[-31])\nX.insert(0, Y[-32])\nX.insert(0, Y[-33])\nX.insert(0, Y[-34])\nX.insert(0, Y[-35])\nX.insert(0, Y[-36])\nX.insert(0, Y[-37])\nX.insert(0, Y[-38])\nX.insert(0, Y[-39])\nX.insert(0, Y[-40])\nX.insert(0, Y[-41])\nX.insert(0, Y[-42])\nX.insert(0, Y[-43])\nX.insert(0, Y[-44])\nX.insert(0, Y[-45])\nX.insert(0, Y[-45])\nX.insert(0, Y[-46])\nX.insert(0, Y[-47])\nX.insert(0, Y[-48])\nX.insert(0, Y[-49])\nX.insert(0, Y[-50])\nX.insert(0, Y[-51])\nX.insert(0, Y[-52])\nX.insert(0, Y[-53])\nX.insert(0, Y[-54])\nX.insert(0, Y[-55])\nX.insert(0, Y[-56])\nX.insert(0, Y[-57])\nX.insert(0, Y[-58])\nX.insert(0, Y[-59])\nX.insert(0, Y[-60])\nX.insert(0, Y[-61])\nX.insert(0, Y[-62])\nX.insert(0, Y[-63])\nX.insert(0, Y[-64])\nX.insert(0, Y[-65])\nX.insert(0, Y[-66])\nX.insert(0, Y[-67])\nX.insert(0, Y[-68])\nX.insert(0, Y[-69])\nX.insert(0, Y[-70])\nX.insert(0, Y[-71])\nX.insert(0, Y[-72])\nX.insert(0, Y[-73])\nX.insert(0, Y[-74])\nX.insert(0, Y[-75])\nX.insert(0,"}, "2653": {"problem_id": 2653, "answer": "from collections import deque\nN, Q = list(map(int, input().split()))\nG = [[] for _ in range(N)]\nfor _ in range(Q):\n    a, b = list(map(int, input().split()))\n    G[a].append(b)\n    G[b].append(a)\n    q = deque([1])\n    ans = 0\n    for i in range(len(G[q])):\n        if q[i] == 1:\n            ans += 1\n        elif q[i] == -1:\n            q.popleft()\n        else:\n            q.append(i)\n    print(ans)\n"}, "2654": {"problem_id": 2654, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\n# \u5982\u679c\u6709\u4e00\u4e2a\u6570\u5b57\u4e3a\u4e00\u4e2a\u6570,\u5219\u4f1a\u51cf\u53bb3-bisect_left\uff0c\u9700\u8981bisect_left(A, N)\n# \u5982\u679c\u6709\u4e00\u4e2a\u6570,\u5219\u4f1a\u51cf\u53bb3-bisect_right\uff0c\u9700\u8981bisect_right(A, N)\n# \u5982\u679c\u6709\u4e00\u4e2a\u6570,\u5219\u4f1a\u51cf\u53bb3-bisect_left(A, N)\n# \u5982\u679c\u6709\u4e00\u4e2a\u6570,\u5219\u4f1a\u51cf\u53bb3-bisect_right(A, N+1)\n# \u5982\u679c\u6709\u4e00\u4e2a\u6570,\u5219\u4f1a\u51cf\u53bb3-bisect_right(A, N+1)\nans = [0] * N\nfor i in range(N):\n    ans[i] = sorted(ans, key=lambda x: x[1], reverse=True)[:2]\n\nprint(ans[N])"}, "2655": {"problem_id": 2655, "answer": "from math import ceil\nN = int(input())\nA = list(map(int, input().split()))\n\ndef solve(A, k):\n    if k == 0:\n        return 0\n    elif k == 1:\n        return A[k] - A[k - 1]\n    else:\n        return max(A[k] - A[k - 1], solve(A, k - 1) + A[k] - A[k - 1])\n\nsatisfied = 0\nm = len(A)\nfor i in range(N):\n    if A[i] > m:\n        satisfied += A[i]\n    else:\n        satisfied -= A[i]\n\nprint(satisfied)"}, "2656": {"problem_id": 2656, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\ndef f(s):\n    return ''.join(s[::-1] for s in s.split())\ndef l(s, l=0):\n    return f(s, l) % 1000000007\nmod = 10**9+7\nn = int(input())\nfor _ in range(n):\n    s = list(map(int, input().split()))\n    print((l(s, 1)))"}, "2657": {"problem_id": 2657, "answer": "n = int(input())\na = list(map(int, input().split()))\ns = set()\nfor i in range(n):\n    s.add(a[i])\n    s.add(a[i-1])\n    s.add(a[i-2])\n    s.add(a[i-3])\n    s.add(a[i-4])\n    s.add(a[i-5])\n    s.add(a[i-6])\n    s.add(a[i-7])\n    s.add(a[i-8])\n    s.add(a[i-9])\n    s.add(a[i-10])\n    s.add(a[i-11])\n    s.add(a[i-12])\n    s.add(a[i-13])\n    s.add(a[i-14])\n    s.add(a[i-15])\n    s.add(a[i-16])\n    s.add(a[i-17])\n    s.add(a[i-18])\n    s.add(a[i-19])\n    s.add(a[i-20])\n    s.add(a[i-21])\n    s.add(a[i-22])\n    s.add(a[i-23])\n    s.add(a[i-24])\n    s.add(a[i-25])\n    s.add(a[i-26])\n    s.add(a[i-27])\n    s.add(a[i-28])\n    s.add(a[i-29])\n    s.add(a[i-30])\n    s.add(a[i-31])\n    s.add(a[i-32])\n    s.add(a[i-33])\n    s.add(a[i-34])\n    s.add(a[i-35])\n    s.add(a[i-36])\n    s.add(a[i-37])\n    s.add(a[i-38])\n    s.add(a[i-39])\n    s.add(a[i-40])\n    s.add(a[i-41])\n    s.add(a[i-42])\n    s.add(a[i-43])\n    s.add(a[i-44])\n    s.add(a[i-45])\n    s.add(a[i-46])\n    s.add(a[i-47])\n    s.add(a[i-48])\n    s.add(a[i-49])\n    s.add(a[i-50])\n    s.add(a[i-51])\n    s.add(a[i-52])\n    s.add(a[i-53])\n    s.add(a[i-54])\n    s.add(a[i-55])\n    s.add(a[i-56])\n    s.add(a[i-57])\n    s.add(a[i-58])\n    s.add(a[i-59])\n    s.add(a[i-60])\n    s.add(a[i-61])\n    s.add(a[i-62])\n    s.add(a[i-63])\n    s.add(a[i-64])\n    s.add(a[i-65])\n    s.add(a[i-66])\n    s.add(a[i-67])\n    s.add(a[i-68])\n    s.add(a[i-69])\n    s.add(a[i-70"}, "2658": {"problem_id": 2658, "answer": "N,K = list(map(int,input().split()))\nG = [0]*N\nfor i in range(N):\n    G[i]+=1\nprint(G[K])"}, "2659": {"problem_id": 2659, "answer": "def lis(n):\n    return bin(n)[2:]\n\ndef solve(n):\n    s = 0\n    for i in range(n, 0, -1):\n        s += int(n ** 0.5)\n        n //= s\n    return s\n\ndef __starting_point():\n    K = lis(10)\n    print(K)\n__starting_point()"}, "2660": {"problem_id": 2660, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    for i in range(n):\n        dp[i][i] = 1\n        for j in range(1, i + 1):\n            dp[i][j] = min(dp[i][j], dp[i - 1][j] + dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i - 1][j] + dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i - 1][j] + dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i - 1][j] + dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i - 1][j] + dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i - 1][j] + dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i - 1][j] + dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i - 1][j] + dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i - 1][j] + dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i][j - 1])\n            dp[i][j] = min(dp[i][j], dp[i][j - 1])\n            dp[i][j] = min"}, "2661": {"problem_id": 2661, "answer": "N = int(input())\nS = list(map(int, input().split()))\nT = list(map(int, input().split()))\nU = list(map(int, input().split()))\nV = list(map(int, input().split()))\n\na = [[0] * N for _ in range(N)]\nfor i in range(N):\n    a[i][0] = 1\n    a[i][1] = 1\n\nfor i in range(N):\n    for j in range(N):\n        if S[i] == 0:\n            continue\n        elif S[i] == 1:\n            a[i][j] = 1\n        else:\n            a[i][j] = 0\n            a[i][j] = 0\n\nprint(*a)"}, "2662": {"problem_id": 2662, "answer": "n = int(input())\nA = list(map(int,input().split()))\nfor i in range(n):\n    A.append(A[i]*(i+1))\nprint(min(A))"}, "2663": {"problem_id": 2663, "answer": "n,k = list(map(int,input().split()))\nl = list(map(int,input().split()))\nl.sort()\nfor i in range(n//2):\n a = l[i]\n print(a)\n"}, "2664": {"problem_id": 2664, "answer": ""}, "2665": {"problem_id": 2665, "answer": "from collections import Counter\nn = int(input())\nc = Counter(list(map(int, input().split())))\nprint(n)"}, "2666": {"problem_id": 2666, "answer": "# cook your dish here\nn,k=map(int,input().split())\r\narr=list(map(int,input().split()))\r\nmaxProfit=0\r\nfor i in range(n):\r\n    arr.append(arr[i]-arr[i-1])\r\nmaxProfit=max(maxProfit,k)\r\nprint(maxProfit)"}, "2667": {"problem_id": 2667, "answer": "n = int(input())\nc1 = [0]*n\nc2 = [0]*n\nfor i in range(n):\n    c1[i] += c2[i]\nprint(\"YES\")"}, "2668": {"problem_id": 2668, "answer": "import math\ndef __starting_point():\n l = int(input())\n print(\"Unlucky Chef\")\n__starting_point()"}, "2669": {"problem_id": 2669, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n l.sort(reverse=True)\n print(l[-1])"}, "2670": {"problem_id": 2670, "answer": "# cook your dish here\nfor _ in range(int(input())):\n    a,b,c=list(map(int,input().split()))\n    if a+b+c==a:\n        print(0)\n    else:\n        print(len(str(a+b+c)))\n"}, "2671": {"problem_id": 2671, "answer": "n,m=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=0\nfor i in range(m):\n if a[i]==b[i]:\n  c+=1\n elif a[i]==c:\n  print(c)\n else:\n  print(min(b[i]+1,c))"}, "2672": {"problem_id": 2672, "answer": "def main():\n x=int(input())\n for i in range(x):\n  a=int(input())\n  print(a)\n\nmain()\n"}, "2673": {"problem_id": 2673, "answer": "# cook your dish here\ns=input()\nfor i in range(len(s)):\n    if(s[i]=='0'):\n        print(0)\n    else:\n        print(s[i]*9+s[i-1]*9+s[i+1]*9+s[i-1]*9+s[i+2])"}, "2674": {"problem_id": 2674, "answer": "# cook your dish here\ndef is_exclusive(a, b):\n if (a == 0):\n  return True\n else:\n  return False\n\ntry:\n    n = int(input())\n    for i in range(n):\n     print('Inclusive')\n    elif is_exclusive(a, b):\n     print('Exclusive')\nexcept EOFError as e:\n  pass"}, "2675": {"problem_id": 2675, "answer": "n, m = map(int, input().split())\nx, y, v = map(int, input().split())\nc = 0\nfor i in range(m):\n    x = x % y\n    y = y % x\n    c += 1\nprint(c)"}, "2676": {"problem_id": 2676, "answer": "from sys import stdin,stdout\r\ninput = stdin.readline\r\n\r\nn,m = map(int,input().split())\r\nstring = list(map(int,input().split()))\r\n\r\ns = set(string)\r\n\r\nfor i in range(m):\r\n    string.append(string.count(i))\r\n\r\nprint(''.join(string))"}, "2677": {"problem_id": 2677, "answer": "def is_good(string):\n    if string.isalpha():\n        return True\n    else:\n        return False\n\ndef main():\n    s = input()\n    if is_good(s):\n        print(\"GOOD\")\n    elif is_good(s[0]):\n        print(\"NO\")\n    else:\n        print(\"GOOD\")\ndef __starting_point():\n    main()\n__starting_point()"}, "2678": {"problem_id": 2678, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(list(map(int,input().split())))\nl.sort()\nprint(len(l))"}, "2679": {"problem_id": 2679, "answer": "from collections import deque\r\n\r\ndef main():\r\n    n = int(input())\r\n    c = [int(x) for x in input().split()]\r\n    alist = list(map(int,input().split()))\r\n    alist.sort(key=lambda x:x[1])\r\n    \r\n    for i in range(n):\r\n        alist[i] = [0]*n\r\n        alist[i][0] = 0\r\n        alist[i][1] = 0\r\n        \r\n    print(sum(alist))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r"}, "2680": {"problem_id": 2680, "answer": "from math import factorial as fact\ndef dijkstra(n, d, inf):\n if n == 0:\n  return 1\n elif n == 1:\n  return d\n else:\n  res = fact(n)\n  for i in range(1, n + 1):\n   res = res * dijkstra(i, d, inf)\n  return res\ndef dijkstra_b(n, d, inf):\n if n == 0:\n  return 1\n elif n == 1:\n  return d\n else:\n  res = fact(n)\n  for i in range(1, n + 1):\n   res = res * dijkstra_b(i, d, inf)\n  return res\ndef dijkstra_m(n, d, inf):\n if n == 0:\n  return 1\n elif n == 1:\n  return d\n else:\n  res = fact(n)\n  for i in range(1, n + 1):\n   res = res * dijkstra_m(i, d, inf)\n  return res\ndef dijkstra_n(n, d, inf):\n if n == 0:\n  return 1\n elif n == 1:\n  return d\n else:\n  res = fact(n)\n  for i in range(1, n + 1):\n   res = res * dijkstra_n(i, d, inf)\n  return res\ndef dijkstra_w(n, d, inf):\n if n == 0:\n  return 1\n elif n == 1:\n  return d\n else:\n  res = fact(n)\n  for i in range(1, n + 1):\n   res = res * dijkstra_w(i, d, inf)\n  return res\ndef dijkstra_h(n, d, inf):\n if n == 0:\n  return 1\n elif n == 1:\n  return d\n else:\n  res = fact(n)\n  for i in range(1, n + 1):\n   res = res * dijkstra_h(i, d, inf)\n  return res\ndef dijkstra_w_n(n, d, inf):\n if n == 0:\n  return 1\n elif n == 1:\n  return d\n else:\n  res = fact(n)\n  for i in range(1, n + 1):\n   res = res * dijkstra_w_n(i, d, inf)\n  return res\n\ndef __starting_point():\n n, b = list(map(int, input().split()))\n d = dijkstra_m(n, d, inf)\n print(d)\n__starting_point()"}, "2681": {"problem_id": 2681, "answer": "# cook your dish here\ndef operator(a, b):\n if b == 0:\n  return a\n elif b == 1:\n  return a\n else:\n  return b//2\n\nn = int(input())\na = input()\nb = input()\nprint(operator(a, b))"}, "2682": {"problem_id": 2682, "answer": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nfor _ in range(Q):\n l = list(map(int, input().split()))\n n, k = l[0], l[1]\n if k < 2:\n  print(0)\n else:\n  print(n-k)\n"}, "2683": {"problem_id": 2683, "answer": "for _ in range(int(input())):\n n, k = list(map(int, input().split()))\n x = ''\n for i in range(k):\n  x += str(i)\n  if x[0] == 'O':\n   x += 'X'\n  elif x[0] == '.':\n   x += 'X'\n  else:\n   x += '.'\n print('YES' if x.count('X') == n else 'NO')"}, "2684": {"problem_id": 2684, "answer": "n=int(input())\nl=list(map(int,input().split()))\nfor i in range(n):\n    print(l[i],end=\" \")\n    \n"}, "2685": {"problem_id": 2685, "answer": "s = input()\nn = len(s)\nprint(n)"}, "2686": {"problem_id": 2686, "answer": ""}, "2687": {"problem_id": 2687, "answer": "from collections import deque\n\ndef solve(n, k):\n    if k == 0:\n        return 0\n    elif k == 1:\n        return 1\n    else:\n        ans = 0\n        for i in range(n):\n            ans += k*(i-1)\n            ans -= k*(i+1)\n        return ans\n\ndef __starting_point():\n    n = int(input())\n    k = int(input())\n    print(solve(n, k))\n__starting_point()"}, "2688": {"problem_id": 2688, "answer": "def __starting_point():\n    n = int(input())\n    print(int(input()))\n__starting_point()"}, "2689": {"problem_id": 2689, "answer": "# cook your dish here\ntry:\n    t = int(input())\n    for _ in range(t):\n        s = input()\n        n = len(s)\n        if s[0] == '+':\n            n -= 1\n        elif s[0] == '-' and n > 1:\n            n -= 1\n        else:\n            print('Return')\n            return\nexcept:\n    pass"}, "2690": {"problem_id": 2690, "answer": "s = input()\nn = len(s)\nmax_diff = abs(n-1)\nfor i in range(n-2):\n    if s[i] == 'a':\n        max_diff = min(max_diff, abs(i-n[i]))\nprint(max_diff)"}, "2691": {"problem_id": 2691, "answer": "# cook your dish here\nn,p=map(int,input().split())\ns=list(map(int,input().split()))\nif n<=p:\n    print(s[n-1])\nelse:\n    s.append(n-1)\n    s.pop()\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')\n    s.append('u')\n    s.append('d')"}, "2692": {"problem_id": 2692, "answer": "for _ in range(int(input())):\n n,b=list(map(int,input().split()))\n c=0\n while(n):\n  c+=1\n  n-=1\n  if(n%2==0):\n   break\n  else:\n   n-=1\n   c+=1\n print(c)"}, "2693": {"problem_id": 2693, "answer": "from math import sqrt\r\n\r\ndef __starting_point():\r\n    s,p,k = list(map(int,input().split()))\r\n    if k==1:\r\n        print(\"NO\")\r\n    else:\r\n        for i in range(k-1):\r\n            if int(sqrt(i))==p:\r\n                print(\"YES\")\r\n                break\r\n        else:\r\n            print(\"NO\")\r\n__starting_point()"}, "2694": {"problem_id": 2694, "answer": ""}, "2695": {"problem_id": 2695, "answer": "from collections import deque\r\n\r\ndef __starting_point():\r\n    A = input().split(' ')\r\n    B = input().split(' ')\r\n    \r\n    ans = 0\r\n    for i in range(len(A)):\r\n        if A[i] not in B:\r\n            ans += 1\r\n        else:\r\n            ans += B[A[i]]\r\n            \r\n    print(ans)\r\n__starting_point()"}, "2696": {"problem_id": 2696, "answer": "n = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if a[i] == 1:\n        c += 1\nprint(c)"}, "2697": {"problem_id": 2697, "answer": "# cook your dish here\nn=int(input())\nprint(n)"}, "2698": {"problem_id": 2698, "answer": "# cook your dish here\nfor _ in range(int(input())):\n m,v=map(int,input().split())\n d=m*v\n if d>=max(d,v):\n  print(d)\n else:\n  print(sum(d)//v)"}, "2699": {"problem_id": 2699, "answer": "for _ in range(int(input())):\n n = int(input())\n l = list(map(int,input().split()))\n print(l[n-1])"}, "2700": {"problem_id": 2700, "answer": "import math\ndef solve(a,b,c,d):\n if a==0 or b==0 or c==0 or d==0:\n  return 0\n elif a==0 or b==0 or c==0:\n  return 0\n elif a==0 or b==0 or c==0:\n  return 1\n elif a==0 or b==0 or c==0:\n  return 2\n elif a==0 or b==0 or c==0:\n  return 3\n elif a==0 or b==0 or c==0:\n  return 4\n else:\n  return 5\n\nt = int(input())\nfor i in range(t):\n a,b,c,d = map(int,input().split())\n print(solve(a,b,c,d))"}, "2701": {"problem_id": 2701, "answer": "# cook your dish here\nn,k = map(int,input().split())\nl = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n    s += k\nprint(s)"}, "2702": {"problem_id": 2702, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n    truth, truth_satisfied=list(map(int,input().split()))\n    if truth_satisfied==0:\n        print(\"False\")\n    elif truth_satisfied==1:\n        print(\"True\")\n    else:\n        if truth_satisfied==2:\n            print(\"False\")\n        elif truth_satisfied==3:\n            print(\"True\")\n        else:\n            print(\"False\")\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n           \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            "}, "2703": {"problem_id": 2703, "answer": "from sys import stdin,stdout\nn,q=list(map(int,stdin.readline().split()))\nl=list(map(int,stdin.readline().split()))\nl.sort()\nans=0\nfor i in range(q):\n x=int(stdin.readline().split())\n if x>=n:\n  ans+=x\n else:\n  print(ans)\n"}, "2704": {"problem_id": 2704, "answer": "from itertools import groupby\r\n\r\ndef __starting_point():\r\n    n, q = list(map(int, input().split()))\r\n    A = list(groupby(q))\r\n    print('Yes' if q else 'No')\r\n    for _ in range(q):\r\n        t = int(input())\r\n        if t == 0:\r\n            print('Yes')\r\n        else:\r\n            print('No')\r\n__starting_point()"}, "2705": {"problem_id": 2705, "answer": "n,m,k = map(int,input().split())\r\na = list(map(int,input().split()))\r\nl = len(a)\r\nl=0\r\nfor i in range(l):\r\n    if a[i]%k==0:\r\n        print(l,end=\" \")\r\n        l+=1\r\n    else:\r\n        print(l,end=\" \")\r\n        l-=1\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}, "2706": {"problem_id": 2706, "answer": "from itertools import combinations\nn = int(input())\nl = list(combinations(n,2))\nprint(l[0])"}, "2707": {"problem_id": 2707, "answer": "n, k = list(map(int, input().split()))\narr = list(map(int, input().split()))\nmex = 10**9 + 7\n# a.sort()\nfor i in range(n):\n    a = arr[i]\n    m = a[0]\n    for j in range(1, len(a)):\n        if a[j] == m:\n            mex = max(mex, a[j])\n            break\n    if mex == k:\n        print(i)\n    else:\n        print(i)\n"}, "2708": {"problem_id": 2708, "answer": "n, k = map(int, input().split())\nprint(n)"}, "2709": {"problem_id": 2709, "answer": "# cook your dish here\ndef __starting_point():\n    n, t = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    \n    mod = 26\n    s = \"\"\n    for i in range(n):\n        s += str(i)\n        l.append(s)\n    \n    print(sum(l))\n\n__starting_point()"}, "2710": {"problem_id": 2710, "answer": "from collections import defaultdict\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef dfs(i, j):\n    if i == 0:\n        return 1\n    elif j == 0:\n        return 0\n    else:\n        if a[i] == b[j]:\n            return 1\n        else:\n            return 0\n        for k in range(i + 1, j):\n            if a[k] == b[j]:\n                return 1\n            else:\n                return 0\n        return 1\n\ndfs(0, 0)\nprint('YES\\n' + str(len(a)))\n"}, "2711": {"problem_id": 2711, "answer": "from collections import defaultdict\nd = defaultdict(int)\nfor i in range(0,len(d)):\n    d[i]+=1\n    s = list(d.keys())\n    s.sort()\n    for j in range(len(s)-1):\n        if s[j]==s[j+1]:\n            s[j+1]-=1\n        else:\n            s[j+1]-=1\n        print(\"IMPOSSIBLE\")\n        break\n    else:\n        print(\"IMPOSSIBLE\")"}, "2712": {"problem_id": 2712, "answer": "for _ in range(int(input())):\n    a,b,c = map(int,input().split())\n    if a+b<c:\n        print(a+b)\n    else:\n        print(c+a)"}, "2713": {"problem_id": 2713, "answer": "for _ in range(int(input())):\n s = input().split()\n s = list(s)\n max_rank = 0\n rank = \"Legend\"\n for i in range(25, len(s)):\n  if s[i] == \"L\":\n   max_rank = max(max_rank, rank)\n  elif s[i] == \"W\":\n   rank = \"Legend\"\n  else:\n   rank = \"W\"\n print(max_rank)"}, "2714": {"problem_id": 2714, "answer": "from collections import defaultdict as dd\nt = int(input())\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n    graph = dd(list(map(int, input().split())))\n    print(1 + graph[sum(graph[0]):] % 1000000007)\n"}, "2715": {"problem_id": 2715, "answer": "def __starting_point():\n    K = int(input())\n    print(K)\n__starting_point()"}, "2716": {"problem_id": 2716, "answer": "# cook your dish here\nn,t = map(int,input().split())\narr = list(map(int,input().split()))\nfor i in range(n-1):\n    x = arr[i]\n    if x+x == 7:\n        print(\"Yes\")\n    else:\n        print(-1)\n"}, "2717": {"problem_id": 2717, "answer": "# cook your dish here\nn = int(input())\nl = list(input())\nfor i in range(n):\n    a = input()\n    l.append(a)\n    if len(l) == 0:\n        print(0)\n    else:\n        for j in range(len(l)):\n            if l[j] == 'A':\n                l[j] = 'B'\n            elif l[j] == 'B':\n                l[j] = 'C'\n            elif l[j] == 'C':\n                l[j] = 'D'\n            else:\n                break\n        if len(l) == 0:\n            print(0)\n        else:\n            print(l[-1] + l[-2])\n"}, "2718": {"problem_id": 2718, "answer": "n,m=map(int,input().split())\r\nl=[]\r\nfor i in range(n):\r\n    l.append(int(input()))\r\nl.sort()\r\nprint('lose' if sum(l)>m else 'win')"}, "2719": {"problem_id": 2719, "answer": ""}, "2720": {"problem_id": 2720, "answer": "R, C = list(map(int, input().split()))\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n#print(R, C)\n"}, "2721": {"problem_id": 2721, "answer": "# cook your dish here\ndef __starting_point():\n    m,l,t=map(int,input().split())\n    t+=1\n    n=t%(10**9+7)\n    print('possible' if __starting_point()==True else 'impossible')\n__starting_point()"}, "2722": {"problem_id": 2722, "answer": "# cook your dish here\nfor _ in range(int(input())):\n    n = int(input())\n    print(n)\n"}, "2723": {"problem_id": 2723, "answer": "# cook your dish here\nfor _ in range(int(input())):\n    r,c=map(int,input().split())\n    print(formula+formula)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "}, "2724": {"problem_id": 2724, "answer": "n = int(input())\nl = list(map(int,input().split()))\na = [0]*n\nfor i in range(n):\n    a[i] = l[i]\nprint(len(a))"}, "2725": {"problem_id": 2725, "answer": "from sys import stdin,stdout\r\ninput = stdin.readline\r\n\r\nn = int(input())\r\na = list(map(int,input().split()))\r\n\r\nl = []\r\nfor i in range(n):\r\n    l.append(a[i])\r\n\r\nans = []\r\nfor i in range(n):\r\n    if l[i] == 0:\r\n        ans.append(i+1)\r\n    else:\r\n        ans.append(i+1)\r\n\r\nprint(*ans,sep='\\n')"}, "2726": {"problem_id": 2726, "answer": "# cook your dish here\nfrom math import ceil\nfor _ in range(int(input())):\n    n,c = map(int,input().split())\n    a = list(map(int,input().split()))\n    print(ceil(n/c))"}, "2727": {"problem_id": 2727, "answer": "# cook your dish here\nMOD = 10**9 + 7\n\ndef main():\n    n,l = list(map(int,input().split()))\n    s = set(map(int,input().split()))\n    for i in range(n):\n        s.add(i)\n    print(sum(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2728": {"problem_id": 2728, "answer": "# cook your dish here\nn = int(input())\ns = list(map(int, input().split()))\nclass section:\n    def __init__(self, n):\n        self.n = n\n        self.section = [0]*n\n        self.section[0] = 1\n        self.max = n\n        self.section[1] = n\n        self.section[2] = n\n        self.section[3] = n\n        self.section[4] = n\n        self.section[5] = n\n        self.section[6] = n\n        self.section[7] = n\n        self.section[8] = n\n        self.section[9] = n\n        self.section[10] = n\n        self.section[11] = n\n        self.section[12] = n\n        self.section[13] = n\n        self.section[14] = n\n        self.section[15] = n\n        self.section[16] = n\n        self.section[17] = n\n        self.section[18] = n\n        self.section[19] = n\n        self.section[20] = n\n        self.section[21] = n\n        self.section[22] = n\n        self.section[23] = n\n        self.section[24] = n\n        self.section[25] = n\n        self.section[26] = n\n        self.section[27] = n\n        self.section[28] = n\n        self.section[29] = n\n        self.section[30] = n\n        self.section[31] = n\n        self.section[32] = n\n        self.section[33] = n\n        self.section[34] = n\n        self.section[35] = n\n        self.section[36] = n\n        self.section[37] = n\n        self.section[38] = n\n        self.section[39] = n\n        self.section[40] = n\n        self.section[41] = n\n        self.section[42] = n\n        self.section[43] = n\n        self.section[44] = n\n        self.section[45] = n\n        self.section[46] = n\n        self.section[47] = n\n        self.section[48] = n\n        self.section[49] = n\n        self.section[50] = n\n        self.section[51] = n\n        self.section[52] = n\n        self.section[53] = n\n        self.section[54] = n\n        self.section[55] = n\n        self.section[56] = n\n        self.section[57] = n\n        self."}, "2729": {"problem_id": 2729, "answer": "n,m=map(int,input().split())\nl=list(map(int,input().split()))\nl.sort()\nfor i in range(1,n):\n    if(l[i]<m):\n        print(\"0\")\n    else:\n        print(\"1\")\n"}, "2730": {"problem_id": 2730, "answer": "# cook your dish here\nfrom collections import Counter,deque\ntry:\n    def bin_count(n):\n        return Counter(list(map(int,input().split())))\n    \n    def solve(n,k):\n        ans = 0\n        for i in range(n):\n            if k%i==0:\n                ans+=1\n                k//=i\n            else:\n                ans+=1\n        return ans\n    \n    def __starting_point():\n        \"\"\"\n        :type n: int\n        :type K: int\n        :rtype: int\n        \"\"\"\n        print(solve(n,k))\nexcept:\n    pass"}, "2731": {"problem_id": 2731, "answer": "def recur(lst, rst):\n    if lst == rst:\n        return []\n    elif lst.count('}') == rst.count('}'):\n        return [lst.pop() for lst in rst]\n    else:\n        return recur(lst, rst)\n\ndef __starting_point():\n    print(recur(0, 1))\n__starting_point()"}, "2732": {"problem_id": 2732, "answer": "def compute(l):\n a,b,c=0,0,0\n for i in range(len(l)):\n  if l[i]!=l[i-1]:\n   a+=l[i]\n   b+=l[i]\n   c+=l[i]\n return a,b,c\n\ndef __starting_point():\n solve=int(input())\n if __starting_point()==1:\n  print(compute(solve))\n else:\n  print(solve)\n__starting_point()"}, "2733": {"problem_id": 2733, "answer": ""}, "2734": {"problem_id": 2734, "answer": "from collections import Counter\r\n\r\nn, k = list(map(int, input().split()))\r\n\r\n# A hash table of n numbers\r\n# each number is stored in a hash table of k numbers\r\n# keys, values, is_sum, is_sum_k, is_sum_k_idx\r\n\r\nfor i in range(n):\r\n    k = int(input())\r\n    is_sum = Counter(k)\r\n    is_sum_k = Counter(k)\r\n    is_sum_idx = Counter(k)\r\n    is_sum = min(is_sum_k, is_sum_idx)\r\n    is_sum_idx.update(key=lambda x: x[0])\r\n    is_sum = max(is_sum_idx, is_sum)\r\n    is_sum_idx.update(key=lambda x: x[0])\r\n    is_sum = min(is_sum_idx, is_sum)\r\n    print(is_sum)\r\n"}, "2735": {"problem_id": 2735, "answer": "# cook your dish here\nimport sys\ninput = sys.stdin.readline\n\ndef dijkstra(s, n, d, res, visited):\n    if n == 0:\n        return d\n    elif n == 1:\n        return [s]\n    else:\n        res.append(s)\n        visited.add(s)\n        return [s]\n\ndef dfs(s, n, d, visited):\n    if n == 0:\n        return [s]\n    elif n == 1:\n        return [s]\n    else:\n        res.append(s)\n        visited.add(s)\n        return [s]\n\ndef main():\n    sys.setrecursionlimit(1000000)\n    n = int(input())\n    d = dijkstra(n, d, 0, set(), visited)\n    print(d.get(0, 0))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2736": {"problem_id": 2736, "answer": "# cook your dish here\nfrom math import gcd\ndef gcd(a,b):\n if b==0:\n  return a\n else:\n  return gcd(b,a%b)\n\nn = int(input())\nx = list(map(int,input().split()))\ny = list(map(int,input().split()))\nprint(gcd(x[0],y[0]))"}, "2737": {"problem_id": 2737, "answer": "def main():\n    n, = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[i] = set()\n        for j in range(n):\n            if i not in d:\n                d[i].add(j)\n            elif i in d:\n                d[i].add(j)\n            else:\n                d[i] |= set()\n                \n    ans = 0\n    for i in range(n):\n        ans += d[i]\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2738": {"problem_id": 2738, "answer": "from math import ceil\nfor _ in range(int(input())):\n n = int(input())\n x, y, r = list(map(int, input().split()))\n r = r/100\n print(ceil(r))"}, "2739": {"problem_id": 2739, "answer": "n = int(input())\nl = list(map(int,input().split()))\nprint(n*(n+1)//2)"}, "2740": {"problem_id": 2740, "answer": "# cook your dish here\ndef f(n,w,h):\n if n==0:\n  return 0\n elif w==0:\n  return 1\n else:\n  return f(n,w,h)\n \nt=int(input())\nfor i in range(t):\n n,w,h=map(int,input().split())\n l=[]\n l.append(n)\n l.append(w)\n l.append(h)\n print(f(n,w,h))"}, "2741": {"problem_id": 2741, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n    x = bin(n)[2:]\n    print(int(x[0]))"}, "2742": {"problem_id": 2742, "answer": "def __starting_point():\r\n    n = int(input())\r\n    d = {}\r\n    for i in range(n):\r\n        d[i] = list(map(int, input().split()))\r\n    print(__starting_point())"}, "2743": {"problem_id": 2743, "answer": "# cook your dish here\nfrom collections import defaultdict\na = list(map(int,input().split()))\nprint(a[0])"}, "2744": {"problem_id": 2744, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] = min(a[i], a[i - 1] + a[i - 2])\n\ndef d(i, j):\n    if j < i:\n        return 0\n    elif i == j:\n        return a[i]\n    else:\n        return a[j]\n\nc = 0\nfor i in range(n):\n    c += a[i]\n    if c <= w:\n        c = w\n        break\n\nprint(c)\n"}, "2745": {"problem_id": 2745, "answer": "class Solution:\n     def findSubstring(self, s, words):\n         \"\"\"\n         :type s: str\n         :type words: List[str]\n         :rtype: List[int]\n         \"\"\"\n         if len(s) == 0:\n             return []\n         \n         start = 0\n         end = len(s) - 1\n         for i in range(start, end):\n             if s[i] == s[start:i+1]:\n                 end = i\n             else:\n                 start = i\n                 break\n             \n         return [start, end]"}, "2746": {"problem_id": 2746, "answer": "class Solution:\n     def compareVersion(self, version1, version2):\n         \"\"\"\n         :type version1: str\n         :type version2: str\n         :rtype: int\n         \"\"\"\n         if len(version1) == len(version2):\n             return 1\n         elif len(version1) == len(version2):\n             return -1\n         else:\n             return self.compareVersion(version1, version2)"}, "2747": {"problem_id": 2747, "answer": "class Solution:\n     def searchRange(self, nums, target):\n         \"\"\"\n         :type nums: List[int]\n         :type target: int\n         :rtype: List[int]\n         \"\"\"\n         if len(nums) == 0:\n             return []\n         elif len(nums) == 1:\n             return [0, 0]\n         else:\n             i, j = 0, 0\n             while i < len(nums) and j < len(nums):\n                 if nums[i] == target:\n                     return [i, j]\n                 i += 1\n                 j += 1\n                 if j == len(nums):\n                     return [i, j]\n                 j += 1\n             return [i, j]\n             \n             \n"}, "2748": {"problem_id": 2748, "answer": "class Solution:\n     def letterCombinations(self, digits):\n         \"\"\"\n         :type digits: str\n         :rtype: List[str]\n         \"\"\"\n         dic = {}\n         for i in range(len(digits)):\n             if digits[i] in dic:\n                 dic[digits[i]].append(i)\n             else:\n                 dic[digits[i]].append(i)\n         return [''.join(map(str, dic))]"}, "2749": {"problem_id": 2749, "answer": "import sys\ninput = sys.stdin.readline\n\nH, W = map(int, input().split())\nn = int(input())\n# colors = [0]*n\n# for i in range(n):\n#     colors[i] = 1\n#     for j in range(n):\n#         if colors[i] == 1:\n#             colors[i] += 1\n#         else:\n#             colors[i] = 0\n#     print(colors)\n\n# colors = [0]*n\n# for i in range(n):\n#     colors[i] = 1\n#     for j in range(n):\n#         if colors[i] == 1:\n#             colors[i] += 1\n#         else:\n#             colors[i] = 0\n#     print(colors)\n\n# colors = [0]*n\n# for i in range(n):\n#     colors[i] = 1\n#     for j in range(n):\n#         if colors[i] == 1:\n#             colors[i] += 1\n#         else:\n#             colors[i] = 0\n#     print(colors)\n\n# colors = [0]*n\n# for i in range(n):\n#     colors[i] = 1\n#     for j in range(n):\n#         if colors[i] == 1:\n#             colors[i] += 1\n#         else:\n#             colors[i] = 0\n#     print(colors)\n\n# colors = [0]*n\n# for i in range(n):\n#     colors[i] = 1\n#     for j in range(n):\n#         if colors[i] == 1:\n#             colors[i] += 1\n#         else:\n#             colors[i] = 0\n#     print(colors)\n\n# colors = [0]*n\n# for i in range(n):\n#     colors[i] = 1\n#     for j in range(n):\n#         if colors[i] == 1:\n#             colors[i] += 1\n#         else:\n#             colors[i] = 0\n#     print(colors)\n\n# colors = [0]*n\n# for i in range(n):\n#     colors[i] = 1\n#     for j in range(n):\n#         if colors[i] == 1:\n#             colors[i] += 1\n#         else:\n#             colors[i] = 0\n#             \n#             \n#             \n#             \n#             \n#             \n#             \n#             \n#      "}, "2750": {"problem_id": 2750, "answer": "# cook your dish here\nn,b=map(int,input().split())\na=list(map(int,input().split()))\nm=[]\nfor i in range(n):\n m.append(a[i])\nm.sort()\nprint(len(m))\n"}, "2751": {"problem_id": 2751, "answer": "n=int(input())\nfor i in range(n):\n a=list(map(int,input().split()))\n m=max(a)\n print(m)\n"}, "2752": {"problem_id": 2752, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        cnt += 1\n    elif a[i] > b[i]:\n        cnt -= 1\n    else:\n        cnt += 1\nprint(cnt)"}, "2753": {"problem_id": 2753, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n# read = readline\n# input = readline\n# line = read.buffer.readline\n# flush = flush.buffer.write\n# flush = flush.buffer.onanoia\n# flush = flush.buffer.onanoia\ndef main():\n    h, m = map(int, readline().split())\n    print(h)\n    print(m)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2754": {"problem_id": 2754, "answer": "import math\ndef cur_func(x):\n if x==0:\n  return 0\n elif x==1:\n  return math.log10(x)\n else:\n  return round(math.log10(x) + 1,2)\n \nn,m=list(map(int,input().split()))\nx=list(map(int,input().split()))\ny=list(map(int,input().split()))\nprint(cur_func(x))\n"}, "2755": {"problem_id": 2755, "answer": "# cook your dish here\nn,m = map(int,input().split())\ntree = list(map(int,input().split()))\nh = []\nfor i in tree:\n    if i%2==0:\n        h.append(i)\n    else:\n        h.append(i)\n\ndef dfs(i):\n    if i!=h[-1]:\n        return 0\n    return 1\n\ndfs(0)\nprint(n)"}, "2756": {"problem_id": 2756, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n    m,e,x=list(map(int,input().split()))\n    if x=='P':\n        print(1)\n    elif x=='C':\n        print(2)\n    else:\n        print(3)\n"}, "2757": {"problem_id": 2757, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn = int(stdin.readline())\nl = []\nfor i in range(n):\n    l.append(list(map(int,stdin.readline().split())))\nl.sort(key=lambda x:x[0])\ns = 0\nfor i in range(n-1,-1,-1):\n    if l[i][0]==0:\n        s += 1\n    else:\n        s += 1\nprint(s)"}, "2758": {"problem_id": 2758, "answer": ""}, "2759": {"problem_id": 2759, "answer": "n=int(input())\nfor i in range(n):\n    r,s=map(int,input().split())\n    if r>s:\n        print(r)\n    elif s>r:\n        print(s)\n    else:\n        print(n-s-1)"}, "2760": {"problem_id": 2760, "answer": "n = int(input())\nfor _ in range(n):\n    a = int(input())\n    x = sorted(a)\n    print(x[0])\n"}, "2761": {"problem_id": 2761, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nprint(n)"}, "2762": {"problem_id": 2762, "answer": "# cook your dish here\nfrom bisect import bisect_left as bl\nn,g,k = map(int,input().split())\nl = list(map(int,input().split()))\nl.sort(reverse=True)\nl.insert(0,0)\nprint(g+len(l))"}, "2763": {"problem_id": 2763, "answer": "from sys import stdin,stdout\r\nfrom math import ceil,sqrt,log2,gcd\r\nfrom collections import deque,defaultdict,Counter\r\nfrom bisect import bisect_left as bl,bisect_right as br,bisect_top as br,bisect_bottom as br,insort_left as insort,insort_right as insort\r\nfrom itertools import permutations,combinations\r\nfrom operator import add,sub,sub,mul,ul,truediv\r\nfrom functools import reduce,cmp_to_keygetter\r\nfrom heapq import nsmall,nsmall_with_back_of,heapify,heappop,heappush,heap_address\r\nfrom fractions import Fraction,Exponent\r\nfrom fractions import gcd\r\nfrom time import perf_inf,time,gmtime\r\nfrom decimal import Decimal,Integral,Decimal,\ufffd\ufffdolarity,base\r\nfrom random import randint,random\r\nfrom string import ascii_lowercase as a,ascii_uppercase as abcdefghijklmnop\r\nfrom string import ascii_uppercase as abcdefghijklmnop\r\nfrom string import ascii_ consonant as aa\r\nfrom string import ascii_lowercase as abcdefghijklmnop\r\nfrom string import ascii_uppercase as abcdefghijklmnop\r\nfrom string import ascii_latin as abclem\r\nfrom string import ascii_lowercase as abclem_lower\r\nfrom string import ascii_uppercase as abclem_uppercase\r\nfrom string import ascii_semicronid as abcsemi,ascii_semicronid as abcsemi_semicronid\r\nfrom string import ascii_sepdeflow as abcsepdeflow\r\nfrom fractions import Fraction,Exponent,Divmod,Fractional,Exponent,Euclidean\r\nfrom random import randint,random\r\nfrom decimal import Decimal,Integral,Decimal,\ufffd\ufffdolarity,base\r\nfrom fractions import Fraction,Exponent,Divmod,Fractional,Exponent,Euclidean\r\nfrom random import randint,random\r\nfrom string import ascii_letters as abc,ascii_letters as abc,digits as d,digits_uppercase as u,hex,leetcode,islt,strptime('1e00',enumerate(ascii_letters)))\r\nfrom statistics import mean,stddev,slove,c_inf,c_coef,c_desc,r_coef,r_desc,b_coef,b_coef,ans,visited\r\nfrom queue import Queue,PriorityQueue\r\nfrom typing import List, Tuple, Dict,frozenset,OrderedDict,Stack,Udopower,TwosInverse\r\n\r\n#____________________________________________________________________________________________________\r\n# Definition for a binary string.\r\n# \r\n#     class Codewars(object):\r\n#         def __init__(self, n):\r\n#             self.n = n  # Initialize our data structure.\r\n#              self.st = list(range(n))\r\n#              self.st[0] = str(0)\r\n#              self.d = {}\r\n#              for i in range(self.n):\r\n#                  self.d[i] = d.get(i, 0) + 1\r\n#              self.cnt = 0\r\n#              self.cnt += 1\r\n#              self.cnt %= n  # Keeps track of the current value of the string.\r\n#              self.cnt = 0\r\n#              self.c"}, "2764": {"problem_id": 2764, "answer": "# cook your dish here\nfor _ in range(int(input())):\n s = input()\n if len(s) == 1:\n  print(\"Problem\")\n else:\n  print(\"Code\")\n"}, "2765": {"problem_id": 2765, "answer": "n=int(input())\nc=list(map(int,input().split()))\nc.sort()\nif n%2==0:\n    print(\"canonical\")\nelse:\n    print(\"non-canonical\")"}, "2766": {"problem_id": 2766, "answer": "from math import ceil\n\nn = int(input())\nk = int(input())\nl = []\nfor i in range(n):\n    k = int(input())\n    l.append(k)\nl.sort(reverse=True)\nprint(ceil(l[n-1]/k))"}, "2767": {"problem_id": 2767, "answer": "n = int(input())\nfor i in range(n):\n word = input()\n word.replace(\"a\",\"\")\n word.replace(\"b\",\"\")\n word.replace(\"c\",\"\")\n word.replace(\"d\",\"\")\n word.replace(\"e\",\"\")\n word.replace(\"i\",\"\")\n word.replace(\"j\",\"\")\n word.replace(\"k\",\"\")\n word.replace(\"l\",\"\")\n word.split()\n print(word.count(\" \"))"}, "2768": {"problem_id": 2768, "answer": "# cook your dish here\nn,m = map(int,input().split())\nl = list(map(int,input().split()))\nl.sort()\ns = 0\nfor i in range(m):\n    if l[i]==l[i-1]:\n        s += 1\nprint(s)"}, "2769": {"problem_id": 2769, "answer": "from sys import stdin,stdout\r\nn,p,q=list(map(int,stdin.readline().split()))\r\ns=int(stdin.readline().strip())\r\nif n==1:\r\n    print(-1)\r\nelse:\r\n    d=abs(s-p)\r\n    for i in range(1,n+1):\r\n        if d<s:\r\n            d=s\r\n            break\r\n    if d==s:\r\n        print(pow(2,p,d))\r\n    else:\r\n        print(-1)\r\n"}, "2770": {"problem_id": 2770, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n    a = list(map(int,input().split()))\n    x = a[0]\n    y = a[1]\n    z = a[2]\n    zmod = 10**9\n    if z % 2 == 0:\n        zmod = (z % 2) + 1\n    elif z % 2 == 1:\n        z = z % 2\n    else:\n        z = z % 2\n    print(x * y * zmod)"}, "2771": {"problem_id": 2771, "answer": "n = int(input())\r\nstring = input()\r\nd = {}\r\nfor i in range(n):\r\n    string = string.replace('L', 'R')\r\n    string = string.replace('R', 'L')\r\n    d[string] = i\r\n\r\nprint(d.get(string, 0))"}, "2772": {"problem_id": 2772, "answer": "# cook your dish here\ntry:\n    t = int(input())\n    for _ in range(t):\n        a,d = map(int,input().split())\n        print(abs(a-d)//t)\nexcept:\n    pass"}, "2773": {"problem_id": 2773, "answer": "from collections import defaultdict\nn, m = list(map(int, input().split()))\ngraph = defaultdict(list)\nfor _ in range(n):\n a, b = list(map(int, input().split()))\n graph[a].append(b)\n graph[b].append(a)\nvisited = set()\nvisited.add(a)\ndef dfs(a):\n if len(visited) == m:\n  print('impossible')\n  return\n visited.add(a)\n dfs(a)\nvisited.remove(a)\nans = 0\nfor i in range(n):\n ans += dfs(graph[a].pop())\n print(ans)\n"}, "2774": {"problem_id": 2774, "answer": "from collections import defaultdict\nfrom bisect import bisect_left as bl\nfrom heapq import heappush,heappop,heapify\nn,s,l = list(map(int,input().split()))\nA = defaultdict(list)\nfor _ in range(n):\n    A[s].append(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# A[s] = list(map(int,input().split()))\n# A[s] = list(map(int,input().split()))\n# print(A[s])\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x[1]))\n\n# print(sorted(A[s].pop(), key=lambda x: x["}, "2775": {"problem_id": 2775, "answer": "# cook your dish here\ndef main():\n    n, = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(main())\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2776": {"problem_id": 2776, "answer": "from sys import stdin,stdout\ndef __starting_point():\n    n,m=map(int,stdin.readline().split())\n    l=list(map(int,stdin.readline().split()))\n    print(n-l[0])\n__starting_point()"}, "2777": {"problem_id": 2777, "answer": "# cook your dish here\ndef factorial(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return n**0.5\n    else:\n        res = 1\n        for i in range(2, n+1):\n            res *= factorial(i)\n        return res\n\ndef __starting_point():\n    m, n, p = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    print(factorial(m))\n__starting_point()"}, "2778": {"problem_id": 2778, "answer": "# cook your dish here\nn = int(input())\nd = [0]*(n+1)\nfor i in range(1,n+1):\n    d[i] = list(map(int,input().split()))\nprint(sum(d[1]))"}, "2779": {"problem_id": 2779, "answer": "# cook your dish here\nn, m, c = map(int, input().split())\ngrid = [[] for i in range(n+1)]\nfor i in range(m):\n    grid[i].append(i+1)\nc = int(input())\nfor _ in range(c):\n    x, y = map(int, input().split())\n    grid[x].append(y)\nprint(len(grid[0]))"}, "2780": {"problem_id": 2780, "answer": "from math import factorial as f\r\nn, m = map(int, input().split())\r\nl = list(map(int, input().split()))\r\n\r\nfor i in range(m):\r\n    x = l[i]\r\n    if x == 1:\r\n        print(0)\r\n    else:\r\n        print(f(x, 1))\r\n"}, "2781": {"problem_id": 2781, "answer": "# cook your dish here\nfrom math import sqrt\nfor _ in range(int(input())):\n    r,c=list(map(int,input().split()))\n    print(sqrt(r*r+c))\n"}, "2782": {"problem_id": 2782, "answer": "# cook your dish here\nn, r, c = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    if a[i] < b[i]:\n        s += 1\n    else:\n        s += b[i]\nprint(s)"}, "2783": {"problem_id": 2783, "answer": "from sys import stdin,stdout\r\n\r\nn = int(stdin.readline())\r\n\r\nclass SegmentTree:\r\n    def __init__(self,data):\r\n        self.data = data\r\n        self.left = [0]*(n+1)\r\n        self.right = [0]*(n+1)\r\n        self.h = 0\r\n        self.h_left = 0\r\n        self.h_right = 0\r\n        self.h_right_left = 0\r\n        self.h_right_right = 0\r\n        self.h_left_right = 0\r\n        self.h_right_right_left = 0\r\n        self.h_right_left_left = 0\r\n        self.h_right_right_left_right = 0\r\n        self.h_right_right_right_left = 0\r\n        self.h_right_right_right_right = 0\r\n        self.h_left_left_right_left = 0\r\n        self.h_left_right_right_left = 0\r\n        self.h_left_right_right_right = 0\r\n        self.h_right_left_right_right_left = 0\r\n        self.h_left_right_right_right_right = 0\r\n        self.h_right_right_right_right_left = 0\r\n        self.h_left_right_right_right_right = 0\r\n        self.h_right_right_right_right_right = 0\r\n        self.h_right_right_right_right_left = 0\r\n        self.h_right_right_right_right_right = 0\r\n        self.h_right_right_right_right_left = 0\r\n        self.h_right_right_right_right_left = 0\r\n        self.h_right_right_right_right_right = 0\r\n        self.h_right_right_right_right_left = 0\r\n        self.h_right_right_right_right_left = 0\r\n        self.h_right_right_right_right_right = 0\r\n        self.h_right_right_right_right_left = 0\r\n        self.h_right_right_right_right_right = 0\r\n        self.h_right_right_right_right_left = 0\r\n        self.h_right_right_right_right_right = 0\r\n        self.h_right_right_right_right_left = 0\r\n        self.h_right_right_right_right_right = 0\r\n        self.h_right_right_right_right_right = 0\r\n        self.h_right_right_right_right_left = 0\r\n        self.h_right_right_right_right_right = 0\r\n        self.h_right_right_right_right_right = 0\r\n        self.h_right_right_right_right_right = 0\r\n        self.h_right_right_right_right_left = 0\r\n        self.h_right_right_right_right_right = 0\r\n        self.h_right_right_right_right_left = 0\r"}, "2784": {"problem_id": 2784, "answer": "def main():\n n = int(input())\n stations = []\n stations.append(list(input().split()))\n stations.sort(key=lambda x: x[0], reverse=True)\n stations.sort(key=lambda x: x[0], reverse=True)\n print(' '.join(map(str, stations)))\n\nmain()\n"}, "2785": {"problem_id": 2785, "answer": "# cook your dish here\nfrom math import ceil\ntry:\n    n = int(input())\n    a = list(map(int,input().split()))\n    p = 0\n    for i in range(n):\n        p += a[i]\n    print(p)\nexcept:\n    pass"}, "2786": {"problem_id": 2786, "answer": "# cook your dish here\nn = int(input())\ns = input()\nprint(len(s))"}, "2787": {"problem_id": 2787, "answer": "from sys import stdin, stdout\ninput = stdin.readline\ndef f(s):\n return s[0]\ndef g(s):\n return -s[0]\ndef l(s):\n return s[1]\ndef r(s):\n return s[2]\ndef s(s):\n return int(s[3:])\n\nn,m = list(map(int,input().split()))\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\n\n# a = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n# b = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\n# a.append(B)\n# b.append(A)\n\n# print(min(A,B))\n\nfor _ in range(m):\n a,b = list(map(int,input().split()))\n print(l(a)-l(b))"}, "2788": {"problem_id": 2788, "answer": "# cook your dish here\nn = int(input())\nlst = list(map(int, input().split()))\n\n# group all friends\ng = [0]*(n+1)\nfor i in range(1, n+1):\n    g[i] = g[i-1] + 1\n\n# start all discussion\nfor i in range(n):\n    b = bisect.bisect_left(lst, g[i])\n    if b == len(lst):\n        print(0)\n        continue\n    else:\n        print(b)\n        continue\n\n# print(lst)\nans = 0\nfor i in range(n):\n    ans += bisect.bisect_left(lst, g[i])\n    if b == len(lst):\n        ans -= bisect.bisect_left(lst, g[i])\n        break\nprint(ans)"}, "2789": {"problem_id": 2789, "answer": "n=int(input())\na=[]\nfor i in range(n):\n a.append(list(map(int,input().split())))\na.sort()\nprint(max(a[0],a[-1]))"}, "2790": {"problem_id": 2790, "answer": "# cook your dish here\nn,s,t=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\nc=0\nfor i in range(n):\n    if l[i]%s==0:\n        c+=1\n        print(c)\n    elif l[i]%s==1:\n        c-=1\n        print(c)\n    else:\n        c+=1\n        print(c)\n        \n        \n        \n        \n"}, "2791": {"problem_id": 2791, "answer": "n, d = list(map(int, input().split()))\narr = list(map(int, input().split()))\nfor i in range(n):\n    if arr[i] % d == 0:\n        print(i)\n    else:\n        print(d)\n"}, "2792": {"problem_id": 2792, "answer": "# cook your dish here\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, s = map(int, input().split())\n        print(main())\n\ndef __starting_point():\n    main()\n__starting_point()"}, "2793": {"problem_id": 2793, "answer": "# cook your dish here\nfrom collections import defaultdict,deque\nn = int(input())\nedges = list(map(int,input().split()))\nsink = 0\nfor i in edges:\n    if i>0:\n        sink += i\n        edges.remove(i)\n        sink -= 1\nprint(sink)"}, "2794": {"problem_id": 2794, "answer": "def maxPeak(a,d):\n if a==0:\n  return 0\n elif a==1:\n  return 1\n elif d%2==0:\n  return maxPeak(a,d//2)\n else:\n  return maxPeak(a,d//2+1)\n \ndef solve(a,d):\n n=len(a)\n if n%2==0:\n  return maxPeak(a,d)\n else:\n  return maxPeak(a,d//2+1)\n \nfor _ in range(int(input())):\n a,d=list(map(int,input().split()))\n print(solve(a,d))"}, "2795": {"problem_id": 2795, "answer": "# cook your dish here\nfrom collections import Counter\nn,e,p=map(int,input().split())\nc=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n    l.append(list(map(int,input().split())))\nl.sort(key=lambda x:x[0])\nd=0\nfor i in range(n-1):\n    d+=l[i][0]\n    if(d<len(l)):\n        d=len(l)\nprint(d)"}, "2796": {"problem_id": 2796, "answer": "# cook your dish here\nfrom collections import deque\nN = int(input())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\nq = deque()\nfor i in range(N-1):\n    a,b,z = A[i],B[i],Z[i]\n    if z!=0:\n        q.append(a)\n        q.append(b)\n        q.append(z)\n    else:\n        q.append(a)\nprint(len(q))\n"}, "2797": {"problem_id": 2797, "answer": "import math\ndef __starting_point():\n a,b=list(map(int,input().split()))\n if b%2!=0:\n  print(math.pow(a,b))\n else:\n  print(a*b)\n__starting_point()"}, "2798": {"problem_id": 2798, "answer": "def __starting_point():\n n, x, y, z = list(map(int, input().split()))\n cub = []\n for i in range(n):\n  cub.append(x*i)\n for i in range(n):\n  cub.append(y*i)\n ans = 0\n for i in range(n):\n  ans += cub[i]\n print(ans)\n__starting_point()"}, "2799": {"problem_id": 2799, "answer": "# cook your dish here\nfrom sys import stdin, stdout\ninput()\ns = int(input())\nfor i in range(s):\n    x, y, z = list(map(int, input().split()))\n    if z == 1:\n        print(x)\n    elif z == 3:\n        print(y)\n    else:\n        print(x[0] + y[0] + z[1])\n"}, "2800": {"problem_id": 2800, "answer": "def main():\n P, K = list(map(int, input().split()))\n n = int(input())\n l = []\n for i in range(n):\n  l.append(list(map(int, input().split())))\n l.sort(key=lambda x: x[0])\n ans = 0\n for i in range(n):\n  if l[i][0] == 0:\n   ans += 1\n  else:\n   print('Alice can win.')\n   break\n if ans > 0:\n  print('Bob will win.')\n else:\n  print('Alice can win.')\n\ndef __starting_point():\n main()\n__starting_point()"}, "2801": {"problem_id": 2801, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n    s,e = 0,0\n    while(s<n):\n        if(l[s]==0):\n            s+=1\n        else:\n            e+=1\n    print(e)\n"}, "2802": {"problem_id": 2802, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\ndef solve(n, t):\n if n == 0:\n  return False\n elif n == 1:\n  return True\n else:\n  return solve(n-1, t)\n\ndef solve(n, t):\n if n == 0:\n  return False\n elif n == 1:\n  return True\n else:\n  return solve(n-1, t)\n\nprint(solve(3, 7.20))"}, "2803": {"problem_id": 2803, "answer": "def __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if a[0] == 'a':\n        print('a')\n    elif a[0] == 'a':\n        print('a')\n    else:\n        print('?')\n__starting_point()"}, "2804": {"problem_id": 2804, "answer": "# cook your dish here\nn = int(input())\na,b = map(int,input().split())\nfor i in range(n):\n    print(a,b)"}, "2805": {"problem_id": 2805, "answer": "# cook your dish here\ndef main():\n    n = int(input())\n    if n == 0:\n        print(\"0\")\n    elif n % 2 == 0:\n        print(\"1\")\n    else:\n        print(\"2\")\n        return\nmain()\n"}, "2806": {"problem_id": 2806, "answer": "# cook your dish here\nfrom collections import defaultdict\ndef find_lcm(a,b):\n    if a[0]<b[0]:\n        return a[0]\n    else:\n        return b[0]\ndef main():\n    t=int(input())\n    a,b=map(int,input().split())\n    l=[]\n    for i in range(t):\n        a,b=map(int,input().split())\n        l.append(a)\n        l.append(b)\n    print(l[0])\ndef __starting_point():\n    main()\n__starting_point()"}, "2807": {"problem_id": 2807, "answer": "from collections import deque\ndef l():\n return list(map(int, input().split()))\ndef input():\n return input().split()\n \ndef __starting_point():\n t = int(input())\n for _ in range(t):\n  a, b = l()\n  print(int(a) + int(b))\n\n__starting_point()"}, "2808": {"problem_id": 2808, "answer": "# cook your dish here\nn, m, k = map(int, input().split())\narr = list(map(int, input().split()))\nfor i in range(n):\n    l, r = map(int, input().split())\n    arr[l-1] += 1\n    arr[r-1] += 1\nprint(sum(arr))"}, "2809": {"problem_id": 2809, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ndef solve(n, k):\n    mod = 10**9+7\n    l = list(map(int, input().split()))\n    s = input()\n    s = ''.join(sorted(set(s), key=lambda x: x[0]))\n    print(s % mod)\n    return int(s)"}, "2810": {"problem_id": 2810, "answer": "# cook your dish here\ndef count_sequences(lst, n, t):\n    if t == 0:\n        return 1\n    elif t == 1:\n        return lst[0]\n    else:\n        res = 0\n        for i in range(n):\n            if lst[i] == lst[i-1]:\n                res += 1\n            else:\n                res += lst[i]\n        return res\n\ndef __starting_point():\n    # cook your dish here\n    # print(count_sequences(0, 3, 1))\n    # print(count_sequences(0, 1, 2))\n\n__starting_point()"}, "2811": {"problem_id": 2811, "answer": "# cook your dish here\nfrom math import factorial\ndef gcd(a,b):\n    if b==0:\n        return a\n    else:\n        return b%a\ndef main():\n    n,m=map(int,input().split())\n    l=[0]*n\n    for i in range(m):\n        l[i]=l[i-1]\n    ans=0\n    for i in range(n):\n        ans=(gcd(l[i],l[i-1]))%m\n    print(ans)"}, "2812": {"problem_id": 2812, "answer": "for _ in range(int(input())):\n    k=input().split()\n    if len(k)==1:\n        print(\"ab\")\n    else:\n        print(\"z\")\n"}, "2813": {"problem_id": 2813, "answer": "# cook your dish here\ns = 0\nfor i in range(3):\n a = list(map(int,input().split()))\n s += a[0]\n if s % 2 == 1:\n  print(\"haiku\")\n else:\n  print(\"come back next year\")"}, "2814": {"problem_id": 2814, "answer": "# cook your dish here\nfrom collections import Counter\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans += a[i]\n    print(ans)\n__starting_point()"}, "2815": {"problem_id": 2815, "answer": "from math import ceil, log10\nn, e = map(int, input().split())\nl = [0]*(n+1)\nfor i in range(1, 15000000):\n    l.append(ceil(log10(2*i)))\nprint(l[n-1])"}, "2816": {"problem_id": 2816, "answer": "import math\nn,m=map(int,input().split())\nprint(min(m,n))"}, "2817": {"problem_id": 2817, "answer": "# cook your dish here\ntry:\n    t = int(input())\nexcept:\n pass\n"}, "2818": {"problem_id": 2818, "answer": "n=int(input())\na=list(map(int,input().split()))\nprint(len(a))"}, "2819": {"problem_id": 2819, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = str(input())\n    b[i] = str(input())\nans = []\nfor i in range(n):\n    if a[i] == '1':\n        ans.append('Alice')\n    elif a[i] == '2':\n        ans.append('Bob')\n    else:\n        ans.append('Alice')\nprint(' '.join(ans))"}, "2820": {"problem_id": 2820, "answer": "# cook your dish here\ntry:\n    t=int(input())\n    for _ in range(t):\n        a=int(input())\n        b=int(input())\n        print(a+b)\nexcept:\n    pass"}, "2821": {"problem_id": 2821, "answer": "# cook your dish here\ndef __starting_point():\n    import sys\n    input = sys.stdin.readline\n\n    n = int(input())\n    s = list(map(int, input().split()))\n    l = int(input())\n    for i in range(n):\n        a, b = s[i]\n        print(a, b)\n\n__starting_point()"}, "2822": {"problem_id": 2822, "answer": "# cook your dish here\nfrom math import sqrt\n\ndef main():\n    x, y = map(int, input().split())\n    print(sqrt(x))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "2823": {"problem_id": 2823, "answer": "from collections import Counter\nn = int(input())\na = list(map(int, input().split()))\nc = Counter(a)\ng = list(map(int, input().split()))\nt = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    ans += c[g[i]] * c[g[i+1]]\nprint(ans)"}, "2824": {"problem_id": 2824, "answer": "# cook your dish here\nm = int(input())\nl = []\nfor i in range(m):\n    a = input().split()\n    a[0] = int(a[0])\n    l.append(a[1])\nprint(' '.join(l))"}, "2825": {"problem_id": 2825, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn = int(stdin.readline())\na = list(map(int,stdin.readline().split()))\nb = list(map(int,stdin.readline().split()))\nc = list(map(int,stdin.readline().split()))\nd = []\nfor i in range(n):\n    d.append(a[i])\nd.sort(key=lambda x:x[0])\nc.sort(key=lambda x:x[0])\nc.extend(d)\nc.extend(d)\nc.sort(key=lambda x:x[0])\nc.extend(d)\nc.sort(key=lambda x:x[0])\nc.extend(d)\nc.sort(key=lambda x:x[0])\nc.extend(d)\nprint(c[0])"}, "2826": {"problem_id": 2826, "answer": "# cook your dish here\ndef count_points(l, d):\n    x, y = 0, 0\n    for i in range(len(l)):\n        if l[i] == '1':\n            x += d\n        elif l[i] == '0':\n            y += d\n        else:\n            x //= d\n    return x, y\n\n\ndef __starting_point():\n    q, n, d = list(map(int, input().split()))\n    for _ in range(q):\n        f, g = list(map(int, input().split()))\n        ellipse = []\n        for i in range(len(f)):\n            x, y = f[i]\n            ellipse.append((x, y))\n        ellipse.sort()\n        print(count_points(leap, d))\n\n__starting_point()"}, "2827": {"problem_id": 2827, "answer": "# cook your dish here\nn,m = list(map(int,input().split()))\nl = list(map(int,input().split()))\ncnt = 0\nfor i in range(m):\n    if l[i]!=l[i-1]:\n        cnt+=1\n        break\nprint(cnt)\n"}, "2828": {"problem_id": 2828, "answer": "def encrypt(s):\n    l = len(s)\n    for i in range(l):\n        if s[i] == s[i-1]:\n            return 'DA'\n    return ''.join(sorted(encode(s[:i]), key=lambda x: x[0]))\n\ndef decrypt(s):\n    l = len(s)\n    for i in range(l):\n        if s[i] == s[i-1]:\n            return 'E'\n    return 'E'\n\nn = int(input())\ns = input()\ns.append(input()[0])\ns.append(input()[1])\ns.append(input()[2])\ns.append(input()[3])\ns.append(input()[4])\ns.append(input()[5])\ns.append(input()[6])\ns.append(input()[7])\ns.append(input()[8])\ns.append(input()[9])\ns.append(input()[10])\ns.append(input()[11])\ns.append(input()[12])\ns.append(input()[13])\ns.append(input()[14])\ns.append(input()[15])\ns.append(input()[16])\ns.append(input()[17])\ns.append(input()[18])\ns.append(input()[19])\ns.append(input()[20])\ns.append(input()[21])\ns.append(input()[22])\ns.append(input()[23])\ns.append(input()[24])\ns.append(input()[25])\ns.append(input()[26])\ns.append(input()[27])\ns.append(input()[28])\ns.append(input()[29])\ns.append(input()[30])\ns.append(input()[31])\ns.append(input()[32])\ns.append(input()[33])\ns.append(input()[34])\ns.append(input()[35])\ns.append(input()[36])\ns.append(input()[37])\ns.append(input()[38])\ns.append(input()[39])\ns.append(input()[40])\ns.append(input()[41])\ns.append(input()[42])\ns.append(input()[43])\ns.append(input()[44])\ns.append(input()[45])\ns.append(input()[45])\ns.append(input()[46])\ns.append(input()[47])\ns.append(input()[48])\ns.append(input()[49])\ns.append(input()[50])\ns.append(input()[51])\ns.append(input()[52])\ns.append(input()[53])\ns.append(input()[54])\ns.append(input()[55])\ns.append(input()[56])\ns.append(input()[57])\ns.append(input()[58])\ns.append(input()[59])\ns.append(input()[60])\ns.append(input()[61])\ns.append(input()[62])\ns.append(input()[63])\ns.append(input()[64])\ns.append(input()[64])\ns.append(input()[65])\ns.append(input()[66])\ns.append(input()[67])\ns.append(input()[68])\ns.append(input()[69])\ns.append(input()[69a])\ns.append(input()[69b])\ns.append(input()[69c])\ns.append(input()[69d])\ns.append(input()[69e])\ns.append(input()[69f])\ns.append(input()[69g])\ns.append(input()[69h])\ns.append(input()[69i])\ns.append(input()[69j])\ns.append(input()[69k])\ns.append(input"}, "2829": {"problem_id": 2829, "answer": "# cook your dish here\nfor _ in range(int(input())):\n s=input()\n print(ord(s[0]))"}, "2830": {"problem_id": 2830, "answer": "# cook your dish here\ndef moves(l,r,c,d):\n if l[0]<r[0] and l[1]<c[0]:\n  return moves(l,r,c,d)\n else:\n  return -1\n\ndef __starting_point():\n n,m = list(map(int,input().split()))\n grid = [[int(x) for x in input().split()] for _ in range(m)]\n for i in range(n):\n  grid[i][0] = 0\n  grid[i][1] = 0\n  moves(i,0,0,0)\n print(m)\n\n__starting_point()"}, "2831": {"problem_id": 2831, "answer": "for _ in range(int(input())):\n x,v = map(int,input().split())\n l = list(map(int,input().split()))\n l.sort()\n print(abs(x-l[0]))"}, "2832": {"problem_id": 2832, "answer": "def minSum(lst, r, p):\n if 0 <= r < lst[0] and 0 <= p < r:\n  return sum(map(int, lst[r] + lst[p]))\n else:\n  return min(sum(map(int, lst[r] + lst[p])))\n\ndef __starting_point():\n    d = int(input())\n    lst = list(map(int, input().split()))\n    r = int(input())\n    p = int(input())\n    print(minSum(lst, r, p))\n__starting_point()"}, "2833": {"problem_id": 2833, "answer": "import math\nR,C=int(input())\nfor i in range(R):\n a,b=list(map(int,input().split()))\n if a==0 or b==0:\n  print(\"0\")\n elif a==1 or b==1:\n  print(\"1\")\n else:\n  print(\"2\")\n"}, "2834": {"problem_id": 2834, "answer": "# cook your dish here\nn=int(input())\nfor i in range(1,n+1):\n    print(4,7)\n    print(n-i-1,i)"}, "2835": {"problem_id": 2835, "answer": "for _ in range(int(input())):\n s = input()\n t = input()\n if len(s) == 0:\n  print(0)\n else:\n  print(len(s))\n"}, "2836": {"problem_id": 2836, "answer": "n=int(input())\nfor i in range(n):\n    a,b=list(map(int,input().split()))\n    if(a%2==0):\n        print(a)\n    else:\n        print(b)\n"}, "2837": {"problem_id": 2837, "answer": "n=int(input())\nr=list(map(int,input().split()))\nfor i in range(n):\n    r.append(int(input()))\nprint(\"%.6f\" %r[0]*r[1:])"}, "2838": {"problem_id": 2838, "answer": "from collections import Counter\ndef __starting_point():\n    input()\n    print(Counter(int(input())))\n__starting_point()"}, "2839": {"problem_id": 2839, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort_left as br, insort_right as br, insort_left_right as br, vertices_left as vl, vertices_right as vr\r\nfrom heapq import *\r\nfrom collections import defaultdict as dd, deque, Counter, OrderedDict, deque \r\nfrom itertools import combinations as comb,permutations as perm\r\nfrom operator import itemgetter_xpuediv,itemgetter_add,itemgetter_subtrivial,isend,isend_left as isend_left,isend_right as isend_right\r\nfrom functools import reduce,cmp_to_key\r\nfrom math import ceil,sqrt,gcd\r\nINF = float('inf')\r\nmod = 10 ** 9 + 7\r\n\r\ndef main():\r\n    n, m = list(map(int, input().split()))\r\n    graph = [[] for _ in range(n)]\r\n    for _ in range(m):\r\n        u, v = list(map(int, input().split()))\r\n        graph[u].append(v)\r\n        graph[v].append(u)\r\n        \r\n    def dfs(i):\r\n        if i == len(graph[i]):\r\n            return 0\r\n        else:\r\n            return 1\r\n        \r\n    def dfs_rec(i):\r\n        if i == len(graph[i]):\r\n            return 0\r\n        else:\r\n            return 1\r\n        \r\n    def dfs_recover(i):\r\n        if i == len(graph[i]):\r\n            return 0\r\n        else:\r\n            return 1\r\n        \r\n    def dfs_compare(i, j):\r\n        if graph[i][j] == -1:\r\n            return 0\r\n        elif graph[i][j] == -1:\r\n            return 1\r\n        else:\r\n            return -1\r\n        \r\n    def dfs_find(i, j):\r\n        if graph[i][j] == -1:\r\n            return 0\r\n        elif graph[i][j] == -1:\r\n            return 1\r\n        else:\r\n            return -1\r\n        \r\n    def dfs_union(i, j, k):\r\n        if graph[i][j] == -1:\r\n            return 0\r\n        elif graph[i][j] == -1:\r\n            return 1\r\n        else:\r\n            return -1\r\n        \r\n    def dfs_union_left(i, j, k):\r\n        if graph[i][j] == -1:\r\n            return 0\r\n        elif graph[i][j] == -1:\r\n        "}, "2840": {"problem_id": 2840, "answer": "n = int(input())\nl = list(map(int,input().split()))\ns = sorted(l)\nd = dict()\nfor i in range(n):\n    d[i] = 1\n    if s[i] == 'Q':\n        d[i] += 1\n    elif s[i] == 'A':\n        d[i] += 1\n    elif s[i] == 'H':\n        d[i] += 1\n    elif s[i] == 'D':\n        d[i] += 1\n    elif s[i] == 'C':\n        d[i] += 1\n    elif s[i] == 'A':\n        d[i] += 1\n    elif s[i] == 'H':\n        d[i] += 1\n    elif s[i] == 'D':\n        d[i] += 1\n    elif s[i] == 'C':\n        d[i] += 1\n    elif s[i] == 'A':\n        d[i] += 1\n    elif s[i] == 'H':\n        d[i] += 1\n    elif s[i] == 'D':\n        d[i] += 1\n    elif s[i] == 'C':\n        d[i] += 1\n    elif s[i] == 'A':\n        d[i] += 1\n    elif s[i] == 'H':\n        d[i] += 1\n    elif s[i] == 'D':\n        d[i] += 1\n    elif s[i] == 'C':\n        d[i] += 1\n    elif s[i] == 'A':\n        d[i] += 1\n    elif s[i] == 'H':\n        d[i] += 1\n    elif s[i] == 'D':\n        d[i] += 1\n    elif s[i] == 'C':\n        d[i] += 1\n    elif s[i] == 'A':\n        d[i] += 1\n    elif s[i] == 'H':\n        d[i] += 1\n    elif s[i] == 'D':\n        d[i] += 1\n    elif s[i] == 'C':\n        d[i] += 1\n    elif s[i] == 'A':\n        d[i] += 1\n    elif s[i] == 'H':\n        d[i] += 1\n    elif s[i] == 'D':\n        d[i] += 1\n    elif s[i] == 'C':\n        d[i] += 1\n    elif s[i] == 'A':\n        d[i] += 1\n    elif s[i] == 'H':\n        d[i] += 1\n    elif s[i] == 'D':\n        d[i] += 1\n    elif s[i] == 'C':\n        d[i] += 1\n    elif s[i] == 'A':\n        d[i] += 1\n    elif s[i] == 'H':\n        d"}, "2841": {"problem_id": 2841, "answer": "# cook your dish here\nn = int(input())\ns = input()\nprint(n)\n"}, "2842": {"problem_id": 2842, "answer": "# cook your dish here\ndef solve(grid, n, k):\n    if grid[k][n] == 'X':\n        return k\n    elif grid[k][n] == 'O':\n        return k\n    elif grid[k][n] == 'X':\n        return k-1\n    else:\n        print(solve(grid, n, k))\n\ndef __starting_point():\n    solve(0, 0, 0)\n__starting_point()"}, "2843": {"problem_id": 2843, "answer": "n=int(input())\nfor i in range(n):\n s=list(map(int,input().split()))\n print(len(s))"}, "2844": {"problem_id": 2844, "answer": "# cook your dish here\nimport bisect\nr,c=list(map(int,input().split()))\nl=[]\nfor i in range(r):\n l.append(list(map(int,input().split())))\nl.sort(key=lambda x:x[0])\nprint(bisect.bisect_left(l,r))\n"}, "2845": {"problem_id": 2845, "answer": "import math\nr,k=list(map(int,input().split()))\nans=0\nfor i in range(k):\n ans+=math.ceil(r*(r-1))\n print(ans)\n"}, "2846": {"problem_id": 2846, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\nfor _ in range(n):\n    c = int(input())\n    print(c)"}, "2847": {"problem_id": 2847, "answer": "# cook your dish here\ndef lst(l,s):\n if s==0:\n  return 1\n else:\n  lst=list(l)\n  s=s//2\n  for i in range(len(lst)):\n   if lst[i]==s:\n    lst[i]=lst[i]//2\n   else:\n    lst[i]=lst[i]%2\n  return lst[len(lst)-1]\n\nM,S=int(input()),int(input())\nlst=[]\nfor _ in range(M):\n lst.append(list(map(int,input().split())))\nlst.sort(reverse=True)\nprint(lst[-1])"}, "2848": {"problem_id": 2848, "answer": "# cook your dish here\nfrom math import *\ndef lcm(a,b):\n if b<a:\n  return 1\n elif b==a:\n  return (b*a)//a\n else:\n  return (b*a)//b\n \ndef modN(x):\n if x%2==0:\n  return int(x/2)\n else:\n  return 1\n \ndef modA(x):\n if x%2==0:\n  return 1\n else:\n  return (x*x)//2\n \ndef modB(x):\n if x%2==0:\n  return 1\n else:\n  return (x*x)//2\n \ndef main():\n n,r=map(int,input().split())\n a=list(map(int,input().split()))\n b=list(map(int,input().split()))\n print(lcm(modA(a),modB(b)))\n \ndef __starting_point():\n main()\n__starting_point()"}, "2849": {"problem_id": 2849, "answer": "import math\r\n\r\ndef power(n, k):\r\n    return math.factorial(n) // math.factorial(k)\r\n\r\ndef isPowerOfTwo(n):\r\n    return math.sqrt(n) == math.sqrt(n)\r\n\r\ndef main():\r\n    n = int(input())\r\n    l = list(map(int, input().split()))\r\n    print(isPowerOfTwo(n))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r"}, "2850": {"problem_id": 2850, "answer": "from sys import stdin,stdout\r\nn,k=list(map(int,stdin.readline().split()))\r\nl=list(map(int,stdin.readline().split()))\r\nl.sort()\r\nmax=0\r\nfor i in range(k):\r\n    if l[i]%k==0:\r\n        max=max+l[i]//k\r\n    else:\r\n        max=max+l[i]//k+1\r\nprint(max)"}, "2851": {"problem_id": 2851, "answer": "n=int(input())\nfor i in range(n):\n    a,b=map(int,input().split())\n    print(a,b)"}, "2852": {"problem_id": 2852, "answer": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(n):\n if a[i]==0:\n  s+=1\n else:\n  print(s)\n  continue\n print(s)"}, "2853": {"problem_id": 2853, "answer": "# cook your dish here\nfrom collections import deque\ndef main():\n    n,m=map(int,input().split())\n    l=list(map(int,input().split()))\n    for i in range(m):\n        a,b=map(int,input().split())\n        print('{}'.format(a,b))\n        if(a!=b):\n            print('Connected')\n        else:\n            print('Disconnected')\n            \ndef __starting_point():\n    main()\n__starting_point()"}, "2854": {"problem_id": 2854, "answer": "from sys import stdin,stdout\r\nn,m=list(map(int,stdin.readline().split()))\r\na=list(map(int,stdin.readline().split()))\r\nb=list(map(int,stdin.readline().split()))\r\nc=list(map(int,stdin.readline().split()))\r\nfor i in range(m):\r\n    x,y=list(map(int,stdin.readline().split()))\r\n    if a[i]!=-1:\r\n        print(x,y)\r\n        continue\r\n    else:\r\n        print(c[i]*(c[i]-1),c[i]-1)\r\n"}, "2855": {"problem_id": 2855, "answer": "# cook your dish here\nn,m = map(int,input().split())\nl = list(map(int,input().split()))\n\n# Find paths between two sets of sets\n# (i.e. a set) of paths between two sets of paths\n# (i.e. b set) of paths\n# (i.e. c set) of paths\n# (i.e. d set) of paths\n\n# print(l)\n# print(l[0])\n\nfor i in range(m):\n    k,l = map(int,input().split())\n    if l[0] == 0:\n        print(k)\n    else:\n        print(l[1])"}, "2856": {"problem_id": 2856, "answer": "from sys import stdin,stdout\nn = int(stdin.readline())\ns = list(map(int, stdin.readline().split()))\nl = []\nfor i in range(n):\n    l.append(s[i])\nl.sort(reverse=True)\nprint('\\n'.join(l))"}, "2857": {"problem_id": 2857, "answer": "n=int(input())\nfor i in range(n):\n x,y=map(int,input().split())\n if x==y:\n  print(0)\n else:\n  print(1)"}, "2858": {"problem_id": 2858, "answer": "from collections import Counter\nn = int(input())\nc = Counter(map(int, input().split()))\nprint(max(c.values()))"}, "2859": {"problem_id": 2859, "answer": "# cook your dish here\nimport math\ndef __starting_point() :\n    x,y = map(int,input().split())\n    # a = list(map(int,input().split()))\n    a = [0]*3\n    for i in range(3):\n        a[i] = math.ceil(x/i)\n    # b = list(map(int,input().split()))\n    b = [0]*3\n    for i in range(3):\n        b[i] = math.ceil(y/i)\n    # c = list(map(int,input().split()))\n    c = [0]*3\n    for i in range(3):\n        c[i] = math.ceil(x/i)\n    print(sum(c))"}, "2860": {"problem_id": 2860, "answer": "n,d = map(int,input().split())\r\nl = list(map(int,input().split()))\r\nprint(n)"}, "2861": {"problem_id": 2861, "answer": "R=int(input())\nfor i in range(R):\n    d=list(map(str,input().split()))\n    d.sort(key=lambda x:x[0])\n    print(d[0][1]*d[0][2])"}, "2862": {"problem_id": 2862, "answer": "from collections import deque\nn, m = map(int, input().split())\ns = list(map(int, input().split()))\nfor _ in range(m):\n    a, b = map(int, input().split())\n    s.append(a)\n    s.append(b)\nprint(' '.join(map(str, s)))"}, "2863": {"problem_id": 2863, "answer": "from collections import deque\ndef lis(l):\n    return [x for x in l]\n\ndef lis_sorted(l):\n    return sorted(l, key=lis)\n\ndef lis_sorted_sorted(l):\n    return sorted(l, key=lis_sorted)\n\ndef lis_sorted_sorted_sorted(l):\n    return sorted(l, key=lis_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_s"}, "2864": {"problem_id": 2864, "answer": "from collections import defaultdict\r\nn = int(input())\r\ncards = list(map(int, input().split()))\r\ndef l():\r\n    return list(map(int, input().split()))\r\nd = defaultdict(list)\r\nfor i in range(n):\r\n    d[l()].append(i)\r\nprint('\\n'.join(map(str, d[l()])))"}, "2865": {"problem_id": 2865, "answer": "# cook your dish here\nfor _ in range(int(input())):\n a,b=map(int,input().split())\n s=0\n if a==0:\n  print(\"1\")\n elif b==0:\n  print(\"2\")\n else:\n  print(\"3\")\n \n \n"}, "2866": {"problem_id": 2866, "answer": "from math import sqrt\r\n\r\ndef func(n,m):\r\n    if m>1:\r\n        return int(sqrt(n))\r\n    else:\r\n        return m\r\n\r\nn=input()\r\nl=list(map(int,input().split()))\r\nl.sort()\r\nprint(func(n,l))\r\n"}, "2867": {"problem_id": 2867, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n):\n    x=int(input())\n    ans+=l[x]\nprint(ans)"}, "2868": {"problem_id": 2868, "answer": "# cook your dish here\ndef flap(n):\n if n==1:\n  return 1\n elif n==2:\n  return 2\n else:\n  return flap(n-1)\n\nprint(flap(10))\n"}, "2869": {"problem_id": 2869, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n    if str(n) == \"I\":\n        print(int(str(n).replace(\"I\", \"I\")) + 1)\n    else:\n        print(int(str(n).replace(\"X\", \"X\")) + 1)\n"}, "2870": {"problem_id": 2870, "answer": "# cook your dish here\ntry:\n    n,m=map(int,input().split())\n    a=[]\n    for i in range(n):\n        a.append(list(map(int,input().split())))\n    a.sort(reverse=True)\n    b=[]\n    for i in range(m):\n        b.append(a[i][1])\n    b.sort(reverse=True)\n    ans=0\n    for i in range(n):\n        ans+=a[i][1]\n        if(ans>b[i][1]):\n            ans=b[i][1]\n    print(ans)\nexcept:\n    pass"}, "2871": {"problem_id": 2871, "answer": "# cook your dish here\nn,k=map(int,input().split())\nl=list(map(int,input().split()))\nfor i in range(k):\n    l.append(list(map(int,input().split())))\nprint(min(l))"}, "2872": {"problem_id": 2872, "answer": "for i in range(int(input())):\n d,a,b,c=map(int,input().split())\n if d%4==0:\n  print(a,b,c)\n else:\n  print(a,b,c)"}, "2873": {"problem_id": 2873, "answer": "def __starting_point():\n s = input()\n n = len(s)\n print(n)\n\n__starting_point()"}, "2874": {"problem_id": 2874, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n, m = map(int, input().split())\n l = list(map(int, input().split()))\n l.sort()\n count = 0\n for i in range(m):\n  if l[i] == l[i-1]:\n   count += 1\n print(count)"}, "2875": {"problem_id": 2875, "answer": "from collections import deque\nn = int(input())\narr = list(map(int, input().split()))\nl = len(arr)\nfor i in range(l):\n    if arr[i] not in l:\n        print(\"impossible\")\n    else:\n        print(\"found\")\n"}, "2876": {"problem_id": 2876, "answer": "n=int(input())\nx,y=map(int,input().split())\nfor i in range(n):\n x,y=map(int,input().split())\n print(x-y)"}, "2877": {"problem_id": 2877, "answer": "from collections import Counter\ns = input()\nn = len(s)\nfor i in range(n):\n    c = Counter(s.count(i))\n    if c[0] =='':\n        c[0] =''\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '*'\n    elif c[0] == '*':\n        c[0] = '"}, "2878": {"problem_id": 2878, "answer": "from sys import stdin,stdout\nn=int(stdin.readline())\nl=list(map(int,stdin.readline().split()))\nfor i in range(n):\n    l.append(chr(65+i))\nprint(len(l))"}, "2879": {"problem_id": 2879, "answer": "import sys\ndef gcd(a, b): \n    if b == 0: \n        return a \n    elif b == 1: \n        return gcd(b, a % b) \n    else: \n        return gcd(b, a % b) \nsys.setrecursionlimit(1000000)\n# n = int(input())\n# a = list(map(int, input().split()))\n# b = list(map(int, input().split()))\n# x = list(map(int, input().split()))\n# print(gcd(a, b))\n# print(f\"{x}\")\n# for i in range(1, len(a)):\n#     print(f\"{a[i]}, {x}\")\n#     if x == \"X\":\n#         print(gcd(a, b))\n#     else:\n#         print(\"No solution\")\n"}, "2880": {"problem_id": 2880, "answer": "R, C = list(map(int, input().split()))\nfor i in range(R):\n    d = list(map(int, input().split()))\n    a = d[0]\n    b = d[1]\n    c = d[2]\n    if a == b:\n        print(0)\n    elif a == c:\n        print(R-1)\n    else:\n        print(R-1)\n"}, "2881": {"problem_id": 2881, "answer": "def main():\n l = []\n for _ in range(int(input())):\n  x,y = map(int,input().split())\n  l.append(x)\n print('yes' if l[len(l) - 1] == '0' else 'no')\n"}, "2882": {"problem_id": 2882, "answer": "class Solution:\n     def generateParenthesis(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: List[str]\n         \"\"\"\n         stack = []\n         for i in range(1, n + 1):\n             if i % 2 == 0:\n                 stack.append(i)\n             else:\n                 stack.append(i)\n         return stack"}, "2883": {"problem_id": 2883, "answer": "class Solution:\n     def merge(self, intervals):\n         \"\"\"\n         :type intervals: List[List[int]]\n         :rtype: List[List[int]]\n         \"\"\"\n         if len(intervals) == 0:\n             return []\n         \n         left, right = 0, len(intervals) - 1\n         while left < right:\n             mid = left + (right - left) // 2\n             if self.merge(intervals[mid], intervals[mid]):\n                 right = mid\n             else:\n                 left = mid + 1\n         return left"}, "2884": {"problem_id": 2884, "answer": "class Solution:\n    def combinationSum2(self, candidates, target):\n        if target == 0:\n            return []\n        \n        candidates.append(target)\n        \n        for i in range(1, len(candidates)):\n            if candidates[i] == target:\n                continue\n            elif candidates[i] not in candidates:\n                candidates[i] = []\n                candidates[i].append(candidates[i-1] + 1)\n            else:\n                candidates[i] = candidates[i-1] + 1\n                candidates[i].append(candidates[i-1] + 1)\n                \n        return candidates"}, "2885": {"problem_id": 2885, "answer": "class Solution:\n     def insert(self, intervals, newInterval):\n         \"\"\"\n         :type intervals: List[List[int]]\n         :type newInterval: List[int]\n         :rtype: List[List[int]]\n         \"\"\"\n         if len(newInterval) == 0:\n             return newInterval\n         elif len(newInterval) == 1:\n             return [bisect.bisect_left(intervals, newInterval) for i in range(len(newInterval))]\n         else:\n             return [bisect.bisect_right(intervals, newInterval) for i in range(len(newInterval))]"}, "2886": {"problem_id": 2886, "answer": "def is_balanced(s):\n    nonlocal ans, n, d, a, b\n    ans = 0\n    for i in range(len(s)):\n        if s[i] > s[i+1]:\n            continue\n        elif s[i] < s[i+1]:\n            d += 1\n        else:\n            a += 1\n            b += 1\n    return ans <= n\n\ndef __starting_point():\n    s = input()\n    ans = 0\n    n = int(s[0])\n    for i in range(1, n):\n        if is_balanced(s[i]):\n            ans += 1\n        else:\n            ans += 2\n    print(ans)\n__starting_point()"}, "2887": {"problem_id": 2887, "answer": "n = int(input())\nl = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    d[i] = 0\nfor i in range(n):\n    v = input().split()\n    v = int(v[0])\n    l.append(v)\n    d[v] += 1\nprint(' '.join(map(str, l)))"}, "2888": {"problem_id": 2888, "answer": "# cook your dish here\nn, = list(map(int,input().split()))\ns = input()\nx = 0\nfor i in range(n):\n x += int(s[i])\nprint(x)\n"}, "2889": {"problem_id": 2889, "answer": "# cook your dish here\nimport math\ndef lcm(a,b):\n return (a*b)//math.gcd(a,b)\nn,m=list(map(int,input().split()))\nl=[]\nfor i in range(m):\n l.append(list(map(int,input().split())))\nl.sort(key=lambda x:x[1])\nprint(l[0])\n"}, "2890": {"problem_id": 2890, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\ns = list(map(int,input().split()))\nr = list(map(int,input().split()))\nd = {}\nfor i in range(n):\n    d[l[i]] = min(d.get(l[i],0),d.get(r[i],0))\nprint(d[l[i]][0])"}, "2891": {"problem_id": 2891, "answer": "from math import factorial as f\nn = int(input())\nc = list(map(int, input().split()))\nc.sort(key=lambda x: x[0])\nc.extend([c[0] for _ in range(365)])\nc.sort(key=lambda x: x[0])\nans = 0\nfor i in range(n):\n    ans += factorial(c[i])\nprint('\\n'.join(map(str, c[i])))"}, "2892": {"problem_id": 2892, "answer": "# cook your dish here\ndef mxDot(n):\n    return [0]*n\r\n\r\ndef mxReverse(n):\r\n    return [n]\r\n\r\ndef mxCompress(n, m, k):\r\n    if k == 0:\r\n        return mxDot(n)\r\n    elif k == 1:\r\n        return mxReverse(n)\r\n    else:\r\n        return mxCompress(n, m, k-1)\r\n\r\ndef __starting_point():\r\n    n = int(input())\r\n    print(mxDot(n))\r\n__starting_point()"}, "2893": {"problem_id": 2893, "answer": "from sys import stdin,stdout\nfrom math import ceil\ninput = stdin.readline\ns = \"0123456789\"\nfor _ in range(int(s)):\n a = int(s)\n swap = 0\n for i in range(a[0]):\n  if i not in '0123456789':\n   swap += 1\n  else:\n   swap += 1\n print(ceil(swap))"}, "2894": {"problem_id": 2894, "answer": "# cook your dish here\nfrom math import ceil\ntry:\n    a, b, c = list(map(int, input().split()))\n    if ceil(a/b) < c:\n        print(a)\n    else:\n        print(b)\nexcept:\n    pass"}, "2895": {"problem_id": 2895, "answer": "x,y,x_s,y_f,x_g,y_g = map(int,input().split())\nl = list(map(int,input().split()))\nl.sort()\ns = 0\nfor i in range(len(l)):\n    if l[i]<x:\n        s += x_s\n    elif l[i]>x:\n        s += x_g\n    else:\n        s += x_f\nprint(s)"}, "2896": {"problem_id": 2896, "answer": "import math\ndef __starting_point():\n t = int(input())\n t.sort()\n print(t)\n\n__starting_point()"}, "2897": {"problem_id": 2897, "answer": "# cook your dish here\nfrom math import gcd\ndef gcd(a, b):\n if b == 0:\n  return a\n else:\n  return gcd(b, a % b)\n\n\nn, m = map(int, input().split())\nl = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\n# a = 10011\n# b = 10100\n# c = 10110\n# d = 10100\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n# print(l[0] - l[1])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n# print(l[0] - l[1])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n# print(l[0] - l[1])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n# print(l[0] - l[1])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n# print(l[0] - l[1])\n# print(l[1] - l[2])\n\n# print(l[0] - l[1])\n# print(l[1] - l["}, "2898": {"problem_id": 2898, "answer": "n = int(input())\r\nl = list(map(int, input().split()))\r\nl.sort()\r\nc = 0\r\nfor i in range(n):\r\n    if l[i] > c:\r\n        c += 1\r\n    else:\r\n        c = l[i]\r\nprint(c)"}, "2899": {"problem_id": 2899, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(list(map(int,input().split())))\nl.sort(key=lambda x:x[0])\nl.sort(key=lambda x:x[0])\nprint('\\n'.join(l))"}, "2900": {"problem_id": 2900, "answer": "# cook your dish here\ns = input()\nfor i in range(0,len(s)):\n    if s[i] == \"A\":\n        print(0)\n    else:\n        print(2)\n"}, "2901": {"problem_id": 2901, "answer": "from collections import defaultdict\ndef create_languages(nodes, lang):\n    lang['fr'] = 1\n    lang['en'] = 1\n    lang['en-us'] = 1\n    lang['fr-am'] = 1\n    lang['en-la'] = 1\n    lang['en-la-at'] = 1\n    lang['en-la-at-eu'] = 1\n    lang['en-la-at-leet'] = 1\n    lang['en-la-at-leet-eu'] = 1\n    lang['en-la-at-leet-eu'] = 1\n    lang['en-la-at-leet-at'] = 1\n    lang['fr-am-at'] = 1\n    lang['fr-am-at-eu'] = 1\n    lang['fr-am-at-leet'] = 1\n    lang['fr-am-at-eu-at'] = 1\n    lang['fr-am-at-leet-eu-at'] = 1\n    lang['en-us-at'] = 1\n    lang['en-us-at-eu'] = 1\n    lang['en-us-at-leet'] = 1\n    lang['en-us-at-eu-at'] = 1\n    lang['en-tou'] = 1\n    lang['tou'] = 1\n    lang['tou-eu'] = 1\n    lang['tou-eu-at'] = 1\n    lang['tou-eu-at-eu'] = 1\n    lang['en-tou'] = 1\n    lang['en-tou-eu-at'] = 1\n    lang['en-tou-eu-at-eu'] = 1\n    lang['en-tou-eu-at-eu'] = 1\n    lang['en-tou-eu-eu-at'] = 1\n    lang['en-tou-eu-eu-at-eu'] = 1\n    lang['en-tou-eu-eu-at-eu'] = 1\n    lang['en-tou-eu-eu-at-eu'] = 1\n    lang['en-tou-eu-eu-at-eu-eu'] = 1\n    lang['en-tou-eu-eu-at-eu-eu'] = 1\n    lang['en-tou-eu-eu-at-eu-eu-eu'] = 1\n    lang['en-tou-eu-eu-at-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu-eu"}, "2902": {"problem_id": 2902, "answer": "import sys\n\n#sys.setrecursionlimit(10 ** 9)\n#sys.setrecursionlimit(10 ** 8)\n#sys.stdin=open(\"data.txt\")\n#sys.stdout=open(\"data.txt\")\n\n#n,m=map(int,input().split())\n#l=list(map(int,input().split()))\n#l.sort(reverse=True)\n#l.append(0)\n#for i in range(n):\n#     print(l[i])\n#     if l[i]%2==0:\n#             print(l[i],end=' ')\n#     else:\n#             print(l[i],end=' ')\n\n#print(l)\n#print(l[0])\n\n#n,m=map(int,input().split())\n#l=list(map(int,input().split()))\n#l.sort(reverse=True)\n#l.append(0)\n#for i in range(1,n+1):\n#     print(l[i],end=' ')\n#     if l[i]%2==0:\n#             print(l[i],end=' ')\n#     else:\n#             print(l[i],end=' ')\n\n#print(l[0])\n#print(l[-1])\n\n#n,m=map(int,input().split())\n#l=list(map(int,input().split()))\n#l.sort(reverse=True)\n#l.append(0)\n#for i in range(1,n+1):\n#     print(l[i],end=' ')\n#     if l[i]%2==0:\n#             print(l[i],end=' ')\n#     else:\n#             print(l[i],end=' ')\n\n#print(l[0])\n#print(l[-1])\n\n#n,m=map(int,input().split())\n#l=list(map(int,input().split()))\n#l.sort(reverse=True)\n#l.append(0)\n#for i in range(1,n+1):\n#     print(l[i],end=' ')\n#     if l[i]%2==0:\n#             print(l[i],end=' ')\n#     else:\n#             print(l[i],end=' ')\n\n#print(l[0])\n#print(l[-1])\n\n#n,m=map(int,input().split())\n#l=list(map(int,input().split()))\n#l.sort(reverse=True)\n#l.append(0)\n#for i in range(1,n+1):\n#     print(l[i],end=' ')\n#     if l[i]%2==0:\n#             print(l[i],end=' ')\n#     else:\n#             print(l[i],end=' ')\n\n#print(l[0])\n#print(l[-1])\n\n#n,m=map(int,input().split())\n#l=list(map(int,input().split()))\n#l.sort(reverse=True)\n#l.append(0)\n#for i in range(1,n+1):\n#     print(l[i],end=' ')\n#     if l[i]%2==0:\n#             print(l[i],end=' ')\n#     else:\n#             print(l[i],"}, "2903": {"problem_id": 2903, "answer": "from sys import stdin,stdout\ndef f(s):\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('?','')\n s=s.replace('+','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('-','')\n s=s.replace('?','')\n s=s.replace('?','')\n s=s.replace('+',"}, "2904": {"problem_id": 2904, "answer": "# cook your dish here\nfrom collections import deque\nfor _ in range(int(input())):\n    r = list(map(int,input().split()))\n    print(r[r.index(max(r)):])"}, "2905": {"problem_id": 2905, "answer": "# cook your dish here\nfrom sys import stdin,stdout\ndef lint():\n return int(stdin.readline())\ndef sint():\n return int(stdin.readline())\ndef sint_f():\n return float(stdin.readline())\ndef sint_f_f():\n return float(stdin.readline())\ndef __starting_point():\n s=set()\n n=int(stdin.readline())\n print(lint())\n__starting_point()"}, "2906": {"problem_id": 2906, "answer": "from math import ceil\ntry:\n    n, m = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    elif m == 1:\n        print(ceil(n/2))\nexcept:\n    pass\n"}, "2907": {"problem_id": 2907, "answer": "for _ in range(int(input())):\n n=int(input())\n if n%2==0:\n  print(\"Boris\")\n else:\n  print(\"Colleague\")"}, "2908": {"problem_id": 2908, "answer": "n,s=list(map(int,input().split()))\r\narr=list(map(int,input().split()))\r\nfor i in range(n):\r\n    if arr[i]==s:\r\n        print(\"YES\")\r\n    else:\r\n        print(\"NO\")\r\n"}, "2909": {"problem_id": 2909, "answer": "n=int(input())\nfor i in range(n):\n a=int(input())\n print(a)"}, "2910": {"problem_id": 2910, "answer": "import math\nn = int(input())\nfor i in range(n):\n    print(math.gcd(int(input()),i))"}, "2911": {"problem_id": 2911, "answer": "def solve(n, t):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return t**2\n    else:\n        ans = 0\n        for i in range(n):\n            ans += solve(n-1, t-1)\n        return ans\n\ndef __starting_point():\n    solve(1, 1)\n__starting_point()"}, "2912": {"problem_id": 2912, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\ns=input()\na,b=0,0\nfor i in range(n):\n    if l[i]==s[i]:\n        a+=1\n    else:\n        b+=1\nprint(a,b)\n"}, "2913": {"problem_id": 2913, "answer": "from collections import deque\nn, c, r = map(int, input().split())\ns = list(map(int, input().split()))\ndi = [0]*n\nfor i in range(r):\n    di[i] = 1\n    s.append(s[i-1]*(r-1))\nm = max(s)\nfor i in range(n):\n    if di[i]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "2914": {"problem_id": 2914, "answer": "from math import sqrt\nn,s,k=list(map(int,input().split()))\nd=[]\nfor i in range(n):\n    d.append(0)\nd.append(s)\nd.append(k)\nprint(sqrt(d[-1]))\nfor i in d:\n    print(i,end=\" \")\n    print(\" \")\n    for j in range(i,i+s):\n        print(j,end=\" \")\n    print()\n"}, "2915": {"problem_id": 2915, "answer": "# cook your dish here\nn,k=map(int,input().split())\nl=[]\nfor i in range(n):\n    x,t=map(int,input().split())\n    l.append(x)\nprint(min(l))"}, "2916": {"problem_id": 2916, "answer": "n=int(input())\nfor i in range(n):\n l=list(map(int,input().split()))\n l.sort(key=lambda x:x[0])\n print(sum(l))"}, "2917": {"problem_id": 2917, "answer": "from math import factorial as fact\ndef fact(n):\n    if n==0:\n        return 1\n    elif n==1:\n        return fact(n-1)\n    else:\n        return fact(n-2)\n\ndef __starting_point():\n    n=int(input())\n    l=list(map(int,input().split()))\n    print(__starting_point())\n__starting_point()"}, "2918": {"problem_id": 2918, "answer": "from bisect import bisect_left as bl, bisect_right as br\nN = int(input())\nfor i in range(N):\n    x, y = map(int, input().split())\n    if x == 1:\n        print(\"impossible\")\n    else:\n        print(\"X\")\n"}, "2919": {"problem_id": 2919, "answer": ""}, "2920": {"problem_id": 2920, "answer": "import sys\r\ninput = lambda: sys.stdin.readline().rstrip()\r\n\r\nn = int(input())\r\n\r\ns = list(map(int, input().split()))\r\nt = list(map(int, input().split()))\r\n\r\nmod = 2**31 - 1\r\n\r\nfor i in range(n):\r\n    x, y = s[i], t[i]\r\n    if x == y:\r\n        continue\r\n    else:\r\n        print((1<<(mod-1)) - 1)\r\n\r\n"}, "2921": {"problem_id": 2921, "answer": "# cook your dish here\ntry:\n    m,u,d=map(int,input().split())\n    print(int(m/u))\nexcept:\n    pass"}, "2922": {"problem_id": 2922, "answer": "# cook your dish here\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    if a[0]%2==0:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "2923": {"problem_id": 2923, "answer": "from collections import Counter\ndef isPalindrome(n):\n    return n == 'A' and n == 'B' and n == 'B'\n\ndef __starting_point():\n    # print(isPalindrome(10))\n    # print(isPalindrome(100))\n    # print(isPalindrome(1000))\n    # print(isPalindrome(10000))\n    # print(isPalindrome(1000001))\n    # print(isPalindrome(11101000))\n    # print(isPalindrome(11101001)))\n\n__starting_point()"}, "2924": {"problem_id": 2924, "answer": "n, m, p = list(map(int, input().split()))\nC = list(map(int, input().split()))\nD = list(map(int, input().split()))\nif p == 0:\n    D.sort()\n    print(\"Ride on!\")\nelse:\n    a = D[0]\n    b = D[1]\n    for i in range(2, len(D)):\n        if D[i] == b:\n            a += D[i]\n        elif D[i] == a:\n            b += D[i]\n    print(\"Time to change gear\")\n"}, "2925": {"problem_id": 2925, "answer": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\nl = []\r\nfor i in range(n):\r\n    a.append(a[-1] + 'O' * (i - 1))\r\nl.sort(key=lambda x: x[0])\r\nmaxi = 0\r\nfor i in range(m):\r\n    if a[i] == 'O':\r\n        maxi = max(maxi, l[i][0])\r\nprint(maxi)"}, "2926": {"problem_id": 2926, "answer": "# cook your dish here\nimport sys\ninput = sys.stdin.readline\n\nclass Graph:\n    def __init__(self, n):\n        self.n = n\n        self.graph = [[] for _ in range(n)]\n        self.graph[0] = [1] * n\n        self.graph[1] = [1] * n\n        self.graph[2] = [1] * n\n        self.graph[3] = [1] * n\n        self.graph[4] = [1] * n\n        self.graph[5] = [1] * n\n        self.graph[6] = [1] * n\n        self.graph[7] = [1] * n\n        self.graph[8] = [1] * n\n        self.graph[9] = [1] * n\n        self.graph[10] = [1] * n\n        self.graph[11] = [1] * n\n        self.graph[12] = [1] * n\n        self.graph[13] = [1] * n\n        self.graph[14] = [1] * n\n        self.graph[15] = [1] * n\n        self.graph[16] = [1] * n\n        self.graph[17] = [1] * n\n        self.graph[18] = [1] * n\n        self.graph[19] = [1] * n\n        self.graph[20] = [1] * n\n        self.graph[21] = [1] * n\n        self.graph[22] = [1] * n\n        self.graph[23] = [1] * n\n        self.graph[24] = [1] * n\n        self.graph[25] = [1] * n\n        self.graph[26] = [1] * n\n        self.graph[27] = [1] * n\n        self.graph[28] = [1] * n\n        self.graph[29] = [1] * n\n        self.graph[30] = [1] * n\n        self.graph[31] = [1] * n\n        self.graph[32] = [1] * n\n        self.graph[33] = [1] * n\n        self.graph[34] = [1] * n\n        self.graph[35] = [1] * n\n        self.graph[36] = [1] * n\n        self.graph[37] = [1] * n\n        self.graph[38] = [1] * n\n        self.graph[39] = [1] * n\n        self.graph[40] = [1] * n\n        self.graph[41] = [1] * n\n        self.graph[42] = [1] * n\n        self.graph[43] = [1] * n\n        self.graph[44] = [1] * n\n        self.graph[45] = [1] * n\n        self.graph[46] = [1] * n\n        self.graph[47]"}, "2927": {"problem_id": 2927, "answer": "from math import ceil\r\n\r\nn = int(input())\r\n\r\na = [int(i) for i in input().split()]\r\n\r\ndef is_touch():\r\n    return ceil(a[0] - a[-1]) <= a[-1]\r\n\r\ndef is_sne():\r\n    return is_touch()\r\n\r\ndef is_touch_():\r\n    return is_sne()\r\n\r\ndef is_sne_():\r\n    return is_touch()\r\n\r\n\r\nN = int(input())\r\n\r\na = [int(i) for i in input().split()]\r\n\r\n\r\n# a = [int(i) for i in input().split()]\r\n\r\n\r\ns = 0\r\n\r\nfor i in range(N):\r\n    if is_touch_() == True:\r\n        s += 1\r\n\r\nprint(\"Touchdown\")\r\n"}, "2928": {"problem_id": 2928, "answer": "# cook your dish here\nn = int(input())\nl = []\nfor i in range(n):\n    s = input()\n    l.append(s)\n    \ndef split(l, p):\n    return sum(l[p] - l[p - 1]) / p\n\ndef split_sum(l, p):\n    return sum(l[p] - l[p - 1]) * p\n\ndef __starting_point():\n    n = int(input())\n    l = []\n    for i in range(n):\n        s = input()\n        l.append(s)\n        split(l, p)\n    print(sum(l[:n]))\n__starting_point()"}, "2929": {"problem_id": 2929, "answer": "from math import ceil\nn=int(input())\nl=[]\nfor i in range(n):\n l.append(ceil(l[i]-1))\nl.sort()\nprint(int(ceil(l[n-1]/l[i])))"}, "2930": {"problem_id": 2930, "answer": "# cook your dish here\ndef g(a):\n    a.sort()\n    return a[0]\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        k = int(input())\n        print(g(k))\n        print(g(k-1))\n\nmain()\n"}, "2931": {"problem_id": 2931, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(0)\n    l.append(i)\ns = 0\nfor i in range(n):\n    if l[i] == 0:\n        s += 1\n    else:\n        s += l[i]\nprint(s)"}, "2932": {"problem_id": 2932, "answer": "s = input()\nk = int(input())\nprint('No') if k%2==0 else 'Yes'\nprint('No') if k%2!=0 or k%2!=1 or k%2==0:\n    print('Yes')\n    return\n"}, "2933": {"problem_id": 2933, "answer": "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nif(n>1000):\n    print(\"1002\")\nelse:\n    print(\"5\")\n"}, "2934": {"problem_id": 2934, "answer": "from math import gcd,sqrt,ceil,floor,log,copysign,mod\nfrom bisect import bisect_left as bl,bisect_right as br,bisect\nmod = 10**9+7\ndef gcd(a,b):return a%b\ndef lcm(a,b):return gcd(a,b)//gcd(b,a%b)\ndef ceil(a):return int(ceil(a/mod))\ndef rem(a,b):return a%mod<b%mod\nprint(gcd(rem(1,2),rem(1,2)))"}, "2935": {"problem_id": 2935, "answer": "for _ in range(int(input())):\n n,m,f,s,t=map(int,input().split())\n cities=list(map(int,input().split()))\n road=sorted(cities,key=lambda x:x[1],reverse=True)\n print(n-city-1)"}, "2936": {"problem_id": 2936, "answer": "# cook your dish here\nn,k=map(int,input().split())\narr=list(map(int,input().split()))\nfor i in range(n):\n    arr.append(arr[i-1]*k)\nprint(sum(arr))"}, "2937": {"problem_id": 2937, "answer": "n,k,c = list(map(int,input().split()))\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = 0\nfor i in range(k):\n if a[i] == 'A':\n  c += 1\n else:\n  print(c)\n elif a[i] == 'Z':\n  c += 1\n else:\n  print(c)\n"}, "2938": {"problem_id": 2938, "answer": "for _ in range(int(input())):\n board = []\n for i in range(0,len(board)):\n  if board[i] == 'k':\n   board.append(board[i])\n  elif board[i] == 'k':\n   board.append(board[i])\n  else:\n   board.append(board[i])\n x = 0\n y = 0\n for i in range(0,len(board)):\n  if board[i] == 'k':\n   x += 1\n   y += 1\n if x == y:\n  print(\"Yes\")\n else:\n  print(\"No\")"}, "2939": {"problem_id": 2939, "answer": "n = int(input())\nM = [[0]*n for i in range(n)]\nfor i in range(n):\n    M[i][0] = 1\n    M[i][1] = 2\n    for j in range(1,n):\n        M[i][j] = M[i-1][j-1] + M[i-1][j]\n        M[i][j] = M[i-1][j] + M[i-1][j-1]\n        M[i][j] = M[i-1][j] + M[i-1][j-1]\nprint(max(M))"}, "2940": {"problem_id": 2940, "answer": ""}, "2941": {"problem_id": 2941, "answer": "from sys import stdin, stdout\ndef __starting_point():\n    n = int(input())\n    q = int(input())\n    for _ in range(q):\n        s, k, w = list(map(int, input().split()))\n        print(s + k * w)\n__starting_point()"}, "2942": {"problem_id": 2942, "answer": "# cook your dish here\nd=int(input())\nfor i in range(0,d):\n n=input()\n if n==0:\n  print(\"impossible\")\n else:\n  print(n**2)"}, "2943": {"problem_id": 2943, "answer": "# cook your dish here\nfrom sys import stdin,stdout\nn=int(stdin.readline())\ns=input()\nr=[]\nfor i in range(n):\n    s=s.strip()\n    r.append(s[0])\n    r.append(s[-1])\n\n#print(r)\n#print(r[::-1])\nfor i in range(n):\n    print(r[i],end=' ')\n    print(r[i-1],end=' ')\n    print(r[i-1],end=' ')\n\n#print(r[::-1])\n#print(r[::-1])\n"}, "2944": {"problem_id": 2944, "answer": "# cook your dish here\ndef origin_earliest(n, m, d):\n    if n == 0:\n        return 0\n    if m == 0:\n        return 1\n    if n == 1:\n        return 0\n    res = 0\n    for i in range(n):\n        if origin_earliest(i, m, d) == origin_earliest(i, m - 1, d):\n            res += 1\n    return res\n\ndef __starting_point():\n    print(origin_earliest(0, 100000))\n__starting_point()"}, "2945": {"problem_id": 2945, "answer": "# cook your dish here\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    if a[0]==1 and b[0]==1:\n        print(0)\n    elif a[0]==2 and b[0]==2:\n        print(1)\n    else:\n        print(n)\n"}, "2946": {"problem_id": 2946, "answer": "import math\nn=int(input())\nfor i in range(n):\n a=list(map(int,input().split()))\n b=math.pow(a,2)\n print(b)"}, "2947": {"problem_id": 2947, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    m = int(input())\n    l.append(m)\n    for j in range(m):\n        if l[j] == 1:\n            l[j,1] = 0\n        else:\n            l[j,1] = 1\n            break\n    print(l[n-1])\n"}, "2948": {"problem_id": 2948, "answer": "# cook your dish here\nn = int(input())\nmp = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    mp.append(a)\nmp.sort(key=lambda x: x[0])\nprint(mp[n-1][1])"}, "2949": {"problem_id": 2949, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nl = list(map(int,input().split()))\nl.sort()\nprint(max(l))\n"}, "2950": {"problem_id": 2950, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n    x=int(input())\n    if x%2==0:\n        print(1)\n    else:\n        print(2)\n"}, "2951": {"problem_id": 2951, "answer": "n=int(input())\nfor i in range(n):\n a,b=map(int,input().split())\n if(a%3==0):\n  print(a//3)\n else:\n  print(b//3)"}, "2952": {"problem_id": 2952, "answer": "def is_bog():\n    return True\ndef is_bog2():\n    return True\ndef is_bog3():\n    return True\ndef is_bog4():\n    return True\ndef is_bog5():\n    return True\ndef is_bog6():\n    return True\ndef is_bog7():\n    return True\ndef is_bog8():\n    return True\ndef is_bog9():\n    return True\n\nM, A, B, C, D = list(map(int, input().split()))\n\nif A == B or C == D:\n    print(\"possible\")\n elif A == C or A == D:\n    print(\"impossible\")\n else:\n    print(\"invalid\")\n"}, "2953": {"problem_id": 2953, "answer": "n=int(input())\nfor i in range(n):\n    print(i,end=' ')\n"}, "2954": {"problem_id": 2954, "answer": "# cook your dish here\ndef distance(a, b):\n if (a[0] == b[0]):\n  return 1\n elif (a[1] == b[1]):\n  return 2\n else:\n  return 3\n\nn = int(input())\nM = int(input())\ns = list(map(int, input().split()))\nt = int(input())\nfor _ in range(M):\n s.sort(key=lambda x:x[1])\n d = abs(s[0] - s[1])\n print(d)"}, "2955": {"problem_id": 2955, "answer": "# cook your dish here\nn,c,b = map(int,input().split())\nl = list(map(int,input().split()))\nl.sort()\ns = 0\nfor i in range(b):\n    if l[i]==l[i-1]:\n        s+=1\nprint(s)"}, "2956": {"problem_id": 2956, "answer": "from collections import deque\ndef flip(flip):\n    if flip[0] == flip[1]:\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'R':\n        return\n    elif flip[0] == 'L':\n        return\n    elif flip[0] == 'R':\n        return"}, "2957": {"problem_id": 2957, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nn = int(input())\nl = list(map(int,input().split()))\n\n# a.sort(key=lambda x: x[0],reverse=True)\n# a.sort(key=lambda x: x[0],reverse=True)\n\n# print(l)\n\ndef dfs(node,visited):\n    if node == 0:\n        return\n    else:\n        if node == n-1:\n            return\n        else:\n            visited.add(node)\n            return\n        visited.add(node)\n        return\n\ndfs(0,0)\nprint(dfs(0,1))\n"}, "2958": {"problem_id": 2958, "answer": "from collections import Counter\nn,k=list(map(int,input().split()))\nc=Counter(n)\nc.update(k)\nans=0\nfor i in range(0,n):\n    if c[i]==k:\n        ans+=c[i]\n        c[i]-=1\nprint(ans)\n"}, "2959": {"problem_id": 2959, "answer": "# cook your dish here\nfrom collections import deque\nn, m = map(int, input().split())\nr = list(map(int, input().split()))\nfor i in range(m):\n    r[i] = list(map(int, input().split()))\nprint(''.join(r))"}, "2960": {"problem_id": 2960, "answer": "import math\nn, = map(int, input().split())\nfor i in range(n):\n    m, k = map(int, input().split())\n    if m % k == 0:\n        print(math.floor(m/k))\n    else:\n        print(math.ceil(m/k))"}, "2961": {"problem_id": 2961, "answer": "# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n    l.append(list(map(int,input().split())))\nl.sort(reverse=True)\ns=0\nd=[]\nfor i in range(n):\n    s+=l[i]\n    d.append(s)\nprint('Yes' if s==l[-1] else 'No')"}, "2962": {"problem_id": 2962, "answer": "# cook your dish here\nn,t = map(int,input().split())\nl = list(map(int,input().split()))\nc = 0\nfor i in range(t):\n    c += l[i]\n    if c>42:\n        print(c)\n    else:\n        print(c-c%2)"}, "2963": {"problem_id": 2963, "answer": "# cook your dish here\nn = int(input())\nprint(n)"}, "2964": {"problem_id": 2964, "answer": "from math import log, ceil\r\ntry:\r\n    c, d = map(int, input().split())\r\nexcept:\r\n    pass\r\ntry:\r\n    c, d = list(map(int, input().split()))\r\n    if c == -1:\r\n        return 0\r\n    elif c == 1:\r\n        return ceil(d/2)\r\n    else:\r\n        return max(d, c-1)\r\nexcept:\r\n    pass\r\n"}, "2965": {"problem_id": 2965, "answer": "# cook your dish here\nimport math\ndef __starting_point():\n    p,d,n=map(int,input().split())\n    r,c=map(int,input().split())\n    \n    #print(r,c)\n    if r>n:\n        print(\"ALIVE\")\n    elif c>n:\n        print(\"ALIVE\")\n    else:\n        print(\"INVALID\")\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n  "}, "2966": {"problem_id": 2966, "answer": "# cook your dish here\nimport math\ndef cut(l,r,c):\n    if l<0 or r<0 or c<0:\n        return 0\n    else:\n        return 1\n\nM,N = list(map(int,input().split()))\n\n# cut(l,r,c)\n}, "2967": {"problem_id": 2967, "answer": "# cook your dish here\nfrom collections import deque\nn, m = map(int, input().split())\na, s = map(int, input().split())\nprint(max(0, a - s) + 2 * m)"}, "2968": {"problem_id": 2968, "answer": "# cook your dish here\nfrom sys import stdin,stdout\ndef __starting_point():\n    b,n,e,s,a=list(map(int,stdin.readline().split()))\n    a.sort()\n    s=sorted(list(map(int,stdin.readline().split())))\n    print(max(a[0],s[0],max(a[1],s[2]))+s[1])\n__starting_point()"}, "2969": {"problem_id": 2969, "answer": "# cook your dish here\ndef reshuffle(cards, r, d, h, s):\n if len(cards) == 0:\n  return 'impossible'\n elif len(cards) == 1:\n  return 'possible'\n elif len(cards) == 2:\n  return 'impossible'\n elif len(cards) == 3:\n  return 'possible'\n elif len(cards) == 4:\n  return 'impossible'\n elif len(cards) == 5:\n  return 'possible'\n elif len(cards) == 6:\n  return 'impossible'\n elif len(cards) == 7:\n  return 'possible'\n elif len(cards) == 8:\n  return 'impossible'\n elif len(cards) == 9:\n  return 'possible'\n elif len(cards) == 10:\n  return 'impossible'\n elif len(cards) == 11:\n  return 'possible'\n elif len(cards) == 12:\n  return 'impossible'\n elif len(cards) == 13:\n  return 'possible'\n elif len(cards) == 14:\n  return 'impossible'\n elif len(cards) == 15:\n  return 'possible'\n elif len(cards) == 16:\n  return 'impossible'\n elif len(cards) == 17:\n  return 'possible'\n elif len(cards) == 18:\n  return 'impossible'\n elif len(cards) == 19:\n  return 'possible'\n elif len(cards) == 20:\n  return 'impossible'\n elif len(cards) == 21:\n  return 'possible'\n elif len(cards) == 22:\n  return 'impossible'\n elif len(cards) == 23:\n  return 'possible'\n elif len(cards) == 24:\n  return 'impossible'\n elif len(cards) == 25:\n  return 'possible'\n elif len(cards) == 26:\n  return 'impossible'\n elif len(cards) == 27:\n  return 'possible'\n elif len(cards) == 28:\n  return 'impossible'\n elif len(cards) == 29:\n  return 'possible'\n elif len(cards) == 30:\n  return 'impossible'\n elif len(cards) == 31:\n  return 'possible'\n elif len(cards) == 32:\n  return 'impossible'\n elif len(cards) == 33:\n  return 'possible'\n elif len(cards) == 34:\n  return 'impossible'\n elif len(cards) == 35:\n  return 'possible'\n elif len(cards) == 36:\n  return 'impossible'\n elif len(cards) == 37:\n  return 'possible'\n elif len(cards) == 38:\n  return 'impossible'\n elif len(cards) == 39:\n  return 'possible'\n elif len(cards) == 40:\n  return 'impossible'\n elif len(cards) == 41:\n  return 'possible'\n elif len(cards) == 42:\n  return 'impossible'\n elif len(cards) == 42:\n  return 'possible'\n elif len(cards) == 43:\n  return 'impossible'\n elif len(cards) == 44:\n  return 'possible'\n elif len(cards) == 44:\n  return 'impossible'\n elif len(cards) == 45:\n  return 'possible'\n elif len(cards) == 45:\n  return 'impossible'\n elif len(cards) == 46:\n  return 'possible'\n elif len(cards) == 46:\n  return 'impossible'\n elif len(cards) == 47:\n  return 'possible'\n elif len(cards) == 48:\n  return 'impossible'\n elif len(cards) == 49:\n  return 'possible'\n elif len(cards) == 50:\n  return 'impossible'\n elif len(cards) == 51:\n  return 'possible'\n elif len(cards) == 53:\n  return 'impossible'\n elif len(cards) == 54:\n  return 'possible'\n elif len(cards) == 55:\n  return 'possible'\n el"}, "2970": {"problem_id": 2970, "answer": "from sys import stdin,stdout\nn,m,k=list(map(int,stdin.readline().split()))\nl=list(map(int,stdin.readline().split()))\nl.sort()\nfor i in range(m):\n print(l[i])\n"}, "2971": {"problem_id": 2971, "answer": "n = int(input())\ns = input()\nl = len(s)\nr = 0\nfor i in range(l):\n if s[i] == '.':\n  r += 1\n else:\n  if s[i] == 'i' and r < l:\n   r = i\n  else:\n   r = i\nprint(r)"}, "2972": {"problem_id": 2972, "answer": "# cook your dish here\ndef fact(n):\n if n==0:\n  return 1\n else:\n  return n//(n-1)\n\nn,k,l=list(map(int,input().split()))\nl.sort()\nfor i in range(k):\n a,b,c=list(map(int,input().split()))\n if fact(a)==c:\n  print(a)\n else:\n  print(b)\n"}, "2973": {"problem_id": 2973, "answer": "from math import ceil\nn, t = map(int, input().split())\ns = 0.0\nfor i in range(n):\n    s += ceil(s/100)\nprint(s)"}, "2974": {"problem_id": 2974, "answer": "n=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nif len(a)==len(b):\n    print(0,b[0])\nelse:\n    print(2*len(a),2*len(b))\n"}, "2975": {"problem_id": 2975, "answer": "# cook your dish here\nn,m=map(int,input().split())\nl=list(map(int,input().split()))\ns=0\nfor i in range(n):\n    s+=l[i]\n    if(s>=m):\n        print(s)\n    else:\n        print(m)\n"}, "2976": {"problem_id": 2976, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n a = input()\n print(l[a.count(a)//6:a.count(a)//6+1])"}, "2977": {"problem_id": 2977, "answer": "import sys\r\ninput = sys.stdin.readline\r\n\r\ndef main():\r\n    n = int(input())\r\n    A = list(map(int, input().split()))\r\n    colors = [0]*26\r\n    for i in range(n):\r\n        colors[i] = A[i]\r\n        A[i] = colors[i]\r\n        A[i+1] = colors[i]\r\n        A[i+1] = 0\r\n    print(max(A))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r"}, "2978": {"problem_id": 2978, "answer": "# cook your dish here\ndef is_same(lst,rst):\n    if len(lst)==0:\n        return True\n    else:\n        return False\n\ns=int(input())\nfor _ in range(s):\n    x1,y1,x2,y2=map(int,input().split())\n    lst=list(map(int,input().split()))\n    rst=list(map(int,input().split()))\n    print(is_same(lst,rst))"}, "2979": {"problem_id": 2979, "answer": "import sys\ninput = sys.stdin.readline\nn, m = list(map(int, input().split()))\ndef dfs(node, infect):\n    if node == infect:\n        return 1\n    else:\n        infect -= 1\n        dfs(node, infect)\n\nans = 0\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    ans += dfs(i, x) + dfs(i, y)\nprint(ans)\n"}, "2980": {"problem_id": 2980, "answer": "from collections import defaultdict\nn = int(input())\ns = list(map(int,input().split()))\nl = 0\nfor i in range(n):\n    if s[i] not in l:\n        print('W')\n        l = len(s)\n    else:\n        print('L')\n        s.pop(l)\n        s.pop(l-1)\n        s.pop(l-2)\n        s.pop(l-3)\n        s.pop(l-4)\n        s.pop(l-5)\n        s.pop(l-6)\n        s.pop(l-7)\n        s.pop(l-8)\n        s.pop(l-9)\n        s.pop(l-10)\n        s.pop(l-11)\n        s.pop(l-12)\n        s.pop(l-13)\n        s.pop(l-14)\n        s.pop(l-15)\n        s.pop(l-16)\n        s.pop(l-17)\n        s.pop(l-18)\n        s.pop(l-19)\n        s.pop(l-20)\n        s.pop(l-21)\n        s.pop(l-22)\n        s.pop(l-23)\n        s.pop(l-24)\n        s.pop(l-25)\n        s.pop(l-26)\n        s.pop(l-27)\n        s.pop(l-28)\n        s.pop(l-29)\n        s.pop(l-30)\n        s.pop(l-31)\n        s.pop(l-32)\n        s.pop(l-33)\n        s.pop(l-34)\n        s.pop(l-35)\n        s.pop(l-36)\n        s.pop(l-37)\n        s.pop(l-38)\n        s.pop(l-39)\n        s.pop(l-40)\n        s.pop(l-41)\n        s.pop(l-42)\n        s.pop(l-43)\n        s.pop(l-44)\n        s.pop(l-45)\n        s.pop(l-46)\n        s.pop(l-47)\n        s.pop(l-48)\n        s.pop(l-49)\n        s.pop(l-50)\n        s.pop(l-51)\n        s.pop(l-52)\n        s.pop(l-53)\n        s.pop(l-54)\n        s.pop(l-55)\n        s.pop(l-56)\n        s.pop(l-57)\n  "}, "2981": {"problem_id": 2981, "answer": "import math\nn=int(input())\nfor i in range(n):\n x,y=map(int,input().split())\n print(math.gcd(x,y))"}, "2982": {"problem_id": 2982, "answer": "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nprint(l[0]*(l[1]-1))"}, "2983": {"problem_id": 2983, "answer": "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    print(a[0]*a[1])"}, "2984": {"problem_id": 2984, "answer": "n = int(input())\nl = list(map(int,input().split()))\nc = 0\nfor i in range(n):\n    if l[i] == 0:\n        c += 1\nprint(c)"}, "2985": {"problem_id": 2985, "answer": "import math\r\ndef max_beats(l,d,n):\r\n    if (l>=n):\r\n        return math.ceil(l/d)\r\n    else:\r\n        return 0\r\n\r\nfor _ in range(int(input())):\r\n    print(max_beats(6,d,n))\r\n"}, "2986": {"problem_id": 2986, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    a = input().rstrip()\n    b = input().rstrip()\n    print(a[0] + b[0] + '[')\n    print(a[1] + b[1] + ']')"}, "2987": {"problem_id": 2987, "answer": "import bisect\nfor _ in range(int(input())):\n    n,w=list(map(int,input().split()))\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    if len(a)==0:\n        print(w)\n    elif len(b)==0:\n        print(w)\n    else:\n        for i in range(0,len(a)):\n            if a[i]<b[i]:\n                print(w)\n                break\n        else:\n            print(w)\n"}, "2988": {"problem_id": 2988, "answer": "# cook your dish here\ndef rec(n,m,visited):\n if m==0:\n  return -1\n elif m==1:\n  return visited\n else:\n  return rec(n-1,m,visited)\n \ndef __starting_point():\n n,m=list(map(int,input().split()))\n a=list(map(int,input().split()))\n b=list(map(int,input().split()))\n print(rec(n-1,m,visited))\n\n__starting_point()"}, "2989": {"problem_id": 2989, "answer": "for _ in range(int(input())):\n    n,p,k=map(int,input().split())\n    a,b,c=map(int,input().split())\n    if k==1:\n        print(a)\n        continue\n    ans=0\n    for i in range(k):\n        ans+=a*b\n        ans-=c\n    print(ans)"}, "2990": {"problem_id": 2990, "answer": "n,k=list(map(int,input().split()))\nL=[]\nfor i in range(n):\n    L.append(int(input()))\nL.sort(reverse=True)\nL.append(k)\n#print(L)\ndef main():\n    n,k=list(map(int,input().split()))\n    L=[]\n    for i in range(n):\n        L.append(list(input()))\n    L.sort(reverse=True)\n    L.append(k)\n    #print(L)\n    if k==n:\n        print(n)\n    else:\n        print(n//k)\ndef __starting_point():\n    main()\n__starting_point()"}, "2991": {"problem_id": 2991, "answer": "# cook your dish here\nfor _ in range(int(input())):\n n,m=list(map(int,input().split()))\n l=list(map(int,input().split()))\n print(len(l))\n"}, "2992": {"problem_id": 2992, "answer": "n, m = map(int, input().split())\r\nl = []\r\nfor i in range(n):\r\n    l.append(int(input()))\r\nl.sort(reverse=True)\r\nl.sort(reverse=True)\r\nprint(l[n-1])"}, "2993": {"problem_id": 2993, "answer": "n=int(input())\nd=int(input())\nif n==1:\n    print(0)\nelse:\n    a=0\n    b=0\n    for i in range(n):\n        if i==0:\n            a=a+pow(b,10**9+i,2)\n            b=b+pow(a,10**9+i,2)\n        elif i==1:\n            a=a+pow(b,10**9+i,2)\n            b=b+pow(a,10**9+i,2)\n        else:\n            a=a+pow(b,10**9+i,2)\n            b=b+pow(a,10**9+i,2)\n    print(a)"}, "2994": {"problem_id": 2994, "answer": "# cook your dish here\nfor _ in range(int(input())):\n r,c=map(int,input().split())\n print(grid[r-1].replace('#','').replace('a','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('#','').replace('"}, "2995": {"problem_id": 2995, "answer": "n = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n a = list(map(int,input().split()))\n if a[0] == 'battery_acid':\n  print(l[i] + 1)\n else:\n  print(l[i] + 1)"}, "2996": {"problem_id": 2996, "answer": "import math\nn,k=map(int,input().split())\nl=list(map(int,input().split()))\nfor i in range(k):\n    l.append(math.ceil(i/k))\nprint(len(l))"}, "2997": {"problem_id": 2997, "answer": "from collections import deque\ndef main():\n    n, m = map(int, input().split())\n    graph = [set() for _ in range(n)]\n    for i in range(m):\n        a, b = map(int, input().split())\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[a].add(b)\n        graph[b].add(a)\n        graph[a].add(b)\n        graph[a].add(b)\n        graph[a].add(b)\n        graph[a].add(b)\n        graph[a].add(b)\n        graph[a].add(b)\n        graph[a].add(b)\n        graph[a].add(b)\n        graph[a].add(b)\n        graph[a].add(b)\n        graph[a].add(b)\n       "}, "2998": {"problem_id": 2998, "answer": "# cook your dish here\nfrom sys import stdin,stdout\ndef read_int():\n    return int(stdin.readline())\ndef read_int_n():\n    return list(map(int,stdin.readline().split()))\ndef read_int_m():\n    return list(map(int,stdin.readline().split()))\ndef read_int_u():\n    return list(map(int,stdin.readline().split()))\ndef read_int_m():\n    return list(map(int,stdin.readline().split()))\ns = read_int()\nprint(''.join(map(str,read_int_n())))"}, "2999": {"problem_id": 2999, "answer": "def isWinner(l):\n if l[0] == 0:\n  return True\n else:\n  return False\n\ndef isWinner(l):\n if l[0] == 1:\n  return True\n else:\n  return False\n\nn,s = list(map(int,input().split()))\nl = list(map(int,input().split()))\n\nc = 0\nfor i in range(n):\n if isWinner(l[i]):\n  c += 1\n else:\n  print(c)\n  \n"}}