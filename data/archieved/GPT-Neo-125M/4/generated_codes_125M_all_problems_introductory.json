{"0": {"problem_id": 4000, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nedges = [0] + list(map(int, input().split())) + [0]\nfor i in range(n-1):\n    a, b, c = list(map(int, input().split()))\n    if a < b < c:\n        edges[i] += 1\n    elif a < c < b:\n        edges[i] += 2\n    elif b < c < a < c:\n        edges[i] += 3\n    else:\n        edges[i] += 1\nprint(len(edges))\nprint(' '.join(map(str, edges)))"}, "1": {"problem_id": 4001, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nd = list(map(int, input().split()))\n\nfor i in range(n):\n    d.append(int(input()))\n\n#print(d)\n\nans = []\n\nfor i in range(n):\n    ans.append(sum(d[i]))\n\n#print(ans)\n\nprint(*ans, sep=\"\\n\")\n"}, "2": {"problem_id": 4002, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = map(int, input().split())\nmatrix = [[0] * (n + 1) for _ in range(m + 1)]\nfor i in range(n):\n    matrix[i][i] = 1\nfor i in range(m):\n    matrix[i][i] = matrix[i][i] + matrix[i][n - i - 1]\n\ndef main():\n    n, m, k = map(int, input().split())\n    matrix = [[0] * (n + 1) for _ in range(m + 1)]\n    for i in range(n):\n        matrix[i][i] = matrix[i][i] + matrix[i][n - i - 1]\n    print(sum(matrix[i]) + max(0, k - matrix[i - 1][k]))\n"}, "3": {"problem_id": 4003, "answer": "from itertools import accumulate\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(a, n):\n    if len(a) == n:\n        return 1\n    else:\n        ans = 0\n        for i in range(n):\n            if a[i] == 'L':\n                ans += 1\n            elif a[i] == 'R':\n                ans += 1\n        return ans\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(a, n))\n__starting_point()"}, "4": {"problem_id": 4004, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a.insert(i, set() + [a[i]])\n\nprint(min(a))"}, "5": {"problem_id": 4005, "answer": "from sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    dp = [[[0, 0] for _ in range(n)] for _ in range(n)]\n    for i in range(n):\n        x, y, x1, y1 = stdin.readline().split()\n        x = int(x)\n        y = int(y)\n        dp[x][y] = [x1, y1]\n        for j in range(n):\n            x2 = int(x) - 1\n            y2 = int(y) - 1\n            if x2 - x1 < 0:\n                break\n            if y2 - y1 < 0:\n                break\n            if x2 - x1 > 0:\n                break\n            if y2 - y1 > 0:\n                break\n            dp[x][y] = [x1, y1]\n            for j in range(n):\n                x2 = int(x) - 1\n                y2 = int(y) - 1\n                if x2 - x1 < 0:\n                    break\n                if y2 - y1 > 0:\n                    break\n                dp[x][y] = [x1, y1]\n                for j in range(n):\n                    x2 = int(x) - 1\n                    y2 = int(y) - 1\n                    if x2 - x1 < 0:\n                        break\n                    if y2 - y1 > 0:\n                        break\n                    dp[x][y] = [x1, y1]\n                    break\n            else:\n                break\n    if dp[0][y] == [0, 0]:\n        print('YES')\n    else:\n        print('NO')\nmain()"}, "6": {"problem_id": 4006, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nif n == 0:\n    print(0)\n    return\n\nx = list(map(int, input().split()))\n\nfor i in range(n):\n    x.append(int(input()))\n\n#print(x)\n\n#print(x)\n\nans = 0\n\nfor i in range(n):\n    if x[i] == 0:\n        ans += 1\n        break\n\nprint(ans)\n"}, "7": {"problem_id": 4007, "answer": "from bisect import bisect_left as bl\nn = int(input())\nl = list(map(int, input().split()))\ns = sorted(l)\nfor i in range(n):\n    if s[i] == 0:\n        s[i] = 1\n    else:\n        s[i] = s[i-1]\nprint(' '.join(map(str, s)))"}, "8": {"problem_id": 4008, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef color(x):\n    return x == 1\n\n# print(a)\n# print(a[1:])\n# print(a[:n])\n\nfor i in range(k):\n    x = list(map(int, input().split()))\n    if x[1] == 1:\n        print('YES')\n        continue\n    if x[0] == 2:\n        print('1', x[1:])\n    elif x[0] == 1:\n        print('2', x[1:])\n    else:\n        print('NO')\n"}, "9": {"problem_id": 4009, "answer": "import sys\ninput = sys.stdin.readline\n\nn, x, y = map(int, input().split())\n\nmod = 10**10\n\np = [0] * (n+1)\np[0] = 1\nfor i in range(1, n+1):\n    p[i] = p[i-1] + x\n    p[i] = p[i-1] + y\n\nans = 10**10\n\nfor i in range(n):\n    ans = min(ans, p[i])\n    ans = ans - pow(10, x, mod)\n    ans = ans - pow(10, x, mod)\n    ans = ans - 10**x\n\nprint(ans)"}, "10": {"problem_id": 4010, "answer": "import bisect\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(n):\n        b.append(a[i])\n    print('YES' if b else 'NO')"}, "11": {"problem_id": 4011, "answer": "n = int(input())\ns = input()\nf = lambda : list(map(int, s.split()))\nfor i in range(9, n):\n    f(i)\nprint(f(9))"}, "12": {"problem_id": 4012, "answer": "for _ in range(int(input())):\n    a,b,c=map(int,input().split())\n    if a==1 or b==1 or c==1:\n        print(0)\n    elif a==0 or b==0 or c==0:\n        print(1)\n    else:\n        print(2)\n        print(3)\n"}, "13": {"problem_id": 4013, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = a[i] + 1\nprint(min(a[-1] - a[0], a[-2] - a[1] + a[2] + a[3]))"}, "14": {"problem_id": 4014, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\n# \u5bcc\u6839\u8fba\u5206\u5272\nday = 0\n\n# \u6700\u540e\u4e00\u6b65\nfor i in range(1, m + 1):\n    if s[i] < s[i - 1]:\n        day += 1\n        break\n\n# \u6b64\u65e5\u6570\nfor i in range(1, n + 1):\n    if s[i] < s[i - 1]:\n        day += 1\n        break\n\n# \u68cb\u591a\nfor i in range(1, m + 1):\n    if s[i] < s[i - 1]:\n        day += 1\n        break\n\n# \u6ce8\u610f\uff1a\u5347\ufffduretting\uff0c\u8fd9\u4e2a\u6570\u8981\u5c31\u7ee7\u77fb\u4e86\nfor i in range(1, n + 1):\n    if s[i] < s[i - 1]:\n        print(-1)\n        continue\n    print(i - 1)\n"}, "15": {"problem_id": 4015, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\nif n == 0:\n    print(0)\n    return\n\nif m == 0:\n    print(-1)\n    return\n\nans = 0\n\nfor i in range(n):\n    ans += 1\n    if m[i] == 2:\n        ans += 1\n        m[i] = 2\n    else:\n        ans += 1\n        m[i] = 3\n\nprint(ans)\n"}, "16": {"problem_id": 4016, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\nfor i in range(n):\n    l = list(map(int, input().split()))\n    s = set(l)\n    print(s.intersection(s))\n"}, "17": {"problem_id": 4017, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nprint(('\\n'.join(map(str, a))) if len(a) > 1 else 0)"}, "18": {"problem_id": 4018, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\ns = list(input())\n\n# dp = [[0 for i in range(k)] for j in range(n)]\n\n# dp[0][i] = 1\n# dp[1][i] = 1\n\n# dp[i][j] = 1\n# dp[i][j] = 1\n\n# dp[i][j] = 1\n# dp[i][j] = 1\n\n# dp[i][k] = 1\n# dp[i][k] = 1\n\n# dp[i][j] = 1\n# dp[i][j] = 1\n\n# dp[i][k] = 1\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n# dp[i][k] = 1\n\n"}, "19": {"problem_id": 4019, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, D = map(int, input().split())\nedges = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b = map(int, input().split())\n    edges[a-1].append(b-1)\n    edges[b-1].append(a-1)\n\ndef main():\n    n, m, D = map(int, input().split())\n    edges = [[] for _ in range(n)]\n    for _ in range(m):\n        a, b = map(int, input().split())\n        edges[a-1].append(b-1)\n        edges[b-1].append(a-1)\n    \n    for i in range(n):\n        if i not in edges[i]:\n            print('NO')\n            continue\n        print(edges[i][1] + 1)\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n       "}, "20": {"problem_id": 4020, "answer": "import sys\ninput = sys.stdin.readline\n\nH = int(input())\nM = int(input())\nfor i in range(H):\n    h,m = map(int,input().split())\n    if m%2!=0:\n        print(m)\n    else:\n        print(m+1)\n"}, "21": {"problem_id": 4021, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\na = list(map(int, input().split()))\n\nprint(len(a))"}, "22": {"problem_id": 4022, "answer": "n = int(input())\nl = [int(x) for x in input().split()]\n\ndef calc(x):\n    return x + int(x)\n\ndef is_continuous(x):\n    return x in l\n\ndef calc_max(x):\n    return max(calc(x), calc(x - 1) + calc(x - 1) + calc(x - 1))\n\ndef calc(x):\n    return max(calc(x), calc(x - 1) + calc(x - 1) + calc(x - 1))\n\ndef lcm(x):\n    return x * x // 10 + int(x)\n\ndef lgcd(x, y):\n    return int(x) + int(y)\n\ndef lgcd_max(x, y):\n    return int(x) + int(y)\n\ndef lcm_max(x, y):\n    return int(x) + int(y)\n\ndef lgcd_min(x, y):\n    return int(x) + int(y)\n\ndef lgcd_max(x, y):\n    return int(x) + int(y)\n\ndef lcm_max(x, y):\n    return int(x) + int(y)\n\ndef lgcd_min(x, y):\n    return int(x) + int(y)\n\ndef lgcd_max(x, y):\n    return int(x) + int(y)\n\ndef lcm_max(x, y):\n    return int(x) + int(y)\n\ndef lgcd_min(x, y):\n    return int(x) + int(y)\n\ndef lgcd_max(x, y):\n    return int(x) + int(y)\n\ndef lcm_max(x, y):\n    return int(x) + int(y)\n\ndef lgcd_min(x, y):\n    return int(x) + int(y)\n\ndef lgcd_max(x, y):\n    return int(x) + int(y)\n\ndef lcm_max(x, y):\n    return int(x) + int(y)\n\ndef lgcd_min(x, y):\n    return int(x) + int(y)\n\ndef lgcd_max(x, y):\n    return int(x) + int(y)\n\ndef lcm_max(x, y):\n    return int(x) + int(y)\n\ndef lgcd_min(x, y):\n    return int(x) + int(y)\n\ndef lgcd_max(x, y):\n    return int(x) + int(y)\n\ndef lgcd_max(x, y):\n    return int(x) + int(y)\n\ndef lcm_max(x, y):\n    return int(x) + int(y)\n\ndef lgcd_min(x, y):\n    return int(x) + int(y)\n\ndef lgcd_max(x, y):\n    return int(x) + int(y)\n\ndef lgcd_max(x, y):\n    return int(x) + int(y)\n\ndef lgcd_min(x, y):\n    return int(x) + int(y)\n\ndef lgcd_max(x, y):\n    return int(x) + int(y)\n\ndef lcm_max(x, y):\n    return int(x) + int(y)\n\ndef lgcd_min(x, y):\n    return int(x) + int(y)\n\ndef lgcd_max(x, y):\n    return int(x) + int(y)\n\ndef lcm_max(x, y):\n    return int(x) + int(y)\n\ndef lgcd_min(x, y):\n    return int(x) + int(y)\n\ndef lgcd_max(x"}, "23": {"problem_id": 4023, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef main():\n    # \u5404\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\n    a.sort()\n    # print(a)\n    # print(a[0])\n    # print(a[-1])\n    # print(a[-2])\n    # print(a[-3])\n    # print(a[-4])\n    # print(a[-5])\n    # print(a[-6])\n    # print(a[-7])\n    # print(a[-8])\n    # print(a[-9])\n    # print(a[-10])\n    # print(a[-11])\n    # print(a[-12])\n    # print(a[-13])\n    # print(a[-14])\n    # print(a[-15])\n    # print(a[-16])\n    # print(a[-17])\n    # print(a[-18])\n    # print(a[-19])\n    # print(a[-20])\n    # print(a[-21])\n    # print(a[-22])\n    # print(a[-23])\n    # print(a[-24])\n    # print(a[-0a-1])\n    # print(a[-0a-2])\n    # print(a[-0a-3])\n    # print(a[-0a-4])\n    # print(a[-0a-5])\n    # print(a[-0a-6])\n    # print(a[-0a-7])\n    # print(a[-0a-8])\n    # print(a[-0a-9])\n    # print(a[-0a-a-1])\n    # print(a[-0a-b])\n    # print(a[-0a-c])\n    # print(a[-0a-d])\n    # print(a[-0a-e])\n    # print(a[-0a-f])\n    # print(a[-0a-g])\n    # print(a[-0a-h])\n    # print(a[-0a-i])\n    # print(a[-0a-j])\n    # print(a[-0a-k])\n    # print(a[-0a-l])\n    # print(a[-0a-m])\n    # print(a[-0a-n])\n    # print(a[-0a-o])\n    # print(a[-0a-p])\n    # print(a[-0a-q])\n    # print(a[-0a-r])\n    # print(a[-0a-s])\n    # print(a[-0a-t])\n    # print(a[-0a-u])\n    # print(a[-0a-v])\n    # print(a[-0a-w])\n    # print(a[-0a-x])\n    # print(a[-0a-x[::-1]])\n    # print(a[-0a-x[::-1]])\n    # print(a[-0a-x[::-1]])\n    # print(a[-0a-x[::-1]])\n    # print(a[-0a-x[::-1]])\n    # print(a[-0a-x[::-1]])\n    # print(a[-0a-x[::-1]])\n    # print(a[-0a-x"}, "24": {"problem_id": 4024, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\ns = list(readline().strip())\n\na = []\nfor i in range(n):\n    a.append(list(readline().strip()))\n\na.sort(key=lambda x: x[0])\n\nif len(a) == k:\n    print(-1)\n    return\n\nans = min(a)\n\nif len(a) > k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) > k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k:\n    print(ans)\n    return\n\nans = min(a)\n\nif len(a) == k"}, "25": {"problem_id": 4025, "answer": "def main():\n    a, b, c = list(map(int, input().split()))\n    d = sorted(list(map(int, input().split())))\n    n = 0\n    for i in range(a, b, c):\n        n += d[i]\n        if n == 0:\n            break\n        else:\n            n -= 1\n    print(n)\ndef __starting_point():\n    main()\n\n__starting_point()"}, "26": {"problem_id": 4026, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    board = [[0] * m for i in range(n)]\n    for i in range(n):\n        board[i][0] = 0\n    for i in range(n):\n        board[i][1] = 1\n    for i in range(n):\n        print('NO')\n        \n        \n        \n"}, "27": {"problem_id": 4027, "answer": "n = int(input())\nA = [0]*n\nfor i in range(n):\n    A[i] = list(map(int, input().split()))\n\ns = 0\nfor i in range(n):\n    s += A[i]\n\nprint(s)"}, "28": {"problem_id": 4028, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input()\n\nmod = 10**9 + 7\n\n# dp[i][j] = (1 + dp[i][j] for i in range(n))\ndp = [[0] * (n + 1) for _ in range(n)]\n\nfor i in range(1, n + 1):\n    dp[i][i] = (dp[i][i] + dp[i - 1][i] + 1) % mod\n\n# dp[i][j] = (1 + dp[i][j] for i in range(n))\ndp = [[0] * (n + 1) for _ in range(n)]\n\nfor i in range(1, n + 1):\n    dp[i][i] = (dp[i][i] + dp[i - 1][i] + 1) % mod\n\n# dp[i][j] = (1 + dp[i][j] for i in range(n))\ndp = [[0] * (n + 1) for _ in range(n)]\n\nfor i in range(1, n + 1):\n    dp[i][i] = (dp[i][i] + dp[i - 1][i] + 1) % mod\n\n# dp[i][j] = (1 + dp[i][j] for i in range(n))\ndp = [[0] * (n + 1) for _ in range(n)]\n\nfor i in range(1, n + 1):\n    dp[i][i] = (dp[i][i] + dp[i - 1][i] + 1) % mod\n\n# dp[i][j] = (1 + dp[i][j] for i in range(n))\ndp = [[0] * (n + 1) for _ in range(n)]\n\nfor i in range(1, n + 1):\n    dp[i][i] = (dp[i][i] + dp[i - 1][i] + 1) % mod\n\n# dp[i][j] = (1 + dp[i][j] for i in range(n))\ndp = [[0] * (n + 1) for _ in range(n)]\n\nfor i in range(1, n + 1):\n    dp[i][i] = (dp[i][i] + dp[i - 1][i] + 1) % mod\n\n# dp[i][j] = (1 + dp[i][j] for i in range(n))\ndp = [[0] * (n + 1) for _ in range(n)]\n\nfor i in range(1, n + 1):\n    dp[i][i] = (dp[i][i] + dp[i - 1][i] + 1) % mod\n\n# dp[i][j] = (1 + dp[i][j] for i in range(n))\ndp = [[0] * (n + 1) for _ in range(n)]\n\nfor i in range(1, n + 1):\n    dp[i][i] = (dp[i][i] + dp[i - 1][i] + 1) % mod\n\n# dp[i][j] = (1 + dp[i][j] for i in range(n))\ndp = [[0] * (n + 1) for _ in range(n)]\n\nfor i in range(1, n + 1):\n    dp[i][i] = (dp[i][i] + dp[i - 1][i] + 1) % mod\n\n# dp[i][j] = (1 + dp[i][j] for i in range(n))\ndp = [[0] * (n + 1) for _ in range(n)]\n\nfor i in range(1, n + 1):\n    dp[i][i] = (dp[i][i] + dp[i - 1][i] + 1) % mod\n\n# dp[i][j] = (1 + dp[i][j] for i in range(n))\ndp = [[0] * (n + 1) for _ in range(n)]\n\nfor"}, "29": {"problem_id": 4029, "answer": "n = int(input())\na = [int(i) for i in input().split()]\n\nif n % 2 == 0:\n    print(n // 2)\nelse:\n    print(n // 2)\n"}, "30": {"problem_id": 4030, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input()\n\nd = {}\nfor i in range(n):\n    d[s[i]] = [i]\n\ncnt = 0\n\nfor i in range(n):\n    if s[i] not in d.keys():\n        d[s[i]].append(i)\n        cnt += 1\n\nprint(cnt)\n"}, "31": {"problem_id": 4031, "answer": "n = int(input())\nfor i in range(n):\n    s = input()\n    print('a' in s, 'b' in s, 'c' in s)\n"}, "32": {"problem_id": 4032, "answer": "from sys import stdin\ninput = stdin.readline\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = sorted(a)\nfor i in range(n):\n    if i == 0:\n        print(0)\n    elif i == 1:\n        print(k-1)\n    else:\n        s.append(i)\n\n# print(s)\n# print(s[::-1])\n"}, "33": {"problem_id": 4033, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    a, b = map(int, input().split())\n    if b % 2 == 0:\n        print(a + b)\n    else:\n        print(a + b - 2)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "34": {"problem_id": 4034, "answer": "n = int(input())\ns = input()\nif n % 2 == 0:\n    print('NO')\nelse:\n    print('YES')\n"}, "35": {"problem_id": 4035, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef read_int():\n    return int(readline())\n\ndef read_int_map():\n    return map(int, readline().split())\n\ndef read_int_map_map():\n    return map(int, readline().split())\n\n# Read input\n# map the map of map values\n# map every value in map\n# map every value in map_map\n# map every value in map_map_map\n\nINF = 10**18\n\ndef __starting_point():\n    import sys\n    input = readline().rstrip()\n    print(__starting_point())\n\n__starting_point()"}, "36": {"problem_id": 4036, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\ndef solve(a):\n    ans = 0\n    for i in range(n - 1):\n        ans += a[i]\n    return ans\n\nfor i in range(k, n):\n    print(solve(a) + 1, end=\" \")\n    sys.stdout.write(\"\\n\")\n"}, "37": {"problem_id": 4037, "answer": "import sys\ninput = sys.stdin.readline\n\nn, r = list(map(int, input().split()))\n\nd = dict()\nfor _ in range(n):\n    a, b = list(map(int, input().split()))\n    d[a] += 1\n    d[b] += 1\n\ndef solve(a, b):\n    if a <= b:\n        return 0\n    else:\n        return min(d[a], d[b])\n\ndef solve_pro(a, b):\n    if a <= b:\n        return 0\n    else:\n        return min(d[a], d[b])\n\ndef solve_trav(a, b):\n    if a <= b:\n        return 0\n    else:\n        return min(d[a], d[b])\n\nprint(solve(3, 4))\n"}, "38": {"problem_id": 4038, "answer": ""}, "39": {"problem_id": 4039, "answer": "import sys\ninput = sys.stdin.readline\n\nn, r = map(int, input().split())\np = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    p.append(a * b)\n\np.sort(reverse=True)\n\n# print(p)\n\n# print(p[0])\n\nif len(p) < n:\n    print('NO')\n    return\n\nans = 0\nfor i in range(n):\n    ans += p[i]\n    ans %= n\n\nif ans > ans_max:\n    print('YES')\n    return\n\nprint('\\n'.join(map(str, p)))"}, "40": {"problem_id": 4040, "answer": ""}, "41": {"problem_id": 4041, "answer": "from collections import deque\nn = int(input())\ns = input()\nt = input()\n\nif n <= 3:\n    print(len(t))\n    return\n\nfor i in range(n-1, -1, -1):\n    if s[i]!= t[i]:\n        continue\n    if s[i] == t[i]:\n        print(len(t))\n        return\n\nif n <= 3:\n    print(len(t))\n    return\n\nans = 0\n\nfor i in range(n):\n    if s[i]!= t[i]:\n        continue\n    if s[i] == t[i]:\n        ans += 1\n        return\n\nans += 1\n\nprint(ans)\n"}, "42": {"problem_id": 4042, "answer": "import sys\ndef main():\n    x=sys.stdin.readline().strip()\n    print(x)\n\nmain()\n"}, "43": {"problem_id": 4043, "answer": "from collections import defaultdict\nn,d,k=list(map(int,input().split()))\np=defaultdict(list)\nfor i in range(n):\n    p[i].append(i+1)\n\ndef dfs(u, v):\n    if u==v:\n        print(\"NO\")\n        return\n    dfs(u, v+1)\n    dfs(u+1, v+1)\n    dfs(u, v+1)\n    dfs(u+1, v+1)\n    dfs(u, v+1)\n    dfs(u+1, v+1)\n    dfs(u, v+1)\n    dfs(u+1, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u+1, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+1)\n    dfs(u, v+"}, "44": {"problem_id": 4044, "answer": "import sys\ninput = sys.stdin.readline\n\ndef binary_string(s, n):\n    if n == 0:\n        return s\n    elif s[-1] == s[-1 + n]:\n        return s[:-1]\n    else:\n        return s[:-1] + '0' + s[-1]\n\ndef main():\n    a, b, x = map(int, input().split())\n    print('{:0>9}'.format(a),''.join(map(str, binary_string(a, b))))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "45": {"problem_id": 4045, "answer": "n = int(input())\ns = input()\nt = input()\n\ns = list(s)\nt = list(t)\n\nfor i in range(n):\n    if s[i] == 'a':\n        s.remove(s[i])\n        continue\n    if s[i] == 'b':\n        s.remove(s[i])\n        continue\n    if s[i] == 'c':\n        s.remove(s[i])\n        continue\n    if s[i] == 'd':\n        s.remove(s[i])\n        continue\n    if s[i] == 'e':\n        s.remove(s[i])\n        continue\n    if s[i] == 'f':\n        s.remove(s[i])\n        continue\n    if s[i] == 'g':\n        s.remove(s[i])\n        continue\n    if s[i] == 'h':\n        s.remove(s[i])\n        continue\n    if s[i] == 'i':\n        s.remove(s[i])\n        continue\n    if s[i] == 'j':\n        s.remove(s[i])\n        continue\n    if s[i] == 'k':\n        s.remove(s[i])\n        continue\n    if s[i] == 'l':\n        s.remove(s[i])\n        continue\n    if s[i] =='m':\n        s.remove(s[i])\n        continue\n    if s[i] == 'n':\n        s.remove(s[i])\n        continue\n    if s[i] == 'o':\n        s.remove(s[i])\n        continue\n    if s[i] == 'p':\n        s.remove(s[i])\n        continue\n    if s[i] == 'q':\n        s.remove(s[i])\n        continue\n    if s[i] == 'r':\n        s.remove(s[i])\n        continue\n    if s[i] =='s':\n        s.remove(s[i])\n        continue\n    if s[i] == 't':\n        s.remove(s[i])\n        continue\n    if s[i] == 'u':\n        s.remove(s[i])\n        continue\n    if s[i] == 'v':\n        s.remove(s[i])\n        continue\n    if s[i] == 'w':\n        s.remove(s[i])\n        continue\n    if s[i] == 'x':\n        s.remove(s[i])\n        continue\n    if s[i] == 'y':\n        s.remove(s[i])\n        continue\n    if s[i] == 'z':\n        s.remove(s[i])\n    "}, "46": {"problem_id": 4046, "answer": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import deque\nfrom heapq import heappush, heappop as hp\nfrom functools import reduce\nimport sys\ninput = sys.stdin.readline\n# sys.setrecursionlimit(10**7)\nINF = float(\"inf\")\nMOD = 10**9+7\n\ndef dfs(i, s):\n    nonlocal INF\n    if i == len(s):\n        return 0\n    i += 1\n    if s[i] == '1':\n        return 1\n    else:\n        ans = min(dfs(i, s[i] + 1), dfs(i, s[i] + 1))\n        ans = min(ans, dfs(i + 1, s[i]))\n        ans = min(ans, dfs(i + 1, s[i]))\n        return ans\n\ndef dfs_bisect(i, s):\n    nonlocal INF\n    if i == len(s):\n        return 0\n    if s[i] == '0':\n        return 1\n    else:\n        ans = min(dfs(i, s[i] + 1), dfs(i + 1, s[i]))\n        ans = min(ans, dfs(i + 1, s[i]))\n        return ans\n\ndef dfs_br(i, s):\n    nonlocal INF\n    if i == len(s):\n        return 0\n    if s[i] == '0':\n        return 1\n    else:\n        ans = min(dfs(i, s[i] + 1), dfs(i + 1, s[i]))\n        ans = min(ans, dfs(i + 1, s[i]))\n        return ans\n\ndef dfs_mm(i, s):\n    nonlocal INF\n    if i == len(s):\n        return 0\n    if s[i] == '0':\n        return 1\n    else:\n        ans = min(dfs(i, s[i] + 1), dfs(i + 1, s[i]))\n        ans = min(ans, dfs(i + 1, s[i]))\n        return ans\n\ndef dfs_mm_bisect(i, s):\n    nonlocal INF\n    if i == len(s):\n        return 0\n    if s[i] == '0':\n        return 1\n    else:\n        ans = min(dfs(i, s[i] + 1), dfs(i + 1, s[i]))\n        ans = min(ans, dfs(i + 1, s[i]))\n        return ans\n\ndef dfs_p(i, s):\n    nonlocal INF\n    if i == len(s):\n        return 0\n    if s[i] == '0':\n        return 1\n    else:\n        ans = min(dfs(i, s[i] + 1), dfs(i + 1, s[i]))\n        ans = min(ans, dfs(i + 1, s[i]))\n        return ans\n\ndef dfs_mm_p(i, s):\n    nonlocal INF\n    if i == len(s):\n        return 0\n    if s[i] == '"}, "47": {"problem_id": 4047, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nA = list(map(int, readline().split()))\n\ndef dfs(x, A, A[0]) :\n    if x == A[0] :\n        return 1\n    elif x == A[0] - 1 :\n        return 0\n    else :\n        ans = min(dfs(x+1, A, A[0]) + dfs(x+1, A, A[1]) + dfs(x+1, A, A[0] - 1))\n        return ans\n\ndfs(0, A, A[0])\n\nprint(n - ans)\n"}, "48": {"problem_id": 4048, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\na = list(map(int, readline().split()))\n\nM = 1\nfor i in range(n):\n    M *= i\n\nprint(M)\n"}, "49": {"problem_id": 4049, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    ans = min(a[0], b[0])\n    for i in range(1, n):\n        if a[i] + b[i] > ans:\n            ans = a[i] + b[i]\n        else:\n            break\n    print(ans)\n\nmain()\n"}, "50": {"problem_id": 4050, "answer": "from itertools import accumulate\nfrom operator import itemgetter\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(accumulate(a))\n__starting_point()"}, "51": {"problem_id": 4051, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\na = list(map(int, readline().split()))\n\ndef dfs(stack, i):\n    if stack[i] < i:\n        return False\n    stack[i] = stack[i] - i\n    return True\n\nres = []\nfor i in range(n):\n    res.append(dfs(stack, i))\n\nprint('YES' if res[-1] == 'NO' else 'NO')\n\n# print('\\n'.join(res))\n"}, "52": {"problem_id": 4052, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    s = input().strip()\n    t = input().strip()\n    n = len(s)\n    \n    moves = []\n    for i in range(n):\n        if s[i] not in t:\n            moves.append(t[s[i]])\n        else:\n            if moves[-1] == 0:\n                print(-1)\n                continue\n            moves.append(0)\n            t[s[i]] = 0\n            moves.append(moves[-1] + 1)\n            t[s[i]] = 0\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves.append(moves[-1] + 1)\n            moves"}, "53": {"problem_id": 4053, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list(map(int, input().split()))\n\nif n < 2:\n    print('PPSS')\n    return\n\nfor i in range(n-1):\n    s.append(chr(ord('a') + i) + 'P')\n    s.pop()\n\n#print(s)\n\nans = []\n\nfor i in range(n):\n    ans.append(s[i].count('P'))\n\nans.sort(reverse=True)\n\n#print(ans)\n\nif len(ans) == 1:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 2:\n    print('SPPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 3:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 4:\n    print('SPPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 5:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 6:\n    print('SPPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 7:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 8:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 9:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 10:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 11:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 12:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 13:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 14:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 15:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 16:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 17:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 18:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 19:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 20:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 21:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 22:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print(ans)\n\nif len(ans) == 23:\n    print('PPSS')\n    return\n\nans.reverse()\n\n#print("}, "54": {"problem_id": 4054, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    a = list(map(int, input().split()))\n    print(len(set(a)))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "55": {"problem_id": 4055, "answer": "n = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(min(a[0], a[-1] - 1) + 2)\n"}, "56": {"problem_id": 4056, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n-1):\n    if a[i] % a[i] == 0:\n        print(i)\n        break\n\n#print(a)\n\n#print(a.count(0))\n\n#print(a.count(1))\n\n#print(a.count(2))\n\n#print(a.count(3))\n\n#print(a.count(5))\n\n#print(a.count(7))\n\n#print(a.count(9))\n\n#print(a.count(16))\n\n#print(a.count(17))\n\n#print(a.count(21))\n\n#print(a.count(22))\n\n#print(a.count(23))\n\n#print(a.count(25))\n\n#print(a.count(26))\n\n#print(a.count(27))\n\n#print(a.count(28))\n\n#print(a.count(29))\n\n#print(a.count(30))\n\n#print(a.count(31))\n\n#print(a.count(32))\n\n#print(a.count(33))\n\n#print(a.count(34))\n\n#print(a.count(35))\n\n#print(a.count(36))\n\n#print(a.count(37))\n\n#print(a.count(38))\n\n#print(a.count(39))\n\n#print(a.count(40))\n\n#print(a.count(41))\n\n#print(a.count(42))\n\n#print(a.count(43))\n\n#print(a.count(44))\n\n#print(a.count(45))\n\n#print(a.count(46))\n\n#print(a.count(47))\n\n#print(a.count(48))\n\n#print(a.count(49))\n\n#print(a.count(50))\n\n#print(a.count(51))\n\n#print(a.count(52))\n\n#print(a.count(53))\n\n#print(a.count(54))\n\n#print(a.count(55))\n\n#print(a.count(56))\n\n#print(a.count(57))\n\n#print(a.count(58))\n\n#print(a.count(59))\n\n#print(a.count(60))\n\n#print(a.count(61))\n\n#print(a.count(62))\n\n#print(a.count(63))\n\n#print(a.count(64))\n\n#print(a.count(65))\n\n#print(a.count(66))\n\n#print(a.count(67))\n\n#print(a.count(68))\n\n#print(a.count(69))\n\n#print(a.count(70))\n\n#print(a.count(71))\n\n#print(a.count(72))\n\n#print(a.count(73))\n\n#print(a.count(74))\n\n#print(a.count(75))\n\n#print(a.count(76))\n\n#print(a.count(77))\n\n#print(a.count(78))\n\n#print(a.count(79))\n\n#print(a.count(80))\n\n#print(a.count(81))\n\n#print(a.count(82))\n\n#print(a.count(83))\n\n#print(a.count(84))\n\n#print(a.count(85))\n\n#print(a.count(86))\n\n#print(a.count(87))\n\n#print(a.count(88))\n\n#print(a.count(89))\n\n#print(a.count(90))\n\n#print(a.count(91))\n\n#print(a.count(92))\n\n#print(a.count(93))\n\n#print(a.count(94))\n\n#print(a.count(95))\n\n#print(a.count(96))\n\n#print(a.count(97))\n\n#print(a.count(98))\n\n"}, "57": {"problem_id": 4057, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef dp(l, p):\n    return max(0, p - l)\n\ndp(6, 0)\n\nfor i in range(n - 1):\n    dp(i, 0)\n\nprint(dp(6, 1))"}, "58": {"problem_id": 4058, "answer": "import sys\ninput = sys.stdin.readline\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\n# a.sort()\n# a.reverse()\n\n# d = [[] for _ in range(n)]\n# d[0][i] = 1\n# d[i][j] = 1\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n# d[i][j] = min(d[i-1][j] + 1 for i in range(n))\n\n# d[i][j] = min(d[i-1][j] + 1 for i in"}, "59": {"problem_id": 4059, "answer": "N = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\nprint(len(A)//2 + len(B)//2)"}, "60": {"problem_id": 4060, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    s = input()\n    print(len(s))\n    for i in range(n-1):\n        if s[i] == '(':\n            s.pop()\n        elif s[i] == ')':\n            s.pop()\n        else:\n            s.pop()\n    print(len(s))\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n     "}, "61": {"problem_id": 4061, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    s = input().strip()\n    t = input().strip()\n    n = len(s)\n    ans = 0\n    for i in range(n):\n        if s[i] == t[i]:\n            ans += 1\n        else:\n            ans += 1\n    print(ans)\n\ndef __starting_point():\n    solve()\n\n__starting_point()"}, "62": {"problem_id": 4062, "answer": "import sys\nsys.setrecursionlimit(10**6)\ndef main():\n    INF = float('inf')\n    INFN = int(sys.stdin.readline())\n    \n    for _ in range(INF):\n        x, y = map(int, sys.stdin.readline().split())\n        if x < y:\n            x, y = y, x\n        elif y < x:\n            x, y = x, y\n        else:\n            x, y = y, x\n        \n        if x < 10**9:\n            print(x * y)\n        else:\n            print(x * y + y)\n            \n        \n        \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   "}, "63": {"problem_id": 4063, "answer": "def solve(n):\n    \"\"\"\n    Solidates an integer number d_i (the higher, the harder)\n    and divides it by K (the smaller, the more harder).\n    Constraints:\n        n <= 10^5\n    \"\"\"\n    return int(n ** 0.5)\n\ndef solve_prod(n):\n    \"\"\"\n    Solves an integer number d_i (the higher, the harder)\n    and divides it by K (the smaller, the more harder).\n    Constraints:\n        n <= 10^5\n    \"\"\"\n    return int(n ** 0.5) - int(n ** 0.5 - 1)\n\nclass CodeforcesTask:\n    def __init__(self, d_i, k = 5):\n        self.d_i = d_i\n        self.k = k\n        self.cba = 0\n        \n    def solve(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        if n < 2:\n            return 0\n        elif n % 2 == 0:\n            return self.cba\n        else:\n            return self.d_i - self.k\n        \n    def divide(self, k):\n        \"\"\"\n        :type k: int\n        :rtype: int\n        \"\"\"\n        if self.k % 2 == 0:\n            return self.cba\n        elif self.k % 2 == 1:\n            return self.d_i - self.k\n        else:\n            return self.d_i - self.k + self.cba\n        \n    def is_prime(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: bool\n        \"\"\"\n        return self.d_i % 2 == 0 and self.cba % x % 2 == 0\n        \n    def is_leetcode(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: bool\n        \"\"\"\n        return self.k % 2 == 0 and self.cba % x % 2 == 0\n        \n    def is_leetcode_completer(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: bool\n        \"\"\"\n        return self.k % 2 == 0 and self.cba % x % 2 == 0\n        \n    def solve(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        if n < 2:\n            return 0\n        elif n % 2 == 0:\n            return self.cba\n        else:\n           "}, "64": {"problem_id": 4064, "answer": "import math\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\n# a.sort()\n# print(a)\n\n# if a[0] == 0:\n#     print(0)\n#     return\n\n#     if a[0] < h:\n#         a[0] = a[1] + 1\n#         a[1] = a[2] + 1\n#         a[2] = a[3] + 1\n#         a[3] = a[4] + 1\n#         a[4] = a[5] + 1\n#         a[5] = a[6] + 1\n#         a[6] = a[7] + 1\n#         a[7] = a[8] + 1\n#         a[8] = a[9] + 1\n#         a[9] = a[10] + 1\n\n#     elif a[0] < h:\n#         a[0] = a[1] + 1\n#         a[1] = a[2] + 1\n#         a[2] = a[3] + 1\n#         a[3] = a[4] + 1\n#         a[4] = a[5] + 1\n#         a[5] = a[6] + 1\n#         a[6] = a[7] + 1\n#         a[7] = a[8] + 1\n#         a[8] = a[9] + 1\n\n#     elif a[0] < l:\n#         a[0] = a[1] + 1\n#         a[1] = a[2] + 1\n#         a[2] = a[3] + 1\n#         a[3] = a[4] + 1\n#         a[4] = a[5] + 1\n#         a[5] = a[6] + 1\n#         a[6] = a[7] + 1\n#         a[7] = a[8] + 1\n#         a[8] = a[9] + 1\n\n#     elif a[0] < r:\n#         a[0] = a[1] + 1\n#         a[1] = a[2] + 1\n#         a[2] = a[3] + 1\n#         a[3] = a[4] + 1\n#         a[4] = a[5] + 1\n#         a[5] = a[6] + 1\n#         a[6] = a[7] + 1\n#         a[7] = a[8] + 1\n#         a[8] = a[9] + 1\n\n#     elif a[0] < l:\n#         a[0] = a[1] + 1\n#         a[1] = a[2] + 1\n#         a[2] = a[3] + 1\n#         a[3] = a[4] + 1\n#        "}, "65": {"problem_id": 4065, "answer": "n = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a.append(i)\nprint(max(a))"}, "66": {"problem_id": 4066, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\n\ndef lcm(a, b):\n    return min(a[0] + b[0], a[1] + b[1])\n\ndef solve(a, b):\n    c = 0\n    for i in range(n):\n        if a[i] == b[i]:\n            c += 1\n        else:\n            c += 2\n    return c\n\nprint(solve(A, A[0]))\n"}, "67": {"problem_id": 4067, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip()\n\ndef check(s):\n    if s.count('2') == 0:\n        return True\n    elif s.count('0') == 0:\n        return False\n    else:\n        return False\n\ndef main():\n    n = int(input())\n    s = input().rstrip()\n    print(check(s))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "68": {"problem_id": 4068, "answer": "import sys\nread = sys.stdin.readline\n\nMOD = 10**9+7\n\ndef main():\n    N, M = map(int, read().split())\n    a = list(map(int, read().split()))\n    ans = 0\n    for i in range(N):\n        ans = (ans+a[i])%MOD\n    print(ans)\n\nmain()\n"}, "69": {"problem_id": 4069, "answer": "import sys\ninput = sys.stdin.readline\n\nclass SegmentTree:\n    def __init__(self, n):\n        self.n = n\n        self.root = [-1]*self.n\n        self.data = [float('inf')]*self.n\n        self.data[0] = 0\n        self.data[self.n-1] = 0\n        \n    def insert(self, val):\n        val = val.swapcase()\n        self.data[val] = val\n        \n    def update(self, val, x):\n        self.data[val] = x\n        \n    def update_data(self, x):\n        self.data[x] = x\n        \n    def __lt__(self, other):\n        return self.__lt__(other)\n    \n    def __le__(self, other):\n        return self.__le__(other)\n    \n    def __eq__(self, other):\n        return self.__eq__(other)\n    \n    def __str__(self):\n        return self.__str__(self.n)\n\nN = int(input())\nSeg = SegmentTree(N)\n\nSeg.insert(0, 0)\nSeg.insert(0, 1)\nSeg.insert(0, 2)\n\n# Driver code\nfor i in range(1, N):\n    print((int(input())))\n"}, "70": {"problem_id": 4070, "answer": "# cook your dish here\nn = int(input())\na = [0]*n\nfor i in range(n):\n    a[i] = 1\nprint(a[0])"}, "71": {"problem_id": 4071, "answer": "import math\na = input()\nprint(27)\n"}, "72": {"problem_id": 4072, "answer": "a=int(input())\nprint(a)\n"}, "73": {"problem_id": 4073, "answer": "import sys\nn = int(input())\nfor i in range(n):\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(a.count(1))\n"}, "74": {"problem_id": 4074, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    print(k - 1)\n"}, "75": {"problem_id": 4075, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\n\n# \u533a\u9593\u53ef\u80fd\u601d\u8def\ndef LI(): return list(map(int, input().split()))\ndef LI_(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LS(): return list(input().split())\ndef I(): return int(input())\ndef F(): return float(input())\n\ndef main():\n    N, M = I()\n    s = LI()\n    for i in range(N):\n        s.append(LI())\n    print(sum(map(int, s)))\n\n\nmain()\n"}, "76": {"problem_id": 4076, "answer": "import sys\ninput = sys.stdin.readline\n\nA, B = map(int, input().split())\nH, M = map(int, input().split())\n\n# A = int(A)\n# B = int(B)\n# H = int(H)\n# M = int(M)\n# N = int(N)\n# i = 0\n# j = 0\n# ans = 0\n# for i in range(H):\n#     ans += math.sqrt(B[i] + H[j])\n#     if ans > 0:\n#         ans = min(ans, B[i] + H[j])\n#     else:\n#         ans = min(ans, B[i] + H[j])\n#     j = i\n# print(ans)\n\n# print(H)\n# print(M)\n# print(N)\n# print(i)\n# print(j)\n# print(ans)\n\n# sys.stdout = open(\"input.txt\", \"r\")\n# sys.stdout.write(\"\\n\")\n# sys.stdin = open(\"input.txt\", \"w\")\n"}, "77": {"problem_id": 4077, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\na = list(map(int, readline().split()))\n\nm = a[0]\nfor i in range(1, n):\n    m = min(m, a[i])\nprint(len(m))"}, "78": {"problem_id": 4078, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nseg = [0] * (n + 1)\nseg[0] = 1\nfor i in range(1, n + 1):\n    seg[i] = max(seg[i - 1], seg[i] - a[i])\n\ndef max(x, y):\n    return max(x, y)\n\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    if x > y:\n        x, y = y, x\n    seg[x] = max(seg[x], seg[y]) - 1 - 1\n\nprint(max(seg))\n"}, "79": {"problem_id": 4079, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nn = int(input())\nA = list(map(int, input().split()))\nfor i in range(n):\n    A.append(list(map(int, input().split())))\nprint('No'.join(A))"}, "80": {"problem_id": 4080, "answer": "# -*- coding: utf-8 -*-\n\nfrom collections import Counter\n\nn, m = list(map(int, input().split()))\na = [set() for _ in range(n)]\n\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n    a[l].add(r)\n    a[r].add(l)\n\ncounter = Counter(a)\n\nfor i in range(m):\n    if counter[a[i]]:\n        del counter[a[i]]\n        counter[a[i]].append(i)\n\nprint(len(set(map(Counter, counter[a[i]]))))\nfor i in range(n):\n    print(max(counter[a[i]], counter[a[i] + 1] - min(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - min(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - min(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - min(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - min(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - min(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - min(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - min(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter[a[i] + 1] - max(counter[a[i]], counter"}, "81": {"problem_id": 4081, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = dict()\nfor i in range(n):\n    d[a[i]] = i\n\nans = []\n\nfor i in range(n-1):\n    if d[a[i]] == 'L':\n        ans.append(i+1)\n    elif d[a[i]] == 'R':\n        ans.append(i+1)\n    else:\n        ans.append(i+1)\n\nans.sort()\n\nprint('L' if ans[-1] == 'L' else 'R')\n\nfor i in ans:\n    print('L' if i == 'R' else 'R')\n"}, "82": {"problem_id": 4082, "answer": "n = int(input())\na = list(map(int, input().split()))\n\n# print(a)\n# print(a.count(max(a)))\n\nfor i in range(n):\n    a[i] = min(a[i], a[i+1] + 1)\n\n# print(a)\n\nans = 0\n\n# print(a)\n\nfor i in range(n-1, -1, -1):\n    ans += max(a[i] - a[i+1], a[i+1] - a[i+2])\n\nprint(ans)\n"}, "83": {"problem_id": 4083, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\n')\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = min(a)\nfor i in range(k):\n    ans = min(ans, k - i + 1)\nprint(ans)\n"}, "84": {"problem_id": 4084, "answer": "def main():\n N,A,B = map(int, input().split())\n l = []\n for i in range(A+B):\n  l.append(N%10)\n print(l[0])\n"}, "85": {"problem_id": 4085, "answer": "import sys\nimport math\ndef input():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    n = int(input())\n    d = [int(i) for i in input().split()]\n    ans = math.inf\n    for i in range(n):\n        ans = min(ans, d[i] - d[i-1])\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "86": {"problem_id": 4086, "answer": "from collections import deque\nn = int(input())\na = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    a.append(i)\nans.append(0)\nprint(' '.join(map(str, ans[::-1])))\n"}, "87": {"problem_id": 4087, "answer": "from bisect import *\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(str(i))\nfor i in range(n):\n    print(l[i])\n"}, "88": {"problem_id": 4088, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        s = input()\n        l = len(s)\n        print(''.join(sorted(l, reverse=True)))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "89": {"problem_id": 4089, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\ndef f(n):\n    if n == 0:\n        return 1\n    elif n < 1:\n        return 0\n    else:\n        return 1 + f(n - 1)\n\nfrom itertools import combinations\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\ndef __starting_point():\n    N = int(input())\n    print((f(N)))\n\n__starting_point()"}, "90": {"problem_id": 4090, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\n\n# a = list(map(int, readline().split()))\n\n# b = list(map(int, readline().split()))\n\n# c = list(map(int, readline().split()))\n\n# d = list(map(int, readline().split()))\n\n# e = list(map(int, readline().split()))\n\n# f = list(map(int, readline().split()))\n\n# l = list(map(int, readline().split()))\n\n# r = list(map(int, readline().split()))\n\n# t = list(map(int, readline().split()))\n\n# s = list(map(int, readline().split()))\n\n# d = list(map(int, readline().split()))\n\n# e = list(map(int, readline().split()))\n\n# f = list(map(int, readline().split()))\n\n# l = list(map(int, readline().split()))\n\n# r = list(map(int, readline().split()))\n\n# t = list(map(int, readline().split()))\n\n# s = list(map(int, readline().split()))\n\n# d = list(map(int, readline().split()))\n\n# e = list(map(int, readline().split()))\n\n# f = list(map(int, readline().split()))\n\n# l = list(map(int, readline().split()))\n\n# r = list(map(int, readline().split()))\n\n# t = list(map(int, readline().split()))\n\n# s = list(map(int, readline().split()))\n\n# d = list(map(int, readline().split()))\n\n# e = list(map(int, readline().split()))\n\n# f = list(map(int, readline().split()))\n\n# l = list(map(int, readline().split()))\n\n# r = list(map(int, readline().split()))\n\n# t = list(map(int, readline().split()))\n\n# s = list(map(int, readline().split()))\n\n# d = list(map(int, readline().split()))\n\n# e = list(map(int, readline().split()))\n\n# f = list(map(int, readline().split()))\n\n# l = list(map(int, readline().split()))\n\n# r = list(map(int, readline().split()))\n\n# t = list(map(int, readline().split()))\n\n# s = list(map(int, readline().split()))\n\n# d = list(map(int, readline().split()))\n\n# e = list(map(int, readline().split()))\n\n# f = list(map(int, readline().split()))\n\n# l = list(map(int, readline().split()))\n\n# r = list(map(int, readline().split()))\n\n# t = list(map(int, readline().split()))\n\n# s = list(map(int, readline().split()))\n\n# d = list(map(int, readline().split()))\n\n# e = list(map(int, readline().split()))\n\n# f = list(map(int, readline().split()))\n\n# l = list(map(int, readline().split()))\n\n# r = list(map(int, readline().split()))\n\n# t = list(map(int, readline().split()))\n\n# s = list(map(int, readline().split()))\n\n# d = list(map(int, readline().split()))\n\n# e = list(map(int, readline().split()))\n\n# f = list(map(int, readline().split()))\n\n# l = list(map(int, readline().split()))\n\n# r = list(map(int, readline().split()))\n\n# t = list(map(int, readline().split()))\n\n# s = list(map(int, readline().split()"}, "91": {"problem_id": 4091, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = [int(x) for x in input().split()]\n\ndef dp(i, val):\n    if val == 0:\n        return 0\n    elif val < val[0]:\n        return 1\n    else:\n        return max(a[i] + dp(i + 1, val[1:]), a[i] + dp(i + 1, val[1:]))\n\nfor i in range(n):\n    val = list(map(int, input().split()))\n    a[i] = val[0]\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp(i + 1, val[1:])\n    dp"}, "92": {"problem_id": 4092, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef dfs(i):\n    if i == -1:\n        return 0\n    elif i == 0:\n        return 1\n    else:\n        ans = 0\n        for j in range(i + 1, n):\n            ans += dfs(j)\n        return ans\n\nprint(n - a.count(0))\n"}, "93": {"problem_id": 4093, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    print(max(a) + m)"}, "94": {"problem_id": 4094, "answer": "import sys\nreadline = sys.stdin.readline\nread = lambda: list(map(int, readline().split()))\n\nn = int(readline())\n\nfor i in range(n):\n    a = list(map(int, readline().split()))\n    print(a[0] + a[1])\n"}, "95": {"problem_id": 4095, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\np = list(map(int, input().split()))\n\nans = [0] * m\n\nfor i in range(n):\n    ans[p[i]] += 1\n\nfor i in range(m):\n    ans[p[i+1] - p[i] - 1] += 1\n\nprint(len(ans))\n"}, "96": {"problem_id": 4096, "answer": ""}, "97": {"problem_id": 4097, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nif n == 1:\n    print(-1)\n    return\n\nfor i in range(n-1):\n    if a[i] == 0:\n        a[i] = 1\n        continue\n    elif a[i] == 1:\n        a[i] = 2\n        continue\n    elif a[i] == 2:\n        a[i] = 3\n        continue\n    elif a[i] == 3:\n        a[i] = 4\n        continue\n    elif a[i] == 4:\n        a[i] = 5\n        continue\n    elif a[i] == 5:\n        a[i] = 6\n        continue\n    elif a[i] == 6:\n        a[i] = 7\n        continue\n    elif a[i] == 7:\n        a[i] = 8\n        continue\n    elif a[i] == 8:\n        a[i] = 9\n        continue\n    elif a[i] == 9:\n        a[i] = 10\n        continue\n    elif a[i] == 10:\n        a[i] = 11\n        continue\n    elif a[i] == 11:\n        a[i] = 12\n        continue\n    elif a[i] == 12:\n        a[i] = 13\n        continue\n    elif a[i] == 13:\n        a[i] = 14\n        continue\n    elif a[i] == 14:\n        a[i] = 15\n        continue\n    elif a[i] == 15:\n        a[i] = 16\n        continue\n    elif a[i] == 16:\n        a[i] = 17\n        continue\n    elif a[i] == 17:\n        a[i] = 18\n        continue\n    elif a[i] == 18:\n        a[i] = 19\n        continue\n    elif a[i] == 19:\n        a[i] = 20\n        continue\n    elif a[i] == 20:\n        a[i] = 21\n        continue\n    elif a[i] == 21:\n        a[i] = 22\n        continue\n    elif a[i] == 22:\n        a[i] = 24\n        continue\n    elif a[i] == 24:\n        a[i] = 25\n        continue\n    elif a[i] == 25:\n        a[i] = 26\n        continue\n    elif a[i] == 26:\n        a[i] = 27\n        continue\n    elif a[i] == 27:\n        a[i"}, "98": {"problem_id": 4098, "answer": "import sys\ninput = sys.stdin.readline\nn, k = list(map(int, input().split()))\nA = [int(x) for x in input().split()]\n\ndef solve():\n    A.sort()\n    d = {}\n    for i in range(n):\n        d[A[i]] = i\n        A[i] += 1\n    for i in range(k):\n        d[A[i]] = max(A[i] - 5, 0)\n        A[i] -= 1\n        if A[i] < 5:\n            d[A[i]] = 0\n        elif A[i] > 5:\n            d[A[i]] = 1\n        else:\n            d[A[i]] = d[A[i] - 1] + 1\n            d[A[i] - 1] = d[A[i] + 1] + 1\n            d[A[i] + 1] = d[A[i] + 2] + 1\n            d[A[i] + 2] = d[A[i] + 3] + 1\n            d[A[i] + 3] = d[A[i] + 4] + 1\n            d[A[i] + 4] = d[A[i] + 5] + 1\n            d[A[i] + 5] = d[A[i] + 6] + 1\n            d[A[i] + 6] = d[A[i] + 7] + 1\n            d[A[i] + 7] = d[A[i] + 8] + 1\n            d[A[i] + 8] = d[A[i] + 9] + 1\n            d[A[i] + 9] = d[A[i] + 10] + 1\n            d[A[i] + 10] = d[A[i] + 11] + 1\n            d[A[i] + 11] = d[A[i] + 12] + 1\n            d[A[i] + 12] = d[A[i] + 13] + 1\n            d[A[i] + 13] = d[A[i] + 14] + 1\n            d[A[i] + 14] = d[A[i] + 15] + 1\n            d[A[i] + 15] = d[A[i] + 16] + 1\n            d[A[i] + 16] = d[A[i] + 17] + 1\n            d[A[i] + 17] = d[A[i] + 18] + 1\n            d[A[i] + 18] = d[A[i] + 19] + 1\n            d[A[i] + 19] = d[A[i] + 20] + 1\n            d[A[i] + 20] = d[A[i] + 21] + 1\n            d[A[i] + 21] = d[A[i] + 22] + 1\n            d[A[i] + 22] = d[A[i] +"}, "99": {"problem_id": 4099, "answer": "n,k = map(int,input().split())\nA = list(map(int,input().split()))\nprint(sum(A)-k)"}, "100": {"problem_id": 4100, "answer": "def main():\n    N, K, Q = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    score = [0] * N\n    for i in range(K):\n        score[A[i] - 1] = -1\n    for i in range(Q):\n        if i not in score:\n            print(\"No\")\n        else:\n            print(\"Yes\")\n\nmain()\n"}, "101": {"problem_id": 4101, "answer": "def main():\n    n, m = list(map(int, input().split()))\n    a = [0] * (n + 1)\n    for i in range(n):\n        a[i] = 1\n    print('NO')\n    for i in range(n):\n        print('1', end ='' * (n - 1) +'' * (m - 1))\n    for i in range(m):\n        print('0', end ='' * (n - 1) +'' * (m - 1))\n    for i in range(n):\n        print('1', end ='' * (n - 1) +'' * (m - 1))\n    for i in range(m):\n        print('1', end ='' * (n - 1) +'' * (m - 1))\n    for i in range(n):\n        print('1', end ='' * (n - 1) +'' * (m - 1))\n    for i in range(m):\n        print('1', end ='' * (n - 1) +'' * (m - 1))\n    print()\nmain()\n"}, "102": {"problem_id": 4102, "answer": "n = str.strip()\nn = list(n)\nn = list(enumerate(n))\nprint(\"Yes\" if len(n) <= 10 else \"No\")\n"}, "103": {"problem_id": 4103, "answer": "import sys\ninput = sys.stdin.readline\n\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\n\ndef main():\n    n, b, a = map(int, input().split())\n    s.append(n)\n    s.append(b)\n    s.append(a)\n    ans = 0\n    for i in range(n):\n        ans += max(0, s[i] - s[ans])\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "104": {"problem_id": 4104, "answer": "from sys import stdin, stdout\nfrom itertools import permutations\ndef input():\n    return stdin.readline().split('\\n')\ndef print(x):\n    return '\\n'.join(map(str, x))\ndef lmp():\n    return list(mp())\ndef rmp():\n    return map(int, input().rstrip('0'))\ndef smp():\n    return map(str, input().rstrip('0'))\ndef s3():\n    return map(int, input().rstrip('0'))\ndef s4():\n    return map(str, input().rstrip('0'))\ndef s5():\n    return map(str, input().rstrip('0'))\ndef s6():\n    return map(str, input().rstrip('0'))\ndef s7():\n    return map(str, input().rstrip('0'))\ndef main():\n    n = int(input())\n    if n == 1:\n        print('0')\n    elif n == 2:\n        print('1')\n    else:\n        l = [int(i) for i in input().split(' ')]\n        for i in range(n-1):\n            l.append(l[-1]*(ord(i)-ord('0'))+l[-2]*(ord(i)-ord('0'))+l[-3])\n        print(l[-1]*(ord(l[-1])-ord('0'))+l[-2]*(ord(l[-2])-ord('0'))+l[-3]*(ord(l[-3])-ord('0')))\n        print(l[-1]*(ord(l[-1])-ord('0'))+l[-2]*(ord(l[-2])-ord('0'))+l[-3]*(ord(l[-3])-ord('0')))\n        print(l[-1]*(ord(l[-1])-ord('0'))+l[-2]*(ord(l[-2])-ord('0'))+l[-3]*(ord(l[-3])-ord('0')))\n        print(l[-1]*(ord(l[-1])-ord('0'))+l[-2]*(ord(l[-2])-ord('0'))+l[-3]*(ord(l[-3])-ord('0')))\n        print(l[-1]*(ord(l[-1])-ord('0'))+l[-2]*(ord(l[-2])-ord('0'))+l[-3]*(ord(l[-3])-ord('0')))\n        print(l[-1]*(ord(l[-1])-ord('0'))+l[-2]*(ord(l[-2])-ord('0'))+l[-3]*(ord(l[-3])-ord('0')))\n        print(l[-1]*(ord(l[-1])-ord('0'))+l[-2]*(ord(l[-2])-ord('0'))+l[-3]*(ord(l[-3])-ord('0')))\n        print(l[-1]*(ord(l[-1])-ord('0'))+l[-2]*(ord(l[-2])-ord('0'))+l[-3]*(ord(l[-3])-ord('0')))\n        print(l[-1]*(ord(l[-1])-ord('0'))+l[-2]*(ord(l[-2])-ord('0'))+l[-3]*(ord(l"}, "105": {"problem_id": 4105, "answer": "import bisect\n\ndef main():\n    n, k = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    for i in range(n):\n        for j in range(k):\n            if i == j:\n                l[i] = 1\n            else:\n                l[i] = 2\n                \n    for i in range(n):\n        for j in range(k):\n            if i == j:\n                l[i] = 1\n            else:\n                l[i] = 2\n                \n    for i in range(n):\n        for j in range(k):\n            if i == j:\n                l[i] = 1\n            else:\n                l[i] = 2\n                \n    for i in range(n):\n        for j in range(k):\n            if i == j:\n                l[i] = 1\n            else:\n                l[i] = 2\n                \n    for i in range(n):\n        for j in range(k):\n            if i == j:\n                l[i] = 1\n            else:\n                l[i] = 2\n                \n    for i in range(n):\n        for j in range(k):\n            if i == j:\n                l[i] = 1\n            else:\n                l[i] = 2\n                \n    for i in range(n):\n        for j in range(k):\n            if i == j:\n                l[i] = 1\n            else:\n                l[i] = 2\n                \n    for i in range(n):\n        for j in range(k):\n            if i == j:\n                l[i] = 1\n            else:\n                l[i] = 2\n                \n    for i in range(n):\n        for j in range(k):\n         "}, "106": {"problem_id": 4106, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in range(k):\n    b[i] = max(b[i-1], a[i])\nprint(max(b))"}, "107": {"problem_id": 4107, "answer": "n, k = map(int, input().split())\ns = input()\nr = n-1\nfor i in range(k):\n    s = s.replace('1','').replace('0','')\n    if s[-1] == '1':\n        s = s[-1] + '0' * (n-1)\n    else:\n        s = s[:-1] + '1' * (n-1)\nprint(min(s, k))"}, "108": {"problem_id": 4108, "answer": "import sys\nreadline = sys.stdin.readline\n\ns = list(map(str,readline().split()))\nt = list(map(str,readline().split()))\n\ndef main():\n    s = s.replace(' ', '')\n    t = t.replace(' ', '')\n    \n    if s[0] == 'a':\n        print('Yes')\n    elif s[0] == 'z':\n        print('Yes')\n    else:\n        print('No')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "109": {"problem_id": 4109, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N = int(readline())\n    A = [int(x) for x in readline().split()]\n    print(A[N-1] + A[N-2])\n\nmain()\n"}, "110": {"problem_id": 4110, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve(p, g, perfect):\n    a = 0\n    b = 0\n    for i in range(len(p)):\n        if p[i] < perfect:\n            a += b\n        elif p[i] > perfect:\n            b += a\n        else:\n            break\n    return a\n\ndef __starting_point():\n    solve(0, 0, 100)\n    print(solve(0, 0, 100))\n__starting_point()"}, "111": {"problem_id": 4111, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    candies = [0]*n\n    for i in range(n):\n        candies[i] = sum(a[:i])\n    ans = 0\n    for i in range(n-1,-1,-1):\n        ans += sum(candies[i] if i%2 else 0 for i in range(n))\n    print(ans)\n\nmain()\n"}, "112": {"problem_id": 4112, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in range(k):\n    b[i] = max(b[i-1], a[i])\nprint(max(b))"}, "113": {"problem_id": 4113, "answer": "import sys\nread = sys.stdin.readline\nn = int(read())\ndoughnut = 0\nfor i in range(n):\n    if(n%2==0):\n        doughnut += 1\n    else:\n        doughnut += 1\nprint(doughnut)"}, "114": {"problem_id": 4114, "answer": "import sys\nsys.setrecursionlimit(10**6)\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LI_(): return list(map(int, sys.stdin.readline().split()))\ndef LF(): return list(map(float, sys.stdin.readline().split()))\ndef LS(): return list(sys.stdin.readline())\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef lcm(a, b): return abs(a * b) // gcd(a, b)\ndef ceil(a, b): return b // g\n\nN = I()\nx = LI()\ny = LI()\n#print(x,y)\n#print(x,y)\n#print(x,y)\n\n#x = lcm(x, y)\n#y = lcm(x, y)\n#print(x,y)\n#print(x,y)\n\n#x = lcm(x, y)\n#y = lcm(x, y)\n#print(x,y)\n#print(x,y)\n\n#x = lcm(x, y)\n#y = lcm(x, y)\n#print(x,y)\n#print(x,y)\n#print(x,y)\n\n#x = lcm(x, y)\n#y = lcm(x, y)\n#print(x,y)\n#print(x,y)\n#print(x,y)\n\n#x = lcm(x, y)\n#y = lcm(x, y)\n#print(x,y)\n#print(x,y)\n#print(x,y)\n\n#x = lcm(x, y)\n#y = lcm(x, y)\n#print(x,y)\n#print(x,y)\n#print(x,y)\n#print(x,y)\n\n#x = lcm(x, y)\n#y = lcm(x, y)\n#print(x,y)\n#print(x,y)\n#print(x,y)\n#print(x,y)\n"}, "115": {"problem_id": 4115, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    S = input()\n    n = len(S)\n    h = 0\n    for i in range(n):\n        if S[i] == '1':\n            h += 1\n        else:\n            break\n    print(h)\n\nmain()\n"}, "116": {"problem_id": 4116, "answer": "import math\nn = int(input())\nfor i in range(n):\n    print(math.factorial(i))"}, "117": {"problem_id": 4117, "answer": "N = int(input())\nl = list(map(int, input().split()))\n\ndef triples(i, j, k):\n    return 0 if i == j == k else triples(i+1, j+1, k)\n\nfor i in range(N):\n    l.append(list(map(int, input().split())))\n\nprint((triples(N, N-1, N-2, N-3)))\n"}, "118": {"problem_id": 4118, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    A,B=map(int,input().split())\n    print(A*B)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "119": {"problem_id": 4119, "answer": "N,M=map(int,input().split())\nX=list(map(int,input().split()))\nM=M-1\nX.sort()\nans=0\nfor i in range(N):\n    ans+=X[i]\nprint(ans)"}, "120": {"problem_id": 4120, "answer": "n, m, k = map(int, input().split())\nedges = [[] for i in range(n)]\nfor i in range(m):\n    a, b = map(int, input().split())\n    edges[a].append(b)\n    edges[b].append(a)\n\ndef dp(i, path):\n    if i == n - 1:\n        return path\n    path[i] = 1\n    for j in range(i + 1, n):\n        path[j] = min(path[j], path[i] + dp(i, path))\n    return path\n\nans = 0\nfor i in range(k + 1):\n    if dp(i, path) and path[i]!= path[i - 1]:\n        ans += 1\nprint(ans)"}, "121": {"problem_id": 4121, "answer": "n = int(input())\na = list(map(int, input().split()))\nprint('YES' if a[0]==1 else 'NO')\n"}, "122": {"problem_id": 4122, "answer": "import sys\ninput = sys.stdin.readline\n\nH, n = list(map(int, input().split()))\n\nd = [-1] + [list(map(int, input().split()))] * (H-1)\n\nfor i in range(H):\n    d[i] = max(d[i], 0)\n\nans = []\n\nfor i in range(H):\n    ans.append(-1)\n\nprint((' '.join(map(str, ans))))\n"}, "123": {"problem_id": 4123, "answer": "n = int(input())\ns = list(map(str, input().split()))\nfor i in range(n):\n    s.insert(0, chr(i+97))\nprint(''.join(s))"}, "124": {"problem_id": 4124, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    s = input()\n    t = input()\n    \n    # print(s, t)\n    # print(s.rstrip() if s.rstrip() else \"\")\n    # print(t.rstrip() if t.rstrip() else \"est\")\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    \n    # print(s.count(\"\\n\"))\n    # print(s.count(\"\\n\"))\n  "}, "125": {"problem_id": 4125, "answer": "import sys\nreadline = sys.stdin.readline\n\nN,X = map(int,readline().split())\n\nd = list(map(int,readline().split()))\n\nans = max(d)\n\nfor i in range(N):\n    ans = max(ans,d[i] + max(d[i] for j in range(i+1,N+1) if j!=i-1) + d[i] for i in range(N))\n\nprint(ans)"}, "126": {"problem_id": 4126, "answer": "s = input()\nn = len(s)\na = [0]*n\nfor i in range(n):\n    a[ord(s[i])-97] = s[i]\nfor i in range(n-1, -1, -1):\n    if s[i]=='a':\n        print('Yes')\n    else:\n        print('No')"}, "127": {"problem_id": 4127, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n n = int(readline())\n A = list(map(int, readline().split()))\n print(f'{A} \\b')\n return\n\ndef __starting_point():\n main()\n\n__starting_point()"}, "128": {"problem_id": 4128, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        print(0)\n    elif n == 2:\n        print(1)\n    else:\n        print(0)\n"}, "129": {"problem_id": 4129, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, s = list(map(int, input().split()))\n\ndef main():\n    n, m, s = list(map(int, input().split()))\n    cities = [0] * (n + 1)\n    for i in range(m):\n        cities[i] = 0\n    for i in range(n + 1, 0, -1):\n        for j in range(i + 1, n + 1, -1):\n            cities[j] = 0\n            for k in range(i + 1, n + 1, -1):\n                cities[j] += cities[k]\n                if cities[j] > 0:\n                    cities[j] -= cities[k]\n                    if cities[j] == 0:\n                        cities[j] = 0\n    print(len(cities))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "130": {"problem_id": 4130, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(max(a) + max(b))"}, "131": {"problem_id": 4131, "answer": "def main():\n    N, M = list(map(int, input().split()))\n    ID = list(map(int, input().split()))\n    for i, j in enumerate(ID):\n        if i == 0:\n            continue\n        else:\n            print(i, j)\n    print()\n\nmain()\n"}, "132": {"problem_id": 4132, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nfrom collections import defaultdict as dd\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom itertools import permutations\nfrom functools import reduce,cmp_to_key\nfrom operator import itemgetter\nfrom copy import deepcopy\nfrom queue import Queue\nfrom time import perf_counter\n\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(reduce(itemgetter(0), A))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "133": {"problem_id": 4133, "answer": "s = input().split()\n\ndef solve(a, b):\n    if len(a) == 0:\n        return 0\n    elif len(b) == 0:\n        return 1\n    else:\n        return max(solve(a, b), solve(a, b + 1))\n\nsolve(0, 0)\nprint(solve(0, 9))"}, "134": {"problem_id": 4134, "answer": "from sys import stdin,stdout\ninput = stdin.readline\nn,m,k=list(map(int,input().split()))\ngrid=[[0]*(k+1) for i in range(n+1)]\nfor i in range(1,n+1):\n    grid[i][0]=1\n    grid[i][1]=1\nfor i in range(1,n+1):\n    for j in range(1,k+1):\n        if grid[i][j]=='^':\n            grid[i][j]=(grid[i][j]*grid[i][j-1])%(k+1)\n        elif grid[i][j]=='xor':\n            grid[i][j]=(grid[i][j]^grid[i][j-1])%(k+1)\n        elif grid[i][j]=='^':\n            grid[i][j]=(grid[i][j]*grid[i-1][j-1])%(k+1)\n        elif grid[i][j]=='xor':\n            grid[i][j]=(grid[i][j]*grid[i-1][j-1])%(k+1)\n        else:\n            print(k)\n            break\n    else:\n        print(k+1)\n        break\n"}, "135": {"problem_id": 4135, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nt = input()\n\n#print(t)\n\n#print(t)\n\nans = []\n\nfor i in range(n):\n    ans.append(t.count(i))\n\n#print(ans)\n\nprint(''.join(map(str, ans)))\n"}, "136": {"problem_id": 4136, "answer": "import sys\nimport math\ndef main():\n    a, b = list(map(int, sys.stdin.readline().split()))\n    print(a + b)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "137": {"problem_id": 4137, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    # Read line and return the number of test cases\n    input = lambda: readline().rstrip()\n    n = int(readline())\n    print(main())\n\nmain()\n"}, "138": {"problem_id": 4138, "answer": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    k = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, int(k[0]) + 1):\n        ans += 10 ** i\n        k.append(k[-1] * i)\n    print(ans)\n"}, "139": {"problem_id": 4139, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n \"\"\"\n    You are given an integer N.\n    N is an integer.\n    \"\"\"\n n = int(readline())\n ans = 0\n for i in range(n):\n  ans += i\n print(ans)\n\nmain()\n"}, "140": {"problem_id": 4140, "answer": "from collections import Counter\nimport sys\nsys.setrecursionlimit(10**6)\nINF = 10**20\nMOD = 10**9+7\n# input = lambda s: int(s)**(2**(2+1))\ninput = lambda: sys.stdin.readline().rstrip(\"\\n\")\n\ndef is_prime(n):\n    if n % 2 == 0:\n        return False\n    elif n % 3 == 0:\n        return True\n    else:\n        return False\n\ndef main():\n    S = [1]*(10**5+1)\n    for i in range(2, 10**5+1):\n        S[i] = is_prime(S[i-1])\n    print(len(S))\n\nmain()\n"}, "141": {"problem_id": 4141, "answer": "import sys\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\n\ndef main():\n    N = int(readline())\n    A = list(map(int, readline().split()))\n    print(A[0])\n    for i in range(1, N):\n        if A[i] % 3 == 0:\n            print(A[i], end=\"\")\n        else:\n            print(A[i], end=\"\")\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n "}, "142": {"problem_id": 4142, "answer": "import sys\nsys.setrecursionlimit(10**6)\ndef input(): return sys.stdin.readline().strip()\ndef l(): return input()[:-1]\ndef r(): return list(map(int, input().split()))\ndef s(): return sys.stdin.readline().strip()\ndef u(): return input()\ndef v(): return list(map(int, input().split()))\ndef w(): return sys.stdin.readline().strip()\nMOD = 1000000007\n\n# \u5143\u70b9\u5185\u90e8\u306e\u3082\u306e\u3092\u4f7f\u3046\n# mod = 1000000007\n\n# \u4eca\u56de\u59cb\u6b21\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u540c\u3058\u306a\u304c\u3089\u3001\u3053\u306e\u3088\u3046\u306b\u30bd\u30fc\u30c8\u3055\u308c\u308b\n# \u3057\u3070\u3057\u3044\u306e\u3067\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod * 50 <= mod * 60 <= mod * 90 <= mod * 1000000007\n\n# \u4eca\u56de\u59cb\u6b21\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u540c\u3058\u306a\u304c\u3089\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod * 50 <= mod * 60 <= mod * 1000000007\n\n# \u4eca\u56de\u59cb\u6b21\u6570\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u540c\u3058\u306a\u304c\u3089\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod * 1000000007\n\n# \u4eca\u56de\u59cb\u6b21\u307e\u3067\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u540c\u3058\u306a\u304c\u3089\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod * 1000000007\n\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u540c\u3058\u306a\u304c\u3089\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod * 1000000007\n\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u3042\u308b\u3051\u3069\u3069\u3076\u3089\u304b\u3089\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod * 1000000007\n\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u3042\u308b\u3051\u3069\u3076\u3089\u304b\u3089\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod * 1000000007\n\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u3084\u305d\u3053\u6570\u306a\u306e\u3067\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod * 1000000007\n\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u3042\u308b\u3051\u3069\u3069\u3076\u3089\u304b\u3089\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod * 1000000007\n\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u540c\u3058\u306a\u3089\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod * 1000000007\n\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u3042\u308b\u3051\u3069\u3069\u3076\u3089\u304b\u3089\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod * 1000000007\n\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u540c\u3058\u306a\u3089\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod * 1000000007\n\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u540c\u3058\u306a\u3089\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod * 1000000007\n\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u65b9\u304c\u3084\u305d\u3053\u6570\u306a\u306e\u3067\u3001mod * 2 <= mod <= MOD * 6 <= mod * 7 <= mod * 10 <= mod * 20 <= mod * 30 <= mod * 40 <= mod *"}, "143": {"problem_id": 4143, "answer": "import sys\ninput = sys.stdin.readline\n\nn, a, b, c, d, e = list(map(int, input().split()))\n\ncity = [int(x) for x in input().split()]\n\ndef main():\n    city = city[0]\n    train = list(map(int, input().split()))\n    bus = list(map(int, input().split()))\n    \n    for i in range(len(city)):\n        if train[i] == city[i]:\n            continue\n        train[i] = city[i]\n        bus[i] = train[i] + 1\n        \n    ans = 0\n    \n    for i in range(len(bus)):\n        ans += min(b, c)\n        ans += min(d, e)\n        \n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "144": {"problem_id": 4144, "answer": "from bisect import bisect_left\nN = int(input())\nprint(N%10)"}, "145": {"problem_id": 4145, "answer": "import math\ndef prime_factors(n):\n    prime = [2]*(n+1)\n    for i in range(2,n+1):\n        prime.append(i)\n    return prime\nprimes = prime_factors(10**5)\nprint(primes)"}, "146": {"problem_id": 4146, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nv = list(map(int, input().split()))\n\n#print(v)\n\n#print(v.count('1'))\n\n#print(v.count('2'))\n\n#print(v.count('3'))\n\n#print(v.count('4'))\n\n#print(v.count('5'))\n\n#print(v.count('6'))\n\n#print(v.count('7'))\n\n#print(v.count('8'))\n\n#print(v.count('9'))\n\n#print(v.count('10'))\n\n#print(v.count('11'))\n\n#print(v.count('12'))\n\n#print(v.count('13'))\n\n#print(v.count('14'))\n\n#print(v.count('15'))\n\n#print(v.count('16'))\n\n#print(v.count('17'))\n\n#print(v.count('18'))\n\n#print(v.count('19'))\n\n#print(v.count('20'))\n\n#print(v.count('21'))\n\n#print(v.count('22'))\n\n#print(v.count('23'))\n\n#print(v.count('24'))\n\n#print(v.count('25'))\n\n#print(v.count('26'))\n\n#print(v.count('27'))\n\n#print(v.count('28'))\n\n#print(v.count('29'))\n\n#print(v.count('30'))\n\n#print(v.count('31'))\n\n#print(v.count('32'))\n\n#print(v.count('33'))\n\n#print(v.count('34'))\n\n#print(v.count('35'))\n\n#print(v.count('36'))\n\n#print(v.count('37'))\n\n#print(v.count('38'))\n\n#print(v.count('39'))\n\n#print(v.count('40'))\n\n#print(v.count('41'))\n\n#print(v.count('42'))\n\n#print(v.count('43'))\n\n#print(v.count('44'))\n\n#print(v.count('45'))\n\n#print(v.count('45'))\n\n#print(v.count('50'))\n\n#print(v.count('50'))\n\n#print(v.count('50''))\n\n#print(v.count('51'))\n\n#print(v.count('51''))\n\n#print(v.count('52'))\n\n#print(v.count('53'))\n\n#print(v.count('54'))\n\n#print(v.count('55'))\n\n#print(v.count('56'))\n\n#print(v.count('57'))\n\n#print(v.count('58'))\n\n#print(v.count('59'))\n\n#print(v.count('60'))\n\n#print(v.count('61'))\n\n#print(v.count('62'))\n\n#print(v.count('63'))\n\n#print(v.count('64'))\n\n#print(v.count('65'))\n\n#print(v.count('66'))\n\n#print(v.count('67'))\n\n#print(v.count('68'))\n\n#print(v.count('69'))\n\n#print(v.count('70'))\n\n#print(v.count('71'))\n\n#print(v.count('72'))\n\n#print(v.count('73'))\n\n#print(v.count('76'))\n\n#print(v.count('77'))\n\n#print(v.count('78'))\n\n#print(v.count('79'))\n\n#print(v.count('79''))\n\n#print(v.count('80'))\n\n#print(v.count('81'))\n\n#print(v.count('82'))\n\n#print(v.count"}, "147": {"problem_id": 4147, "answer": "import sys\ninput = sys.stdin.readline\n\nN, A, B = map(int, input().split())\nC = 0\nfor i in range(N):\n    l_1 = list(map(int, input().split()))\n    l_2 = list(map(int, input().split()))\n    l_3 = list(map(int, input().split()))\n    l_4 = list(map(int, input().split()))\n    l_5 = list(map(int, input().split()))\n    l_6 = list(map(int, input().split()))\n    l_7 = list(map(int, input().split()))\n    l_8 = list(map(int, input().split()))\n    l_9 = list(map(int, input().split()))\n    l_10 = list(map(int, input().split()))\n    l_11 = list(map(int, input().split()))\n    l_12 = list(map(int, input().split()))\n    l_13 = list(map(int, input().split()))\n    l_14 = list(map(int, input().split()))\n    l_15 = list(map(int, input().split()))\n    l_16 = list(map(int, input().split()))\n    l_17 = list(map(int, input().split()))\n    l_18 = list(map(int, input().split()))\n    l_19 = list(map(int, input().split()))\n    l_20 = list(map(int, input().split()))\n    l_21 = list(map(int, input().split()))\n    l_22 = list(map(int, input().split()))\n    l_23 = list(map(int, input().split()))\n    l_24 = list(map(int, input().split()))\n    l_25 = list(map(int, input().split()))\n    l_26 = list(map(int, input().split()))\n    l_27 = list(map(int, input().split()))\n    l_28 = list(map(int, input().split()))\n    l_29 = list(map(int, input().split()))\n    l_30 = list(map(int, input().split()))\n    l_31 = list(map(int, input().split()))\n    l_32 = list(map(int, input().split()))\n    l_33 = list(map(int, input().split()))\n    l_34 = list(map(int, input().split()))\n    l_35 = list(map(int, input().split()))\n    l_36 = list(map(int, input().split()))\n    l_37 = list(map(int, input().split()))\n    l_38 = list(map(int, input().split()))\n    l_39 = list(map(int, input().split()))\n    l_40 = list(map(int, input().split()))\n    l_41 = list(map(int, input().split()))\n    l_42 = list(map(int, input().split()))\n    l_43 = list(map(int, input().split()))\n    l_44 = list(map(int, input().split()))\n    l_45 = list(map(int, input().split()))\n    l_46 = list(map(int, input().split()))\n    l_47 = list(map(int, input().split()))\n    l_48 = list(map(int, input().split()))\n    l_49 = list(map(int, input().split()))\n    l_50 = list(map(int, input().split()))\n    l_51 = list(map(int, input().split()))\n    l_52 = list(map(int, input"}, "148": {"problem_id": 4148, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\nS = list(map(ord, S))\n\ndef shifter(x):\n    return int(x.swapcase() or '0')\n\ndef lcm(x, y):\n    return x*y // gcd(x, y)\n\ndef sll(x):\n    return x*y // gcd(x, y)\n\ndef is_inc(x):\n    return x % 26\n\ndef shifter(x):\n    return int(x) % 26\n\ndef lcm(x, y):\n    return x*y // gcd(x, y)\n\ndef sll(x):\n    return x*y // gcd(x, y)\n\ndef is_dec(x):\n    return x % 26\n\ndef shifter(x):\n    return int(x) % 26\n\ndef lcm(x, y):\n    return x*y // gcd(x, y)\n\ndef sll(x):\n    return x*y // gcd(x, y)\n\ndef is_dec(x):\n    return x % 26\n\ndef shifter(x):\n    return int(x) % 26\n\ndef lcm(x, y):\n    return x*y // gcd(x, y)\n\ndef sll(x):\n    return x*y // gcd(x, y)\n\ndef is_inc(x):\n    return x % 26\n\ndef shifter(x):\n    return int(x) % 26\n\ndef lcm(x, y):\n    return x*y // gcd(x, y)\n\ndef sll(x):\n    return x*y // gcd(x, y)\n\ndef is_dec(x):\n    return x % 26\n\ndef shifter(x):\n    return int(x) % 26\n\ndef lcm(x, y):\n    return x*y // gcd(x, y)\n\ndef sll(x):\n    return x*y // gcd(x, y)\n\ndef is_dec(x):\n    return x % 26\n\ndef shifter(x):\n    return int(x) % 26\n\ndef lcm(x, y):\n    return x*y // gcd(x, y)\n\ndef sll(x):\n    return x*y // gcd(x, y)\n\ndef is_dec(x):\n    return x % 26\n\ndef shifter(x):\n    return int(x) % 26\n\ndef lcm(x, y):\n    return x*y // gcd(x, y)\n\ndef sll(x):\n    return x*y // gcd(x, y)\n\ndef is_dec(x):\n    return x % 26\n\ndef shifter(x):\n    return int(x) % 26\n\ndef lcm(x, y):\n    return x*y // gcd(x, y)\n\ndef sll(x):\n    return x*y // gcd(x, y)\n\ndef is_dec(x):\n    return x % 26\n\ndef shifter(x):\n    return int(x) % 26\n\ndef lcm(x, y):\n    return x*y // gcd(x, y)\n\ndef sll(x):\n    return x*y // gcd(x, y)\n\ndef is_dec(x):\n    return x % 26\n\ndef shifter(x):\n    return int(x) % 26\n\ndef lcm(x, y):\n    return x*y // gcd(x, y)\n\ndef sll(x):\n    return x*y // gcd(x, y)\n\ndef is_dec(x):\n    return x % 26\n\ndef shifter(x):\n    return int(x) % 26\n\ndef lcm(x, y):\n"}, "149": {"problem_id": 4149, "answer": "from bisect import *\nfrom heapq import *\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef isprime(n):\n    if n % 2 == 0:\n        return False\n    i = 2\n    while i * i <= n:\n        if n % i == 0:\n            return False\n        i += 1\n    return True\n\ndef factors(n):\n    if n == 1:\n        return [1]\n    else:\n        factors.append(factors[-1] * n)\n        for i in range(1, n + 1):\n            if isprime(i):\n                break\n        else:\n            factors.append(factors[i] * n)\n    return factors\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    factors = factors[0]\n    for i in range(1, n + 1):\n        if isprime(i):\n            factors.append(factors[i] * i)\n            b.append(i)\n    print(factors[-1] * b[-1])\n\nmain()\n"}, "150": {"problem_id": 4150, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nc = []\nfor i in range(n):\n    if i not in c:\n        c.append(i)\n    elif c[i] < k:\n        c.append(c[i])\n\nc.sort(reverse=True)\n\nans = ''.join(c)\n\nfor i in range(len(c)):\n    if ans[i] == '1':\n        ans = '1'\n    else:\n        ans = '0'\n\nprint(ans)"}, "151": {"problem_id": 4151, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nMOD = 998244353\n\ndef monotonic_renumerations(a):\n    return [monotonic_renumerations(a[i] + a[i + 1]) for i in range(n)]\n\ndef monotonic_renumerations_mod(a):\n    return [monotonic_renumerations_mod(a[i] + a[i + 1]) for i in range(n)]\n\ndef is_monotonic(a):\n    return len(set(a)) == 1\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(monotonic_renumerations_mod(a))\n\nsolve()"}, "152": {"problem_id": 4152, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    x = a[i]\n    if x == 0:\n        print(0)\n        continue\n    else:\n        print(n-i-1)\n        continue\n    \n    if x % 2 == 0:\n        print(n-i-1)\n        continue\n    else:\n        print(n-i-1)\n        continue\n    \n    if x % 2 == 1:\n        print(n-i-1)\n        continue\n    else:\n        print(n-i-1)\n        continue\n    \n    if x % 2 == 2:\n        print(n-i-1)\n        continue\n    else:\n        print(n-i-1)\n        continue\n    \n    if x % 2 == 3:\n        print(n-i-1)\n        continue\n    else:\n        print(n-i-1)\n        continue\n    \n    if x % 2 == 4:\n        print(n-i-1)\n        continue\n    else:\n        print(n-i-1)\n        continue\n    \n    if x % 2 == 5:\n        print(n-i-1)\n        continue\n    else:\n        print(n-i-1)\n        continue\n    \n    if x % 2 == 6:\n        print(n-i-1)\n        continue\n    else:\n        print(n-i-1)\n        continue\n    \n    if x % 2 == 7:\n        print(n-i-1)\n        continue\n    else:\n        print(n-i-1)\n        continue\n    \n    if x % 2 == 8:\n        print(n-i-1)\n        continue\n    else:\n        print(n-i-1)\n        continue\n    \n    if x % 2 == 9:\n        print(n-i-1)\n        continue\n    else:\n        print(n-i-1)\n        continue\n    \n    if x % 2 == 10:\n        print(n-i-1)\n        continue\n    else:\n        print(n-i-1)\n        continue\n    \n    if x % 2 == 11:\n        print(n-i-1)\n        continue\n    else:\n        print(n-i-1)\n        continue\n    \n    if x % 2 == 12:\n        print(n-i-1)\n        continue\n    else"}, "153": {"problem_id": 4153, "answer": "def main():\n    S = list(map(int, input().split()))\n    n = len(S)\n    for i in range(n):\n        if S[i] == '1':\n            S[i] = 1\n        else:\n            S[i] = 0\n    print(len(S))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "154": {"problem_id": 4154, "answer": "N, M = map(int, input().split())\nL, R = map(int, input().split())\nif M == 1:\n    print(1)\nelse:\n    count = 0\n    for i in range(N):\n        if L[i] == R[i]:\n            count += 1\n    print(count)"}, "155": {"problem_id": 4155, "answer": "# coding: utf-8\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\nH = [0] + list(map(int, readline().split()))\n\nfor i in range(n):\n    H[i] = H[i + 1] + H[i]\n\n# print H\n\nans = 0\n\ndef dfs(i, l):\n    if l > 0:\n        ans += 1\n        l -= 1\n    else:\n        if l == 0:\n            return 1\n        else:\n            return 0\n        \ndfs(i, l)\n\nprint(ans)"}, "156": {"problem_id": 4156, "answer": "import sys\ninput = sys.stdin.readline\n\nn,w=list(map(int,input().split()))\na=list(map(int,input().split()))\n\nif n==1:\n    print(0)\n    return\n\nfor i in range(n):\n    x=a[i]\n    if x==-1:\n        print(0)\n        return\n\nans=[]\nfor i in range(n):\n    ans.append(x-a[i])\n\nans.sort(reverse=True)\n\nprint(len(ans))\n"}, "157": {"problem_id": 4157, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\nA = [int(x) for x in readline().split()]\n\ndef f(x):\n    return x % 2 == 0\n\nA.sort(key=f)\n\ns = set()\nfor i in range(n-1):\n    x = A[i]\n    s.add(x)\n\nans = []\n\nfor i in range(n-1):\n    ans.append(f(i) + 1)\n\nprint(*ans)"}, "158": {"problem_id": 4158, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nx = list(map(int, input().split()))\n\nfor i in range(n):\n    x.append(list(map(int, input().split())))\n\nans = []\n\nfor i in x:\n    ans.append(i+x[i])\n\nans.sort(reverse=True)\n\nans.reverse()\n\nprint(' '.join(map(str, ans)))\n"}, "159": {"problem_id": 4159, "answer": "def main():\n    A,B=map(int,input().split())\n    n=A//B\n    if n==0:\n        print(0)\n    elif n==1:\n        print(n//B)\n    else:\n        for i in range(n//B):\n            if A[i]==A[i+1] and A[i]==A[i+K-1]:\n                break\n        else:\n            print(n//B)\ndef __starting_point():\n    main()\n__starting_point()"}, "160": {"problem_id": 4160, "answer": "# cook your dish here\nimport math\ndef main():\n    n = int(input())\n    if n == 1:\n        print(n)\n    return\n\ndef __starting_point():\n    main()\n__starting_point()"}, "161": {"problem_id": 4161, "answer": "import sys\ninput = sys.stdin.readline\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef gcd_mod(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef gcd_mod(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef __starting_point():\n    n = int(input())\n    print(gcd_mod(n, n))\n__starting_point()"}, "162": {"problem_id": 4162, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\na = list(map(int, input().split()))\nm = a[0]\nans = 0\nfor i in range(1, N):\n    m = m >> 1\n    ans += m\nprint(ans)"}, "163": {"problem_id": 4163, "answer": "import sys\ninput = sys.stdin.readline\nINF = 10**18\nMOD = 10**9+7\nsys.setrecursionlimit(10**5)\nINF = inf\nIINF = IINF\ndef LI(): return [int(x) for x in input().split()]\ndef LI_int(): return [int(x)-1 for x in input().split()]\ndef IINF(): return IINF()\ndef LI_int_int(): return [int(x)-1 for x in input().split()]\ndef main():\n    n = IINF()\n    d = LI_int_int()\n    print(str(d))\n    print(*d)\n    \n    \n    \n"}, "164": {"problem_id": 4164, "answer": "import sys\nreadline = sys.stdin.readline\nreadline_f = sys.stdin.readline\n\ndef main():\n    r = int(readline())\n    if r > 1:\n        print((r **.5) + 1)\n        return\n    for i in range(1, r + 1):\n        print((i **.5) + 1, end = \" \")\n        r -= i * i\n        print((i **.5) + 1, end = \" \")\n        print((i **.5) + 1, end = \" \")\n        \n        \ndef __starting_point():\n    main()\n__starting_point()"}, "165": {"problem_id": 4165, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nL = [int(i) for i in input().split()]\n\ndef rec(x, y):\n    if x+y == N:\n        return True\n    else:\n        return False\n\ndef lcm(x, y):\n    return (x*y)//(y*(x+y))\n\ndef dist(x, y):\n    return (x-y)//2\n\ndef solve(x, y, L, L_1, L_2):\n    ans = 0\n    for i in range(N):\n        if L[i] < L[i+1]:\n            ans += 1\n        elif L[i] > L[i+1]:\n            ans += 1\n    return ans\n\nprint(solve(4, N, L, L_1, L_2))\n"}, "166": {"problem_id": 4166, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, M = list(map(int, readline().split()))\ns = list(map(int, readline().split()))\n\ndef solve():\n    n, m = divmod(10, M)\n    ans = []\n    for i in range(n):\n        if m == 0:\n            ans.append(i)\n        else:\n            ans.append(9 * i)\n    print(*ans)\n\n\ndef __starting_point():\n    solve()\n\n__starting_point()"}, "167": {"problem_id": 4167, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nN, K = list(map(int, readline().split()))\n\nt = list(map(int, read().split()))\n\nfor i in range(N):\n    t.append(i**K)\n\nans = 0\nfor i in range(len(t)):\n    if t[i] % K == 0:\n        ans += 1\nprint(ans)"}, "168": {"problem_id": 4168, "answer": "# https://atc.algorithms.com/blog/fast-and-easy-for-python-and-crystal/article/TILEBUG/\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nN = int(readline())\n\ns = list(map(str, list(N)))\n\nfor i in range(N):\n    if s[i] == 0:\n        s.append(i)\n\nprint(' '.join(s))"}, "169": {"problem_id": 4169, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nN, M = list(map(int, readline().split()))\nA = list(map(int, readline().split()))\n\n# \u5168\u90e8\u306e\u30b3\u30b9\u30c8\u3092\u53d6\u5f97\ndef input():\n    return (int(readline()) or 1)\n\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u51fa\u529b\ndef __starting_point():\n    A = list(map(int, readline().split()))\n    print(min(A))\n__starting_point()"}, "170": {"problem_id": 4170, "answer": "n = int(input())\n\ndef f(n, h):\n    if n == 0:\n        return 1\n    if n == 1:\n        return h\n    if n < h:\n        return f(n - 1, h)\n    else:\n        return f(n - 1, h + 1)\n\ndef main():\n    n = int(input())\n    h = list(map(int, input().split()))\n    print(f(n, h))\n\nmain()\n"}, "171": {"problem_id": 4171, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef f(x):\n    return x - x % 2\n\n# f(x) = min(a) + f(x - 1)\n# f(x) = min(a) + f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f(x - 1) + f(x - 1) - f("}, "172": {"problem_id": 4172, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nn = int(input())\n\na.sort()\n\n#print(a)\n\n#print(a[0])\n\nfor i in range(n):\n    print(a[i], end ='')\n    \n"}, "173": {"problem_id": 4173, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9 + 7\n\ndef inp(): return int(input())\ndef inpl(): return map(int, input().split())\ndef lcm(a, b): return (a*b)//gcd(a, b)\ndef lfck(s): return [f'{s}' for f in range(1, int(s**0.5)+1)]\ndef l2n(n): return [int(x) for x in input().split()]\ndef l3n(n): return [int(x) for x in input().split()]\n\n\ndef solve():\n    n = int(input())\n    a, b, c = inpl()\n    print(a*b)\n    print(c*a)\n\ndef __starting_point():\n    solve()\n__starting_point()"}, "174": {"problem_id": 4174, "answer": "import sys\nN,X = map(int,input().split())\nL = list(map(int,sys.stdin.readline().split()))\nB = []\nfor i in range(N):\n    X = int(sys.stdin.readline())\n    B.append(X*10**(N-1))\n\nB.sort()\nprint(B[-1])"}, "175": {"problem_id": 4175, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nW = [list(map(int, input().split())) for i in range(N)]\n\ndef main():\n    N = N\n    W = [list(map(int, input().split())) for i in range(N)]\n    print('Yes')\n    for i in range(N):\n        print(W[i])\n        if W[i] == W[N-1]:\n            print('No')\n        elif W[N-1] == W[N]:\n            print('Yes')\n        else:\n            print('No')\n            \ndef __starting_point():\n    main()\n\n__starting_point()"}, "176": {"problem_id": 4176, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    A, B = map(int, readline().split())\n    A = tuple(A)\n    B = tuple(B)\n    print((min(A, B)))\n\nmain()\n"}, "177": {"problem_id": 4177, "answer": "import sys\nsys.setrecursionlimit(10**5)\ndef read_int():\n    return int(sys.stdin.readline())\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\ndef read_ints_f():\n    return list(map(int, sys.stdin.readline().split()))\nread_int = lambda s: sys.stdin.readline().strip()\nread_ints = lambda s: sys.stdin.readline().strip().split()\n\n#--------------------------------------\n}, "178": {"problem_id": 4178, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nH = list(map(int, readline().split()))\n\n# \u914d\u5206\u6570\u636e\u4e3a 1 \u7684\u8fb9\u70b9\uff0c \u662f\u4e0a\u9762\u91cd\u5b9a\u4e49\ndef update(x, y):\n    if x >= y:\n        x, y = y, x\n    else:\n        x, y = x + 1, y + 1\n    return x, y\n\n# \u524d\u4e00\u4e2a\u6587\u5b57\u5bf9\ufffd\u5411\u53ef\u80fd\u5230\u6700\u5c11\u4e2a\u6570\u5b57\u7b97\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6587\u5b57\u5bf9\ufffd\u5411\u53ef\u80fd\u5230\u6700\u5c11\u4e2a\u6570\u5b57\u7b97\u53d1\u51fa\u73b0\u503c\uff0c\u800c\u662f\u4e00\u4e2a\u6587\u5b57\u5bf9\ufffd\u5411\u53ef\u80fd\u5230\u6700\u5c11\u4e2a\u6570\u5b57\u7b97\u53d1\u51fa\u73b0\u503c\ndef query(x, y):\n    if x >= y:\n        return 0\n    else:\n        return 1\n\nfor x in range(N):\n    update(x, N)\n\nn = int(readline())\nH = list(map(int, readline().split()))\n\nprint(query(n, H))"}, "179": {"problem_id": 4179, "answer": "from bisect import bisect_left as bl\nfrom itertools import permutations as p\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nMOD = 10**9+7\nINF = 10**18\neps = 10**-7\ndef main():\n    n, m = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    print(bisect_left(A, B) - bisect_left(B, C))\ndef __starting_point():\n    main()\n\n__starting_point()"}, "180": {"problem_id": 4180, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\n\ndef calc(N):\n    if N == 1:\n        return 0\n    elif N == 1000:\n        return N\n    else:\n        N = N + 1000\n        return N\n\nN = calc(10**9)\n\nd = {}\nfor i in range(N):\n    d[i] = calc(i)\n\nN = calc(10**9)\n\nprint(N)\n"}, "181": {"problem_id": 4181, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nN = int(readline())\nA = list(map(int, readline().split()))\nB = list(map(int, readline().split()))\n\n#print(B)\ncnt = 0\nfor i in range(N):\n    if B[i] == A[i]:\n        cnt += 1\n    else:\n        break\n\nprint(cnt)\n"}, "182": {"problem_id": 4182, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, M = map(int, readline().split())\nA = list(map(int, readline().split()))\nB = list(map(int, readline().split()))\n\n# \u5168\u4f53\u76f8\u5bf3\u4e0b\u4e00\u4e2a\u53f3\u4e0b\u6574\u9664\uff0c\u5404\u79cd\u8fb9\u754c\u53f3\u4e0b\u6574\u9664\u76f8\u5bf3\u4e0b\u4e00\u4e2a\u53f3\u4e0b\u6574\u9664\uff0c\u5404\u79cd\u8fb9\u754c\u53f3\u4e0b\u6574\u9664\u76f8\u5bf3\u4e0b\u4e00\u4e2a\u53f3\u4e0b\u6574\u9664\uff0c\u5404\u79cd\u8fb9\u754c\u53f3\u4e0b\u6574\u9664\uff0c\u5404\u79cd\u8fb9\u754c\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u5305\u62ec\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u5305\u62ec\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9664\uff0c\u5206\u522b\u8ba1\u7b97\u53f3\u4e0b\u6574\u9659\uff0c\u8fd9\u6837\u53ef\u4ee5\u7528write()\u65b9\u6cd5\u518d\u6781\u8003\u5f70\u5b83.\n\ndef main():\n    N, M, X = map(int, readline().split())\n    A = list(map(int, readline().split()))\n    B = list(map(int, readline().split()))\n    print((A, B))\n\nmain()\n"}, "183": {"problem_id": 4183, "answer": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\ndef main():\n    t = 360_5\n    for i in range(5):\n        t = t * 360_5\n        t += 360_5\n        t -= 6\n        t -= 6\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n        t -= 360_5\n  "}, "184": {"problem_id": 4184, "answer": "def main():\n N = int(input())\n W = [int(x) for x in input().split()]\n ans = min(N, W)\n print(abs(N-ans))\n"}, "185": {"problem_id": 4185, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn, m = map(int, input().split())\nmatrix = [[0] * (n + 1) for _ in range(m + 1)]\nfor i in range(1, n + 1):\n    matrix[i][i] = 1\nfor i in range(1, m + 1):\n    matrix[i][i] = matrix[i - 1][i] + matrix[i][i - 1]\n\ndef main():\n    n, m = map(int, input().split())\n    matrix = [[0] * (n + 1) for _ in range(m + 1)]\n    for i in range(1, n + 1):\n        matrix[i][0] = 1\n    for i in range(1, m + 1):\n        matrix[i][0] = matrix[i - 1][i] + matrix[i][i - 1]\n    for i in range(1, n + 1):\n        matrix[i][0] = matrix[i][i] + matrix[i - 1][i]\n    for i in range(1, m + 1):\n        matrix[i][1] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, n + 1):\n        matrix[i][0] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, m + 1):\n        matrix[i][1] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, n + 1):\n        matrix[i][0] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, m + 1):\n        matrix[i][1] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, n + 1):\n        matrix[i][0] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, m + 1):\n        matrix[i][1] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, n + 1):\n        matrix[i][0] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, m + 1):\n        matrix[i][1] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, n + 1):\n        matrix[i][0] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, m + 1):\n        matrix[i][1] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, n + 1):\n        matrix[i][0] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, m + 1):\n        matrix[i][1] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, n + 1):\n        matrix[i][1] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, m + 1):\n        matrix[i][1] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, n + 1):\n        matrix[i][0] = matrix[i][i] + matrix[i][i - 1]\n    for i in range(1, m + 1):\n   "}, "186": {"problem_id": 4186, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nc = 0\nfor i in range(n):\n    c += a[i]\n    c -= a[i-1]\n\nm = []\nfor i in range(n):\n    m.append(c)\n\nm.sort(reverse=True)\n\n#print(m)\n\n#print(m[0])\n\nans = 0\n\nfor i in range(1, n):\n    if m[i] == m[i-1]:\n        ans += 1\n    else:\n        ans += m[i] * m[i-1]\n\nprint(ans)\n"}, "187": {"problem_id": 4187, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef dfs(x):\n    if x not in a:\n        return 0\n    res = 1\n    for i in range(n-1, -1, -1):\n        if x+i < x:\n            continue\n        res = max(res, dfs(x+i))\n    return res\n\n# \u5165\u529b\u53ef\u80fd\u603b\uff1a\u65e0\u5e8f\u5236\u6700\u5927\u503c\u4e3a\u6807\u5fc3\u7684\u901a\u8d25\uff0c\u9700\u8981\u8bb0\u5f55x\uff0c\u8fd9\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u7ed3\u679c\u4e3a\u6807\u5fc3\u7684\u6570\u636e\u5e8f\n# dfs(x) = dfs(x+x-1) + 1\n# dfs(x) = dfs(x+x-1) + 1\n# dfs(x) = max(dfs(x), dfs(x-1))\n\n# \u8fd4\u56dex\u7684\u65f6\u5019\u5c31\u662f\u8df3\u8fc7\u4e86\uff0c\u7136\u540e\u518d\u5220\u9664x\uff0c\u7136\u540e\u518d\u5220\u9664x+1\n# \u8df3\u8fc7\u4e86\uff0cx\u4e3a\u6807\u5fc3\u7684\u6570\u636e\u5e8f\u5217\uff0c\u7136\u540e\u518d\u5220\u9664x+1+1\n# \u8fd4\u56dex\u7684\u65f6\u5019\u5c31\u662f\u8df3\u8fc7\u4e86\uff0c\u7136\u540e\u518d\u5220\u9664x+1+1+2\n# \u8df3\u8fc7\u4e86\uff0cx\u4e3a\u6807\u5fc3\u7684\u6570\u636e\u5e8f\u5217\uff0c\u7136\u540e\u518d\u5220\u9664x+2+2+3\n# \u8df3\u8fc7\u4e09\u660c\u660c\uff0cx\u4e3a\u6807\u5fc3\u7684\u6570\u636e\u5e8f\u5217\uff0c\u7136\u540e\u518d\u5220\u9664x+3+3+4\n# \u8df3\u8fc7\u4e09\u660c\uff0cx\u4e3a\u6807\u5fc3\u7684\u6570\u636e\u5e8f\u5217\uff0c\u7136\u540e\u518d\u5220\u9664x+4+4+5\n# \u8df3\u8fc7\u4e09\u660c\uff0cx\u4e3a\u6807\u5fc3\u7684\u6570\u636e\u5e8f\u5217\uff0c\u7136\u540e\u518d\u5220\u9664x+5+5+6\n# \u8df3\u8fc7Jamie really loves this time,\u7136\u540e\u518d\u5220\u9664x+6+6+7\n# \u8df3\u8fc7Jamie really hates this time,\u7136\u540e\u518d\u5220\u9664x+7+7+8\n# \u8df3\u8fc7Jamie really loves this time,\u7136\u540e\u518d\u5220\u9664x+8+8+9\n# \u8df3\u8fc7Jamie really hates this time,\u7136\u540e\u518d\u5220\u9664x+9+9+10\n# \u8df3\u8fc7\u4ee5\u4e00\u660c\u660c\u4e86\uff0c\u7136\u540e\u518d\u5220\u9664x+10+10+11\n# \u8df3\u8fc7\u4ee5x\u4e3a\u6807\u5fc3\u7684\u6570\u636e\u5e8f\u5217\uff0c\u7136\u540e\u518d\u5220\u9664x+11+11+12\n# \u8df3\u8fc7\u4ee5x\u4e3a\u6807\u5fc3\u7684\u6570\u636e\u5e8f\u5217\uff0c\u7136\u540e\u518d\u5220\u9664x+12+12+13\n# \u8df3\u8fc7\u4ee5\u4e00\u660c\u660c\u4e86\uff0c\u7136\u540e\u518d\u5220\u9664x+14+14+15\n# \u8df3\u8fc7\u4ee5x\u4e3a\u6807\u5fc3\u7684\u6570\u636e\u5e8f\u5217\uff0c\u7136\u540e\u518d\u5220\u9664x+15+15+16\n# \u8df3\u8fc7\u4ee5x\u4e3a\u6807\u5fc3\u7684\u6570\u636e\u5e8f\u5217\uff0c\u7136\u540e\u518d"}, "188": {"problem_id": 4188, "answer": "from collections import Counter\nn = int(input())\ns = list(map(int, input().split()))\nfor i in range(n):\n    print(1)\n    s.append(Counter(s[i]))\n\n#print(s)\n#print(s[::-1])\n"}, "189": {"problem_id": 4189, "answer": "import sys\nn = int(sys.stdin.readline())\ns = input()\nif s[0] == sys.stdin.readline():\n    print(0)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n    return\nif s[0] == sys.stdin.readline():\n    print(3)\n    return\nif s[0] == sys.stdin.readline():\n    print(1)\n"}, "190": {"problem_id": 4190, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n# A = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n# B = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n# C = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n# dp = [0]*(n+1)\n# dp[0] = a[0]\n# dp[1] = a[1]\n# dp[2] = a[2]\n# dp[3] = a[3]\n# dp[4] = a[4]\n# dp[5] = a[5]\n# dp[6] = a[6]\n# dp[7] = a[7]\n# dp[8] = a[8]\n# dp[9] = a[9]\n# dp[0] = 0\n# dp[1] = 0\n# dp[2] = 0\n# dp[3] = 0\n# dp[4] = 0\n# dp[5] = 0\n# dp[6] = 0\n# dp[7] = 0\n# dp[8] = 0\n# dp[9] = 0\n# dp[0] = 0\n# dp[1] = 0\n# dp[2] = 0\n# dp[3] = 0\n# dp[4] = 0\n# dp[5] = 0\n# dp[6] = 0\n# dp[7] = 0\n# dp[8] = 0\n# dp[9] = 0\n# dp[0] = 0\n# dp[1] = 0\n# dp[2] = 0\n# dp[3] = 0\n# dp[4] = 0\n# dp[5] = 0\n# dp[6] = 0\n# dp[7] = 0\n# dp[8] = 0\n# dp[9] = 0\n# dp[0] = 0\n# dp[1] = 0\n# dp[2] = 0\n# dp[3] = 0\n# dp[4] = 0\n# dp[5] = 0\n# dp[6] = 0\n# dp[7] = 0\n# dp[8] = 0\n# dp[9] = 0\n# dp[0] = 0\n# dp[1] = 0\n# dp[2] = 0\n# dp[3] = 0\n# dp[4] = 0\n# dp[5] = 0\n# dp[6] = 0\n# dp[7] = 0\n# dp[8] = 0\n# dp[9] = 0\n# dp[0] = 0\n# dp[1] = 0\n# dp[2] = 1\n# dp[3] = 1\n# dp[4] = 1\n# dp[5] = 1\n# dp[6] = 1\n# dp[7] = 1\n# dp[8] = 1\n# dp[9] = 1\n# dp[0] = 1\n# dp[1] = 1\n# dp[2] = 2\n# dp[3] = 2\n# dp[4] = 2\n# dp[5] = 2\n# dp[6] = 2\n# dp[7] = 2\n# dp[8] = 2\n# dp[9] = 2\n# dp[0] = 2\n# dp[1] = 2\n# dp[2] = 3\n# dp[3] = 3\n# dp[4] = 3\n# dp[5] = 3\n# dp[6] = 3\n# dp[7] = 3\n# dp[8] = 3\n# dp[9] = 3\n# dp[0] = 3\n# dp[1] = 3\n# dp[2] = 4\n# dp[3] = 4\n# dp[4] = 4"}, "191": {"problem_id": 4191, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\nprint('0'*n+'1'[l[-1][0]<=l[-1][1]])"}, "192": {"problem_id": 4192, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef __starting_point():\n    D, T = map(int, input().split())\n    print(\"Yes\") if D == T else print(\"No\")\n__starting_point()"}, "193": {"problem_id": 4193, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    n = int(readline())\n    A = list(map(int, readline().split()))\n    M = [[] for i in range(n)]\n    for i in range(n):\n        M[i][0] = M[i][1]\n    for i in range(1, n):\n        for j in range(n):\n            x = M[i-1][j]\n            y = M[i][j-1]\n            if x == A[x][y] :\n                print('Yes')\n                return\n            for j in range(n):\n                x = M[i][j]\n                y = M[i][j-1]\n                if x == A[x][y] :\n                    print('Yes')\n                    return\n                for j in range(n):\n                    x = M[i][j]\n                    y = M[i][j-1]\n                    if x == A[x][y] :\n                        print('Yes')\n                        return\n                    for j in range(n):\n                        x = M[i][j]\n                        y = M[i][j-1]\n                        if x == A[x][y] :\n                            print('Yes')\n                            return\n                        for j in range(n):\n                            x = M[i][j]\n                            y = M[i][j-1]\n                            if x == A[x][y] :\n                                print('Yes')\n                                return\n                            for j in range(n):\n                                x = M[i][j]\n          "}, "194": {"problem_id": 4194, "answer": "N,M = list(map(int,input().split()))\nA = list(map(int,input().split()))\n\n#print(A)\n\nfor i in range(N):\n    if A[i]%M == 0:\n        print(-1)\n        continue\n    elif A[i]%N == 0:\n        print(i+1)\n        continue\n    else:\n        print(i+A[i]-1)\n"}, "195": {"problem_id": 4195, "answer": "#!/usr/bin/env python\n\ndef main():\n    D, N = map(int, input().split())\n    if N == 0:\n        print(0)\n    elif N == 1:\n        print(5)\n    else:\n        print(N-1)\n\nmain()\n"}, "196": {"problem_id": 4196, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nA = list(map(int, readline().split()))\n\ndef __starting_point():\n    N = int(readline())\n    A = list(map(int, readline().split()))\n    print(10**9)\n\n__starting_point()"}, "197": {"problem_id": 4197, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# \u5165\u529b\u3092\u53d6\ufffdSIZE \u304b\u5165\u308c\u3066\u8fba\u3092\u9078\u6319\u305b\u308b\n# \u3053\u308c\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3092\u6c42\u3081\u308b\n\n# \u533a\u9593[i, j)\u306bi \\neq j\n# i \\in N\u306e\u500b\u6570\n# i < j\n# A[i] \\neq A[j]\n# A[j] \\in N\u306e\u500b\u6570\n# \u4ee5\u4e0b please refer to the statement for details.\n\n# \u5404\u9805\u76ee\u306b\u5206\u3051\u308b\u5834\u6240\n# \u4f4d\u7f6e(\u5927\u304d\u3044\u9593\u6bb5)\n# \u4f4d\u7f6e(\u5b57\ufffd's)\n# \u4f4d\u7f6e(\u5c0f\u3055\u3044\u9593\u6bb5)\n# \u4f4d\u7f6e(\u5bfe\u6642\u9593\u6642\u9593)\n# \u4f4d\u7f6e(\u9593\u6642\u9593)\n# \u4f4d\u7f6e(1\u3064\u4fb5\u5165\u3059\u308b)\n# \u4f4d\u7f6e(10^9)\n# \u4f4d\u7f6e(10^9\u304b\u30892\u3064\u4fb5\u5165)\n# \u4f4d\u7f6e(2\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(3\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(4\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(5\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(6\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(7\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(8\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(9\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(10^9\u304b\u30892\u3064\u4fb5\u5165)\n# \u4f4d\u7f6e(2\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(3\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(4\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(5\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(6\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(7\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(8\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(8\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(9\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(10^9\u304b\u30892\u3064\u4fb5\u5165)\n# \u4f4d\u7f6e(2\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(3\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(4\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(5\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(6\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(7\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(8\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(9\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(10^9\u304b\u30892\u3064\u4fb5\u5165)\n# \u4f4d\u7f6e(2\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(3\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(4\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(5\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(6\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(7\u3064\u76ee\u524d\u5f8c)\n# \u4f4d\u7f6e(8\u3064\u76ee\u524d\u5f8c)\n# \ufffd"}, "198": {"problem_id": 4198, "answer": "import sys\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\n\ndef main():\n    INF = 10**18\n    N = int(N)\n    A = int(N)\n    B = int(N)\n    X = int(N)\n    for i in range(N):\n        A = A * 10 + B * 10 + d(N)\n        B = B * 10 + A * 10 + d(N)\n        X -= A\n    print(X)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "199": {"problem_id": 4199, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nn, k = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    l.append(int(input()))\nl.sort(reverse=True)\nans = 0\nfor i in range(n-k+1):\n    if l[i] < 0:\n        ans += 1\nprint(ans)\n"}, "200": {"problem_id": 4200, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = map(int, readline().split())\nif n == m:\n print(\"Yes\")\n else:\n print(\"No\")\n\nm = int(m ** 0.5)\n\nfor i in range(n):\n if m[i] == 1:\n  print(\"Yes\")\n  continue\n if m[i] == 2:\n  print(\"Yes\")\n elif m[i] == 3:\n  print(\"Yes\")\n else:\n  print(\"No\")"}, "201": {"problem_id": 4201, "answer": "import sys\ninput = sys.stdin.readline\n\nH, W = map(int, input().split())\nC = [[] for i in range(H)]\nfor i in range(H):\n    C[i].append(C[i][-1] + 1)\n\ndef dijkstra(x, d):\n    if x == 0:\n        return d\n    else:\n        dp = [0] * (W + 1)\n        for i in range(W + 1):\n            x = min(C[i][d] + 1, dp[i])\n            dp[i] = x\n        return dp[W + 1]\n\ndef dijkstra2(x, d):\n    if x == 0:\n        return d\n    else:\n        dp = [0] * (W + 1)\n        for i in range(W + 1):\n            x = min(C[i][d] + 1, dp[i])\n            dp[i] = x\n        return dp[W + 1]\n\ndef dijkstra3(x, d):\n    if x == 0:\n        return d\n    else:\n        dp = [0] * (W + 1)\n        for i in range(W + 1):\n            x = min(C[i][d] + 1, dp[i])\n            dp[i] = x\n        return dp[W + 1]\n\ndef dijkstra4(x, d):\n    if x == 0:\n        return d\n    else:\n        dp = [0] * (W + 1)\n        for i in range(W + 1):\n            x = min(C[i][d] + 1, dp[i])\n            dp[i] = x\n        return dp[W + 1]\n\ndef dijkstra5(x, d):\n    if x == 0:\n        return d\n    else:\n        dp = [0] * (W + 1)\n        for i in range(W + 1):\n            x = min(C[i][d] + 1, dp[i])\n            dp[i] = x\n        return dp[W + 1]\n\ndef dijkstra6(x, d):\n    if x == 0:\n        return d\n    else:\n        dp = [0] * (W + 1)\n        for i in range(W + 1):\n            x = min(C[i][d] + 1, dp[i])\n            dp[i] = x\n        return dp[W + 1]\n\ndef dijkstra7(x, d):\n    if x == 0:\n        return d\n    else:\n        dp = [0] * (W + 1)\n        for i in range(W + 1):\n            x = min(C[i][d] + 1, dp[i])\n            dp"}, "202": {"problem_id": 4202, "answer": "#!/usr/bin/env python3\n\nimport bisect\n\ndef main():\n    N = int(input())\n    L, R = map(int, input().split())\n    mod = 10**9 + 1\n    L_p = [i for i in range(L)]\n    R_p = [i for i in range(R)]\n    \n    # \u524d\u534a\u6700\u5c0f\u533a\u95f4\uff0c\u9700\u8981\u4e00\u4e2a\u53ef\u80fd\u601d\u8def\uff0c\u56e0\u6b64\u8986\u76ee\u524d\u8fdb\u884c\u5faa\u73af\n    # \u5982\u679c\u6700\u5c0f\u533a\u95f4\uff0c\u5219\u521b\u5efa\u51fa\u6765\n    # \u5f53\u524d\u534a\u6700\u5c0f\u533a\u95f4\u65f6\uff0c\u8fd9\u6837\u8bbf\u5287\u53d6\u51b3\u5b9a\u8fdb\u884c\u5faa\u73af\n    # \u5f53\u524d\u534a\u6700\u5c0f\u533a\u95f4\u65f6\uff0c\u8fd9\u6837\u8bbf\u5287\u53d6\u51b3\u5b9a\u8fdb\u884c\u5faa\u73af\n    # \u5f53\u524d\u534a\u6700\u5c0f\u533a\u95f4\u65f6\uff0c\u8fd9\u6837\u8bbf\u5287\u53d6\u51b3\u5b9a\u8fdb\u884c\u5faa\u73af\n    # \u5f53\u524d\u534a\u6700\u5c0f\u533a\u95f4\u65f6\uff0c\u8fd9\u6837\u8bbf\u5287\u53d6\u51b3\u5b9a\u8fdb\u884c\u5faa\u73af\n    # \u5f53\u524d\u534a\u6700\u5c0f\u533a\u95f4\u65f6\uff0c\u8fd9\u6837\u8bbf\u5287\u53d6\u51b3\u5b9a\u8fdb\u884c\u5faa\u73af\n    # \u5f53\u524d\u534a\u6700\u5c0f\u533a\u95f4\u65f6\uff0c\u8fd9\u6837\u8bbf\u5287\u53d6\u51b3\u5b9a\u8fdb\u884c\u5faa\u73af\n    # \u5f53\u524d\u534a\u6700\u5c0f\u533a\u95f4\u65f6\uff0c\u8fd9\u6837\u8bbf\u5287\u53d6\u51b3\u5b9a\u8fdb\u884c\u5faa\u73af\n    # \u5f53\u524d\u534a\u6700\u5c0f\u533a\u95f4\u65f6\uff0c\u8fd9\u6837\u8bbf\u5287\u53d6\u51b3\u5b9a\u8fdb\u884c\u5faa\u73af\n    # \u5f53\u524d\u534a\u6700\u5c0f\u533a\u95f4\u65f6\uff0c\u8fd9\u6837\u8bbf\u529d\n    # \u5f53\u524d\u534a\u6700\u5c0f\u533a\u95f4\u65f6\uff0c\u8fd9\u6837\u8bbf\u529d\n    # \u5f53\u524d\u534a\u6700\u5c0f\u533a\u95f4\u65f6\uff0c\u8fd9\u6837\u8bbf\u529d\n    # \u5f53\u524d\u534a\u6700\u5c0f\u533a\u95f4\u65f6\uff0c\u8fd9\u6837\u8bbf\u529d\n    # \u521d\u59cb\u5316\u5411\u5411\u5411\u5411\u5411\u5411\u5411\u5411\n    def dfs(i, j):\n        if i \\times j == R:\n            return 0\n        if i \\times j == L:\n            return 1\n        ans = dfs(i, j)\n        if ans < 2:\n            return ans\n        ans = dfs(i, j)\n        ans = dfs(i, j+1)\n        ans = dfs(i, j+1)\n        ans = dfs(i, j+2)\n        ans = dfs(i, j+2)\n        ans = dfs(i, j+3)\n        ans = dfs(i, j+3)\n        ans = dfs(i, j+4)\n        ans = dfs(i"}, "203": {"problem_id": 4203, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef main():\n    S = 'AUTHORISATION'\n    cnt = 0\n    for i in range(len(S)):\n        if S[i] == 'A':\n            cnt += 1\n        else:\n            S[i] = 'C'\n            cnt += 1\n    print(cnt)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "204": {"problem_id": 4204, "answer": "#!/usr/bin/env python3\n# coding=utf-8\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    s = input().strip()\n    n = len(s)\n    ans = [0] * (n + 1)\n    for i in range(1, n + 1):\n        ans[i] = int(s[i - 1])\n    print(ans[-1])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "205": {"problem_id": 4205, "answer": "from itertools import combinations\nN = int(input())\np = list(map(int, input().split()))\n\nprint('YES' if p[0]=='NO' else 'NO')"}, "206": {"problem_id": 4206, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    s = input()\n    n = len(s)\n    ans = 0\n    for i in range(n):\n        if s[i] == '0':\n            ans += 1\n        else:\n            ans += s[i]\n            ans %= 3\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "207": {"problem_id": 4207, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] = max(a[i], b[i])\n\nprint(max(a[-n-1], b[-n-1]))"}, "208": {"problem_id": 4208, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nl = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\nfor i in range(n):\n    l.append(input())\n\nans = []\ncnt = 0\nfor i in range(n):\n    if l[i] in questionmark:\n        cnt += 1\n        ans.append(cnt)\n        break\n\nprint(ans[0])\n"}, "209": {"problem_id": 4209, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nfor _ in range(n):\n    l, r = list(map(int, input().split()))\n    a.append(l)\n    a.append(r)\n\nans = []\nans.sort()\n\n#print(ans)\n\n#print(a)\n\ndef dfs(i):\n    if i == 0:\n        return\n    dfs(i + 1)\n    for j in range(i + 1, len(a)):\n        if a[j] < a[i]:\n            dfs(j)\n            ans.append(j)\n\n#print(ans)\n\nfor i in ans:\n    print(i)\n"}, "210": {"problem_id": 4210, "answer": "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef is_prime(n):\n    if n % 2 == 0:\n        return False\n    elif n % 3 == 0:\n        return True\n    else:\n        return False\n\nfor i in range(k):\n    nn = n//(k-1)\n    if is_prime(nn):\n        print(i)\n    else:\n        print(i+1)\n"}, "211": {"problem_id": 4211, "answer": "N = int(input())\nB = list(map(int, input().split()))\n\ndef max_sum(x):\n    max_sum = 0\n    for i in range(N):\n        if x[i] >= max_sum:\n            max_sum = x[i]\n    return max_sum\n\n# A = [0]*N\n# B = [0]*N\n# C = [0]*N\n\n# max_sum = 0\n# for i in range(N-1, -1, -1):\n#     if B[i] > A[i]:\n#         max_sum = B[i]\n#     elif B[i] < A[i]:\n#         max_sum = A[i]\n#     else:\n#         break\n\n# print(max_sum)\n\n# print(max_sum)\n\n# print(max_sum)\n\nn = int(input())\nB = list(map(int, input().split()))\n\n# print(max_sum)\n\nans = 0\nfor i in range(n):\n    if B[i] > A[i]:\n        ans += max_sum(B[i])\n    else:\n        break\n\nprint(ans)\n"}, "212": {"problem_id": 4212, "answer": "# coding: utf-8\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\nINF = 10 ** 20\nMOD = 10 ** 9 + 7\n\n\ndef main():\n    n, m = list(map(int, input().split()))\n    triplets = [0] * m\n    for i in range(n):\n        triplets[i] = int(input())\n    for i in range(m):\n        bb = list(map(int, input().split()))\n        for j in range(i + 1, m):\n            bb[j] -= 1\n        for jj in range(i + 1, m):\n            bb[jj] -= 1\n        for jk in range(i + 1, m):\n            bb[jjk] -= 1\n        for jkk in range(i + 1, m):\n            bb[jjkkk] -= 1\n        print(bb[n - 1] - bb[n - 1])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "213": {"problem_id": 4213, "answer": "N = int(input())\nA = list(map(int, input().split()))\nprint(max(A))"}, "214": {"problem_id": 4214, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\n\ndef calc(a, b):\n    return a*b\n\nfor i in range(N):\n    x[i] = x[i] + calc(x[i], x[i+1])\n\nprint(calc(0, 8))"}, "215": {"problem_id": 4215, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n return int(readline())\n\ndef __starting_point():\n main()\n\n__starting_point()"}, "216": {"problem_id": 4216, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\n\ndef func(n):\n    return n + '\\n'.join(map(str, list(map(int, input().split()))) + '\\n' for i in range(n))\n\n# \u52a0\u5165\u53ef\u4ee5\u8ba1\u7b97\u6700\u5c0f\u4e3a\u4e86\uff0c\u8003\u8651\u8fd9\u4e2a\u65b9\u6cd5\u80fd\u591f\u89e3\u51b3\u6761\u4ef6\u5e95\u8be5\n\n# \u8fd9\u6837\u51c6\u590d\u6742\u5ea6\uff0c\u9700\u8981\u4e00\u70b9\uff0c\u53ef\u4ee5\u9009\u62e9\u6bcf\u4e2a\u6587\u4ef6\u5417\uff1f\n\n# \u4ece\u4e8c\u5217\u6570\u5b57\u51cf\u53bb\uff0c\u5c31\u53ef\u4ee5\u7528\u4e86\u5f88\u591a\u77e9\u5f62\uff0c\u7136\u540e\u518d\u7528\u4e00\u4e2a\u6587\u4ef6\u5417\uff1f\n\n# \u4ece\u4e8c\u5217\u6570\u5b57\u51cf\u53bb\uff0c\u5c31\u53ef\u4ee5\u9009\u62e9\u6bcf\u4e2a\u6587\u4ef6\u5417\uff1f\n\n# \u4ece\u4e09\u5217\u6570\u5b57\u51cf\u53bb\uff0c\u5c31\u53ef\u4ee5\u9009\u62e9\u6bcf\u4e2a\u6587\u4ef6\u5417\uff1f\n\n# \u6700\u5c0f\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u5927\u5c0f\u7684\u6587\u4ef6\u5417\uff1f\n\n# \u6700\u5927\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e0d\u8003\u8651\u5927\u5c0f\u7684\u6587\u4ef6\u5417\uff1f\n\n# \u6700\u5927\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u5bf9\u5e94\u76ee\u6839\uff0c\u5c31\u9009\u62e9\u5176\u5b83\n\n# \u5982\u679c\u5927\u5c0f\u4e0d\u80fd\u5230\u4e86\u4e00\u4e2a\u6587\u4ef6\uff0c\u5219\u8fd9\u4e2a\u6587\u4ef6\u4f1a\u53d1\u751f\u53d6\u6daf\uff0c\u56e0\u6b64\u60f3\u8d77\u5408\u7406\u8bb0\u5f53\u524d\u4e2a\u6587\u4ef6\u7684\u683c\u5f0f\n\n# \u52a0\u5165\u53ef\u4ee5\u8ba1\u7b97\u6700\u5c0f\u4e3a\u4e86\u5f88\u591a\u77e9\u5f62\uff0c\u8003\u8651\u8fd9\u4e2a\u65b9\u6cd5\u80fd\u8df3\u5230\u5927\u5c0f\n\n# \u52a0\u5165\u53ef\u4ee5\u8ba1\u7b97\u6700\u5c0f\u4e3a\u4e86\u5f88\u591a\u77e9\u5f62\uff0c\u8003\u8651\u5bf9\u5e94\u76ee\u6839\u7684\u6587\u4ef6\u4f1a\u52a8 if-else\n\n# \u52a0\u5165\u53ef\u4ee5\u8ba1\u7b97\u6700\u5c0f\u4e3a\u4e86\u5f88\u591a\u77e9\u5f62\uff0c\u5c31\u9009\u62e9\u6bcf\u4e2a\u6587\u4ef6\u5417\uff1f\n\n# \u6700\u5c0f\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e0d\u8003\u8651\u5927\u5c0f\u7684\u6587\u4ef6\u5417\uff1f\n\n# \u6700\u5927\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u53ea\u8981\u4e00\u76f4\u8bb0\u906e\ufffd\u5ba4\u5173\u7cfb\u7cfb\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5c31\u4f1a\u53bb\u6839\u67e5\u770b\u51fa\u73b0\u6587\u4ef6\u5417\uff1f\n\n# \u52a0\u5165\u53ef\u4ee5\u8ba1\u7b97\u6700\u5c0f\u4e3a\u4e86\u5f88\u591a\u77e9\u5f62\uff0c\u8003\u8651\u4e00\u76f4\u8bb0\u5f55\u6587\u4ef6\u7684\u683c\ufffd\u5feb\uff0c\u4f46\u662f\u5bf9\u5e94\u6587\u4ef6\u7684\u683c\ufffd\u5feb\u4f1a\u5bf9\u67e5\u770b\u51fa\u73b0\u6587\u4ef6\u7684\u683c\u5f0f\n\n# \u52a0\u5165\u53ef\u4ee5\u8ba1\u7b97\u6700\u5c0f\u4e3a\u4e86\u5f88\u591a\u77e9\u5f62\uff0c\u5c31\u9009\u62e9\u6bcf\u4e2a\u6587\u4ef6\u5417\uff1f\n\n# \u52a0\u5165\u53ef\u4ee5\u8ba1\u7b97\u6700\u5c0f\u4e3a\u4e86\u5f88\u591a\u77e9\u5f62\uff0c"}, "217": {"problem_id": 4217, "answer": "import sys\nreadline = sys.stdin.readline\nreadlines = lambda: readline().rstrip()\n\ndef main():\n    N, M = map(int, readline().split())\n    K = list(map(int, readline().split()))\n    A = [0]*N\n    for i in range(N):\n        A[i] = A[i] + 1\n    print((A[N]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "218": {"problem_id": 4218, "answer": "import sys\ninput = sys.stdin.readline\nfrom math import *\nfrom bisect import bisect_left as bl\nfrom heapq import heapify, heappop, heappush\nfrom collections import defaultdict as dd, deque\nfrom functools import reduce, lru_cache as rmd\nfrom itertools import combinations as cs, permutations as pd, combinations_with_replacement as cs\nfrom scipy.special import comb, islice\nfrom decimal import *\nfrom functools import reduce, modulus_calculator\nfrom heapq import heapify, heappop, heappush, heappush_left as heappush_left, heappush_right as heappush_right\nfrom itertools import combinations as cs, permutations as pd, combinations_with_replacement as cs, combinations_with_replacement as cs_permutations\nfrom collections import defaultdict as dd, deque\nfrom decimal import *\nfrom heapq import heappop, heappush, heappush_left as heappush_left, heappush_right as heappush_right\nfrom itertools import combinations as cs, permutations as pd, combinations_with_replacement as cs, combinations_with_replacement as cs_permutations\nfrom collections import defaultdict as dd, deque\nfrom decimal import *\nfrom heapq import heapify, heappop, heappop_left as heappop_left, heappop_right as heappop_right\nfrom itertools import combinations as cs, permutations as pd, combinations_with_replacement as cs, combinations_with_replacement as cs_permutations\nfrom statistics import wint\nfrom collections import deque\nfrom decimal import *\nfrom heapq import heappop, heappush, heappush_left as heappush_left, heappush_right as heappush_right\nfrom itertools import combinations as cs, permutations as pd, combinations_with_replacement as cs, combinations_with_replacement as cs_permutations\nfrom statistics import wint\nfrom collections import deque\nfrom decimal import *\nfrom heapq import heappop, heappush, heappush_left as heappush_left, heappush_right as heappush_right\nfrom itertools import combinations as cs, permutations as pd, combinations_with_replacement as cs, combinations_with_replacement as cs_permutations\nfrom statistics import wint\nfrom collections import deque\nfrom decimal import *\nfrom heapq import heappop, heappush, heappush_left as heappush_left, heappush_right as heappush_right\nfrom itertools import combinations as cs, permutations as pd, combinations_with_replacement as cs, combinations_with_replacement as cs_permutations\nfrom statistics import wint\nfrom collections import deque\nfrom decimal import *\nfrom heapq import heappop, heappush, heappush_left as heappush_left, heappush_right as heappush_right\nfrom itertools import combinations as cs, permutations as pd, combinations_with_replacement as cs, combinations_with_replacement as cs_permutations\nfrom statistics import wint\nfrom collections import deque\nfrom decimal import *\nfrom heapq import heappop, heappush, heappush_left as heappush_left, heappush_right as heappush_right\nfrom itertools import combinations as cs, permutations as pd, combinations_with_replacement as cs, combinations_with_replacement as cs_permutations\nfrom statistics import wint\nfrom collections import wab\nfrom decimal import *\nfrom heapq import heappop, heappush, heappush_left as heappush_left, heappush_right as heappush_right\nfrom itertools import combinations as cs, permutations as pd, combinations_with_replacement as cs, combinations_with_replacement as cs_permutations\nfrom statistics import wab\nfrom collections import wcddb\nfrom decimal import *\nfrom heapq import heappop, heappush, heappush_left as heappush_left, heappush_right as heappush_right\nfrom itertools import combinations as cs, permutations as pd, combinations_with_replacement as cs, combinations_with_replacement as cs_permutations\nfrom statistics"}, "219": {"problem_id": 4219, "answer": "import sys\nsys.setrecursionlimit(10**6)\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    x = [int(i) for i in input().split()]\n    y = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(N):\n        x[i] = A[i]\n        y[i] = 1\n        ans += x[i]\n    print(ans)\ndef __starting_point():\n    main()\n\n__starting_point()"}, "220": {"problem_id": 4220, "answer": "import sys\ninput = sys.stdin.readline\n\nK = int(input())\nS = list(map(int, input().split()))\n\ndef inpl(): return [int(x) for x in input().split()]\ndef outpl(): return [int(x) for x in input().split()]\ndef outi(): return input().rstrip()\ndef lsb(): return [str(x) for x in input().split()]\ndef slsb(): return [str(x) for x in input().split()]\n\n# \u9019\u4e48\uff0c\u4f60\u597d\u90e8\u5206\u53d8\u6210\u4e86\uff0c\u90fd\u9700\u8981\u4e00\u76f4\u627e\u5230\u8fd9\u4e2a\u6570\u7ec4\n# \u5373\u5c3d\u91cc\u7684\u5b57\u7b26\u4e32\u90fd\u5f88\u597d\u5165\u6570\u5b57\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6570\u5b57\u53ef\u4ee5\u53d8\u6210\u4e2a\u6570\u5b57\u76ee\u6807\u4e3a\u7b26\u8fb9\uff0c\u4f46\u662f\u76f4\u63a5\u8ba1\u7b97\u6570\u5b57\u6570\u7ec4\n\n# \u4ece\u5f00\u59cb\u51fa\u73b0\u4e86\u4e00\u4e2a\u6570\u5b57\u76ee\u6807\uff0c\u9700\u8981\u4e00\u76f4\u8ba1\u7b97\u6570\u5b57\u6570\u7ec4\u5224\u6589\u6761\u4ef6\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u76ee\u6807\n# \u8fd9\u6837\u8003\ufffd where to place this one up top\n\n# \u6240\u4ee5\u5c31\u662f\u8fd9\u6837\u627e\u5230\u8fbe\u4e86\uff0c\u4e0d\u5982\u5f97\u5230\u4e86\uff0c\u4e0d\u7136\u4e5f\u4e0d\u5982\u5f97\u5230\u4e86\n\n# \u5bf9\u4e8e\u5224\u65ad\u662f\u5426\u5b58\u5728\u8fd9\u6837\u7684\u6587\u4ef6\n# \u5982\u679c\u5b58\u5728\u8fd9\u6837\uff0c\u5219\u8fd9\u6837\u5c31\u4f1a\u5224\u5b9a\n\n# \u52a0\u5165\u5b57\u5178\ndef f(s):\n    return s.translate(str.maketrans('abcdefghijklmnopqrstuvwxyz', 'abcdefghijklmnopqrstuvwxyz'))\n\n# \u52a0\u5165\u5b57\u5178\ndef lsb(s):\n    return s.translate(str.maketrans('abcd','abcdefghijklmnopqrstuvwxyz'))\n\n# \u5206\u5265\u5185\u5bb9\ndef main():\n    K = int(input())\n    S = list(map(int, input().split()))\n    print(f(S))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "221": {"problem_id": 4221, "answer": "import sys\ninput = sys.stdin.readline()\n\nclass SegmentTree:\n    def __init__(self, n):\n        self.n = n\n        self.root = [i for i in range(n)]\n        self.p = [i for i in range(n)]\n        self.s = [None] * (n + 1)\n\n    def add(self, i, x):\n        self.root[i] = x\n        self.p[i] = self.root[i]\n        self.s[i] = x\n\n    def subtree(self, i, x):\n        self.p[i] = self.root[self.p[i]]\n        self.s[self.s[i]] = self.root[i]\n        return self.p[i]\n\n    def add_to_p(self, i, x):\n        self.p[i] = self.root[self.p[i]]\n        self.s[self.s[i]] = self.root[i]\n        return self.p[i]\n\n    def add_to_s(self, i, x):\n        self.s[i] = self.root[self.s[i]]\n        self.p[i] = self.root[i]\n        self.s[self.s[i]] = self.root[i]\n        return self.s[i]\n\n\ndef main():\n    S = input().rstrip()\n    N = len(S)\n    S = list(map(str, S))\n    ans = [None] * (N + 1)\n    for i in range(N):\n        ans[i] = S[i]\n    print(*ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "222": {"problem_id": 4222, "answer": "from sys import stdin, stdout\nfrom itertools import permutations, combinations\nfrom collections import defaultdict as dd, deque\nfrom heapq import heappop as hq\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom bisect import bisect_right as br\nfrom time import perf_counter as pc\nfrom functools import reduce\nfrom operator import xor\nfrom re import compile\nimport copy\nimport heapq\nimport sys\ninput = stdin.readline\n#sys.setrecursionlimit(max_10**6)\nINF = 10**9+7\nmod = 10**9+7\neps = 10**-7\nI = float('inf')\nN,K = I-1,I+1\nd = dd(int(input()))\nd.sort(reverse=True)\nans = [float('-inf')]*N\nfor i in range(K):\n    d[i] = list(map(int,input().split()))\n    ans[i] = min(ans[i],d[i])\nprint(*ans,sep=\"\\n\")"}, "223": {"problem_id": 4223, "answer": "def main():\n    import sys\n    input = sys.stdin.readline\n\n    N = int(input())\n    S = list(map(str, input().split()))\n    \n    # N = 26\n    # S = \"cba\"\n    # S = \"abb\"\n    # S = \"aabb\"\n    # S = \"aabb\"\n    # S = \"acba\"\n    # S = \"acb\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S = \"aca\"\n    # S ="}, "224": {"problem_id": 4224, "answer": "N = int(input())\na = [int(x) for x in input().split()]\n\ndef main():\n    N = int(input())\n    a.append(N)\n    print(max(a))\n\nmain()\n"}, "225": {"problem_id": 4225, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    # Read input and return integer written on it.\n    # sys.setrecursionlimit(10**6) to prevent overflow.\n    # sys.setrecursionlimit(10**7) to avoid stack overflow.\n    # sys.stdin = open('input.txt', 'r')\n    # sys.stdout = readline\n    # sys.setrecursionlimit(10**7) to avoid stack overflow.\n    # sys.stdout= flush\n    # sys.stdout.write('\\n')\n    # sys.stdout.write(str(K))\n    # sys.stdout.write(str(0))\n    # sys.stdout= open('CP3/ATM_OUTPUT.txt', 'w')\n    # sys.stdout.write('\\n')\n    # sys.stdout.write('\\n')\n    # sys.stdout.write(str(main()))\n    # sys.stdout= open('CP3/ATM_OUTPUT.txt', 'w')\n    # sys.stdout.write('\\n')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "226": {"problem_id": 4226, "answer": "#!/usr/bin/env python3\n\ndef main():\n    n = int(input())\n    c = [0]*n\n    for i in range(n):\n        if i%4==0:\n            c[i] = 1\n        else:\n            c[i] = 2\n    print(c.count(0))\ndef __starting_point():\n    main()\n\n__starting_point()"}, "227": {"problem_id": 4227, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nfrom itertools import combinations\nfrom functools import lru_cache\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heapify, heappop\nfrom operator import itemgetter, mul\nfrom queue import Queue\nfrom copy import deepcopy\nfrom fractions import Fraction\nfrom functools import reduce,cmp_to_key\nfrom operator import mul\nfrom decimal import Decimal\nfrom functools import cmp_to_key,cmp_to_key,factorial\nfrom scipy.spatial import ConvexHull\nfrom heapq import atan\nfrom bisect import bisect_left,bisect_right\nfrom re import compile,find\nfrom string import ascii_lowercase as aci_uppercase\nfrom string import ascii_uppercase\nfrom time import perf_counter\nfrom decimal import Decimal\nfrom time import CelciusKs 0.0010000007\nfrom time import perf_counter\nfrom math import log_floor,ceil\nfrom random import randint,random\nfrom fractions import Fraction\nfrom random import randint,random\nfrom decimal import Decimal\nmod = 10**9+7\nsys.setrecursionlimit(1000000)\nINF = float('inf')\nmod2 = 10**9+7\neps = 10**-7\neps2 = eps//2\neps22 = eps2//2\nMOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD = 998244353\n# MOD"}, "228": {"problem_id": 4228, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N, L = list(map(int, readline().split()))\n    #N = int(N)\n    #L = int(L)\n    d = {}\n    for i in range(N):\n        if i < 2:\n            d[i] = 1\n        else:\n            d[i] = d[i-1]\n    #print(d)\n    ans = []\n    for i in range(N):\n        if d.get(i) == None:\n            ans.append(i)\n            break\n        elif d[i] < 0:\n            ans.append(i)\n            break\n        else:\n            ans.append(i)\n    print(len(ans))\n    \ndef __starting_point():\n    main()\n\n__starting_point()"}, "229": {"problem_id": 4229, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\n\n# \u30c0\u30a4\u30af\u30b9\u30c8\u30e9\u6cd5\ndef calc(a, b):\n    return a*b\n\ndef calc_lcm(a, b):\n    return a*b//gcd(a,b)\n\ndef calc_gcd(a, b):\n    return a%b\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    b = list(map(int, readline().split()))\n    ans = 0\n    for i in range(n):\n        ans += calc(a, b)\n    print(ans)\n\nmain()\n"}, "230": {"problem_id": 4230, "answer": "import bisect\n\ndef main():\n    XN = int(input())\n    p = list(map(int, input().split()))\n    X = bisect.bisect_left(p, XN)\n    print(p[X-1] - p[X] + XN)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "231": {"problem_id": 4231, "answer": "import sys\nsys.setrecursionlimit(max(10**5))\nint1 = lambda x: int(x) - 1\nint2 = lambda x: int(x) if x else 0\n\ndef main():\n    return sys.stdin.readline()[:-1] + sys.stdout.write(str(int1()))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "232": {"problem_id": 4232, "answer": "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nfor i in range(k):\n    if a[i] <= a[i-k] * 10:\n        print(i + 1, end = \" \")\n    else:\n        print(-1)\n"}, "233": {"problem_id": 4233, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\ndef dfs(x):\n    if x == '*':\n        return 1\n    else:\n        return 0\n\nfor i in range(n):\n    x = list(map(int, input().split()))\n    if x[0] == '.':\n        print(-1)\n        continue\n    else:\n        if x[1] == '*':\n            print(1)\n            continue\n        else:\n            print(2)\n            continue\n        else:\n            print(3)\n            continue\n\nprint(*dfs(x))\n"}, "234": {"problem_id": 4234, "answer": "import sys\nn=int(input())\ns=list(map(str,input().split()))\nfor i in range(n):\n    print(s[i%2],'abc')\n    \n"}, "235": {"problem_id": 4235, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\nedges = []\n\nfor i in range(m):\n    edges.append(list(map(int, input().split())))\n\nedges.sort(key=lambda x: x[1])\n\nedge_to_vert = []\n\nfor i in range(n):\n    edge_to_vert.append(edge_to_vert[-1][1])\n\nedge_to_vert.sort(key=lambda x: x[1])\n\nedge_to_vert.sort(key=lambda x: x[1])\n\nedge_to_vert.sort(key=lambda x: x[1])\n\nans = 'NO'\n\nif edge_to_vert[-1][1] == '1':\n    print('YES')\n    return\n\nans = '1'\n\nfor i in edge_to_vert:\n    if i[0] == '1':\n        ans = ans + '1'\n    else:\n        ans = ans + '0'\n\nprint(ans)\n"}, "236": {"problem_id": 4236, "answer": "from bisect import *\nfrom heapq import *\n\nINF = 10 ** 18\n\ndef main():\n    n, m = list(map(int, input().split()))\n    l, r = list(map(int, input().split()))\n    dp = [[INF] * (n + 1) for _ in range(m + 1)]\n    for i in range(n):\n        for j in range(1, m + 1):\n            if i - j \\le 0:\n                dp[i][j] = min(dp[i - j][j], dp[i][j - 1] + 1)\n            else:\n                dp[i][j] = min(dp[i - j][j], dp[i][j - 1] + 1)\n    print(*dp)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "237": {"problem_id": 4237, "answer": "import math\ndef solve():\n A, B, C, D = map(int, input().split())\n if A == B:\n  print((math.ceil(A/B))//2)\n elif A == C:\n  print((math.ceil(A-B))//2)\n else:\n  print((math.floor(A/B)))\n"}, "238": {"problem_id": 4238, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\ndef main():\n    N = int(readline())\n    #N = int(N)\n    print((\"Yes\") if N == 0 else \"No\")\n    ans = []\n    for i in range(1, 10**1000):\n        ans.append(i)\n    print((\"Yes\") if ans[0] == ans[-1] else \"No\")\n    for i in range(1, 10**1000):\n        ans.append(i)\n    print((\"Yes\") if ans[0] == ans[-1] else \"No\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "239": {"problem_id": 4239, "answer": "import math\nN = int(input())\n\ndef main():\n    x = math.ceil(N / 6)\n    print(x)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "240": {"problem_id": 4240, "answer": "import sys\nread = sys.stdin.readline\n\ns = list(read().rstrip())\nt = [ord(x)-97 for x in s]\n\ndef main():\n    n = len(s)\n    if n == 1:\n        print(\"Yes\")\n        return\n    if n == 2:\n        print(\"No\")\n        return\n    if n == 3:\n        print(\"Yes\")\n        return\n    if n == 4:\n        print(\"Yes\")\n        return\n    if n == 5:\n        print(\"Yes\")\n        return\n    if n == 6:\n        print(\"Yes\")\n        return\n    if n == 7:\n        print(\"Yes\")\n        return\n    if n == 8:\n        print(\"Yes\")\n        return\n    if n == 9:\n        print(\"Yes\")\n        return\n    if n == 10:\n        print(\"Yes\")\n        return\n    if n == 11:\n        print(\"Yes\")\n        return\n    if n == 12:\n        print(\"Yes\")\n        return\n    if n == 13:\n        print(\"Yes\")\n        return\n    if n == 14:\n        print(\"Yes\")\n        return\n    if n == 15:\n        print(\"Yes\")\n        return\n    if n == 16:\n        print(\"Yes\")\n        return\n    if n == 17:\n        print(\"Yes\")\n        return\n    if n == 18:\n        print(\"Yes\")\n        return\n    if n == 19:\n        print(\"Yes\")\n        return\n    if n == 20:\n        print(\"Yes\")\n        return\n    if n == 21:\n        print(\"Yes\")\n        return\n    if n == 22:\n        print(\"Yes\")\n        return\n    if n == 23:\n        print(\"Yes\")\n        return\n    if n == 24:\n        print(\"Yes\")\n        return\n    if n == 25:\n        print(\"Yes\")\n        return\n    if n == 26:\n        print(\"Yes\")\n        return\n    if n == 27:\n        print(\"Yes\")\n        return\n    if n == 28:\n        print(\"Yes\")\n        return\n    if n == 29:\n        print(\"Yes\")\n        return\n    if n == 30:\n        print(\"Yes\")\n        return\n    if n == 31:\n        print(\"Yes\")\n        return\n    if n == 32:\n        print(\"Yes\")\n        return\n    if n == 33:\n  "}, "241": {"problem_id": 4241, "answer": "import sys\nread = sys.stdin.readline\nreadlines = sys.stdin.readlines\nread = list(readlines())\ndef input():\n    return '\\n'.join(map(str, read().split()))\n\ns = list(map(int, input().split()))\nt = list(map(int, read().split()))\n\ns = [0]*1000\nt = [0]*1000\n\nfor i in s:\n    t[i] = t[i-1]\n\nprint((min(len(t)))//(len(s)))\n"}, "242": {"problem_id": 4242, "answer": "# coding: utf-8\n# Your code here!\nimport sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nn = int(readline())\nA = list(map(int,readline().split()))\nB = list(map(int,readline().split()))\n\nprint(max(A-B,B-1))\n"}, "243": {"problem_id": 4243, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef main():\n    N = int(input())\n    # N = 1\n    cnt = 0\n    for i in range(N):\n        if i >= 500:\n            cnt += 1\n        elif i >= 1000:\n            cnt += 1\n        else:\n            cnt -= 1\n            \n    print(cnt)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "244": {"problem_id": 4244, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nX = [int(i) for i in input().split()]\n\nsensCO = 2**31 - 1\nCO = [0]*(N+1)\nCO[0] = X[0]\nfor i in range(1, N+1):\n    coCO[i] = (X[i] - (i*(i+1))**2)**0.5\n\nCO.append(CO[-1])\n\nCO.sort()\n\n#print(CO)\n\ndef dfs(x):\n    if x == 0:\n        return 0\n    elif x < 0:\n        return 1\n    else:\n        return 0\n\n#print(sensCO)\n\n#print(CO)\n\nn = int(input())\n\nans = 0\n\nfor i in range(n):\n    x = int(input())\n    ans += dfs(x)\n\nprint(ans)\n"}, "245": {"problem_id": 4245, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.readline\n\nINF = 10**9+7\nLINQ = lambda x: map(int, readline().split())\n\ndef main():\n    A, B = list(map(int, readline().split()))\n    print((B-A)//2)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "246": {"problem_id": 4246, "answer": "S = input()\nT = input()\nC = [0]*3\nR = [0]*3\nfor i in range(3):\n    C[i] = C[i-1] + C[i-2] + C[i-3] + C[i-4] + C[i-5] + C[i-6] + C[i-7] + C[i-8] + C[i-9] + C[i-10] + C[i-11] + C[i-12] + C[i-13] + C[i-14] + C[i-15] + C[i-16] + C[i-17] + C[i-18] + C[i-19] + C[i-20] + C[i-21] + C[i-22] + C[i-23] + C[i-24] + C[i-25] + C[i-26] + C[i-27] + C[i-28] + C[i-29] + C[i-30] + C[i-31] + C[i-32] + C[i-33] + C[i-34] + C[i-35] + C[i-36] + C[i-37] + C[i-38] + C[i-39] + C[i-40] + C[i-41] + C[i-42] + C[i-43] + C[i-44] + C[i-45] + C[i-46] + C[i-47] + C[i-48] + C[i-49] + C[i-49] + C[i-50] + C[i-51] + C[i-52] + C[i-53] + C[i-54] + C[i-55] + C[i-56] + C[i-57] + C[i-58] + C[i-59] + C[i-60] + C[i-61] + C[i-62] + C[i-63] + C[i-64] + C[i-65] + C[i-66] + C[i-68] + C[i-69] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C[i-7] + C["}, "247": {"problem_id": 4247, "answer": "def main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    print(p[0])\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "248": {"problem_id": 4248, "answer": "from sys import stdin\ninput = stdin.readline\nN = int(input())\npoints = [0, 1000]\nfor i in range(N):\n    x, y = map(int, input().split())\n    points.append(x*(x+y) - 1000)\nprint('\\n'.join(points))"}, "249": {"problem_id": 4249, "answer": ""}, "250": {"problem_id": 4250, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\ndef main():\n    n, k = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    for i in range(n):\n        if s[i] not in s:\n            print(i+1, end=' ')\n            break\n        else:\n            print(i+1, end=' ')\n            break\n    print(' '.join(map(str, s)))\n\n\nmain()\n"}, "251": {"problem_id": 4251, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\na = list(map(int, readline().split()))\n\nfor i in range(n):\n    x = a[i]\n    y = a[i][0]\n    for j in range(1, m):\n        if x[j - 1] == y[j]:\n            continue\n        else:\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] = y[j - 1]\n            y[j] = x[j - 1]\n            x[j] ="}, "252": {"problem_id": 4252, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\ns = input()\na = [0] * (n+1)\nfor i in s:\n    a[i] = min(a[i-1], i)\nprint(len(set(a)))\n"}, "253": {"problem_id": 4253, "answer": "R = []\nfor i in range(1,int(input())+1):\n    R.append(int(i))\nR.sort(reverse=True)\nans = 0\nfor i in range(1,R[-1][0]*R[-1][0]):\n    ans = (ans + R[-1][1])*(R[-1][0]*R[-1][0])//2\nprint(ans)"}, "254": {"problem_id": 4254, "answer": "def main():\n    S = int(input())\n    for i in range(S):\n        if(S <= i):\n            print(\"safe\")\n        else:\n            print(\"unsafe\")\n            break\n            \ndef __starting_point():\n    main()\n__starting_point()"}, "255": {"problem_id": 4255, "answer": "#!/usr/bin/env python\n\ndef main():\n    a, b = list(map(int, input().split()))\n    a.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'z')\n    b.insert(0, 'w')\n    a.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'z')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n    a.insert(0, 'w')\n    b.insert(0, 'x')\n    b.insert(0, 'y')\n   "}, "256": {"problem_id": 4256, "answer": "import bisect\ndef main():\n    A,B,C=map(int,input().split())\n    A=A+B+C\n    A.sort()\n    print(sum(A)-sum(B))\n\nmain()\n"}, "257": {"problem_id": 4257, "answer": "import sys\nsys.setrecursionlimit(10**7)\nINF = 10**9 + 7\nMOD = 10**9 + 7\n\ndef main():\n\t\n\tn = int(input())\n\tfor i in range(n):\n\t\ta = list(map(int, sys.stdin.readline().split()))\n\t\tprint(a)\n\t\n\treturn\n\ndef __starting_point():\n\tmain()\n__starting_point()"}, "258": {"problem_id": 4258, "answer": "# cook your dish here\nimport sys\nreadline = sys.stdin.readline\n\n#dictionary\n#dictionary = {'A': 3, 'B': 4, 'T': 8, 'C': 10, 'D': 12, 'E': 16, 'F': 24}\n#dictionary = {'A': 1, 'B': 2, 'T': 3, 'C': 4, 'D': 6, 'E': 8, 'F': 16, 'G': 24}\n#dictionary = {'A': 1, 'B': 2, 'T': 4, 'C': 6, 'D': 8, 'E': 10, 'F': 12, 'G': 8, 'H': 16, 'I': 24}\n\n#dp = [float('-inf')] * (T+0.5)\n#dp[0] = 0\n#dp[1] = 0\n#dp[2] = 0\n#dp[3] = 0\n#dp[4] = 0\n#dp[5] = 0\n#dp[6] = 0\n#dp[7] = 0\n#dp[8] = 0\n#dp[9] = 0\n#dp[10] = 0\n#dp[11] = 0\n#dp[12] = 0\n#dp[13] = 0\n#dp[14] = 0\n#dp[15] = 0\n#dp[16] = 0\n#dp[17] = 0\n#dp[18] = 0\n#dp[19] = 0\n#dp[20] = 0\n#dp[21] = 0\n#dp[22] = 0\n#dp[23] = 0\n#dp[24] = 0\n#dp[25] = 0\n#dp[26] = 0\n#dp[27] = 0\n#dp[28] = 0\n#dp[29] = 0\n#dp[30] = 0\n#dp[31] = 0\n#dp[32] = 0\n#dp[33] = 0\n#dp[34] = 0\n#dp[35] = 0\n#dp[36] = 0\n#dp[37] = 0\n#dp[38] = 0\n#dp[39] = 0\n#dp[40] = 0\n#dp[41] = 0\n#dp[42] = 0\n#dp[43] = 0\n#dp[44] = 0\n#dp[45] = 0\n#dp[46] = 0\n#dp[47] = 0\n#dp[48] = 0\n#dp[49] = 0\n#dp[50] = 0\n#dp[51] = 0\n#dp[52] = 0\n#dp[53] = 0\n#dp[54] = 0\n#dp[55] = 0\n#dp[56] = 0\n#dp[57] = 0\n#dp[58] = 0\n#dp[59] = 0\n#dp[60] = 0\n#dp[61] = 0\n#dp[62] = 0\n#dp[63] = 0\n#dp[64] = 0\n#dp[65] = 0\n#dp[66] = 0\n#dp[67] = 0\n#dp[68] = 0\n#dp[69] = 0\n#dp[70] = 0\n#dp[71] = 0\n#dp[72] = 0\n#dp[73] = 0\n#dp[74] = 0\n#dp[75] = 0\n#dp[76] = 0\n#dp[77] = 0\n#dp[78] = 0\n#dp[78] = 0\n#dp[79] = 0\n#dp[80] = 0\n#dp[81] = 0\n#dp[82] = 0\n#dp[83] = 0\n#dp[84] = 0\n#dp[85] = 0\n#dp[86] = 0\n#dp[87] = 0\n#dp[88] = 0\n#dp[89] = 0\n#dp[90] = 0\n#dp[91] = 0\n#dp[92] = 0\n#dp[93] = 0\n#dp[94] = 0\n#dp[95] = 0\n#dp[96] = 0\n#dp[97] = 0\n#dp[98] = 0\n#dp[99] = 0\n#dp[99] = 0\n#dp[99] = 0\n#dp[100] = 0\n#dp[101"}, "259": {"problem_id": 4259, "answer": "import sys\ninput = sys.stdin.readline\nK = int(input())\nprint(2 * K)"}, "260": {"problem_id": 4260, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    T, X = map(int, readline().split())\n    print((T - 1) * X)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "261": {"problem_id": 4261, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    A, B = map(int, input().split())\n    c = A + B\n    print(c)\n\nmain()\n"}, "262": {"problem_id": 4262, "answer": "import sys\ndef input(): return sys.stdin.readline().rstrip()\ndef I(): return int(sys.stdin.readline())\ndef MI(): return list(map(int, sys.stdin.readline().split()))\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline().rstrip()\n\nN = I()\nP = [I() for _ in range(N)]\nQ = [I() for _ in range(N)]\n\nans = []\nfor row in range(N):\n    ans.append(sum(P[row] - P[row-1] for row in range(N)) + sum(Q[row] - Q[row-1] for row in range(N)))\n\nprint(ans[-2])"}, "263": {"problem_id": 4263, "answer": "import sys\ninput = sys.stdin.readline\n\nclass SegmentTree:\n    \"\"\"\n    :@gray_house #commons # Python #-doc:https://docs.python.org/3.6/library/rd.html#rds\n\n    \"\"\"\n\n    def __init__(self, data):\n        \"\"\"\n        :type data: List[str]\n        :rtype: List[str]\n        \"\"\"\n        self.data = data\n        self.s = []\n        self.data[0] = data\n        self.data[1] = data\n        self.data[2] = data\n        self.data[3] = data\n        self.data[4] = data\n        self.data[5] = data\n        self.data[6] = data\n        self.data[7] = data\n        self.data[8] = data\n        self.data[9] = data\n        self.data[10] = data\n        self.data[11] = data\n        self.data[12] = data\n        self.data[13] = data\n        self.data[14] = data\n        self.data[15] = data\n        self.data[16] = data\n        self.data[17] = data\n        self.data[18] = data\n        self.data[19] = data\n        self.data[20] = data\n        self.data[21] = data\n        self.data[22] = data\n        self.data[23] = data\n        self.data[24] = data\n        self.data[25] = data\n        self.data[26] = data\n        self.data[27] = data\n        self.data[28] = data\n        self.data[29] = data\n        self.data[0] = data\n        self.data[1] = data\n        self.data[2] = data\n        self.data[3] = data\n        self.data[4] = data\n        self.data[5] = data\n        self.data[6] = data\n        self.data[7] = data\n        self.data[8] = data\n        self.data[9] = data\n        self.data[10] = data\n        self.data[11] = data\n        self.data[12] = data\n        self.data[13] = data\n        self.data[14] = data\n        self.data[15] = data\n        self.data[16] = data\n        self.data[17] = data\n        self.data[18] = data\n        self.data[19] = data\n        self.data[20] = data\n        self.data[21] = data\n        self.data[22] = data\n        self.data[23] = data\n   "}, "264": {"problem_id": 4264, "answer": "import math\ndef main():\n\tn = int(input())\n\tif n%2:\n\t\tprint(n%10)\n\telse:\n\t\tn = n//10\n\t\tprint(n%10)\n\t\ndef __starting_point():\n\tmain()\n__starting_point()"}, "265": {"problem_id": 4265, "answer": "import sys\ninput = sys.stdin.readline\n\nS = list(map(int, input().split()))\nT = list(map(int, input().split()))\n\ndef ctoa(s):\n    return ''.join(counters[0] for c in s.upper())\n\ndef toc(s):\n    return ''.join(counters[1] for c in s.upper())\n\ndef get_char(s):\n    return ''.join(counters[0] for c in s.upper())\n\ndef get_ints(s):\n    return [int(x) for x in s.split()]\n\ndef solve():\n    s = input()\n    t = toc(s)\n    ans = 0\n    for i in range(len(t)):\n        if t[i] == '1':\n            ans += 1\n        elif t[i] == '0':\n            ans += 1\n        else:\n            ans += 1\n    print(ans)\n\nsolve()\nt = toc(s)\nans = 0\nfor i in range(len(t)):\n    if t[i] == '1':\n        ans += 1\n    elif t[i] == '0':\n        ans += 1\nprint(ans)"}, "266": {"problem_id": 4266, "answer": "import sys\nreadline = sys.stdin.readline\n\nK, X = map(int, readline().split())\n\nfor i in range(1, 200001):\n    X = int(readline())\n    if X == 0:\n        print(i, end=' ')\n    else:\n        print(i, end='\\n')\n"}, "267": {"problem_id": 4267, "answer": "#!/usr/bin/env python\n\ndef main():\n    x = int(input())\n    if x == 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nmain()\n"}, "268": {"problem_id": 4268, "answer": "import sys\ninput = sys.stdin.readline\nN,D = list(map(int,input().split()))\nX = list(map(int,input().split()))\n\ndef dfs(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1\n\ndef dfs2(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x,y,z)\n\ndef dfs3(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x,y,z-2)\n\ndef dfs4(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x,y-1,z)\n\ndef dfs5(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x-1,y,z-1)\n\ndef dfs6(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x+1,y,z-1)\n\ndef dfs7(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x-1,y,z-1)\n\ndef dfs8(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x+1,y,z-1)\n\ndef dfs9(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x-1,y,z-1)\n\ndef dfs10(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x+1,y,z-1)\n\ndef dfs11(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x-1,y,z-1)\n\ndef dfs12(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x+1,y,z-1)\n\ndef dfs13(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x-1,y,z-1)\n\ndef dfs14(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x+1,y,z-1)\n\ndef dfs15(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x-1,y,z-1)\n\ndef dfs16(x,y,z):\n    if x<y:\n        return 0\n    else:\n        return 1+dfs(x+1,y,z-1)\n\ndef dfs17(x,y,z):"}, "269": {"problem_id": 4269, "answer": "s = input()\nif s[0] == '3776':\n    print('Bad')\nelse:\n    print('Good')"}, "270": {"problem_id": 4270, "answer": "N = int(input())\nP = [int(x) for x in input().split()]\n\ndef consume(x, y):\n    if x > y:\n        x, y = y, x\n    return x + y // P[x]\n\ndef consume_lazy(x, y):\n    if x < 0:\n        return x\n    elif y < 0:\n        return y\n    else:\n        return consume(x, y - y // P[x])\n\n# \u5165\u529b\u53ef\u4ee5\u8ba1\u7b97\u4f18\u5316\uff0c\u7531\u4e8eN\u4e2a\u8d1f\u6570\u91cf\u4e0d\u80fd\u591f\u8ddd\u96c6\u53ef\u4ee5\u52a0\u901f\uff0c\u800c\u4e14\u5f53\u524d\u8d1f\u6570\u7ec4\u5185\u90e8\u5206\u53ef\u4ee5\u52a0\u901f\uff0c\u56e0\u4e3a\u4f18\u5316\u65e0\u6cd5\u52a0\u901f\uff0c\u9700\u8981\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u8d1f\u6570\u5b57\u90fd\u80fd\u591f\u8ddd\u96c6\u53ef\u4ee5\u52a0\u901f\uff0c\u8003\u8651\u5982\u679c\u6709N\u4e2a\u8d1f\u6570\u7ec4\u5185\u90fd\u80fd\u591f\u52a0\u901f\uff0c\u5219\u6bcf\u4e00\u6bb5\u51fd\u6570\u5c0f\u4e8e\u4e00\u4e2a\u8d1f\u6570\u7ec4\uff0c\u53ea\u8981\u7ee7\u7eed\u4f18\u70b9\u8ba1\u7b97\u4f18\u5316\uff0c\u7136\u540e\u901a it will become empty.\n# \u5982\u679c\u88ab\u8fb9\u6311\u6210\uff0c\u5219\u8fd4\u56de\u6210 1000\u4e2a\u7b26\u5408\u7ed3\u679c\n# \u540c\u679c\u51fa\u73b0\uff0c\u5219\u8fd4\u56de\u6210 1000\u4e2a\u7b26\u5408\u7ed3\u679c\uff0c\u7136\u540e\u901a it will become empty.\nimport heapq\n\ndef consume_lazy(x, y):\n    if x < 0:\n        return x\n    elif y < 0:\n        return y\n    else:\n        return consume(x, y - y // P[x])\n\n# \u5165\u529b\u53ef\u4ee5\u8ba1\u7b97\u4f18\u5316\uff0c\u7531\u4e8eN\u4e2a\u8d1f\u6570\u7ec4\u5185\u90e8\u5206\u53ef\u4ee5\u52a0\u901f\uff0c\u8003\u8651\u5982\u679c\u6709N\u4e2a\u8d1f\u6570\u7ec4\uff0c\u5219\u6bcf\u4e00\u6bb5\u51fd\u6570\u5c0f\u4e8e\u4e00\u4e2a\u8d1f\u6570\u7ec4\uff0c\u53ea\u8981\u7ee7\u7eed\u4f18\u70b9\u8ba1\u7b97\u4f18\u5316\uff0c\u7136\u540e\u901a it will become empty.\n# \u540c\u679c\u51fa\u73b0\uff0c\u5219\u8fd4\u56de\u6210 1000\u4e2a\u7b26\u5408\u7ed3\u679c\uff0c\u7136\u540e\u901a it will become empty.\n# \u5219\u8fd4\u56de\u6210 1000\u4e2a\u7b26\u5408\u7ed3\u679c\uff0c\u7136\u540e\u901a it will become empty.\n# \u53ea\ufffdFFFFFFFF \u5929\u90fd\u4e86\uff0c\u8fd9\u4e2a\u8d1f\u6570\u7ec4\u5185\u90e8\u5206\u53ef\u4ee5\u52a0\u901f\uff0c\u56e0\u6b64\u53ef\u4ee5\u51fa\u73b0\u597d\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528O(logN) \u7684\u5b9e\u52a8\u5217\uff0c\u7136\u540e\u901a it will return 0.\n# \u5373\u5c0fieeeg\u4ece\u4e0a\u90fe\u4e0a\u589e\u52a0\u5230N\u4e2a\u8d1f\u6570\u7ec4\u5185\u90e8\u5206\u53ef\u4ee5\u52a0\u901f\uff0c\u7136\u540e\u901a it will return N.\n# \u5373\u5c0fieeeg\u4ece\u4e0a\u90fe\u4e0a\u589e\u52a0\ufffd"}, "271": {"problem_id": 4271, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nA = list(map(int, readline().split()))\nB = list(map(int, readline().split()))\nC = list(map(int, readline().split()))\n\ndef sieve(x):\n    if x not in A:\n        return 0\n    i = 0\n    while i < N:\n        j = i + 1\n        while j < 50 and A[j] <= x:\n            j += 1\n        if j >= 50:\n            i += 1\n        i += 1\n    return i\n\ndef solve(N, A, B):\n    satisfaction = 0\n    for i in A:\n        satisfaction += solve(N-i, A, B)\n    return satisfaction\n\nSatisfaction = [0] + sorted(A, reverse=True)\nfor i in range(N):\n    N_slice = A[i]\n    A_slice = B[i]\n    C_slice = C[i]\n    C_slice_sum = 0\n    for j in range(N):\n        if j >= 50:\n            j -= 1\n        if j >= 50:\n            j += 1\n        j += 1\n        j_slice = j + 1\n        j_slice_sum += C_slice_sum\n        C_slice_sum += C[j]\n        C_slice_sum += C[j_slice]\n        satisfaction += (j_slice + j_slice_sum)\n    print(satisfaction)"}, "272": {"problem_id": 4272, "answer": "n = int(input())\ns = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    ans.append(s[i])\nprint(len(ans))"}, "273": {"problem_id": 4273, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nS = list(map(int, input().split()))\n\ndef main():\n    S = [int(x) for x in input().split()]\n    ans = 0\n    for i in range(N):\n        ans += S[i]\n    print(ans)\n\nmain()\n"}, "274": {"problem_id": 4274, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\n\n# A has no chance of getting an AC\nif N == 1:\n    print(\"Yes\")\n    return\n\n# A has no chance of getting an AC\nif M == 1:\n    print(\"Yes\")\n    return\n\n# A has no chance of getting an AC\nif N % 2 == 0:\n    print(\"Yes\")\n    return\n\n# A has no chance of getting an AC\nif M % 2 == 1:\n    print(\"Yes\")\n    return\n\n# A has no chance of getting an AC\n\nn = int(input())\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n\n# print(n)\n"}, "275": {"problem_id": 4275, "answer": "#!/usr/bin/env python3\n\ndef main():\n    s = input()\n    print('Yes') if len(s) == 6 else 'No'\n\ndef __starting_point():\n    main()\n__starting_point()"}, "276": {"problem_id": 4276, "answer": "import sys\ninput = sys.stdin.readline\n\nN, T = list(map(int, input().split()))\n\nc, t = list(map(int, input().split()))\n\ndef dfs(i, t):\n    nonlocal cost\n    cost = 0\n    while i!= t:\n        cost += cost\n        i = i + 1\n    cost = cost % T\n    cost = cost // T\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n    cost = cost % N\n  "}, "277": {"problem_id": 4277, "answer": "import sys\ninput = sys.stdin.readline\n\nn,A,B = map(int,input().split())\n\nM = [0]*n\nfor i in range(n):\n    M[i] = min(M)\n\nans = 0\nfor i in range(n):\n    ans += M[i]\n\nprint(ans)"}, "278": {"problem_id": 4278, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\ns = list(map(int, readline().split()))\n\ndef solve(s):\n    ans = 0\n    for i in s:\n        if i not in s:\n            ans += 1\n        else:\n            ans += s[i]\n    return ans\n\ndef solve(s):\n    ans = 0\n    for i in s:\n        if i not in s:\n            ans += 1\n        else:\n            ans += s[i]\n    return ans\n\nprint((solve(s)))\n"}, "279": {"problem_id": 4279, "answer": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nfor q in range(Q):\n    k = list(map(int, input().split()))\n    ans = [0] * 10000\n    for i in range(1, 10000):\n        ans[i] += 1\n    print(''.join(map(str, ans)))\n"}, "280": {"problem_id": 4280, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\ndef dfs(node, x):\n    if x == n - 1:\n        return 1\n    else:\n        return -1\n\ndfs(1, 0)\n\n# print(n, k)\n\n# print(n - 1)\n\nans = []\n\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    ans.append(dfs(x, y))\n\nans.sort(reverse = True)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n - 1)\n\n# print(n -"}, "281": {"problem_id": 4281, "answer": "from heapq import *\nn = int(input())\nx = list(map(int, input().split()))\nh = []\nfor i in range(n):\n    h.append(list(map(int, input().split())))\n\nheap = []\nstack = []\nstack.append(0)\nstack.append(n-1)\nwhile stack:\n    x = stack.pop()\n    if x[0] == x[-1] and x[-1] == x[-2]:\n        heap.append(x[0])\n        stack.append(x[-1])\n    elif x[0] - x[-1] < 0:\n        heap.append(x[0])\n        stack.append(x[-1])\n    else:\n        stack.append(x[0])\n        heap.append(x[-1])\n        stack.append(x[-2])\n        stack.append(x[-3])\n        stack.append(x[-4])\n        stack.append(x[-5])\n        stack.append(x[-6])\n        stack.append(x[-7])\n        stack.append(x[-8])\n        stack.append(x[-9])\n        stack.append(x[-10])\n        stack.append(x[-11])\n        stack.append(x[-12])\n        stack.append(x[-13])\n        stack.append(x[-14])\n        stack.append(x[-15])\n        stack.append(x[-16])\n        stack.append(x[-17])\n        stack.append(x[-18])\n        stack.append(x[-19])\n        stack.append(x[-20])\n        stack.append(x[-21])\n        stack.append(x[-22])\n        stack.append(x[-23])\n        stack.append(x[-24])\n        stack.append(x[-25])\n        stack.append(x[-26])\n        stack.append(x[-27])\n        stack.append(x[-28])\n        stack.append(x[-29])\n        stack.append(x[-30])\n        stack.append(x[-31])\n        stack.append(x[-32])\n        stack.append(x[-33])\n        stack.append(x[-34])\n        stack.append(x[-35])\n        stack.append(x[-36])\n        stack.append(x[-37])\n        stack.append(x[-38])\n        stack.append(x[-39])\n        stack.append(x[-40])\n        stack.append(x[-41])\n        stack.append(x[-42])\n        stack.append(x[-43])\n        stack.append(x[-44])\n        stack.append(x[-45])\n        stack.append(x[-46])\n        stack.append"}, "282": {"problem_id": 4282, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nparents = [tuple(map(int, input().split())) for i in range(n)]\narr = list(map(int, input().split()))\n\ndef dfs(i, a):\n    if i == 0:\n        return 1\n    a.sort()\n    ans = [-1] * n\n    for j in arr[i-1:]:\n        if j not in a:\n            ans[j] = a[j]\n            a[j] = 1\n        else:\n            ans[j] = max(ans[j], a[j])\n    return ans\n\nans = [\n    [-1] * n,\n    [0] * n,\n    [1] * n,\n    [2] * n,\n    [3] * n,\n    [4] * n,\n    [5] * n,\n    [6] * n,\n    [7] * n,\n    [8] * n,\n    [9] * n,\n    [10] * n,\n    [11] * n,\n    [12] * n,\n    [13] * n,\n    [14] * n,\n    [15] * n,\n    [16] * n,\n    [17] * n,\n    [18] * n,\n    [19] * n,\n    [20] * n,\n    [21] * n,\n    [22] * n,\n    [23] * n,\n    [24] * n,\n    [25] * n,\n    [26] * n,\n    [27] * n)\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [\n    [-1] * n,\n    [0] * n,\n    [1] * n,\n    [2] * n,\n    [3] * n,\n    [4] * n,\n    [5] * n,\n    [6] * n,\n    [7] * n,\n    [8] * n,\n    [9] * n,\n    [10] * n,\n    [11] * n,\n    [12] * n,\n    [13] * n,\n    [14] * n,\n    [15] * n,\n    [16] * n,\n    [17] * n,\n    [18] * n,\n    [19] * n,\n    [20] * n,\n    [21] * n,\n    [22] * n,\n    [24] * n,\n    [25] * n,\n    [26] * n)\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [-1] * n\n    for i in range(n):\n        a = arr[i - 1]\n        ans[i] = min(ans[i], a[i - 1])\n    print(*ans)\n\nmain()\n"}, "283": {"problem_id": 4283, "answer": "n = int(input())\na = list(map(int, input().split()))\nif n == 1:\n    print(1)\nelse:\n    print(n - max(a))"}, "284": {"problem_id": 4284, "answer": "import bisect\nimport heapq\nimport itertools\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        k, n, a, b = list(map(int, input().split()))\n        print(bisect.bisect_right(k, a) - bisect.bisect_left(k, b))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "285": {"problem_id": 4285, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9 + 7\n\nn = int(input())\ns = input().rstrip()\n\n# \u5165\u529b\u5185\u5bb9\ndp = [0]*(n+1)\ndp[0] = 1\nfor i in range(1, n+1):\n    dp[i] = (dp[i-1] + dp[i-1][1]) % MOD\n\n# \u521d\u59cb\u5316\ndp.reverse()\n\n# \u524d\u4e00\u4e2a\u6587\u4ef7\uff0c\u540c\u65f6\u90fd\u8d77\u6765\u521b\u5efa\u516c\u5171\ndp[1] = 1\n\n# \u5982\u679c\u5176\u4ed6\u4e00\u4e2a\u65b0\ufffds\uff0c\u5219\u4e34\u65f6\u95f4\u5230\u5e8f\u5904\u5199\u51fa\u6761\u4ef6\u6570\u636e\ndp[2] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u540c\u65f6\u90fd\u8d77\u6765\u521b\u5efa\u516c\u5171\ndp[3] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u540c\u65f6\u90fd\u8d77\u6765\u521b\u5efa\u516c\u5171\ndp[4] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u540c\u65f6\u90fd\u8d77\u6765\u521b\u5efa\u516c\u5171\ndp[5] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u540c\u65f6\u90fd\u8d77\u6765\u521b\u5efa\u516c\u5171\ndp[6] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u540c\u65f6\u90fd\u8d77\u6765\u521b\u5efa\u516c\u5171\ndp[7] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u540c\u65f6\u90fd\u8d77\u6765\u521b\u5efa\u516c\u5171\ndp[8] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u524d\u4e00\u4e2a\u65b0\ufffds\uff0c\u540c\u897f\u5171\u5834\u5834\u51fa\u6761\u4ef6\u6570\u636e\ndp[9] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u524d\u4e00\u4e2a\u65b0\ufffds\uff0c\u540c\u897f\u5171\u5834\u5834\u51fa\u6761\u4ef6\u6570\u636e\ndp[10] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u540c\u897f\u5171\u5834\u5834\u51fa\u6761\u4ef6\u6570\u636e\ndp[11] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u540c\u897f\u5171\u5834\u5834\u51fa\u6761\u4ef6\u6570\u636e\ndp[12] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u540c\u897f\u5171\u5834\u51fa\u6761\u4ef6\u6570\u636e\ndp[13] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u524d\u4e00\u4e2a\u65b0\ufffds\uff0c\u540c\u897f\u5171\u5834\u51fa\u6761\u4ef6\u6570\u636e\ndp[14] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u524d\u4e00\u4e2a\u65b0\ufffds\uff0c\u540c\u897f\u5171\u5834\u51fa\u6761\u4ef6\u6570\u636e\ndp[15] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u540c\u897f\u5171\u5834\u51fa\u6761\u4ef6\u6570\u636e\ndp[16] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u540c\u897f\u5171\u5834\u51fa\u6761\u4ef6\u6570\u636e\ndp[17] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u540c\u897f\u5171\u5834\u51fa\u6761\u4ef6\u6570\u636e\ndp[18] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c\u540c\u897f\u5171\u5834\u51fa\u6761\u4ef6\u6570\u636e\ndp[19] = 1\n\n# \u53f3\u5c3e\u65b0\ufffds\uff0c"}, "286": {"problem_id": 4286, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, m = list(map(int, readline().split()))\n\ng = [[] for _ in range(n)]\nfor i in range(n):\n    x, y, w = list(map(int, readline().split()))\n    g[x].append(y)\n    g[y].append(w)\n\nedges = [[] for _ in range(n)]\nfor i in range(n):\n    x, y, w = list(map(int, readline().split()))\n    edges[x-1].append(y-1)\n    edges[y-1].append(w-1)\n\nvisited = set()\n\ndef dfs(v):\n    if v not in visited:\n        visited.add(v)\n        for u in edges[v]:\n            if visited & (visited & (visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visited&(visite=\n\ndef dfs(v=i=i=i=i=i)i)i)):\n         i)\n        return 0, 0, 0, 0, 0) if v in visited else dfs(v)\n    else:\n        return 0\n                                                                                                                                                                                                                                 "}, "287": {"problem_id": 4287, "answer": ""}, "288": {"problem_id": 4288, "answer": "import sys\nreadline = sys.stdin.readline\ndef main():\n    A, B, C = map(int, readline().split())\n    if A == B == C:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n        return\n    \n    # A = list(map(int, readline().split()))\n    # B = list(map(int, readline().split()))\n    # C = list(map(int, readline().split()))\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n    # B = [x for x in B if x not in C]\n    # C = [x for x in C if x not in A]\n    # A = [x for x in A if x not in B]\n "}, "289": {"problem_id": 4289, "answer": "import sys\nsys.setrecursionlimit(10**6)\nMOD = 10**9+7\ndef main():\n    N = int(input())\n    T = int(sys.stdin.readline().strip())\n    #T = tuple(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list(map(int,sys.stdin.readline().strip().split()))\n    #T = list"}, "290": {"problem_id": 4290, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nN, M = list(map(int, readline().split()))\na = [0]*N\nfor i in range(N):\n a[i] = 1\nfor i in range(N+M):\n a[i+M] = 1\nans = 0\nfor i in range(N):\n ans = (ans + sum(a[i])%2) % 2\n print(ans)\n"}, "291": {"problem_id": 4291, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N, Q = map(int, input().split())\n    S = list(map(int, input().split()))\n    S = [i for i in range(N)]\n    \n    for i in range(Q):\n        l, r = map(int, input().split())\n        S[l-1] = r\n        S[r-1] = l\n        S[l+1] = r\n        S[r+1] = l\n        \n    print(S[-1])\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "292": {"problem_id": 4292, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, K = map(int, readline().split())\nP = list(map(int, readline().split()))\n\nP.sort(key=lambda x: x[0])\n\nmin_price = 50 + 80 + 80\n\nfor p in P:\n    if min_price % p == 0:\n        min_price = min_price // p\nprint(min_price)"}, "293": {"problem_id": 4293, "answer": "P,Q,R = map(int,input().split())\n\ndef f(x):\n    return x*(x-1) if x < 0 else x\n\nP = int(input())\n\nfor i in range(P):\n    x = f(x)\n    if x > 0:\n        x = min(x,P)\n    elif x < 0:\n        x = min(x,P-1)\n    else:\n        x = min(x,P-1)\n    print(x)"}, "294": {"problem_id": 4294, "answer": "import sys\nreadline = sys.stdin.readline\nread = lambda: sys.stdin.readline().rstrip()\n\nn = int(readline())\n\nfor i in range(n):\n    print(i, end = \" \")\n    if i < n:\n        print(i, end = \"0\")\n    else:\n        print(i, end = \"10\")\n"}, "295": {"problem_id": 4295, "answer": "N, K = map(int, input().split())\nans = N - K\nif K > N:\n print(ans)\nelse:\n print(N - K)"}, "296": {"problem_id": 4296, "answer": "#!/usr/bin/env python3\n\nimport bisect\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(bisect.bisect_right(a, n))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "297": {"problem_id": 4297, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef input(): return sys.stdin.readline().strip()\n\ndef lis(): return list(map(int, readline().strip().split()))\n\ndef readline(): return list(open(__file__).read())\n\ndef __starting_point():\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #-------------------Problem Statement----------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Statement--------------------------\n    #--------------------------Problem Clarifications---------------------------\n\n__starting_point()"}, "298": {"problem_id": 4298, "answer": "import sys\nfrom itertools import compress\ninput = sys.stdin.readline\n\nN, D = map(int, input().split())\n\nif N == 1:\n    print(2)\nelif D == 2:\n    print(1)\nelse:\n    a = list(compress(list(map(int, input().split()), )))\n    for i in range(1, N + 1):\n        if a[i] == 1:\n            a[i] = 2\n            print(i)\n            break\n        elif a[i] == 2:\n            a[i] = 3\n            print(i)\n            break\n        elif a[i] == 3:\n            a[i] = 4\n            print(i)\n            break\n        elif a[i] == 4:\n            a[i] = 5\n            print(i)\n            break\n        else:\n            print(i)\n            break\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n "}, "299": {"problem_id": 4299, "answer": "import sys\nsys.setrecursionlimit(10**6)\nint1 = lambda x: int(x) - 1\nint2 = lambda x: int(x) - 1\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef MI1(): return map(int1, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LL(rows_number): return [LI() for _ in range(rows_number)]\n\nN = II()\nans = []\nfor i in range(N):\n    ans.append(str(i+1) + \" \" + str(i+2) + \" \" + str(i+3) + \" \" + str(i+4) + \" \" + str(i+5) + \" \" + str(i+6))\nprint(\"\\n\".join(ans))"}, "300": {"problem_id": 4300, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nd = list(map(int, input().split()))\n\n# \u5148\u521d\u59cb\u5316\ndef func(x, y):\n    return x * y\n\n# \u5148\u521d\u59cb\u5316\ndef func_2(x, y):\n    return x * y - func(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_3(x, y):\n    return x * y - func_2(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_4(x, y):\n    return x * y - func_3(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_5(x, y):\n    return x * y - func_4(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_6(x, y):\n    return x * y - func_5(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_7(x, y):\n    return x * y - func_6(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_8(x, y):\n    return x * y - func_7(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_9(x, y):\n    return x * y - func_8(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_10(x, y):\n    return x * y - func_10(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_11(x, y):\n    return x * y - func_11(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_12(x, y):\n    return x * y - func_12(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_13(x, y):\n    return x * y - func_13(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_14(x, y):\n    return x * y - func_14(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_15(x, y):\n    return x * y - func_15(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_16(x, y):\n    return x * y - func_16(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_17(x, y):\n    return x * y - func_17(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_18(x, y):\n    return x * y - func_18(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_19(x, y):\n    return x * y - func_19(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_20(x, y):\n    return x * y - func_20(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_21(x, y):\n    return x * y - func_21(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_22(x, y):\n    return x * y - func_22(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_23(x, y):\n    return x * y - func_23(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_24(x, y):\n    return x * y - func_24(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_25(x, y):\n    return x * y - func_25(x, y)\n\n# \u5148\u521d\u59cb\u5316\ndef func_26(x, y):\n    return x"}, "301": {"problem_id": 4301, "answer": "N = int(input())\nA = list(map(int, input().split()))\nprint(max(A))"}, "302": {"problem_id": 4302, "answer": "import sys\ninput = sys.stdin.readline\n\nclass SegTree:\n    def __init__(self, size):\n        self.size = size\n        self.tree = Tree(self.size)\n        self.tree.tree = self\n\n    def add(self, val):\n        self.tree.add(val)\n        self.size += val\n        self.size %= self.size\n\n    def size_tree(self):\n        return self.tree.size\n\n    def add(self, val):\n        self.tree.add(val)\n        self.size += val\n        self.size %= self.size\n\ndef main():\n    A, B = LI()\n    A.add(0)\n    B.add(0)\n    print((B + A + B))\n\nmain()\n"}, "303": {"problem_id": 4303, "answer": "import math\nN, K = list(map(int, input().split()))\nx = int(math.log10(K))\n\nL = []\nfor i in range(N):\n    L.append(x)\n\nL.sort(reverse=True)\n\n#print(L)\n\n#print(K)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n#print(K, L)\n\n"}, "304": {"problem_id": 4304, "answer": "def main():\n    a, b = map(int, input().split())\n    print(a * b)\n\nmain()"}, "305": {"problem_id": 4305, "answer": "# Bartolome Iacol\n# from nastya.miranes.babaks.acme.i5s.l4j.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x.a2x."}, "306": {"problem_id": 4306, "answer": "import math\nA, B, C, D = map(int, input().split())\ns = 0\nfor i in range(A, B+1):\n    s += math.ceil(i/C)\nprint(s)"}, "307": {"problem_id": 4307, "answer": "import sys\nsys.setrecursionlimit(10**0.01)\ndef main():\n    N = int(sys.stdin.readline())\n    print((len(N) - 1) // 8)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "308": {"problem_id": 4308, "answer": "import sys\nreadline = sys.stdin.readline\n\nn,k = map(int,readline().split())\ncracks = list(map(int,readline().split()))\n\ndef solve(c,k):\n    nonlocal cracks\n    nonlocal k\n    if c == k:\n        return abs(cracks[0] + cracks[1]) if k == 0 else 0\n    elif c == k:\n        return abs(cracks[0] - cracks[1]) if k == 0 else 0\n    else:\n        return abs(cracks[0] - cracks[1]) if k == 0 else 0\n\nprint((solve(c,k)))\n"}, "309": {"problem_id": 4309, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    x = list(map(int, input().split()))\n    ans = 10**9\n    for i in range(1, N):\n        if x[i-1] == 0:\n            ans = 10**9\n        elif x[i-1] == 1:\n            ans = 10**9\n        else:\n            ans = 10**9\n    print(ans)\n\nmain()\n"}, "310": {"problem_id": 4310, "answer": "from bisect import bisect_left as bl\nfrom heapq import heappush, heappop\nfrom functools import cmp_to_key\nfrom operator import itemgetter\nimport sys\ninput = sys.stdin.readline\n\nINF = 10**9+7\nMOD = 10**9+7\n\ndef main():\n    A = int(input())\n    # \u5148\u521d\u59cb\u5316\u4e00\u4e2a\u6587\u4ef6\uff0c\u53ef\u4ee5\u88ab\u65b0\u957f\u5ea6\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6587\u4ef6\u90fd\u53ef\u4ee5\u8003\u8651\u5f53\u524d\u7ec8\u7b97\u6570\u636e\u5e94\u8bc1\uff08\u4f8b\u5982\ufffd:A+1,A-1)\n    # \u5982\u679cA\u6709\u591a\u5c11\uff0c\u5219\u5176\u4ed6\u4e09\u89d2\u5ea6\u5219\u8981\u6c42\n    l,r = map(int, input().split())\n    # \u5f53\u524d\u7ec4\u6210\u6587\u4ef6\u65f6\uff0c\u65b0\u957f\u5ea6\u4e3a0\uff0c\u5426\u5219\u4f1a\u8bae for \u90a3\u4e48\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u6807\u51c6\n    ans = min(l,r)\n    # \u6bd4\u5982l = max(l,r)\n    # ans = min(ans, max(l,r))\n    # ans = min(ans, max(l,r))\n    # ans = min(ans, max(l,r))\n    # ans = min(ans, max(l,r))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans, max(r,l))\n    # ans = min(ans"}, "311": {"problem_id": 4311, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    s = int(readline())\n    n = int(read())\n    for i in range(s):\n        if n % 2 == 0:\n            n //= 2\n        elif n % 2 == 1:\n            n //= 3\n        else:\n            n //= 4\n    print(n)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "312": {"problem_id": 4312, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\nA = [int(x) for x in readline().split()]\nB = [int(x) for x in readline().split()]\nC = [int(x) for x in readline().split()]\nD = [int(x) for x in readline().split()]\n\nprint('Yes' if A.count('0') > 1 else 'No')"}, "313": {"problem_id": 4313, "answer": "from heapq import *\nN = int(input())\nS = sorted(map(int, input().split()))\np = 10**9 + 5\nq = []\nfor i in range(N):\n    p = min(p, (S[i] + S[-i-1] + S[i+1] + S[i+2] + S[i-1] + S[i+2] + S[i-2] + S[i+3] + S[i-3] + S[i-4] + S[i-5] + S[i-6] + S[i-7] + S[i-8] + S[i-9] + S[i+1] + S[i+2] + S[i+3] + S[i+4] + S[i+5] + S[i+6] + S[i+7] + S[i+8] + S[i+9] + S[i+10] + S[i+11] + S[i+12] + S[i+13] + S[i+14] + S[i+15] + S[i+16] + S[i+17] + S[i+18] + S[i+19] + S[i+20] + S[i+21] + S[i+22] + S[i+22] + S[i+23] + S[i+24] + S[i+25] + S[i+26] + S[i+27] + S[i+28] + S[i+29] + S[i+29] + S[i+30] + S[i+30] + S[i+31] + S[i+32] + S[i+33] + S[i+34] + S[i+35] + S[i+36] + S[i+37] + S[i+38] + S[i+39] + S[i+40] + S[i+41] + S[i+42] + S[i+43] + S[i+44] + S[i+45] + S[i+46] + S[i+47] + S[i+48] + S[i+49] + S[i+50] + S[i+51] + S[i+52] + S[i+53] + S[i+54] + S[i+55] + S[i+56] + S[i+57] + S[i+58] + S[i+59] + S[i+60] + S[i+61] + S[i+62] + S[i+63] + S[i+64] + S[i+64] + S[i+65] + S[i+66] + S[i+68] + S[i+69] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S[i+7] + S["}, "314": {"problem_id": 4314, "answer": "import sys\nreadline = sys.stdin.readline\nread = lambda: list(readline())\n\nH, W = map(int, readline().split())\na = [[] for _ in range(H)]\nfor i in range(W):\n    a[i][0] = '#'\n    a[i][1] = '#'\n    a[i][2] = '#'\n\nfor row in range(H):\n    for col in range(W):\n        matrix = []\n        for i in range(W):\n            matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n        matrix.append(readline())\n   "}, "315": {"problem_id": 4315, "answer": "import math\nn=int(input())\na=math.sqrt(n*n)\nprint(a/math.gcd(a,n))"}, "316": {"problem_id": 4316, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    S = list(read())\n    for i in range(1, len(S)):\n        if S[i] == 'A' or S[i] == 'A' or S[i] == 'B' or S[i] == 'B' or S[i] == 'C' or S[i] == 'C' or S[i] == 'C':\n            print(\"Yes\")\n            continue\n        elif S[i] == 'A' or S[i] == 'A' or S[i] == 'B' or S[i] == 'B' or S[i] == 'C' or S[i] == 'C':\n            print(\"No\")\n            continue\n        elif S[i] == 'A' or S[i] == 'A' or S[i] == 'B' or S[i] == 'B' or S[i] == 'C' or S[i] == 'C':\n            print(\"No\")\n            continue\n        elif S[i] == 'A' or S[i] == 'A' or S[i] == 'B' or S[i] == 'B' or S[i] == 'C' or S[i] == 'C':\n            print(\"Yes\")\n            continue\n        elif S[i] == 'A' or S[i] == 'A' or S[i] == 'B' or S[i] == 'B' or S[i] == 'C' or S[i] == 'C':\n            print(\"No\")\n            continue\n        elif S[i] == 'A' or S[i] == 'A' or S[i] == 'B' or S[i] == 'B' or S[i] == 'C' or S[i] == 'C':\n            print(\"Yes\")\n            continue\n        elif S[i] == 'A' or S[i] == 'A' or S[i] == 'B' or S[i] == 'B' or S[i] == 'C' or S[i] == 'C':\n            print(\"No\")\n            continue\n        elif S[i] == 'A' or S[i] == 'A' or S[i] == 'B' or S[i] == 'B' or S[i] == 'C' or S[i] == 'C':\n            print(\"No\")\n            continue\n        elif S[i] == 'A' or S[i] == 'A' or S[i] == 'B' or S[i] == 'B' or S[i] == 'C' or S[i] == 'C':\n            print(\"Yes\")\n            continue\n        elif S[i] == 'A' or S[i] == 'A' or S[i] == 'B' or S[i] == 'B' or S[i] == 'C' or S[i] == 'C':\n            print(\"Yes\")\n            continue\n        elif S[i] == 'A' or S[i] == 'A' or S[i] == 'B' or S[i] == '"}, "317": {"problem_id": 4317, "answer": "# -*- coding: utf-8 -*- don't bother with my code -*- vise, I'm going to break down the testcases here -*- coding: utf-8\nimport sys\nsys.setrecursionlimit(10**7)\ndef input(): return sys.stdin.readline()\ndef out(var, end=\"\\n\"): sys.stdout.write(str(var)+\"\\n\")\ndef lis(var, end=\"\\n\"): sys.stdout.write(str(var)+\"\\n\")\ndef rlis(var, end=\"\\n\"): sys.stdout.write(str(var)+\"\\n\")\ndef st(): return int(input())\ndef tc(): return int(tc())\ndef tr(): return input()\ndef tc(): return tc()\n\n# Made By Mostafa_Khaled\nMOD=10**9+7\n\n# A and B strings for this kata are already in the range A \\leq B\nINF=float('inf')\n\n# -*- coding: bezier\n# -*- csr: https://www.mathsisfun.com/calendar/functions/bezier.html\n# -*- pyp: https://pc2.mathsisfun.com/files/pyp/functions.html\n\n# Made By Mostafa_Khaled\n# -*- Code reuse: https://www.mathsisfun.com/calendar/functions/remainder.html\n\n\n'''\nCreated On\n\n@class =y\n'''\n\nimport heapq\nfrom typing import List\n\n\nclass BIT:\n    def __init__(self, val):\n        self.val = val\n        self.size = len(val)\n        self.bit = [0] * self.size\n        self.incr = 0\n        self.bit_size = 0\n        self.decr = 0\n        self.res = INF\n        self.heap = []\n\n    def add(self, val, val_left=None):\n        if self.val[val_left] < val_left:\n            self.heap.append(val)\n        else:\n            self.heap.append(val_left)\n            self.bit[val_left] = val_left\n            self.incr += 1\n            self.bit[val_left] = self.incr\n            self.decr += 1\n            self.res = min(res, self.res)\n            self.heap.pop()\n\n    def update(self, val, val_left=None):\n        if self.val[val_left] < val_left:\n            self.heap.append(val)\n        else:\n            self.heap.append(val_left)\n            self.bit[val_left] = val_left\n            self.incr += 1\n            self.bit[val_left] = self.incr\n            self.decr += 1\n            self.res = min(res, self.res)\n            self.heap.pop()\n\n    def is_valid(self, val):\n        return val == self.val[0]\n\n\n@classmethod(rinse)\ndef get_numbers(itertools.combinations(itertools.STRUPER, 2)):\n    return bisearch(itertools"}, "318": {"problem_id": 4318, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nINF = 10**18\nMOD = 10**9+7\n\ndef main():\n    N = int(readline())\n    H = list(map(int, readline().split()))\n    \n    # \u533a\u9593\u6709\u6570\u5b57\u6570\u3092\u53d6\u5f97\n    a = 0\n    for i in range(1, N):\n        a += i\n        if a > H[i]:\n            a = H[i]\n            \n    print(a)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "319": {"problem_id": 4319, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef lcm(x, y):\n    return x * y // x + y\n\n#print(a)\n#print(lcm(a[0], a[1]))\n\nt = int(input())\nfor i in range(t):\n    x = lcm(a[i], a[i+1])\n    print(x + 1)\n"}, "320": {"problem_id": 4320, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    c = [0]*n\n    for i in range(n):\n        c[a[i]] = i\n    for i in range(n-1,0,-1):\n        if a[i] == 0:\n            continue\n        else:\n            c[a[i]] = i\n    print(c[-1])"}, "321": {"problem_id": 4321, "answer": "n, k = map(int, input().split())\nl = [0] * (k + 1)\nfor i in range(n):\n    l[i] = l[i - 1] * k\nl.pop()\nans = 0\nfor i in range(n):\n    ans += (i - 1) * (k - 1) * (i - 1)\nprint(ans)"}, "322": {"problem_id": 4322, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\n\n# \u5bf9\u89e3\u6a21\u5f00\u59cb\uff1a\u957f\u5ea6\u8d85\u65f6\ufffdarantine\uff0c\u5176\u5b9e\u95ee\u908a\u591a\u5c11\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u4e86\u4e00\u6b21\n# \u521d\u59cb\u5316\u5185\u5df2\u7ecf\u8d85\u65f6\uff1a\u56e0\u6b64\u6709\u4e00\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u4e86\u4e00\u6b21\n# \u5982\u679c\u6ca1\u6709\u8fd4\u56de\uff0c\u5219\u6ce8\u660e\u8981\u52a0\u903b\u51fa\u6765\u7684\u65f6\u5019\u5c31\u597d\u5730\u7b97\u51fa\u53d1\n# \u5982\u679c\u6ca1\u6709\u4efb\u610f\u65f6\u5019\u5c31\u597d\u5730\u7b97\u51fa\u53d1\n# \u5982\u679c\u6ca1\u6709\u4efb\u610f\u65f6\u5019\u5c31\u80fd\u591f\u518d\u6280\u80fd\u5199\u7684\u65f6\u5019\uff0c\u5199\u7684\u65f6\u5019\u5c31\u597d\u5730\u7b97\u51fa\u53d1\n# \u5982\u679c\u6ca1\u6709\u4efb\u610f\u65f6\u5019\u5c31\u80fd\u5199\u7684\u65f6\u5019\uff0c\u5199\u7684\u662f\u6bd4\u8f83\uff0c\u53d6\u5f97\u65f6\u548c\u53d6\u5f97\u526a\u679d\u5931\u8d25\n# \u4ee5\u4e0b\uff0c\u8bb0\u5f55\u526a\u679d\u5931\u8d25\u6578 1000 \u65e0\u6cd5\u5206\u522b\u662f 1000 \u7684\u65f6\u5019\u5206\u6210 1000 \u65e0\u6cd5\u597d\u53d1\n# \u4f46\u662f\uff0c\u65f6\u5019\u526a\u679d\u5931\u8d25\u6578\uff0c\u9700\u8981\u7ecf\u8fc7 1000 \u65e0\u6cd5\uff0c\u56e0\u4e3a\u5b9e\u9645\u5411\u6b65\u9a8c\u662f 1000 \u65e0\u6cd5\uff0c\u7136\u540e\u53bb\u627e\u526a\u679d\u5931\u8d25 1000 \u65e0\u6cd5\uff0c\u56e0\u4e3a\u5b9e\u9645\u5411\u6b65\u9a8c\u6bd4\u8f83\uff0c\u9700\u8981 1000 \u65e0\u6cd5\u5206\u522b\u4e0d\u80fd\u5199\u7684\u65f6\u5019\uff0c\u597d\u53d1\u5230 1000 \u65e0\u6cd5\uff0c\u56e0\u4e3a\u5b9e\u9645\u5411\u526a\u679d\u5931\u8d25 1000 \u65e0\u6cd5\uff0c\u9700\u8981 1000 \u65e0\u6cd5\u5206\u522b\u4e0d\u80fd\u5199\u7684\u65f6\u5019\uff0c\u597d\u53d1\u5230 1000 \u65e0\u6cd5\uff0c\u56e0\u4e3a\u5b9e\u9645\u5411\u526a\u679d\u5931\u8d25 1000 \u65e0\u6cd5\uff0c\u9700\u8981\u6bd4\u8f83\uff0c\u597d\u53d1\u5230 1000 \u65e0\u6cd5\uff0c\u56e0\u4e3a\u5b9e\u9645\u5411\u526a\u679d\u5931\u8d25 1000 \u65e0\u6cd5\uff0c\u9700\u8981 1000 \u65e0\u6cd5\u5206\u522b\u4e0d\u80fd\u5199\u7684\u65f6\u5019\uff0c\u597d\u53d1\u5230 1000 \u65e0\u6cd5\uff0c\u56e0\u4e3a\u5b9e\u9645\u5411\u526a\u679d\u5931\u8d25 1000 \u65e0\u6cd5\uff0c\u9700\u8981 1000 \u65e0\u6cd5\u5206\u522b\u4e0d\u80fd\u5199\u7684\u65f6\u5019\uff0c\u597d\u53d1\u5230 1000 \u65e0\u6cd5\uff0c\u56e0\u4e3a\u5b9e\u9645\u5411\u6b65\u9a8c\u662f 1000 \u65e0\u6cd5\uff0c\u7136\u540e\u53bb\u627e\u5269\u4e0b 1000 \u65e0\u6cd5\uff0c\u7136\u540e\u53bb\u627e\u5269\u4e0b 1000 \u65e0\u6cd5\u5206\u522b\u4e0d\u80fd\u5199\u7684\u65f6\u5019\uff0c\u597d\u53d1\u5230 1000 \u65e0\u6cd5\uff0c\u56e0\u4e3a\u5b9e\u9645\u5411\u6b65\u9a8c\u6bd4\u8f83\uff0c\u9700\u8981 1000 \u65e0\u6cd5"}, "323": {"problem_id": 4323, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\ns = [int(x) for x in input().split()]\n\n# \u5168\u90e8\u5206\u6700\u5927\u500b\u6570\u5b57\u5217\uff0c\u957f\u5ea6\u53ef\u4ee5\u7528\u4e00\u4e2ainfix\u503c\n# \u5168\u90e8\u5206\u6700\u5927\u500b\u6570\u5b57\u5217\uff0c\u540c\u65f6\u63a5\u4e24\u4e2ainfix\u503c\n# \u5f53\u524d\u8fd9\u4e2ainfix\u503c\uff0c\u8fd9\u4e2a\u8ba1\u7b97\u4ec0\u4e48\u4f1a\u9020\u623b\u6b64\u7ed3\u5c3e\uff0c\u56e0\u4e3a\u53ea\u8981\u6c42\u4e00\u4e2ainfix\u503c\u5c3d\u91cf\u7684\u5927\u5c0f\u4e86\n# \u5982\u679c\u6700\u5c0f\u500b\u6570\u5b57\u5217\u4e0e\u6700\u5c0f\u500b\u6570\u5b57\u76f8\u5e8f\u5217\n# \u56e0\u6b64\uff0cs[0] = 0\n# \u4ee5\u4e0b\u4e0d\u662f-1\uff0c\u56e0\u4e3as[n-1] = 0\u5982\u679c\u662fs[n-1] == 0\uff0c\u5219\u4e3as[n-1] = 0\u5982\u679cs[n-1] == 0\n\n# \u540c\u65f6\u5019\uff1a\u521d\u59cb\u5316s\n# \u51fa $n$\n# \u5e73\u5b9a\u4e49\u4e86s\uff0c\u53ef\u4ee5\u901a\u8fc7s\u91cc\u9762\u521b\u54cd\u5e8f\u5217\uff0c\u90a3\u4e48\u5c31\u50cfs[n] = 0\n# \u5e76\u4e14s[0] = 0\n# \u51fa $n$\n# \u5e76\u4e14s[n-1] = 0\u5982\u679cs[n-1] == 0\uff0c\u5219\u4e3as[n-1] = 0\u5982\u679cs[n-1] == 0\uff0c\u5219\u4e3as[n-1] = 0\u5982\u679cs[n-1] == 0\n\n# \u53ef\u80fd\u5148\u627e\u5230s\uff0c\u7136\ufffd system.exypseue(s)\n# \u5355\u8c03\u7528s\u91cc\u9762\uff0c\u5982\u679cs\u91cc\u9762\u521b\u54cd\u5e8f\u5217\uff0c\u90a3\u5c31\u548cs\u91cc\u9762\u521b\u54cd\u5e8f\u5217\u76ee\u6807\n# \u8fd9\u4e24\u4e2a\u51cfie\u8f93\u90a3yields<-1\uff0c\u7136\u540e\u518d\u53bbs[0] = 0\n# \u5355\u8c03\u7528s\u91cc\u9762\uff0c\u5982\u679cs\u91cc\u9762\u521b\u54cd\u5e8f\u5217\u76ee\u6807\u5c31\u4e0d\u80fd\u8d85\u8fc7s[n-1] = 0\n# \u5355\u8c03\u7528s\u91cc\u9762\u521b\u54cd\u5e8f\u5217\u76ee\u6807\uff0c\u5982\u679cs\u91cc\u9762\u521b\u54cd\u5e8f\u5217\u76ee\u6807\u5c31\u4e0d\u80fd\u8d85\u8fc7s[n-1] = 0\n\n# \u524d\u51fa\u73b0s\u91cc\u9762\uff0c\u7136\u5426\ufffdraves\u8be5\ufffdetic\u90fd\u53ef\u80fd\u5230s\u91cc\uff0c\u7136\u540e\u518d\u5bf9\u5e94\u7684s\u91cc\u9762\u521b\u54cd\u5e8f\u5217\u76ee\u6807\n# \u533a\u9593\u53ef\u80fd\u5904\u7406s\u91cc\u9762\uff0c\u7136\u540e\u518d\u5bf9\u5e94\u7684s\u91cc\u9762\u521b\u54cd\u5e8f\u5217\u76ee\u6807\n# \u5355\u8c03\u7528s\u91cc\u9762\u521b\u54cd\u5e8f\u5217\u76ee\u6807\uff0c\u7136\u540e\u518d\u5bf9\u5e94\u7684s\u91cc\u9762\u521b\u54cd\u5e8f\u5217\u76ee\u6807\u5bf9\u914d\u7f6e\n# \u5355\u8c03\u7528s\u91cc\u9762\u521b\u54cd\u5e8f\u5217\u76ee\u6807"}, "324": {"problem_id": 4324, "answer": "import collections\nimport bisect\nimport heapq\nimport sys\n# sys.setrecursionlimit(10**6)\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, a, b = list(map(int, input().split()))\n    s = input()\n    if len(s)!= b:\n        print('\\nThere is no valid answer for'+ str(n) + '.')\n        continue\n    c = ord('a') - ord('a')\n    d = bisect.bisect_left(s, c)\n    if d < b:\n        print('\\nThere is at least one valid answer for'+ str(n) + '.')\n        continue\n    d = max(d, b)\n    print(s[d] +'' + s[c] +'' + s[b])\n"}, "325": {"problem_id": 4325, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn, t = map(int, readline().split())\nx = int(n)\ny = int(t)\nprint(x + y)"}, "326": {"problem_id": 4326, "answer": "N = int(input())\n\nclass SegmentTree:\n    def __init__(self, N):\n        self.N = N\n        self.data = []\n        self.data.append(N)\n        self.data.append(0)\n        self.data.append(N-1)\n        self.data.append(N-2)\n        self.data.append(N-3)\n        self.data.append(N-4)\n        self.data.append(N-5)\n        self.data.append(N-6)\n        self.data.append(N-7)\n        self.data.append(N-8)\n        self.data.append(N-9)\n        self.data.append(N-10)\n        self.data.append(N-11)\n        self.data.append(N-12)\n        self.data.append(N-13)\n        self.data.append(N-14)\n        self.data.append(N-15)\n        self.data.append(N-16)\n        self.data.append(N-17)\n        self.data.append(N-18)\n        self.data.append(N-19)\n        self.data.append(N-20)\n        self.data.append(N-21)\n        self.data.append(N-22)\n        self.data.append(N-23)\n        self.data.append(N-24)\n        self.data.append(N-25)\n        self.data.append(N-26)\n        self.data.append(N-27)\n        self.data.append(N-28)\n        self.data.append(N-29)\n        self.data.append(N-30)\n        self.data.append(N-31)\n        self.data.append(N-32)\n        self.data.append(N-33)\n        self.data.append(N-34)\n        self.data.append(N-35)\n        self.data.append(N-36)\n        self.data.append(N-37)\n        self.data.append(N-38)\n        self.data.append(N-39)\n        self.data.append(N-40)\n        self.data.append(N-41)\n        self.data.append(N-42)\n        self.data.append(N-43)\n        self.data.append(N-44)\n        self.data.append(N-45)\n        self.data.append(N-46)\n        self.data.append(N-47)\n        self.data.append(N-48)\n        self.data.append(N-49)\n        self.data.append(N-50)\n        self.data.append(N-51)\n        self.data.append(N-52)\n   "}, "327": {"problem_id": 4327, "answer": "import sys\ninput = sys.stdin.readline\ninp = lambda: list(map(int, input().split()))\nfrom collections import defaultdict\ndef main():\n    A, P = inp()\n    print(max(A, P))\n\nmain()\n"}, "328": {"problem_id": 4328, "answer": "import sys\ndef main():\n    input = sys.stdin.readline\n    mod = 10**9+7\n    A = int(input())\n    B = int(input())\n    print(B-A)\n\nmain()\n"}, "329": {"problem_id": 4329, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\n# A = list(map(int, readline().split()))\ns, t = 1, 1\nfor i in range(1, 10):\n    s += ord(i) - ord('a')\n    t += ord('a') - ord('a')\n\nif s == t:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}, "330": {"problem_id": 4330, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    A, B = map(int, input().split())\n    print(\"%.12f\" % (A - 1, B - 1))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "331": {"problem_id": 4331, "answer": "n = input()\nif n.isdigit():\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}, "332": {"problem_id": 4332, "answer": "def main():\n\tn = int(input())\n\tif n < 10:\n\t\tprint(\"No\")\n\telse:\n\t\tprint(\"Yes\")\n\ndef __starting_point():\n\tmain()\n__starting_point()"}, "333": {"problem_id": 4333, "answer": "import sys\ninput = sys.stdin.readline\n\nclass UnionFind():\n    def __init__(self, x):\n        self.x = x\n        self.parents = [-1] * (2 ** 32)\n\n    def find(self, x):\n        if self.parents[x] < 0:\n            return x\n        else:\n            self.parents[x] = self.find(self.parents[x])\n            return self.parents[x]\n\n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n        if x == y:\n            return\n        if self.parents[x] > self.parents[y]:\n            x, y = y, x\n        self.parents[x] += self.parents[y]\n        self.parents[y] = x\n        return\n\n    def same(self, x, y):\n        return self.parents[x] == self.parents[y]\n\n    def members(self, x):\n        return [i for i in range(self.parents.count(x)) if self.find(i) == x]\n\n    def __str__(self):\n        return '\\n'.join('{}: {}'.format(i, self.parents[i]) for i in range(self.parents.count(x)) if self.find(i) == x)\n\n\nuf = UnionFind(10000)\nfor i in range(1, 1000000):\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    uf.union(x1, y1)\n    uf.union(x2, y2)\n\nprint(uf.find(10000) - 1)"}, "334": {"problem_id": 4334, "answer": "import sys\nsys.setrecursionlimit(10**6)\ndef recursion(n, s, t):\n    if n == 0:\n        return 0\n    elif s == t:\n        return 1\n    else:\n        balls = list(map(int, s))\n        balls.sort(reverse=True)\n        for i in range(len(balls)):\n            if balls[i] == s:\n                return i\n        return -1\nn = int(input())\nballs = [recursion(n, s, t) for s in input().split()]\nballs.sort(reverse=True)\nprint(len(balls))\n"}, "335": {"problem_id": 4335, "answer": "import sys\nN = int(input())\nS = input()\n\ndef dfs(s):\n    return s.split(' ')\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n\n#print(dfs(S))\n"}, "336": {"problem_id": 4336, "answer": "def main():\n    n = int(input())\n    for i in range(n):\n        x, y, z = map(int, input().split())\n        print((x - y) * abs(z - x) + abs(z - y) if z else 0)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "337": {"problem_id": 4337, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N = int(readline())\n    S = list(map(int, readline().split()))\n    print((S[0] + S[1]) % 3)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "338": {"problem_id": 4338, "answer": "import sys\ninput = sys.stdin.readline\n\nn, x, y = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    ans += a[i] - x\n    ans -= a[i]\nprint(ans, end=\" \")\n"}, "339": {"problem_id": 4339, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    a.append(a[i] + a[i-1])\nprint(len(a))\n"}, "340": {"problem_id": 4340, "answer": "from collections import deque\ninput = lambda: map(int, input().split())\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nfor i in range(n):\n    x = a[i]\n    y = b[i]\n    if x == 2:\n        x = 2\n    elif x == 3:\n        x = 1\n    elif x == 4:\n        x = 3\n    else:\n        x = 2\n        y = 1\n        \nans = [-1] * 10**8\nans[0] = 1\nfor i in range(1, 10**9 + 1):\n    if ans[i] == -1:\n        ans[i] = 2\n        ans[i] = 3\n    else:\n        ans[i] = 2\n        ans[i] = 1\n        ans[i] = 0\nprint(' '.join(ans))"}, "341": {"problem_id": 4341, "answer": "n, m = list(map(int, input().split()))\nedges = []\nfor i in range(m):\n    edges.append(list(map(int, input().split())))\n\ndef dfs(u, v):\n    if u in set(edges[v]):\n        return 0\n    else:\n        return 1 + dfs(u, v)\n\n# print(edges)\n# print(edges[0])\n# print(edges[-1])\n\nn, m = list(map(int, input().split()))\nedges = []\nfor i in range(n):\n    edges.append(list(map(int, input().split())))\n\n# print(edges)\n# print(edges[0])\n# print(edges[-1])\n\nans = 0\nfor i in range(n):\n    if i not in edges:\n        ans += 1\n        edges.append(dfs(i, edges[i]))\n\nprint(ans)\n"}, "342": {"problem_id": 4342, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef dfs(node):\n    nonlocal a\n    if node.val == node.val:\n        return 1\n    elif node.val == node.val[0]:\n        return 0\n    else:\n        return min(dfs(node.val), dfs(node.val + 1))\n\ndfs(1)\n\nprint(a[0] + a[1] + a[2])\n"}, "343": {"problem_id": 4343, "answer": "import sys\ninput = sys.stdin.readline\n\nk = int(input())\ns = input()\nt = input()\n\nl = sorted(s)\n\n# \u51fa\u73b0\u5728\u5176\u4e2d(1, 2)\u4e24\u4e07\u6587\u5b57\u7b26(n)\uff0c\u65b0\u7684\u6570\u5b57\u53ef\u4ee5\u8bb0\u5f55\uff0c\u957f\u5ea6\u4e3a1\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u540e\u8005\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5927\u503c\uff0c\u7136\u540e\u5bf9\u5e94\u8be5\u7a77\u76ee\uff0c\u5176\u5b9a\u4e48\u540e\u5206\u5207\u6570\u5b57\u6574\u6570\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e07\u6587\u5b57\u5e94\u8be5\u53ef\u4ee5\u8bb0\u5f55\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5bf9\u5e94\u8be5\u7a77\u76ee\uff0c\u5176\u5b9a\u4e48\u540e\u5206\u5207\u6570\u5b57\u6574\u6570\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5bf9\u5e94\u8be5\u7a77\u76ee\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u7528 PyPICK \u4e2d\u5207\u6570\u5b57\u6574\u6570\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u51fa\u73b0\u7a7a\u683c\uff0c\u7136\u540e\u518d\u6bcf\u4e2a\u51fa\u73b0\u4e00\u4e2a\u6587\u5b57\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u6bcf\u4e2a\u51fa\u73b0\u4e86\uff0c\u5bfc\ufffd PyPICK \u4e2d\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u51fa\u73b0\u7a7a\u683c\uff0c\u7136\u540e\u518d\u6bcf\u4e2a\u51fa\u73b0\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5bf9\u5e94\u8be5\u7a77\u76ee\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5bf9\u5e94\u8be5\u7a77\u76ee\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5bf9\u5e94\u8be5\u7a77\u76ee\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5bf9\u5e94\u8be5\u7a77\u76ee\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5bf9\u5e94\u8be5\u7a77\u76ee\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5bf9\u5e94\u8be5\u7a77\u76ee\uff0c\u7136\u540e\u518d\u5224\u65ad\uff0c\u56fa\u5b9a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5bf9\u5e94\u8be5\u7a77\u76ee\uff0c"}, "344": {"problem_id": 4344, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nfor i in range(k):\n    a[i] = sorted(a[i])\n\ndef dfs(i):\n    if i == 0:\n        print(\"NO\")\n        return\n    dfs(i - 1)\n    if i % 2 == 0:\n        print(\"YES\")\n        return\n    dfs(i + 1)\n    if i % 4 == 0:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 6 == 0:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 8 == 0:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 10 == 0:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 0:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 1:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 2:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 3:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 4:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 5:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 6:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 7:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 8:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 9:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 10:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 11:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 12:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 13:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 14:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if i % 12 == 15:\n        print(\"NO\")\n        return\n    dfs(i + 1)\n    if"}, "345": {"problem_id": 4345, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(' '.join(map(str, a)))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "346": {"problem_id": 4346, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    L, V, Lv, R = map(int, input().split())\n    L = list(map(int, input().split()))\n    R = list(map(int, input().split()))\n    L.sort()\n    R.sort()\n    #print(L, R)\n    #print(L, R)\n    if L < R:\n        print(0)\n        return\n    if L < R:\n        print(1)\n        return\n    if R < L:\n        print(2)\n        return\n    if L < R:\n        print(3)\n        return\n    if R < L:\n        print(4)\n        return\n    if L < R:\n        print(5)\n        return\n    if R < L:\n        print(6)\n        return\n    if L < R:\n        print(7)\n        return\n    if R < L:\n        print(8)\n        return\n    if L < R:\n        print(9)\n        return\n    if R < L:\n        print(10)\n        return\n    if L < R:\n        print(11)\n        return\n    if R < L:\n        print(12)\n        return\n    if L < R:\n        print(13)\n        return\n    if R < L:\n        print(14)\n        return\n    if L < R:\n        print(15)\n        return\n    if R < L:\n        print(16)\n        return\n    if L < R:\n        print(17)\n        return\n    if R < L:\n        print(18)\n        return\n    if L < R:\n        print(19)\n        return\n    if R < L:\n        print(20)\n        return\n    if L < R:\n        print(21)\n        return\n    if R < L:\n        print(22)\n        return\n    if L < R:\n        print(23)\n        return\n    if R < L:\n        print(24)\n        return\n    if L < R:\n        print(25)\n        return\n    if R < L:\n        print(26)\n        return\n    if L < R:\n        print(27)\n        return\n    if R < L:\n        print(28)\n        return\n    if L < R:\n        print(29)\n        return\n  "}, "347": {"problem_id": 4347, "answer": "from math import ceil,sqrt\nn = int(input())\na = list(map(int, input().split()))\nprint(1 if n % 2 else 0)\n"}, "348": {"problem_id": 4348, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, k = list(map(int, readline().split()))\ns = list(readline().strip())\n\nd = {}\nfor i in range(k):\n    if s[i] not in d:\n        d[s[i]] = []\n    else:\n        d[s[i]].append(i)\n\nans = []\nfor i in range(k):\n    if s[i] not in d:\n        ans.append(d[s[i]][-1] + 1)\n\nprint('\\n'.join(ans))\n"}, "349": {"problem_id": 4349, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nk = list(map(int, input().split()))\n\ndef calc(n, m):\n    if n == 0:\n        return 1\n    else:\n        return int(n) + 1\n\nans = 0\nfor i in range(m):\n    ans += calc(n-1, m-1) * (k[i] - k[i+1])\n\nprint(ans)\n"}, "350": {"problem_id": 4350, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\ndef dfs(x):\n    if x == '*':\n        return 1\n    else:\n        return 0\n\nfor i in range(n):\n    x = list(map(int, input().split()))\n    if x[0] == '.':\n        print(-1)\n        continue\n    else:\n        if x[1] == '*':\n            print(1)\n            continue\n        else:\n            print(2)\n            continue\n        else:\n            print(3)\n            continue\n\nprint(*dfs(x))\n"}, "351": {"problem_id": 4351, "answer": "#!/usr/bin/env python3\n\nimport sys\ninput = sys.stdin.readline\n\nN = int(input())\n\ndef main():\n    if N<9:\n        print(\"No\")\n    else:\n        main()\n\ndef __starting_point():\n    main()\n__starting_point()"}, "352": {"problem_id": 4352, "answer": "import sys\ninput = sys.stdin.readline\n\nclass Card:\n    def __init__(self, n):\n        self.n = n\n        self.d = [0] * (n + 1)\n        self.sets = [0] * (n + 1)\n        self.strengths = [0] * (n + 1)\n        self.lst = [0] * (n + 1)\n        self.strengths[0] = 1\n        self.d[0] = 1\n        self.lst[0] = 1\n        self.strengths[1] = 1\n        self.lst[1] = 0\n        self.lst[2] = 0\n        self.lst[3] = 0\n        self.lst[4] = 0\n        self.lst[5] = 0\n        self.lst[6] = 0\n        self.lst[7] = 0\n        self.lst[8] = 0\n        self.lst[9] = 0\n        self.lst[0] = 0\n        self.lst[1] = 0\n        self.lst[2] = 0\n        self.lst[3] = 0\n        self.lst[4] = 0\n        self.lst[5] = 0\n        self.lst[6] = 0\n        self.lst[7] = 0\n        self.lst[8] = 0\n        self.lst[9] = 0\n        self.lst[0] = 0\n        self.lst[1] = 0\n        self.lst[2] = 0\n        self.lst[3] = 0\n        self.lst[4] = 0\n        self.lst[5] = 0\n        self.lst[6] = 0\n        self.lst[7] = 0\n        self.lst[8] = 0\n        self.lst[9] = 0\n        self.lst[0] = 0\n        self.lst[1] = 0\n        self.lst[2] = 0\n        self.lst[3] = 0\n        self.lst[4] = 0\n        self.lst[5] = 0\n        self.lst[6] = 0\n        self.lst[7] = 0\n        self.lst[8] = 0\n        self.lst[9] = 0\n        self.lst[0] = 0\n        self.lst[1] = 0\n        self.lst[2] = 0\n        self.lst[3] = 0\n        self.lst[4] = 0\n        self.lst[5] = 0\n        self.lst[6] = 0\n        self.lst[7] = 0\n        self.lst[8] = 0\n        self"}, "353": {"problem_id": 4353, "answer": "import sys\n\ndef main():\n    s = input()\n    l = len(s)\n    for i in range(l-1,-1,-1):\n        print(s[i],end=\" \")\n    print()\n\ndef __starting_point():\n    main()\n__starting_point()"}, "354": {"problem_id": 4354, "answer": "from collections import defaultdict\nN, M = list(map(int, input().split()))\na = list(map(int, input().split()))\n# a.sort()\n# b = list(map(int, input().split()))\n# c = list(map(int, input().split()))\n# d = list(map(int, input().split()))\n\n# X = int(input())\n# Y = int(input())\n# X, Y = 0, 0\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i])\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#     # print(a[i], b[i], c[i], d[i])\n\n# for i in range(N):\n#    "}, "355": {"problem_id": 4355, "answer": "# -*- coding: utf-8 -*-\nimport math\n\nclass Solution:\n    def __init__(self):\n        self.s = ''\n        self.a = 0\n        self.b = 0\n        self.c = 0\n        self.d = 0\n        self.e = 0\n        self.f = 0\n        self.g = 0\n        self.h = 0\n        self.i = 0\n        self.j = 0\n        self.k = 0\n        self.l = 0\n        self.m = 0\n        self.n = 0\n        self.p = 0\n        self.q = 0\n        self.r = 0\n        self.s = ''\n        self.a = 0\n        self.b = 0\n        self.c = 0\n        self.d = 0\n        self.e = 0\n        self.f = 0\n        self.g = 0\n        self.h = 0\n        self.i = 0\n        self.j = 0\n        self.k = 0\n        self.l = 0\n        self.m = math.sqrt(self.a) + math.sqrt(self.b) + math.sqrt(self.c)\n        self.n = math.sqrt(self.a) + math.sqrt(self.b) + math.sqrt(self.c)\n        self.p = self.s.copy()\n        self.q = self.s.copy()\n        self.r = self.s.copy()\n        self.s = self.a.copy()\n        self.a = self.b.copy()\n        self.b = self.c.copy()\n        self.c = self.d.copy()\n        self.d = self.e.copy()\n        self.e = self.f.copy()\n        self.f = self.g.copy()\n        self.g = self.h.copy()\n        self.h = self.i.copy()\n        self.i = self.j.copy()\n        self.j = self.k.copy()\n        self.k = self.l.copy()\n        self.l = self.m.copy()\n        self.m = math.sqrt(self.a) + math.sqrt(self.b) + math.sqrt(self.c)\n        self.m = math.sqrt(self.a) + math.sqrt(self.b) + math.sqrt(self.c)\n        self.n = math.sqrt(self.a) + math.sqrt(self.b) + math.sqrt(self.c)\n        self.p = self.s.copy()\n        self.q = self.s.copy()\n        self.r = self.s.copy()\n        self.s = self.a.copy()\n        self.a = self.b.copy()\n     "}, "356": {"problem_id": 4356, "answer": "import sys\ninput = sys.stdin.readline\n\nM, N, A = list(map(int, input().split()))\nA.sort()\nB = list(map(int, input().split()))\n\ndef main():\n    N, M = list(map(int, input().split()))\n    A = A[0]\n    B = B[0]\n    for i in range(1, N):\n        A[i] = A[i-1]\n        B[i] = B[i-1]\n        B[i] = M[i-1]\n    print(' '.join(map(str, B)))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "357": {"problem_id": 4357, "answer": "from sys import stdin\ninput = stdin.readline\n\ndef main():\n    A, B, C = map(int, input().split())\n    print(main())\n\ndef __starting_point():\n    main()\n__starting_point()"}, "358": {"problem_id": 4358, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\np = [int(x) for x in readline().split()]\n\ndef main():\n    p = [0]*n\n    p[0] = 0\n    for i in range(1,n):\n        p[i] = p[i-1] + p[i]\n        p[i] = p[i-1] // n\n    print((p[-1]))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "359": {"problem_id": 4359, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    A = int(readline())\n    B = int(readline())\n    C = int(readline())\n    D = int(readline())\n    E = int(readline())\n    F = int(readline())\n    \n    for i in range(1, A+1):\n        for j in range(1, B+1):\n            for k in range(1, C+1):\n                if i == j:\n                    break\n                elif i == k:\n                    break\n                elif j == k:\n                    break\n                else:\n                    E = E + D\n                    F = F + D\n                    \n    print(E)\n\nmain()\n"}, "360": {"problem_id": 4360, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nfor i in range(n):\n    print(a[i], end=\" \")\n    print(a[i-1], end=\" \")\n    \n"}, "361": {"problem_id": 4361, "answer": "import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\ntree = []\nfor _ in range(K):\n    tree.append(list(map(int, input().split())))\ntree.sort(key=lambda x:x[0])\nans = 0\nfor i in range(K):\n    ans = min(ans, tree[i][1] + tree[i+1][0])\nprint(ans)"}, "362": {"problem_id": 4362, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    #\u7b97\u6cd5\u89e3\u7ed3\u5c0e\u914d\u7f6e\n    #\u901a\u8fc7\u51fd\u6570\u5b57\uff0c\u53ef\u4ee5\u91c7\u7528\u6807\u51c6\u65b9\u5f0d\u4e2d\u95f4\u5904\u7406\uff0c\u5982\u679c\u4e0b\u90fd\u81ea\ufffd itertools\u5e8f\u5217\u8868\uff0c\u8003\u8651\u5c31\u53ef\u4ee5\u7528\u4e86\uff0c\u7136\u540e\u518d\u5bf9\u5e94\u6240\u6709\u5143\u7d20\uff0c\u56e0\u6b63\u81ea\u52a8\u521d\u59cb\u5300\u95ee\u9898\n    #\u8bbe\u5b9a\u4e00\u4e2a\u6587\u4ef6\u5217\u8868\uff0c\u5176\u4e2d\u8fd4\ufffd\u30eb\u30fc\u30d7\n    #\u6700\u77ed\u5185\u5bb9\u91cd\u65b0\u6392\u5217\u8868\uff0c\u9700\u8981\u590d\u5217\u76f8\u7b49\uff0c\u5982\u679c\u6cbf\u6700\ufffd\u8bc1\u5217\u8868\uff0c\u5219\u8fd4\u56de\u5230\u6587\u4ef6\u4e0a\u4e00\u4e2a\u6587\u4ef6\n    #\u5220\u9664\u6587\u4ef6\n    #\u540c\u6837\u521b\u5efa\u6587\u4ef6\uff0c\u5e76\u4e0d\u80fd\u5220\u9664\u5220\u9664\u5220\u9664\u5176\u4ed6\u5217\u8868\uff0c\u90a3\u4e48\u6211\u4eec\u60f3\u5220\u9664\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\u679c\u6211\u4eec\u5220\u9664\u6587\u4ef6\uff0c\u5219\u4f60\u4eec\u8d70\u5230\u6587\u4ef6\n    # \u5982\ufffd"}, "363": {"problem_id": 4363, "answer": "K, S = map(int, input().split(\" \"))\nprint(6)"}, "364": {"problem_id": 4364, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\nA = list(map(int, readline().split()))\n\ndef convert(s):\n    d = {0:0, 1:0, 2:0, 3:0, 4:0, 5:0, 6:0, 7:0, 8:0, 9:0, 10:0, 11:0, 12:0, 13:0, 14:0, 15:0, 16:0, 17:0, 18:0, 19:0, 20:0, 21:0, 22:0, 23:0, 24:0, 25:0, 26:0, 27:0, 28:0, 29:0, 30:0, 31:0, 32:0, 33:0, 34:0, 35:0, 36:0, 37:0, 38:0, 39:0, 40:0, 41:0, 42:0, 43:0, 44:0, 45:0, 46:0, 47:0, 48:0, 49:0, 50:0, 51:0, 52:0, 53:0, 54:0, 55:0, 56:0, 57:0, 58:0, 59:0, 60:0, 61:0, 62:0, 63:0, 64:0, 65:0, 66:0, 67:0, 68:0, 69:0, 70:0, 71:0, 72:0, 73:0, 74:0, 75:0, 76:0, 77:0, 78:0, 79:0, 80:0, 81:0, 82:0, 83:0, 84:0, 85:0, 86:0, 87:0, 88:0, 89:0, 90:0, 91:0, 92:0, 93:0, 94:0, 95:0, 96:0, 97:0, 98:0, 99:0, 100:0, 101:0, 102:0, 103:0, 104:0, 105:0, 106:0, 107:0, 108:0, 109:0, 110:0, 111:0, 112:0, 113:0, 114:0, 115:0, 116:0, 117:0, 118:0, 119:0, 122:0, 123:0, 124:0, 125:0, 126:0, 127:0, 128:0, 129:0, 130:0, 131:0, 132:0, 133:0, 134:0, 15:0, 16:0, 16:1, 16:2, 16:3, 16:4, 16:5, 16:6, 16:7, 16:8, 16:9, 16:10, 16:11, 16:12, 16:13, 16:14, 16:15, 16:16, 16:17, 16:18, 16:19, 16:20, 16:21, 16:22, 16:23, 16:24, 16:25, 16:26, 16:27, 16:28, 16:29, 16:30, 16:31, 16:32, 16:33, 16:34, 16:35, 16:36, 16:37, 16:38, 16:39, 16:40, 16:41, 16:42, 16:43, 16:44, 16:45, 16:46, 16:47, 16:48, 16:49, 16:50, 16:51, 16:52, 16:53, 16:54, 16:55, 16:56, 16:57, 16:58, 16:59, 16:60, 16:61, 16:64, 16:66, 16:68, 16:69, 16:71, 16:72, 16:73, 16:74, 16:75, 16:76, 16:76, 17:0, 18:0, 18:1, 18:2, 18:3, 18:4, 18:5, 18:6, 18:7, 18:8, 18:9, 18:10, 18:11, 18:12, 18:13, 18:14, 18:15, 18:16, 18:17, 18:18, 18:19, 18:20, 18:21, 18:22, 18:23, 18:24, 18:25, 18:26, 18:27, 18:28, 18:29, 18:30, 18:31, 18:32,"}, "365": {"problem_id": 4365, "answer": "def main():\n    import sys\n    sys.setrecursionlimit(10000)\n    input = sys.stdin.readline\n    from collections import deque\n    d = {}\n    for _ in range(int(input())):\n        if _%2 == 0:\n            d[(_] = 1)\n        else:\n            d[(_] = _%2)\n            d[(_] = _//2)\n            d[(_] = _%2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n            d[(_] = _//2)\n           "}, "366": {"problem_id": 4366, "answer": "import bisect\ndef main():\n    A,B=map(int,input().split())\n    if A==B:\n        print(B)\n    elif A%B==0:\n        print(A//B)\n    else:\n        print(A%B)\nmain()"}, "367": {"problem_id": 4367, "answer": "import sys\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\n\ndef main():\n    N, R = map(int, readline().rstrip('\\n').split())\n    print((R - 1) // 2)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "368": {"problem_id": 4368, "answer": "import itertools\nn = int(input())\nfor i in range(n):\n    a = bin(n)[2:]\n    print(a)\n"}, "369": {"problem_id": 4369, "answer": "import sys\nread = sys.stdin.readline\n\nN = int(read())\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages = list(map(int, read().split()))\n\n# print(pages)\n\n# N = int(N)\n# pages"}, "370": {"problem_id": 4370, "answer": "import sys\nreadline = sys.stdin.readline\ninp = lambda x: sys.stdin.readline().rstrip()\ninput = lambda: list(map(int,readline().split()))\n\ndef solve():\n    A,B = inp()\n    print(sum(A**2 + B**2)//16)\n\nsolve()\n"}, "371": {"problem_id": 4371, "answer": "from bisect import bisect_left\ns = list(map(int, input().split()))\nn = len(s)\nd = []\nfor i in range(n):\n d.append(bisect_left(s, i))\nd.sort(reverse=True)\nprint(d[-1] - 753)"}, "372": {"problem_id": 4372, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n    a.append(int(input()))\nb.sort()\nif len(b) == 1:\n    print(b[0])\nelif len(b) == 2:\n    print(b[0])\nelse:\n    print(b[0])\n"}, "373": {"problem_id": 4373, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\na = list(map(int, input().split()))\np = [0]*n\nfor i in range(n):\n    p[a[i]] = i\ndef solve(a,p):\n    ans = 0\n    for i in range(n):\n        if p[a[i]] == 0:\n            ans += 1\n        else:\n            ans += 1\n    return ans\nprint(ans)"}, "374": {"problem_id": 4374, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\ndef dfs(u, v):\n    nonlocal n\n    if u!= n:\n        return 0\n    else:\n        return 1\n\nedge = [edge[0] for i in range(m)]\n\nedge[1] = 1\n\nfor i in range(2, n + 1):\n    u, v = list(map(int, input().split()))\n    edge[u] = edge[v]\n    edge[v] = 1\n\nans = []\n\nfor i in range(m):\n    if edge[i] == 1:\n        ans.append(edge[i])\n        continue\n    else:\n        ans.append(dfs(edge[i], edge[i] + 1))\n\nprint(len(ans))\nprint(' '.join(map(str, ans)))\n"}, "375": {"problem_id": 4375, "answer": "import sys\ninput = sys.stdin.readline\nn, k = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\ndef dfs(i, k):\n    nonlocal A\n    if i>=k:\n        return 0\n    else:\n        A[i] = max(A[i], k-i)\n        return A[i]\n\n# print(A)\n# print(dfs(i, k))\n\n# print(A[0])\n# print(A[-1])\n\n# print(A[n-1])\n# print(A[n-2])\n# print(A[n-3])\n# print(A[n-4])\n# print(A[n-5])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n# print(A[-7])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])\n# print(A[-5])\n# print(A[-6])\n\n# print(A[-1])\n# print(A[-2])\n# print(A[-3])\n# print(A[-4])"}, "376": {"problem_id": 4376, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\n\nn, m = map(int, input().split())\ns = list(map(int, input().split()))\n\nfor i in range(1, n):\n    if s[i] == '1':\n        s.append(i)\n    else:\n        s.append(i+1)\n\nprint(' '.join(map(str, s)))"}, "377": {"problem_id": 4377, "answer": "from collections import deque\ndef main():\n    n = int(input())\n    for i in range(n):\n        x = list(map(int, input().split()))\n        s = set(x)\n        s.add(x[0])\n        s.add(x[1])\n        s.add(x[2])\n        s.add(x[3])\n        s.add(x[4])\n        s.add(x[5])\n        s.add(x[6])\n        s.add(x[7])\n        s.add(x[8])\n        s.add(x[9])\n        s.add(x[10])\n        s.add(x[11])\n        s.add(x[12])\n        s.add(x[13])\n        s.add(x[14])\n        s.add(x[15])\n        s.add(x[16])\n        s.add(x[17])\n        s.add(x[18])\n        s.add(x[19])\n        s.add(x[20])\n        s.add(x[21])\n        s.add(x[22])\n        s.add(x[23])\n        s.add(x[24])\n        s.add(x[25])\n        s.add(x[26])\n        s.add(x[27])\n        s.add(x[28])\n        s.add(x[29])\n        s.add(x[0])\n        s.add(x[0] + 1)\n        s.add(x[0] + 2)\n        s.add(x[0] + 3)\n        s.add(x[0] + 4)\n        s.add(x[0] + 5)\n        s.add(x[0] + 6)\n        s.add(x[0] + 7)\n        s.add(x[0] + 8)\n        s.add(x[0] + 9)\n        s.add(x[0] + 10)\n        s.add(x[0] + 11)\n        s.add(x[0] + 12)\n        s.add(x[0] + 13)\n        s.add(x[0] + 14)\n        s.add(x[0] + 15)\n        s.add(x[0] + 16)\n        s.add(x[0] + 17)\n        s.add(x[0] + 18)\n        s.add(x[0] + 19)\n        s.add(x[0] + 20)\n        s.add(x[0] + 21)\n        s.add(x[0] + 22)\n        s.add(x[0] + 23)\n        s.add(x[0] + 24)\n      "}, "378": {"problem_id": 4378, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input()\n\n# \u5bf9\u4e8e\u53f3\u8fb9\u754c\u9762\uff0c\u53ef\u4ee5\u8bb0\u5f55\u524d\u51e0\u4e3a\u51e0\u4e3a\u51e0\u4e3a\u51e0\uff0c\u8fd9\u4e2a\u6587\u4ef6\u90fd\u88ab\u51fa\u73b0\u5185\u4e0b\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u5206\u522b\u4e3a\u51e0\u4e3a\u51e0\uff0c\u518d\u5206\u522b\u6709$n = min(n, s[i])$\n\n# \u5982\u679cs\u5b57\u7b26$s$\u90fd\u88ab\u51fa\u73b0\u5185\u4e0b\uff0c\u5219\u8fd4\u56de$s$\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6587\u4ef6\u90fd\u88ab\u51fa\u73b0\u5185\u4e0b\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6587\u4ef6\u90fd\u88ab\u51fa\u73b0\u5185\u4e0b\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u5206\u522b\u6709$n = min(n, s[i])$\n\n# \u5982\u679cs\u5b57\u7b26$s$\u90fd\u88ab\u51fa\u73b0\u5185\u4e0b\uff0c\u5219\u8fd4\u56de$s$\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u5206\u522b\u6709$n = min(n, s[i])$\n\n# \u5982\u679cs\u5b57\u7b26$s$\u90fd\u88ab\u51fa\u73b0\u5185\u4e0b\uff0c\u5219\u8fd4\u56de$s$\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u5206\u522b\u6709$n = min(n, s[i])$\n\n# \u521d\u59cb\u5316\u5b57\u6bcd\u5e8f\u5217\uff08\u901a\u77e9\uff09\ndef solve():\n    n = int(input())\n    s = input()\n    for i in range(n):\n        if s[i] == 'R' or s[i] == 'G':\n            continue\n        elif s[i] == 'B' or s[i] == 'B':\n            distance = abs(s[i] - 1)\n            if distance > 1e-10:\n                print(i + 1, end = \" \")\n            else:\n                print(i + 1, end = \" \")\n        else:\n            distance = abs(s[i] - 1)\n            if distance > 1e-10:\n                print(i + 1, end = \" \")\n            else:\n                print(i + 1, end = \" \")\n        print(s.count(\"R\")))\n\nsolve()\n\n# \u5148\u7acb\u5316 O(n^2)\ndef solve():\n    n = int(input())\n    s = input()\n    for i in range(n):\n        if s[i] == \"R\" or s[i] == \"G\":\n            continue\n        elif s[i] == \"B\" or s[i] == \"B\":\n            distance = abs(s[i] - 1)\n            if distance > 1e-10:\n                print(i + 1, end = \" \")\n            else:\n      "}, "379": {"problem_id": 4379, "answer": "from sys import stdin\ninput = stdin.readline\nn = int(input())\na = list(map(int, input().split()))\n\ns = sorted(a)\n\nfor i in range(1, n):\n    if s[i] not in a:\n        s[i] = 1\n    else:\n        s[i] += 1\n\nprint(s[n - 1])"}, "380": {"problem_id": 4380, "answer": "import sys\nread = sys.stdin.readline\ninp = lambda: sys.stdin.readline().rstrip()\ndef main():\n    #\u7b97\u6cd5\u89e3\u91ca\uff1a3\u4e2a\u6587\u4ef6\u53c2\u6570\n    #\u901a\u8fc7\u9898\u5904\u7406\u65b9\u6cd5\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u6587\u4ef6\u53ef\u4ee5\u52a0\ufffd3\u4e2a\u6587\u4ef6\uff0c\u4f1a\u8ba1\u6570\u6b21\u53d6\u6587\u4ef6\u4e3a3\uff1b\u5982\u679c\u5b58\u5728\u6587\u4ef6\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\uff0c\u56e0\u4e3a\u88ab\u6587\u4ef6\u5c31\u4f1a\u7528\u4e86\uff0c\u7136\u540e\u5c06\u6587\u4ef6\u53d6\u4e00\u4e2a\u6587\u4ef6\u52a0\ufffd3\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u901a\u8fc7\u88ab\u6587\u4ef6\u4e3a3\u6765\u8ba1\u6570\u653e\u5230\u6587\u4ef6\uff0c\u7136\u540e\u901a\u8fc7\u88ab\u6587\u4ef6\u4e3a2\u6765\u8ba1\u6570\u653e\u5230\u6587\u4ef6\uff0c\u7136\u540e\u901a\u8fc7\u88ab\u6587\u4ef6\u4e3a2\u6765\u8ba1\u6570\u653e\u5230\u6587\u4ef6\uff0c\u7136\u540e\u5bf9\u5e94\u7684\u6587\u4ef6\u5c31\u4f1a\u7528\u4e86\uff0c\u800c\u540e\u9762\u5c31\u4e0d\u7528\u5230\u8fd9\u91cc\u6210\u4e0b\u5dee\u5f02\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u8ba1\u6570\u653e\u5230\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u6587\u4ef6\u53d6\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u901a\u51fa\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u5bf9\u5e94\u7684\u6587\u4ef6\u5c31\u4f1a\u7528\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u975e\u5e38\u5904\u7406\u6d4b\uff0c\u662f\u5426\u88ab\u6587\u4ef6\u4e3a\uff0c\u8fd9\u91cc\u5c31\u53ef\u4ee5\u88ab\u6587\u4ef6\u4e3a\uff0c\u4e0b\u80af\ufffd\u5230\u6587\u4ef6\uff0c\u7136\u540e\u901a\u51fa\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u5bf9\u5e94\u7684\u6587\u4ef6\u4e0b\u80af\ufffd\u5230\uff0c\u56e0\u4e3a\u8fd9\u91cc\u5c31\u53ef\u4ee5\u88ab\u6587\u4ef6\u4e3a\uff0c\u4e0b\u80af\ufffd\u5230\u6587\u4ef6\u4e0b\u80af\ufffd\u5230\uff0c\u7136\u540e\u901a\u51fa\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u5bf9\u5e94\u7684\u6587\u4ef6\u4e0b\u80af\ufffd\u5230\uff0c\u56e0\u4e3a\u8fd9\u91cc\u5c31\u53ef\u4ee5\u88ab\u6587\u4ef6\u4e3a\uff0c\u4e0b\u80af\ufffd\u5230\u6587\u4ef6\u4e0b\u80af\ufffd\u5230\uff0c\u7136\u540e\u5bf9\u5e94\u7684\u6587\u4ef6\u4e0b\u80af\ufffd\u5230\uff0c\u56e0\u4e3a\u8fd9\u91cc\u5c31\u53ef\u4ee5\u88ab\u6587\u4ef6\u4e3a\uff0c\u4e0b\u80af\ufffd\u5230\u6587\u4ef6\u4e0b\u80af\ufffd\u5230\uff0c\u7136\u540e\u901a\u51fa\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u5bf9\u5e94\u7684\u6587\u4ef6\u4e0b\u80af\ufffd\u5230\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u88ab\u6587\u4ef6\u4e3a\uff0c\u4e0b\u80af\ufffd\u5230\u6587\u4ef6\u4e0b\u80af\ufffd\u5230\uff0c\u7136\u540e\u901a\u51fa\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u5bf9\u5e94\u7684\u6587\u4ef6\u4e0b\u80af\ufffd\u5230\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u88ab\u6587\u4ef6\u4e3a\uff0c\u4e0b\u80af\ufffd\u5230\u6587\u4ef6\u4e0b\u80af\ufffd\u5230\uff0c\u7136\u540e\u901a\u51fa\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u5bf9\u5e94\u7684\u6587\u4ef6\u4e0b\u80af\ufffd\u5230"}, "381": {"problem_id": 4381, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N = int(readline())\n    d = dict()\n    for i in range(N):\n        d[i] = d.get(i, 0) + 1\n    total = 0\n    for i in range(N):\n        total += d[i]\n        if total % 50 == 0:\n            total //= 50\n        else:\n            total //= 50\n    print(total)\n\nmain()\n"}, "382": {"problem_id": 4382, "answer": "import sys\nreadline = sys.stdin.readline\nreadline = sys.stdin.readline.rstrip('\\n').rstrip('\\n')\n\nn = int(readline())\n\nprint(len(set(map(ord, list(map(int, str(n)))))))\n\n"}, "383": {"problem_id": 4383, "answer": "import math\ndef factors(n):\n return list(map(int,math.ceil(n/10)))\n\ndef __starting_point():\n main()\n\n__starting_point()"}, "384": {"problem_id": 4384, "answer": "from itertools import permutations as p\ndef coder_begins(n, start):\n    if n < 2:\n        return 0\n    elif n == 1:\n        return p(n-1, start)\n    else:\n        return p(n-1, start-1) + p(n-1, start+1)\n\ndef coder_endear(n, start):\n    if n < 2:\n        return 0\n    elif n == 1:\n        return p(n-1, start)\n    else:\n        return p(n-1, start-1) + p(n-1, start+1)\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(coder_endear(n, a))\n__starting_point()"}, "385": {"problem_id": 4385, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    a, b, c, d, e, k = map(int, input().split())\n    d = k - a\n    e = b - c\n    k = d\n    a = b\n    b = c\n    c = d\n    d = e\n    e = k\n    k = 0\n    for i in range(k):\n        x = a + b\n        y = c + d\n        if x > y:\n            x = y\n        elif x < y:\n            x = y\n        else:\n            y = x\n        if y > x:\n            y = x\n        elif y < x:\n            y = x\n        else:\n            x = y\n        if x > y:\n            x = y\n        elif x < y:\n            x = y\n        else:\n            y = x\n        if y > x:\n            y = x\n        elif y < x:\n            y = x\n        else:\n            x = y\n        if x > y:\n            x = y\n        elif x < y:\n            x = y\n        else:\n            y = x\n        if y > x:\n            y = x\n        elif y < x:\n            y = x\n        else:\n            x = y\n        if x > y:\n            x = y\n        elif x < y:\n            x = y\n        else:\n            y = x\n        if y > x:\n            y = x\n        if x > y:\n            x = y\n        if y > x:\n            y = x\n        if x < y:\n            x = y\n        if y > x:\n            y = x\n        if x > y:\n            x = y\n        if y > x:\n            y = x\n        if x < y:\n            x = y\n        if y > x:\n            y = x\n        if x < y:\n            x = y\n        if x > y:\n           "}, "386": {"problem_id": 4386, "answer": "import sys\nreadline = sys.stdin.readline = lambda x: sys.stdout.write(x)\n\ndef main():\n    a, s = list(map(int, readline().split()))\n    print(s)\n\nmain()\n"}, "387": {"problem_id": 4387, "answer": "R = int(input())\n\ndef __starting_point():\n    R = R\n    for _ in range(R):\n        print((\"{:0>8}\".format(R)))\n__starting_point()"}, "388": {"problem_id": 4388, "answer": "n=int(input())\na=list(map(int,input().split()))\nd=a[::-1]\nfor i in range(n):\n    d=d+1\nprint(d)"}, "389": {"problem_id": 4389, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    n = len(s)\n    ans = 0\n    for i in range(n):\n        ans += s[i]\n        ans -= s[i+1]\n    print(ans)\n"}, "390": {"problem_id": 4390, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef main():\n    n = int(input())\n    a, b = map(int, input().split())\n    print(a + b)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "391": {"problem_id": 4391, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\na = [float(i) for i in input().split()]\n\n# a.sort()\n# for i in range(n):\n#     a[i] = a[i-1] + 1\n\n# print(a)\n\ntemp = [float(i) for i in input().split()]\n\n# print(temp)\n\nans = 0\n\nfor i in range(n):\n    ans += a[i]\n    temp[i] = math.arange(temp[i], math.ceil(n - i / 2))\n\nprint(ans)\n"}, "392": {"problem_id": 4392, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    positions = [0] * m\n    for i in range(n):\n        positions[a[i] - 1] = positions[a[i] - 1] + 1\n    # print(positions)\n    # print(a)\n    if positions[-1] < positions[-2]:\n        print('NO')\n    else:\n        print('YES')\n"}, "393": {"problem_id": 4393, "answer": "import sys\nsys.setrecursionlimit(10**6)\nint(input())\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(s.count(\"b\"))\n"}, "394": {"problem_id": 4394, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nedges = [[] for i in range(n)]\n\ndef dfs(u, v, m):\n    if u == v:\n        return 0\n    elif u[0] == v[0]:\n        return 1\n    else:\n        edges[u].append(v)\n        edges[v].append(u)\n        dfs(u, v, m)\n        return min(edges[u].pop(), dfs(u, v, m))\n\nfor i in edges:\n    if i[0] == 1:\n        print(i[1] + 1)\n    else:\n        print(i[1] + 1)\n"}, "395": {"problem_id": 4395, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().rstrip('\\n')\n\ndef calc(s):\n    return s[0]%3\n\n# calc(s) = color(s)\n# print(s) = set(calc(s))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.rstrip('G')))\n\n# print(s) = set(s.rstrip('B')))\n\n# print(s) = set(s.rstrip('R')))\n\n# print(s) = set(s.r"}, "396": {"problem_id": 4396, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nX = list(map(int, input().split()))\nY = [0] * N\nfor i in range(N):\n    X[i] = X[i-1] + X[i]\n\ndef inpl(): return int(input())\ndef inpls(): return list(map(int, input().split()))\n\n# \u9019\u8077\u9019\u500b\u90e8\u5206\u53ef\u80fd\u5148\u5305\u542b\uff0c\u8003\u8651\u4e00\u76f4\u81f3\u5c11\u6709\u9650\u5e8f\uff0c\u4e0d\u80fd\u7528\u5230\u81f3\u6587\u4ef6\u4e0a\u4e2a\u6587\u4ef6\uff0c\u56e0\u4e3a\u8fd9\u6837\u5947\u5982\u620f\u9898\u8ba4\u770b\u5230\uff0c\u4f46\u662f\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\uff0c\u7136\u540e\u518d\u5f97\u5230\u6587\u4ef6\u4e0a\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u81f3\u4e8e\u9a8c\u8bc1\u5230\u8fd9\u6837\u7684\u957f\u672c\u8eab\n\n# \u5982\u679c\u8fd9\u6837\u53ef\u4ee5\u5230\u6d4f\u89e3\u6790\uff0c\u5219\u8fd9\u6837\u7684\u957f\u672c\u8eab\u5e76\u4e14\u8fd9\u6837\u505a\u51cf\u53bb\u5e76\u53d1\u90fd\u662f\u5e73\u60f3\n\n# \u8fd9\u91cc\u6700\u591a\u53ef\u80fd\u5148\u5305\u542b\uff0c\u8003\u8651\u4e00\u4e2a\u6587\u4ef6\u5939\u53ef\u4ee5\u5bfb\u6240\u6709\u9650\u5236\uff0c\u56e0\u6b64\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5bfb\u6240\u6709\u9650\u5236\n\n# \u7528\u4e8e\u9a8c\u8bc1\u5230\u6d4f\u89e3\u6790\uff0c\u9700\u8981\u8ba1\u7b97\u5230\u6587\u4ef6\u7684\u6570\u5b57\u4e3a\u5927\uff0c\u8003\u8651\u4e00\u4e2a\u6587\u4ef6\u5939\u53ef\u4ee5\u5bfb\u6240\u6709\u9650\u5236\uff0c\u56e0\u4e3a\u9a8c\u8bc1\u5230\u6d4f\u89e3\u6790\uff0c\u9700\u8981\u8ba1\u7b97\u5230\u6587\u4ef6\u5939\u53ef\u4ee5\u5bfb\u6240\u6709\u9650\u5236\uff0c\u56e0\u4e3a\u9700\u8981\u8ba1\u7b97\u5230\u6587\u4ef6\u5939\u53ef\u4ee5\u5bfb\u6240\u6709\u9650\u5236\uff0c\u9700\u8981\u8ba1\u7b97\u524d\u9762\u5230\u591a\u4e16\u79cd\u6570\u636e\u4e0b\uff0c\u56e0\u4e3a\u5207\u6362\u6587\u4ef6\u5939\u53ef\u4ee5\u5bfb\u6240\u6709\u9650\u5236\uff0c\u7136\u540e\u518d\u5f97\u5230\u6587\u4ef6\u4e0a\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u81f3\u4e8e\u81f3\u4e8e\u81f3\u4e8e\u81f3\u56db\u5356\n\n# \u59ba\u6ea2\u6210\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c\u65f6\u95f4\u8ddd\u79bb\uff0c"}, "397": {"problem_id": 4397, "answer": "import sys\nsys.setrecursionlimit(10**6)\nINF = 10**18\nMOD = 10**9 + 7\n\ndef main():\n    N, i = map(int, sys.stdin.readline().split())\n    print((N, i))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "398": {"problem_id": 4398, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict as dd\ndef input(): return sys.stdin.readline().strip()\ndef lcp(): return list(map(int, sys.stdin.readline().strip().split()))\ndef mx(): return map(int, sys.stdin.readline().strip().split())\ndef nu(): return int(input())\ndef sl(): return list(map(int, sys.stdin.readline().strip().split()))\ndef sr(): return sr()\ndef tl(): return tl()\ndef srt(): return srt()\ndef tc(): return int(input())\ndef tl(): return tl()\nMOD = 100_000_007\n\nn = int(input())\nS = set([S])\nT = set([T])\n\nfor i in range(n):\n    S.add(input())\n    T.add(input())\n\nprint(S.intersection(T))"}, "399": {"problem_id": 4399, "answer": "# -*- coding:utf-8 -*-\nimport sys\nreadline = sys.stdin.readline\nread = sys.__stdin__.__next__\n\nclass Station():\n    def __init__(self, s):\n        self.s = s\n        self.rank = 1\n        self.amt = 1\n        self.amr = 1\n        self.amr_at = -1\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    "}, "400": {"problem_id": 4400, "answer": "import bisect\n\ndef main():\n    S = input()\n    R = input()\n    cnt = 0\n    for i in range(3):\n        cnt += 1\n        if (cnt == R):\n            print((cnt - 1) + 1)\n        elif (cnt == S):\n            print((cnt - 1) + 1)\n        else:\n            print((cnt - 1) + 1)\n\nmain()\n"}, "401": {"problem_id": 4401, "answer": "X = int(input())\nY = int(input())\nZ = int(input())\n\ndef solve():\n x = X\n y = Y\n z = Z\n x = 0\n y = 0\n z = 0\n while x < y:\n  x += 1\n  y += 1\n  z += 1\n  x = x + z\n  y = y + z\n  x = x + 1\n  y = y + 1\n print(x, y, z)\n\nsolve()"}, "402": {"problem_id": 4402, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    A, B = map(int, readline().split())\n    x = int(B)\n    y = 0\n    for i in range(x):\n        if y % 2 == 0:\n            y = y // 2\n        else:\n            y = y // 2 + 1\n        x = int(B)\n    print(y)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "403": {"problem_id": 4403, "answer": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nclass T:\n    def __init__(self, n):\n        self.n = n\n        self.data = [None] * (n + 4)\n        self.data[-1] = n\n        self.data[-2] = 0\n        \n    def add(self, x):\n        self.data[x] = x\n        self.data[-1] += 1\n        \n    def __str__(self):\n        return f'{self.data[-1]} {self.data[-2]}'\n    \n    def issubset(self, x, y):\n        return self.__data[x] == self.__data[y]\n    \n    def __repr__(self):\n        return repr(self.data)\n    \n    def __str__(self):\n        return f'{self.data[-1]} {self.data[-2]}'\n    \n    def issubset(self, x, y):\n        return self.__data[x] == self.__data[y]\n    \n    def __repr__(self):\n        return repr(self.data)\n    \nsys.setrecursionlimit(1000000)\n    \n# sys.stdin = open(\"input.txt\")\n# sys.stdout = open(\"output.txt\")\n"}, "404": {"problem_id": 4404, "answer": "import sys\ninput = sys.stdin.readline\n\nS = input().rstrip()\n\nINF = 10**9 + 7\n\ndef convert_to_n(s):\n    return int(s, 2)\n\ndef convert_to_str(s):\n    return str(int(s, 2)) if s.startswith('/') else s.split('/')\n\n# Ayy you're all set!\n\n# Convert string S to an array of strings.\n# May take advantage of ASCII-8 and ASCII-9 format conversions.\n# May take advantage of December BigInt and December int format conversions.\n\n# I'm sure you're feeling right about your problem, but here's a few things you should know before tackling it hard!\n# 1. If S is not in the year 2020, print \"Briefed\" (see below)\n# 2. If S is not in the yyy/mm/dd format, print \"Impressed\" (see below)\n# 3. If S is not in the yyy/yyyy/mm/dd format, print \"Violent\" (see below)\n# 4. If S is in the yyy/yyyy/mm/dd format, print \"Disheartened\" (see below)\n# 5. If S is in the yyy/mm/yy/yyyy/mm/dd format, print \"Wrong\" (see below)\n\n# This is a bit confusing, so lets go here and do the same thing.\n# Return the count of A's who were able to get in the way of B.\n# So A is in the end of the yyyy-mm-dd and B is in the end of the yyyy-mm-dd.\n# So A is in the end of the yyyy-mm-dd and B is in the end of the yyyy-mm-dd.\n# So A is in the end of the yyyy-mm-dd and B is in the end of the yyyy-mm-dd.\n\n# May take advantage of December int format conversions.\n# May take advantage of December bigInt and December bigDecimal conversion.\n# May take advantage of December int format conversions.\n# May take advantage of December int format conversions.\n# May take advantage of December int format conversions.\n# May take advantage of December int format conversions.\n# May take advantage of December int format conversions.\n# May take advantage of December int format conversions.\n# May take advantage of December int format conversions.\n# May take advantage of December int format conversions.\n# May take advantage of December int format conversions.\n# May take advantage of December int format conversions.\n# May take advantage ofblueberry:\n# 2020-04-30 00:00:00\n# 2020-05-30 00:00:00\n# 2020-07-30 00:00:00\n# 2020-10-30 00:00:00\n# 2020-11-30 00:00:00\n\n# May improve the code a bit, but it should be able to handle it.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of Python's time-out format.\n# May take advantage of"}, "405": {"problem_id": 4405, "answer": "n = int(input())\np = list(map(int, input().split()))\nfor i in range(n):\n    a = list(map(int, input().split()))\n    p.append(a)\n\n# a.sort()\n# print(p[-1])\n\n# print(p[-1])\n\ndef __starting_point():\n    n = int(input())\n    p = list(map(int, input().split()))\n    print(max(p[-1] + 1, n - 2) + 1)\n__starting_point()"}, "406": {"problem_id": 4406, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nid = [int(i) for i in input().split()]\n\ndef main():\n    n, k = list(map(int, input().split()))\n    id.sort()\n    #print(id)\n    #print(n)\n    #print(k)\n    #print(id)\n    \n    #print(id)\n    for i in range(1, n + 1):\n        print(id[i], end = \" \")\n        print(id[i - 1], end = \" \")\n        id[i] += 1\n        \ndef __starting_point():\n    main()\n\n__starting_point()"}, "407": {"problem_id": 4407, "answer": "import math\nn,q=list(map(int,input().split()))\na=list(map(int,input().split()))\nfor i in range(q):\n\tb=int(math.log2(a[i]))\n\tans=0\n\tfor j in range(i+1,n):\n\t\tans+=b*(2**j)\n\tprint(ans)\n"}, "408": {"problem_id": 4408, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] = list(map(int, input().split()))\n\nd = dict()\nfor i in range(k + 1):\n    d[i] ="}, "409": {"problem_id": 4409, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\ns = [0] * (n + 1)\nfor i in range(n):\n    s[i] = min(a[i], s[i - 1])\n\nans = []\nfor i in range(n):\n    ans.append(min(a[i], s[i]))\n\nprint(len(ans))\nfor i in ans:\n    print(i)\n"}, "410": {"problem_id": 4410, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, k = list(map(int, input().split()))\n        l = []\n        for i in range(n):\n            if i < n-1:\n                l.append(i)\n            else:\n                l.append(0)\n        print(l[-1])\n        for i in range(n-k):\n            if l[i] > 0:\n                l[i] = 0\n            elif l[i] < 0:\n                l[i] = 0\n            else:\n                l[i] = 1\n                \n        print(len(l))\n        print(0)\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n      "}, "411": {"problem_id": 4411, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\nX = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# L = [int(x) for x in input().split()]\n\n# L = [int(x) for x in input().split()]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input().split())) for _ in range(n)]\n\n# X = [list(map(int, input())) for _ in X]\n\n# X = [sys.maxsize]*n\n\n# print(X)\n\nans = 0\n\nfor i in range(n):\n    if i%2 == 0:\n        ans += X[i]\n    else:\n        ans += X[i]\n\nif ans > n-k:\n    print(ans)\n    break\n\nelse:\n    print(n-k-1)\n"}, "412": {"problem_id": 4412, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in a:\n        if i % 3 == 0:\n            ans += 1\n        else:\n            ans += 2\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "413": {"problem_id": 4413, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for i in range(n):\n        if a[i] not in a:\n            ans += 1\n    print(ans)\n"}, "414": {"problem_id": 4414, "answer": "from math import gcd\nfor _ in range(int(input())):\n    a, b, n, s = map(int, input().split())\n    if a == b:\n        print('YES')\n    elif a == 1:\n        print('NO')\n    else:\n        print('NO')"}, "415": {"problem_id": 4415, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print('NO')\n    for i in range(n):\n        print(a[i], end ='')\n    print()\n\nmain()\n"}, "416": {"problem_id": 4416, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k = list(map(int,input().split()))\n\nl = [int(i) for i in input().split()]\n\n#l.sort()\n\n#d = {}\n\nfor i in range(n):\n    t,a,b = list(map(int,input().split()))\n    d[t] = max(b,a-b)\n    l.append(t)\n\n#print(l)\n\nans = 0\nfor i in range(1,n):\n    ans += min(l[i-1]*k,ans)\n    ans += min(l[i]*k,ans)\nprint(ans)\n"}, "417": {"problem_id": 4417, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = [2]*k\n    for i in range(n):\n        ans[i] = ans[i-1] + a[i]\n    print(*ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "418": {"problem_id": 4418, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef inpl(): return list(map(int, input().split()))\n\ndef inp(): return list(map(int, input().split()))\n\nfrom itertools import combinations\n\n# import sys\n# sys.stdin = open(\"input.txt\")\n# sys.stdout = open(\"output.txt\")\n\n# sys.setrecursionlimit(10**6)\nINF = float('inf')\nMOD = 10**9 + 7\n\n# MOD = 998244353\n\n# @lru_cache\ndef __starting_point():\n    n = int(input())\n    a = inpl()\n    print(min(n, a[0] + a[1] + a[2] + a[3] + a[4] + a[5]))\n\n__starting_point()"}, "419": {"problem_id": 4419, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    a, b = map(int, input().split())\n    print(min(10**9, b), '\\n')"}, "420": {"problem_id": 4420, "answer": "t = int(input())\nfor _ in range(t):\n    x, y, n = map(int, input().split())\n    if n % x == 0:\n        print(x)\n    elif n % y == 0:\n        print(y)\n    else:\n        print(k % x)\n"}, "421": {"problem_id": 4421, "answer": "import sys\ninput = sys.stdin.readline\n\nn,k=list(map(int,input().split()))\nd=list(map(int,input().split()))\n\n# \u305d\u306e\u30af\u30a8\u30ea\u3092\u4f5c\u6210\u3059\u308b\uff3b\u305d\u306e\u3068\u304d\n# d[i]\u304c\u6700\u5c0f\u5024\u3067\u3042\u308b\u3068\u3059\u308b\n# d[i]\u304c\u8fba\u3092\u6c42\u3081\u308b\n\n# \u533a\u9593[i,j)\u4ee5\u4e0a\u306b\u542b\u3080\n# \u4ee5\u4e0b\u306e\u6574\ufffd200ms\n\n# \u30d3gate\u3092\u8a08\u7b97\u3057\u3066\u5b9a\u6570\u5353\u5e84\n# \u3053\u308c\u3050\u308a\u3001\u3053\u306eGADDY\u3092\u3069\u306e\u30d2\u30f3\u30bf\ufffdN \u3067\u8a08\u7b97\u3057\u306a\u3044\u304b\n# \u30bb\ufffd\ufffd\u6975ie\u306e\u5834\u5408GADDY \u4ee5\u5916\u306f\u305d\u3046\u3067\u306a\u3044\n\n# \u6574\ufffd200ms\n# \u4ee5\u4e0b\u306e\u3068\u304d\n# \u4ee5\u524d\u306b\u3088\u3063\u3066\u3001\u30d2\u30f3\u30bf\ufffdN \u3068\u3044\u3046\u30af\u30a8\u30ea\u3092\u4f5c\u308a\u51fa\u305b\u308b\u3088\u3046\u306b\u3059\u308b\n\n# \u9802\u70b9(\u3064\u307e\u308a\u3001\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044)\n# \u6728\u533a\u9593\u5217\u306b\u95a2\u3057\u3066\u3001\u6728\u533a\u9593\u5217\u306b\u5bfe\u3057\u3066\u7d4c\u8def(\u305d\u306e\u307e\u307e)\u5024\u3092\u6c42\u3081\u308b\n\n# \u6728\u533a\u9593\u5217\u306b\u5bfe\u3057\u3066\u3001\u305d\u306e\u307e\u307e\u8ddd\u96e2\u3092\u6c42\u3081\u308b\n# \u6728\u533a\u9593\u5217\u306b\u5bfe\u3057\u3066\u3001\u305d\u306e\u307e\u307e\u8ddd\u96e2\u3092\u6c42\u3081\u308b\n\n# \u307e\u3060 n\u756a\u76ee\u306e\u307f\u3067\u3001\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n# \u307e\u3060 n\u756a\u76ee\u306e\u307f\u3067\u3001\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n\n# \u9802\u70b9(\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044)\n# \u6728\u533a\u9593\u5217\u306b\u5bfe\u3057\u3066\u3001\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n\n# \u9802\u70b9(\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044)\n# \u6728\u533a\u9593\u5217\u306b\u5bfe\u3057\u3066\u3001\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n\n# \u3042\u305f\u308a\u306b\u3057\u305f\u500b\u6570\n# \u6728\u533a\u9593\u5217\u306b\u5bfe\u3057\u3066\u3001\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n\n# \u9802\u70b9(\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044)\n# \u9802\u70b9(\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044)\n\n# \u6728\u533a\u9593\u5217\u306b\u5bfe\u3057\u3066\u3001\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n\n# \u307e\u3060 n\u756a\u76ee\u306e\u307f\u3067\u3001\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n# \u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n# \u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n\n# \u6728\u533a\u9593\u5217\u306b\u5bfe\u3057\u3066\u3001\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n\n# \u9802\u70b9(\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044)\n# \u9802\u70b9(\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044)\n\n# \u6728\u533a\u9593\u5217\u306b\u5bfe\u3057\u3066\u3001\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n\n# \u3042\u305f\u308a\u306b\u3057\u305f\u500b\u6570\n# \u6728\u533a\u9593\u5217\u306b\u5bfe\u3057\u3066\u3001\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n\n# \u9802\u70b9(\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044)\n# \u9802\u70b9(\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044)\n\n# \u6728\u533a\u9593\u5217\u306b\u5bfe\u3057\u3066\u3001\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n\n# \u307e\u3060 n\u756a\u76ee\u306e\u307f\u3067\u3001\u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n# \u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n# \u305d\u308c\u4ee5\u964d\u306f\u306a\u3044\n\n# \u6728\u533a\u9593\u5217\u306b\u5bfe\u3057"}, "422": {"problem_id": 4422, "answer": "n,k = map(int,input().split())\ns = list(input())\nprint(s[k-1])"}, "423": {"problem_id": 4423, "answer": "n = int(input())\ns = list(map(str, input().split()))\n\ndef main():\n    n = int(input())\n    s = list(map(str, s))\n    l = [s[i] for i in range(n)]\n    for i in range(n):\n        if s[i] not in l:\n            l[s[i]] = 1\n        else:\n            l[s[i]] += 1\n    print(l[n])\ndef __starting_point():\n    main()\n\n__starting_point()"}, "424": {"problem_id": 4424, "answer": "import math\ndef main():\n    N = int(input())\n    X = int(math.log(N, 2))\n    print(\"Yes\")\n    if X > N:\n        print(\"No\")\n    else:\n        X -= N\n        print(\"X %d\" % X)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "425": {"problem_id": 4425, "answer": "N, K = list(map(int, input().split()))\n\n# N = N-1\n# K = K-1\nfrom math import ceil\n\n# \u30c0\u30a4\u30af\u30a8\u30ea\u30a2\n# \u307e\u305a\u306e\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\n# \u4ee5\u4e0b\u3060\u3051\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8\u5024\u306e\u307e\u30670\n# \u30d3\u30c3\u30c8"}, "426": {"problem_id": 4426, "answer": "#!/usr/bin/env python\n__author__ = 'Greg's Inc'\n__email__ = 'emaildougg@gmail.com'\n__email__ = 'gregs (>=3)')\ndef __starting_point():\n    try:\n        s = int(input())\n        for i in range(0,len(s)):\n            if s[i] == '1':\n                print(i + 1)\n    except:\n        pass\n__starting_point()"}, "427": {"problem_id": 4427, "answer": "#!/usr/bin/env python3\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    r, d, x = map(int, readline().split())\n    print((r + d + x) % 1000000007)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "428": {"problem_id": 4428, "answer": "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    d = [int(x) for x in input().split()]\n    d.sort()\n    ans = 0\n    for j in range(len(d) - 1):\n        ans += d[j]\n        if j not in d:\n            ans += d[j]\n            d[j] = 0\n    print(ans)\n"}, "429": {"problem_id": 4429, "answer": "import bisect\nfor _ in range(int(input())):\n    x, y, z = map(int, input().split())\n    if z == 1:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n       "}, "430": {"problem_id": 4430, "answer": "import sys\ninput = sys.stdin.readline\nn, m, k = map(int, input().split())\nd = {}\nfor i in range(n):\n    d[i] = list(map(int, input().split()))\n\nans = 0\np = []\nfor i in range(1, n+1):\n    if d[i] == list(range(1, n+1)):\n        ans += 1\n    else:\n        p.append(i)\n\nif ans > 0:\n    print(ans)\nelse:\n    print(k + 1)\n"}, "431": {"problem_id": 4431, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\ns = input()\n\nl = list(s)\n\nfor i in range(k):\n    c = list(map(str, input().split()))\n    l.append(c.count('a'))\n\nprint(len(l))\n"}, "432": {"problem_id": 4432, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(max(a[0], len(a)-1) + len(a[1]))\n"}, "433": {"problem_id": 4433, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nedges = [[] for i in range(m)]\nfor i in range(1, n + 1):\n    u, v = map(int, input().split())\n    edges[u].append((v, i))\n    edges[v].append((u, i))\n\ndef dfs(u, v):\n    if u!= v:\n        print((u, v))\n        return\n    if len(edges[u][0]) == 0:\n        print((u, v))\n        return\n    for u in edges[u]:\n        if dfs(u, v):\n            continue\n        else:\n            print((u, v))\n            return\n        \ndfs(u, v)\n"}, "434": {"problem_id": 4434, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    \n    # n = int(1e9+9)\n    # print(n)\n    print(n-n-1)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-2)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-3)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-4)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-5)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-6)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-7)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-8)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-9)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-10)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-11)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-13)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-14)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-15)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-16)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-17)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-18)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-19)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-20)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-21)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-22)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-23)\n    \n    # n = int(1e9+9)\n    # print(n-1)\n    print(n-n-24"}, "435": {"problem_id": 4435, "answer": "n=int(input())\na=list(map(int,input().split()))\nans=[0]*n\nfor i in range(n):\n    a[i]=(a[i-1])%2\nans.sort()\nprint(*ans)"}, "436": {"problem_id": 4436, "answer": "for _ in range(int(input())):\n    n = int(input())\n    print('NO') if n%3==0 else print('YES')\n"}, "437": {"problem_id": 4437, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input()\n\na = [0]*n\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n    a[i-1] += 1\n\nans = 0\nfor i in range(n):\n    ans += min(a[i] + 1, s[i])\nprint(ans)\n"}, "438": {"problem_id": 4438, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nx, y = map(int, input().split())\n\nfor i in range(n):\n    x1, y1 = map(int, input().split())\n    if x1 - x < 0:\n        x -= 1\n    elif x1 == -1:\n        x -= 1\n    elif x1 == 1:\n        x -= 2\n    else:\n        print(abs(x1 - x))\n"}, "439": {"problem_id": 4439, "answer": "import math\ndef solve_quiz(A, B):\n    if A == 1 and B == 1:\n        print(\"2\")\n    elif A == 2 and B == 2:\n        print(\"1\")\n    elif A == 1 and B == 3:\n        print(\"2\")\n    elif A == 2 and B == 3:\n        print(\"1\")\n    else:\n        print(\"0\")\n    \nsolve_quiz(A, B)\n"}, "440": {"problem_id": 4440, "answer": "import math\nn=int(input())\nx=math.sqrt(n)\nprint(x/x[0])"}, "441": {"problem_id": 4441, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    N = int(readline())\n    print(main())\n\ndef __starting_point():\n    main()\n__starting_point()"}, "442": {"problem_id": 4442, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\na, b = map(int, input().split())\n\nprint(a-1) if a > b else print(a-1)"}, "443": {"problem_id": 4443, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    c = ord('a')\n    d = ord('z')\n    print(c, d)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "444": {"problem_id": 4444, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n S = input()\n T = readline()\n\ndef __starting_point():\n main()\n\n__starting_point()"}, "445": {"problem_id": 4445, "answer": "import math\nn = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n    if a[i]%2 == 0:\n        ans += 1\n    elif a[i]%2 == 1:\n        ans += 1\nprint(ans)"}, "446": {"problem_id": 4446, "answer": "import sys\ninput = sys.stdin.readline\n\nn, a, b, k = list(map(int, input().split()))\n\n# =============================================================================\n\ndef get_power(x, y):\n    return x * y\n\ndef get_a_points(x, y):\n    return x - y\n\ndef get_b_points(x, y):\n    return x * y\n\ndef get_h_points(x, y):\n    return x - y\n\ndef get_g_points(x, y):\n    return x * y\n\ndef get_l_points(x, y):\n    return x - y\n\ndef get_r_points(x, y):\n    return x * y\n\ndef get_g_points_a_tot(x, y):\n    return x - y\n\ndef get_l_points_a_tot(x, y):\n    return x * y\n\ndef get_r_points_a_tot(x, y):\n    return x * y\n\ndef get_g_points_a_tot(x, y):\n    return x * y\n\ndef get_l_points_a_tot(x, y):\n    return x * y\n\ndef get_r_points_a_tot(x, y):\n    return x * y\n\ndef get_g_points_a_tot(x, y):\n    return x * y\n\ndef get_l_points_a_tot(x, y):\n    return x * y\n\ndef get_r_points_a_tot(x, y):\n    return x * y\n\ndef get_g_points_a_tot(x, y):\n    return x * y\n\n##############################################################\n\n# =============================================================================\n\n######################################################\n\n# Name:   Autherton Coding Team    Description:    Autherton Coding    Input    Parameters     \n# Description:   \n\ndef main():\n    n, a, b, k = list(map(int, input().split()))\n    \n    # =============================================================================\n    \n    # N: monsters    \n    # A: a points    \n    # B: b points    \n    # C: c points    \n    # D: dj points    \n    # E: e points    \n    # F: f points    \n    # G: g points    \n    # L: l points    \n    # R: r points    \n    # S: s points    \n    # T: t points    \n    # \u4ee5\u4e0a\u65b9\u5171      \u4e8c\u52aa\u6cd5           \n    # =============================================================================\n    \n    # N: monsters    \n    # A: a points    \n    # B: b points    \n    # C: c points    \n    # D: dj points    \n    # E: e points    \n    # F: f points    \n    # G: g points    \n    # L: l points    \n    # R: r points    \n    # \u4ee5\u4e0a\u65b9\u5171       \u4e8c\u52aa\u6cd5            \n    # =============================================================================\n    \n    # N: monsters    \n    # A: a points    \n    # B: b points    \n    # C: c points    \n    # D: dj points    \n    # E: e points     \n    # F: f points    \n"}, "447": {"problem_id": 4447, "answer": "import math\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\n\nfor i in range(n):\n    if(m-i>=0):\n        print(i+1)\n    else:\n        a.append(i+1)\n\nprint(n//m)\n"}, "448": {"problem_id": 4448, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nk = list(map(int, input().split()))\n\ndef calc(x, y):\n    if x == y:\n        return 1\n    else:\n        return 0\n\nans = 2**k\n\n# print(calc(x, y))\n\n# print(calc(x, y))\n\nfor i in range(m):\n    ans += calc(i, k)\n    ans = min(ans, 2**k)\n\n# print(k)\n\nprint(ans)\n"}, "449": {"problem_id": 4449, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    area = [0]*4\n    for i in range(n):\n        a[i] = a[i-1]*(4*i-1)\n    for i in range(4):\n        a[i] = a[i-1]*(a[i-2]*(4*i-2))\n    print('NO' if area[4*4-1]%2!=0 else 'YES')\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "450": {"problem_id": 4450, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\n\nedges = [[] for _ in range(n)]\n\ndef find_neighbours(vert):\n    neighbours = []\n    for v in vert:\n        neighbours.append(vert[v].find_neighbours(v))\n    neighbours.sort()\n    neighbours[0] = len(neighbours[0])\n    neighbours[1] = len(neighbours[1])\n    neighbours[2] = len(neighbours[2])\n    neighbours[3] = len(neighbours[3])\n    neighbours[4] = len(neighbours[4])\n    neighbours[5] = len(neighbours[5])\n    neighbours[6] = len(neighbours[6])\n    neighbours[7] = len(neighbours[7])\n    neighbours[8] = len(neighbours[8])\n    neighbours[9] = len(neighbours[9])\n    neighbours[10] = len(neighbours[10])\n    neighbours[11] = len(neighbours[11])\n    neighbours[12] = len(neighbours[12])\n    neighbours[13] = len(neighbours[13])\n    neighbours[14] = len(neighbours[14])\n    neighbours[15] = len(neighbours[15])\n    neighbours[16] = len(neighbours[16])\n    neighbours[17] = len(neighbours[17])\n    neighbours[18] = len(neighbours[18])\n    neighbours[19] = len(neighbours[19])\n    neighbours[20] = len(neighbours[20])\n    neighbours[21] = len(neighbours[21])\n    neighbours[22] = len(neighbours[22])\n    neighbours[23] = len(neighbours[23])\n    neighbours[24] = len(neighbours[24])\n    neighbours[25] = len(neighbours[25])\n    neighbours[26] = len(neighbours[26])\n    neighbours[27] = len(neighbours[27])\n    neighbours[28] = len(neighbours[28])\n    neighbours[29] = len(neighbours[29])\n    neighbours[30] = len(neighbours[30])\n    neighbours[31] = len(neighbours[31])\n    neighbours[32] = len(neighbours[32])\n    neighbours[33] = len(neighbours[33])\n    neighbours[34] = len(neighbours[34])\n    neighbours[35] = len(neighbours[35])\n    neighbours[36] = len(neighbours[36])\n    neighbours[37] = len(neighbours[37])\n    neighbours[38] = len(neighbours[38])\n    neighbours[39] = len(neighbours[39])\n    neighbours[40] = len(neighbours[40])\n    neighbours[41] = len(neighbours[41])\n    neighbours[42] = len(neighbours[42])\n    neighbours[43] = len(neighbours[43])\n    neighbours[44] = len(neighbours[44])\n    neighbours[45] = len"}, "451": {"problem_id": 4451, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    x = list(map(int, input().split()))\n    a.append(x[-1] + x[-2])\n    \n\n# print a\n\nt = [0]*10\nfor i in range(10):\n    t[i] = max(t[i-1], a[i])\n\n# print t\n\nans = []\n\nfor i in range(10):\n    ans.append(t[i] + a[i])\n\nprint(*ans, sep='\\n')\n"}, "452": {"problem_id": 4452, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    print(sum(s))\n"}, "453": {"problem_id": 4453, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = [0]*n\n    for i in range(n):\n        x, y = list(map(int, input().split()))\n        ans[x-1] += 1\n        ans[y-1] += 1\n    print(len(ans))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "454": {"problem_id": 4454, "answer": "import sys\nimport heapq\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    goods = list(map(int, input().split()))\n    good_sums = [0] * (n + 1)\n    for i in range(n):\n        good_sums[i] = goods[i] + a_i\n        good_sums[i + 1] = good_sums[i] + a_i\n    print(good_sums[-1])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "455": {"problem_id": 4455, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\np = [0]\nfor i in range(k):\n    p.append(sys.stdin.readline().rstrip())\n\nx = list(map(int, input().split()))\n\ns = 0\nfor i in range(1, n + 1):\n    if s + i < x:\n        s += i\n    else:\n        s += x[i]\n\nprint(s)\n"}, "456": {"problem_id": 4456, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\np = [i for i in range(n+1)]\nq = [i for i in range(n+1)]\n\ns = input()\n\nfor i in range(1, n+1):\n    if s[i] < s[i-1]:\n        p.append(i)\n        q.append(i)\n        s = s[:i] + s[i+1:]\n    elif s[i] > s[i-1]:\n        q.append(i)\n        s = s[:i] + s[i+1:]\n    else:\n        p.append(i)\n        q.append(i)\n        s = s[:i] + s[i+1:]\n\nif len(p) == k:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n"}, "457": {"problem_id": 4457, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\n\ndef main():\n    A.sort()\n    x = A[0]\n    y = A[1]\n    for i in range(2, n):\n        if A[i] < x:\n            x = A[i]\n        else:\n            y = A[i]\n            \n    shots = 0\n    for i in range(n):\n        shots += A[i]\n        \n    print(shots)\n\nmain()\n"}, "458": {"problem_id": 4458, "answer": "def main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if p[i] > p[i-1]:\n            ans += 1\n        elif p[i] == p[i-1]:\n            ans += 1\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "459": {"problem_id": 4459, "answer": "import sys\nread = sys.stdin.read\n\ndef main():\n    INF = 10**9+7\n    N = int(N ** 0.5)\n    a = list(map(int, read().split()))\n    \n    for i in range(N):\n        a.append(a[i])\n    \n    a = sorted(a)\n    \n    ans = INF\n    \n    for i in range(N):\n        ans = min(ans, a[i])\n        \n    print(ans)\n\nmain()\n"}, "460": {"problem_id": 4460, "answer": "from itertools import chain, islice\n\ndef main():\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    z = list(islice(chain(y, z)), key=lambda x: x[1])\n    if len(y) == 5:\n        print(0)\n    elif len(y) == 5:\n        print(y[0])\n    else:\n        for i in range(len(y) - 5):\n            if islice(y, z[i]):\n                print(i)\n                break\n        else:\n            print(i)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "461": {"problem_id": 4461, "answer": "import math\ndef main():\n    H, W = list(map(int, input().split()))\n    a = [0] + [float('inf')] * (H + W)\n    a[0] = 0\n    for i in range(1, H + W):\n        a[i] = min(a[i - 1], a[i - W] - a[i - W - 1])\n    print(math.floor(a[0] - a[1]))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "462": {"problem_id": 4462, "answer": "from math import sqrt\n\nN = int(input())\na = list(map(int, input().split()))\n\ndef solve(a):\n    if a.count(a) > 1:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\n\nfor i in range(N):\n    a.sort(key=lambda a: a[1])\n    if a[0]*a[1]*a[2] == 4:\n        print(\"Yes\")\n    elif a[0]*a[1]*a[2] == 4:\n        print(\"Yes\")\n    elif a[0]*a[1]*a[2] == 4:\n        print(\"Yes\")\n    elif a[0]*a[1]*a[2] == 4:\n        print(\"Yes\")\n    elif a[0]*a[1]*4 == 4:\n        print(\"Yes\")\n    elif a[0]*a[1]*4 == 4:\n        print(\"Yes\")\n    else:\n        print(\"No\")"}, "463": {"problem_id": 4463, "answer": "import sys\ninput = sys.stdin.readline\n\ns = [int(x) for x in input().split()]\nt = [int(x) for x in input().split()]\n\ndef main():\n    s = s[0]\n    t = t[0]\n    for i in range(1, len(s)):\n        if s[i] == t[i]:\n            print(\"Yes\")\n            continue\n        elif s[i] == t[i]:\n            print(\"No\")\n            continue\n        else:\n            print(\"No\")\n            s[i] = t[i]\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n            t[i] = 0\n            s[i] = 0\n   "}, "464": {"problem_id": 4464, "answer": "import math\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return math.factorial(n-1)\n\ndef sum(a, b):\n    ans = 0\n    for i in range(1, math.ceil(a**2) + 1):\n        ans += a**i\n    return ans % math.factorial(b)\n\nMOD = 1000000007\n\nn = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nans = pow(a, MOD, MOD)\n\nprint(\"YES\" if sum(a, b) else \"NO\")"}, "465": {"problem_id": 4465, "answer": "#!/usr/bin/env python3\n\ndef main():\n n = int(input())\n for i in range(n):\n  l,r = map(int, input().split())\n  l.remove(r)\n  r.remove(l)\n  \ndef __starting_point():\n main()\n__starting_point()"}, "466": {"problem_id": 4466, "answer": "import sys\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\n\ndef main():\n    X, Y, Z = list(map(int, readline().split()))\n    # print(X, Y, Z)\n    l = min(X, Y)\n    # print(l, l-X, l-Y)\n    l = max(l, Y)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n    l = min(l, Z)\n    # print(l, l-X, l-Y)\n    l = max(l, Z)\n    # print(l, l-X, l-Y)\n  "}, "467": {"problem_id": 4467, "answer": "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nA = list(map(int, readline().split()))\n\ndef f(x):\n    return x - x//2\n\n# A = tuple(map(int, readline().split()))\n\nfor i in range(N):\n    a, b, c = A[i]\n    if (a-b)%2 == 0:\n        f(a)\n    elif (b-a)%2 == 0:\n        f(b)\n    else:\n        f(c)\n\nprint(f(0))"}, "468": {"problem_id": 4468, "answer": "import sys\ninput = sys.stdin.readline\n\nN, T = map(int, input().split())\nAns = []\nfor i in range(N):\n    t = int(input())\n    if t == 0:\n        Ans.append(t)\n    elif t == 1:\n        Ans.append(t)\n    else:\n        if t == 2:\n            Ans.append(t)\n        else:\n            if t == 2:\n                Ans.append(t)\n            else:\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n                Ans.append(t)\n             "}, "469": {"problem_id": 4469, "answer": "q = int(input())\nfor _ in range(q):\n    l, r = map(int, input().split())\n    if l == 1:\n        print(1)\n    elif r == 1:\n        print(2)\n    else:\n        print(3)\n        print(1)\n        print(2)\n        print(3)\n        print(1)\n"}, "470": {"problem_id": 4470, "answer": "import math\ndef main():\n    n = int(input())\n    if n % 2 == 0:\n        print(-1)\n    else:\n        a = n // 2\n        if a % 3 == 0:\n            print(math.ceil(math.sqrt(a)))\n        else:\n            print(n // 2 + 1)\n            \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        "}, "471": {"problem_id": 4471, "answer": "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a[n-1] == a[n-2] and a[n-3] == a[n-4])"}, "472": {"problem_id": 4472, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = input()\nb = input()\n\n#a = list(map(int, input().split()))\n\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list(map(int, input().split()))\n\n#\n#b = list(map(int, input().split()))\n\n#\n#a = list"}, "473": {"problem_id": 4473, "answer": "t = int(input())\nfor i in range(t):\n    a, b, k = map(int, input().split())\n    print(k - a)"}, "474": {"problem_id": 4474, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        print(n, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n        print(n-3, end=\" \")\n      "}, "475": {"problem_id": 4475, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    a, b, x, y, n = list(map(int, input().split()))\n    a = min(a, x) + min(b, y)\n    b = min(b, x) + min(y, y)\n    print(min(a * b, x * b) + min(b * x, y * x) + min(a * y, b * y) + min(b * x, b * y) + min(a * x, b * y) + min(b * y, x * x) + min(b * x, y * y))\n"}, "476": {"problem_id": 4476, "answer": "t = int(input())\nfor _ in range(t):\n    a, b = map(int, input().split())\n    print(a + b)"}, "477": {"problem_id": 4477, "answer": "t = int(input())\nfor _ in range(t):\n x = int(input())\n print(sum(map(int, input().split())))"}, "478": {"problem_id": 4478, "answer": "def main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = []\n    for i in range(n-1):\n        ans.append(a[i])\n    print('NO')\n    for i in range(len(ans)):\n        if ans[i] == 0:\n            print('NO')\n            continue\n        if ans[i] == 0:\n            print('YES')\n            continue\n        if ans[i] == 0:\n            print('NO')\n            continue\n        if ans[i] == 0:\n            print('YES')\n            continue\n        print(ans[i], ans[i+1])\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    "}, "479": {"problem_id": 4479, "answer": "class Solution:\n    def largestSumAfterKNegations(self, A: List[int], K: int) -> int:\n        '''\n        dp[i] = -1 for i in range(len(A))\n        dp[i] = max(A[i], 0)\n        '''\n        def check(i):\n            if i == 0:\n                return 1\n            elif A[i-1] == -A[i]:\n                return 0\n            else:\n                return max(A[i], -A[i-1])\n        \n        res = 0\n        for i in range(len(A)):\n            res += check(i)\n        return res\n"}, "480": {"problem_id": 4480, "answer": "class Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        dp = [0] * (len(A) + 1)\n        for i in range(1, len(A)):\n            dp[i] = 1\n            for j in range(i, len(A)):\n                if (A[i] + A[j] == A[j] + A[i] + A[j-1] == A[j] + A[j-1] +... + A[i]):\n                    dp[i] += 1\n                elif (A[i] + A[j] == A[j] + A[i] +... + A[i+1] == A[j] + A[j-1] +... + A[i]):\n                    dp[i] += 1\n                elif (A[i] + A[j] == A[j] +... + A[i+1] == A[j] +... + A[i]):\n                    dp[i] += 1\n                else:\n                    return False\n        return True"}, "481": {"problem_id": 4481, "answer": "n = int(input())\ns = list(map(ord, input().split()))\nprint(*[s[i:j] for i in range(n)] if n % 2 == 0)\n"}, "482": {"problem_id": 4482, "answer": "import math\nN=int(input())\na=list(map(int,input().split()))\nb=a.translate(str.maketrans('0123456789','0123456789'))\nc=math.ceil(b**0.5)\nif c==0:\n  print(0)\nelse:\n  print(c)\n"}, "483": {"problem_id": 4483, "answer": "#!/usr/bin/env python\n\ndef main():\n    A, B = map(int, input().split())\n    c = 0\n    for i in range(A, B + 1):\n        c += int(i % A)\n    print(c)\ndef __starting_point():\n    main()\n__starting_point()"}, "484": {"problem_id": 4484, "answer": "MOD = 10**9+7\nN, M = map(int, input().split())\ndogs = []\nmoves = []\nfor i in range(N):\n dogs.append(str(i))\nmoves.append(str(i) + \" \" + str(m))\ndogs.sort()\n\nprint(len(dogs))"}, "485": {"problem_id": 4485, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    N, M = map(int, readline().split())\n    if N == 1:\n        print(\"POSSIBLE\")\n    elif M == 1:\n        print(\"POSSIBLE\")\n    else:\n        a = list(map(int, readline().split()))\n        b = list(map(int, readline().split()))\n        print(a[0] + b[0] + 1)\n        print(a[1] + b[1] + 1)\n        print(a[2] + b[2] + 1)\n        print(a[3] + b[3] + 1)\n        print(a[4] + b[4] + 1)\n        print(a[5] + b[5] + 1)\n        print(a[6] + b[6] + 1)\n        print(a[7] + b[7] + 1)\n        print(a[8] + b[8] + 1)\n        print(a[9] + b[9] + 1)\n        print(a[10] + b[10] + 1)\n        print(a[11] + b[11] + 1)\n        print(a[12] + b[12] + 1)\n        print(a[13] + b[13] + 1)\n        print(a[14] + b[14] + 1)\n        print(a[15] + b[15] + 1)\n        print(a[16] + b[16] + 1)\n        print(a[17] + b[17] + 1)\n        print(a[18] + b[18] + 1)\n        print(a[19] + b[19] + 1)\n        print(a[20] + b[20] + 1)\n        print(a[21] + b[21] + 1)\n        print(a[22] + b[22] + 1)\n        print(a[23] + b[23] + 1)\n        print(a[24] + b[24] + 1)\n        print(a[25] + b[25] + 1)\n        print(a[26] + b[26] + 1)\n        print(a[27] + b[27] + 1)\n        print(a[28] + b[28] + 1)\n        print(a[29] + b[29] + 1)\n        print(a[30] + b[30] + 1)\n        print(a[31] + b[31] + 1)\n        print(a[32] + b[32] + 1)\n        print(a[33] + b[33] + 1)\n        print(a[34] + b[34] + 1)\n        print(a[35] + b[35] + 1)\n        print(a[36] + b[36] + 1)\n        print(a[37] + b[37] + 1)\n        print(a[38] + b[38] + 1)\n        print(a[39] + b[39] + 1)\n        print(a["}, "486": {"problem_id": 4486, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    # \u7b97\u6cd5\u89c4\u5219\u8868\u793a\u6587\u4ef6\uff0c\u5176\ufffdly\u7528\u6761\u4ef6\u6839\u52b4\u6811\uff0c\u8fd4\u56de\u6587\u4ef6\u5747\u9762\u6570\u7ec4\n    # \u5f53\u524d\u5b57\u7b26\u4e32\u90fd\u662f\u5426\u6587\u4ef6\uff0c\u53ef\u4ee5\u8bb0\u5f55\u6587\u4ef6\n    # \u5f53\u524d\u5b57\u7b26\u4e32\u90fd\u662f\u5426\u6587\u4ef6\uff0c\u53ef\u4ee5\u8bb0\u5f55\u6587\u4ef6\u8d85\u8fc7\u5904\u7406\n    # \u5982_____________________________________________________________________######\n    # \u4e3a\u4ec0\u4e48\u5c06\u6587\u4ef6\u8282\u70b9\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60\u4e0d\u76f8\u4fe1\u5b83\u5c31\u662f\u6620\u5462\uff1f\n    # \u4f60"}, "487": {"problem_id": 4487, "answer": "import sys\ndef check(A,B,C):\n    if A == B and C == None or C == None or A == None or B == None or C == None or A == None or B == None or C == None:\n        print YES\n    else:\n        print NO\n\ndef main():\n    A,B,C = map(int,sys.stdin.readline().split())\n    print(\"YES\")\n\nmain()\n"}, "488": {"problem_id": 4488, "answer": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**5)\ndef main():\n    A, B = list(map(int, input().split()))\n    print((A, B))\n\nmain()\n"}, "489": {"problem_id": 4489, "answer": "import sys\ninput = sys.stdin.readline\nN, M = list(map(int, input().split()))\ns = list(map(str, input().split()))\nt = list(map(str, input().split()))\n\ndef calc(x):\n    return x.count('1')\n\ndef btc(x):\n    return x.count('1')*(M-1)\n\ndef btcod(x):\n    return x.count('1')*(M-1)\n\ndef atcoderr(x):\n    return x.count('1')*(M-1)\n\ndef atcoderrb(x):\n    return x.count('1')*(M-1)\n\ndef atcoder(x):\n    return x.count('1')*(M-1)\n\ndef atcoderb(x):\n    return x.count('1')*(M-1)\n\n# Driver Code\n# --------------------------------------------------\n#################################################\n\nN = int(input())\ns = input()\nt = input()\n\nprint(calc(s))\n\n# --------------------------------------------------\n"}, "490": {"problem_id": 4490, "answer": "import sys\nsys.setrecursionlimit(10**5)\ndef II():\n    return int(sys.stdin.readline())\ndef MI():\n    return map(int,sys.stdin.readline().split())\ndef LI():\n    return list(map(int,sys.stdin.readline().split()))\ndef LI2():\n    return list(map(int,sys.stdin.readline().split()))\ndef SI():\n    return sys.stdin.readline().strip()\n\nn = II()\nprint(n)\nfor i in range(n):\n    print(i,end=\"\")\n"}, "491": {"problem_id": 4491, "answer": "import sys\nfrom bisect import bisect_left as bl\nfrom heapq import heappush, heappop\nfrom collections import defaultdict as dd, deque, Counter\nfrom itertools import permutations,combinations as pp,permutations_with_replacement as pq, accumulate\nfrom operator import itemgetter\nfrom functools import reduce,cmp_to_key\nfrom bisect import bisect_right as br\nfrom heapq import heappop,heappush,heapify\nfrom itertools import combinations,groupby\nfrom collections import deque, Counter, OrderedDict, StirlingLeast,Inverse\nfrom operator import itemgetter\nfrom functools import reduce,cmp_to_key,itemgetter\nfrom re import compile,insort,insort_with_most_common,insort_with_most_smallest\nfrom time import perf_counter\nfrom fractions import gcd\n#sys.setrecursionlimit(10**8)\nMOD = 10**9+7\nINF = 10**18\nmod = 10**9+7\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef I(): return int(sys.stdin.readline())\ndef LS(): return list(map(str, sys.stdin.readline().split()))\ndef S(): return input()\ndef pf(n): return reduce(itemgetter(2), [LI() for _ in range(n)]), n-1\ndef lis(n): return sorted(list(enumerate(pf(n))))\ndef li(): return list(map(int, sys.stdin.readline().split()))\ndef lis_repr(l): return [l.pop() for _ in range(l)]\ndef li_repr(li): return [li.pop() for _ in range(li)]\ndef li_repr(li_repr): return [li_repr[i] for i in range(li_repr.index(1)+1)]\ndef sieve(n): return [1 << n]\ndef is_prime(x): return x in [1, 2, 3]\ndef divisors(n): return [int(i) for i in range(n)]\ndef is_list(x): return x in [1, 2, 3]\ndef is_prime(x):\n    for i in range(2, int(x**0.5)+1):\n        if x%i == 0:\n            return False\n    return True\ndef prime_factors(n):\n    pf = LI()\n    for i in range(2, n+1):\n        pf.append(pf[i])\n    return [pf]\ndef all_primes(n):\n    for i in range(n):\n        yield i\n        \ndef li_factors(n):\n    for i in range(n):\n        yield i\ndef all_primes(n):\n    for i in range(n):\n        yield i\ndef all_primes_with_replacement(n, primes):\n    for i in range(n):\n        yield i\ndef all_primes_with_replacement_with_replacement(n, primes):\n    for i in range(n):\n        yield primes[i]\ndef all_primes_with_replacement_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with_with"}, "492": {"problem_id": 4492, "answer": "from collections import defaultdict as dd\nn, x = map(int, input().split())\nd = dd(list)\nfor i in range(1, n):\n    d[i] = x\nans = 0\nfor i in d:\n    ans += i\nprint(ans)"}, "493": {"problem_id": 4493, "answer": "from itertools import combinations\ndef solve():\n    c = list(map(int, input().split()))\n    ans = []\n    for i in range(3, int(c[0]) + 1, 2):\n        ans.append(c[i]*(i+1))\n    print('Yes')\n    print('\\n'.join(map(str, ans)))\n\nsolve()"}, "494": {"problem_id": 4494, "answer": "def main():\n    S = list(input())\n    a = []\n    for i in S:\n        a.append(i)\n    a.sort()\n    print(a[-1])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "495": {"problem_id": 4495, "answer": "import sys\ninput = sys.stdin.readline\n\nINF = 10**18\nMOD = 10**9 + 7\n\ndef main():\n    a, b = map(int, input().split())\n    ans = 0\n    for i in range(a, b + 1):\n        ans += pow(2, i)\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "496": {"problem_id": 4496, "answer": "#!/usr/bin/env python\n\nimport bisect\n\ndef main():\n    d = int(input())\n    if d == 25:\n        print(\"Christmas\")\n    elif d == 24:\n        print(\"24\")\n    elif d == 23:\n        print(\"21\")\n    elif d == 21:\n        print(\"21\")\n    else:\n        return\n\nmain()\n"}, "497": {"problem_id": 4497, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nN = int(readline())\n\ndef divisors(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 2\n    else:\n        return 3\n\ndef is_divisible(n):\n    if n == 1:\n        return True\n    elif n % 2 == 0:\n        return False\n    else:\n        return True\n\ndef prime_factors(n):\n    if n == 2:\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n    elif n % 2 == 0:\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n    else:\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    elif n % 2 == 0:\n        return False\n    else:\n        return True\n\ndef divisors(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 2\n    else:\n        return 3\n\ndef is_divisible(n):\n    if n == 1:\n        return True\n    elif n % 2 == 0:\n        return False\n    else:\n        return True\n\ndef prime_factors(n):\n    if n == 2:\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n    elif n % 2 == 0:\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n    else:\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n\ndef count_factors(n):\n    if n == 1:\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n    elif n % 2 == 0:\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n    else:\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n\ndef prime_factors_helper(n):\n    if n == 1:\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n    elif n % 2 == 0:\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n    else:\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n\ndef count_factors_helper(n):\n    if n == 1:\n       "}, "498": {"problem_id": 4498, "answer": "a,b,c = list(map(int,input().split()))\na.sort()\nb.sort()\nc.sort()\nprint('Yes' if a.count(b) == c.count(a) else 'No')\n"}, "499": {"problem_id": 4499, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    s = list(readline())\n    for _ in range(3):\n        s.append(sys.stdin.readline().rstrip())\n    return '\\n'.join(s)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "500": {"problem_id": 4500, "answer": "import math\n\ndef main():\n    A, B = list(map(int, input().split()))\n    x = math.ceil(A / B)\n    print(\"Yes\")\n\ndef __starting_point():\n    main()\n__starting_point()"}, "501": {"problem_id": 4501, "answer": "N,A,x_i = map(int,input().split())\nA = max(N,A)\nprint(N-A)"}, "502": {"problem_id": 4502, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a):\n    if n < 2:\n        return a\n    elif n == 1:\n        return b\n    else:\n        return solve(n-1, a) + b\n\nprint(solve(10, 10))\n"}, "503": {"problem_id": 4503, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    H, N = map(int, readline().split())\n    A = list(map(int, read().split()))\n    print(A)\n    ans = 0\n    for i in range(1, H+1):\n        if A[i] > 0:\n            ans = max(ans, i-A[i])\n        else:\n            ans = max(ans, i-A[i])\n    print(ans)\n\nmain()\n"}, "504": {"problem_id": 4504, "answer": "#!/usr/bin/env python3\n\nimport bisect\n\ndef main():\n    S = input()\n    S = list(map(ord, S))\n    even = []\n    for i in range(len(S)):\n        if S[i] == 'a':\n            even.append(ord(S[i]) - ord('a'))\n        else:\n            even.append(ord(S[i]) - ord('a'))\n    even.sort()\n    print(bisect.bisect_left(even))\n\nmain()\n"}, "505": {"problem_id": 4505, "answer": "# cook your dish here\nimport bisect\ns = input()\na, b, c = 0, 0, 0\nfor i in s[::-1]:\n    if i == 'a':\n        a = a + 1\n    elif i == 'b':\n        b = b + 1\n    elif i == 'c':\n        c = c + 1\n    else:\n        print('No')\n        break\nif a == b == c:\n    print('Yes')\nelse:\n    print('No')"}, "506": {"problem_id": 4506, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nMOD = 998244353\n\n#print(a)\n#print(b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    \n    ans = 0\n    for i in range(n):\n        ans += pow(b[i], MOD-2, MOD)\n        \n    print(ans % MOD)\n\ndef pow(a, MOD, MOD) -> int:\n    return int(pow(a, MOD, MOD) + 1)\n\ndef pow2(a, MOD, MOD) -> int:\n    return pow(a, MOD, MOD) + 1\n\ndef ceil(a, b) -> int:\n    return int(math.pow(a, 2 * b, MOD) + 1)\n\nprint(main())\n"}, "507": {"problem_id": 4507, "answer": "from bisect import bisect_left as b\nfrom heapq import heappop,heappush\nimport math\nimport sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef dfs(i, j):\n    nonlocal cost\n    cost = 0\n    while i >= 0:\n        cost += b[j]\n        j -= i\n        cost %= m\n    return cost\n\ndfs(0, 0)\nprint(len(a))\nfor i in range(1, n + 1):\n    print(a[i - 1])\n"}, "508": {"problem_id": 4508, "answer": "n = int(input())\nedges = []\nfor i in range(n):\n    edges.append(list(map(int, input().split())))\n\ndef dfs(node, parent):\n    if parent not in edges:\n        edges[parent] = []\n        dfs(node, parent)\n        edges[parent].append(node)\n    else:\n        parent.append(node)\n        dfs(node, parent)\n\n#print(edges)\n\n#print(edges[0])\n\n#print(edges[-1])\n\n#print(edges[-2])\n\n#print(edges[-3])\n\n#print(edges[-4])\n\n#print(edges[-5])\n\n#print(edges[-6])\n\n#print(edges[-7])\n\n#print(edges[-8])\n\n#print(edges[-9])\n\n#print(edges[-10])\n\n#print(edges[-11])\n\n#print(edges[-12])\n\n#print(edges[-13])\n\n#print(edges[-14])\n\n#print(edges[-15])\n\n#print(edges[-16])\n\n#print(edges[-17])\n\n#print(edges[-18])\n\n#print(edges[-19])\n\n#print(edges[-20])\n\n#print(edges[-21])\n\n#print(edges[-22])\n\n#print(edges[-23])\n\n#print(edges[-24])\n\n#print(edges[-25])\n\n#print(edges[-26])\n\n#print(edges[-27])\n\n#print(edges[-28])\n\n#print(edges[-29])\n\n#print(edges[-30])\n\n#print(edges[-31])\n\n#print(edges[-32])\n\n#print(edges[-33])\n\n#print(edges[-34])\n\n#print(edges[-35])\n\n#print(edges[-36])\n\n#print(edges[-37])\n\n#print(edges[-38])\n\n#print(edges[-39])\n\n#print(edges[-40])\n\n#print(edges[-41])\n\n#print(edges[-12])\n\n#print(edges[-11])\n\n#print(edges[-10])\n\n#print(edges[-9])\n\n#print(edges[-6])\n\n#print(edges[-5])\n\n#print(edges[-4])\n\n#print(edges[-3])\n\n#print(edges[-2])\n\n#print(edges[-1])\n\n#print(edges[-1-1])\n\n#print(edges[-1-2])\n\n#print(edges[-1-3])\n\n#print(edges[-1-3-1])\n\n#print(edges[-1-4])\n\n#print(edges[-1-4-1])\n\n#print(edges[-1-5])\n\n#print(edges[-1-5-1])\n\n#print(edges[-1-6])\n\n#print(edges[-1-6-1])\n\n#print(edges[-1-7])\n\n#print(edges[-1-7-1])\n\n#print(edges[-1-8])\n\n#print(edges[-1-8-1])\n\n#print(edges[-1-8-2])\n\n#print(edges[-1-8-2-1])\n\n#print(edges[-1-8-2-2])\n\n#print(edges[-1-8-3-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1"}, "509": {"problem_id": 4509, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ndef II(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\ndef LS(): return sys.stdin.readline().split()\ndef S(): return input()\ndef LSV(rows_number): return [LI() for _ in range(rows_number)]\ndef SLL(rows_number): return [LI() for _ in range(rows_number)]\ndef SLLV(rows_number): return [LI() for _ in range(rows_number)]\n\nt = II()\nfor _ in range(t):\n    n, k = MI()\n    if n % 1000000000 == 0:\n        print(k)\n    else:\n        print(k + 1)\n"}, "510": {"problem_id": 4510, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nids = [int(i) for i in input().split()]\n\ndef dfs(i):\n    if i == len(ids):\n        return 0\n    id_cnt = 0\n    for j in range(len(ids)):\n        if id_cnt == 0:\n            continue\n        id_cnt += 1\n        if j == len(ids) - 1:\n            id_cnt -= 1\n        else:\n            id_cnt += 1\n            id_cnt %= n\n            id_cnt //= n\n            id_cnt //= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n            id_cnt %= n\n "}, "511": {"problem_id": 4511, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nA = [int(i) for i in input().split()]\n\nans = 0\n\nfor i in range(n):\n    c, d = map(int, input().split())\n    A[c] += 1\n    ans += max(0, d - c) * 10 ** d\n\nprint(ans)\n"}, "512": {"problem_id": 4512, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    S = input().rstrip()\n    q = int(input())\n    for _ in range(q):\n        cmd, l = [int(x) for x in input().split()]\n        print(len(S[l:l+1]))\n        if cmd[0] == 'pos':\n            print(2)\n        elif cmd[0] == 'c':\n            print(1)\n        else:\n            print(3)\n            \ndef __starting_point():\n    main()\n\n__starting_point()"}, "513": {"problem_id": 4513, "answer": "for _ in range(int(input())):\n    n = int(input())\n    print(n)\n"}, "514": {"problem_id": 4514, "answer": ""}, "515": {"problem_id": 4515, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    a, b, c, d = map(int, input().split())\n    if a + b + c == n:\n        print(\"YES\")\n    else:\n        print(\"NO\")"}, "516": {"problem_id": 4516, "answer": ""}, "517": {"problem_id": 4517, "answer": ""}, "518": {"problem_id": 4518, "answer": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == n-1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "519": {"problem_id": 4519, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    if k == 0:\n        print('0')\n        continue\n    ans = []\n    for i in range(n):\n        if s[i] == '1':\n            ans.append(i)\n    ans.sort(reverse=True)\n    ans.reverse()\n    print(' '.join(map(str, ans)))"}, "520": {"problem_id": 4520, "answer": "from bisect import bisect_left as bl\nfrom heapq import heappush,heappop\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**9)\nMOD = 10**9+7\nINF = 10**18\neps = 10**-7\nmod = 998244353\ndef LI(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef I(): return int(input())\ndef F(): return float(input())\ndef S(): return input().rstrip('\\n')\ndef LS_N(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef S_N(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef L(a,b): return [x for x in a if b!=x]\ndef L_N(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef S_N(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef S_N_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef L_N_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef S_N_(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# sys.setrecursionlimit(10**9)\n# MOD = inf\n# INF = -INF\n# MOD = 998244353\n# MOD = 10**9+7\n# def LI(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# def LF(): return [float(x) for x in sys.stdin.readline().split()]\n# def LS(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# def I(): return I()\n# def F(): return F()\n# def S(): return S()\n# def L(a,b): return [x for x in a if b!=x]\n# def S_N(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# def S_N_(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# def L_N(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# def S_N(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# def S_N_(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# def LF(): return [float(x) for x in sys.stdin.readline().split()]\n# def I(): return I()\n# def F(): return I()\n# def S(): return S()\n# def L(): return L()\n# def S_N(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# def L_N(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# def S_N(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# def LC(): return LC()('',1,mod)\n# def LC_(): return LC()\n# def LF(): return LC()\n# def S(): return S()\n# def L(): return L()\n# def S_N(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# def S_N_(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# def S(): return [int(x)-1 for x in sys.stdin.readline().split()]\n# def S(): return [int(x)-1 for"}, "521": {"problem_id": 4521, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [int(i) for i in input().split()]\n# d = [0]*n\n# d.sort(reverse=True)\n\n# for i in range(n):\n#     if x[i] == 0:\n#         d[i] = min(d[i], d[i-1])\n\n#     else:\n#         d[i] = min(d[i], d[i+1])\n\n#     if d[i] > 0:\n#         d[i] = min(d[i], d[i+1])\n\n#     if d[i] > 0:\n#         d[i] = min(d[i], d[i+1])\n\n#     if d[i] == 0:\n#         d[i] = 0\n\n#     if d[i] == 0:\n#         d[i] = 1\n\n#     if d[i] == 1:\n#         d[i] = 2\n\n#     if d[i] == 1:\n#         d[i] = 3\n\n#     if d[i] == 2:\n#         d[i] = 4\n\n#     if d[i] == 3:\n#         d[i] = 6\n\n#     if d[i] == 4:\n#         d[i] = 8\n\n#     if d[i] == 6:\n#         d[i] = 10\n\n#     if d[i] == 8:\n#         d[i] = 12\n\n#     if d[i] == 10:\n#         d[i] = 16\n\n#     print(d[n])\n\n#     print(d[n-1])\n\n#     print(d[n-2])\n\n#     print(d[n-3])\n\n#     print(d[n-4])\n\n#     print(d[n-5])\n\n#     print(d[n-6])\n\n#     print(d[n-7])\n\n#     print(d[n-8])\n\n#     print(d[n-9])\n\n#     print(d[n-10])\n\n#     print(d[n-11])\n\n#     print(d[n-12])\n\n#     print(d[n-13])\n\n#     print(d[n-14])\n\n#     print(d[n-15])\n\n#     print(d[n-16])\n\n#     print(d[n-17])\n\n#     print(d[n-18])\n\n#     print(d[n-19])\n\n#     print(d[n-20])\n\n#     print(d[n-21])\n\n#     print(d[n-22])\n\n#     print(d[n-23])\n\n#     print(d[n-24])\n\n#     print(d[n-25])\n\n#     print(d[n-26])\n\n#     print(d[n-27])\n\n#     print(d[n-28])\n\n#     print(d[n-29])\n\n#     print(d[n-30])\n\n#     print("}, "522": {"problem_id": 4522, "answer": "from heapq import *\nfrom collections import deque\nimport sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nq = list(map(int, input().split()))\n\ndef dijkstra(node, q):\n    if node:\n        heap = deque(q)\n        while heap:\n            node = heap.popleft()\n            if node[0] + node[1] > q[0]:\n                return False\n        return True\n    else:\n        return True\n\ndef dijkstra(node, q):\n    if node:\n        heap = deque(q)\n        while heap:\n            node = heap.popleft()\n            if node[0] + node[1] > q[0]:\n                return False\n        return True\n    else:\n        return False\n\ndef main():\n    n, m = map(int, input().split())\n    q = list(map(int, input().split()))\n    d = [[] for _ in range(n)]\n    for i in range(n):\n        q.append(list(map(dijkstra, q)))\n    \n    d[0].append(1)\n    d[1].append(1)\n    d[2].append(1)\n    d[3].append(1)\n    d[4].append(1)\n    d[5].append(1)\n    d[6].append(1)\n    d[7].append(1)\n    d[8].append(1)\n    d[9].append(1)\n    d[10].append(1)\n    d[11].append(1)\n    d[12].append(1)\n    d[13].append(1)\n    d[14].append(1)\n    d[15].append(1)\n    d[16].append(1)\n    d[17].append(1)\n    d[18].append(1)\n    d[19].append(1)\n    d[20].append(1)\n    d[21].append(1)\n    d[22].append(1)\n    d[23].append(1)\n    d[24].append(1)\n    d[25].append(1)\n    d[26].append(1)\n    d[27].append(1)\n    d[28].append(1)\n    d[28].append(1)\n    d[29].append(1)\n    d[30].append(1)\n    d[31].append(1)\n    d[32].append(1)\n    d[33].append(1)\n    d[34].append(1)\n    d[35].append(1)\n    d[36].append(1)\n    d[37].append(1)\n    d[38].append(1)\n    d[39].append(1)\n    d[40].append(1)\n    d[41].append(1)\n    d[42].append(1)\n    d[43].append(1)\n    d[44].append(1)\n    d[45].append(1)\n    d[46].append(1)\n    d[47].append(1)\n    d[48].append(1)\n    d[49].append"}, "523": {"problem_id": 4523, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print('YES' if a[0] == 1 else 'NO')"}, "524": {"problem_id": 4524, "answer": "# cook your dish here\nn, m = list(map(int, input().split()))\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n\ndef get_bit_value(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, math.factorial(x))\n\ndef get_n_of_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_m_of_one_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_d_of_one_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_l_of_one_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_r_of_one_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_t_of_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_x_of_one_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_y_of_one_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_z_of_one_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_x_of_two_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_y_of_two_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_z_of_two_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_x_of_three_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_y_of_three_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_z_of_three_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_x_of_four_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_y_of_four_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_x_of_five_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_y_of_five_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_z_of_five_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_x_of_six_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_y_of_six_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_z_of_six_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_x_of_seven_zero(x):\n    return 0 if x == 0 else (x >> 1) * pow(2, x)\n\ndef get_y_of_seven_zero(x):\n    return 0 if x =="}, "525": {"problem_id": 4525, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print('NO')\n    print('YES' if sum(l) % 2 else 'NO')"}, "526": {"problem_id": 4526, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(sum(a[::-1] for a in a if len(a) == 0))\n"}, "527": {"problem_id": 4527, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = [[0 for _ in range(2)] for _ in range(n)]\n    for i in range(n):\n        l.append(l[i][0] - l[i][1])\n    max_size = max(l[0][0], l[0][1])\n    for i in range(1, n):\n        for j in range(1, n):\n            if l[i-1][j] > max_size:\n                max_size = l[i-1][j]\n                break\n    print(max_size)\n"}, "528": {"problem_id": 4528, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n    h, m = list(map(int, input().split()))\n    hh = 24 * h\n    mh = 24 * m\n    print(hh + mh)\n"}, "529": {"problem_id": 4529, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    S = input().strip()\n    L, R, U, D = [], []\n    for i in S:\n        if i == 'L':\n            L.append(i)\n        elif i == 'R':\n            R.append(i)\n        else:\n            U.append(i)\n            \n    ans = []\n    for i in range(n):\n        if L[i] == 'U':\n            ans.append(i)\n        elif R[i] == 'R':\n            ans.append(i)\n        else:\n            ans.append(i)\n            \n    print(*ans)\n            \n"}, "530": {"problem_id": 4530, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(max(a[0], a[-1]))\n"}, "531": {"problem_id": 4531, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\ndp = [0]*(n+1)\ndp[0] = a[0]\nfor i in range(1, n+1):\n    dp[i] = min(dp[i-1], a[i])\n\ndef dfs(x):\n    if x == 0:\n        return 0\n    else:\n        x = dp[x-1]\n        if x == 0:\n            return 0\n        else:\n            return 1\n\nans = 0\nfor i in range(n):\n    ans += dfs(i)\nprint(ans)"}, "532": {"problem_id": 4532, "answer": "for _ in range(int(input())):\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    ans = min(n,k)\n    print(ans)"}, "533": {"problem_id": 4533, "answer": "class Solution:\n    def findContentChildren(self, g: List[int], s: List[int]) -> int:\n        if len(g) < 2:\n            return 0\n        \n        children = []\n        for i in range(len(g)):\n            children.append(self.helper(g[i], i))\n        \n        return max(children)\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    "}, "534": {"problem_id": 4534, "answer": "class Solution:\n     def getRow(self, row_index):\n         \"\"\"\n         :type row_index: int\n         :rtype: List[int]\n         \"\"\"\n         if row_index not in [0, 1]:\n             return []\n         else:\n             return self.getRow(row_index + 1)\n         \n     def getRow(self, row_index):\n         \"\"\"\n         :type row_index: int\n         :rtype: List[int]\n         \"\"\"\n         if row_index not in [0, 1]:\n             return []\n         else:\n             return self.getRow(row_index + 1)\n         \n     def getRow(self, row_index):\n         \"\"\"\n         :type row_index: int\n         :rtype: List[int]\n         \"\"\"\n         if row_index not in [0, 1]:\n             return []\n         else:\n             return self.getRow(row_index + 1)\n         \n     def getRow(self, row_index):\n         \"\"\"\n         :type row_index: int\n         :rtype: List[int]\n         \"\"\"\n         if row_index not in [0, 1]:\n             return []\n         else:\n             return self.getRow(row_index + 1)\n         \n     def getRow(self, row_index):\n         \"\"\"\n         :type row_index: int\n         :rtype: List[int]\n         \"\"\"\n         if row_index not in [0, 1]:\n             return []\n         else:\n             return self.getRow(row_index + 1)\n         \n     def getRow(self, row_index):\n         \"\"\"\n         :type row_index: int\n         :rtype: List[int]\n         \"\"\"\n         if row_index not in [0, 1]:\n             return []\n         else:\n             return self.getRow(row_index + 1)\n         \n     def getRow(self, row_index):\n         \"\"\"\n         :type row_index: int\n         :rtype: List[int]\n         \"\"\"\n         if row_index not in [0, 1]:\n             return []\n         else:\n            "}, "535": {"problem_id": 4535, "answer": "class Solution:\n    def hammingWeight(self, n: int) -> int:\n        if n == 1: return 0\n        weights = [0]*(n+1)\n        for i in range(2, int(n**0.5)+1):\n            weights[i] = weights[i-1] + weights[i-2]\n            \n        weights.reverse()\n        \n        # print(weights)\n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights)\n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights)\n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights)\n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights)\n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n        # print(weights[0])\n        # print(weights[1])\n        # print(weights[2])\n        \n    "}, "536": {"problem_id": 4536, "answer": "class Solution:\n     def plusOne(self, digits):\n         \"\"\"\n         :type digits: List[int]\n         :rtype: List[int]\n         \"\"\"\n         if len(digits) < 2:\n             return []\n         l = len(digits)\n         for i in range(l-1):\n             if digits[i] % digits[i+1] == 0:\n                 return [i] + [digits[i]]\n         return []"}, "537": {"problem_id": 4537, "answer": "import itertools\n\ndef main():\n    A,B=list(itertools.accumulate(map(int,sys.stdin.readline().split())))\n    print(max(A,B))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "538": {"problem_id": 4538, "answer": "N,D = map(int,input().split())\nX = list(map(int,input().split()))\nY = list(map(int,input().split()))\n\ndef distance(x1,y1):\n    return abs(x1-y1) + abs(x1+y1)\n\ndef solve(X,Y):\n    X.sort()\n    Y.sort()\n    d = 0\n    for i in range(len(X)):\n        d += abs(X[i]-X[i-1])\n    return d\n\nprint(solve(X,Y))"}, "539": {"problem_id": 4539, "answer": "import sys\nsys.setrecursionlimit(10**7)\nfrom collections import defaultdict\ndef f(n):\n    return int(n**0.5)\ndef g(n):\n    return int(n**0.5)\ndef h(n):\n    return int(n**0.5)\ndef l(n):\n    return int(n**0.5)\ndef r(n):\n    return int(n**0.5)\ndef s(n):\n    return int(n**0.5)\ndef t(n):\n    return int(n**0.5)\n\nn = int(sys.stdin.readline())\nprint(f(n))\n"}, "540": {"problem_id": 4540, "answer": "import sys\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\n\ndef dist(x, y):\n    return x[0] - y[0]\n\ndef main():\n    N = int(readline())\n    A = list(map(int, readline().split()))\n    d = dist(N, A)\n    print(d)\n\nmain()\n"}, "541": {"problem_id": 4541, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    # Read input and return output\n    # sys.stdout = open('input.txt', 'r')\n    # sys.stdin = open('input.txt', 'w')\n    # sys.stdin.readline = readline\n    # readline = readline().rstrip('a')\n    # reader = [(readline, i) for i in range(1, len(readline) + 1)]\n    # reader = collections.defaultdict(lambda: dict.fromkeys(reader(sys.stdin.readline())) )\n    # reader = collections.deque()\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0, 0))\n    # reader.append((0,"}, "542": {"problem_id": 4542, "answer": "from collections import deque\n\ndef solve():\n    s = input()\n    n = len(s)\n    dp = deque([])\n    for i in range(n):\n        if s[i] == s[-1-i]:\n            dp.append(s[-1-i])\n        else:\n            dp.append(s[-1-i])\n            \n    visited = set()\n    visited.add(s[n-1-1])\n    \n    while len(dp) > 0:\n        new = deque()\n        for i in range(n):\n            if visited.intersection(new) == visited:\n                continue\n            visited.add(new)\n            new.append(s[n-1-1])\n            dp.append(new)\n            \n        if len(visited) == n:\n            print(n-1-1)\n            return\n        \n        for i in range(n-1):\n            if i not in visited:\n                dp.append(i)\n                visited.add(i)\n                \n        if len(visited) == n:\n            print(n-1-1)\n            return\n        \n        for i in range(n-1):\n            if i not in visited:\n                dp.append(i)\n                visited.add(i)\n                \n        if len(visited) == n:\n            print(n-1-1)\n            return\n        \n        for i in range(n-1):\n            if i not in visited:\n                dp.append(i)\n                visited.add(i)\n                \n        if len(visited) == n:\n            print(n-1-1)\n            return\n        \n        for i in range(n-1):\n            if i not in visited:\n                dp.append(i)\n                visited.add(i)\n                \n        if len(visited) == n:\n            print(n-1-1)\n            return\n        \n        \n      "}, "543": {"problem_id": 4543, "answer": "a = int(input())\nprint('Yes' if a%2 else 'No')\nprint('Yes' if a%2+b%2+a%2+b%2+a%2+b%2+1<=a%2+b%2+1<=a%2+b%2+1<=a%2+b)"}, "544": {"problem_id": 4544, "answer": "import bisect\nn = int(input())\na = list(map(int, input().split()))\nprint(n-a.count(1))"}, "545": {"problem_id": 4545, "answer": "#!/usr/bin/env python\n\nimport sys\nsys.setrecursionlimit(10**5)\nfrom collections import Counter\ndef main():\n    N = int(sys.stdin.readline())\n    A = list(map(int,sys.stdin.readline().split()))\n    print((N-A-1)*(N-A-2))\ndef __starting_point():\n    main()\n__starting_point()"}, "546": {"problem_id": 4546, "answer": "import sys\nreadline = sys.stdin.readline\nINF = 10**18\n\ndef main():\n    a, b, c = map(int, readline().split())\n    a, b, c = map(int, readline().split())\n    print((a-b-c) if c-a>=0 else (b-a-c) if c-b>=0 else (a-b-c) for a,b in zip(a, b))"}, "547": {"problem_id": 4547, "answer": "n=int(input())\nprint(\"Yes\")\nif(n>99):\n    print(\"No\")\nelse:\n    print(\"No\")"}, "548": {"problem_id": 4548, "answer": "import sys\ninput = sys.stdin.readline\n\nN, M = list(map(int, input().split()))\nX = list(map(int, input().split()))\n\ndef main():\n    X = [X[0]]\n    for i in range(N):\n        X.append(X[i])\n    X = sorted(X)\n    ans = 0\n    for i in range(N):\n        ans += X[i]\n        if ans >= M:\n            break\n    print(ans)\n\nmain()\n"}, "549": {"problem_id": 4549, "answer": "import sys\ninput = sys.stdin.readline\n\nH, W = map(int, input().split())\n\ns = []\nfor i in range(H):\n s.append(input())\n\ns.sort(key=lambda x: x[0])\n\n#print(s)\n\n#print(s)\n\nif len(s) == W:\n print('Yes')\n else:\n print('No')\n"}, "550": {"problem_id": 4550, "answer": "# -*- coding: utf-8 -*-\nimport sys\nreadline = sys.stdin.readline\n\ndef solve():\n    a, b, c = map(int, readline().split())\n    if a == b == c:\n        print(\"Yes\")\n    elif (a + b) % 2 == 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")\nsolve()\n"}, "551": {"problem_id": 4551, "answer": "#!/usr/bin/env python3\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\nINF = 10**18\nMOD = 10**9 + 7\n\ndef main():\n    A, B, C, D = map(int, readline().split())\n    A += B * (A - 1) // 2\n    B += C * (B - 1) // 2\n    C += D * (C - 1) // 2\n    print(INF)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "552": {"problem_id": 4552, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nF = list(map(int, input().split()))\n\n# \u89e3\u70b9\u65b9\u6cd5\ndef f(x):\n    return x*(x+1)//2\n\n# \u5165\u52a0\u65b9\u5f0f\ndef l(x, y):\n    return (x+y)//5\n\n# \u89e3\u70b9\u8868\u793a\u6bcf\u4e00\u4e2a\u65b9\u6cd5\uff0c\u540c\u65f6\u68c0\u6d4b\u5206\u522b\uff0c\u53ef\u4ee5\u540e\u7acb\u5373\u524d\u9664\u4e24\u4e2a\u65b9\u6cd5\uff0c\u9700\u8981\u4e00\u4e2a\u7b80\u5355\u6765\uff0c\u5426\u5219\u4f1a\u8ba9\u4ec0\u4e48\u8fd9\u4e2a\u7b80\u5355\u90fd\u80fd\u5931\u8c03\uff0c\u7136\u540e\u518d\u7528\u4e8c\u4e2a\u65b9\u6cd5\u91cc\u90a3\u4e2a\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5229\u7528\u4e8c\u4e2a\u65b9\u6cd5\u91cc\u9664\u9057\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\u6216\u8282\ufffd"}, "553": {"problem_id": 4553, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    A,B=map(int,input().split())\n    S=list(map(int,input().split()))\n    print(S)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "554": {"problem_id": 4554, "answer": "W,a,b=map(int,input().split())\nl=list(map(int,input().split()))\nl.sort()\nd=l[0]\nfor i in range(1,len(l)):\n    if l[i]>=b+W:\n        d=min(d,l[i])\n        break\nprint(d)"}, "555": {"problem_id": 4555, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    A, B = list(map(int, readline().split()))\n    print(*A, sep='\\n')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "556": {"problem_id": 4556, "answer": "import sys\ninput = sys.stdin.readline\n \nclass CodeforcesTask:\n    def __init__(self, s):\n        self.s = s\n        self.c = 0\n        self.c_len = len(s)\n        \n    def at_coder(self, s):\n        if self.c == 0:\n            return s\n        elif self.c == self.c_len:\n            return s.translate(str.maketrans('ABC', self.s))\n        else:\n            return self.c_len + self.c\n        \n    def trans(self, s):\n        return ''.join(map(str, s))\n    \n    def trans_str(self, s):\n        return ''.join(map(str, s))\n    \n    def __str__(self):\n        return '{:0>{}}'.format(self.c)\n    \n    def __strn__(self):\n        return '\\n'.join(map(str, self.c_len))\n    \n    def __strr__(self):\n        return '\\r'.join(map(str, self.c_len))\n    \n    def __strrn__(self):\n        return '\\n'.join(map(str, self.c_len))\n    \n    def __repr__(self):\n        return repr(self.s)\n    \n    def __eq__(self, other):\n        return self.c == other.c and self.c_len == other.c_len\n    \n    def __strin__(self):\n        return self.s.translate(str.maketrans('ABC', self.s))\n    \n    def __strn__eq__(self, other):\n        return self.s.translate(str.maketrans('ABC', self.s))\n    \n    def __strnstr__(self):\n        return self.s.translate(str.maketrans('ABC', self.s))\n    \n    def __strnstrn__(self):\n        return self.s.translate(str.maketrans('ABC', self.s))\n    \n    def __repr(self):\n        return repr(self.s)\n    \n    def __eq__eq(self, other):\n        return self.c == other.c and self.c_len == other.c_len\n    \n    def __strnstrn__eq(self, other):\n        return self.s.translate(str.maketrans('ABC', self.s))\n    \n    def __strnstrnstrn__eq(self, other):\n        return self.s.translate(str.maketrans('ABC', self.s))\n    \n    def __sub__(self, other):\n        other.c_len = len(other.c)\n        self.c = 0\n        self.c_len = 1\n        for i in range(1, len(self.s) + 1):\n            if self.s[i - 1] == other.s[i"}, "557": {"problem_id": 4557, "answer": "A = int(input())\nB = int(input())\n\nfor i in range(X):\n    if A + B >= 200:\n        print(\"NO\")\n    else:\n        print(\"YES\")"}, "558": {"problem_id": 4558, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    x = int(readline())\n    max_so_far = x**0.5\n    while x > max_so_far:\n        x = max_so_far - x\n        print(x)\n        max_so_far = x**0.5\n    return len(sys.argv[1:])\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "559": {"problem_id": 4559, "answer": "# -*- coding: utf-8 -*-\n\nimport math\n\nN = int(input())\nA = [int(x) for x in input().split()]\n\nprint(int(math.log(A[0], 2)))"}, "560": {"problem_id": 4560, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\n\nprint('Yes' if A[0]==A[1] else 'No')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print('A')\n\n#print('N')\n\n#print"}, "561": {"problem_id": 4561, "answer": "import math\ndef best_by(d):\n    x = d.index(max(d))\n    if x >= d:\n        return False\n    else:\n        return True\n\ndef __starting_point():\n    X, A, B = list(map(int, input().split()))\n    print(best_by(X))\n__starting_point()"}, "562": {"problem_id": 4562, "answer": "import math\ndef main():\n    n = int(input())\n    if n%2 == 0:\n        print((math.floor(n/2)))\n    else:\n        print((math.floor(n/2)))\nmain()"}, "563": {"problem_id": 4563, "answer": "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict,deque\nfrom bisect import bisect_left as bl,bisect_right as br\nfrom heapq import merge,heappush,heapify\nfrom functools import reduce,cmp_to_key\nfrom itertools import combinations_with_replacement as comb_with_replacement,groupby\nfrom operator import add,sub,mul,flo,insort,rsplit,insort_with_ranges\nfrom functools import reduce,cmp_to_key,accumulate,lru_cache\nfrom fractions import gcd,sqrt\nfrom functools import reduce,cmp_to_key,accumulate,lru_cache\nfrom math import factorial,gcd,log,factorials\nfrom bisect import bisect_left as bl,br,br_left\nfrom heapq import heapify, heappop, heappush, heappushpop, heappushpush, heappushpushpop\nfrom re import compile,finditer\nfrom collections import deque,Counter\nfrom itertools import permutations,combinations,permutations_with_replacement\nfrom math import factorial,gcd,log,factorials\nfrom functools import reduce,cmp_to_key,accumulate,lru_cache,pow\nfrom operator import mul,mul,mulmul\nfrom bisect import bisect_right as br,br_right\nfrom fractions import gcd,sqrt\nfrom math import factorial,gcd,log,factorials\nfrom math import mod,gcd2,log2,factorials\nfrom decimal import floor,sqrt,fraction,ceil\nfrom statistics import mode,statistics\nfrom time import perf_counter\nmod = 10**9+7\nmod2 = 10**9+7\nmod = 10**998244353\ndef main():\n    N = int(input())\n    T = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    A.sort()\n    for i in range(N):\n        A[i] = sum(T[i] - A[i-1] for i in range(N))\n        \n    print(sum(A))\ndef __starting_point():\n    main()\n\n__starting_point()"}, "564": {"problem_id": 4564, "answer": "import sys\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\ndef input(): return sys.stdin.readline().rstrip()\ndef readline(): return list(map(int, readline().split()))\ninput()\nprint('Yes') if input() == readline() else print('No')\n"}, "565": {"problem_id": 4565, "answer": "import bisect\nN = int(input())\nS = list(map(int, input().split()))\nfor i in range(N):\n    S.insert(0, i)\nprint(len(S))"}, "566": {"problem_id": 4566, "answer": "N,M=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nfor i in range(M):\n    if a[i]!=b[i]:\n        a[i]+=1\n        print(a[i]*(N-1),end=\" \")\n        break\n    else:\n        a[i]+=1\n        print(a[i]*(N-1),end=\" \")\n        break\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n     "}, "567": {"problem_id": 4567, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list(map(int, input().split()))\nprint(max(s))"}, "568": {"problem_id": 4568, "answer": "import sys\ninput = sys.stdin.readline\nN = int(input())\nS = list(map(int, input().split()))\nX = [list(map(int, input().split())) for i in range(N)]\nY = [list(map(int, input().split())) for i in range(N)]\n\n# X = [a, b]\n# Y = [a, b]\n# for i in range(N):\n#     X.append(a)\n#     Y.append(b)\n# for i in range(N):\n#        if i == 0:\n#             break\n#        elif i == N-1:\n#             break\n#        else:\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#             Y.pop()\n#             X.pop()\n#  "}, "569": {"problem_id": 4569, "answer": "T = int(input())\nfor i in range(T):\n S = input()\n if (S[0] == \"T\" and S[1] == \"C\") or (S[0] == \"T\" and S[1] == \"C\") or (S[0] == \"T\" and S[1] == \"C\") or (S[0] == \"T\" and S[1] == \"C\"):\n  print(\"Suny\")\n else:\n  print(\"Rainy\")\n"}, "570": {"problem_id": 4570, "answer": "n, a, b = map(int, input().split())\nif n == 1:\n print(a)\nelif n == 2:\n print(b)\nelse:\n x = a*b\n print(x)"}, "571": {"problem_id": 4571, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\n\n#print(n)\na = [1] + list(map(int, input().split()))\n\n#print(a)\nfor i in range(m):\n    a[i] += 1\n\n#print(a)\nans = 0\n\ndef check(i, j):\n    if i == 0:\n        return True\n    elif j == 0:\n        return False\n    else:\n        ans += 1/2\n        return True\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + check(i, n - 1))\n"}, "572": {"problem_id": 4572, "answer": "S = list(map(str, input().split()))\nn = len(S)\nif n == 1:\n    print(None)\nelif n > 1:\n    print(n-1)\nelse:\n    print(n//n)\n"}, "573": {"problem_id": 4573, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nN = int(input())\nX = list(map(int, input().split()))\n\ndef lis(n):\n    return [x for x in X if x > n]\n\ndef main():\n    N = int(input())\n    X = list(map(int, input().split()))\n    B = [0]*N\n    for i in range(N-1, -1, -1):\n        B[i] = lis(X[i])\n    print((B[N]))\n\nmain()\n"}, "574": {"problem_id": 4574, "answer": "n=int(input())\na=list(map(int,input().split()))\nif n==1:\n    print(0)\n    return\nfor i in range(n):\n    a.insert(0,i)\n    a.insert(0,i+1)\n    a.insert(0,i+2)\n    a.insert(0,i+3)\n    a.insert(0,i+4)\n    a.insert(0,i+5)\n    a.insert(0,i+6)\n    a.insert(0,i+7)\n    a.insert(0,i+8)\n    a.insert(0,i+9)\n    a.insert(0,i+10)\n    a.insert(0,i+11)\n    a.insert(0,i+12)\n    a.insert(0,i+13)\n    a.insert(0,i+14)\n    a.insert(0,i+15)\n    a.insert(0,i+16)\n    a.insert(0,i+17)\n    a.insert(0,i+18)\n    a.insert(0,i+19)\n    a.insert(0,i+20)\n    a.insert(0,i+21)\n    a.insert(0,i+22)\n    a.insert(0,i+23)\n    a.insert(0,i+24)\n    a.insert(0,i+25)\n    a.insert(0,i+26)\n    a.insert(0,i+27)\n    a.insert(0,i+28)\n    a.insert(0,i+29)\n    a.insert(0,i+30)\n    a.insert(0,i+31)\n    a.insert(0,i+32)\n    a.insert(0,i+33)\n    a.insert(0,i+34)\n    a.insert(0,i+35)\n    a.insert(0,i+36)\n    a.insert(0,i+37)\n    a.insert(0,i+38)\n    a.insert(0,i+39)\n    a.insert(0,i+40)\n    a.insert(0,i+41)\n    a.insert(0,i+42)\n    a.insert(0,i+43)\n    a.insert(0,i+44)\n    a.insert(0,i+45)\n    a.insert(0,i+46)\n    a.insert(0,i+47)\n    a.insert(0,i+48)\n    a.insert(0,i+49)\n    a.insert(0,i+50)\n    a.insert(0,i+51)\n    a.insert(0,i+52)\n    a.insert(0,i+53)\n    a.insert(0,i+54)\n    a.insert(0,i+55)\n    a.insert(0,i+56)\n    a.insert(0,i+57)\n    a.insert(0,i+58)\n    a.insert(0,i+59)\n    a.insert(0,i+60)\n    a.insert(0,i+61)\n    a.insert(0,i+62)\n    a.insert(0,i+63)\n    a.insert(0,i+64)\n    a.insert(0,i+65)\n    a.insert(0,i+66)\n    a.insert(0,i+68)\n    a.insert(0,i+69)\n    a.insert(0,i+70"}, "575": {"problem_id": 4575, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nD, X = map(int, input().split())\nA = list(map(int, input().split()))\n\n# \u5165\u529b\u5230\u6700\u4f4d\u7684\u6570\u636e\u70b9\u8d1f\u6570\u7ec4\ncnt = 0\nfor i in range(D):\n    cnt += A[i]\n    if cnt == X:\n        break\n\nprint(cnt)"}, "576": {"problem_id": 4576, "answer": "from fractions import gcd\nn = int(input())\nA = [x for x in input().split()]\nB = [x for x in input().split()]\nC = [x for x in input().split()]\nX = 1000000\n\ndef main():\n    A = [x for x in input().split()]\n    B = [x for x in input().split()]\n    C = [x for x in input().split()]\n    X = 1000000\n    for i in range(X):\n        if A[i] > B[i]:\n            A[i] = B[i]\n        elif A[i] < X[i]:\n            B[i] = X[i]\n        else:\n            C[i] = X[i]\n    print(len(A))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "577": {"problem_id": 4577, "answer": "import sys\nreadline = sys.stdin.readline\ndef main():\n    a, b, c = list(map(int, readline().split()))\n    if a == b == c:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "578": {"problem_id": 4578, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, x = list(map(int, input().split()))\n    m = as_int(x)\n    print(max(m, x))\n\nmain()\n"}, "579": {"problem_id": 4579, "answer": "#!/usr/bin/env python\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    N = int(readline())\n    s = list(map(str, list(map(ord, s)))[::-1])\n    print(len(set(map(ord, s))))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "580": {"problem_id": 4580, "answer": "import sys\nsys.setrecursionlimit(10**6)\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().split()\ndef S(): return list(map(int,sys.stdin.readline().split()))\ndef L(): return list(sys.stdin.readline())\ndef SQRS(): return int(input())\ndef L1(): return list(map(int,sys.stdin.readline().split()))\ndef S():\n    a,b = I()\n    if a>b:\n        print(b)\n    elif b>a:\n        print(a)\n    else:\n        print(a-b)\ndef main():\n    N = I()\n    a = [1]*N\n    b = [1]*N\n    for i in range(1,N):\n        a[i] = a[i-1]\n    for i in range(N-2,-1,-1):\n        b[i] = b[i+1]\n    for i in range(N-1,-1,-1):\n        a[i] = a[i+1]\n    for i in range(N):\n        a[i] = a[i+1]\n    for i in range(N):\n        print(a[i],end=\" \")\n    print()\nmain()\n"}, "581": {"problem_id": 4581, "answer": "import sys\nread = sys.stdin.readline\nreadlines = sys.stdin.readlines\n\ndef main():\n    S = read()\n    p = int(S)\n    print(p)\n\nmain()\n"}, "582": {"problem_id": 4582, "answer": "from sys import stdin,stdout\ninput = stdin.readline\ndef f():\n return input().rstrip()\ndef g():\n return input().rstrip()\ndef l():\n return input().rstrip().split(\" \")\n\nN = int(input())\na = list(map(int, input().split(\" \")))\nb = list(map(int, input().split(\" \")))\n\nfor i in range(N):\n print(a[i] + b[i] + \" is \" + str(i))\n"}, "583": {"problem_id": 4583, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nclass Solution:\n    def formula(self, A, B, C, D):\n        if A == 0 or B == 0 or C == 0 or D == 0:\n            return '+'\n        elif A == 0 or B == 0 or C == 0 or D == 0:\n            return 'op1'\n        elif A == 0 or B == 0 or C == 0 or D == 0:\n            return 'op1'\n        elif A == 0 or B == 0 or C == 0 or D == 0:\n            return 'op1'\n        elif A == 0 or B == 0 or C == 0 or D == 0:\n            return 'op1'\n        elif A == 0 or B == 0 or C == 0 or D == 0:\n            return 'op1'\n        elif A == 0 or B == 0 or C == 0 or D == 0:\n            return 'op1'\n        elif D == 0 or A == 0 or B == 0 or C == 0 or D == 0:\n            return 'op1'\n        else:\n            return 'op1'\n        \n"}, "584": {"problem_id": 4584, "answer": "from sys import stdin\ninput = stdin.readline\nN = int(input())\nA = list(map(int, input().split()))\nfor i in range(N):\n    A.append(list(A[i]))\nprint(len(A))"}, "585": {"problem_id": 4585, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    x = int(readline())\n    ans = 0\n    for i in range(x):\n        ans += 1\n        if i == x:\n            ans += 1\n        elif i < x:\n            ans += x-i\n        else:\n            ans += x+i\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "586": {"problem_id": 4586, "answer": "import sys\nsys.setrecursionlimit(10**7)\ndef LI(): return list(map(int, sys.stdin.readline().rstrip(\"\\n\").split()))\ndef LI2(): return list(map(int, sys.stdin.readline().rstrip(\"\\n\").split()))\ndef LI3(): return [int(x) for x in sys.stdin.readline().rstrip(\"\\n\")]\ndef LI4(): return [int(x) for x in sys.stdin.readline().rstrip(\"\\n\")]\ndef LIR(N): return [LI() for i in range(N)]\ndef LIR1(N): return [LI() for i in range(N)]\ndef LTOS(l, s): return [i for i in l if i not in s]\n\ndef main():\n    N = LI()\n    print(N)\n    print(str(N))\n    print(str(N+1))\n    print(str(N+3))\n    print(str(N+4))\n    print(str(N+7))\n    print(str(N+8))\n    print(str(N+9))\n    print(str(N+10))\n    print(str(N+11))\n    print(str(N+12))\n    print(str(N+13))\n    print(str(N+14))\n    print(str(N+15))\n    print(str(N+16))\n    print(str(N+17))\n    print(str(N+18))\n    print(str(N+19))\n    print(str(N+20))\n    print(str(N+21))\n    print(str(N+22))\n    print(str(N+23))\n    print(str(N+24))\n    print(str(N+25))\n    print(str(N+26))\n    print(str(N+27))\n    print(str(N+28))\n    print(str(N+29))\n    print(str(N+30))\n    print(str(N+31))\n    print(str(N+32))\n    print(str(N+33))\n    print(str(N+34))\n    print(str(N+35))\n    print(str(N+36))\n    print(str(N+37))\n    print(str(N+38))\n    print(str(N+39))\n    print(str(N+40))\n    print(str(N+41))\n    print(str(N+42))\n    print(str(N+43))\n    print(str(N+44))\n    print(str(N+45))\n    print(str(N+46))\n    print(str(N+47))\n    print(str(N+48))\n    print(str(N+49))\n    print(str(N+50))\n    print(str(N+51))\n    print(str(N+52))\n    print(str(N+53))\n    print(str(N+54))\n    print(str(N+55))\n    print(str(N+56))\n    print(str(N+57))\n    print(str(N+58))\n    print(str(N+59))\n    print(str(N+60))\n    print(str(N+61))\n    print(str(N+62))\n    print(str(N+63))\n    print(str(N+64))\n    print(str(N+65))\n    print(str(N+66))\n    print(str(N+68))\n    print(str(N+69))\n    print(str(N+7a))\n    print(str(N+7b"}, "587": {"problem_id": 4587, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\n# \u5148\u5229\u7528\u65b9\u5f0f\uff0c\u8fd9\u91cc\u975e\u53ef\u4ee5\u8bbf\u95ee\u5b83\u4eec\n# \u540c\u6839\u957f\u5ea6\u4e3a\uff1aupper, middle, middle_rev, lower, middle_rev_rev\n\n# \u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u8fd9\u4e2a\u6587\u5b57\u5217\u51fa\u6765\n# \u5f53\u524d\u5df2\u7ecf\u5b58\u5728\uff08\u540e\u9762\u8fd8\u5f97\u5230\uff09\uff08\u540c\u65f6\uff09\uff1a\n# \u6700\u7ec8\u70b9\u5c31\u662f\u540e\u9762\u7684\u6570\u5b57\u4e0b\u6839\n# \u4ee5\u4e0b\u6c42\u6240\u6709\uff0c\u9700\u8981\u4e00\u4e2a\u6587\u5b57\u5217\u51fa\uff0c\u56e0\u4e0b\u6839\u636e\u6587\u5b57\u5217\u81ea\u5df1\u8fbe\u5230\u591a\u4e2a\u6587\u5b57\u5217\n# \u8fd9\u65f6\u5019\u6bcf\u4e2a\u6587\u5b57\u90fd\u5f97\u5230\uff0c\u7136\u540e\u518d\u4fbf\u6709\u4e00\u4e2a\u6587\u5b57\u5217\uff0c\u56e0\u4e0b\u6839\u636e\u6587\u5b57\u5217\u81ea\u5df1\u8fbe\u5230\u591a\u4e2a\u6587\u5b57\u5217\n# \u6240\u4ee5\u5229\u7528\u65b9\u5f0f\uff0c\u8fd9\u91cc\u9762\u5c31\u80fd\u76f4\u63a5\u6587\u5b57\u5217\u81ea\u5df1\u8def\u5f84\uff0c\u8003\ufffd\u201c\u6587\u5b57\u5217\u201d\u51fd\u6570\n# \u53ea\u7528\ufffd\u5176\u4ed6\u6587\u5b57\u5217\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u88ab\u6587\u5b57\u5217\uff0c\u6240\u4ee5\u6587\u5b57\u5217\u81ea\u5df1\u8fbe\u5230\u591a\u4e2a\u6587\u5b57\u5217\n# \u53ea\u7528\ufffd\u5176\u4ed6\u6587\u5b57\u5217\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u88ab\u6587\u5b57\u5217\uff0c\u6240\u4ee5\u6587\u5b57\u5217\u81ea\u5df1\u8fbe\u5230\u591a\u4e2a\u6587\u5b57\u5217\n# \u53ea\u7528\ufffd\u5176\u4ed6\u6587\u5b57\u5217\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u88ab\u6587\u5b57\u5217\uff0c\u6264\u79fb\u52a8\u6587\u5b57\u5217\u81ea\u5df1\u8fbe\u5230\u591a\u4e2a\u6587\u5b57\u5217\n# \u53ea\u7528\ufffd\u5176\u4ed6\u6587\u5b57\u5217\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u88ab\u6587\u5b57\u5217\uff0c\u6264\u79fb\u52a8\u6587\u5b57\u5217\u81ea\u5df1\u8fbe\u5230\u591a\u4e2a\u6587\u5b57\u5217\n# \u53ea\u7528\ufffd\u5176\u4ed6\u6587\u5b57\u5217\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u88ab\u6587\u5b57\u5217\uff0c\u6264\u79fb\u52a8\u6587\u5b57\u5217\u81ea\u5df1\u8fbe\u5230\u591a\u4e2a\u6587\u5b57\u5217\n# \u53ea\u7528\ufffd\u5176\u4ed6\u6587\u5b57\u5217\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u88ab\u6587\u5b57\u5217\uff0c\u6264\u79fb\u52a8\u6587\u5b57\u5217\u81ea\u5df1\u8fbe\u5230\u591a\u4e2a\u6587\u5b57\u5217\n# \u53ea\u7528\ufffd\u5176\u4ed6\u6587\u5b57\u5217\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u88ab\u6587\u5b57\u5217\uff0c\u6264\u79fb\u52a8\u6587\u5b57\u5217\u81ea\u5df1\u8fbe\u5230\u591a\u4e2a\u6587\u5b57\u5217\n# \u53ea\u7528\ufffd\u5176\u4ed6\u6587\u5b57\u5217"}, "588": {"problem_id": 4588, "answer": "import sys\nreadline = sys.stdin.readline\ndef main():\n    x = map(int, readline().rstrip('\\n').split())\n    y = map(int, readline().rstrip('\\n').split())\n    print(x-y)\n\nmain()"}, "589": {"problem_id": 4589, "answer": "import sys\ninput = sys.stdin.readline\n\nH, W = map(int, input().split())\n# \u5165\u529b\u53ef\u80fd\u5148\u4f1a\nINF = 10**18\nMAX = max(INF, W)\n\ndef main():\n    H, W = map(int, input().split())\n    # \u5165\u529b\u53ef\u80fd\u5148\u4f1a\n    INF = 10**18\n    \n    for i in range(H):\n        W -= 1\n        W //= W\n        if W > MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n            W = W // W\n            \n        if W < MAX:\n            W = W - 1\n        "}, "590": {"problem_id": 4590, "answer": "import bisect\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\n# A = [0]*N\n# B = [0]*M\n\n# print(A)\n# print(B)\n\nfor i in range(N):\n    A[i] += A[i][0]\n    A[i] %= M\n\n# print(A)\n# print(B)\n\nans = 0\nfor i in range(N):\n    ans += min(A[i] - A[i+1][0], B[i] - B[i+1][0])\n\nprint(ans)"}, "591": {"problem_id": 4591, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    A, B, C, X, Y = list(map(int, input().split()))\n    A -= B -= C = X -= Y = 0\n    A, B, C, X, Y = sorted(A, reverse=True), sorted(B, reverse=True), sorted(C, reverse=True)\n    A, B, C, X, Y = sorted(A, reverse=True), sorted(B, reverse=True), sorted(C, reverse=True), sorted(X, reverse=True), sorted(Y, reverse=True)\n    print(sum(A * (X + Y) for X, Y in zip(A, B, C, X, Y)))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "592": {"problem_id": 4592, "answer": "import math\nN = input()\nprint(math.sqrt(N))"}, "593": {"problem_id": 4593, "answer": "import sys\nread = lambda: sys.stdin.readline().rstrip()\ndef main():\n \"\"\"Main program.\"\"\"(sys.stdin.readline().rstrip())\n\"\"\"\n sys.setrecursionlimit(10**7)\n\ndef __starting_point():\n main()\n\n__starting_point()"}, "594": {"problem_id": 4594, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nd = [0]*n\nfor i in range(n):\n    d[i] = d[i-1] + d[i-2]\n\nprint(max(d))"}, "595": {"problem_id": 4595, "answer": "s = input()\n\ndef main():\n n = len(s)\n s = list(reversed(s))\n print(n-1-len(s))\n\ndef __starting_point():\n main()\n\n__starting_point()"}, "596": {"problem_id": 4596, "answer": "N = int(input())\nA = list(map(int, input().split()))\n\ndef main():\n    even = 0\n    odd = 0\n    for i in range(N):\n        if A[i] % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n            \n    print(even)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "597": {"problem_id": 4597, "answer": "from math import factorial as f\nMOD = 10**9 + 7\nN = int(input())\np = pow(10, N-1, MOD)\nfor i in range(1, N+1):\n    factorial = f(factorial)\n    p = p*i\n    print(p%1000000007)\n"}, "598": {"problem_id": 4598, "answer": "def main():\n    n = int(input())\n    candies = list(map(int, input().split()))\n    ans = 0\n    for i in candies:\n        ans += i\n    print(ans)\n\nmain()\n"}, "599": {"problem_id": 4599, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    dp = [0]*N\n    dp[0] = 1\n    for i in range(1, N):\n        dp[i] = dp[i-1] + b[i]\n    for i in range(N-1, -1, -1):\n        dp[i] = max(dp[i], dp[i+1] - b[i])\n    print(dp[-1])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "600": {"problem_id": 4600, "answer": "from bisect import bisect_left as bl, bisect_right as br, insort as brs, insort_left as brs, insort_right as brs, insort_left_left as brs, insort_right_right as brs\nN, M, p = int(input()), 10001\np = list(map(int, input().split()))\n\ndef find(x):\n    if x not in p:\n        return x\n    else:\n        p[x] = find(p[x])\n        return p[x]\n\ndef union(x, y):\n    x = find(x)\n    y = find(y)\n    if x == y:\n        return\n    p[x] = y\n    return\n\ndef calc(x, y):\n    return sum(1 for i in range(x, y + 1) if i % 2 == 0)\n\ndef main():\n    N, M = int(input()), 10001\n    p = list(map(int, input().split()))\n    ans = calc(N, M)\n    ans.extend(p[N] - p[M])\n    # print(ans)\n    # print(calc(N, M))\n    # print(ans)\n    # print(calc(N, M))\n    \n    for i in range(N):\n        x = int(input())\n        ans.extend(find(x) + union(x, i))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n        # print(calc(N, M))\n        # print(ans)\n     "}, "601": {"problem_id": 4601, "answer": "from bisect import bisect_left as b\nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n    b.append(a[i]-1)\n#print(b)\nm=max(b)\nfor i in range(k):\n    if b[i]<m:\n        m=b[i]\n        break\nprint(m)\n"}, "602": {"problem_id": 4602, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nINF = float('inf')\nMOD = 10**9+7\nfrom functools import reduce\nfrom collections import defaultdict\nfrom bisect import bisect_left as bl\nfrom heapq import heapify, heappop, heappush\nfrom itertools import permutations, accumulate\nfrom numpy import ceil, mod, pow\nfrom scipy.lang import alph_with_pow_and_coif\nfrom bisect import bisect_left as bl\nfrom heapq import heapify, heappush, heappushpop\nfrom re import compile, find, match_\nfrom string import ascii_uppercase as uppercld, ascii_lowercase as lowercase\nfrom copy import copy\nfrom itertools import permutations, accumulate\nfrom operator import xor\nfrom functools import reduce\nfrom operator import mul\nfrom collections import defaultdict\nfrom queue import Queue\nfrom time import perf_counter\nfrom random import randint, shuffle\nfrom string import ascii_uppercase as uppercld, ascii_lowercase as lowercase\nfrom string import ascii_lowercase as lowercase as lowercasell\nfrom queue import Queue, threading as threading\nfrom time import perf_counter\nfrom statistics import mean_log_tile_bfs, median_log_tile_bfs\nfrom bisect import bisect_left as bl\nfrom statistics import mean_variance_lru as ll\nfrom statistics import mean_hieroglyph as hl\nfrom statistics import median_log_tile_bfs\nfrom decimal import Decimal\nfrom fractions import Fraction\nfrom math import gcd\ndef main():\n    N = int(input())\n    K = int(input())\n    xy = [int(i) for i in input().split()]\n    xy.sort(reverse=True)\n    xy = [x for x in xy]\n    xy = [y for y in xy]\n    xy = [x for x in xy]\n    xy = [y for y in xy]\n    xy = [x for x in xy]\n    xy = [y for y in xy]\n    xy = [x for x in xy]\n    xy = [y for y in xy]\n    xy = [x for x in xy]\n    xy = [y for y in xy]\n    xy = [x for x in xy]\n    xy = [y for y in xy]\n    xy = [x for x in xy]\n    xy = [y for y in xy]\n    xy = [x for x in xy]\n    xy = [y for y in xy]\n    xy = [x for x in xy]\n    xy = [y for y in xy]\n    xy = [x for x in xy]\n    xy = [y for y in xy]\n    xy = [x for x in xy]\n    xy = [y for y in xy]\n    xy = [x for x in xy]\n    xy = [x for x in xy]\n    xy = [x for x in xy]\n    xy = [x for x in xy]\n    xy = [x for x in xy]\n    xy = [y for y in xy]\n    xy = [x for x in xy]\n    xy = [x for x in xy]\n    xy = [x for x in xy]\n    xy = [x for x in xy]\n    xy = [x for x in xy]\n    xy = [x for x in xy]\n    xy = [x for x in xy]\n    xy = [x for x in xy]\n    xy = [x for x in xy]\n    xy = [x for x in xy]"}, "603": {"problem_id": 4603, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    A, B = map(int, input().split())\n    C, D = map(int, input().split())\n    print(min(A, B, C))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "604": {"problem_id": 4604, "answer": "import sys\ninput = sys.stdin.readline\nMOD = 10**9+7\n\nn = int(input())\nA = list(map(int, input().split()))\n\n# A.sort()\n\n# MOD = 1000000007\n\nfor i in range(n):\n    A[i] = A.pop()\n\nprint((A[-1] % MOD) % MOD)"}, "605": {"problem_id": 4605, "answer": "N,A,B = map(int,input().split())\ns = sum(map(int,input().split()))\nprint(s)"}, "606": {"problem_id": 4606, "answer": "#!usr/bin/env python\n\ndef __starting_point():\n N = int(input())\n r = list(map(int, input().split()))\n print(r[N-1])\n__starting_point()"}, "607": {"problem_id": 4607, "answer": "import bisect\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    a, b = map(int, input().split())\n    print((bisect.bisect_left(b, a)) - bisect.bisect_left(b, a))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "608": {"problem_id": 4608, "answer": "import sys\ninput = sys.stdin.readline\nfrom heapq import heappush as h, heappop as h1, heappushpop as hpop, heapify\nfrom collections import defaultdict as dd, deque, Counter\nfrom bisect import bisect_left as bl, bisect_right as br, insort\nfrom itertools import combinations as comb, permutations as perm\nfrom functools import reduce\nfrom operator import itemgetter\nfrom queue import Queue, push\nfrom time import perf_counter\nimport copy\nimport time\nimport random\nimport sys\n# import marketd\n# import numpy as np\n# import scipy.special asspecial\n# from scipy.special as sc\n# sys.setrecursionlimit(2**7)\n# import math\n# inf = 10**9+7\n# sys.settrace(inf)\n# sys.stdout = open(\"CP1/output.txt\", \"w\")\n# inf_flush = 2**20\n# inf = 10**10+7\n# sys.stdout.write(str(input()) if inf==inf else \"\")\n# sys.io = open(\"CP1/in.txt\", \"r\")\n# sys.stdin = open(\"CP1/in.txt\", \"w\")\n# sys.stdout = open(\"CP1/output.txt\", \"w\")\n# time.sleep(2_2) == 0\n# time.time_to_seconds = perf_counter(time.SECON DIGIT)\n# time.time_to_minutes = perf_counter(time.NONE)\n# time.time_to_seconds = 60_000_000\n# time.time_to_minutes = 60_000_000 + 1\n# import heapq\n# import math\n# from collections import defaultdict as dd, deque\n# from bisect import bisect_left as bl, bisect_right as br, insort\n# from heapq import heapify, heappush, heappop\n# from collections import deque\n# from collections import Counter as C\n# sys.setrecursionlimit(2**7)\n# sys.stdin = open(\"CP1/output.txt\", \"w\")\n# inf = 10**10+7\n# inf = 10**10+7\n# inf_flush = 2**20\n# inf = 10**10+7\n# sys.stdout = open(\"CP1/in.txt\", \"w\")\n# inf_flush = 2**20\n# sys.stdin = open(\"CP1/in.txt\", \"r\")\n# inf = 10**10+7\n# inf = 10**10+7\n# sys.stdout = open(\"CP1/out.txt\", \"w\")\n# sys.io = open(\"CP1/out.txt\", \"r\")\n# sys.stdout = open(\"CP1/in.txt\", \"w\")\n# time.sleep(2_2) == 0\n# time.time_to_seconds = perf_counter(time.SECON DIGIT)\n# time.time_to_minutes = 60_000_000 + 1\n# time.time_to_minutes = 60_000_000 + 1\n# time.time_to_minutes = 60_000_000 + 1\n# import math\n# from collections import defaultdict as dd, deque\n# from bisect import bisect_left as bl, bisect_right as br, insort\n# from heapq import qspace, heapify, heappush, heappop\n# from collections import defaultdict as dd, deque\n# from collections import Counter as C\n# sys.setrecursionlimit(2**7)\n# inf = 10**10+7\n# inf = 10**10+7\n# inf_flush = 2**20\n# inf = 10**10+7\n# sys.stdin = open(\"CP1/output.txt\", \"w\")\n# inf_flush = 2**20\n# inf = 10**10+7\n# inf_flush = 2**20\n# sys.stdout = open(\"CP1/in.txt\", \"r\")\n# inf_flush = 2**20\n# sys.io = open(\"CP1/in.txt\", \"r\")\n# sys.stdin = open(\"CP1/out.txt\", \"w\")\n# time.sleep(2_2) == 0\n# time.time_to_seconds = perf_counter(time.SECON DIGIT)\n# time.time_"}, "609": {"problem_id": 4609, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\n\ndef main():\n    A = sorted(A)\n    ans = 0\n    for i in range(N):\n        ans += A[i]\n        A.remove(A[i])\n        ans %= 10**9\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "610": {"problem_id": 4610, "answer": "def main():\n    n,k=map(int,input().split())\n    print((n-k)//(k-1))\n\nmain()\n"}, "611": {"problem_id": 4611, "answer": "import sys\nsys.setrecursionlimit(10**6)\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    if t == []:\n        print(\"No\")\n    else:\n        x, y = list(map(int, input().split()))\n        print(t[0] == t[1] == t[2] == t[3])\n        \ndef __starting_point():\n    main()\n__starting_point()"}, "612": {"problem_id": 4612, "answer": "# coding: utf-8\n# Your code here!\nimport sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\nINF = float('inf')\nMOD = 10**9+7\n\ndef main():\n    a,b = map(int,readline().split())\n    print(a.round(b.int()))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "613": {"problem_id": 4613, "answer": "from collections import defaultdict\nn, m = map(int, input().split())\nedges = defaultdict(list)\nfor _ in range(m):\n    a, b = map(int, input().split())\n    edges[a].append(b)\n    edges[b].append(a)\n\ndef main():\n    N, M = int(input()), 1000000007\n    graph = [[] for _ in range(N)]\n    for _ in range(N - 1):\n        a, b = map(int, input().split())\n        graph[a].append((b, 1))\n        graph[b].append((a, 1))\n        \n    # print(graph)\n    for i in range(M):\n        if graph[i] == [] or graph[i] == []:\n            continue\n        graph[i].append((graph[i][0], i))\n        graph[i].append((graph[i][1], i))\n        \n    # print(graph)\n    print(len(graph[0]))\n    \n    \ndef __starting_point():\n    main()\n\n__starting_point()"}, "614": {"problem_id": 4614, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    A, B, C = map(int, readline().strip().split())\n    print(A - B)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "615": {"problem_id": 4615, "answer": "import sys\nreadline = sys.stdin.readline\n\nclass S:\n    def __init__(self, a, b, c, d):\n        self.a = a\n        self.b = b\n        self.c = c\n        self.d = d\n        self.p = 1e9\n        self.s = 0\n        \nclass Solution:\n    def getMass(self, a, b, c, d):\n        return self.s + self.p * (a + b) * c + self.s * (b + c) * d\n    \n    def getMass(self, a, b, c, d):\n        return self.s + self.p * (a + b) * d + self.s * (b + c) * c + self.d * (c + d) * d\n    \n    def Solve(self, a, b, c, d):\n        self.a = a\n        self.b = b\n        self.c = c\n        self.d = d\n        self.p = 0\n        self.s = 0\n        self.sinc = 0\n        self.sneq = 0\n        self.sinc += self.s\n        self.sneq += self.s\n        self.sinc += self.s\n        self.sneq += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc += self.s\n        self.sinc +="}, "616": {"problem_id": 4616, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nn = int(input())\ns = list(map(ord, input().split()))\nprint('\\n'.join(s))"}, "617": {"problem_id": 4617, "answer": "import sys\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef read_int():\n    return int(readline())\n\ndef read_int_str():\n    return read_int().split(' ')[1]\n\ndef read_int_str_str():\n    return read_int().split(',')\n\n#------------------Input Wrapper------------------\n#------------------Output Wrapper ------------------------\n#------------------Input Output--------------------\n#------------------Output Output ------------------------\n\n#------------------Input Method Explanation ------------------------\n\ndef __starting_point():\n    #------------------Input Method Explanation ------------------------\n\n__starting_point()"}, "618": {"problem_id": 4618, "answer": "import bisect\n\ndef main():\n    s = list(map(int, input().split()))\n    n = len(s)\n    for i in range(n-1, -1, -1):\n        if s[i] > s[i+1]:\n            s[i] = s[i+1]\n        else:\n            s[i] = s[i+1]\n    print(''.join(s))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "619": {"problem_id": 4619, "answer": "def main():\n    W, H = map(int, input().split())\n    a = []\n    for i in range(W):\n        a.append(input())\n    a.reverse()\n    x, y = map(int, input().split())\n    print(max(a[0], a[1]))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "620": {"problem_id": 4620, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nC = list(map(int, input().split()))\nS = list(map(int, input().split()))\n\nMOD = 10**9 + 7\n\n# \u5148\u51b3\u9664\u9009\u986e\u5bc6\u5e8f\nINF = float('inf')\n\ndef main():\n    N = C.index(min(C))\n    S = C.copy()\n    S.sort(reverse=True)\n    for i in range(N):\n        t = C[i] - S[i]\n        if t < 0:\n            continue\n        if t == 0:\n            S.append(i)\n        else:\n            S.append(t)\n            S[i] = t\n            break\n            \n    # \u5224\u6589\u9012\u5c42\n    # \u5982\u4f60\u4e00\u6837\uff0c\u53ef\u4ee5\u8bb0\u5f55\u65f6\u95f4\u8fb9\u756a\u65b9\u5411\u6570\u7ec4\uff0c\u8003\u8651\u8fd9\u4e2a\u6587\u4ef6\u90fd\u4f1a\u88ab\u7ee7\u7eed\n    # \u540c\u4e09\ufffd\u6808\n    # \u540c\u4e09\ufffd\u6808\n    # \u540c\u4e00\u89d2\u8ad0\u5224\u6589\n    N_min = N\n    C_min = 10**9 + 7\n    S_min = 10**9 + 7\n    F_min = 10**9 + 7\n    \n    # \u533a\u9593\u53ef\u80fd\u6027\n    # \u5f53\u524d\u5de6\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    # \u533a\u9593\u53f3\u53f3\n    #"}, "621": {"problem_id": 4621, "answer": "import sys\nreadline = sys.stdin.readline\ndef read_int(): return int(readline())\ndef read_ints(): return list(map(int, read_list()))\ndef read_ints_rows(rows): return [int(row) for row in read_ints()]\ndef read_ints_cols(cols): return [int(row) for row in read_ints_cols(cols)]\ndef read_int_r(r): return int(readline())\ndef read_int_m(m): return int(readline())\ndef read_ints(rows, cols): return [int(row) for row in read_ints_rows(cols)]\ndef read_ints_rows(rows, rows): return [int(row) for row in read_ints_cols(cols)]\ndef read_ints_cols(cols): return [int(row) for row in read_ints_rows(cols)]\ndef read_ints_rows_r(rows, rows_r): return [int(row) for row in read_ints_cols(cols)]\n\n# Function to print the extended image\ndef print_ext_image(height, width, rows, cols):\n    print(height, width, cols)\n\n# Driver code\ndef print_ex_image(height, width, rows, cols):\n    print(height, width, cols)\n\n# Driver code\ndef print_ex_image_rows(height, width, rows, cols):\n    print(height, width, cols)\n\n# Explanation:\n#         row[i] = row[i+1] = row[i+2] =...\n#         col[i] = col[i+1] = col[i+2] =...\n#         row[i] = row[i+1] = row[i+2] =...\n#         col[i] = col[i+1] = col[i+2] =...\n\n# This program is contributed by Ammar Mehmard on 12/3/2019 at\n# random.py\ndef __starting_point():\n    print_ex_image_rows(height, width, rows, cols)\n__starting_point()"}, "622": {"problem_id": 4622, "answer": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\n\ndef check(a):\n    return a.count(a[0]) == 1\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(check(A))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "623": {"problem_id": 4623, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    w = list(map(int, input().split()))\n    a = [w[0] for w in w]\n    b = [w[1] for w in w]\n    c = [w[2] for w in w]\n    d = [w[3] for w in w]\n    e = [w[4] for w in w]\n    f = [w[5] for w in w]\n    g = [w[6] for w in w]\n    h = [w[7] for w in w]\n    i = 0\n    j = 0\n    k = 0\n    while i < n and j < n:\n        if w[i] + w[j] + w[k] + w[k] + w[i] + w[j] + w[k] + w[i] + w[j] + w[k] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[j] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i] + w[i"}, "624": {"problem_id": 4624, "answer": "def main():\n    t = int(input())\n    for _ in range(t):\n        n, x = list(map(int, input().split()))\n        l = list(map(int, input().split()))\n        print(x - l[0])\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "625": {"problem_id": 4625, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    s = input()\n    print(26 * (n - 1) // 5)\n    print(26 * (m + 1) // 5)\n"}, "626": {"problem_id": 4626, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    a, b, c = map(int, input().split())\n    print((a + b + c) * (a + b + c) // 2)"}, "627": {"problem_id": 4627, "answer": "from sys import stdin, stdout\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl\nfrom heapq import heapify, heappop asheapify\nfrom itertools import permutations as perm\nfrom functools import reduce\nfrom operator import *\nfrom math import gcd\nfrom queue import Queue\nfrom datetime import datetime\nimport sys\ninput = sys.stdin.readline\n\ndef LI(): return list(map(int, input().split()))\ndef LI_(): return list(map(int, input().split()))\ndef LF(): return [float('inf')]\ndef LS(): return [x for x in input().split()]\ndef I(): return int(input())\ndef F(): return float(stdin.readline())\ndef S(): return input().rstrip('\\n')\ndef L(): return stdin.readline().split()\n\ndef main():\n    n = I()\n    a = LI()\n    for i in range(n):\n        a.append(a[i])\n    print('YES' if len(a) == 1 else 'NO')\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "628": {"problem_id": 4628, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m, k = list(map(int, input().split()))\n\ndist = [[0 for _ in range(k)] for _ in range(n)]\n\nfor i in range(m):\n    road = list(map(int, input().split()))\n    dist[i][road[0]].append(road[1])\n    dist[i][road[1]].append(road[2])\n\ndef dfs(x, y):\n    if x == y:\n        return 0\n    else:\n        return min(dist[x][x] + dist[y][x] + dist[x][y] + dist[y][y] for x in range(k))\n\ndist[0][0] = 0\ndist[1][0] = 0\ndist[2][0] = 0\ndist[3][0] = 0\ndist[4][0] = 0\ndist[5][0] = 0\ndist[6][0] = 0\ndist[7][0] = 0\ndist[8][0] = 0\ndist[9][0] = 0\ndist[10][0] = 0\ndist[11][0] = 0\ndist[12][0] = 0\ndist[13][0] = 0\ndist[14][0] = 0\ndist[15][0] = 0\ndist[16][0] = 0\ndist[17][0] = 0\ndist[18][0] = 0\ndist[19][0] = 0\ndist[20][0] = 0\ndist[21][0] = 0\ndist[22][0] = 0\ndist[23][0] = 0\ndist[24][0] = 0\ndist[25][0] = 0\ndist[26][0] = 0\ndist[27][0] = 0\ndist[28][0] = 0\ndist[29][0] = 0\ndist[30][0] = 0\ndist[31][0] = 0\ndist[32][0] = 0\ndist[33][0] = 0\ndist[34][0] = 0\ndist[35][0] = 0\ndist[36][0] = 0\ndist[37][0] = 0\ndist[38][0] = 0\ndist[39][0] = 0\ndist[40][0] = 0\ndist[41][0] = 0\ndist[42][0] = 0\ndist[43][0] = 0\ndist[44][0] = 0\ndist[45][0] = 0\ndist[46][0] = 0\ndist[47][0] = 0\ndist[48][0] = 0\ndist[49][0] = 0\ndist[50][0] = 0\ndist[51][0] = 0\ndist[52][0] = 0\ndist[53][0] = 0\ndist[54][0] = 0\ndist[55][0] = 0\ndist[56][0] = 0\ndist[57][0] = 0\ndist[58][0] = 0\ndist[59][0] = 0\ndist[60][0] = 0\ndist[61][0] = 0\ndist[62][0] = 0\ndist[63][0] = 0\ndist[64][0] = 0\ndist[66][0] = 0\ndist[67][0] = 0\ndist[68][0] = 0\ndist[69][0] = 0\ndist[72][0] = 0\ndist[73][0] = 0\ndist[68][0] = 0\ndist[75][0] = 0\ndist[76][0] = 0\ndist[77][0] = 0\ndist[78][0] = 0\ndist[78][0] = 0\ndist[79][0] = 0\ndist[80][0] = 0\ndist[81][0] = 0\ndist[81][0] = 0\ndist[81][0] = 0\ndist[82][0] = 0\ndist[84][0] = 0\ndist[85][0] = 0\ndist[86][0] = 0\ndist[87][0] = 0\ndist[88][0] = 0\ndist[89][0] = 0\ndist[90][0] = 0\ndist[91][0] = 0\ndist[ antioxidifying water (2015)"}, "629": {"problem_id": 4629, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\ndef LI(): return list(map(int, input().split()))\ndef LI_(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LS(): return input().replace(' ','').split()\ndef I(): return int(input())\ndef F(): return float(input())\ndef S(): return input().replace(' ','').replace('\\n', '3'[3-i%3]*3)[0:int(input())]\ndef L(): return list(map(float, input().split()))\ndef LS_(): return input().replace(' ','').replace('\\n', '3'[3-i%3]*3)[0:int(input())]\n\nfor _ in range(I()):\n    n = I()\n    print(1+max(LI()))"}, "630": {"problem_id": 4630, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    q = int(input())\n    ans = []\n    for i in range(n):\n        ans.append(p[i] if i % 2 else 0)\n    print(*ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "631": {"problem_id": 4631, "answer": "import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\n# \u89bb\u6108, \u91c7\u7528\u4e00\u822c\u5b9a\u7fa9\uff0c\u7528\u4e8e\u8bbe\u7f6e\u5230\u82f1\u7edd\u6cd5\u91c7\u8bbf\uff0c\u518d\u8981\u52a0\u8fb9\u7684\u65f6\u95f4\u591a\u5c11\u6b21\ndef check(x):\n    return x[0] < x[1]\n\n# \u5982\u679c\u6709\u4e24\u4e2a tree\uff0c\u5219\u8fd4\u56de\u7ed3\u675f\ndef dfs(x):\n    for i in range(1, n+1):\n        if x[i] == x[i-1]:\n            return 0\n        elif x[i] < x[i-1]:\n            x[i] = x[i-1]\n            check(x[i])\n            dfs(x[i])\n            break\n            \ndef dfs_l(x):\n    for i in range(1, n+1):\n        if x[i] == x[i-1]:\n            return 0\n        elif x[i] < x[i-1]:\n            x[i] = x[i-1]\n            dfs(x[i])\n            break\n            \ndef dfs_r(x):\n    for i in range(1, n+1):\n        if x[i] == x[i-1]:\n            return 0\n        elif x[i] < x[i-1]:\n            x[i] = x[i-1]\n            dfs(x[i])\n            break\n            \ndef main():\n    n, m = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    print(check(x))\n    \n    for i in range(n):\n        print(max(x[i] - x[i-1], 0) + min(x[i] - x[i-1], 2))\n        \n    for i in range(m):\n        print(max(x[i] - x[i-1], 0) + min(x[i] - x[i-1], 2))\n        \n    for i in range(n):\n        print(max(x[i] - x[i-1], 0) + min(x[i] - x[i-1], 2))\n        \n    for i in range(m):\n        print(max(x[i] - x[i-1], 0) + min(x[i] - x[i-1], 2))\n        \n    for i in range(n):\n        print(max(x[i] - x[i-1], 0) + min(x[i] - x[i-1], 2))\n        \n    for i in range(n):\n        print(max(x[i] - x[i-1], 0) + min(x"}, "632": {"problem_id": 4632, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    d = [[] for _ in range(n)]\n    for i in range(n):\n        x, y = arr[i]\n        d[x-1].append(y-1)\n        d[y-1].append(x-1)\n        d[x+1].append(y+1)\n        d[x+1].append(y+1)\n        d[x-1].append(y-1)\n        d[y-1].append(x-1)\n    print('YES')\n"}, "633": {"problem_id": 4633, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ndef main():\n    n, s = map(int, input().split())\n    a = (n - 1) // s\n    print(a)\n    \ndef __starting_point():\n    t = int(input())\n    for _ in range(t):\n        n, s = map(int, input().split())\n        a = (n - 1) // s\n        print(a)\n        \n__starting_point()"}, "634": {"problem_id": 4634, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    l = []\n    r = []\n    for i in range(n):\n        a.append(a[i])\n    for i in range(n-1, -1, -1):\n        a.append(a[i+1])\n    l.append(a[-1] + 1)\n    l.append(a[-2] - 1)\n    l.append(a[-3] - 1)\n    l.append(a[-4] - 1)\n    l.append(a[-5] - 1)\n    l.append(a[-6] - 1)\n    l.append(a[-7] - 1)\n    l.append(a[-8] - 1)\n    l.append(a[-9] - 1)\n    l.append(a[-a] - 1)\n    l.append(a[-b] - 1)\n    l.append(a[-c] - 1)\n    l.append(a[-d] - 1)\n    l.append(a[-e] - 1)\n    l.append(a[-f] - 1)\n    l.append(a[-g] - 1)\n    l.append(a[-h] - 1)\n    l.append(a[-j] - 1)\n    l.append(a[-k] - 1)\n    l.append(a[-l] - 1)\n    l.append(a[-m] - 1)\n    l.append(a[-n] - 1)\n    l.append(a[-m+1] - 1)\n    l.append(a[-n+1] - 1)\n    l.append(a[-m+2] - 1)\n    l.append(a[-n+2] - 1)\n    l.append(a[-m+3] - 1)\n    l.append(a[-n+3] - 1)\n    l.append(a[-m+4] - 1)\n    l.append(a[-n+4] - 1)\n    l.append(a[-m+5] - 1)\n    l.append(a[-n+5] - 1)\n    l.append(a[-m+6] - 1)\n    l.append(a[-m+7] - 1)\n    l.append(a[-m+8] - 1)\n    l.append(a[-m+9] - 1)\n    l.append(a[-m+a] - 1)\n    l.append(a[-m+b] - 1)\n    l.append(a[-m+c] - 1)\n    l.append(a[-m+d] - 1)\n    l.append(a[-m+e] - 1)\n    l.append(a[-m+f] - 1)\n    l.append(a[-m+g] - 1)\n    l.append(a[-m+h] - 1)\n    l.append(a[-m+j] - 1)\n    l.append(a[-m+m] - 1)\n    l.append(a[-m+n] - 1)\n    l.append(a[-m+m+1] - 1)\n    l.append(a[-m+n+1] - 1)\n    l.append(a[-m+n+2] - 1)\n    l.append(a[-m+n+3] - 1)\n    l.append("}, "635": {"problem_id": 4635, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    s = set()\n    for i in range(n):\n        if s.intersection(s[i]):\n            s.add(i)\n    print(''.join(s))\n"}, "636": {"problem_id": 4636, "answer": ""}, "637": {"problem_id": 4637, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(sum(a[:k] + b[:k] + a[k+1:]))"}, "638": {"problem_id": 4638, "answer": "from math import factorial\ndef gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef main():\n    n, c = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans += a[i] * b[i]\n        b[i] = max(b[i], a[i])\n    print(ans)\n\nmain()\n"}, "639": {"problem_id": 4639, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    print('aaabb')\n    print('bbbb')\n    print('aa')\n"}, "640": {"problem_id": 4640, "answer": "t = int(input())\nfor _ in range(t):\n n, k = map(int, input().split())\n x = list(map(int, input().split()))\n y = list(map(int, input().split()))\n l = [None] * (n + 1)\n max_c = 0\n for i in range(k):\n  if x[i] > y[i]:\n   l[i] = min(x[i], l[i - 1])\n  else:\n   l[i] = max(x[i], l[i - 1])\n print(max_c + max_c)"}, "641": {"problem_id": 4641, "answer": ""}, "642": {"problem_id": 4642, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, x, y = map(int, input().split())\n    if n % 2 == 1:\n        print(x, y)\n    else:\n        a = [int(x) - x for x in input().split()]\n        a.sort()\n        ans = 0\n        for i in range(n):\n            if a[i] - a[i-1] == a[i] - a[i+1]:\n                ans += 1\n        print(ans)"}, "643": {"problem_id": 4643, "answer": "from collections import Counter\r\nn = int(input())\r\narr = list(map(int, input().split()))\r\ncnt = Counter(arr)\r\nfor i in range(n):\r\n    if cnt[i] == 0:\r\n        print(i+1, end=' ')\r\n    else:\r\n        print(i+1, end=' ')\r\n"}, "644": {"problem_id": 4644, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print('\\n'.join(a))"}, "645": {"problem_id": 4645, "answer": "from sys import stdin, stdout\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl\nfrom heapq import heapify, heappop asheappush\nfrom itertools import permutations as ppermutations\nfrom functools import reduce\nimport sys\ninput = stdin.readline\ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\ndef I():\n\treturn int(input())\ndef LS():\n\treturn input().split()\ndef S():\n\treturn input().rstrip('\\n')\ndef S_str():\n\treturn input().split()\ndef S_ints():\n\treturn int(input())\ndef S_str_ints(S):\n\treturn list(S_str() for S_str in S_ints())\ndef S_permutations(S):\n\treturn sorted(S, key=S.index)\ndef S_subset(S):\n\treturn S_permutations(S)\ndef S_get_subset(S):\n\treturn S_subset(S)\ndef S_set(S):\n\treturn S\ndef S_get(S):\n\treturn S\ndef S_set1(S):\n\treturn S_get_subset(S)\ndef S_get_subset1(S):\n\treturn S_get_subset(S)\ndef S_get_subset2(S):\n\treturn S_get_subset(S)\ndef S_get_subset2(S):\n\treturn S\ndef S_set2(S):\n\treturn S_get_subset(S)\ndef S_get(S):\n\treturn S\ndef S_get_subset3(S):\n\treturn S_get_subset(S)\ndef S_get_subset3(S):\n\treturn S\ndef S_set3(S):\n\treturn S_get_subset(S)\ndef S_get(S):\n\treturn S\ndef S_get_subset4(S):\n\treturn S_get_subset(S)\ndef S_get_subset4(S):\n\treturn S\ndef S_get(S):\n\treturn S\ndef S_get_subset5(S):\n\treturn S_get_subset(S)\ndef S_get_subset5(S):\n\treturn S\ndef S_set5(S):\n\treturn S_get_subset(S)\ndef S_get(S):\n\treturn S\ndef S_get_subset6(S):\n\treturn S_get_subset(S)\ndef S_get_subset6(S):\n\treturn S\ndef S_get(S):\n\treturn S\ndef S_get_subset7(S):\n\treturn S_get_subset(S)\ndef S_get(S):\n\treturn S\ndef S_get_subset7(S):\n\treturn S\ndef S_get(S):\n\treturn S\ndef S_get_subset8(S):\n\treturn S_get_subset(S)\ndef S_get_subset8(S):\n\treturn S\ndef S_get(S):\n\treturn S\ndef S_get_subset9(S):\n\treturn S_get_subset(S)\ndef S_get_subset9(S):\n\treturn S_get_subset(S)\ndef S_get_subset10(S):\n\treturn S_get_subset(S)\ndef S_get_subset10(S):\n\treturn S_get_subset(S)\ndef S_get(S):\n\treturn S\ndef S_get_subset11(S):\n\treturn S_get_subset(S)\ndef S_get_subset11(S):\n\treturn S_get_subset(S)\ndef S_get(S):\n\treturn S\ndef S_get(S):\n\treturn S\ndef S_get_subset12(S):\n\treturn S_get_subset(S)\ndef S_get_subset12(S):\n\treturn S_get_subset(S)\ndef S_get_subset13(S):\n\treturn S_get_subset(S)\ndef S_get(S):\n\treturn S\ndef S"}, "646": {"problem_id": 4646, "answer": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[-1] % 2)\n    if a[-1] % 2 == 0:\n        print(1)\n    else:\n        print(n - 1)\n"}, "647": {"problem_id": 4647, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nA = list(map(int, input().split()))\n\nINF = 10**9 + 7\n\ndef main():\n    n = int(input())\n    A.sort()\n    color = [1]*n\n    for i in range(n-1):\n        u, v = A[i]\n        color[u] = color[v] = 1\n        color[v] = 1\n        if u!= black:\n            u-=1\n        elif u!= black:\n            u-=1\n        elif color[u] == color[v]:\n            print(2*max(color[u] - color[v], color[v] - color[u]))\n        else:\n            print(color[u] - color[v])\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "648": {"problem_id": 4648, "answer": "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        print(1)\n    else:\n        print(-1)\n"}, "649": {"problem_id": 4649, "answer": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    n, k = map(int, input().split())\n    s = input()\n    l = len(s)\n    ans = []\n    for i in range(k):\n        if s[i]!= s[i + 1]:\n            ans.append(i + 1)\n        else:\n            ans.append(i + 1)\n    print(min(ans))\n"}, "650": {"problem_id": 4650, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans += a[i]\n    print(ans)\n"}, "651": {"problem_id": 4651, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = min(l)\n    ans = min(ans)\n    print(min(ans))\n"}, "652": {"problem_id": 4652, "answer": "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print('YES' if math.gcd(a[0], a[1]) == 1 else 'NO')"}, "653": {"problem_id": 4653, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans += candies[i]\n        candies[i] *= k\n    print(ans)\n"}, "654": {"problem_id": 4654, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    if n % 2!= 0:\n        print('NO')\n    else:\n        print('YES')\n"}, "655": {"problem_id": 4655, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9+7\n\ndef main():\n    n = int(input())\n    candies = [0]*n\n    for i in range(n):\n        candies[i] = list(map(int, input().split()))\n        candies[i-1] = list(map(int, input().split()))\n    ans = 0\n    for i in range(n-1, -1, -1):\n        ans += candies[i]\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "656": {"problem_id": 4656, "answer": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    s = input()\n    a = [0] * (k + 1)\n    b = [0] * (k + 1)\n    c = [0] * (k + 1)\n    d = [0] * (k + 1)\n    for i in range(k):\n        a[i] = s[i]\n    for i in range(k):\n        b[i] = s[i]\n    for i in range(k):\n        c[i] = s[i]\n    for i in range(k):\n        d[i] = s[i]\n    for i in range(k):\n        d[i] = max(d[i], a[i])\n    print(len(set(a)))\n"}, "657": {"problem_id": 4657, "answer": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = [0] * (k + 1)\n    for i in range(k):\n        l[i] = 1\n    print('NO')\n"}, "658": {"problem_id": 4658, "answer": "class Solution:\n    def reverseBits(self, n: int) -> int:\n        if n == 0:\n            return 0\n        elif n == 1:\n            return 1\n        else:\n            sign = 1\n            for i in range(2, n+1):\n                sign *= 32\n                if sign == 1:\n                    sign = 0\n                elif sign == 0:\n                    sign = 1\n                elif sign == 1:\n                    sign = 0\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 0\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n                    sign = 1\n                elif sign == 1:\n   "}, "659": {"problem_id": 4659, "answer": "class Solution:\n     def generate(self, numRows):\n         \"\"\"\n         :type numRows: int\n         :rtype: List[List[int]]\n         \"\"\"\n         if numRows == 0:\n             return []\n         \n         res = []\n         for i in range(1, numRows):\n             res.append(self.generate(i))\n         return res\n         \n     def generate(self, numRows):\n         \"\"\"\n         :type numRows: int\n         :rtype: List[List[int]]\n         \"\"\"\n         if numRows == 0:\n             return []\n         \n         res = []\n         for i in range(numRows):\n             res.append(self.generate(i))\n         return res"}, "660": {"problem_id": 4660, "answer": "import re\n\ndef fun(s):\n    return re.sub(r'([0-9]+)', lambda m: m.group(1) == s, emails)"}, "661": {"problem_id": 4661, "answer": "import heapq\n\ndef fibonacci(n):\n    return [int(i) for i in input().split()]\n\ndef __starting_point():\n    input()\n    return next((__starting_point()), None)\n__starting_point()"}, "662": {"problem_id": 4662, "answer": "def depth(e, level):\n    return len(e.parse(e.to_string()))\n\ndef maxdepth(e, level):\n    return int(maxdepth(e, level))\n\nprint(depth(10, 1))\n"}, "663": {"problem_id": 4663, "answer": "import re\nn = int(input().strip())\nregex = re.compile(r'\\d+$')\nfor i in re.finditer(regex):\n print(int(input().strip()))"}, "664": {"problem_id": 4664, "answer": "from itertools import accumulate\n\ndef __starting_point():\n    M = list(map(int, input().split()))\n    N = list(map(int, input().split()))\n    print(accumulate(M, N))\n\n__starting_point()"}, "665": {"problem_id": 4665, "answer": "import itertools\nn = int(input().strip())\nclass = list(map(int, input().strip().split()))\nmarks = [int(i) for i in input().strip().split()]\nclosest = namedtuple('Closest', class)\n\ndef __starting_point():\n    it = itertools.groupby(class)\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n    class.sort(handel=lambda x: x[0])\n    class.sort(handel=lambda x: x[1])\n  "}, "666": {"problem_id": 4666, "answer": "from itertools import combinations\n\ndef __starting_point():\n    n = int(input().strip())\n    check = {True: \"Not Weird\", False: \"Weird\"}\n\n    print(check[\n            n%2 == 0 and (\n                n in range(2,6) or \n                n > 20)\n    ])\n\n__starting_point()"}, "667": {"problem_id": 4667, "answer": "import itertools\n\ndef get_attr_number(node):\n    #your code goes here\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.readline\n    tree = itertools.chain(map(int,map(parse(x).split()),map(int,parse(x).split())))\n    print(get_attr_number(tree))\n    \n    \n"}, "668": {"problem_id": 4668, "answer": "import math\n\nclass Points(object):\n    def __init__(self, x, y, z):\n\n        self.x = x\n        self.y = y\n        self.z = z\n\n    def dot(self, no):\n        return self.x * self.x + self.y * self.y + self.z * self.z\n\n    def cross(self, no):\n        return self.x * self.x + self.y * self.y + self.z * self.z\n\n    def absolute(self):\n        return pow(self.x, 0.5)\n\nif __name__ == '__main__':\n    points = Points(3, 2, 0)\n    print(points[0])\n    print(points[1])\n    print(points[2])\n    print(points[3])\n    \n"}, "669": {"problem_id": 4669, "answer": "import re\n\ndef is_vowel(letter):\n    return letter in [''.join(x) for x in re.finditer(r'[a-z]',letter) for r in re.sub(r'[aeiou]', '', letter) if letter.isalpha()]"}, "670": {"problem_id": 4670, "answer": "def __starting_point():\n    # Code here\n__starting_point()"}, "671": {"problem_id": 4671, "answer": "import re\n\ndef __starting_point():\n    try:\n        return int(__starting_point())\n    except ValueError:\n        return\n\n__starting_point()"}, "672": {"problem_id": 4672, "answer": "import re\n\ndef __starting_point():\n    n = int(input())\n    marks = []\n    for _ in range(n):\n        name, *line = input().split()\n        marks.append(name)\n        marks.append(re.sub(r'\\d+', '', re.sub(r'\\d+', '', name)))\n    print(marks)\n__starting_point()"}, "673": {"problem_id": 4673, "answer": "from operator import itemgetter\n\nclass Person(object):\n    def __init__(self, n):\n        self.name = {'M': 'F', 'F': 'M'}\n        self.age = {'F': 'M', 'M': 'F'}\n        self.height = {'F': 0, 'M': 0}\n        self.sizemax = 1\n        self.height_left = 0\n        self.sizemax_right = 1\n        self.sizemax = self.height.get(self.sizemax)\n        self.sizemax_left = self.sizemax.get(self.sizemax_left)\n        self.sizemax_right = self.sizemax_right.get(self.sizemax_right)\n        self.height_left = self.height.get(self.sizemax_left)\n        self.height_right = self.height.get(self.sizemax_right)\n        self.height_left_right = self.height_right.get(self.sizemax_right)\n        self.height_right_left = self.height_left.get(self.sizemax_left)\n        self.height_left_right = self.height_right.get(self.sizemax_right)\n        self.sizemax = self.sizemax.get(self.sizemax)\n        self.sizemax_left = self.sizemax.get(self.sizemax_left)\n        self.sizemax_right = self.sizemax.get(self.sizemax_right)\n        self.sizemax_left = self.sizemax.get(self.sizemax_left)\n        self.sizemax_right = self.sizemax.get(self.sizemax_right)\n        self.sizemax = self.sizemax.get(self.sizemax_right)\n        self.sizemax_left = self.sizemax.get(self.sizemax_left)\n        self.sizemax_right = self.sizemax.get(self.sizemax_right)\n        self.height = self.height.get(self.sizemax_left)\n        self.height_left_right = self.sizemax.get(self.sizemax_left)\n        self.height_right = self.sizemax.get(self.sizemax_right)\n        self.height_left = self.height.get(self.sizemax_right)\n        self.height_right_left = self.sizemax.get(self.sizemax_right)\n        self.height_right = self.sizemax.get(self.sizemax_right)\n        self.sizemax = self.sizemax.get(self.sizemax_left)\n        self.sizemax_left = self.sizemax.get(self.sizemax_left)\n        self.sizemax_right = self.sizemax.get(self.sizemax_right)\n        self.sizemax = self.sizemax.get(self.sizemax_right)\n        self.sizemax_left = self."}, "674": {"problem_id": 4674, "answer": "import sys\n\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\ndef main():\n    x, y, z, n = map(int, sys.stdin.readline().split())\n    print((map(int, sys.stdin.readline().split())))\n\nmain()\n"}, "675": {"problem_id": 4675, "answer": "import math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.imag = real\n        self.imag = math.acos(imag)\n        self.real = abs(imag)\n        self.imag = abs(imag)\n        self.mod = 1.0 * math.pi\n        self.mod = 2.0 * math.pi\n        self.mod2 = 1.0 * math.pi\n        self.mod2 = 2 * math.pi\n        self.mod = math.pi * 2.0 / self.mod\n        self.mod2 = 2 * math.pi * self.mod\n        self.mod = math.pi * self.mod2 / self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self.mod = math.pi * self.mod * self.mod\n        self"}, "676": {"problem_id": 4676, "answer": "import sys\nread = sys.stdin.readline\nreadlines = sys.stdin.readlines\n\ndef main():\n    input = lambda: read().rstrip()\n    return\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "677": {"problem_id": 4677, "answer": "from collections import Counter\ndef main():\n    s = input()\n    print(s.count('0'))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "678": {"problem_id": 4678, "answer": "n = int(input())\na = list(map(int, input().split()))\n\ndef max_stools(a):\n    if a[0] == 0:\n        return 0\n    else:\n        for i in range(1, len(a)):\n            if a[i] - a[i-1] == 0:\n                return max_stools(a[i:])\n        return 1\n\ndef max_stools_with_hint(a):\n    if a[0] == 0:\n        return 0\n    else:\n        for i in range(1, len(a)):\n            if a[i] - a[i-1] == 0:\n                return max_stools_with_hint(a[i:])\n        return 1\n\nprint(max_stools_with_hint(a))"}, "679": {"problem_id": 4679, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    sys.setrecursionlimit(10**7)\n    n = int(readline())\n    A = list(map(int, readline().split()))\n    B = list(map(int, readline().split()))\n    C = list(map(int, readline().split()))\n    d = {a:0 for a in A}\n    for a in B:\n        d[a] += 1\n    for a in C:\n        d[a] -= 1\n    for a in A:\n        d[a] += 1\n    for a in A:\n        d[a] -= 1\n    for a in B:\n        d[a] += 1\n    for a in A:\n        d[a] += 1\n    for a in C:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in B:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in C:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in B:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in C:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in B:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in B:\n        d[a] -= 1\n    for a in C:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in B:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in C:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in B:\n        d[a] -= 1\n    for a in B:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in B:\n        d[a] -= 1\n    for a in B:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in C:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in A:\n        d[a] -= 1\n    for a in B:\n        d[a] -= 1\n    for a in B:\n        d[a] -= 1\n    for a in B:\n        d[a] -= 1\n    for a in B:\n    "}, "680": {"problem_id": 4680, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n\t\n\tA, B, C = map(int, readline().split())\n\t\n\tprint((\"YES\" if A > B > C else \"NO\"))\n\t\n\treturn\n\nmain()"}, "681": {"problem_id": 4681, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\na = [int(x) for x in readline().split()]\n\ndef bin_search(l):\n    i = 0\n    while i < len(l):\n        if l[i] == l[i-1]:\n            i += 1\n        else:\n            i += 2\n    return i\n\ndef bin_search_int(l):\n    i = 0\n    while i < len(l):\n        if l[i] == l[i-1]:\n            i += 1\n        else:\n            i += 2\n    return i\n\nprint(bin_search_int(10**18))"}, "682": {"problem_id": 4682, "answer": "# -*- coding: utf-8 -*-\nimport math\nimport itertools\nimport bisect\nimport copy\nimport time\nimport random\nimport re\nimport sys\n# import numpy as np\nfrom collections import Counter, defaultdict, deque,OrderedDict\nfrom heapq import heappush, heappop, heappushpop, heappop, heapify\nfrom bisect import bisect_left\nfrom typing import List\nimport itertools\n# import math\nfrom functools import lru_cache, reduce,cmp_to_key\nfrom operator import truediv\n\n\n@lru_cache(maxsize=None)\ndef rec(x, y):\n    if x not in y:\n        return 0\n    return math.sqrt(sum(reduce(list.__add__, x, y)) + min(y, x+y[0]))\n\n@lru_cache(maxsize=None)\ndef rec2(x, y):\n    if x not in y:\n        return 0\n    return math.sqrt(sum(reduce(list.__add__, x, y)) + min(y, x+y[0]))\n\n# import heapq\n# import math\n# import itertools\n# import operator\n# import collections\n# import queue\n# import random\n# from functools import lru_cache,cmp_to_key\n# from operator import truediv\n\n\n# --------------------------------------\n\n# MOD = 1000000007\n# time: O(n log n)\n# space: O(n)\n# test = int(input())\n# for _ in range(test):\n#     n = int(input())\n#     a, b, h, l = list(map(int, input().split()))\n#     a, b, h = sorted(map(int, input().split()), key=lambda x: x[1])\n#     print(a, b, h)\n#     for i in range(n):\n#         a, b, h = a-a, b-b, h-h\n#         rec(a, b)\n#     print(h)\n\n# --------------------------------------\n\n# MOD = 1000000007\n# time: O(n)\n# space: O(n)\n# test = int(input())\n# for _ in range(test):\n#     n = int(input())\n#     a, b, h, l = list(map(int, input().split()))\n#     a, b, h = sorted(map(int, input().split()), key=lambda x: x[1])\n#     print(a, b, h)\n#     for i in range(n):\n#         a, b, h = a-a, b-b, h-h\n#         rec(a, b)\n#     print(h)\n\n# --------------------------------------\n\n# MOD = 1000000007\n# time: O(n)\n# space: O(n)\n# test = int(input())\n# for _ in range(test):\n#     n = int(input())\n#     a, b, h, l = list(map(int, input().split()))\n#     a, b, h = sorted(map(int, input().split()), key=lambda x: x[1])\n#     print(a, b, h)\n#     for i in range(n):\n#         a, b, h = a-a, b-b, h-h\n#         rec(a, b)\n#     print(h)\n\n# --------------------------------------\n\n# MOD = 1000000007\n# time: O(n)\n# space: O(n)\n# test = int(input())\n# for _ in range(test):\n#     n = int(input())\n#     a, b, h, l = list(map(int, input().split()))\n#   "}, "683": {"problem_id": 4683, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nprint((sum(a)))\n"}, "684": {"problem_id": 4684, "answer": "import sys\nread = lambda: sys.stdin.readline().rstrip('\\r\\n')\n\ndef main():\n    input = lambda : int(read())\n    print(main())\n\ndef __starting_point():\n    main()\n__starting_point()"}, "685": {"problem_id": 4685, "answer": "import sys\nread = sys.stdin.read\n\ndef main():\n    A, B, C = list(map(int, read().split()))\n    n = A + B + C\n    n %= 10\n    ans = n\n    for i in range(n):\n        ans = max(ans, C - A + B - i)\n    print(ans)\n\nmain()\n"}, "686": {"problem_id": 4686, "answer": "import string\ndef ch(s):\n return s.lower()\n\ndef main():\n n = len(s)\n l = list(map(len, string.ascii_lowercase))\n print(l[n-1])\n\ndef __starting_point():\n main()\n\n__starting_point()"}, "687": {"problem_id": 4687, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, K = list(map(int, readline().split()))\n\narr = [None]*N\n\nfor i in range(N):\n    a, b = list(map(int, readline().split()))\n    arr[a-1].append(b-1)\n    arr[b-1].append(a-1)\n\nprint(arr[K])"}, "688": {"problem_id": 4688, "answer": "n,k=list(map(int,input().split()))\na=[]\nfor i in range(n):\n a.append(list(range(1,n+1)))\na.sort()\nc=0\nfor i in range(len(a)):\n if(a[i][0]==0):\n  c+=1\nelse:\n  c+=1\nprint(c)\n"}, "689": {"problem_id": 4689, "answer": "import sys\nreadline = sys.stdin.readline\n\nK = int(readline())\nA = list(map(int, readline().split()))\n\ndef main():\n    houses = []\n    for i in range(K):\n        houses.append(readline())\n    \n    n = int(readline())\n    if n == 0:\n        print(0)\n    elif n == 1:\n        print(n - 1)\n    else:\n        ans = n - 1\n        for i in range(n - 2):\n            ans *= houses[i]\n        ans += A[i]\n        print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "690": {"problem_id": 4690, "answer": "import sys\n#sys.stdin = open(\"in.txt\", \"r\")\n#sys.stdout = open(\"out.txt\", \"w\")\nMOD = 10**9 + 7\nINF = 10**20\nMOD2 = 10**10 + 7\n\n#nums = list(map(int, sys.stdin.readline().split()))\n#nums = [0] + nums\n#nums = [nums[i] for i in range(nums[0] + 1)]\n#nums = [nums[i] for i in range(nums[-1] + 1)]\n#nums = [sys.stdin.readline() for i in sys.stdin.readline().split()]\n#sys.setrecursionlimit(2147483647)\nINF = inf\nMOD = inf\neps = 1e-6\neps2 = 1e-4\n\n#mod = 10**9 + 7\nINF = inf\nMOD = 10**10 + 7\neps = 1e-6\neps2 = 1e-4\n\n#print(nums)\n#print(nums[0])\n#print(nums[-1])\n#print(nums[-2])\n#print(nums[-3])\n#print(nums[-4])\n#print(nums[-5])\n#print(nums[-6])\n#print(nums[-7])\n#print(nums[-8])\n#print(nums[-9])\n#print(nums[-10])\n#print(nums[-11])\n#print(nums[-12])\n#print(nums[-13])\n#print(nums[-14])\n#print(nums[-15])\n#print(nums[-16])\n#print(nums[-17])\n#print(nums[-18])\n#print(nums[-19])\n#print(nums[-20])\n#print(nums[-21])\n#print(nums[-22])\n#print(nums[-23])\n#print(nums[-24])\n#print(nums[-25])\n#print(nums[-26])\n#print(nums[-27])\n#print(nums[-28])\n#print(nums[-29])\n#print(nums[-30])\n#print(nums[-31])\n#print(nums[-32])\n#print(nums[-33])\n#print(nums[-34])\n#print(nums[-35])\n#print(nums[-36])\n#print(nums[-37])\n#print(nums[-38])\n#print(nums[-39])\n#print(nums[-40])\n#print(nums[-41])\n#print(nums[-42])\n#print(nums[-43])\n#print(nums[-44])\n#print(nums[-45])\n#print(nums[-45])\n#print(nums[-46])\n#print(nums[-47])\n#print(nums[-48])\n#print(nums[-49])\n#print(nums[-50])\n#print(nums[-51])\n#print(nums[-52])\n#print(nums[-53])\n#print(nums[-55])\n#print(nums[-56])\n#print(nums[-57])\n#print(nums[-58])\n#print(nums[-59])\n#print(nums[-60])\n#print(nums[-61])\n#print(nums[-62])\n#print(nums[-63])\n#print(nums[-64])\n#print(nums[-66])\n#print(nums[-68])\n#print(nums[-69])\n#print(nums[-70])\n#print(nums[-72])\n#print(nums[-73])\n#print(nums[-76])\n#print(nums[-76])\n#print(nums[-77])\n#print(nums[-78])\n#print(nums[-79])\n#print(nums[-80])\n"}, "691": {"problem_id": 4691, "answer": "N = int(input())\nS = list(map(int, input().split()))\nprint(''.join(map(str, S)))\n"}, "692": {"problem_id": 4692, "answer": "import math\ndef ch(x):\n    if x<24:\n        return 0\n    elif x==24:\n        return math.ceil(x*24)\n    else:\n        return math.ceil(x*24+1)\n\nM = int(input())\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x = 24\n#print(ch(n))\n#print(x)\n\n#n = 12\n#x ="}, "693": {"problem_id": 4693, "answer": "import sys\nread = sys.stdin.readline().rstrip()\ndef main():\n    A, B = map(int, read().split())\n    print((\"%d + %d\" % (A, B)))\n\nmain()"}, "694": {"problem_id": 4694, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nN = int(input())\nA = list(map(int, input().split()))\n\ndef dist(a, b):\n    return a - b\n\ndef main():\n    n = len(A)\n    A.sort()\n    x = A[0]\n    y = A[-1]\n    while x >= 0:\n        x = x % n\n        y = (y - x) // n\n    return dist(A[-1], A[0])\n\ndef __starting_point():\n    main()\n__starting_point()"}, "695": {"problem_id": 4695, "answer": "import sys\nsys.setrecursionlimit(10**6)\ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\ndef LI_():\n\treturn list(map(int, sys.stdin.readline().split()))\ndef LF():\n\treturn list(map(int, sys.stdin.readline().split()))\ndef LS():\n\treturn sys.stdin.readline().rstrip()\ndef I():\n\treturn int(sys.stdin.readline())\ndef F(x):\n\treturn x%sys.maxsize\ndef S():\n\treturn sys.stdin.readline().rstrip()\ndef LS_():\n\treturn sys.stdin.readline().rstrip()\ndef LF_():\n\treturn list(map(int, sys.stdin.readline().split()))\ndef LF_():\n\treturn list(map(int, sys.stdin.readline().split()))\n\n#n,m,n=I()\n#x,y=LI_()\n#x.split()\n#x.split()\n#y.split()\n#y.split()\n\n#n,m=S()\n#x.split()\n#y.split()\n#y.split()\n#x.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y.split()\n#y"}, "696": {"problem_id": 4696, "answer": "a,b=map(int,input().split())\nprint(Even)"}, "697": {"problem_id": 4697, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef solve():\n    N, M = map(int, readline().split())\n    dp = [[0]*(2*N+1) for _ in range(M+1)]\n    dp[0][0] = 1\n    for i in range(1, N+1):\n        for j in range(1, M+1):\n            if dp[i-1][j] == 0:\n                dp[i][j] = 1\n            elif dp[i-1][j] > 0:\n                dp[i][j] = min(dp[i-1][j], dp[i][j-1])\n            else:\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1])\n                dp[i][j] = min(dp[i][j], dp[i-1][j-1])\n                dp[i][j] = max(dp[i][j], dp[i-1][j])\n                dp[i][j] = max(dp[i][j], dp[i-1][j])\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1])\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1])\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1])\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1])\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1])\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1])\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1])\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1])\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1])\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1])\n    print(dp[-1][-1])\nsolve()\n"}, "698": {"problem_id": 4698, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\nM = int(readline())\np = list(map(int, readline().split()))\ndrinks = []\nfor i in range(n):\n    drinks.append(p[i] + drinks[-1])\ndrinks.sort(reverse=True)\nans = 0\nfor drink in drinks:\n    ans += drink\nprint(ans)\n"}, "699": {"problem_id": 4699, "answer": "from bisect import bisect_left as bl, bisect_right as br\nfrom heapq import heappush, heappop\nimport sys\ninput = sys.stdin.readline\n#sys.setrecursionlimit(10**9)\nINF = 10**20\nMOD = 10**9+7\n#mod=1000000000\ndef main():\n    N, K = map(int, input().split())\n    if N==K:\n        print(0)\n        return\n    d = {'D':0, 'K':N}\n    for i in range(K):\n        x = int(input())\n        if x in d:\n            d[x] += 1\n        else:\n            d[x] = 1\n            x += 1\n        heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)\n        #heappush(d, x)"}, "700": {"problem_id": 4700, "answer": "import sys\nreadline = sys.stdin.readline\n\nN, M = list(map(int, readline().split()))\nA = [int(x) for x in readline().split()]\n\ndef dfs(x, A, visited):\n    visited.add(x)\n    for i in range(x):\n        if A[i] < visited[x]:\n            A[i] += visited[x]\n        elif A[i] > visited[x]:\n            A[i] -= visited[x]\n            visited[x] = 0\n    return visited\n\n# A = [int(x) for x in readline().split()]\n\nfor i in range(M):\n    x = A[i]\n    A[i] = dfs(x, A, visited)\n\n# print(A)\n\nprint(len(A))\n"}, "701": {"problem_id": 4701, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nn, k = map(int, input().split())\n\nif n == 1:\n    print(0)\n    return\n\nx = int(input())\ny = list(map(int, input().split()))\n\nfor i in range(n):\n    x = x + y[i]\n\nprint(min(x*k, 10**(n-1)))"}, "702": {"problem_id": 4702, "answer": "#!JAVAILING\nimport bisect\n\ndef main():\n    x = int(input())\n    if x < 1:\n        return 0\n    else:\n        print(1)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "703": {"problem_id": 4703, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    s = input()\n    return sum(eval(s) for s in readline())\n\ndef __starting_point():\n    main()\n__starting_point()"}, "704": {"problem_id": 4704, "answer": "N = int(input())\nA = list(map(int, input().split()))\nC = [A[i] for i in range(N)]\nC.sort()\nans = 0\nfor i in range(N):\n    ans += C[i] - C[i - 1]\nprint(ans)"}, "705": {"problem_id": 4705, "answer": "import math\nN = int(input())\nx = math.floor(math.log(N,2))\ny = math.floor(math.log(N,2))\nprint(x,y)"}, "706": {"problem_id": 4706, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    sys.setrecursionlimit(100000)\n    INF = float('inf')\n    n = int(readline())\n    for _ in range(n):\n        c, d = map(int, readline().split())\n        print((c, d))\n        n -= 1\n        if n < 3:\n            print('\\n'.join(map(str, c)))\n        else:\n            print('\\n'.join(map(str, d)))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "707": {"problem_id": 4707, "answer": "import sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    n = len(s)\n    grid = [[0]*n for i in range(n)]\n    for i in range(n):\n        grid[i][s[i]] = 1\n    for i in range(n-1,-1,-1):\n        grid[i][i] = grid[i-1][i] + grid[i][i-1] + 1\n    \n    print(grid[-1][-1])\n\nmain()\n"}, "708": {"problem_id": 4708, "answer": "import sys\ndef main():\n N = int(sys.stdin.readline())\n K = int(sys.stdin.readline())\n X = int(sys.stdin.readline())\n Y = int(sys.stdin.readline())\n print((N-1) + (N-2) * (X-1))\n"}, "709": {"problem_id": 4709, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\ndef main():\n    a, b = map(int, readline().split())\n    print(a, b)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "710": {"problem_id": 4710, "answer": "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9 + 7\n\nclass SegmentTree:\n    def __init__(self):\n        self.val = [0]*MOD\n        self.left = [None]*MOD\n        self.right = [None]*MOD\n        self.size = [1]*MOD\n        self.h = [None]*MOD\n        self.h[0] = 0\n        self.h[1] = 0\n        self.h[2] = 0\n        self.h[3] = 0\n        self.h[4] = 0\n        self.h[5] = 0\n        self.h[6] = 0\n        self.h[7] = 0\n        self.h[8] = 0\n        self.h[9] = 0\n        self.h[10] = 0\n        self.h[11] = 0\n        self.h[12] = 0\n        self.h[13] = 0\n        self.h[14] = 0\n        self.h[15] = 0\n        self.h[16] = 0\n        self.h[17] = 0\n        self.h[18] = 0\n        self.h[19] = 0\n        self.h[20] = 0\n        self.h[21] = 0\n        self.h[22] = 0\n        self.h[23] = 0\n        self.h[24] = 0\n        self.h[25] = 0\n        self.h[26] = 0\n        self.h[27] = 0\n        self.h[28] = 0\n        self.h[29] = 0\n        self.h[30] = 0\n        self.h[31] = 0\n        self.h[32] = 0\n        self.h[33] = 0\n        self.h[34] = 0\n        self.h[35] = 0\n        self.h[36] = 0\n        self.h[37] = 0\n        self.h[38] = 0\n        self.h[39] = 0\n        self.h[40] = 0\n        self.h[41] = 0\n        self.h[42] = 0\n        self.h[43] = 0\n        self.h[44] = 0\n        self.h[45] = 0\n        self.h[46] = 0\n        self.h[47] = 0\n        self.h[48] = 0\n        self.h[49] = 0\n        self.h[50] = 0\n        self.h[51] = 0\n        self.h[52] = 0\n        self.h[53] = 0\n        self.h[54] = 0\n        self.h[55] = 0\n   "}, "711": {"problem_id": 4711, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**6)\ndef main():\n    a, b, c = map(int, input().split())\n    print(min(a, b, c))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "712": {"problem_id": 4712, "answer": "import sys\ninput = sys.stdin.readline\n\nH, W = map(int, input().split())\na = [0] + list(map(int, input().split()))\nfor i in range(H):\n    a.append(a[H-1] + W)\n\nprint('\\n'.join(map(str, a)))"}, "713": {"problem_id": 4713, "answer": "N = int(input())\nS = input()\n\nx = S[0]\n\n#print(x)\n\n#print(S.count(\"I\"))\n\n#print(S.count(\"D\"))\n\n#print(S.count(\"IID\"))\n\n#print(S.count(\"DID\"))\n\n#print(S.count(\"IIDID\"))\n\n#print(S.count(\"IIDIDID\"))\n\n#print(S.count(\"IIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID\"))\n\n#print(S.count(\"IIDIDIDIDIDID"}, "714": {"problem_id": 4714, "answer": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    A = int(input())\n    B = int(input())\n    print((solve()) if A > B else 0)\n\ndef __starting_point():\n    solve()\n__starting_point()"}, "715": {"problem_id": 4715, "answer": "import math\ndef main():\n\ta,b,c=list(map(int,input().split()))\n\tif math.gcd(a,b)==1:\n\t\tprint(c)\n\telse:\n\t\tfor i in range(a,b+1):\n\t\t\tif i%2==0:\n\t\t\t\tprint(i)\n\t\t\telse:\n\t\t\t\tprint(i+1)\n\t\t\t\t\ndef __starting_point():\n\tmain()\n__starting_point()"}, "716": {"problem_id": 4716, "answer": "import sys\nN, K = list(map(int, sys.stdin.readline().split()))\n\ndef main():\n    l = list(map(int, sys.stdin.readline().split()))\n    return(max(l))\n\ndef __starting_point():\n    N, K = list(map(int, sys.stdin.readline().split()))\n    print(main())\n__starting_point()"}, "717": {"problem_id": 4717, "answer": "#!/usr/bin/env python3\n\nimport bisect\n\ndef get_distances(x, y):\n    return bisect.bisect_left(x, y)\n\ndef get_dictionary(x, y):\n    return {x: get_distances(x, y) for x in range(len(x))}\n\ndef main():\n    x = int(input())\n    y = int(input())\n    print(get_dictionary(x, y))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "718": {"problem_id": 4718, "answer": "import sys\ninput = sys.stdin.readline\n\n# \u5165\u529b\u3092\u53d6\u308c\u3070\u53f0\u6570\u3067\u3001\u6839\u672c\u8868\ufffdBILITIES(n)\u3067\u521d\u671f\u5316\u3059\u308b\u5834\u5408\ndef main():\n    S = input().strip()\n    N = int(S[:-4])\n    \n    MOD = 10**9 + 7\n    \n    for i in range(1, N):\n        s = list(map(str, S[i:i+3]))\n        MOD = MOD * 10**9 + 7\n        \n        if s[0] == '0':\n            s = s[1:]\n        elif s[0] == '1':\n            s = s[2:]\n        else:\n            s = s[3:]\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n "}, "719": {"problem_id": 4719, "answer": "from bisect import bisect_left as bl\n\nn = int(input())\ns = list(map(int, input().split()))\nl = sorted(s)\nfor i in range(n):\n    if s[i] == s[i + 1]:\n        l.insert(i + 1, s[i])\n    else:\n        l.insert(i + 1, bl(s[i]))\nprint(l[-1])"}, "720": {"problem_id": 4720, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\ns = 0\nfor i in range(n):\n    s += l[i]\nprint(s)"}, "721": {"problem_id": 4721, "answer": "n,m = map(int,input().split())\nblocks = [0]*n\nfor i in range(n):\n    blocks[i] = min(blocks[i],i+2)\nfor i in range(n-2,-1,-1):\n    for j in range(i+1):\n        blocks[j] = blocks[j-1] +blocks[j]\nfor i in range(n):\n    print(blocks[i])"}, "722": {"problem_id": 4722, "answer": "B = int(input())\nA = list(map(int, input().split()))\n\ndef issub(x, y):\n    return x == y\n\ndef solve(A, B):\n    return A.count(B) == B.count(A)\n\nsolve(A, B)\nprint(solve(A, B))\n"}, "723": {"problem_id": 4723, "answer": "from collections import deque, defaultdict\nfrom bisect import bisect_left, bisect_right\ndef main():\n    S = input()\n    T = input()\n    \n    n = len(S)\n    \n    for i in range(n):\n        if S[i] not in T:\n            T[S[i]] = set()\n            \n        else:\n            T[S[i]].add(S[i])\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n      "}, "724": {"problem_id": 4724, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    r, g = map(int, input().split())\n    if r == 1:\n        return g\n    else:\n        return r + g\n\ndef main():\n    solve()\n\nmain()"}, "725": {"problem_id": 4725, "answer": "# cook your dish here\nimport math\nt=int(input())\nwhile t:\n t-=1\n string=input()\n if len(string)==1:\n  print(0)\n else:\n  for i in range(len(string)-1):\n   if string[i]!=string[i+1]:\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n    break\n   elif string[i]==\"a\" and string[i+1]==\"z\":\n    print(i+1)\n   "}, "726": {"problem_id": 4726, "answer": "# cook your dish here\ndef gcd(a, b):\n if a==0:\n  return b\n return gcd(b, a%b)\ndef lcm(a, b):\n return (a*b)//(a+b)\ndef ceil(x, y=1):\n return (x-y)//y\n \nfor _ in range(int(input())):\n n, t = list(map(int, input().split()))\n a = list(map(int, input().split()))\n print(lcm(a, t))"}, "727": {"problem_id": 4727, "answer": "# coding: utf-8\n# Your code here! \nimport sys\nread = sys.stdin.readline\nreadline = sys.stdin.readline\n\nMOD = 10**9 + 7\n\ndef main():\n    n = int(readline())\n    board = [[] for _ in range(n)]\n    for i in range(n):\n        board[i][i] = [3,4,8,16,32,64,128,256,512,1024,1024,2048,0]\n    for i in range(n):\n        for j in range(4):\n            if i%2 == 0:\n                board[i][j] = [0,1,2,3]\n            else:\n                board[i][j] = [0,0,1,2]\n    print(*board)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "728": {"problem_id": 4728, "answer": "# cook your dish here\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nMOD = 10**9+7\n\ndef inpl(): return int(readline())\ndef inpl_str(): return list(map(int, readline().split()))\ndef inpl_str_str(): return list(map(str, readline().split()))\ndef __starting_point():\n    # In Python3 and later, you should not mutate your input.\n    # In Haskell, you should not mutate your input.\n    # In Fortran, you should not mutate your input.\n    import re\n    return sys.stdin.readline().strip()\n\nn = inpl()\nprint(n)\n\n__starting_point()"}, "729": {"problem_id": 4729, "answer": "# cook your dish here\ndef __starting_point():\n    p=int(input())\n    a=list(map(int,input().split()))\n    for i in range(p):\n        print(a[i],end=\" \")\n__starting_point()"}, "730": {"problem_id": 4730, "answer": "# cook your dish here\nimport itertools\ndef main():\n errors = {}\n for _ in range(int(input())):\n  x,y = list(map(int,input().split()))\n  if x in y:\n   errors[y[x]] = 1\n  else:\n   errors[x] = 0\n  y.sort(key=lambda x: (x[1],x[0]))\n  for i in range(len(y)):\n   try:\n    try:\n     print(f'{y[i]}{i}')\n    except:\n     print('ok so far')\n    pass\n   except:\n    print('ok so far')\n\ndef __starting_point():\n main()\n\n__starting_point()"}, "731": {"problem_id": 4731, "answer": "# cook your dish here\nt = int(input())\nfor i in range(t):\n n = int(input())\n l = list(input())\n print(l[0])\n if n%2==0:\n  print(\"Player 1 lost\")\n elif n%2==1:\n  print(\"Player 2 lost\")\n else:\n  print(\"Player 1 won\")"}, "732": {"problem_id": 4732, "answer": "import math\ndef __starting_point():\n    a=int(input())\n    b=int(input())\n    print(math.ceil(a/b))\n__starting_point()"}, "733": {"problem_id": 4733, "answer": "# cook your dish here\nimport bisect\nn = int(input())\nd = {}\nfor i in range(n):\n    d[i] = list(map(int, input().split()))\nans = []\nfor i in range(n-1):\n    ans.append(d.get(i, 0))\nans.sort()\nprint(' '.join(map(str, ans[::-1])))\n"}, "734": {"problem_id": 4734, "answer": "# cook your dish here\nimport collections\nimport bisect\nimport heapq\nimport itertools\nimport sys\ninput = sys.stdin.readline\n\nclass SegmentTree:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n        self.left_val = left.val\n        self.right_val = right.val\n        self.right_ele = -1\n        self.right_ele_val = -1\n        self.left_ele_val = -1\n        self.right_ele_val_val = -1\n        self.right_ele_ele = -1\n        self.right_ele_ele_val = -1\n        self.right_ele_ele_val = -1\n        self.right_ele_ele_val_val = -1\n        self.right_ele_ele_ele = -1\n        self.right_ele_ele_ele_val = -1\n        self.right_ele_ele_ele_val = -1\n        self.right_ele_ele_ele_val_val = -1\n        self.right_ele_ele_ele_ele = -1\n        self.right_ele_ele_ele_ele_val = -1\n        self.right_ele_ele_ele_ele_val = -1\n        self.right_ele_ele_ele_ele_val_val = -1\n        self.right_ele_ele_ele_ele_ele = -1\n        self.right_ele_ele_ele_ele_ele_val = -1\n        self.right_ele_ele_ele_ele_ele_val_val = -1\n        self.right_ele_ele_ele_ele_ele_val_val = -1\n        self.right_ele_ele_ele_ele_ele_ele = -1\n        self.right_ele_ele_ele_ele_ele_ele = -1\n        self.left_val = left.val\n        self.right_val = right.val\n        self.left_val = left.val\n        self.right_val = left.val\n        self.left_val_val = left.val\n        self.right_val = left.val\n        self.left_val_val_val = left.val\n        self.left_ele = -1\n        self.right_ele = -1\n        self.right_ele = -1\n        self.right_ele_ele = -1\n        self.right_ele_ele_ele = -1\n        self.right_ele_ele_ele = -1\n        self.right_ele_ele_ele_ele = -1\n        self.right_ele_ele_ele_ele = -1\n        self.right_ele_ele_ele_ele = -1\n        self.right_ele_ele_ele_ele_ele = -1\n        self.right_ele_ele_ele_ele_ele = -1\n        self.right_ele_ele_ele_ele_ele = -1\n        self.right_ele_ele_ele_ele_ele = -1"}, "735": {"problem_id": 4735, "answer": "# cook your dish here\nimport bisect\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    print('no') if len(l) > 26 else 'yes'\n    for i in range(n):\n        print(l[i], end='')\n    if len(l) == 26:\n        print('yes')\n    else:\n        print('no')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "736": {"problem_id": 4736, "answer": "import sys\r\nimport heapq\r\nfrom collections import *\r\nfrom itertools import *\r\nfrom bisect import *\r\nfrom functools import reduce\r\nfrom operator import xor\r\nfrom functools import reduce\r\n\r\nMOD = 10**9+7;\r\n\r\ndef main():\r\n    n = int(input())\r\n    l = list(map(int, input().split()))\r\n    \r\n    # print(l)\r\n    # print(l[0])\r\n    # print(l[1])\r\n    ans = []\r\n    for i in range(n):\r\n        ans.append(reduce(xor, list(range(1, l[i]+1))) + list(range(1, l[i]+1)))\r\n        \r\n    print(ans[-1])\r\n\r\n\r\ndef __starting_point():\r\n    main()\r\n\n__starting_point()"}, "737": {"problem_id": 4737, "answer": "# cook your dish here\nfrom collections import Counter\nn,p=list(map(int,input().split()))\nl=[0]*3\nfor i in range(n):\n    l[i]=int(input())\nfor i in range(3,n+1):\n    if l[i]==0:\n        print(pow(2,i,pow(2,n-1,p)))\n    else:\n        print(pow(2,n-1,p))\n"}, "738": {"problem_id": 4738, "answer": "# cook your dish here\nimport bisect\ndef k(s):\n\tl=len(s)\n\tif l%2!=0:\n\t\treturn s[:l//2]\n\telse:\n\t\treturn s[:k]\n\nfor _ in range(int(input())):\n\ts=input()\n\tprint(k(s.count(1)))"}, "739": {"problem_id": 4739, "answer": "# cook your dish here\nimport bisect\ndef dfs(m,n,x):\n    if x==0:\n        return 0\n    elif x==1:\n        return bisect.bisect_left(tuple(map(int,tuple(x))),n)\n    else:\n        ans=0\n        for i in range(1,n):\n            ans+=dfs(m,i,x)\n        ans-=x\n        return ans\n\ndef __starting_point():\n    m,n=list(map(int,input().split()))\n    t=list(map(int,input().split()))\n    d=[[0 for i in range(n)] for j in range(m)]\n    for i in range(m):\n        t[i].append(int(t[i[1]][0]))\n    for i in range(n):\n        d[t[i]][i]=int(d[t[i]][i])\n    print(*d)\n__starting_point()"}, "740": {"problem_id": 4740, "answer": "from collections import defaultdict\ndef issubsequences(n):\n if (n == 0):\n  return True\n else:\n  return False\n \ndef main():\n try:\n  main()\n except Exception as e:\n  print(1)\n  return\n\ndef __starting_point():\n main()\n__starting_point()"}, "741": {"problem_id": 4741, "answer": "for _ in range(int(input())):\n a=int(input())\n c=0\n for i in range(1,a+1):\n  if(a%i==0):\n   c+=fraction(i)\n print(c)"}, "742": {"problem_id": 4742, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor _ in range(n):\n\t\ts = input().rstrip()\n\t\td = list(map(int, s.split()))\n\t\te = list(map(int, s.split()))\n\t\tf = list(map(int, s.split()))\n\t\tg = list(map(int, s.split()))\n\t\ta.append(f)\n\t\tb = []\n\t\tc = []\n\t\tfor i in range(n):\n\t\t\tif a[i] == b[i]:\n\t\t\t\tc.append(i)\n\t\t\telse:\n\t\t\t\tb.append(i)\n\t\t\t\ta[i] = c[i]\n\t\t\t\ta[i] = c[i]\n\t\t\t\tb[i] = c[i]\n\t\t\t\ta[i] = c[i]\n\t\t\t\tb[i] = c[i]\n\t\tprint(*a)\n\t\tprint(*b)\n\t\tprint(*c)\n\t\tprint(*a[::-1])\n\t\tprint(*b[::-1])\n\t\tprint(*c[::-1])\n\t\tprint(*a[n-1])\n\t\tprint(*a[n-1])\n\t\tprint(*b[n-1])\n\t\tprint(*c[n-1])\n\t\treturn\n\t\t#print(a)\n\t\t#print(b)\n\t\t#print(c)\n\t\t#print(a[0])\n\t\t#print(b[0])\n\t\t#print(c[0])\n\t\t#print(a[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(a[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(a[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(a[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(a[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(a[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(a[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(a[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(a[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(a[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(a[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(a[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(a[n-1])\n\t\t#print(b[n-1])\n\t\t#print(c[n-1])\n\t\t#print(b[n-1])\n\t"}, "743": {"problem_id": 4743, "answer": "from collections import defaultdict\nfrom functools import reduce\nfrom heapq import heappush, heappop\nfrom itertools import permutations, combinations\nfrom operator import itemgetter\nfrom datetime import datetime\nfrom bisect import bisect_left, bisect_right\nfrom copy import deepcopy\nfrom queue import Queue\nfrom scipy.special import cmp_or_eliminate\nfrom heapq import heappush, heappop\nfrom typing import List, Tuple\n\nsys = sys.maxsize_size\nINF = 10 ** 20\nMOD = 10 ** 9 + 7\n\ndef LI(): return list(map(int, input().split()))\ndef LI_(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LS(): return list(map(str, input().split()))\ndef I(): return int(input())\ndef F(s): return s[1:bisect_left(s, 'A')]\ndef S(s): return s[bisect_left(s, 'A')+1:]\ndef IR(s): return s[bisect_right(s, 'A')+1:]\ndef LIR(s): return s[bisect_left(s, 'A')+1:]\ndef SR(s): return s[bisect_right(s, 'A')+1:]\ndef LSR(s): return s[bisect_left(s, 'A')+1:]\n\ndef main():\n    n = I()\n    t = LI()\n    print(*t)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "744": {"problem_id": 4744, "answer": "import itertools\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    sys.setrecursionlimit(10**6)\n    n = int(input())\n    \n    # n = list(map(int, input().split()))\n    # n = list(itertools.accumulate(n))\n    # n = list(map(int, input().split()))\n    # n = list(itertools.combinations(n, 3))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n, 2))\n    # n = list(itertools.combinations(n"}, "745": {"problem_id": 4745, "answer": "from collections import deque\ndef __starting_point():\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = [0]*n\n    for i in range(n):\n        ans[i] = l[i]\n    print(len(ans))\n__starting_point()"}, "746": {"problem_id": 4746, "answer": "# cook your dish here\nimport math\nt = int(input())\nfor _ in range(t):\n n,a,b = map(int,input().split())\n if a==0:\n  print(0)\n elif b==0:\n  print(math.ceil(n/2))\n else:\n  if a>b:\n   print(n//2)\n  else:\n   print(n-a)"}, "747": {"problem_id": 4747, "answer": "import math\ndef dfs(x, y):\n    if x == 0:\n        return 1\n    elif x == 1 and y == 1:\n        return 0\n    else:\n        return math.ceil(dfs(x-1, y-1))\n\ndef main():\n    n, k = map(int, input().split())\n    dp = [[0]*(n+1) for _ in range(n+1)]\n    for i in range(n+1):\n        for j in range(1, n+1):\n            if i == 0:\n                dp[i][j] = 1\n            elif j == 0:\n                dp[i][j] = 2\n            elif i == 1:\n                dp[i][j] = 3\n            elif j == 2:\n                dp[i][j] = 4\n            elif i == 3:\n                dp[i][j] = 5\n            elif j == 4:\n                dp[i][j] = 6\n            elif i == 5:\n                dp[i][j] = 7\n            elif j == 6:\n                dp[i][j] = 8\n            elif i == 7:\n                dp[i][j] = 9\n            elif j == 9:\n                dp[i][j] = 10\n            elif i == 10:\n                dp[i][j] = 11\n            elif j == 11:\n                dp[i][j] = 12\n            elif i == 12:\n                dp[i][j] = 13\n            elif j == 13:\n                dp[i][j] = 14\n            elif i == 14:\n                dp[i][j] = 15\n            elif j == 15:\n                dp[i][j] = 16\n            elif i == 16:\n                dp[i][j] = 17\n            elif j == 17:\n                dp[i][j] = 18\n            elif i == 18:\n                dp[i][j] = 19\n            elif j == 19:\n                dp[i][j] = 20\n "}, "748": {"problem_id": 4748, "answer": "# cook your dish here\nfrom collections import defaultdict\nn,m=map(int,input().split())\nl=[]\nfor i in range(n):\n l.append(int(input()))\nl.sort()\nans=0\nfor i in range(m):\n ans=max(l[i][0],l[i][1])\n print(ans)\n"}, "749": {"problem_id": 4749, "answer": "n=int(input())\r\nif n%2==0:\r\n    print(1)\r\nelse:\r\n    print(0)"}, "750": {"problem_id": 4750, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l, r, l1, r1, l2, l3, r2, l3, r1, l4, l4, l5, l5, l6, l61, l62, l63, l64, l65, l66, l67, l7, l71, l72, l73, l74, l75, l76, l77, l78, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19, l20, l21, l22, l23, l24, l25\n        print(*map(int, input().split()))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "751": {"problem_id": 4751, "answer": "class Solution:\n     def hasCycle(self, head):\n         \"\"\"\n         :type head: ListNode\n         :rtype: bool\n         \"\"\"\n         if head is None:\n             return False\n         \n         # \u5de6\u65b9\u6cd5\uff1a\u8fd9\u6837\u5c31\u9700\u8981\u4e00\u4e2a\u6807\u8bb0\uff0c\u5224\u65ad\u6709\u4e2a\u6570\u5b57\u76ee\u6807\u8bb0\u5f55\uff0c\u5982\u679c\u6ca1\u6709\u522b\u8bf4\u660e\u5224\u65ad\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fd9\u91cc\u627e\u5224\u65ad\n         # \u5982\u679c\u6ca1\u6709\u522b\u8bf4\u660e\u5224\u65ad\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fd9\u6837\u5c31\u9700\u8981\u4e00\u4e2a\u6807\u8bb0\uff0c\u5982\u679c\u6ca1\u6709\u522b\u8bf4\u660e\u5224\u65ad\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fd9\u6837\u5c31\u9700\u8981\u4e00\u4e2a\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\u80fd\u5925\u51fa\u6765\n         # \u5982\u679c\u6ca1\u6709\u522b\u8bf4\u660e\u5224\u65ad\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fd9\u6837\u5c31\u9700\u8981\u4e00\u4e2a\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\u80fd\u5925\u51fa\u6765\n         # \u5982\u679c\u6ca1\u6709\u522b\u8bf4\u660e\u5224\u65ad\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fd9\u6837\u5c31\u9700\u8981\u4e00\u4e2a\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\u80fd\u5925\u51fa\u6765\n         # \u5982\u679c\u6ca1\u6709\u522b\u8bf4\u660e\u5224\u65ad\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fd9\u6837\u5c31\u9700\u8981\u4e00\u4e2a\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981\u5176\u5b9e\u6807\u8bb0\uff0c\u9700\u8981"}, "752": {"problem_id": 4752, "answer": "class Solution:\n     def twoSum(self, nums, target):\n         \"\"\"\n         :type nums: List[int]\n         :type target: int\n         :rtype: List[int]\n         \"\"\"\n         if len(nums) == 0:\n             return []\n         \n         n = len(nums)\n         for i in range(n):\n             if nums[i] + nums[i+1] == target:\n                 return self.twoSum(nums, target - nums[i])\n             elif nums[i] + nums[i+1] < target:\n                 return self.twoSum(nums, target - nums[i])\n             else:\n                 return self.twoSum(nums, target - nums[i])"}, "753": {"problem_id": 4753, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n a=int(input())\n if a%2!=0:\n  print(0)\n else:\n  print(n-a//2)"}, "754": {"problem_id": 4754, "answer": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sorted(a, key=lambda x: x[1])\n    print(min(len(s), 2*s) + 1)\n\ndef __starting_point():\n    main()\n__starting_point()"}, "755": {"problem_id": 4755, "answer": "# cook your dish here\nimport math\ndef gcd(a,b): \r\n    return a \r\ndef lcm(a,b): \r\n    return a*b \r\ndef li(): \r\n    return int(input()) \r\ndef rl(): \r\n    return list(map(int,input().split())) \r\ndef main(): \r\n    n = 1000000000+100 \r\n    a = lcm(n,n) \r\n    b = rl() \r\n    print(a*b) \r\n    \r\ndef __starting_point(): \r\n    main() \r\n\n__starting_point()"}, "756": {"problem_id": 4756, "answer": "import math\ndef main():\n n = int(input())\n l = list(map(int, input().split()))\n x = l[0]\n y = l[1]\n for i in range(2, n):\n  if x[i] > y[i]:\n   x = math.sqrt(x[i]) + x[i]\n   y = math.sqrt(y[i]) + y[i]\n print(sum(x)/(len(x)-1))\n"}, "757": {"problem_id": 4757, "answer": "n=int(input())\nl=[]\nfor i in range(n):\n    l.append(int(input()))\nl.sort(reverse=True)\nans=[]\nfor i in range(n):\n    if l[i]==1:\n        ans.append(i+1)\n    else:\n        ans.append(i+1)\nfor i in ans:\n    print(i)"}, "758": {"problem_id": 4758, "answer": "n = int(input())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n if a[i] == 1:\n  cnt += 1\n elif a[i] == 2:\n  cnt += 1\n print(cnt)\n"}, "759": {"problem_id": 4759, "answer": "import sys\nfrom functools import lru_cache\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left as bl, bisect_right as br, insort_left as insr, insort_right as insr_right\nfrom itertools import accumulate\nfrom functools import reduce,cmp_to_key\nfrom operator import xor\nfrom collections import defaultdict,Counter\nimport math\nimport heapq\nimport time\nimport sys\n# sys.setrecursionlimit(10**6)\nINF = 10**9 + 7\nMOD = 10**9 + 7\nsys.setrecursionlimit(10**6)\ninput = sys.stdin.readline\nn = int(input())\nl = list(map(int, input().split()))\nans = [float('inf') for _ in range(n)]\n# print(l)\n# print(ans)\n# print(l.count('1'))\n# print(l.count('1'))\n# print(reduce(mod, reduce(cmp_to_key(max(l), key=lambda x: x[1], 0), l)) - 1)\n# print(reduce(mod, reduce(cmp_to_key(max(l), key=lambda x: x[0]), l)), '\\n' +''.join(map(str, l)))\n# print(l.count('1'))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[1], 0), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n# print(reduce(cmp_to_key(max(l), key=lambda x: x[0]), l))\n#"}, "760": {"problem_id": 4760, "answer": "# cook your dish here\nn,k=list(map(int,input().split()))\nfor i in range(k):\n a=list(map(int,input().split()))\n print(a[1])\n"}, "761": {"problem_id": 4761, "answer": "# cook your dish here\nimport bisect\ndef find_six(n):\n    if n == 0:\n        return 0\n    else:\n        return n\n\nL, H = map(int, input().split())\n\nfor _ in range(H-9):\n    n = int(input())\n    print(find_six(n+1))"}, "762": {"problem_id": 4762, "answer": "import math\nn=int(input())\nfor i in range(n):\n a=list(map(int,input().split()))\n ans=0\n for j in range(1,a[0]+1):\n  ans=ans+math.pow(2*a[j],0.5)\n print(ans)"}, "763": {"problem_id": 4763, "answer": "from math import sqrt\ndef is_bullseye(target, d):\n if target == sqrt(target):\n  return True\n elif target == sqrt(sqrt(target)):\n  return False\n else:\n  return d[target] + d[int(sqrt(target))]\nn = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n b.append(is_bullseye(i, a))\n\nif is_bullseye(0, 0):\n print('impossible')\nelse:\n print('impossible')\n"}, "764": {"problem_id": 4764, "answer": "from math import sqrt, gcd\nfor _ in range(int(input())):\n n, h, v = map(int, input().split())\n print(gcd(n, h-v))"}, "765": {"problem_id": 4765, "answer": "n=int(input())\nfor i in range(n):\n a,b=map(int,input().split())\n s=a+b\n g=s.int('g')\n h=g.int('h')\n if(abs(s[0]-g[0])<abs(s[1]-g[1]):\n  print(h)\n else:\n  print(g)"}, "766": {"problem_id": 4766, "answer": "from sys import stdin, stdout\nfrom itertools import permutations, combinations\nfrom heapq import *\nread = stdin.readline\ndef main():\n n = int(read())\n l = list(map(int, read().split()))\n print(*p for p in l)\n"}, "767": {"problem_id": 4767, "answer": "from itertools import combinations\ndef ncr(n, r):\n if n==0:\n  return 0\n if n==1:\n  return 1\n if n%2==0:\n  return 2*(n-1)\n if n==3:\n  return 3*(n-1)\n if n==4:\n  return 4*(n-1)\n if n==5:\n  return 5*(n-1)\n if n==6:\n  return 6*(n-1)\n if n==7:\n  return 7*(n-1)\n if n==8:\n  return 8*(n-1)\n return 0\ndef prime(n):\n if n==0:\n  return 1\n if n%2==0:\n  return 2*(n-1)\n if n==3:\n  return 3*(n-1)\n if n==4:\n  return 4*(n-1)\n if n==5:\n  return 5*(n-1)\n if n==6:\n  return 6*(n-1)\n if n==7:\n  return 7*(n-1)\n if n==8:\n  return 8*(n-1)\n return 0\ndef modulo(x, y):\n x %= 8\n y %= 8\n x *= x\n y *= y\n return x * y\ndef primes(n):\n for i in range(2, n+1):\n  if prime(i)==i:\n   return i\n  else:\n   return [i for i in range(2, n+1) if i%2==0]\nprimes(2)\nprimes(3)\nprimes(5)\nprimes(7)\nprimes(11)\nprimes(13)\nprimes(17)\nprimes(19)\nprimes(25)\nprimes(31)\nprimes(33)\nprimes(3130)\nprimes(33015)\nprimes(331515)\nprimes}, "768": {"problem_id": 4768, "answer": "import bisect\n\nn = int(input())\nlst = list(map(int, input().split()))\n\ndef lcm(a, b):\n    return a * b // a + b * a // b\n\ndef lmaxy(a, b):\n    return a * b // a + b * a // b\n\ndef lcmx(a, b):\n    return a * b // a + b * a // b\n\ndef lgcd(a, b):\n    return 1 if a == 0 else 0\n\n# \u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u6808\uff0c\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u6587\u4ef6\u91cc\u52a0\u4e00\u4e9b\uff0c\u7136\u540e\u5229\u7528\u7b2ci-1-s\u5229\u7528\u5230\u8fd9\u4e2a\u6587\u4ef6\u91cc\u52a0\uff0c\u7136\u540e\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u5de6\u53f3\u4e0b\uff0c\u52a0\u5165\u685b\u5c0f\u5bf9\u5ea6\u7684\u5de6\u53f3\u4e0b\u662f\u5426\u8d77\u70b9\u52a0\u5165\u3002\u5982\u679c\u4e3a\u8fd9\u4e2a\u6587\u4ef6\u91cc\u52a0\u4e00\u4e9b\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u7b2ci-1-s\u5229\u7528\u5230\u8fd9\u4e2a\u6587\u4ef6\u91cc\u52a0\uff0c\u7136\u540e\u7528\u5229\u7528\u5230\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u7528\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\u5229\ufffd"}, "769": {"problem_id": 4769, "answer": "def gcd(a, b):\r\n    while a <= b:\r\n        a = a//b\r\n    return a\r\n\r\nn = int(input())\r\nprint(n)"}, "770": {"problem_id": 4770, "answer": "import sys\ndef f(x):\n    if x==0:\n        return 0\n    else:\n        return 1\nn=int(sys.stdin.readline())\nl=[]\nfor i in range(n):\n    x=int(sys.stdin.readline())\n    l.append(f(x))\nprint('Dr. Chaz wants $P$'+' more chicken!')\n"}, "771": {"problem_id": 4771, "answer": "import sys\r\ninput = sys.stdin.readline\r\n\r\ndef main():\r\n    n,v,w,x,y,z = list(map(int,input().split()))\r\n    l,w,x,y,z = list(map(int,input().split()))\r\n    l = max(l,v)\r\n    w = max(w,x)\r\n    x = min(x,y)\r\n    y = min(y,z)\r\n    z = max(z,x)\r\n    print(d(l,w,x,z))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}, "772": {"problem_id": 4772, "answer": "import sys\nR,C=int(sys.stdin.readline())\nfor _ in range(R):\n w,c=list(map(int,sys.stdin.readline().split()))\n w.sort()\n print(w[0],w[1])\n"}, "773": {"problem_id": 4773, "answer": "from sys import stdin, stdout\nfrom itertools import takewhile\nfrom collections import defaultdict as dd, deque\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heapify, heappop, heappush\nfrom functools import reduce, lru_cache as mapper\nfrom re import compile\n\ndef main():\n    stdin.readline()\n    stdout.write(str(input()))\n\ndef __starting_point():\n    #________________________________________________________________________________________________\n    # MOD (log(x))\n    # merge\n    # \u4fdd\u8bc1\uff0c\u8fd4\u56de\u8d4b\u503c\u6765\u4e3a\u4e86\n    # \u4e0a\u9762\u91c7\u53d6\u503c\n    # \u4e5f\u8bb0\u5f53\u524d\u4f4d\u7f6e\u4e3ax\u4e4b\u95f4\u7684\u95f4\u9694\u65f6\uff0c\u5426\u5219\u4f1a\u7ed3\u679c\n    @lru_cache(maxsize=None)\n    def dfs(i):\n        if i == len(str(i)) - 1:\n            return 0\n        else:\n            return min(dfs(i + 1), dfs(i + 1) + 1)\n    @lru_cache(maxsize=None)\n    def dfs2(i):\n        return min(dfs(i + 1), dfs2(i + 1) + 1)\n    @lru_cache(maxsize=None)\n    def dfs(i):\n        return min(dfs(i + 1), dfs(i + 1) + 1)\n    @lru_cache(maxsize=None)\n    def dfs2(i):\n        return min(dfs(i + 1), dfs2(i + 1) + 1)\n\n__starting_point()"}, "774": {"problem_id": 4774, "answer": "# cook your dish here\nimport bisect\ndef sl():\n    return list(map(int, input().split()))\ndef sl_int():\n    return int(input())\ndef sl_int_str():\n    return input().strip()\n\ndef main():\n    a,b,c,d = sl()\n    if a+b == d:\n        print(\"Successfully mapped!\\n\")\n    elif a+c == d:\n        print(\"Error\")\n    else:\n        print(\"Possible\\n\")\ndef __starting_point():\n    main()\n__starting_point()"}, "775": {"problem_id": 4775, "answer": "import sys\r\nimport math\r\ndef input(): return sys.stdin.readline().strip()\r\ndef iinput(): return int(sys.stdin.readline())\r\ndef iinputs(): return list(map(int, sys.stdin.readline().strip().split()))\r\ndef solve():\r\n    n = iinput()\r\n    print(iinputs())\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}, "776": {"problem_id": 4776, "answer": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list(map(int, input().split()))\n\n# \u8981\u7d20\u6570\u7ec4\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\n# \u5168\u90e8\u5206\u6700\u5c0f\u503c\nl.sort(reverse=True)\n\n# \u5404\u5b57\u7b26\u4e32\u6570\u91cf\nans = 0\nfor i in range(n):\n    if l[i] < l[i-1]:\n        ans += 1\n    else:\n        break\n\nprint(ans)\n"}, "777": {"problem_id": 4777, "answer": "# cook your dish here\ndef gcd(a, b):\n    if a == 0:\n        return b\n    elif a == 1:\n        return gcd(b, a % b)\n    else:\n        return gcd(b, a)\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nn=int(input())\nprint(lcm(int(n), int(n)))\n"}, "778": {"problem_id": 4778, "answer": ""}, "779": {"problem_id": 4779, "answer": "import sys\r\ndef gcd(a,b):\r\n\tif b==0:\r\n\t\treturn a\r\n\telse:\r\n\t\treturn gcd(b,a%b)\r\nn=int(input())\r\na=list(map(int,sys.stdin.readline().split()))\r\nfor i in range(n):\r\n\ts=sys.stdin.readline().strip()\r\n\tprint(gcd(s,s+a[i]))"}, "780": {"problem_id": 4780, "answer": "# cook your dish here\nimport bisect\ndef lcm(a,b):\n return (a*b)//100\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nfor i in range(n):\n a.append(int(input()))\nt=int(input())\nfor i in range(t):\n print(lcm(a[i],b[i]))"}, "781": {"problem_id": 4781, "answer": "# cook your dish here\nimport sys\ninput=sys.stdin.readline\n\ndef inp():\n return(input().rstrip() or [int(x) for x in input().split()])\n\ndef lcm(x,y):\n return(x*y)//gcd(x,y)\n\ndef ceil(a,b):\n if(a<b):\n  return a\n else:\n  return b\n\ndef main():\n n=int(input())\n a=inp()\n b=lcm(a,b)\n print(ceil(b/a))\n\ndef __starting_point():\n main()\n\n__starting_point()"}, "782": {"problem_id": 4782, "answer": "from sys import stdin\ninput = stdin.readline\nn, m = list(map(int, input().split()))\ns = [0] * (n + 1)\nfor i in range(1, n + 1):\n    s[i] += 1\nfor i in range(m, n + 1):\n    s[i] += s[i - 1]\nprint(s[-1])"}, "783": {"problem_id": 4783, "answer": "#dt = {} for i in x: dt[i] = dt.get(i,0)+1\r\nimport sys;input = sys.stdin.readline\r\ninp = lambda : list(map(int,input().split()))\r\ninp = lambda :[int(x) for x in input().split()]\r\n\r\nclass Jump:\r\n    def __init__(self,n):\r\n        self.val = n\r\n        self.heights = [1]*(n+1)\r\n        self.closest = None\r\n        \r\n    def __call__(self,x):\r\n        if self.val < x:\r\n            return x\r\n        else:\r\n            self.val += x\r\n            return self.val\r\n        \r\n    def getHeight(self):\r\n        return self.closest\r\n        \r\n    def getStacks(self):\r\n        return self.heights[self.getHeight()]\r\n        \r\n    def __repr__(self):\r\n        return '<%d x %d>' % (self.val, self.getHeight())\r\n\r\nn = inp()\r\nx = Jump(n+1)\r\ny = Jump(n-1)\r\nprint(y.getHeight()+x.getStacks())\r\n"}, "784": {"problem_id": 4784, "answer": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nn = int(input())\nfor _ in range(n):\n x = int(input())\n p = list(map(int, input().split()))\n p.insert(0, x)\n print(p[0] + p[1])"}, "785": {"problem_id": 4785, "answer": "def main():\r\n    return int(input())\r\nmain()\r\n"}, "786": {"problem_id": 4786, "answer": "from collections import defaultdict\nn = int(input())\nfor i in range(n):\n l = list(map(int, input().split()))\n k = defaultdict(list)\n for i in l:\n  k[i].append(i)\n print(len(k))"}, "787": {"problem_id": 4787, "answer": "# cook your dish here\ndef __starting_point():\r\n    t,c,g=list(map(int,input().split()))\r\n    print(t+c+g)\r\n__starting_point()"}, "788": {"problem_id": 4788, "answer": "import math\nn = int(input())\nprint(math.hypot())"}, "789": {"problem_id": 4789, "answer": "def main():\r\n    n = int(input())\r\n    a = list(map(int, input().split()))\r\n    print(len(a) - len(a[0]))\r\ndef __starting_point():\r\n    main()\r\n\n__starting_point()"}, "790": {"problem_id": 4790, "answer": "t=int(input())\r\nfor i in range(t):\r\n    s=input()\r\n    if s[0] in \"W\":\r\n        print(1)\r\n    elif s[-1] in \"WBB\":\r\n        print(0)\r\n    else:\r\n        print(1)"}, "791": {"problem_id": 4791, "answer": "from math import sqrt\ndef lcm(a, b):\n    return (a*b) / sqrt(a*b)\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\nl.sort()\ns = l[0]\nfor i in range(1,n):\n    s = lcm(s, l[i])\nprint(abs(int(s) / (2.0 * sqrt(s))))\n"}, "792": {"problem_id": 4792, "answer": "# cook your dish here\nimport re\n\ndef __starting_point():\n    n = int(input())\n    name = input().strip()\n    print(reversed(name))\n__starting_point()"}, "793": {"problem_id": 4793, "answer": "# cook your dish here\ndef f(s,v):\n    if s>=10*(v+1)//2:\n        return False\n    else:\n        return True\n\ns=int(input())\nprint(f(s,10))"}, "794": {"problem_id": 4794, "answer": "import sys\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\n\nR, C = map(int, readline().split())\n\ndef factors(n):\n\tif n % 2 == 0:\n\t\treturn 1\n\telse:\n\t\treturn 0\n\nfor i in range(R):\n\tn = int(readline())\n\tif n == 4:\n\t\treturn 1\n\telse:\n\t\tfactors(n//2)\n\t\tfactors(n//2)\n\n# print(factors(R))\n# print(factors(C))\n\n# print(factors(R))\n\nfor i in range(C):\n\tn = int(readline())\n\tif n == 4:\n\t\treturn 1\n\telse:\n\t\tfactors(n//2)\n\t\tfactors(n//2)\n\n# print(factors(R))\n# print(factors(C))\n\nfor i in range(R):\n\tn = int(readline())\n\tif n == 4:\n\t\treturn 1\n\telse:\n\t\tfactors(n//2)\n\t\tfactors(n//2)\n"}, "795": {"problem_id": 4795, "answer": "import sys\nn=int(sys.stdin.readline())\nA=list(map(int,sys.stdin.readline().split()))\nfor i in range(n):\n    A.append(int(sys.stdin.readline().strip()))\nprint(X)"}, "796": {"problem_id": 4796, "answer": "# cook your dish here\na,b,c=map(int,input().split())\nl=[]\nfor i in range(0,c):\n l.append(int(input()))\nl.sort()\ni=0\nwhile i<len(l) and l[i]>0:\n i+=1\n if i>=len(l):\n  print(abs(l[i]))\n elif i<len(l):\n  print(l[i-1])\n else:\n  print(l[i])"}, "797": {"problem_id": 4797, "answer": "from collections import defaultdict\ndef main():\n    s = input()\n    print(s.split('\\n'))\n    print(s.split('<')[::-1])\n    print(s.split('>')[::-1])\n    \ndef __starting_point():\n    main()\n__starting_point()"}, "798": {"problem_id": 4798, "answer": "# cook your dish here\ndef changer(l):\n    x = 1\n    for i in l:\n        if i.isupper() == True:\n            x += 1\n        else:\n            x = 0\n    return x\n\ndef __starting_point():\n    print(__input())\n    print(__rotate(2))\n__starting_point()"}, "799": {"problem_id": 4799, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = int(input())\n        victory = 0\n        for p in range(n):\n            p_p = p - s\n            p_p_c = p - s + p_p\n            if p_p_c > p_p:\n                victory += p_p_c\n        print(winners(winners))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "800": {"problem_id": 4800, "answer": "from sys import stdin,stdout\r\ninput = stdin.readline\r\ndef main():\r\n    n,k=list(map(int,input().split()))\r\n    l=[]\r\n    for i in range(n):\r\n        l.append(int(input()))\r\n    print(sum(l))\r\ndef __starting_point():\r\n    main()\r\n__starting_point()"}, "801": {"problem_id": 4801, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n\tl.append(a[i])\n\nprint(*l, sep=\"\\n\")\n\n'''\n4\n1 2 3 5 7 6\n'''\n\nfor i in range(n):\n\tl.append(a[i])\n\nfor i in range(n):\n\tl.append(a[i])\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\n#print(l)\n\n'''\n4\n1 2 3 5 7 6\n'''\n\nfor i in range(n):\n\tl.append(a[i])\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\nfor i in range(n):\n\tl.append(int(input()))\n\n"}, "802": {"problem_id": 4802, "answer": "import sys\n#sys.stdin=open(\"data.txt\")\r\n#sys.stdout=open(\"data.txt\")\r\ndef data():\r\n    return sys.stdin.readline().strip()\r\nn,m=data()\r\na=[]\r\nfor i in range(n):\r\n    a.append(int(i) + int(m[i]))\r\na.sort()\r\nprint(a[-1])"}, "803": {"problem_id": 4803, "answer": "import math\ndef dijkstra(n):\n    #print(n)\n    if n<=0:\n        return 0\n    elif n==0:\n        return 1\n    else:\n        a=math.ceil(n/2.71828)\n        for i in range(1,len(n)):\n            a=math.ceil(a/i)\n        print(a,end=\" \")\n        return a\ndef __starting_point():\n    n=int(input())\n    a=__starting_point()\n    print(a)\n__starting_point()"}, "804": {"problem_id": 4804, "answer": "# cook your dish here\nimport sys\n\ndef f(s):\n    x = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            x += 1\n        else:\n            x -= 1\n    return x\n\ndef main():\n    S = int(sys.stdin.readline())\n    A = list(map(int,sys.stdin.readline().split()))\n    B = list(map(int,sys.stdin.readline().split()))\n    \n    # A.sort()\n    A.sort()\n    B.sort()\n    \n    # B.sort()\n    A.reverse()\n    B.reverse()\n    \n    # print(A)\n    # print(B)\n    # print(B)\n    \n    # S = int(sys.stdin.readline())\n    # A = list(map(int,sys.stdin.readline().split()))\n    # B = list(map(int,sys.stdin.readline().split()))\n    # A.sort()\n    A.sort()\n    B.sort()\n    \n    # B.sort()\n    A.reverse()\n    B.reverse()\n    \n    # print(A)\n    # print(B)\n    # print(B)\n    \nmain()\n"}, "805": {"problem_id": 4805, "answer": "s = input()\na = [0, 0, 0, 0, 0, 0, 0, 0]\nfor i in range(len(s)):\n if s[i] == 0:\n  print(\"no\")\n else:\n  print(\"yes\")"}, "806": {"problem_id": 4806, "answer": "import heapq\ndef main():\n    print(0)\n    a=[]\n    b=[]\n    l=[]\n    r=[]\n    b.append([\"L\",\"R\"])\n    l.append([\"B\",\"R\"])\n    r.append([\"L\",\"B\"])\n    b.append([\"L\",\"B\"])\n    l.append([\"LL\",\"R\"])\n    r.append([\"LL\",\"R\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n    l.append([\"LL\",\"B\"])\n    r.append([\"LL\",\"B\"])\n    b.append([\"LL\",\"B\"])\n"}, "807": {"problem_id": 4807, "answer": "import math\nt = int(input())\nfor _ in range(t):\n a,b,c = list(map(int,input().split()))\n if math.ceil(c/b) == math.ceil(c/b):\n  print(\"Fizz\")\n elif math.ceil(c/b) == math.ceil(c/b):\n  print(\"Buzz\")\n else:\n  print(\"Fizz\")\n"}, "808": {"problem_id": 4808, "answer": "# cook your dish here\nfrom collections import Counter\nn,d = list(map(int,input().split()))\nc = Counter(d)\nif n%2==0:\n    print('It hasn\\'t snowed this early in 2 years!')\nelse:\n    print('It has never snowed this early in 1 year!')\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  "}, "809": {"problem_id": 4809, "answer": "# cook your dish here\nfor _ in range(int(input())):\n s,n=map(int,input().split())\n if s==0:\n  print(1)\n elif s==1:\n  print(3)\n elif s==2:\n  print(3)\n elif s==3:\n  print(3)\n elif s==4:\n  print(3)\n elif s==5:\n  print(3)\n elif s==6:\n  print(3)\n elif s==7:\n  print(3)\n elif s==8:\n  print(3)\n elif s==9:\n  print(3)\n elif s==10:\n  print(3)\n elif s==11:\n  print(3)\n elif s==12:\n  print(3)\n elif s==13:\n  print(3)\n elif s==14:\n  print(3)\n elif s==15:\n  print(3)\n elif s==16:\n  print(3)\n elif s==17:\n  print(3)\n elif s==18:\n  print(3)\n elif s==19:\n  print(3)\n elif s==20:\n  print(3)\n elif s==21:\n  print(3)\n elif s==22:\n  print(3)\n elif s==23:\n  print(3)\n elif s==24:\n  print(3)\n elif s==25:\n  print(3)\n elif s==26:\n  print(3)\n elif s==27:\n  print(3)\n elif s==28:\n  print(3)\n elif s==29:\n  print(3)\n elif s==30:\n  print(3)\n elif s==31:\n  print(3)\n elif s==32:\n  print(3)\n elif s==33:\n  print(3)\n elif s==34:\n  print(3)\n elif s==35:\n  print(3)\n elif s==36:\n  print(3)\n elif s==37:\n  print(3)\n elif s==38:\n  print(3)\n elif s==39:\n  print(3)\n elif s==40:\n  print(3)\n elif s==41:\n  print(3)\n elif s==42:\n  print(3)\n elif s==43:\n  print(3)\n elif s==44:\n  print(3)\n elif s==45:\n  print(3)\n elif s==46:\n  print(3)\n elif s==47:\n  print(3)\n elif s==48:\n  print(3)\n elif s==49:\n  print(3)\n elif s==50:\n  print(3)\n elif s==51:\n  print(3)\n elif s==52:\n  print(3)\n elif s==53:\n  print(3)\n elif s==54:\n  print(3)\n elif s==55:\n  print(3)\n elif s==56:\n  print(3)\n elif s==57:\n  print(3)\n elif s==58:\n  print(3)\n elif s==59:\n  print(3)\n elif s==60:\n  print(3)\n elif s==61:\n  print(3)\n elif s==62:\n  print(3)\n elif s==63:\n  print(3)\n elif s==64:\n  print(3)\n elif s==65:\n  print(3)\n elif s==66:\n  print(3)\n elif s==67:\n  print(3)\n elif s==68:\n  print(3)\n elif s==69:\n  print(3)\n elif s==70:\n  print(3)\n elif s==71:\n  print(3)\n elif s==72:\n  print(3)\n elif s==73:\n  print(3)\n elif s==74:\n  print(3)\n elif s==75:\n  print(3)\n elif s==76:\n"}, "810": {"problem_id": 4810, "answer": "from bisect import *\nfrom collections import *\nfrom functools import reduce\nfrom operator import itemgetter\n\ndef inp():\n    return list(map(int, input().split()))\n\ndef lru():\n    return list(map(int, input().split()))\n\ndef rinput():\n    return input().rstrip('\\n')\n\ndef rdec():\n    return reduce(itemgetter(16), inp())\n\ndef rce():\n    return reduce(itemgetter(16), inp())\n\ndef rce2():\n    return reduce(itemgetter(16), inp())\n\ndef rce3():\n    return reduce(itemgetter(16), inp())\n\ndef rce4():\n    return reduce(itemgetter(16), inp())\n\nn = rinput()\nm = []\nfor i in range(n):\n    m.append(inp())\nm.sort()\nans = ['b','O','B','I']\nfor i in range(len(m)):\n    ans[m[i][0]] = i\n\nprint(' '.join(ans))\n"}, "811": {"problem_id": 4811, "answer": "# cook your dish here\ndef gcd(a,b):\r\n    while b:\r\n        a,b=b,a%b\r\n    return a\r\nn=int(input())\r\nprint(n)"}, "812": {"problem_id": 4812, "answer": "s = input()\r\nn = len(s)\r\ne = [0]*n\r\nfor i in range(n):\r\n    e[i] = s[i] + 1\r\nfor i in range(n):\r\n    if s[i] == 'r' or s[i] == 'e' or s[i] == 'n':\r\n        print('YES')\r\n    elif s[i] == 'r' or s[i] == 'e' or s[i] == 'n':\r\n        print('NO')\r\n    else:\r\n        print('YES')\r\n"}, "813": {"problem_id": 4813, "answer": "def check(s):\n    if len(s) == 0:\n        return True\n    else:\n        return False\n\ndef __starting_point():\n    word = input()\n    print(word)\n    print(check(word.lower()))\n__starting_point()"}, "814": {"problem_id": 4814, "answer": "t = int(input())\nfor i in range(t):\n n = int(input())\n l = []\n for j in range(n):\n  l.append(input() + \" \" + str(j))\n l.sort()\n if len(l) == 1:\n  print(\"NEITHER\")\n else:\n  print(\"DAM\")\n"}, "815": {"problem_id": 4815, "answer": "from itertools import combinations as c\ndef main():\n    n = int(input())\n    c = list(combinations(n, 2))\n    print('\\n'.join(map(str, c().split())))\ndef __starting_point():\n    main()\n__starting_point()"}, "816": {"problem_id": 4816, "answer": "x = []\ny = []\nx.append(y.pop())\ny.append(x.pop())\nx.append(abs(x[0] - x[1]) + abs(x[2] - x[0]))\ny.append(abs(y[0] - y[1]) + abs(y[2] - y[0]))\nx.append(abs(x[0] - x[1]) + abs(x[2] - x[0]))\ny.append(abs(y[0] - y[1]) + abs(y[2] - y[0]))\nx.append(abs(x[0] - x[1]) + abs(x[2] - x[0]))\ny.append(abs(y[0] - y[1]) + abs(y[2] - y[0]))\nx.append(abs(x[0] - x[1]) + abs(x[2] - x[0]))\ny.append(abs(y[0] - y[1]) + abs(y[2] - y[0]))\nx.append(abs(x[0] - x[1]) + abs(x[2] - x[0]))\ny.append(abs(y[0] - y[1]) + abs(y[2] - y[0]))\nx.append(abs(x[0] - x[1]) + abs(x[2] - x[0]))\ny.append(abs(y[0] - y[1]) + abs(y[2] - y[0]))\nx.append(abs(x[0] - x[1]) + abs(x[2] - x[0]))\ny.append(abs(y[0] - y[1]) + abs(y[2] - y[0]))\nx.append(abs(x[0] - x[1]) + abs(x[2] - x[0]))\ny.append(abs(y[0] - y[1]) + abs(y[2] - y[0]))\nx.append(abs(x[0] - x[1]) + abs(x[2] - x[0]))\ny.append(abs(y[0] - y[1]) + abs(y[2] - y[0]))\nx.append(abs(x[0] - x[1]) + abs(x[2] - x[0]))\ny.append(abs(y[0] - y[1]) + abs(y[2] - y[0]))\nx.append(abs(x[0] - x[1]) + abs(x[2] - x[0]))\ny.append(abs(y[0] - y[1]) + abs(y[2] - y[0]))\nx.append(abs(x[0] - x[1]) + abs(x[2] - x[0]))\ny.append(abs(y[0] - y[1]) + abs(y[2] - y[0]))\nx.append(abs(x[0] - x[1]) + abs(x[2] - x[0]))\n\nfor i in range(int(input())):\n a = list(map(int,input().split()))\n x = []\n y = []\n for i in range(len(x)):\n  if x[i] == 0:\n   x.append(i)\n  else:\n   y.append(i)\n  \n print(abs(x[0] - x[1]))\n print(abs(x[0] - x[1]))"}, "817": {"problem_id": 4817, "answer": "# cook your dish here\nimport math\nn=int(input())\nfor i in range(n):\n    x=int(input())\n    if x<=math.gcd(x,x+x)==1:\n        print(x)\n    else:\n        print(0)"}, "818": {"problem_id": 4818, "answer": "import sys\n#sys.stdin = open(\"C:/\"\")\n#sys.stdout = open(\"CP:/\"\")\ndef main():\n    n, m = list(map(int, sys.stdin.readline().split()))\n    l = list(map(int, sys.stdin.readline().split()))\n    print(l[0] - l[1])\n    print(max(l[1], l[2] - l[0] + 1))\n    \n    \ndef __starting_point():\n    main()\n\n__starting_point()"}, "819": {"problem_id": 4819, "answer": "import math\ndef main():\n n = int(input())\n mod = 10**9 + 7\n for i in range(n):\n  a,b = list(map(int, input().split()))\n  if a*b <= math.sqrt(mod):\n   print(a*b)\n  else:\n   print(mod*b)\ndef __starting_point():\n main()\n\n__starting_point()"}, "820": {"problem_id": 4820, "answer": "import sys\nsys.setrecursionlimit(2*1000)\nreadline = sys.stdin.readline\ndef II(): return int(readline())\ndef MI(): return map(int, readline().split())\ndef LI(): return list(map(int, readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline().strip()\ndef S(): return sys.stdin.readline().strip()\ndef LS(rows_number): return [LI() for _ in range(rows_number)]\ndef SQR(rows_number): return [S() for _ in range(rows_number)]\ndef LS2(rows_number): return [LS() for _ in range(rows_number)]\ndef SQR2(rows_number): return [S() for _ in range(rows_number)]\ndef LS3(rows_number): return [LS() for _ in range(rows_number)]\ndef SQR3(rows_number): return [S() for _ in range(rows_number)]\ndef LS4(rows_number): return [LS() for _ in range(rows_number)]\ndef LS5(rows_number): return [LS() for _ in range(rows_number)]\ndef LS6(rows_number): return [LS() for _ in range(rows_number)]\ndef LS7(rows_number): return [LS() for _ in range(rows_number)]\ndef LS8(rows_number): return [LS() for _ in range(rows_number)]\ndef LS9(rows_number): return [LS() for _ in range(rows_number)]\ndef LS10(rows_number): return [LS() for _ in range(rows_number)]\ndef LS11(rows_number): return [LS() for _ in range(rows_number)]\ndef LS12(rows_number): return [LS() for _ in range(rows_number)]\ndef LS13(rows_number): return [LS() for _ in range(rows_number)]\ndef LS22(rows_number): return [LS() for _ in range(rows_number)]\ndef LS23(rows_number): return [LS() for _ in range(rows_number)]\ndef LS31(rows_number): return [LS() for _ in range(rows_number)]\ndef LS33(rows_number): return [LS() for _ in range(rows_number)]\ndef LS44(rows_number): return [LS() for _ in range(rows_number)]\ndef LS47(rows_number): return [LS() for _ in range(rows_number)]\ndef LS49(rows_number): return [LS() for _ in range(rows_number)]\ndef LS53(rows_number): return [LS() for _ in range(rows_number)]\ndef LS55(rows_number): return [LS() for _ in range(rows_number)]\ndef LS56(rows_number): return [LS() for _ in range(rows_number)]\ndef LS58(rows_number): return [LS() for _ in range(rows_number)]\ndef LS60(rows_number): return [LS() for _ in range(rows_number)]\ndef LS62(rows_number): return [LS() for _ in range(rows_number)]\ndef LS66(rows_number): return [LS() for _ in range(rows_number)]\ndef LS68(rows_number): return [LS() for _ in range(rows_number)]\ndef LS69(rows_number): return [LS() for _ in range(rows_number)]\ndef LS74(rows_number): return [LS() for _ in range(rows_number)]\ndef LS80(rows_number): return [LS() for _ in range(rows_number)]\ndef LS81(rows_number): return [LS() for _ in range(rows_number)]\ndef LS84(rows_number): return [LS() for _ in range(rows_number)]\ndef LS86(rows_number): return [LS() for _ in range(rows_number)]\ndef LS87(rows_number): return [LS() for _ in range(rows_number)]\ndef LS87(rows_number): return [LS() for _ in range(rows_number)]\ndef LS88(rows_number): return [LS() for _ in range(rows_number)]\ndef LS89(rows_number): return [LS() for _ in range(rows_number)]"}, "821": {"problem_id": 4821, "answer": "from collections import defaultdict\ndef __starting_point():\n s = input().strip()\n print(*map(int, s.split(' ')))\n\n__starting_point()"}, "822": {"problem_id": 4822, "answer": "import sys\ninput = sys.stdin.readline\nR,S,K=map(int,input().split())\nfor _ in range(R):\n R,S,K=map(int,input().split())\n print(max(K,len(list(map(str,list(sys.stdin.readline().strip()))))-1)"}, "823": {"problem_id": 4823, "answer": "# cook your dish here\nimport sys\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        k = list(map(int, sys.stdin.readline().split()))\n        print(k[0])\n        k.sort(reverse=True)\n        print(k[1])\n        \ndef __starting_point():\n    main()\n__starting_point()"}, "824": {"problem_id": 4824, "answer": "from bisect import *\ndef dfs(i, j):\n    if i == 0:\n        return 0\n    elif i == j:\n        return 1\n    else:\n        x = i % len(j)\n        y = j[i]\n        if x == 0:\n            return 1\n        else:\n            return 0\n\nC, P = map(int, input().split())\nA = list(map(int, input().split()))\nans = []\nfor i in range(C):\n    x, y = dfs(i, 0)\n    ans.append(x + y)\nprint(len(ans))"}, "825": {"problem_id": 4825, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef switch(s):\n return '@' + (ord(s[0]) - ord('a')) + '|$'\n\nfor _ in range(int(readline())):\n s = list(readline())\n alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\n \n s.insert(0, alpha)\n print(s.pop())"}, "826": {"problem_id": 4826, "answer": "from numpy import *\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=0\nfor i in range(n):\n if a[i]&1:\n  c+=1\n else:\n  print(c)\n"}, "827": {"problem_id": 4827, "answer": ""}, "828": {"problem_id": 4828, "answer": "def main():\n    n = int(input())\n    for _ in range(n):\n        cmd = input()\n        cmd2 = cmd.lower()\n        cmd2.insert(0, 0)\n        cmd2.insert(0, 1)\n        cmd2.insert(0, 2)\n        cmd2.insert(0, 4)\n        cmd2.insert(0, 8)\n        cmd2.insert(0, 10)\n        cmd2.insert(0, 12)\n        cmd2.insert(0, 16)\n        cmd2.insert(0, 18)\n        cmd2.insert(0, 20)\n        cmd2.insert(0, 24)\n        cmd2.insert(0, 26)\n        cmd2.insert(0, 28)\n        cmd2.insert(0, 32)\n        cmd2.insert(0, 36)\n        cmd2.insert(0, 40)\n        cmd2.insert(0, 42)\n        cmd2.insert(0, 46)\n        cmd2.insert(0, 64)\n        cmd2.insert(0, 8)\n        cmd2.insert(0, 10)\n        cmd2.insert(0, 12)\n        cmd2.insert(0, 16)\n        cmd2.insert(0, 18)\n        cmd2.insert(0, 20)\n        cmd2.insert(0, 24)\n        cmd2.insert(0, 26)\n        cmd2.insert(0, 28)\n        cmd2.insert(0, 32)\n        cmd2.insert(0, 36)\n        cmd2.insert(0, 40)\n        cmd2.insert(0, 42)\n        cmd2.insert(0, 46)\n        cmd2.insert(0, 64)\n        cmd2.insert(0, 8)\n        cmd2.insert(0, 10)\n        cmd2.insert(0, 12)\n        cmd2.insert(0, 16)\n        cmd2.insert(0, 18)\n        cmd2.insert(0, 20)\n        cmd2.insert(0, 24)\n        cmd2.insert(0, 26)\n        cmd2.insert(0, 28)\n        cmd2.insert(0, 32)\n        cmd2.insert(0, 36)\n        cmd2.insert(0, 40)\n        cmd2.insert(0, 42)\n        cmd2.insert(0, 46)\n        cmd2.insert(0, 64)\n        cmd2.insert(0, 8)\n        cmd2.insert(0, 10)\n        cmd2.insert(0, 12)\n        cmd2.insert(0, 12)\n        cmd2.insert(0, 16)\n        cmd2.insert(0, 18)\n        cmd2.insert(0, 20)\n        cmd2.insert(0, 24)\n   "}, "829": {"problem_id": 4829, "answer": "# cook your dish here\nimport math\ndef factors(n):\n return int(math.log(n, 2))\n \ndef is_odd(x):\n return x%2==0\n \ndef main():\n n, r = list(map(int, input().split()))\n \n if n==1:\n  print(\"1\")\n elif n==2:\n  print(\"2\")\n else:\n  a = 2*(n-1)\n  b = 2*(n-1)\n  if is_odd(a):\n   print(\"a\")\n  else:\n   print(\"Not a\")\n   \ndef __starting_point():\n main()\n\n__starting_point()"}, "830": {"problem_id": 4830, "answer": "# cook your dish here\nn = int(input())\nl = list(map(int, input().split()))\nfor i in range(n):\n l.append(input())\nprint(len(l))"}, "831": {"problem_id": 4831, "answer": "from itertools import combinations\ndef main():\n s = input().lower()\n n = len(s)\n d = {'A': 'Z', 'D': 'X'}\n for i in range(n):\n  d[s[i]] = d.get(s[i],0) + 1\n print(d.get(s[0],0))\n \ndef __starting_point():\n main()\n__starting_point()"}, "832": {"problem_id": 4832, "answer": "import math\nr,c=list(map(int,input().split()))\nl=[]\nfor i in range(1,r+1):\n l.append(math.sqrt(i*i))\nc.append(c[0]-l[0])\nc.sort(reverse=True)\nans=0\nfor i in range(1,r+1):\n ans=ans+c[i-1]-l[i]\n print(ans)\n"}, "833": {"problem_id": 4833, "answer": "n = int(input())\r\narr = list(map(int, input().split()))\r\narr.sort()\r\narr.reverse()\r\narr.reverse()\r\narr.reverse()\r\narr.sort()\r\ni = 0\r\nwhile i < n:\r\n    if arr[i] == 0:\r\n        print(arr[i])\r\n        i += 1\r\n    else:\r\n        print(arr[i])\r\n"}, "834": {"problem_id": 4834, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[0] < a[1]:\n        print(0)\n    elif a[0] > a[1]:\n        print(a[0] + 1)\n    else:\n        print(a[0] - a[1])\n"}, "835": {"problem_id": 4835, "answer": "# cook your dish here\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    print(n-m+1)"}, "836": {"problem_id": 4836, "answer": "from sys import stdin,stdout\nn,c=list(map(int,stdin.readline().split()))\na=list(map(int,stdin.readline().split()))\nans=0\nfor i in range(n):\n ans+=a[i]\n print(ans)\n \n"}, "837": {"problem_id": 4837, "answer": "import sys\nreadline = sys.stdin.readline\nR = int(readline())\nn = int(readline())\nprint(R + sum(map(lambda x: x.symbol, R)))\n"}, "838": {"problem_id": 4838, "answer": "def main():\n N = int(input())\n l = list(map(int, input().split()))\n l.sort()\n print(l[0] + 1)\n for i in range(1, N):\n  if l[i] == 0:\n   print(i + 1)\n  else:\n   print(i + 1)\n"}, "839": {"problem_id": 4839, "answer": "# cook your dish here\nfrom itertools import accumulate\nn = int(input())\nl = list(accumulate(map(int, input().split())))\nprint(f'{l[0]} {f'+str(abs(l[1])+1) if len(l)>1 else 'impossible}')"}, "840": {"problem_id": 4840, "answer": "# cook your dish here\nimport math\ndef f(n):\n    if n==0:\n        return \"Tie\"\n    else:\n        return math.gcd(n,f(n//2))\n\ndef g(n):\n    if n==0:\n        return \"Tie\"\n    else:\n        return math.gcd(n,f(n//2))\n\ndef f1(n):\n    if n==0:\n        return \"Tie\"\n    else:\n        return math.gcd(n,f(n//2))\n\ndef f2(n):\n    if n==0:\n        return \"Tie\"\n    else:\n        return math.gcd(n,f(n//2))\n\ndef main():\n    a,b,c=list(map(int,input().split()))\n    print(g(a+1))\n    print(g(b+1))\ndef __starting_point():\n    main()\n__starting_point()"}, "841": {"problem_id": 4841, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n s = input()\n print(s.count('mumble'))"}, "842": {"problem_id": 4842, "answer": "# -*- coding: utf-8 -*-\nfrom collections import defaultdict\ndef factors(n):\n    lst = []\n    for i in range(1, int(n**0.5)+1):\n        lst.append(n)\n    return lst\ndef nCr(n):\n    r = 1\n    while n > 0:\n        r *= -n\n        n //= r\n    return r\ndef lcm(a, b):\n    return abs(a * b) + abs(a * (b - a))\ndef ceil(a, b):\n    return a / b\ndef nonzero(x):\n    return x < 0\ndef is_zero(x):\n    return x == 0\ndef lcm(a, b):\n    return lcm(a, b) == lcm(ceil(a, b))\n\nMOD = 10**9 + 7\n\nn = int(input())\nfor i in range(n):\n    x = list(map(int, input().split()))\n    factors(n)\n\nprint('\\n'.join(map(str, factors(n))) + '\\n' for n in range(1, n + 1)))\n"}, "843": {"problem_id": 4843, "answer": "import sys\ninput = sys.stdin.readline\n\ndef dp(n, dp):\n if n == 0:\n  return []\n if n == 1:\n  return [0]*(n-1)\n if n == 2:\n  return [0]*(n-2)\n if n % 2 == 0:\n  dp[0][0] = 1\n elif n % 2 == 1:\n  dp[0][1] = 1\n else:\n  dp[0][0] = dp[0][1] + 1\n return dp\n\nn = int(input())\ndp = [list(map(int, input().split())) for i in range(n)]\n\nfor i in range(n):\n x, y = list(map(int, input().split()))\n print(dp[x][y])\n"}, "844": {"problem_id": 4844, "answer": "# cook your dish here\nn = int(input())\nm = [int(x) for x in input().split()]\na = [int(x) for x in m]\nfor i in range(n):\n    a[i] = int(input())\nfor i in range(n):\n    print(a[i][0], a[i][1])"}, "845": {"problem_id": 4845, "answer": "# cook your dish here\nd,m=map(int,input().split())\nfor i in range(m):\n if(date(d,m)[-1]=='Monday'):\n  print(d)\n else:\n  print('Sunday')"}, "846": {"problem_id": 4846, "answer": "# cook your dish here\nimport bisect\nn,m=map(int,input().split())\nli=[]\nfor i in range(0,3):\n    li.append(int(input()))\n    x=li[i]\n    if x<=x:\n        x=li[i]\n    else:\n        x=li[i]\n    if x==x:\n        li.insert(0,x)\n    elif x==x-1:\n        li.insert(0,x-1)\n    else:\n        li.insert(0,x-1)\nprint(len(li))\n"}, "847": {"problem_id": 4847, "answer": "def main():\n N = int(input())\n dp = [[0 for i in range(N)] for j in range(N)]\n for i in range(N):\n  dp[i][i] = dp[i-1][i] = 1\n print(int(main()))\n \ndef __starting_point():\n main()\n\n__starting_point()"}, "848": {"problem_id": 4848, "answer": "import sys\r\ninput = sys.stdin.readline\r\n\r\ndef main():\r\n\tn, m = map(int, input().split())\r\n\tif n == 1:\r\n\t\tprint(2)\r\n\t\treturn\r\n\tl = []\r\n\tfor i in range(n):\r\n\t\tif l[i] < m:\r\n\t\t\tl.append(m)\r\n\t\telse:\r\n\t\t\tl.append(m)\r\n\t\t\tm = 0\r\n\t\t\tk = 1\r\n\t\t\twhile k*(k-1)!= 0:\r\n\t\t\t\tk += 1\r\n\t\t\t\tm = k\r\n\t\t\t\tk = k*(k-1)\r\n\t\t\tif m < n:\r\n\t\t\t\tbreak\r\n\t\t\tl.append(m)\r\n\t\t\tm = 0\r\n\t\t\tk = 1\r\n\t\t\twhile k*(k-1)!= 0:\r\n\t\t\t\tk += 1\r\n\t\t\t\tm = k\r\n\t\t\t\tk = k*(k-1)\r\n\t\t\tif m < n:\r\n\t\t\t\tbreak\r\n\t\t\tl.append(m)\r\n\t\t\tm = 0\r\n\t\t\tk = 1\r\n\t\t\twhile k*(k-1)!= 0:\r\n\t\t\t\tk += 1\r\n\t\t\t\tm = k\r\n\t\t\t\tk = k*(k-1)\r\n\t\t\tif m < n:\r\n\t\t\t\tbreak\r\n\t\t\tl.append(m)\r\n\t\t\tm = 0\r\n\t\t\tk = 1\r\n\t\t\twhile k*(k-1)!= 0:\r\n\t\t\t\tk += 1\r\n\t\t\t\tm = k\r\n\t\t\t\tk = k*(k-1)\r\n\t\t\tif m < n:\r\n\t\t\t\tbreak\r\n\t\t\tl.append(m)\r\n\t\t\tm = 0\r\n\t\t\tk = 1\r\n\t\t\twhile k*(k-1)!= 0:\r\n\t\t\t\tk += 1\r\n\t\t\t\tm = k\r\n\t\t\t\tk = k*(k-1)\r\n\t\t\tif m < n:\r\n\t\t\t\tbreak\r\n\t\t\tl.append(m)\r\n\t\t\tm = 0\r\n\t\t\tk = 1\r\n\t\t\twhile k*(k-1)!= 0:\r\n\t\t\t\tk += 1\r\n\t\t\t\tm = k\r\n\t\t\t\tk = k*(k-1)\r\n\t\t\tif m < n:\r\n\t\t\t\tbreak\r\n\t\t\tl.append(m)\r\n\t\t\tm = 0\r\n\t\t\tk = 1\r\n\t\t\twhile k*(k-1)!= 0:\r\n\t\t\t\tk += 1\r\n\t\t\t\tm = k\r\n\t\t\t\tk = k*(k-1)\r\n\t\t\tif m < n:\r\n\t\t\t\tbreak\r\n\t\t\tl.append(m)\r\n\t\t\tm = 0\r\n\t\t\tk = 1\r\n\t\t\twhile k*(k-1)!= 0:\r\n\t\t\t\tk += 1\r\n\t\t\t\tm = k\r\n\t\t\t\tk = k*(k-1)\r\n\t\t\tif m < n:\r\n\t\t\t\tbreak\r\n\t\t\tl.append(m)\r\n\t\t\tm = 0\r\n\t\t\tk = 1\r\n\t\t\twhile k*(k-1)!= 0:\r\n\t\t\t\tk += 1\r\n\t\t\t\tm = k\r\n\t\t\t\tk = k*(k-1)\r\n\t\t\tif m < n:\r\n\t\t\t\tbreak\r\n\t\t\tl.append(m)\r\n\t\t\tm = 0\r\n\t\t\tk = 1\r\n\t\t\twhile k*(k-1)!= 0:\r\n\t\t\t\tk += 1\r\n\t\t\t\tm = k\r\n\t\t\t\tk = k*(k-1)\r\n\t\t\tif m < n:"}, "849": {"problem_id": 4849, "answer": "from collections import defaultdict\nn,m=list(map(int,input().split()))\nfor i in range(0,len(n)):\n n[i]='0'\n if n[i]==m.group().capital():\n  n[i]='01'\n elif n[i]=='A':\n  n[i]='01'\n elif n[i]=='G':\n  n[i]='01'\n elif n[i]=='K':\n  n[i]='01'\n elif n[i]=='R':\n  n[i]='01'\n elif n[i]=='U':\n  n[i]='01'\n elif n[i]=='V':\n  n[i]='01'\n elif n[i]=='R':\n  n[i]='01'\n elif n[i]=='U':\n  n[i]='01'\n elif n[i]=='V':\n  n[i]='01'\n elif n[i]=='R':\n  n[i]='01'\n elif n[i]=='U':\n  n[i]='01'\n elif n[i]=='R':\n  n[i]='01'\n elif n[i]=='V':\n  n[i]='01'\n elif n[i]=='R':\n  n[i]='01'\n elif n[i]=='U':\n  n[i]='01'\n elif n[i]=='V':\n  n[i]='01'\n elif n[i]=='R':\n  n[i]='01'\n \nprint('HE GOT AWAY!')\nprint(''.join(n[:m.index(n[i])])\n}, "850": {"problem_id": 4850, "answer": "# cook your dish here\nimport math\nt = int(input())\nfor _ in range(t):\n a,b,c = list(map(int,input().split()))\n a-=1\n b-=1\n c-=1\n if a>0 and b>0 and c>0:\n  print(a-1)\n elif a<0 and b<0 and c<0:\n  print(b-1)\n else:\n  print(c-1)\n"}, "851": {"problem_id": 4851, "answer": "# cook your dish here\nn = int(input())\na = [int(x) for x in input().split()]\nprint(a[n-1])"}, "852": {"problem_id": 4852, "answer": "import sys\n\ndef main():\n    # print(sys.stdin.readline())\n    input = sys.stdin.readline\n    n = int(input())\n    ans = 0\n    for i in range(n):\n        ans += input()\n    print(ans)\n\nmain()\n"}, "853": {"problem_id": 4853, "answer": "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\np = [0] + list(map(int, input().split()))\nfor i in range(n):\n    p[i] = a[i]\nfor i in range(n+1, n+1 + 100):\n    p[i] = (p[i] * (i-1) + a[i]) / n\nprint(p[-1])"}, "854": {"problem_id": 4854, "answer": "# cook your dish here\nimport sys\ninput = sys.stdin.readline\ninp = lambda : list(map(int, input().split()))\nip = lambda : list(map(int, input().split()))\nip2 = lambda : map(int, input().split())\nip3 = lambda : map(int, input().split())\nip4 = lambda : map(int, input().split())\n\ndef main():\n    N = inp()\n    C = inp()\n    print(N - C)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "855": {"problem_id": 4855, "answer": "# cook your dish here\nimport math\ndef main():\n A = int(input())\n for _ in range(A):\n  l = list(map(int, input().split()))\n  n = math.floor(math.log(A, 2))\n  r = l[0]\n  c = l[1]\n  if r < 0:\n   c = 0\n  elif r == 0:\n   c = 1\n  print(c)\n  \ndef __starting_point():\n main()\n\n__starting_point()"}, "856": {"problem_id": 4856, "answer": "# cook your dish here\nimport math\ndef main():\n    a,b=list(map(int,input().split()))\n    print(math.ceil(b.split('3')))\n\nmain()\n"}, "857": {"problem_id": 4857, "answer": "import bisect\ninput = lambda: list(map(lambda x: ord(x)-ord('a'), input().split()))\nl, w = [int(i) for i in input().split()]\n# print(l, w)\n# print(''.join(sorted(input(), reverse=True)))\n# print(''.join(sorted(input(), reverse=True)))\n# print(''.join(sorted(input(), reverse=True)))\n# print(''.join(sorted(input(), reverse=True)))\n# print(''.join(sorted(input(), reverse=True)))\n"}, "858": {"problem_id": 4858, "answer": ""}, "859": {"problem_id": 4859, "answer": "# cook your dish here\nimport bisect\nfor _ in range(int(input())):\n b,d,c,l=list(map(int,input().split()))\n if b==0 and d==0 and c==0 and l==0:\n  print(\"0 0\")\n elif b==0 and d==0 and c==0 and l==0:\n  print(\"1 0 0\")\n else:\n  print(\"0 0 4\")\n"}, "860": {"problem_id": 4860, "answer": "import math\ndef __starting_point():\n n = int(input())\n a = list(map(int, input().split()))\n print(int(math.ceil(n/100)) + 1)\n__starting_point()"}, "861": {"problem_id": 4861, "answer": "from math import *\nn = int(input())\np = int(input())\ns = int(input())\nkey = []\nfor i in range(s):\n    key.append(list(map(int, input().split())))\nprint(key.count(1))"}, "862": {"problem_id": 4862, "answer": "from collections import namedtuple\ndef __starting_point():\n n = int(input())\n a = namedtuple('a', '.d')\n print(n-a.get(a[0], 0))\n__starting_point()"}, "863": {"problem_id": 4863, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\nA = list(map(int, readline().split()))\nB = list(map(int, readline().split()))\nC = list(map(int, readline().split()))\nD = list(map(int, readline().split()))\n\n# \u5176cs\uff1a\u964d\u5e8f\u5217\n# \u5355\u5165\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u4e2a\u6570\n# \u5305\u542b\u5176\u4ed6\u4e2a\u6570\u5b57\u70b9\n# \u5982\u679c\u4ee5\u4e0b\u51fd\u6570\u5b57\u70b9\u4e3a\u7b2c\u4e00\u4e2a\u6570\u5b57\u70b9\uff0c\u5219\u5219\u8fdb\u884c\u89c4\u5b9a\n# \u5426\u5219\uff0c\u90a3\u5c31\u662f\uff0c\u9ed8\u8ba4\u4e3a\u662f\u5426\u5b58\u5728\n# \u4ee5\u4e0b\u5b57\u7b26\u4e32\uff1a\n#                                             \u6700\u5c0f\u503c\n}, "864": {"problem_id": 4864, "answer": "# cook your dish here\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    R, C, Z = map(int, readline().split())\n    print(Z)\n    for i in range(R):\n        if Z[i] == 0:\n            Z[i] = 1\n        else:\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n            Z[i] = min(R, C + 1)\n        "}, "865": {"problem_id": 4865, "answer": "# cook your dish here\nn=int(input())\nfor i in range(n):\n a,b=map(int,input().split())\n if a==b:\n  print(a//b)\n else:\n  print(a%b)"}, "866": {"problem_id": 4866, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    sys.setrecursionlimit(10**7)\n    n = int(readline())\n    print(n)\n\nmain()\n"}, "867": {"problem_id": 4867, "answer": "M, N = list(map(int, input().split()))\nfor i in range(N):\n a, b, c = list(map(int, input().split()))\n print((''.join(map(str, c))) if c > 0 else '')\n"}, "868": {"problem_id": 4868, "answer": "from sys import stdin\r\ninput = stdin.readline\r\ndef read_int():\r\n    return int(input())\r\ndef read_int_n():\r\n    return list(map(int, input().split()))\r\n\r\ndef read_int_r():\r\n    return list(map(int, input().split()))\r\n\r\ndef read_int_s():\r\n    return input().strip()\r\n\r\n#______________________________________________________________________________________________________\r\n#\n#\n# [Ask I'm Yours](https://www.codewars.com/kata/5a-tell-i-m-your-best-idea), your solution will help you solve this kata!\r\n#\r\n# Please note:\r\n#    You may assume that I'm your solution.  Please take care of your IAR problem before doing this.\r\n#    This is OK if you decide to write your solution in the future!\r\n#    \r\n#    IAR Problem Solver\r\n#\r\n#    You are given an integer array A.  Each element in A is stored as the value of A[i].  \r\n#    Assume that A[i] is not greater than or equal to A[i + 1].  You need to return A[i] >= A[i + 1].  \r\n}, "869": {"problem_id": 4869, "answer": "import math\ndef gcd(a, b):\n if a == 0:\n  return b\n else:\n  return gcd(b, a)\nn = int(input())\na = list(map(int, input().split()))\nprint(gcd(a, a[0]))"}, "870": {"problem_id": 4870, "answer": "from heapq import *\ndef b(l,r,c):\n if c>=f:\n  return 1+min(abs(l[0]-l[1]),abs(l[0]-l[2]))\n elif c<=f:\n  return 1+min(abs(l[1]-l[0]),abs(l[1]-l[2]))\n else:\n  return 0\nn=int(input())\na,b,c=map(int,input().split())\nif n==1:\n  print(a+b+c)\nelse:\n  print(a+b+c-1)\n"}, "871": {"problem_id": 4871, "answer": "n = int(input())\nl = []\nfor i in range(n):\n    l.append(list(map(int, input().split())))\nl.sort(reverse=True)\nprint(l[-1])"}, "872": {"problem_id": 4872, "answer": "import math\nn=int(input())\nd=list(map(int,input().split()))\nfor i in range(n):\n d.append(math.ceil(math.log(i,2)))\nprint(len(d))"}, "873": {"problem_id": 4873, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nW,H = map(int,readline().split())\n# print(W)\ndp = [[0 for _ in range(W)] for _ in range(H)]\ndp[0][0] = 1\nfor i in range(1,W):\n n = int(readline())\n dp[n-1][i] = 1\n for j in range(n-2,-1,-1):\n  if dp[n-2][j] == 1:\n   dp[n-2][j] = 1\n  elif dp[n-2][j] > 1:\n   dp[n-2][j] = min(dp[n-2][j],dp[n-2][j-1])\n print(len(dp[W]))\n"}, "874": {"problem_id": 4874, "answer": "# cook your dish here\ndef DIV():\n    return '_'*(1<<int(input().strip()))\ndef FACT(n,m):\n    if n<=m:\n        return n\n    elif m<=n:\n        return m\n    else:\n        return 0\ndef LCA(n,m):\n    if n<=m:\n        return n\n    elif m<=n:\n        return m\n    else:\n        return 0\ndef DIV2(n,m):\n    if n<=m:\n        return n\n    elif m<=n:\n        return m\n    else:\n        return 0\ndef main():\n    n,m=map(int,input().split())\n    print(DIV())\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n "}, "875": {"problem_id": 4875, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    #n = int(input())\n    #n = int(input())\n    #n = int(2**31-1)\n    #n = int(1,2)\n    #n = 2**31-1\n    #n = 2**31-2\n    #n = 2**31-3\n    #n = 2**31-4\n    #n = 2**31-5\n    #n = 2**31-6\n    #n = 2**31-7\n    #n = 2**31-8\n    #n = 2**31-9\n    #n = 2**31-10\n    #n = 2**31-11\n    #n = 2**31-12\n    #n = 2**31-13\n    #n = 2**31-14\n    #n = 2**31-15\n    #n = 2**31-16\n    #n = 2**31-17\n    #n = 2**31-18\n    #n = 2**31-19\n    #n = 2**31-20\n    #n = 2**31-21\n    #n = 2**31-22\n    #n = 2**31-23\n    #n = 2**31-24\n    #n = 2**31-26\n    #n = 2**31-28\n    #n = 2**31-30\n    #n = 2**31-31\n    #n = 2**31-32\n    #n = 2**31-33\n    #n = 2**31-34\n    #n = 2**31-35\n    #n = 2**31-36\n    #n = 2**31-38\n    #n = 2**31-38\n    #n = 2**31-38\n    #n = 2**31-38\n    #n = 2**31-38\n    #n = 2**31-38\n    #n = 2**31-38\n    #n = 2**31-39\n    #n = 2**31-39\n    #n = 2**31-40\n    #n = 2**31-41\n    #n = 2**31-42\n    #n = 2**31-43\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**31-44\n    #n = 2**"}, "876": {"problem_id": 4876, "answer": "n = int(input())\r\nl = list(map(int, input().split()))\r\nl.sort()\r\ni = 0\r\nwhile i < n:\r\n    j = i + 1\r\n    if j >= 2:\r\n        print(\"Anywhere is fine I guess\")\r\n        break\r\n    else:\r\n        print(\"It's a piece of cake\")\r\n        i = j\r\n"}, "877": {"problem_id": 4877, "answer": "import math\ndef gcd(a,b):\n    if a<=b:\n        return b\n    else:\n        return a\n\na,b=map(int,input().split())\nc=gcd(a,b)\nprint(c)"}, "878": {"problem_id": 4878, "answer": "R = [int(x) for x in input().split()]\nprint('{0:0b}'.format(R[R.index(R.index(R.hex)]+R[R.index(R.hex)]*2)) or '{0:b}'.format(R[R.index(R.hex)]))"}, "879": {"problem_id": 4879, "answer": "# cook your dish here\ndef gcd(a,b):\n    return a*b\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nif n==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}, "880": {"problem_id": 4880, "answer": "import sys\r\nreadline = sys.stdin.readline\r\n\r\nn, m = map(int, readline().split())\r\ns = list(map(int, readline().split()))\r\nl = [s[i] for i in range(n)]\r\nl.sort(key=lambda x: x[1])\r\nans = []\r\nfor i in range(n):\r\n    ans.append(s[i]*l[i])\r\nprint(*ans, sep='\\n')"}, "881": {"problem_id": 4881, "answer": "def main():\n    n = int(input())\n    if n%2 == 0:\n        print('either')\n    else:\n        print('Odd')\n        print('Either')\n\ndef __starting_point():\n    main()\n__starting_point()"}, "882": {"problem_id": 4882, "answer": "import math\nn=int(input())\nfor i in range(n):\n a=int(math.sqrt(2*i))\n print(a)"}, "883": {"problem_id": 4883, "answer": "import sys\nreadline = sys.stdin.readline\n\nm,n = map(int, readline().split())\npres = [None]*n\npres[0] = [list(readline().strip()) for _ in range(n)]\n\ndef inpl(): return int(input())\ndef inpl_eq(): return [int(x) for x in input().split()]\n\n# m = inpl()\n# n = inpl()\n\n# l = [pres[i][0] for i in range(n)]\n# l[0] = [pres[i][1] for i in range(n)]\n\n# d = [pres[i][0] for i in range(n)]\n# d[0] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d[i] = [pres[i][1] for i in range(n)]\n\n# d[i] = [pres[i][0] for i in range(n)]\n\n# d"}, "884": {"problem_id": 4884, "answer": "# cook your dish here\nn,p=map(int,input().split())\nl=[]\nfor i in range(n):\n l.append(int(input()))\nl.sort()\nc=0\nwhile(len(l)>0):\n c=c+1\n print(c)"}, "885": {"problem_id": 4885, "answer": ""}, "886": {"problem_id": 4886, "answer": "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\n\ndef is_prime(n):\n    if n % 2 == 0:\n        return False\n    elif n == 2:\n        return True\n    else:\n        return False\n\ndef solve(n, k):\n    if is_prime(n):\n        return True\n    else:\n        return False\n\n# print(solve(n, k))\n\n# print(solve(n, k))\n\nn, k = list(map(int, input().split()))\n\ndef is_prime(n):\n    if n % 2 == 0:\n        return False\n    elif n == 2:\n        return True\n    else:\n        return False\n\np = int(input())\nfor i in range(p):\n    n, k = list(map(int, input().split()))\n    if is_prime(n):\n        return solve(n, k)\n\nprint(\"You will become a flying monkey!\", end = \" \")\n"}, "887": {"problem_id": 4887, "answer": "def main():\r\n    a = int(input())\r\n    s = 0\r\n    for i in range(a):\r\n        s += int(input())\r\n    print(s, end=\" \")\r\n\r\ndef __starting_point():\r\n    main()\r\n__starting_point()"}, "888": {"problem_id": 4888, "answer": "for _ in range(int(input())):\n    n, t = map(int, input().split())\n    if t > n:\n        print(t + 1)\n    else:\n        print(n + t)"}, "889": {"problem_id": 4889, "answer": "n = int(input())\r\na = []\r\nfor i in range(n):\r\n    l = list(map(int, input().split()))\r\n    a.append(l)\r\nprint(' '.join(map(str, a)))"}, "890": {"problem_id": 4890, "answer": "# cook your dish here\nimport bisect\nn, m, s, d = list(map(int, input().split()))\ns = 0\nd = 0\nfor i in range(m):\n\ts += int(input())\n\td += 1\n\tif d == 0:\n\t\tprint(0)\n\telse:\n\t\tprint('impossible')\n"}, "891": {"problem_id": 4891, "answer": "from math import sqrt\n\ndef gcd(a, b):\n    return a // b\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef solve(n, m):\n    if n == 0:\n        return 0\n    if m == 0:\n        return 1\n    ans = 0\n    for i in range(n):\n        ans += solve(n - i, m - 1)\n    return ans\n\ndef main():\n    n = int(input())\n    print(solve(n, m))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "892": {"problem_id": 4892, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n a = input().split(\" \")\n b = input().split(\" \")\n c = 0.\n for i in range(len(a)):\n  if a[i] == \"0\":\n   c += 1\n  else:\n   break\n if c > n:\n  print(0.0)\n else:\n  print(c)\n"}, "893": {"problem_id": 4893, "answer": "import sys\ninput = sys.stdin.readline\n\ndef __starting_point():\n    n = int(input())\n    d = []\n    for i in range(n):\n        d.append(int(input()))\n    print(d[-1] + d[-2])\n__starting_point()"}, "894": {"problem_id": 4894, "answer": ""}, "895": {"problem_id": 4895, "answer": "from heapq import *\nn = int(input())\nl = list(map(int, input().split()))\nheap = []\nfor i in range(n):\n    heap.append(list(map(lambda x: x+3, l[i:i+3])))\nheap.sort(key=lambda x: x[0])\nans = 0\nwhile len(l) > 2:\n    ans += heap[0][0]\n    l.remove(heap[0][1])\n    if len(l) == 2:\n        ans += 1\nprint(ans)"}, "896": {"problem_id": 4896, "answer": "def main():\r\n    n = int(input())\r\n    l = list(map(int, input().split()))\r\n    ans = 0\r\n    for i in l:\r\n        ans += i\r\n    print(ans)\r\n\r\nmain()\r\n"}, "897": {"problem_id": 4897, "answer": "n = int(input())\r\nfor i in range(n):\r\n    a,b = map(int,input().split())\r\n    print(100*a + 100*b)"}, "898": {"problem_id": 4898, "answer": "import collections\nn = int(input())\nl, u = list(map(int, input().split()))\ntemp = collections.defaultdict(list)\nfor i in range(n):\n temp.insert(0, i)\n \nk = l + 1\nk1 = list(temp.keys())\nk1.sort()\nans = float('inf')\nfor i in range(k1[0]):\n temp.insert(0, i)\n \nprint(ans)\n"}, "899": {"problem_id": 4899, "answer": "def greeting(s):\r\n    return 'Hello everyone,'+ s.upper() + '!'\r\ns = input()\r\ns = s[0]\r\nprint(greeting(s))"}, "900": {"problem_id": 4900, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nfor _ in range(n):\n\ta = [int(x) for x in input().split()]\n\tb = [int(x) for x in input().split()]\n\td = []\n\tfor i in range(n):\n\t\tif a[i] < b[i]:\n\t\t\td.append(a[i])\n\t\telse:\n\t\t\td.append(b[i])\n\tprint(*d)\n\tsys.stdout.write('\\n'.join(map(str, d)))"}, "901": {"problem_id": 4901, "answer": "from itertools import permutations\ndef __import__('sys').setrecursionlimit(1):\n    n = int(input())\n    m = list(map(int, input().split()))\n    m.sort()\n    print(m[::-1][::-1])\n__file__ = stdin.readline\n__main__ = __import__('sys').setrecursionlimit(1)\n"}, "902": {"problem_id": 4902, "answer": "# cook your dish here\ndef remove(s):\n    n=len(s)\n    if n<=1:\n        return 0\n    else:\n        for i in range(n-1):\n            s=s[:i]\n            if s.isalpha():\n                s=s[i+1:]\n            else:\n                s=s[:i]\n                break\n        return n-1\n\ns=input()\nfor i in range(len(s)):\n    print(remove(s))"}, "903": {"problem_id": 4903, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\nA = [0] + list(readline().rstrip())\nB = [0] + list(readline().rstrip())\n\nfor i in range(n):\n    A.append(A[-1] + B[-1])\n    B.append(B[-1] + A[-1])\n\nif len(A) == 0:\n    print(\"go\")\nelse:\n    print(\"no\")"}, "904": {"problem_id": 4904, "answer": "from bisect import bisect_left as b,bisect_right as b,bisect\nimport sys\ninput = sys.stdin.readline\nn = int(input())\nA = [int(i) for i in input().split()]\nB = [int(i) for i in input().split()]\n\ndef main():\n    score = 0\n    for i in range(n):\n        score += A[i]\n        B[i] = score\n        A[i] = score\n        B[i+1] = score\n        A[i+1] = score\n        A[i+2] = score\n        B[i+2] = score\n        A[i+3] = score\n        B[i+3] = score\n        A[i+4] = score\n        B[i+4] = score\n        A[i+5] = score\n        B[i+5] = score\n        A[i+6] = score\n        B[i+6] = score\n        A[i+7] = score\n        B[i+7] = score\n        A[i+8] = score\n        B[i+8] = score\n        A[i+9] = score\n        B[i+9] = score\n        A[i+a] = score\n        B[i+a] = score\n        A[i+b] = score\n        B[i+b] = score\n        A[i+c] = score\n        B[i+c] = score\n        A[i+d] = score\n        B[i+d] = score\n        A[i+e] = score\n        B[i+e] = score\n        A[i+f] = score\n        B[i+f] = score\n        A[i+g] = score\n        B[i+g] = score\n        A[i+h] = score\n        B[i+h] = score\n        A[i+i] = score\n        B[i+i] = score\n        A[i+j] = score\n        B[i+j] = score\n        B[i+k] = score\n        A[i+k] = score\n        B[i+k] = score\n        A[i+l] = score\n        B[i+l] = score\n        A[i+m] = score\n        B[i+m] = score\n        A[i+n] = score\n        B[i+n] = score\n        A[i+n+1] = score\n        B[i+n+2] = score\n        A[i+n+3] = score\n        B[i+n+4] = score\n        A[i+n+5] = score\n        B[i+n+6] = score\n        A[i+n+7] = score\n        B"}, "905": {"problem_id": 4905, "answer": "# cook your dish here\nn,m = map(int,input().split())\nlis = []\nfor i in range(n):\n a,b,k,g = map(int,input().split())\n lis.append((a,b,k,g))\nlis.sort(key=lambda x:x[0])\nprint(min(lis[n-1][1],lis[n-1][0]))"}, "906": {"problem_id": 4906, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    # d = {}\n    d = {}\n    for _ in range(int(input())):\n        s = input()\n        d[s] = 1\n        n = len(s)\n        if s not in d:\n            d[s] = 0\n        else:\n            d[s] += 1\n        n -= 1\n    print(d.get(s))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "907": {"problem_id": 4907, "answer": "from math import sqrt\ndef gcd(a, b):\n if b == 0:\n  return a\n return gcd(b, a%b)\na = int(input())\nb = 1\nfor i in range(1,a+1):\n b *= sqrt(i)\n print(b)"}, "908": {"problem_id": 4908, "answer": "import math\ndef __starting_point():\n t = int(input().strip())\n while t>0:\n  t -= 1\n  a = int(math.log(t,2))\n  b = int(math.log(t,2))\n  if a==b:\n   print(\"1\")\n  else:\n   print(\"2\")\n__starting_point()"}, "909": {"problem_id": 4909, "answer": "n = int(input())\r\nD = list(map(int, input().split()))\r\nif n % 2 == 0:\r\n  print(\"YES\")\r\nelse:\r\n  print(\"NO\")"}, "910": {"problem_id": 4910, "answer": "n=int(input())\nl=[]\nfor i in range(n):\n l.append(str(input()))\nl.sort()\nans=0\nfor i in range(n-1,-1,-1):\n if l[i]==\"g\" or l[i]==\"m\" or l[i]==\"w\" or l[i]==\"h\":\n  ans+=(l[i]*2)\nprint(ans)"}, "911": {"problem_id": 4911, "answer": "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    arr = list(map(int, readline().split()))\n    l = []\n    for i in arr:\n        l.append(i.title())\n    l.sort()\n    print(*l)\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "912": {"problem_id": 4912, "answer": "def main():\n    h,w,b = list(map(int,input().split()))\n    n = int(input())\n    l = list(map(int,input().split()))\n    if l == []:\n        print(\"YES\")\n    else:\n        print(\"NO\")\ndef __starting_point():\n    main()\n__starting_point()"}, "913": {"problem_id": 4913, "answer": "def main():\n n = int(input())\n for _ in range(n):\n  s = input().split(' ')\n  s = list(s)\n  a = 0\n  b = 0\n  for i in range(4):\n   if(s[i] == 'Y'):\n    a += 1\n   elif(s[i] == 'N'):\n    b += 1\n   else:\n    a += 1\n  if(a > b):\n   print(0.000000)\n  else:\n   print(abs(a - b))\nmain()"}, "914": {"problem_id": 4914, "answer": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\nd = []\nfor i in range(n):\n a.append(str(c[i]))\nd.append(c[i])\nans = []\nfor i in range(n):\n ans.append(max(ans[-1], len(ans)))\nprint('\\n'.join(ans))"}, "915": {"problem_id": 4915, "answer": "from bisect import *\nn = int(input())\nfor i in range(n):\n l = list(map(int, input().split()))\n m = min(l) + 20\n s = 0\n for j in range(n):\n  if l[j] == \"A\":\n   s += m - m * (l[j] - \"B\") + 20\n  elif l[j] == \"C\":\n   s += m - m * (l[j] - \"D\") + 20\n  elif l[j] == \"B\":\n   s += m - m * (l[j] - \"A\") + 20\n  elif l[j] == \"D\":\n   s += m - m * (l[j] - \"H\") + 20\n print(s)"}, "916": {"problem_id": 4916, "answer": "from itertools import accumulate\nfrom heapq import heappush, heappop\nfrom functools import reduce\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom collections import deque, defaultdict\nfrom fractions import gcd\nfrom math import log2\nfrom random import shuffle\nfrom random import randint, product, permutations\nfrom re import compile, callable\nfrom time import perf_counter\nfrom string import ascii_lowercase as lowercase\nfrom queue import Queue\nfrom _cbaa import cache_set\nimport sys\ninput = lambda: sys.stdin.readline().strip()\nsys.setrecursionlimit(10**8)\nMOD = 10**9+7\nINF = 10**18\n\nn, k = map(int, input().split())\nprint(reduce(itemgetter(0), [n, k]))"}, "917": {"problem_id": 4917, "answer": "import math\ndef is_bubit(n):\n    if n==1:\n        return True\n    elif n==2:\n        return False\n    else:\n        return math.gcd(n, math.log(n,2))==1\n\nn=int(input())\npots=[]\nfor i in range(n):\n    if is_bubit(n):\n        pots.append(0)\n        continue\n    if is_bubit(n-1):\n        pots.append(0)\n        continue\n    if is_bubit(n-2):\n        pots.append(0)\n        continue\n    if is_bubit(n-3):\n        pots.append(0)\n        continue\n    if is_bubit(n-4):\n        pots.append(0)\n        continue\n    if is_bubit(n-5):\n        pots.append(0)\n        continue\n    if is_bubit(n-6):\n        pots.append(0)\n        continue\n    if is_bubit(n-7):\n        pots.append(0)\n        continue\n    if is_bubit(n-8):\n        pots.append(0)\n        continue\n    if is_bubit(n-9):\n        pots.append(0)\n        continue\n    if is_bubit(n-10):\n        pots.append(0)\n        continue\n    if is_bubit(n-11):\n        pots.append(0)\n        continue\n    if is_bubit(n-12):\n        pots.append(0)\n        continue\n    if is_bubit(n-13):\n        pots.append(0)\n        continue\n    if is_bubit(n-14):\n        pots.append(0)\n        continue\n    if is_bubit(n-15):\n        pots.append(0)\n        continue\n    if is_bubit(n-16):\n        pots.append(0)\n        continue\n    if is_bubit(n-17):\n        pots.append(0)\n        continue\n    if is_bubit(n-18):\n        pots.append(0)\n        continue\n    if is_bubit(n-19):\n        pots.append(0)\n        continue\n    if is_bubit(n-20):\n        pots.append(0)\n        continue\n    if is_bubit(n-21):\n        pots.append(0)\n        continue\n    if is_bubit(n-22):\n        pots.append(0)\n        continue\n    if is_bubit(n-23):\n        pots.append(0)\n        continue\n    if is_bubit("}, "918": {"problem_id": 4918, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, q = list(map(int, input().split()))\n    l = []\n    for _ in range(n):\n        l.append(int(''.join(map(str, l[-1:]))))\n    l.sort(key=lambda x: x[1])\n    print(len(l))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "919": {"problem_id": 4919, "answer": "import math\nn = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n    s = input()\n    l.append(s.title())\n    l.append(s.symbol())\n\nq = int(input())\nfor i in range(q):\n    s = int(input())\n    print(math.ceil(s / math.pow(2,n)))"}, "920": {"problem_id": 4920, "answer": "from collections import Counter\ndef f(x):\n    return x[0]\n\ndef g(x):\n    return Counter(x)\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        x = list(input())\n        print(f(x))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "921": {"problem_id": 4921, "answer": "from collections import Counter\nfor _ in range(int(input())):\n c = Counter(input())\n print(c.most_common(), 'Krishna will be at university!' )"}, "922": {"problem_id": 4922, "answer": "from collections import defaultdict\ndef f(x):\n    nonlocal ans\n    if x==True:\n        ans.extend(f(x))\n    elif x==False:\n        ans.extend(f(x))\n    else:\n        ans.extend(f(x))\n        for i in range(3,len(ans)):\n            if ans[i]==True:\n                ans[i]=(ans[i]+1)\n                ans[i+1]=(ans[i]+1)\n                ans[i+2]=(ans[i]+1)\n                ans[i+3]=(ans[i]+1)\n                ans[i+4]=(ans[i]+1)\n                ans[i+5]=(ans[i]+1)\n                ans[i+6]=(ans[i]+1)\n                ans[i+7]=(ans[i]+1)\n                ans[i+8]=(ans[i]+1)\n                ans[i+9]=(ans[i]+1)\n                ans[i+10]=(ans[i]+1)\n                ans[i+11]=(ans[i]+1)\n                ans[i+12]=(ans[i]+1)\n                ans[i+13]=(ans[i]+1)\n                ans[i+14]=(ans[i]+1)\n                ans[i+15]=(ans[i]+1)\n                ans[i+16]=(ans[i]+1)\n                ans[i+17]=(ans[i]+1)\n                ans[i+18]=(ans[i]+1)\n                ans[i+19]=(ans[i]+1)\n                ans[i+20]=(ans[i]+1)\n                ans[i+21]=(ans[i]+1)\n                ans[i+22]=(ans[i]+1)\n                ans[i+23]=(ans[i]+1)\n                ans[i+24]=(ans[i]+1)\n                ans[i+25]=(ans[i]+1)\n                ans[i+26]=(ans[i]+1)\n                ans[i+27]=(ans[i]+1)\n                ans[i+28]=(ans[i]+1)\n                ans[i+29]=(ans[i]+1)\n                ans[i+30]"}, "923": {"problem_id": 4923, "answer": "from functools import reduce\nfrom math import gcd\ndef gcd(a, b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return gcd(a, b)\n    else:\n        return a // b\n\nn = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a.sort(reverse=True)\n    print(a[0], \" \")\n"}, "924": {"problem_id": 4924, "answer": "import bisect\nimport math\ndef time(t):\n h,m,s = map(int,input().split())\n if h==0 or m==0 or s==0:\n  return t\n elif h==1 or m==1 or s==1:\n  return int(math.ceil(t/60))\n else:\n  return int(math.ceil(t/60))\n \n \n \n"}, "925": {"problem_id": 4925, "answer": "from math import sqrt\ndef f(x):\n    return x**2 + sqrt(x-1)\ndef l(x):\n    return x**2 + f(x-1)\nn, k = map(int, input().split())\nc = 0\nfor i in range(n-1):\n    x = l(n-1)\n    if x >= k:\n        c += 1\nprint(c)"}, "926": {"problem_id": 4926, "answer": "from math import *\nn, = input(), 2**63-1\nfor _ in range(int(input())):\n    x, i = map(int, input().split())\n    x = x * x\n    print(x)"}, "927": {"problem_id": 4927, "answer": "from math import gcd\ndef gcd(a, b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return gcd(b, a % b)\n    else:\n        return gcd(b, a)\n\nn, p, q = map(int, input().split())\nprint(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(p)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n# print(q)\n\n# print(gcd(n, q))\n\n# print(p)\n"}, "928": {"problem_id": 4928, "answer": "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    d = {}\n    for i in range(n):\n        if i.startswith('A'):\n            d[i] = 1\n        else:\n            d[i] = d.get(i,0)+1\n    print(max(d.values()))\n\n\n# Driver code\n# --------------------------------------------------\ntry:\n    solve()\nexcept Exception as e:\n    print(e)\n    pass\n"}, "929": {"problem_id": 4929, "answer": "# cook your dish here\ns,p=input().strip()\nwhile p!='0' and s=='1':\n    if s==p:\n        print('No')\n    elif s=='0':\n        print('Yes')\n    else:\n        print('No')\n"}, "930": {"problem_id": 4930, "answer": "def main():\n n = int(input())\n for i in range(n):\n  l = input()\n  a = 'a'\n  b = 'b'\n  for i in l:\n   if i in b:\n    a = a.capitalize()\n   else:\n    a = a.lower()\n  print(a)\n\ndef __starting_point():\n main()\n\n__starting_point()"}, "931": {"problem_id": 4931, "answer": "# cook your dish here\ndef solve():\n x,y=map(int,input().split())\n if y==1:\n  print(\"ALL GOOD\")\n else:\n  print(\"IMOSSIBLE\")\n\ndef __starting_point():\n solve()\n__starting_point()"}, "932": {"problem_id": 4932, "answer": "# cook your dish here\nimport math\ndef __starting_point():\n A,B,C,D=map(int,input().split())\n if A==B:\n  print(0)\n elif A==C:\n  print(1)\n else:\n  p,m,g=map(int,input().split())\n  if p==1 or m==1 or g==1:\n   print(0)\n  else:\n   print(1+int(math.sqrt(p)))\n__starting_point()"}, "933": {"problem_id": 4933, "answer": "# cook your dish here\na = int(input())\nfor i in range(a):\n    print(int(input()))"}, "934": {"problem_id": 4934, "answer": "import sys\ndef lca(x,y):\n    return x*y**2\n\n\ndef lca_of_hyp(x,y):\n    return int((x-y)**2+(y-x)**2)\n\n\ndef lca_of_cos(x,y):\n    return int((x+y)**2+(y-x)**2)\n\n\ndef lca_of_sin(x,y):\n    return int((x-y)**2+(y-x)**2)\n\n\ndef lca_of_atan(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_radians(x,y):\n    return (x-y)**0.5\n\n\ndef lca_of_degrees(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_hyp(x,y):\n    return (x-y)**0.5\n\n\ndef lca_of_vac(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_cos(x,y):\n    return int((x-y)**2+(y-x)**2)\n\n\ndef lca_of_sin(x,y):\n    return int((x+y)**2+(y-x)**2)\n\n\ndef lca_of_atan(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_radians(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_degrees(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_hyp(x,y):\n    return (x-y)**0.5\n\n\ndef lca_of_vac(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_cos(x,y):\n    return int((x+y)**2+(y-x)**2)\n\n\ndef lca_of_sin(x,y):\n    return int((x-y)**2+(y-x)**2)\n\n\ndef lca_of_atan(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_radians_of_hyp(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_degrees_of_hyp(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_vac_of_hyp(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_cos(x,y):\n    return int((x+y)**2+(y-x)**2)\n\n\ndef lca_of_sin(x,y):\n    return int((x-y)**2+(y-x)**2)\n\n\ndef lca_of_atan(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_radians_of_radians(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_degrees_of_radians(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_hyp(x,y):\n    return (x-y)**0.5\n\n\ndef lca_of_vac_of_vac(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_cos(x,y):\n    return int((x+y)**2+(y-x)**2)\n\n\ndef lca_of_sin(x,y):\n    return int((x-y)**2+(y-x)**2)\n\n\ndef lca_of_atan(x,y):\n    return (x*y)**0.5\n\n\ndef lca_of_radians_of_radians_of_hyp"}, "935": {"problem_id": 4935, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n    x,y = map(int,input().split())\n    x = x*90 + y\n    y = abs(x-y)\n    print(x,y)"}, "936": {"problem_id": 4936, "answer": "n = int(input())\nfor i in range(n):\n a = list(map(int, input().split()))\n a.sort()\n max_tor = a[0]\n max_so_far = a[-1]\n for i in range(2, n):\n  if max_tor < a[i]:\n   max_tor = max(max_tor, a[i])\n  else:\n   max_tor = max(max_tor, a[i])\n  \n print(max_so_far, max_tor)"}, "937": {"problem_id": 4937, "answer": "# cook your dish here\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\nA = list(map(int, readline().split()))\n\ndef main():\n    A.append(0)\n    A.append(A[0])\n    A.append(A[-1])\n    A.append(0)\n    A.append(A[-1])\n    A.append(A[-2])\n    A.append(A[-3])\n    A.append(A[-4])\n    A.append(A[-5])\n    A.append(A[-6])\n    A.append(A[-7])\n    A.append(A[-8])\n    A.append(A[-9])\n    A.append(A[-10])\n    A.append(A[-11])\n    A.append(A[-12])\n    A.append(A[-13])\n    A.append(A[-14])\n    A.append(A[-15])\n    A.append(A[-16])\n    A.append(A[-17])\n    A.append(A[-18])\n    A.append(A[-19])\n    A.append(A[-20])\n    A.append(A[-21])\n    A.append(A[-22])\n    A.append(A[-23])\n    A.append(A[-24])\n    A.append(A[-25])\n    A.append(A[-26])\n    A.append(A[-27])\n    A.append(A[-28])\n    A.append(A[-29])\n    A.append(A[-30])\n    A.append(A[-31])\n    A.append(A[-32])\n    A.append(A[-33])\n    A.append(A[-34])\n    A.append(A[-35])\n    A.append(A[-36])\n    A.append(A[-37])\n    A.append(A[-38])\n    A.append(A[-39])\n    A.append(A[-40])\n    A.append(A[-41])\n    A.append(A[-42])\n    A.append(A[-43])\n    A.append(A[-44])\n    A.append(A[-45])\n    A.append(A[-45])\n    A.append(A[-46])\n    A.append(A[-47])\n    A.append(A[-48])\n    A.append(A[-49])\n    A.append(A[-50])\n    A.append(A[-51])\n    A.append(A[-52])\n    A.append(A[-53])\n    A.append(A[-54])\n    A.append(A[-55])\n    A.append(A[-56])\n    A.append(A[-57])\n    A.append(A[-58])\n    A.append(A[-59])\n    A.append(A[-60])\n    A.append(A[-61])\n    A.append(A[-62])\n    A.append(A[-63])\n    A.append(A[-64])\n    A.append(A[-66])\n    A.append(A[-67])\n    A.append(A[-68])\n    A.append(A[-69])\n    A.append(A[-70])\n    A.append(A[-71"}, "938": {"problem_id": 4938, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef main():\n    X = int(readline())\n    M = int(readline())\n    if M == 0:\n        print(0)\n    elif M == 1:\n        print(1)\n    else:\n        print(3)\n        \ndef __starting_point():\n    main()\n__starting_point()"}, "939": {"problem_id": 4939, "answer": "# cook your dish here\ndef doit():\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(doit())\n    a.sort(reverse=True)\n    print(a[0])\n    print(*a[::-1])\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n "}, "940": {"problem_id": 4940, "answer": "# cook your dish here\nimport bisect\nfor _ in range(int(input())):\n    n,m=map(int,input().split())\n    l=list(map(int,input().split()))\n    l.sort()\n    print(bisect.bisect_right(l,n-1) - 1)"}, "941": {"problem_id": 4941, "answer": "import bisect\nn=int(input())\ns=input().split()\nn=int(n)\nli=list(map(int,s.split(\" \")))\nli.sort(key=lambda x:x[0])\nli.sort()\nprint(n+1)\n"}, "942": {"problem_id": 4942, "answer": "import sys\r\nimport math\r\nfrom functools import reduce\r\nfrom collections import defaultdict as dd\r\nfrom heapq import merge, heappop, heappush, nsmallest\r\nfrom bisect import bisect_left as bl, bisect_right as br, insort\r\nfrom itertools import combinations as C\r\nfrom collections import Counter as cc\r\nfrom fractions import Fraction\r\nfrom operator import itemgetter\r\nfrom copy import deepcopy\r\nfrom typeclass import Tuple as T\r\nfrom time import perf_counter\r\nfrom random import shuffle\r\nfrom queue import deque, push, pop, push_or_pop, push_or_push, heapify, heapreplace\r\nfrom string import ascii_letters\r\nfrom fractions import gcd\r\nfrom functools import reduce\r\n\r\n# MOD = 1000000007\r\n# MOD = 1000000007\r\ndef main():\r\n    n = int(input())\r\n    for _ in range(n):\r\n        t = list(map(int, input().split()))\r\n        print(reduce(itemgetter(0), t))\r\n\r\n\r\n\r\n\r\ndef __starting_point():\r\n    main()\r\n\n__starting_point()"}, "943": {"problem_id": 4943, "answer": "import math\nt = int(input())\nfor _ in range(t):\n n = int(input())\n d = [int(x) for x in input().split()]\n d.sort()\n n = len(d)\n print(math.gcd(n, d[0]))"}, "944": {"problem_id": 4944, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\nprinters = list(map(int, input().split()))\nprint(n-1-prior(printers))"}, "945": {"problem_id": 4945, "answer": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    a,b=map(int,input().split())\n    m,s=a-b,b-a\n    print(m*s)"}, "946": {"problem_id": 4946, "answer": "n=int(input())\narr=list(map(int,input().split()))\narr.sort()\narr.reverse()\narr.reverse()\nans=0\nfor i in range(n):\n if arr[i]==1:\n  ans+=1\n else:\n  ans+=2\nprint(ans)"}, "947": {"problem_id": 4947, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**6)\nn = int(input())\na = [int(x) for x in input().split()]\nprint(a[0])"}, "948": {"problem_id": 4948, "answer": "import sys\ndef main():\n    n,s = list(map(int,sys.stdin.readline().split()))\n    r,x,y,z = list(map(int,sys.stdin.readline().split()))\n    print(s-r-x-y-z)\n    print(s-x-y-z)\ndef __starting_point():\n    main()\n__starting_point()"}, "949": {"problem_id": 4949, "answer": "import math\ndef find_c(l,r):\n if l==r:\n  return 1\n else:\n  return 0\nn=int(input())\nl=list(map(int,input().split()))\nr=list(map(int,input().split()))\nfor i in range(n):\n l.append(math.ceil(i*10**(n-1)))\nprint('DA' if find_c(l,r)=='NE' else 'DA')"}, "950": {"problem_id": 4950, "answer": "import math\ndef f(x,y):\n if x>y:\n  return math.inf\n else:\n  return f(x,y)\nn=int(input())\nt=int(input())\nfor i in range(t):\n x,y=list(map(int,input().split()))\n print(f(x,y))\n"}, "951": {"problem_id": 4951, "answer": "import bisect\ndef gcd(a, b}, "952": {"problem_id": 4952, "answer": "import math\nt = int(input())\nfor i in range(t):\n a = list(map(int, input().split()))\n if len(a)%2==0:\n  print('Runoff')\n else:\n  print('Joe Rogenegious')"}, "953": {"problem_id": 4953, "answer": "# cook your dish here\nimport sys\ndef main():\n    N = int(input())\n    lis = list(map(int, input().split()))\n    for i in range(N):\n        h = [input() for j in range(16)]\n        for j in range(16):\n            h[j] = h.insert(0, j)\n        lis.append(h)\n    ans = []\n    for i in range(N):\n        ans.append(lis[i])\n    ans.sort(key=lambda x:x[1])\n    ans.reverse()\n    print(*ans)\ndef __starting_point():\n    main()\n__starting_point()"}, "954": {"problem_id": 4954, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n a = list(map(int, input().split()))\n print(min(a, max(a)))"}, "955": {"problem_id": 4955, "answer": "n = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\nD = list(map(int, input().split()))\nE = list(map(int, input().split()))\nF = list(map(int, input().split()))\nG = list(map(int, input().split()))\nH = list(map(int, input().split()))\n\n# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 133, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 148, 149, 149, 149, 150, 151, 151, 150, 150, 151, 150]\n\n# A, B, C, D, E, F, G, G, A, B, C, D, E, F, A, B, C, D, E, F, A, B, C, D, E, F, B, C, D, E, F, B, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D, E, F, C, D"}, "956": {"problem_id": 4956, "answer": "# cook your dish here\ndef cnt(s):\n    if len(s) == 0:\n        return 0\n    elif s[0] == 'e' or s[-1] == 'i' or s[-1] == 'e':\n        return 1\n    else:\n        return -1\n\nn = int(input())\ns = list(map(int, input().split()))\ns.reverse()\nfor i in range(n):\n    s = s[:i] + s[i+1:]\nprint('dae ae ju traeligt va'[cnt(s) - cnt(s[0]) - cnt(s[-1]) - 1 - cnt(s[-1]) - 1 - cnt(s[0]) - 1 - cnt(s[-1]) - 1] + 'feisect ok')"}, "957": {"problem_id": 4957, "answer": "# cook your dish here\nimport sys\ndef main():\n    n, m = map(int, input().split())\n    grid = [['#' for i in range(n)] for j in range(m)]\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == '#':\n                grid[i][j] = '#'\n            elif grid[i][j] == '#':\n                grid[i][j] = '#'\n    print(' '.join(map(str, grid)))\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n    main()\n"}, "958": {"problem_id": 4958, "answer": "from math import sqrt\ndef is_possible(n):\n    if sqrt(n) == 1:\n        return True\n    elif sqrt(n) == 2:\n        return False\n    else:\n        return True\n\nn = int(input())\nboxes = []\nfor i in range(n):\n    boxes.append(list(map(int, input().split())))\n\nans = []\nfor i in range(n):\n    if is_possible(boxes[i]):\n        ans.append(i+1)\n\nprint(ans[0])\nfor i in ans:\n    print(i)"}, "959": {"problem_id": 4959, "answer": "def sodum(s):\n    n = len(s)\n    if n == 0:\n        return 0\n    else:\n        return (n - 1) // 2\n\ndef __starting_point():\n    n = int(input())\n    sodum(list(map(int, input().split())))\n__starting_point()"}, "960": {"problem_id": 4960, "answer": "n = input()\r\nn = n.replace('0b', '')\r\nn = n[:-1]\r\nn = n[:-1]\r\nn = n[:-1]\r\nprint(int(n))"}, "961": {"problem_id": 4961, "answer": "# cook your dish here\nimport sys\ndef main():\n s = int(input())\n for i in range(s):\n  l = list(map(int, sys.stdin.readline().strip().split()))\n  l.sort()\n  print(sum(l[0]*(l[1]-1)//2 for l in l[1:])-sum(l[0]*(l[1]-1)//2 for l in l[1:]))\n  \nmain()\n"}, "962": {"problem_id": 4962, "answer": "import sys\nreadline = sys.stdin.readline\n\nn, l = list(map(int, readline().split()))\nA = [int(x) for x in readline().split()]\nB = [int(x) for x in readline().split()]\n\n# print(B)\n# print(A)\n\nfor i in range(n):\n if B[i] == 1:\n  A[i] = 1\n elif B[i] == 2:\n  A[i] = 2\n else:\n  A[i] = 3\n\nans = []\nfor i in range(n):\n if A[i] == 1:\n  ans.append(i)\n elif B[i] == 1:\n  ans.append(i)\n elif A[i] == 2:\n  ans.append(i)\n elif B[i] == 2:\n  ans.append(i)\n\nprint('Ladikka')\nfor i in ans:\n print(i)\n"}, "963": {"problem_id": 4963, "answer": "from sys import stdin\nfrom itertools import permutations\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left as bl, bisect_right as br, insort_left as tr\nfrom collections import defaultdict as dd, deque\nfrom queue import Queue, push\nfrom functools import reduce, lru_cache as RC\nfrom re import compile, hex, match=r'[^\\w-]*'\nfrom itertools import combinations, combinations_with_replacement as cmp\nfrom operator import itemgetter as pgetter\nfrom time import perf_counter\nfrom fractions import Fraction\nimport numpy as np\nimport sys\ninput = stdin.readline\ndef __starting_point():\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(np.array(l))\n__starting_point()"}, "964": {"problem_id": 4964, "answer": "# cook your dish here\ndef ghahahbeatuitenrearraultadoitoutwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwilhoppetwhoppetwilhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppetwhoppet*\nfrom functools import cmp_with_odd_duplicates\ndef functools():\n return map(int, input().split())\ndef cmp_with_odd_duplicates(x, y):\n return x^y[1] if x<y else y\ndef cmp_with_odd_duplicates(x, y):\n return x*y[1] if x<y else y\nn, h, l = list(map(int, input().split()))\na = list(map(int, input().split()))\nfor i in range(n):\n a.append(int(a[i]))\na.sort(key=lambda x:x[1])\nans = []\nfor i in range(l):\n ans.append(h*int(a[i]))\nans.sort(key=lambda x:x[1])\nans.sort(key=lambda x:x[1])\nprint(ans[-1])\n"}, "965": {"problem_id": 4965, "answer": "import sys\ninput = sys.stdin.readline\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\na = [0]*(n+1)\nfor i in range(n):\n    a[i] += l[i]\n    a[i-1] += l[i-1]\na.sort()\nres = []\nfor i in range(n):\n    if a[i] > a[i-1]:\n        res.append(a[i])\nprint('\\n'.join(res))"}, "966": {"problem_id": 4966, "answer": "import math\nn,p,k=map(int,input().split())\nx=list(map(int,input().split()))\nx.sort()\nd=math.ceil(n/k)\nfor i in range(n):\n d=math.ceil(d/k)\n print(d)"}, "967": {"problem_id": 4967, "answer": "n = int(input())\na = [0] + list(map(int, input().split()))\nfor i in range(n):\n    a.append(a[i] + 'H')\nprint(max(a))"}, "968": {"problem_id": 4968, "answer": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef check(arr, i):\n    if arr[i] == 0:\n        return False\n    else:\n        return True\n\nfor i in range(n):\n    arr = list(map(int, input().split()))\n    if arr[0] == 1:\n        print(check(arr, i))\n    elif arr[0] == 2:\n        print(check(arr, i+1))\n    else:\n        print(check(arr, i+1))\n"}, "969": {"problem_id": 4969, "answer": "# cook your dish here\ndef gcd(a,b):\n    if b==0:\n        return a\n    elif b==1:\n        return a\n    else:\n        return gcd(b,a%b)\n    \nn=int(input())\na=1000000001\nfor i in range(n):\n a=a*10+int(input())\n print(a/gcd(a,n))"}, "970": {"problem_id": 4970, "answer": "n=int(input())\nfor i in range(n):\n a=[]\n for j in range(1,int(n**0.5)+1):\n  a.append(n)\n print(a.count(a[0]))\n"}, "971": {"problem_id": 4971, "answer": "import sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nM = 10**9+7\ndef get_m():\n    return int(readline())\ndef get_n():\n    return list(map(int,readline().split()))\ndef get_l():\n    return list(map(int,readline().split()))\ndef get_r():\n    return list(map(int,readline().split()))\ndef get_u():\n    return list(map(int,readline().split()))\ndef get_v():\n    return list(map(int,readline().split()))\ndef get_w():\n    return list(map(int,readline().split()))\ndef get_x():\n    return list(map(int,readline().split()))\ndef get_y():\n    return list(map(int,readline().split()))\ndef get_z():\n    return list(map(int,readline().split()))\n\n#a.so,b.c,c.d,d.e,e.f,f.g,g.h,h.i,i.j,j.k,k.l,l.m\n\n#a.b,b.c,c.d,d.e,e.f,f.g,g.h,h.i,i.j,j.k,k.l,l.m,m.n\n\n#a.c,b.d,c.d,d.e,e.f,f.g,g.h,h.i,i.j,j.k,k.l,l.m,m.n,n.p,p.p\n\n#a.d,b.c,c.d,d.e,e.f,f.g,g.h,h.i,i.j,j.k,k.l,l.m,m.n,n.p,p.p,p.d\n\n#a.d,b.c,c.d,d.e,e.f,f.g,g.h,h.i,i.j,j.k,k.l,l.m,m.n,n.p,p.p,p.d\n\n#a.d,b.c,c.d,d.e,e.f,f.g,g.h,h.i,i.j,j.k,k.l,l.m,m.n,n.p,p.p,p.d\n\n#a.e,b.c,c.d,d.e,e.f,f.g,g.h,h.i,i.j,j.k,k.l,l.m,m.n,n.p,p.p,p.e\n\n#a.f,b.c,c.d,d.e,e.f,f.g,g.h,h.i,i.j,j.k,k.l,l.m,m.n,n.p,p.p,p.e\n\n#a.g,b.c,c.d,d.e,e.f,f.g,g.h,h.i,i.j,j.k,k.l,l.m,m.n,n.p,p.p,p.e\n\n#a.h,b.c,c.d,d.e,e.f,f.g,g.h,h.i,i.j,j.k,k.l,l.m,m.n,n.p,p.p,p.e\n\n#a.j,b.c,c.d,d.e,e.f,f.g,g.h,h.i,i.j,j.k,k.l,l.m,m.n,n.p,p.p,p.e\n\n#a.k,b.c,c.d,d.e,e.f,f.g,g.h,h.i,i.j,j.k,k.l,l.m,m.n,n.p,p.p,e\n\n#a.l,b.c,c"}, "972": {"problem_id": 4972, "answer": "from math import gcd as g \nimport sys,collections \nsys.setrecursionlimit(10**6) \ndef LI(): return list(map(int, sys.stdin.readline().rstrip().split())) \ndef LI_(): return list(map(int, sys.stdin.readline().rstrip())) \ndef LF(): return list(map(float, sys.stdin.readline().rstrip().split())) \ndef LS(): return sys.stdin.readline().rstrip() \ndef I(): return int(sys.stdin.readline()) \ndef F(): return float(sys.stdin.readline()) \ndef S(): return sys.stdin.readline() \ndef I_(): return int(sys.stdin.readline()) \ndef LS_(): return sys.stdin.readline().rstrip() \ndef LF_(): return list(map(float, sys.stdin.readline().rstrip().split())) \ndef LTOS(): return list(map(int, sys.stdin.readline().rstrip().split())) \ndef LE(a, b): return a*b \ndef LTOS_(): return list(map(int, sys.stdin.readline().rstrip().split())) \nmod = 10**9+7\ninput = lambda: sys.stdin.readline().rstrip()\ndef inp(): return list(map(inp, sys.stdin.readline().rstrip().split()))\ndef lint(): return int(input())\ndef lint_(): return list(map(float, sys.stdin.readline().rstrip().split())) \ndef sint(): return input().rstrip()\ndef sint_(): return input().rstrip()\ndef flush(): \n    if inp() == flush(): return \n    sys.stdout.write(str(inp())) \n    return \ndef main():\n    n = I()\n    a = LI()\n    b = LI()\n    print(len(b))\n    for i in range(n):\n        a.append(a[-1] + 1)\n    print(len(a))\ndef __starting_point():\n    main()\n__starting_point()"}, "973": {"problem_id": 4973, "answer": "import sys\r\ninput = sys.stdin.readline\r\ndef main():\r\n    N = int(input())\r\n    board = [[] for _ in range(N)]\r\n    for i in range(N-1):\r\n        board[i] = list(map(int, input().split()))\r\n    print(min(N-1, board[N-1]))\r\ndef __starting_point():\r\n    main()\r\n\n__starting_point()"}, "974": {"problem_id": 4974, "answer": "import collections\nimport bisect\nimport itertools\nimport sys\nimport math\n#import numpy as np\n#import bisect\n#import heapq\n#import itertools\n#import math\n#from functools import lru_cache\n#from itertools import combinations\n#from copy import deepcopy\n#from collections import deque\n#from typing import List\n#from functools import lru_algorithm\n#from operator import itemgetter\n#from math import gcd\n#from functools import lru_cache\n#from heapq import heappush, heappop\n#from time import perf_counter\n#from time import time\n#from typing import Dict, Set, Rt_OrderedDict, Tuple, Rt_OrderedSet, Rt_unordered\nimport copy\nimport re\nimport heapq\nimport sys\n#from math import gcd, ceil, floor, pow, fabs, factorial, fmod, einfo\n#from typing import List, asrt, Rt_unorderedDict, Rt_unorderedSet, Rt_unorderedAsrt, Rt_unorderedPow, Rt_unorderedFmod, Rt_unorderedEpsr\n#from typing import Dict, Set, Rt_unorderedSet, Rt_unorderedAsrt, Rt_unorderedPow, Rt_unorderedFmod, Rt_unorderedEpsr, Rt_unorderedFpow, Rt_unorderedFmod, Rt_unorderedEpsr, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow, Rt_unorderedFpow) ----> ::r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r---> r--"}, "975": {"problem_id": 4975, "answer": "# cook your dish here\nimport sys\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\n\ndef main():\n    input = lambda : sys.stdin.readline().rstrip()\n    input()\n    n = len(input())\n    \n    # n is the number of characters in the key phrase\n    key_tables = [[] for _ in range(n)]\n    for c in input():\n        table = list(map(str, input().split()))\n        table.insert(0, c)\n        key_tables[0].append(c)\n        key_tables[1].append(c)\n        \n    # print(key_tables)\n    # print(key_tables[0])\n    # print(key_tables[1])\n    \n    # print(key_tables[0][0])\n    # print(key_tables[1][0])\n    # print(key_tables[1][1])\n    \n    # print(key_tables[n-1])\n    # print(key_tables[n-1][0])\n    # print(key_tables[n-1][1])\n    \n    # print(key_tables[n-1][n-1])\n    # print(key_tables[n-1][n-1][0])\n    # print(key_tables[n-1][n-1][1])\n    \n    # print(key_tables[n-1][n-1][n-1][0])\n    # print(key_tables[n-1][n-1][n-1][1])\n    \n    # print(key_tables[n-1][n-1][n-1][n-1][0])\n    # print(key_tables[n-1][n-1][n-1][n-1][1])\n    \n    # print(key_tables[n-1][n-1][n-1][n-1][0])\n    # print(key_tables[n-1][n-1][n-1][n-1][1])\n    \n    # print(key_tables[n-1][n-1][n-1][n-1][0])\n    # print(key_tables[n-1][n-1][n-1][n-1][n-1][1])\n    \n    # print(key_tables[n-1][n-1][n-1][n-1][n-1][0])\n    # print(key_tables[n-1][n-1][n-1][n-1][n-1][1])\n    \n    # print(key_tables[n-1][n-1][n-1][n-1][n-1][0])\n    # print(key_tables[n-1][n-1][n-1][n-1][n-1][1])\n    \n    # print(key_tables[n-1][n-1][n-1][n-1][0])\n    # print(key_tables[n-1][n-1][n-1][n-1][n-1][1])\n    \n    # print(key_tables[n-1][n-1][n-1][n-1][0])\n    # print(key_tables[n-1][n-1][n-1][n-1][n-1][1])\n    \n    # print(key_tables[n-1][n-1][n-1][n-1][0])\n    # print(key_tables[n-1][n-1][n-1][n-1][n"}, "976": {"problem_id": 4976, "answer": "import sys\ndef main():\n    input = lambda: sys.stdin.readline().rstrip()\n    print('The gopher can escape the input')\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "977": {"problem_id": 4977, "answer": "from math import *\na,b,c,d=list(map(int,input().split()))\nn=a+b+c\nif n==0:\n    print(0)\nelse:\n    print(n//(n-1))\n    \n"}, "978": {"problem_id": 4978, "answer": "import sys\r\ndef main():\r\n\tn, m = map(int, input().split())\r\n\tgrid = [[''for i in range(n)] for j in range(m)]\r\n\tgrid[0][0] = 'V'\r\n\tfor i in range(1, n):\r\n\t\tfor j in range(m):\r\n\t\t\tif grid[i-1][j] == '#':\r\n\t\t\t\tgrid[i][j] = '#'\r\n\t\t\telse:\r\n\t\t\t\tgrid[i][j] = '#'\r\n\tprint(grid[n-1][m-1])\r\n\tsys.stdin.flush      \r\n\tsys.stdout.flush      \r\nmain()"}, "979": {"problem_id": 4979, "answer": "def gcd(a, b):\n    if b == 0:\n        return a\n    elif b == 1:\n        return b\n    else:\n        return gcd(b % a, a)\nn = int(input())\nx = []\nfor i in range(n):\n    x.append(gcd(int(i)**0.5, int(i)**0.5))\nx.sort()\nprint(x[0])"}, "980": {"problem_id": 4980, "answer": "import sys\ninput = sys.stdin.readline\n\n# input = sys.stdin.readline\n# 1 = 1\n# 2 = 3\n# 3 = 4\n# 4 = 5\n# 6 = 7\n# 8 = 9\n# 10 = 11\n# 12 = 13\n# 14 = 15\n# 16 = 17\n# 18 = 19\n# 20 = 20\n# 21 = 21\n# 33 = 33\n# 33 = 33\n# 35 = 35\n# 37 = 37\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41\n# 41 = 41"}, "981": {"problem_id": 4981, "answer": "# cook your dish here\nimport math\ndef gcd(a,b):\n    if a==0:\n        return b\n    elif a==b:\n        return b\n    else:\n        return a\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nprint(gcd(a,b))\n"}, "982": {"problem_id": 4982, "answer": ""}, "983": {"problem_id": 4983, "answer": "# cook your dish here\nimport math\ndef main():\r\n    x = int(input())\r\n    while(x>0):\r\n        x = x%10\r\n        print(x)\r\n        x = x//10\r\n        \r\n        \r\nmain()"}, "984": {"problem_id": 4984, "answer": "import sys\nimport math\ndef input():\n\treturn sys.stdin.readline()[:-1]\nt = int(input())\nfor _ in range(t):\n\tr, c = map(int, input().split())\n\tif c == 6:\n\t\tprint(r)\n\telse:\n\t\tprint(r-1)"}, "985": {"problem_id": 4985, "answer": "# cook your dish here\nn=int(input())\ns=input()\nd={}\nfor i in range(n):\n s=input()\n d.setdefault(s[i],0)\n d.setdefault(d[i],0)\nfor i in d:\n print(i)"}, "986": {"problem_id": 4986, "answer": "# cook your dish here\nn = int(input())\nfor i in range(n):\n s = input()\n t = input()\n if s[0] =='' and t[0] =='':\n  print('Z')\n elif s[0] =='' and t[0] =='':\n  print('A')\n elif s[0] =='' and t[0] =='':\n  print('A')\n elif s[0] =='' and t[0] =='':\n  print('A')\n elif s[0] =='' and t[0] =='':\n  print('A')\n elif s[0] =='' and t[0] =='':\n  print('A')\n elif s[0] =='' and t[0] =='':\n  print('A')\n else:\n  print('Z')"}, "987": {"problem_id": 4987, "answer": "import math\ndef C(n):\n return int(math.sqrt(n))\ndef D(n):\n return int(math.ceil(n / 2))\ndef lcm(x, y):\n return math.gcd(x, y)\ndef rcm(x, y):\n return math.gcd(x, y)\ndef SieveOfEratosthenes(n):\n if n <= 1:\n  return 2**n\n elif n <= 2:\n  return 2**n\n else:\n  return 2**n\ndef SieveOfEratosthenes_int(n):\n if n <= 1:\n  return 2**n\n elif n <= 2:\n  return 2**n\n else:\n  return 2**n\ndef SieveOfEratosthenes_int(n):\n if n <= 1:\n  return 2**n\n elif n <= 2:\n  return 2**n\n else:\n  return 2**n\ndef SieveOfEratosthenes(n):\n if n <= 1:\n  return 2**n\n elif n <= 2:\n  return 2**n\n else:\n  return 2**n\n\nSieveOfEratosthenes = [1]\nfor i in range(1, 10 ** 6 + 1):\n S = 1\n C = 1\n D = 1\n for j in range(1, n + 1):\n  D *= C\n  D *= C + D\n  D *= 2 * C + D\n  D *= 2 * 2 * C + 2 * 2 * 2 * C + 2 * 2 * 2 * 2 * 2 * C + 2 * 2 * 2 * 2 * 2 * 2 * C + 2 * 2 * 2 * 2 * 2 * 2 * 2 * C + 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * C + 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * C + 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * C + 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * C + 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * C + 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2"}, "988": {"problem_id": 4988, "answer": "# cook your dish here\nimport math\nt = int(input())\nfor i in range(t):\n n = int(input())\n print(math.factorial(n//10))"}, "989": {"problem_id": 4989, "answer": "from itertools import combinations as c\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = combinations(a, 2)\n    print(sum(c[0] + c[1] for c in c[2:]))\n\nsolve()\n"}, "990": {"problem_id": 4990, "answer": "# cook your dish here\nimport math\ndef __starting_point():\n b, k, g = list(map(int, input().split()))\n g = int(math.log(b, 2))\n days = 0\n for i in range(1, k + 1):\n  days += 1\n print(days)\n__starting_point()"}, "991": {"problem_id": 4991, "answer": "from bisect import bisect_left as bl\nfrom functools import reduce\nfrom heapq import heapify, heappop, heappush\nfrom itertools import permutations as p,combinations as pcomb\nfrom operator import itemgetter\nfrom collections import defaultdict as dd, deque, Counter\nfrom heapq import *\nfrom itertools import permutations as p,combinations as pcomb\nfrom bisect import bisect_left as bl\nfrom bisect import bisect as bl\nfrom numpy import castro_dijklemak\nfrom scipy.spatial.vollow_image import RIAGSession as hv\nfrom scipy.sproutgy_image import grahnt as gy\nfrom scipy.sproutgy import grahnt_prism as gypr\nfrom scipy.polygon import polygon\nfrom statistics import wot\nfrom queue import Queue, Disjoint, GOOG, ITERATE, LOOP, MPU, POINTS, TREEK\nfrom time import perf_counter\nfrom copy import deepcopy\nimport sys\ninput = sys.stdin.readline\n\nN = int(input())\nP = [int(x) for x in input().split()]\n\n# \u5bdd\u79cd\u6570\u7ec4\u5185\u306e\u30ea\u30b9\u30c8\ndef rec(n,x):\n    nonlocal P\n    nonlocal P,P,Pcomb\n    for i in range(1,N+1):\n        if x%i == 0:\n            yield i\n        elif x%i == 0:\n            yield i\n        else:\n            yield x//i\n\ndef main():\n    n = int(input())\n    x = list(map(int,input().split()))\n    dp = defaultdict(list)\n    for i in range(n):\n        x.append(dp[i])\n        dp[i].append(x)\n    \n    # print(dp)\n    # print(x)\n    # print(x)\n    # print(dp[0])\n    # print(dp[1])\n    \n    # print(reduce(list.__add__,dp[1]))\n    # print(reduce(list.__or__,dp[1]))\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp[n-1])\n    # print(dp"}, "992": {"problem_id": 4992, "answer": "# cook your dish here\nn = int(input())\narr = list(map(int, input().split()))\narr.sort()\nif arr[0] == 2:\n    print(1, 2)\n    return\nelse:\n    for i in range(1, n):\n        if arr[i] > arr[i-1]:\n            print(i+1, arr[i])\n            return\n        else:\n            print(i+1, arr[i])\n            break\n        \n    \n"}, "993": {"problem_id": 4993, "answer": "# cook your dish here\ndef __starting_point():\n P,N=map(int,input().split())\n l=[]\n for i in range(P):\n  l.append(list(input()))\n print(l[-1][0])\n\n__starting_point()"}, "994": {"problem_id": 4994, "answer": "import sys\ndef main():\n try:\n  x=int(sys.stdin.readline())\n  y=int(sys.stdin.readline())\n  x+=(y-1)\n  y+=(x-1)\n  return sys.stdin.readline().strip()\nsys.setrecursionlimit(100000)\nmain()"}, "995": {"problem_id": 4995, "answer": "import sys\ndef main():\n    m = int(input())\n    s = list(map(int, sys.stdin.readline().split()))\n    n = int(input())\n    a = [0] * (n + 1)\n    for i in range(n):\n        a[i] = a[i + 1] + 1\n    print(a[-1])\ndef __starting_point():\n    main()\n\n__starting_point()"}, "996": {"problem_id": 4996, "answer": "from sys import stdin\ninput = stdin.readline\ndef shift(s):\n s = str(s)\n n = len(s)\n for i in range(n-1):\n  if s[i] == s[i+1]:\n   break\n  else:\n   s[i] = s[i+1]\n return s\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\ndef shift(s):\n s = str(s)\n n = len(s)\n for i in range(n-1, -1, -1):\n  if s[i] == s[i+1]:\n   break\n  else:\n   s[i] = s[i+1]\n return s\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nprint(C.translate(str.maketrans('MASK')))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nprint(C.translate(str.maketrans('MASK')))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nprint(C.translate(str.maketrans('MASK')))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nprint(C.translate(str.maketrans('MASK')))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nprint(C.translate(str.maketrans('MASK')))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nprint(C.translate(str.maketrans('MASK')))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input().split()))\n\n#______________________________________________________\n\nC, K = list(map(int, input"}, "997": {"problem_id": 4997, "answer": "import sys\ndef main():\n s = sys.stdin.readline().rstrip()\n print(s[:3])\n return int(1+3*(len(s)-2))\n\nmain()"}, "998": {"problem_id": 4998, "answer": "from math import sqrt\ndef rec(a, b, c, d):\n if sqrt(a) == sqrt(b):\n  return 1\n elif sqrt(a) == sqrt(c):\n  return sqrt(b) + sqrt(d)\n else:\n  return -1\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\nd = list(map(int, input().split()))\nprint(rec(a, b, c, d))"}, "999": {"problem_id": 4999, "answer": "# cook your dish here\ndef func(a,b):\n    if a%2==0:\n        return 2*a//2\n    else:\n        return func(a+b,b)\nn=int(input())\na=list(map(int,input().split()))\nprint(func(a,n))\n"}}