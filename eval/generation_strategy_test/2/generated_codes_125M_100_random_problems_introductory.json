{"0": {"problem_id": 0, "answer": "for _ in range(int(input())):\n    n = int(input())\n    words = input().split()\n    if len(words) == 2:\n        print(-1)\n    else:\n        k = 0\n        for i in range(len(words)):\n            if i == '0':\n                k += 1\n            else:\n                break\n        print(k)\n"}, "1": {"problem_id": 1, "answer": "q = int(input())\nfor i in range(q):\n    n, m, k = list(map(int, input().split()))\n    x, y = n, m\n    if x == y:\n        print(-1)\n    elif x == 0:\n        print(k)\n    else:\n        print(k - 1)\n"}, "2": {"problem_id": 2, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = []\n    for i in range(n):\n        d.append(a[i] + b[i])\n    d.sort(key=lambda x:x[1])\n    print(*d)\n\n\ndef __starting_point():\n    for _ in range(n):\n        main()\n\n__starting_point()"}, "3": {"problem_id": 3, "answer": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = 10 ** k - 1\n    for i in range(n - k + 1):\n        d += a[i]\n    print(d)"}, "4": {"problem_id": 4, "answer": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        p = list(map(int, input().split()))\n        print(''.join(p))\n\ndef __starting_point():\n    main()\n__starting_point()"}, "5": {"problem_id": 5, "answer": "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        l.append(a[i])\n        ans += 1\n        if i == 0:\n            break\n        if l[-1] == a[i]:\n            ans += 1\n        else:\n            ans -= 1\n    print(ans)\n"}, "6": {"problem_id": 6, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    x, y = list(map(int, input().split()))\n    # print(x, y)\n    # print(x, y)\n    if x == 1:\n        print(1)\n        continue\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x, y)\n    # print(x"}, "7": {"problem_id": 7, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    voters = list(map(int,input().split()))\n    print(0)\n"}, "8": {"problem_id": 8, "answer": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    s = input()\n    if k == 0:\n        print(0)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 1:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 2:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 3:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 4:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 5:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 6:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 7:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 8:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 9:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 10:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 11:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 12:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 13:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 14:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 15:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 16:\n        print(n)\n        continue\n    s = ''.join(sorted(s, key=lambda x: x[1]))\n    if k == 17:\n        print(n)\n        continue\n    s = ''."}, "9": {"problem_id": 9, "answer": "def solve(s):\n    if len(s) == 0:\n        return 0\n    else:\n        ans = 0\n        for i in range(len(s)):\n            if s[i] == '1':\n                ans += 1\n            else:\n                ans += 1\n        return ans\n\nt = int(input())\nfor _ in range(t):\n    solve(input())"}, "10": {"problem_id": 10, "answer": "from collections import deque\nfor _ in range(int(input())):\n    n = int(input())\n    p = list(map(int,input().split()))\n    ans = [0]*n\n    for i in range(n-1,0,-1):\n        if p[i]==1:\n            ans[i] = 1\n        else:\n            ans[i] = 0\n    print(ans[-1])"}, "11": {"problem_id": 11, "answer": "def main():\n    T = int(input())\n    for _ in range(T):\n        s = input()\n        print(min(s.count('W'), s.count('S')))\n\ndef __starting_point():\n    main()\n\n__starting_point()"}, "12": {"problem_id": 12, "answer": "import bisect\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    if a[0] == -1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"}, "13": {"problem_id": 13, "answer": "for _ in range(int(input())):\n    n,g,b = list(map(int,input().split()))\n    if n==1:\n        print(g)\n    else:\n        print(b)\n"}, "14": {"problem_id": 14, "answer": "import math\nfor _ in range(int(input())):\n    a,b = list(map(int,input().split()))\n    print(\"Yes\") if math.gcd(a,b)==1 else \"No\"\n"}, "15": {"problem_id": 15, "answer": "for _ in range(int(input())):\n    a,b,x,y = map(int,input().split())\n    print(max(a*b,y*(b-x-1)//2))"}, "16": {"problem_id": 16, "answer": "from math import sqrt\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n    s = 0\n    for i in range(n):\n        a[i] = sqrt(a[i])\n        p[i] = a[i]\n        s += a[i]\n    print(s)"}, "17": {"problem_id": 17, "answer": "from sys import stdin,stdout\nfrom collections import deque,defaultdict\nfrom bisect import bisect_left as bl,bisect_right as br\nfrom heapq import heapify,heappop,heappush,heapify\nfrom itertools import combinations,groupby,combinations,groupbyby,accumulate,compress\nfrom operator import itemgetter\nfrom functools import reduce,cmp_to_key\nfrom operator import mul\nfrom collections import deque,OrderedDict,deque_with_stack\nfrom math import factorial,gcd,ceil,floor,sqrt,copysign,fmod,fmod,mod\nfrom fractions import gcd,sqrt,fmod,fmod,fmod,fmod,fmod,fmod,fmod,fmod,fmod,fmod,fmod\nfrom statistics import mean,sqrt,mul,ulmod,ulmod,mulmod,mod\nfrom functools import reduce,cmp_to_key,accumulate,compress,doge\nfrom bisect import bisect_left as bl,bisect_right as br,bisect_right as br,bisect_left as br,bisect_left_right as br,bisect_right as bl,bisect_left as br,bisect_right as br,bisect_left_right as br,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,bisect_right as bl,"}, "18": {"problem_id": 18, "answer": "import math\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(1/math.tan(math.pi/(n)))\n\nmain()\n"}, "19": {"problem_id": 19, "answer": "for _ in range(int(input())):\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    s = set()\n    for i in range(d):\n        if a[i] in s:\n            s.add(a[i])\n        else:\n            break\n        if a[i] not in s:\n            s.add(a[i])\n        else:\n            break\n        if a[i] not in s:\n            s.add(a[i])\n        else:\n            break\n        if a[i] not in s:\n            s.add(a[i])\n        else:\n            break\n        if a[i] not in s:\n            s.add(a[i])\n        else:\n            break\n        if a[i] not in s:\n            s.add(a[i])\n        else:\n            break\n        if a[i] not in s:\n            s.add(a[i])\n        else:\n            break\n        if a[i] not in s:\n            s.add(a[i])\n        else:\n            break\n        if a[i] not in s:\n            s.add(a[i])\n        else:\n            break\n        if a[i] not in s:\n            s.add(a[i])\n        else:\n            break\n        if a[i] not in s:\n            s.add(a[i])\n    print(s.count(d))"}}